# coding: utf-8

"""
    App Center Client

    Microsoft Visual Studio App Center API

    The version of the OpenAPI document: v0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.xcode_branch_configuration_properties import XcodeBranchConfigurationProperties

class TestXcodeBranchConfigurationProperties(unittest.TestCase):
    """XcodeBranchConfigurationProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> XcodeBranchConfigurationProperties:
        """Test XcodeBranchConfigurationProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `XcodeBranchConfigurationProperties`
        """
        model = XcodeBranchConfigurationProperties()
        if include_optional:
            return XcodeBranchConfigurationProperties(
                app_extension_provisioning_profile_files = [
                    openapi_client.models.branch_configurations_get_200_response_all_of_toolsets_xcode_app_extension_provisioning_profile_files_inner.branchConfigurations_get_200_response_allOf_toolsets_xcode_appExtensionProvisioningProfileFiles_inner(
                        file_id = '', 
                        file_name = '', 
                        target_bundle_identifier = '', 
                        upload_id = '', )
                    ],
                archive_configuration = '',
                automatic_signing = True,
                cartfile_path = '',
                certificate_encoded = '',
                certificate_file_id = '',
                certificate_filename = '',
                certificate_password = '',
                certificate_upload_id = '',
                force_legacy_build_system = True,
                podfile_path = '',
                project_or_workspace_path = '',
                provisioning_profile_encoded = '',
                provisioning_profile_file_id = '',
                provisioning_profile_filename = '',
                provisioning_profile_upload_id = '',
                scheme = '',
                target_to_archive = '',
                team_id = '',
                xcode_project_sha = '',
                xcode_version = ''
            )
        else:
            return XcodeBranchConfigurationProperties(
        )
        """

    def testXcodeBranchConfigurationProperties(self):
        """Test XcodeBranchConfigurationProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
