# coding: utf-8

"""
    App Center Client

    Microsoft Visual Studio App Center API

    The version of the OpenAPI document: v0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.stacktrace import Stacktrace

class TestStacktrace(unittest.TestCase):
    """Stacktrace unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Stacktrace:
        """Test Stacktrace
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Stacktrace`
        """
        model = Stacktrace()
        if include_optional:
            return Stacktrace(
                exception = openapi_client.models.exception.Exception(
                    frames = [
                        openapi_client.models.exception_frames_inner.Exception_frames_inner(
                            address = '', 
                            app_code = True, 
                            class_method = True, 
                            class_name = '', 
                            code_formatted = '', 
                            code_raw = '', 
                            file = '', 
                            framework_name = '', 
                            language = 'JavaScript', 
                            line = 56, 
                            method = '', 
                            method_params = '', 
                            relevant = True, )
                        ], 
                    inner_exceptions = [
                        openapi_client.models.exception.Exception(
                            frames = [
                                openapi_client.models.exception_frames_inner.Exception_frames_inner(
                                    address = '', 
                                    app_code = True, 
                                    class_method = True, 
                                    class_name = '', 
                                    code_formatted = '', 
                                    code_raw = '', 
                                    file = '', 
                                    framework_name = '', 
                                    language = 'JavaScript', 
                                    line = 56, 
                                    method = '', 
                                    method_params = '', 
                                    relevant = True, )
                                ], 
                            platform = 'ios', 
                            reason = '', 
                            relevant = True, 
                            type = '', )
                        ], 
                    platform = 'ios', 
                    reason = '', 
                    relevant = True, 
                    type = '', ),
                reason = '',
                threads = [
                    openapi_client.models.thread.Thread(
                        crashed = True, 
                        exception = openapi_client.models.exception.Exception(
                            frames = [
                                openapi_client.models.exception_frames_inner.Exception_frames_inner(
                                    address = '', 
                                    app_code = True, 
                                    class_method = True, 
                                    class_name = '', 
                                    code_formatted = '', 
                                    code_raw = '', 
                                    file = '', 
                                    framework_name = '', 
                                    language = 'JavaScript', 
                                    line = 56, 
                                    method = '', 
                                    method_params = '', 
                                    relevant = True, )
                                ], 
                            inner_exceptions = [
                                openapi_client.models.exception.Exception(
                                    frames = [
                                        openapi_client.models.exception_frames_inner.Exception_frames_inner(
                                            address = '', 
                                            app_code = True, 
                                            class_method = True, 
                                            class_name = '', 
                                            code_formatted = '', 
                                            code_raw = '', 
                                            file = '', 
                                            framework_name = '', 
                                            language = 'JavaScript', 
                                            line = 56, 
                                            method = '', 
                                            method_params = '', 
                                            relevant = True, )
                                        ], 
                                    platform = 'ios', 
                                    reason = '', 
                                    relevant = True, 
                                    type = '', )
                                ], 
                            platform = 'ios', 
                            reason = '', 
                            relevant = True, 
                            type = '', ), 
                        frames = [
                            
                            ], 
                        platform = 'ios', 
                        relevant = True, 
                        title = '', )
                    ],
                title = ''
            )
        else:
            return Stacktrace(
        )
        """

    def testStacktrace(self):
        """Test Stacktrace"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
