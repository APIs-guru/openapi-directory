# coding: utf-8

"""
    App Center Client

    Microsoft Visual Studio App Center API

    The version of the OpenAPI document: v0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.device_configuration import DeviceConfiguration

class TestDeviceConfiguration(unittest.TestCase):
    """DeviceConfiguration unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DeviceConfiguration:
        """Test DeviceConfiguration
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DeviceConfiguration`
        """
        model = DeviceConfiguration()
        if include_optional:
            return DeviceConfiguration(
                id = '',
                image = openapi_client.models.test_get_device_configurations_200_response_inner_image.test_getDeviceConfigurations_200_response_inner_image(
                    full = '', 
                    thumb = '', ),
                market_share = 1.337,
                model = openapi_client.models.test_get_device_configurations_200_response_inner_model.test_getDeviceConfigurations_200_response_inner_model(
                    availability_count = 1.337, 
                    cpu = openapi_client.models.test_get_device_configurations_200_response_inner_model_cpu.test_getDeviceConfigurations_200_response_inner_model_cpu(
                        core = '', 
                        frequency = '', 
                        text = '', ), 
                    device_frame = openapi_client.models.test_get_device_configurations_200_response_inner_model_device_frame.test_getDeviceConfigurations_200_response_inner_model_deviceFrame(
                        full = openapi_client.models.test_get_device_configurations_200_response_inner_model_device_frame_full.test_getDeviceConfigurations_200_response_inner_model_deviceFrame_full(
                            frame_url = '', 
                            height = 1.337, 
                            screen = [
                                1.337
                                ], 
                            width = 1.337, ), 
                        grid = openapi_client.models.test_get_device_configurations_200_response_inner_model_device_frame_full.test_getDeviceConfigurations_200_response_inner_model_deviceFrame_full(
                            frame_url = '', 
                            height = 1.337, 
                            width = 1.337, ), ), 
                    dimensions = openapi_client.models.test_get_device_configurations_200_response_inner_model_dimensions.test_getDeviceConfigurations_200_response_inner_model_dimensions(
                        depth = openapi_client.models.depth.depth(), 
                        height = openapi_client.models.height.height(), 
                        width = openapi_client.models.width.width(), ), 
                    form_factor = '', 
                    manufacturer = '', 
                    memory = openapi_client.models.test_get_device_configurations_200_response_inner_model_memory.test_getDeviceConfigurations_200_response_inner_model_memory(
                        formatted_size = '', ), 
                    model = '', 
                    name = '', 
                    platform = '', 
                    release_date = '', 
                    resolution = openapi_client.models.test_get_device_configurations_200_response_inner_model_resolution.test_getDeviceConfigurations_200_response_inner_model_resolution(
                        height = '', 
                        ppi = '', 
                        width = '', ), 
                    screen_rotation = 1.337, 
                    screen_size = openapi_client.models.test_get_device_configurations_200_response_inner_model_screen_size.test_getDeviceConfigurations_200_response_inner_model_screenSize(
                        cm = '', 
                        in = '', ), ),
                name = '',
                os = '',
                os_name = '',
                tier = 1.337
            )
        else:
            return DeviceConfiguration(
        )
        """

    def testDeviceConfiguration(self):
        """Test DeviceConfiguration"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
