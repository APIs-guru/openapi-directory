# coding: utf-8

"""
    App Center Client

    Microsoft Visual Studio App Center API

    The version of the OpenAPI document: v0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.availability_of_devices_response import AvailabilityOfDevicesResponse

class TestAvailabilityOfDevicesResponse(unittest.TestCase):
    """AvailabilityOfDevicesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AvailabilityOfDevicesResponse:
        """Test AvailabilityOfDevicesResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AvailabilityOfDevicesResponse`
        """
        model = AvailabilityOfDevicesResponse()
        if include_optional:
            return AvailabilityOfDevicesResponse(
                ipads = openapi_client.models.availability_of_devices_response_ipads.AvailabilityOfDevicesResponse_ipads(
                    available = 1.337, 
                    maximum = 1.337, 
                    registered = 1.337, ),
                iphones = openapi_client.models.availability_of_devices_response_ipads.AvailabilityOfDevicesResponse_ipads(
                    available = 1.337, 
                    maximum = 1.337, 
                    registered = 1.337, ),
                ipods = openapi_client.models.availability_of_devices_response_ipads.AvailabilityOfDevicesResponse_ipads(
                    available = 1.337, 
                    maximum = 1.337, 
                    registered = 1.337, ),
                watches = openapi_client.models.availability_of_devices_response_ipads.AvailabilityOfDevicesResponse_ipads(
                    available = 1.337, 
                    maximum = 1.337, 
                    registered = 1.337, )
            )
        else:
            return AvailabilityOfDevicesResponse(
                ipads = openapi_client.models.availability_of_devices_response_ipads.AvailabilityOfDevicesResponse_ipads(
                    available = 1.337, 
                    maximum = 1.337, 
                    registered = 1.337, ),
                iphones = openapi_client.models.availability_of_devices_response_ipads.AvailabilityOfDevicesResponse_ipads(
                    available = 1.337, 
                    maximum = 1.337, 
                    registered = 1.337, ),
                ipods = openapi_client.models.availability_of_devices_response_ipads.AvailabilityOfDevicesResponse_ipads(
                    available = 1.337, 
                    maximum = 1.337, 
                    registered = 1.337, ),
                watches = openapi_client.models.availability_of_devices_response_ipads.AvailabilityOfDevicesResponse_ipads(
                    available = 1.337, 
                    maximum = 1.337, 
                    registered = 1.337, ),
        )
        """

    def testAvailabilityOfDevicesResponse(self):
        """Test AvailabilityOfDevicesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
