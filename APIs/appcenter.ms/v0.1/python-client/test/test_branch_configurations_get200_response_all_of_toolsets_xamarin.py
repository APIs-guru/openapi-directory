# coding: utf-8

"""
    App Center Client

    Microsoft Visual Studio App Center API

    The version of the OpenAPI document: v0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.branch_configurations_get200_response_all_of_toolsets_xamarin import BranchConfigurationsGet200ResponseAllOfToolsetsXamarin

class TestBranchConfigurationsGet200ResponseAllOfToolsetsXamarin(unittest.TestCase):
    """BranchConfigurationsGet200ResponseAllOfToolsetsXamarin unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BranchConfigurationsGet200ResponseAllOfToolsetsXamarin:
        """Test BranchConfigurationsGet200ResponseAllOfToolsetsXamarin
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BranchConfigurationsGet200ResponseAllOfToolsetsXamarin`
        """
        model = BranchConfigurationsGet200ResponseAllOfToolsetsXamarin()
        if include_optional:
            return BranchConfigurationsGet200ResponseAllOfToolsetsXamarin(
                args = '',
                configuration = '',
                is_sim_build = True,
                mono_version = '',
                p12_file = '',
                p12_pwd = '',
                prov_profile = '',
                sdk_bundle = '',
                sln_path = '',
                symlink = ''
            )
        else:
            return BranchConfigurationsGet200ResponseAllOfToolsetsXamarin(
        )
        """

    def testBranchConfigurationsGet200ResponseAllOfToolsetsXamarin(self):
        """Test BranchConfigurationsGet200ResponseAllOfToolsetsXamarin"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
