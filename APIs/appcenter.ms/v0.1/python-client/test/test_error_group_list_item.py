# coding: utf-8

"""
    App Center Client

    Microsoft Visual Studio App Center API

    The version of the OpenAPI document: v0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.error_group_list_item import ErrorGroupListItem

class TestErrorGroupListItem(unittest.TestCase):
    """ErrorGroupListItem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ErrorGroupListItem:
        """Test ErrorGroupListItem
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ErrorGroupListItem`
        """
        model = ErrorGroupListItem()
        if include_optional:
            return ErrorGroupListItem(
                app_build = '',
                app_version = '',
                code_raw = '',
                count = 56,
                device_count = 56,
                error_group_id = '',
                exception_app_code = True,
                exception_class_method = True,
                exception_class_name = '',
                exception_file = '',
                exception_line = '',
                exception_message = '',
                exception_method = '',
                exception_type = '',
                first_occurrence = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                hidden = True,
                last_occurrence = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                reason_frames = [
                    openapi_client.models.errors_group_list_200_response_error_groups_inner_all_of_reason_frames_inner.Errors_GroupList_200_response_errorGroups_inner_allOf_reasonFrames_inner(
                        app_code = True, 
                        class_method = True, 
                        class_name = '', 
                        code_formatted = '', 
                        code_raw = '', 
                        exception_type = '', 
                        file = '', 
                        framework_name = '', 
                        language = 'JavaScript', 
                        line = 56, 
                        method = '', 
                        method_params = '', 
                        os_exception_type = '', )
                    ],
                annotation = '',
                state = 'open'
            )
        else:
            return ErrorGroupListItem(
                app_version = '',
                count = 56,
                device_count = 56,
                error_group_id = '',
                first_occurrence = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                last_occurrence = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                state = 'open',
        )
        """

    def testErrorGroupListItem(self):
        """Test ErrorGroupListItem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
