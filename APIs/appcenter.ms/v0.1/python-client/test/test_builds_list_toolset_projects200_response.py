# coding: utf-8

"""
    App Center Client

    Microsoft Visual Studio App Center API

    The version of the OpenAPI document: v0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.builds_list_toolset_projects200_response import BuildsListToolsetProjects200Response

class TestBuildsListToolsetProjects200Response(unittest.TestCase):
    """BuildsListToolsetProjects200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BuildsListToolsetProjects200Response:
        """Test BuildsListToolsetProjects200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BuildsListToolsetProjects200Response`
        """
        model = BuildsListToolsetProjects200Response()
        if include_optional:
            return BuildsListToolsetProjects200Response(
                android = openapi_client.models.builds_list_toolset_projects_200_response_android.builds_listToolsetProjects_200_response_android(
                    android_modules = [
                        openapi_client.models.builds_list_toolset_projects_200_response_android_android_modules_inner.builds_listToolsetProjects_200_response_android_androidModules_inner(
                            build_configurations = [
                                openapi_client.models.builds_list_toolset_projects_200_response_android_android_modules_inner_build_configurations_inner.builds_listToolsetProjects_200_response_android_androidModules_inner_buildConfigurations_inner(
                                    name = '', 
                                    signing_config = openapi_client.models.builds_list_toolset_projects_200_response_android_android_modules_inner_build_configurations_inner_signing_config.builds_listToolsetProjects_200_response_android_androidModules_inner_buildConfigurations_inner_signingConfig(
                                        has_store_file = True, ), )
                                ], 
                            build_types = [
                                ''
                                ], 
                            build_variants = [
                                ''
                                ], 
                            has_bundle = True, 
                            is_root = True, 
                            name = '', 
                            product_flavors = [
                                ''
                                ], )
                        ], 
                    gradle_wrapper_path = '', ),
                buildscripts = {
                    'key' : openapi_client.models.builds_list_toolset_projects_200_response_buildscripts_value.builds_listToolsetProjects_200_response_buildscripts_value(
                        name = '', 
                        path = '', )
                    },
                commit = '',
                javascript = openapi_client.models.builds_list_toolset_projects_200_response_javascript.builds_listToolsetProjects_200_response_javascript(
                    javascript_solutions = [
                        openapi_client.models.builds_list_toolset_projects_200_response_javascript_javascript_solutions_inner.builds_listToolsetProjects_200_response_javascript_javascriptSolutions_inner(
                            package_json_path = '', 
                            react_native_version = '', )
                        ], 
                    package_json_paths = [
                        ''
                        ], ),
                testcloud = openapi_client.models.builds_list_toolset_projects_200_response_testcloud.builds_listToolsetProjects_200_response_testcloud(
                    projects = [
                        openapi_client.models.builds_list_toolset_projects_200_response_testcloud_projects_inner.builds_listToolsetProjects_200_response_testcloud_projects_inner(
                            framework_properties = openapi_client.models.builds_list_toolset_projects_200_response_testcloud_projects_inner_framework_properties.builds_listToolsetProjects_200_response_testcloud_projects_inner_frameworkProperties(
                                configurations = [
                                    ''
                                    ], ), 
                            framework_type = 'Appium', 
                            path = '', )
                        ], ),
                uwp = openapi_client.models.builds_list_toolset_projects_200_response_uwp.builds_listToolsetProjects_200_response_uwp(
                    uwp_solutions = [
                        openapi_client.models.builds_list_toolset_projects_200_response_uwp_uwp_solutions_inner.builds_listToolsetProjects_200_response_uwp_uwpSolutions_inner(
                            configurations = [
                                ''
                                ], 
                            path = '', )
                        ], ),
                xamarin = openapi_client.models.builds_list_toolset_projects_200_response_xamarin.builds_listToolsetProjects_200_response_xamarin(
                    xamarin_solutions = [
                        openapi_client.models.builds_list_toolset_projects_200_response_xamarin_xamarin_solutions_inner.builds_listToolsetProjects_200_response_xamarin_xamarinSolutions_inner(
                            configurations = [
                                ''
                                ], 
                            default_configuration = '', 
                            path = '', )
                        ], ),
                xcode = openapi_client.models.builds_list_toolset_projects_200_response_xcode.builds_listToolsetProjects_200_response_xcode(
                    xcode_scheme_containers = [
                        openapi_client.models.builds_list_toolset_projects_200_response_xcode_xcode_scheme_containers_inner.builds_listToolsetProjects_200_response_xcode_xcodeSchemeContainers_inner(
                            app_extension_targets = [
                                openapi_client.models.builds_list_toolset_projects_200_response_xcode_xcode_scheme_containers_inner_app_extension_targets_inner.builds_listToolsetProjects_200_response_xcode_xcodeSchemeContainers_inner_appExtensionTargets_inner(
                                    name = '', 
                                    target_bundle_identifier = '', )
                                ], 
                            cartfile_path = '', 
                            path = '', 
                            podfile_path = '', 
                            shared_schemes = [
                                openapi_client.models.builds_list_toolset_projects_200_response_xcode_xcode_scheme_containers_inner_shared_schemes_inner.builds_listToolsetProjects_200_response_xcode_xcodeSchemeContainers_inner_sharedSchemes_inner(
                                    archive_configuration = '', 
                                    archive_project = openapi_client.models.builds_list_toolset_projects_200_response_xcode_xcode_scheme_containers_inner_shared_schemes_inner_archive_project.builds_listToolsetProjects_200_response_xcode_xcodeSchemeContainers_inner_sharedSchemes_inner_archiveProject(
                                        archive_target_id = '', 
                                        project_name = '', 
                                        project_path = '', ), 
                                    has_test_action = True, 
                                    name = '', )
                                ], 
                            workspace_project_paths = '', 
                            xcode_project_sha = '', )
                        ], )
            )
        else:
            return BuildsListToolsetProjects200Response(
        )
        """

    def testBuildsListToolsetProjects200Response(self):
        """Test BuildsListToolsetProjects200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
