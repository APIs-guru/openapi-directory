# coding: utf-8

"""
    App Center Client

    Microsoft Visual Studio App Center API

    The version of the OpenAPI document: v0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.builds_list_branches200_response_inner import BuildsListBranches200ResponseInner

class TestBuildsListBranches200ResponseInner(unittest.TestCase):
    """BuildsListBranches200ResponseInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BuildsListBranches200ResponseInner:
        """Test BuildsListBranches200ResponseInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BuildsListBranches200ResponseInner`
        """
        model = BuildsListBranches200ResponseInner()
        if include_optional:
            return BuildsListBranches200ResponseInner(
                configured = True,
                last_build = openapi_client.models.builds_list_branches_200_response_inner_last_build.builds_listBranches_200_response_inner_lastBuild(
                    build_number = '', 
                    finish_time = '', 
                    id = 0, 
                    last_changed_date = '', 
                    queue_time = '', 
                    result = '', 
                    source_branch = '', 
                    source_version = '', 
                    start_time = '', 
                    status = '', )
            )
        else:
            return BuildsListBranches200ResponseInner(
                configured = True,
        )
        """

    def testBuildsListBranches200ResponseInner(self):
        """Test BuildsListBranches200ResponseInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
