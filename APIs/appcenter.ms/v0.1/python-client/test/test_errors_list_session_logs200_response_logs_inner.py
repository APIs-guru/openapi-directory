# coding: utf-8

"""
    App Center Client

    Microsoft Visual Studio App Center API

    The version of the OpenAPI document: v0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.errors_list_session_logs200_response_logs_inner import ErrorsListSessionLogs200ResponseLogsInner

class TestErrorsListSessionLogs200ResponseLogsInner(unittest.TestCase):
    """ErrorsListSessionLogs200ResponseLogsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ErrorsListSessionLogs200ResponseLogsInner:
        """Test ErrorsListSessionLogs200ResponseLogsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ErrorsListSessionLogs200ResponseLogsInner`
        """
        model = ErrorsListSessionLogs200ResponseLogsInner()
        if include_optional:
            return ErrorsListSessionLogs200ResponseLogsInner(
                device = openapi_client.models.analytics_generic_log_flow_200_response_logs_inner_device.Analytics_GenericLogFlow_200_response_logs_inner_device(
                    app_build = '', 
                    app_namespace = '', 
                    app_version = '', 
                    carrier_code = '', 
                    carrier_country = '', 
                    carrier_name = '', 
                    live_update_deployment_key = '', 
                    live_update_package_hash = '', 
                    live_update_release_label = '', 
                    locale = '', 
                    model = '', 
                    oem_name = '', 
                    os_api_level = 56, 
                    os_build = '', 
                    os_name = '', 
                    os_version = '', 
                    screen_size = '', 
                    sdk_name = '', 
                    sdk_version = '', 
                    time_zone_offset = -840, 
                    wrapper_runtime_version = '', 
                    wrapper_sdk_name = '', 
                    wrapper_sdk_version = '', ),
                event_id = '',
                event_name = '',
                install_id = '',
                message_id = '',
                properties = {
                    'key' : ''
                    },
                session_id = '',
                timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                type = 'event'
            )
        else:
            return ErrorsListSessionLogs200ResponseLogsInner(
                device = openapi_client.models.analytics_generic_log_flow_200_response_logs_inner_device.Analytics_GenericLogFlow_200_response_logs_inner_device(
                    app_build = '', 
                    app_namespace = '', 
                    app_version = '', 
                    carrier_code = '', 
                    carrier_country = '', 
                    carrier_name = '', 
                    live_update_deployment_key = '', 
                    live_update_package_hash = '', 
                    live_update_release_label = '', 
                    locale = '', 
                    model = '', 
                    oem_name = '', 
                    os_api_level = 56, 
                    os_build = '', 
                    os_name = '', 
                    os_version = '', 
                    screen_size = '', 
                    sdk_name = '', 
                    sdk_version = '', 
                    time_zone_offset = -840, 
                    wrapper_runtime_version = '', 
                    wrapper_sdk_name = '', 
                    wrapper_sdk_version = '', ),
                install_id = '',
                timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                type = 'event',
        )
        """

    def testErrorsListSessionLogs200ResponseLogsInner(self):
        """Test ErrorsListSessionLogs200ResponseLogsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
