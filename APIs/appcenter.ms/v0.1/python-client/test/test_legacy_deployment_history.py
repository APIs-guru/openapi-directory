# coding: utf-8

"""
    App Center Client

    Microsoft Visual Studio App Center API

    The version of the OpenAPI document: v0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.legacy_deployment_history import LegacyDeploymentHistory

class TestLegacyDeploymentHistory(unittest.TestCase):
    """LegacyDeploymentHistory unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LegacyDeploymentHistory:
        """Test LegacyDeploymentHistory
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LegacyDeploymentHistory`
        """
        model = LegacyDeploymentHistory()
        if include_optional:
            return LegacyDeploymentHistory(
                all_of = openapi_client.models.legacy_code_push_release_response_package.LegacyCodePushReleaseResponse_package(
                    app_version = '', 
                    blob_url = '', 
                    diff_package_map = openapi_client.models.diff_package_map.diffPackageMap(), 
                    is_disabled = True, 
                    is_mandatory = True, 
                    label = '', 
                    manifest_blob_url = '', 
                    release_method = '', 
                    released_by_user_id = '', 
                    rollout = 56, 
                    size = 56, 
                    upload_time = 56, ),
                description = '',
                original_deployment = '',
                original_label = '',
                package_hash = ''
            )
        else:
            return LegacyDeploymentHistory(
        )
        """

    def testLegacyDeploymentHistory(self):
        """Test LegacyDeploymentHistory"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
