# coding: utf-8

"""
    App Center Client

    Microsoft Visual Studio App Center API

    The version of the OpenAPI document: v0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.analytics_api import AnalyticsApi


class TestAnalyticsApi(unittest.TestCase):
    """AnalyticsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = AnalyticsApi()

    def tearDown(self) -> None:
        pass

    def test_analytics_audience_name_exists(self) -> None:
        """Test case for analytics_audience_name_exists

        """
        pass

    def test_analytics_crash_counts(self) -> None:
        """Test case for analytics_crash_counts

        Available for UWP apps only.
        """
        pass

    def test_analytics_crash_free_device_percentages(self) -> None:
        """Test case for analytics_crash_free_device_percentages

        """
        pass

    def test_analytics_crash_group_counts(self) -> None:
        """Test case for analytics_crash_group_counts

        Available for UWP apps only.
        """
        pass

    def test_analytics_crash_group_model_counts(self) -> None:
        """Test case for analytics_crash_group_model_counts

        Available for UWP apps only.
        """
        pass

    def test_analytics_crash_group_operating_system_counts(self) -> None:
        """Test case for analytics_crash_group_operating_system_counts

        Available for UWP apps only.
        """
        pass

    def test_analytics_crash_group_totals(self) -> None:
        """Test case for analytics_crash_group_totals

        Available for UWP apps only.
        """
        pass

    def test_analytics_crash_groups_totals(self) -> None:
        """Test case for analytics_crash_groups_totals

        """
        pass

    def test_analytics_create_or_update_audience(self) -> None:
        """Test case for analytics_create_or_update_audience

        """
        pass

    def test_analytics_delete_audience(self) -> None:
        """Test case for analytics_delete_audience

        """
        pass

    def test_analytics_device_counts(self) -> None:
        """Test case for analytics_device_counts

        """
        pass

    def test_analytics_distribution_release_counts(self) -> None:
        """Test case for analytics_distribution_release_counts

        """
        pass

    def test_analytics_event_count(self) -> None:
        """Test case for analytics_event_count

        """
        pass

    def test_analytics_event_device_count(self) -> None:
        """Test case for analytics_event_device_count

        """
        pass

    def test_analytics_event_per_device_count(self) -> None:
        """Test case for analytics_event_per_device_count

        """
        pass

    def test_analytics_event_per_session_count(self) -> None:
        """Test case for analytics_event_per_session_count

        """
        pass

    def test_analytics_event_properties(self) -> None:
        """Test case for analytics_event_properties

        """
        pass

    def test_analytics_event_property_counts(self) -> None:
        """Test case for analytics_event_property_counts

        """
        pass

    def test_analytics_events(self) -> None:
        """Test case for analytics_events

        """
        pass

    def test_analytics_events_delete(self) -> None:
        """Test case for analytics_events_delete

        """
        pass

    def test_analytics_events_delete_logs(self) -> None:
        """Test case for analytics_events_delete_logs

        """
        pass

    def test_analytics_generic_log_flow(self) -> None:
        """Test case for analytics_generic_log_flow

        """
        pass

    def test_analytics_get_audience(self) -> None:
        """Test case for analytics_get_audience

        """
        pass

    def test_analytics_language_counts(self) -> None:
        """Test case for analytics_language_counts

        """
        pass

    def test_analytics_list_audiences(self) -> None:
        """Test case for analytics_list_audiences

        """
        pass

    def test_analytics_list_custom_properties(self) -> None:
        """Test case for analytics_list_custom_properties

        """
        pass

    def test_analytics_list_device_properties(self) -> None:
        """Test case for analytics_list_device_properties

        """
        pass

    def test_analytics_list_device_property_values(self) -> None:
        """Test case for analytics_list_device_property_values

        """
        pass

    def test_analytics_log_flow(self) -> None:
        """Test case for analytics_log_flow

        """
        pass

    def test_analytics_model_counts(self) -> None:
        """Test case for analytics_model_counts

        """
        pass

    def test_analytics_operating_system_counts(self) -> None:
        """Test case for analytics_operating_system_counts

        """
        pass

    def test_analytics_per_device_counts(self) -> None:
        """Test case for analytics_per_device_counts

        """
        pass

    def test_analytics_place_counts(self) -> None:
        """Test case for analytics_place_counts

        """
        pass

    def test_analytics_session_counts(self) -> None:
        """Test case for analytics_session_counts

        """
        pass

    def test_analytics_session_durations_distribution(self) -> None:
        """Test case for analytics_session_durations_distribution

        """
        pass

    def test_analytics_test_audience(self) -> None:
        """Test case for analytics_test_audience

        """
        pass

    def test_analytics_versions(self) -> None:
        """Test case for analytics_versions

        """
        pass

    def test_app_block_logs(self) -> None:
        """Test case for app_block_logs

        """
        pass

    def test_crashes_list_session_logs(self) -> None:
        """Test case for crashes_list_session_logs

        """
        pass

    def test_devices_block_logs(self) -> None:
        """Test case for devices_block_logs

        """
        pass


if __name__ == '__main__':
    unittest.main()
