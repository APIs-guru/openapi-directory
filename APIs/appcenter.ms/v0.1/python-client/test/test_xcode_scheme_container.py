# coding: utf-8

"""
    App Center Client

    Microsoft Visual Studio App Center API

    The version of the OpenAPI document: v0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.xcode_scheme_container import XcodeSchemeContainer

class TestXcodeSchemeContainer(unittest.TestCase):
    """XcodeSchemeContainer unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> XcodeSchemeContainer:
        """Test XcodeSchemeContainer
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `XcodeSchemeContainer`
        """
        model = XcodeSchemeContainer()
        if include_optional:
            return XcodeSchemeContainer(
                app_extension_targets = [
                    openapi_client.models.builds_list_toolset_projects_200_response_xcode_xcode_scheme_containers_inner_app_extension_targets_inner.builds_listToolsetProjects_200_response_xcode_xcodeSchemeContainers_inner_appExtensionTargets_inner(
                        name = '', 
                        target_bundle_identifier = '', )
                    ],
                cartfile_path = '',
                path = '',
                podfile_path = '',
                shared_schemes = [
                    openapi_client.models.builds_list_toolset_projects_200_response_xcode_xcode_scheme_containers_inner_shared_schemes_inner.builds_listToolsetProjects_200_response_xcode_xcodeSchemeContainers_inner_sharedSchemes_inner(
                        archive_configuration = '', 
                        archive_project = openapi_client.models.builds_list_toolset_projects_200_response_xcode_xcode_scheme_containers_inner_shared_schemes_inner_archive_project.builds_listToolsetProjects_200_response_xcode_xcodeSchemeContainers_inner_sharedSchemes_inner_archiveProject(
                            archive_target_id = '', 
                            project_name = '', 
                            project_path = '', ), 
                        has_test_action = True, 
                        name = '', )
                    ],
                workspace_project_paths = '',
                xcode_project_sha = ''
            )
        else:
            return XcodeSchemeContainer(
                path = '',
                shared_schemes = [
                    openapi_client.models.builds_list_toolset_projects_200_response_xcode_xcode_scheme_containers_inner_shared_schemes_inner.builds_listToolsetProjects_200_response_xcode_xcodeSchemeContainers_inner_sharedSchemes_inner(
                        archive_configuration = '', 
                        archive_project = openapi_client.models.builds_list_toolset_projects_200_response_xcode_xcode_scheme_containers_inner_shared_schemes_inner_archive_project.builds_listToolsetProjects_200_response_xcode_xcodeSchemeContainers_inner_sharedSchemes_inner_archiveProject(
                            archive_target_id = '', 
                            project_name = '', 
                            project_path = '', ), 
                        has_test_action = True, 
                        name = '', )
                    ],
        )
        """

    def testXcodeSchemeContainer(self):
        """Test XcodeSchemeContainer"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
