# coding: utf-8

"""
    App Center Client

    Microsoft Visual Studio App Center API

    The version of the OpenAPI document: v0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.device_set import DeviceSet

class TestDeviceSet(unittest.TestCase):
    """DeviceSet unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DeviceSet:
        """Test DeviceSet
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DeviceSet`
        """
        model = DeviceSet()
        if include_optional:
            return DeviceSet(
                device_configurations = [
                    openapi_client.models.device_set_device_configurations_inner.Device_Set_deviceConfigurations_inner(
                        id = '', 
                        image = openapi_client.models.device_set_device_configurations_inner_image.Device_Set_deviceConfigurations_inner_image(
                            thumb = '', ), 
                        model = openapi_client.models.device_set_device_configurations_inner_model.Device_Set_deviceConfigurations_inner_model(
                            form_factor = '', 
                            manufacturer = '', 
                            name = '', 
                            release_date = '', ), 
                        os = '', 
                        os_name = '', )
                    ],
                id = '',
                manufacturer_count = 1.337,
                name = '',
                os_version_count = 1.337,
                owner = openapi_client.models.device_set_owner.Device Set Owner(
                    display_name = '', 
                    id = '', 
                    name = '', 
                    type = '', ),
                slug = ''
            )
        else:
            return DeviceSet(
                device_configurations = [
                    openapi_client.models.device_set_device_configurations_inner.Device_Set_deviceConfigurations_inner(
                        id = '', 
                        image = openapi_client.models.device_set_device_configurations_inner_image.Device_Set_deviceConfigurations_inner_image(
                            thumb = '', ), 
                        model = openapi_client.models.device_set_device_configurations_inner_model.Device_Set_deviceConfigurations_inner_model(
                            form_factor = '', 
                            manufacturer = '', 
                            name = '', 
                            release_date = '', ), 
                        os = '', 
                        os_name = '', )
                    ],
                id = '',
                name = '',
                owner = openapi_client.models.device_set_owner.Device Set Owner(
                    display_name = '', 
                    id = '', 
                    name = '', 
                    type = '', ),
        )
        """

    def testDeviceSet(self):
        """Test DeviceSet"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
