# coding: utf-8

"""
    App Center Client

    Microsoft Visual Studio App Center API

    The version of the OpenAPI document: v0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictBool, StrictStr, field_validator
from typing import Optional
from typing_extensions import Annotated
from openapi_client.models.billing_aggregated_information_get_all200_response import BillingAggregatedInformationGetAll200Response
from openapi_client.models.billing_aggregated_information_get_by_app200_response import BillingAggregatedInformationGetByApp200Response

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class BillingApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def billing_aggregated_information_get_all(
        self,
        service: Annotated[Optional[StrictStr], Field(description="Type of service that should be included in the Billing Information")] = None,
        period: Annotated[Optional[StrictStr], Field(description="Type of period that should be included in the Billing Information")] = None,
        show_original_plans: Annotated[Optional[StrictBool], Field(description="Controls whether the API should show the original plan when Azure Subscription is not enabled")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> BillingAggregatedInformationGetAll200Response:
        """billing_aggregated_information_get_all

        Aggregated Billing Information for the requesting user and the organizations in which the user is an admin.

        :param service: Type of service that should be included in the Billing Information
        :type service: str
        :param period: Type of period that should be included in the Billing Information
        :type period: str
        :param show_original_plans: Controls whether the API should show the original plan when Azure Subscription is not enabled
        :type show_original_plans: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._billing_aggregated_information_get_all_serialize(
            service=service,
            period=period,
            show_original_plans=show_original_plans,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "BillingAggregatedInformationGetAll200Response",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def billing_aggregated_information_get_all_with_http_info(
        self,
        service: Annotated[Optional[StrictStr], Field(description="Type of service that should be included in the Billing Information")] = None,
        period: Annotated[Optional[StrictStr], Field(description="Type of period that should be included in the Billing Information")] = None,
        show_original_plans: Annotated[Optional[StrictBool], Field(description="Controls whether the API should show the original plan when Azure Subscription is not enabled")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[BillingAggregatedInformationGetAll200Response]:
        """billing_aggregated_information_get_all

        Aggregated Billing Information for the requesting user and the organizations in which the user is an admin.

        :param service: Type of service that should be included in the Billing Information
        :type service: str
        :param period: Type of period that should be included in the Billing Information
        :type period: str
        :param show_original_plans: Controls whether the API should show the original plan when Azure Subscription is not enabled
        :type show_original_plans: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._billing_aggregated_information_get_all_serialize(
            service=service,
            period=period,
            show_original_plans=show_original_plans,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "BillingAggregatedInformationGetAll200Response",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def billing_aggregated_information_get_all_without_preload_content(
        self,
        service: Annotated[Optional[StrictStr], Field(description="Type of service that should be included in the Billing Information")] = None,
        period: Annotated[Optional[StrictStr], Field(description="Type of period that should be included in the Billing Information")] = None,
        show_original_plans: Annotated[Optional[StrictBool], Field(description="Controls whether the API should show the original plan when Azure Subscription is not enabled")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """billing_aggregated_information_get_all

        Aggregated Billing Information for the requesting user and the organizations in which the user is an admin.

        :param service: Type of service that should be included in the Billing Information
        :type service: str
        :param period: Type of period that should be included in the Billing Information
        :type period: str
        :param show_original_plans: Controls whether the API should show the original plan when Azure Subscription is not enabled
        :type show_original_plans: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._billing_aggregated_information_get_all_serialize(
            service=service,
            period=period,
            show_original_plans=show_original_plans,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "BillingAggregatedInformationGetAll200Response",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _billing_aggregated_information_get_all_serialize(
        self,
        service,
        period,
        show_original_plans,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if service is not None:
            
            _query_params.append(('service', service))
            
        if period is not None:
            
            _query_params.append(('period', period))
            
        if show_original_plans is not None:
            
            _query_params.append(('showOriginalPlans', show_original_plans))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'APIToken'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/v0.1/billing/allAccountsAggregated',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def billing_aggregated_information_get_by_app(
        self,
        owner_name: Annotated[StrictStr, Field(description="The name of the owner")],
        app_name: Annotated[StrictStr, Field(description="The name of the application")],
        service: Annotated[Optional[StrictStr], Field(description="Type of service that should be included in the Billing Information")] = None,
        period: Annotated[Optional[StrictStr], Field(description="Type of period that should be included in the Billing Information")] = None,
        show_original_plans: Annotated[Optional[StrictBool], Field(description="Controls whether the API should show the original plan when Azure Subscription is not enabled")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> BillingAggregatedInformationGetByApp200Response:
        """billing_aggregated_information_get_by_app

        Aggregated Billing Information for owner of a given app.

        :param owner_name: The name of the owner (required)
        :type owner_name: str
        :param app_name: The name of the application (required)
        :type app_name: str
        :param service: Type of service that should be included in the Billing Information
        :type service: str
        :param period: Type of period that should be included in the Billing Information
        :type period: str
        :param show_original_plans: Controls whether the API should show the original plan when Azure Subscription is not enabled
        :type show_original_plans: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._billing_aggregated_information_get_by_app_serialize(
            owner_name=owner_name,
            app_name=app_name,
            service=service,
            period=period,
            show_original_plans=show_original_plans,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "BillingAggregatedInformationGetByApp200Response",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def billing_aggregated_information_get_by_app_with_http_info(
        self,
        owner_name: Annotated[StrictStr, Field(description="The name of the owner")],
        app_name: Annotated[StrictStr, Field(description="The name of the application")],
        service: Annotated[Optional[StrictStr], Field(description="Type of service that should be included in the Billing Information")] = None,
        period: Annotated[Optional[StrictStr], Field(description="Type of period that should be included in the Billing Information")] = None,
        show_original_plans: Annotated[Optional[StrictBool], Field(description="Controls whether the API should show the original plan when Azure Subscription is not enabled")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[BillingAggregatedInformationGetByApp200Response]:
        """billing_aggregated_information_get_by_app

        Aggregated Billing Information for owner of a given app.

        :param owner_name: The name of the owner (required)
        :type owner_name: str
        :param app_name: The name of the application (required)
        :type app_name: str
        :param service: Type of service that should be included in the Billing Information
        :type service: str
        :param period: Type of period that should be included in the Billing Information
        :type period: str
        :param show_original_plans: Controls whether the API should show the original plan when Azure Subscription is not enabled
        :type show_original_plans: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._billing_aggregated_information_get_by_app_serialize(
            owner_name=owner_name,
            app_name=app_name,
            service=service,
            period=period,
            show_original_plans=show_original_plans,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "BillingAggregatedInformationGetByApp200Response",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def billing_aggregated_information_get_by_app_without_preload_content(
        self,
        owner_name: Annotated[StrictStr, Field(description="The name of the owner")],
        app_name: Annotated[StrictStr, Field(description="The name of the application")],
        service: Annotated[Optional[StrictStr], Field(description="Type of service that should be included in the Billing Information")] = None,
        period: Annotated[Optional[StrictStr], Field(description="Type of period that should be included in the Billing Information")] = None,
        show_original_plans: Annotated[Optional[StrictBool], Field(description="Controls whether the API should show the original plan when Azure Subscription is not enabled")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """billing_aggregated_information_get_by_app

        Aggregated Billing Information for owner of a given app.

        :param owner_name: The name of the owner (required)
        :type owner_name: str
        :param app_name: The name of the application (required)
        :type app_name: str
        :param service: Type of service that should be included in the Billing Information
        :type service: str
        :param period: Type of period that should be included in the Billing Information
        :type period: str
        :param show_original_plans: Controls whether the API should show the original plan when Azure Subscription is not enabled
        :type show_original_plans: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._billing_aggregated_information_get_by_app_serialize(
            owner_name=owner_name,
            app_name=app_name,
            service=service,
            period=period,
            show_original_plans=show_original_plans,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "BillingAggregatedInformationGetByApp200Response",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _billing_aggregated_information_get_by_app_serialize(
        self,
        owner_name,
        app_name,
        service,
        period,
        show_original_plans,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if owner_name is not None:
            _path_params['owner_name'] = owner_name
        if app_name is not None:
            _path_params['app_name'] = app_name
        # process the query parameters
        if service is not None:
            
            _query_params.append(('service', service))
            
        if period is not None:
            
            _query_params.append(('period', period))
            
        if show_original_plans is not None:
            
            _query_params.append(('showOriginalPlans', show_original_plans))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'APIToken'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/v0.1/apps/{owner_name}/{app_name}/billing/aggregated',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def billing_aggregated_information_get_for_org(
        self,
        org_name: Annotated[StrictStr, Field(description="The name of the Organization")],
        service: Annotated[Optional[StrictStr], Field(description="Type of service that should be included in the Billing Information")] = None,
        period: Annotated[Optional[StrictStr], Field(description="Type of period that should be included in the Billing Information")] = None,
        show_original_plans: Annotated[Optional[StrictBool], Field(description="Controls whether the API should show the original plan when Azure Subscription is not enabled")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> BillingAggregatedInformationGetByApp200Response:
        """billing_aggregated_information_get_for_org

        Aggregated Billing Information for a given Organization.

        :param org_name: The name of the Organization (required)
        :type org_name: str
        :param service: Type of service that should be included in the Billing Information
        :type service: str
        :param period: Type of period that should be included in the Billing Information
        :type period: str
        :param show_original_plans: Controls whether the API should show the original plan when Azure Subscription is not enabled
        :type show_original_plans: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._billing_aggregated_information_get_for_org_serialize(
            org_name=org_name,
            service=service,
            period=period,
            show_original_plans=show_original_plans,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "BillingAggregatedInformationGetByApp200Response",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def billing_aggregated_information_get_for_org_with_http_info(
        self,
        org_name: Annotated[StrictStr, Field(description="The name of the Organization")],
        service: Annotated[Optional[StrictStr], Field(description="Type of service that should be included in the Billing Information")] = None,
        period: Annotated[Optional[StrictStr], Field(description="Type of period that should be included in the Billing Information")] = None,
        show_original_plans: Annotated[Optional[StrictBool], Field(description="Controls whether the API should show the original plan when Azure Subscription is not enabled")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[BillingAggregatedInformationGetByApp200Response]:
        """billing_aggregated_information_get_for_org

        Aggregated Billing Information for a given Organization.

        :param org_name: The name of the Organization (required)
        :type org_name: str
        :param service: Type of service that should be included in the Billing Information
        :type service: str
        :param period: Type of period that should be included in the Billing Information
        :type period: str
        :param show_original_plans: Controls whether the API should show the original plan when Azure Subscription is not enabled
        :type show_original_plans: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._billing_aggregated_information_get_for_org_serialize(
            org_name=org_name,
            service=service,
            period=period,
            show_original_plans=show_original_plans,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "BillingAggregatedInformationGetByApp200Response",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def billing_aggregated_information_get_for_org_without_preload_content(
        self,
        org_name: Annotated[StrictStr, Field(description="The name of the Organization")],
        service: Annotated[Optional[StrictStr], Field(description="Type of service that should be included in the Billing Information")] = None,
        period: Annotated[Optional[StrictStr], Field(description="Type of period that should be included in the Billing Information")] = None,
        show_original_plans: Annotated[Optional[StrictBool], Field(description="Controls whether the API should show the original plan when Azure Subscription is not enabled")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """billing_aggregated_information_get_for_org

        Aggregated Billing Information for a given Organization.

        :param org_name: The name of the Organization (required)
        :type org_name: str
        :param service: Type of service that should be included in the Billing Information
        :type service: str
        :param period: Type of period that should be included in the Billing Information
        :type period: str
        :param show_original_plans: Controls whether the API should show the original plan when Azure Subscription is not enabled
        :type show_original_plans: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._billing_aggregated_information_get_for_org_serialize(
            org_name=org_name,
            service=service,
            period=period,
            show_original_plans=show_original_plans,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "BillingAggregatedInformationGetByApp200Response",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _billing_aggregated_information_get_for_org_serialize(
        self,
        org_name,
        service,
        period,
        show_original_plans,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if org_name is not None:
            _path_params['orgName'] = org_name
        # process the query parameters
        if service is not None:
            
            _query_params.append(('service', service))
            
        if period is not None:
            
            _query_params.append(('period', period))
            
        if show_original_plans is not None:
            
            _query_params.append(('showOriginalPlans', show_original_plans))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'APIToken'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/v0.1/orgs/{orgName}/billing/aggregated',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


