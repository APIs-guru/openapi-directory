# coding: utf-8

"""
    Moon API

    # Moon-API.com Postman Collection  Welcome to the Moon Phase API Postman Collection! This collection contains a set of pre-configured API requests to interact with the Moon Phase API endpoints provided by [moon-api.com](https://moon-api.com). Explore the enchanting world of the moon and its ever-changing phases with ease using this collection.  ## Getting Started  To start using this Postman collection, follow these steps:  1. [Download and install Postman](https://www.postman.com/downloads/) if you haven't already. 2. Import the Moon API Postman Collection into your Postman app. 3. Set your RapidAPI key in the collection's environment variables. 4. Begin making requests to explore the moon phase data and retrieve lunar information.       ## Collection Structure  The Moon-API.com Postman Collection consists of the following requests:  - **Basic Moon Phase**: Retrieve the main moon phase data. - **Advanced Moon Phase**: Get detailed moon phase data based on a specific timezone and coordinates. - **Plain Text Moon Phase**: Get a plain text description of the current moon phase. - **Emoji Moon Phase**: Get the relevant emoji of the current moon phase. - **Lunar Calender**: Get the current year's moon phases in a markdown calender.       ## Environment Variables  The collection uses environment variables to store your RapidAPI key. To use this collection effectively, ensure you set the `X-Rapidapi-Key` variable in the collection's environment with your actual RapidAPI key.  ## How to Use  1. Select the desired request from the Moon API collection. 2. Click on the request to open it. 3. Send the request and view the response to retrieve the moon phase data.       ## Documentation  For more information on the Moon Phase API endpoints and their response formats, refer to the [official Moon API documentation](https://rapidapi.com/MoonAPIcom/api/moon-phase/details). Visit [moon-api.com](https://moon-api.com) to learn more about the Moon Phase API and the services provided.  Happy moon exploration with the Moon Phase API Postman Collection provided by [moon-api.com](https://moon-api.com)!

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_advanced_moon_phase_data200_response import GetAdvancedMoonPhaseData200Response

class TestGetAdvancedMoonPhaseData200Response(unittest.TestCase):
    """GetAdvancedMoonPhaseData200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetAdvancedMoonPhaseData200Response:
        """Test GetAdvancedMoonPhaseData200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetAdvancedMoonPhaseData200Response`
        """
        model = GetAdvancedMoonPhaseData200Response()
        if include_optional:
            return GetAdvancedMoonPhaseData200Response(
                datestamp = 'Thu, 01 Jun 2023 11:45:25 +0200',
                moon = openapi_client.models.get_advanced_moon_phase_data_200_response_moon.getAdvancedMoonPhaseData_200_response_moon(
                    age_days = 12, 
                    emoji = 'ðŸŒ”', 
                    illumination = '88%', 
                    lunar_cycle = '38.97%', 
                    moon_altitude = -50.256859109962605, 
                    moon_azimuth = 339.31434124218265, 
                    moon_distance = 382878.864197106, 
                    moon_parallactic_angle = -2.0214503141006763, 
                    moonrise = '1088', 
                    moonrise_timestamp = 1685635680, 
                    moonset = '03:18', 
                    moonset_timestamp = 1685582280, 
                    phase = '0.38966480971092', 
                    phase_name = 'Waxing Gibbous', 
                    stage = 'waxing', 
                    zodiac_sign = 'Gemini', ),
                moon_phases = openapi_client.models.get_advanced_moon_phase_data_200_response_moon_phases.getAdvancedMoonPhaseData_200_response_moon_phases(
                    first_quarter = openapi_client.models.get_advanced_moon_phase_data_200_response_moon_phases_first_quarter.getAdvancedMoonPhaseData_200_response_moon_phases_first_quarter(
                        current = openapi_client.models.get_advanced_moon_phase_data_200_response_moon_phases_first_quarter_current.getAdvancedMoonPhaseData_200_response_moon_phases_first_quarter_current(
                            datestamp = 'Fri, 28 Apr 2023 18:34:00 +0200', 
                            days_ago = 33, 
                            timestamp = 1682699640, ), 
                        next = openapi_client.models.get_advanced_moon_phase_data_200_response_moon_phases_first_quarter_next.getAdvancedMoonPhaseData_200_response_moon_phases_first_quarter_next(
                            datestamp = 'Sun, 18 Jun 2023 04:41:00 +0200', 
                            days_ahead = 16, 
                            timestamp = 1687056060, ), ), 
                    full_moon = openapi_client.models.get_advanced_moon_phase_data_200_response_moon_phases_full_moon.getAdvancedMoonPhaseData_200_response_moon_phases_full_moon(), 
                    last_quarter = openapi_client.models.get_advanced_moon_phase_data_200_response_moon_phases_last_quarter.getAdvancedMoonPhaseData_200_response_moon_phases_last_quarter(), 
                    new_moon = openapi_client.models.get_advanced_moon_phase_data_200_response_moon_phases_new_moon.getAdvancedMoonPhaseData_200_response_moon_phases_new_moon(), ),
                sun = openapi_client.models.get_advanced_moon_phase_data_200_response_sun.getAdvancedMoonPhaseData_200_response_sun(
                    day_length = '978', 
                    solar_noon = '777', 
                    sun_altitude = 41.698139184701695, 
                    sun_azimuth = 108.19562393041076, 
                    sun_distance = 151643787.44305298, 
                    sunrise = 1685584270, 
                    sunrise_timestamp = '01:51', 
                    sunset = 1685648688, 
                    sunset_timestamp = '1184', ),
                timestamp = 1685612725
            )
        else:
            return GetAdvancedMoonPhaseData200Response(
        )
        """

    def testGetAdvancedMoonPhaseData200Response(self):
        """Test GetAdvancedMoonPhaseData200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
