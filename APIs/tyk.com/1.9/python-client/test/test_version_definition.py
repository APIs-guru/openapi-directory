# coding: utf-8

"""
    Gateway REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.9
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.version_definition import VersionDefinition

class TestVersionDefinition(unittest.TestCase):
    """VersionDefinition unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VersionDefinition:
        """Test VersionDefinition
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VersionDefinition`
        """
        model = VersionDefinition()
        if include_optional:
            return VersionDefinition(
                expires = '',
                extended_paths = openapi_client.models.version_definition_extended_paths.VersionDefinition_extended_paths(
                    black_list = [
                        openapi_client.models.end_point_meta.EndPointMeta(
                            method_actions = {
                                'key' : openapi_client.models.endpoint_method_meta.EndpointMethodMeta(
                                    action = '', 
                                    code = 1.337, 
                                    data = '', 
                                    headers = openapi_client.models.headers.headers(), )
                                }, 
                            path = '', )
                        ], 
                    cache = [
                        ''
                        ], 
                    circuit_breakers = [
                        openapi_client.models.version_definition_extended_paths_circuit_breakers_inner.VersionDefinition_extended_paths_circuit_breakers_inner(
                            method = '', 
                            path = '', 
                            return_to_service_after = 1.337, 
                            samples = 1.337, 
                            threshold_percent = 1.337, )
                        ], 
                    hard_timeouts = [
                        openapi_client.models.version_definition_extended_paths_hard_timeouts_inner.VersionDefinition_extended_paths_hard_timeouts_inner(
                            method = '', 
                            path = '', 
                            timeout = 1.337, )
                        ], 
                    ignored = [
                        openapi_client.models.end_point_meta.EndPointMeta(
                            path = '', )
                        ], 
                    size_limits = [
                        openapi_client.models.version_definition_extended_paths_size_limits_inner.VersionDefinition_extended_paths_size_limits_inner(
                            method = '', 
                            path = '', 
                            size_limit = 1.337, )
                        ], 
                    transform = [
                        openapi_client.models.template_meta.TemplateMeta(
                            method = '', 
                            path = '', 
                            template_data = openapi_client.models.template_meta_template_data.TemplateMeta_template_data(
                                enable_session = True, 
                                input_type = '', 
                                template_mode = '', ), )
                        ], 
                    transform_headers = [
                        openapi_client.models.header_injection_meta.HeaderInjectionMeta(
                            add_headers = openapi_client.models.add_headers.add_headers(), 
                            delete_headers = [
                                ''
                                ], 
                            method = '', 
                            path = '', )
                        ], 
                    transform_response = [
                        openapi_client.models.template_meta.TemplateMeta(
                            method = '', 
                            path = '', )
                        ], 
                    transform_response_headers = [
                        openapi_client.models.header_injection_meta.HeaderInjectionMeta(
                            add_headers = openapi_client.models.add_headers.add_headers(), 
                            method = '', 
                            path = '', )
                        ], 
                    url_rewrites = [
                        openapi_client.models.version_definition_extended_paths_url_rewrites_inner.VersionDefinition_extended_paths_url_rewrites_inner(
                            match_pattern = '', 
                            method = '', 
                            path = '', 
                            rewrite_to = '', )
                        ], 
                    virtual = [
                        openapi_client.models.version_definition_extended_paths_virtual_inner.VersionDefinition_extended_paths_virtual_inner(
                            function_source_type = '', 
                            function_source_uri = '', 
                            method = '', 
                            path = '', 
                            response_function_name = '', 
                            use_session = True, )
                        ], 
                    white_list = [
                        
                        ], ),
                global_headers = openapi_client.models.global_headers.global_headers(),
                global_headers_remove = [
                    ''
                    ],
                global_size_limit = 1.337,
                name = '',
                override_target = '',
                use_extended_paths = True
            )
        else:
            return VersionDefinition(
        )
        """

    def testVersionDefinition(self):
        """Test VersionDefinition"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
