# coding: utf-8

"""
    Gateway REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.9
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.api_definition import APIDefinition

class TestAPIDefinition(unittest.TestCase):
    """APIDefinition unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> APIDefinition:
        """Test APIDefinition
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `APIDefinition`
        """
        model = APIDefinition()
        if include_optional:
            return APIDefinition(
                api_id = '',
                auth = openapi_client.models.api_definition_auth.APIDefinition_auth(
                    auth_header_name = '', 
                    use_cookie = True, 
                    use_param = True, ),
                definition = openapi_client.models.api_definition_definition.APIDefinition_definition(
                    key = '', 
                    location = '', ),
                enable_jwt = True,
                enable_signature_checking = True,
                hmac_allowed_clock_skew = 1.337,
                id = '',
                jwt_identity_base_field = '',
                jwt_policy_field_name = '',
                jwt_signing_method = '',
                jwt_source = '',
                name = '',
                notifications = openapi_client.models.api_definition_notifications.APIDefinition_notifications(
                    oauth_on_keychange_url = '', 
                    shared_secret = '', ),
                oauth_meta = openapi_client.models.api_definition_oauth_meta.APIDefinition_oauth_meta(
                    allowed_access_types = [
                        ''
                        ], 
                    allowed_authorize_types = [
                        ''
                        ], 
                    auth_login_redirect = '', ),
                org_id = '',
                slug = '',
                uptime_tests = openapi_client.models.api_definition_uptime_tests.APIDefinition_uptime_tests(
                    cors = openapi_client.models.api_definition_uptime_tests_cors.APIDefinition_uptime_tests_CORS(
                        allow_credentials = True, 
                        allowed_headers = [
                            ''
                            ], 
                        allowed_methods = [
                            ''
                            ], 
                        allowed_origins = [
                            ''
                            ], 
                        debug = True, 
                        enable = True, 
                        exposed_headers = [
                            ''
                            ], 
                        max_age = 1.337, 
                        options_passthrough = True, ), 
                    active = True, 
                    allowed_ips = [
                        ''
                        ], 
                    cache_options = openapi_client.models.api_definition_uptime_tests_cache_options.APIDefinition_uptime_tests_cache_options(
                        cache_all_safe_requests = True, 
                        cache_timeout = 1.337, 
                        enable_cache = True, 
                        enable_upstream_cache_control = True, ), 
                    check_list = [
                        openapi_client.models.api_definition_uptime_tests_check_list_inner.APIDefinition_uptime_tests_check_list_inner(
                            body = '', 
                            headers = [
                                None
                                ], 
                            method = '', 
                            url = '', )
                        ], 
                    config = openapi_client.models.api_definition_uptime_tests_config.APIDefinition_uptime_tests_config(
                        expire_utime_after = 1.337, 
                        recheck_wait = 1.337, 
                        service_discovery = openapi_client.models.service_discover_configuration.ServiceDiscoverConfiguration(
                            cache_timeout = 1.337, 
                            data_path = '', 
                            endpoint_returns_list = True, 
                            parent_data_path = '', 
                            port_data_path = '', 
                            query_endpoint = '', 
                            use_discovery_service = '', 
                            use_nested_query = True, 
                            use_target_list = True, ), ), 
                    custom_middleware = openapi_client.models.api_definition_uptime_tests_custom_middleware.APIDefinition_uptime_tests_custom_middleware(
                        post = [
                            openapi_client.models.middleware_definition.MiddlewareDefinition(
                                name = '', 
                                path = '', 
                                require_session = True, )
                            ], 
                        pre = [
                            openapi_client.models.middleware_definition.MiddlewareDefinition(
                                name = '', 
                                path = '', 
                                require_session = True, )
                            ], 
                        response = [
                            
                            ], ), 
                    do_not_track = '', 
                    domain = '', 
                    dont_set_quota_on_create = True, 
                    enable_batch_request_support = True, 
                    enable_ip_whitelisting = True, 
                    event_handlers = openapi_client.models.event_handlers.event_handlers(), 
                    expire_analytics_after = 1.337, 
                    proxy = openapi_client.models.api_definition_uptime_tests_proxy.APIDefinition_uptime_tests_proxy(
                        check_host_against_uptime_tests = True, 
                        enable_load_balancing = True, 
                        listen_path = '', 
                        preserve_host_header = True, 
                        strip_listen_path = True, 
                        target_list = [
                            ''
                            ], 
                        target_url = '', ), 
                    response_processors = [
                        openapi_client.models.api_definition_uptime_tests_response_processors_inner.APIDefinition_uptime_tests_response_processors_inner(
                            name = '', 
                            options = openapi_client.models.options.options(), )
                        ], 
                    session_lifetime = 1.337, 
                    tags = [
                        ''
                        ], ),
                use_basic_auth = True,
                use_keyless = True,
                use_oauth2 = True,
                version_data = openapi_client.models.api_definition_version_data.APIDefinition_version_data(
                    not_versioned = True, 
                    versions = {
                        'key' : openapi_client.models.version_definition.VersionDefinition(
                            expires = '', 
                            extended_paths = openapi_client.models.version_definition_extended_paths.VersionDefinition_extended_paths(
                                black_list = [
                                    openapi_client.models.end_point_meta.EndPointMeta(
                                        method_actions = {
                                            'key' : openapi_client.models.endpoint_method_meta.EndpointMethodMeta(
                                                action = '', 
                                                code = 1.337, 
                                                data = '', 
                                                headers = openapi_client.models.headers.headers(), )
                                            }, 
                                        path = '', )
                                    ], 
                                cache = [
                                    ''
                                    ], 
                                circuit_breakers = [
                                    openapi_client.models.version_definition_extended_paths_circuit_breakers_inner.VersionDefinition_extended_paths_circuit_breakers_inner(
                                        method = '', 
                                        path = '', 
                                        return_to_service_after = 1.337, 
                                        samples = 1.337, 
                                        threshold_percent = 1.337, )
                                    ], 
                                hard_timeouts = [
                                    openapi_client.models.version_definition_extended_paths_hard_timeouts_inner.VersionDefinition_extended_paths_hard_timeouts_inner(
                                        method = '', 
                                        path = '', 
                                        timeout = 1.337, )
                                    ], 
                                ignored = [
                                    openapi_client.models.end_point_meta.EndPointMeta(
                                        path = '', )
                                    ], 
                                size_limits = [
                                    openapi_client.models.version_definition_extended_paths_size_limits_inner.VersionDefinition_extended_paths_size_limits_inner(
                                        method = '', 
                                        path = '', 
                                        size_limit = 1.337, )
                                    ], 
                                transform = [
                                    openapi_client.models.template_meta.TemplateMeta(
                                        method = '', 
                                        path = '', 
                                        template_data = openapi_client.models.template_meta_template_data.TemplateMeta_template_data(
                                            enable_session = True, 
                                            input_type = '', 
                                            template_mode = '', ), )
                                    ], 
                                transform_headers = [
                                    openapi_client.models.header_injection_meta.HeaderInjectionMeta(
                                        add_headers = openapi_client.models.add_headers.add_headers(), 
                                        delete_headers = [
                                            ''
                                            ], 
                                        method = '', 
                                        path = '', )
                                    ], 
                                transform_response = [
                                    openapi_client.models.template_meta.TemplateMeta(
                                        method = '', 
                                        path = '', )
                                    ], 
                                transform_response_headers = [
                                    openapi_client.models.header_injection_meta.HeaderInjectionMeta(
                                        add_headers = openapi_client.models.add_headers.add_headers(), 
                                        method = '', 
                                        path = '', )
                                    ], 
                                url_rewrites = [
                                    openapi_client.models.version_definition_extended_paths_url_rewrites_inner.VersionDefinition_extended_paths_url_rewrites_inner(
                                        match_pattern = '', 
                                        method = '', 
                                        path = '', 
                                        rewrite_to = '', )
                                    ], 
                                virtual = [
                                    openapi_client.models.version_definition_extended_paths_virtual_inner.VersionDefinition_extended_paths_virtual_inner(
                                        function_source_type = '', 
                                        function_source_uri = '', 
                                        method = '', 
                                        path = '', 
                                        response_function_name = '', 
                                        use_session = True, )
                                    ], 
                                white_list = [
                                    
                                    ], ), 
                            global_headers = openapi_client.models.global_headers.global_headers(), 
                            global_headers_remove = [
                                ''
                                ], 
                            global_size_limit = 1.337, 
                            name = '', 
                            override_target = '', 
                            use_extended_paths = True, )
                        }, )
            )
        else:
            return APIDefinition(
        )
        """

    def testAPIDefinition(self):
        """Test APIDefinition"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
