# coding: utf-8

"""
    Gateway REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.9
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.api_definition_uptime_tests_config import APIDefinitionUptimeTestsConfig

class TestAPIDefinitionUptimeTestsConfig(unittest.TestCase):
    """APIDefinitionUptimeTestsConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> APIDefinitionUptimeTestsConfig:
        """Test APIDefinitionUptimeTestsConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `APIDefinitionUptimeTestsConfig`
        """
        model = APIDefinitionUptimeTestsConfig()
        if include_optional:
            return APIDefinitionUptimeTestsConfig(
                expire_utime_after = 1.337,
                recheck_wait = 1.337,
                service_discovery = openapi_client.models.service_discover_configuration.ServiceDiscoverConfiguration(
                    cache_timeout = 1.337, 
                    data_path = '', 
                    endpoint_returns_list = True, 
                    parent_data_path = '', 
                    port_data_path = '', 
                    query_endpoint = '', 
                    use_discovery_service = '', 
                    use_nested_query = True, 
                    use_target_list = True, )
            )
        else:
            return APIDefinitionUptimeTestsConfig(
        )
        """

    def testAPIDefinitionUptimeTestsConfig(self):
        """Test APIDefinitionUptimeTestsConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
