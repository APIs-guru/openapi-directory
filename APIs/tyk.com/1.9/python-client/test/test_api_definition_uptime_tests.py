# coding: utf-8

"""
    Gateway REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.9
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.api_definition_uptime_tests import APIDefinitionUptimeTests

class TestAPIDefinitionUptimeTests(unittest.TestCase):
    """APIDefinitionUptimeTests unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> APIDefinitionUptimeTests:
        """Test APIDefinitionUptimeTests
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `APIDefinitionUptimeTests`
        """
        model = APIDefinitionUptimeTests()
        if include_optional:
            return APIDefinitionUptimeTests(
                cors = openapi_client.models.api_definition_uptime_tests_cors.APIDefinition_uptime_tests_CORS(
                    allow_credentials = True, 
                    allowed_headers = [
                        ''
                        ], 
                    allowed_methods = [
                        ''
                        ], 
                    allowed_origins = [
                        ''
                        ], 
                    debug = True, 
                    enable = True, 
                    exposed_headers = [
                        ''
                        ], 
                    max_age = 1.337, 
                    options_passthrough = True, ),
                active = True,
                allowed_ips = [
                    ''
                    ],
                cache_options = openapi_client.models.api_definition_uptime_tests_cache_options.APIDefinition_uptime_tests_cache_options(
                    cache_all_safe_requests = True, 
                    cache_timeout = 1.337, 
                    enable_cache = True, 
                    enable_upstream_cache_control = True, ),
                check_list = [
                    openapi_client.models.api_definition_uptime_tests_check_list_inner.APIDefinition_uptime_tests_check_list_inner(
                        body = '', 
                        headers = [
                            None
                            ], 
                        method = '', 
                        url = '', )
                    ],
                config = openapi_client.models.api_definition_uptime_tests_config.APIDefinition_uptime_tests_config(
                    expire_utime_after = 1.337, 
                    recheck_wait = 1.337, 
                    service_discovery = openapi_client.models.service_discover_configuration.ServiceDiscoverConfiguration(
                        cache_timeout = 1.337, 
                        data_path = '', 
                        endpoint_returns_list = True, 
                        parent_data_path = '', 
                        port_data_path = '', 
                        query_endpoint = '', 
                        use_discovery_service = '', 
                        use_nested_query = True, 
                        use_target_list = True, ), ),
                custom_middleware = openapi_client.models.api_definition_uptime_tests_custom_middleware.APIDefinition_uptime_tests_custom_middleware(
                    post = [
                        openapi_client.models.middleware_definition.MiddlewareDefinition(
                            name = '', 
                            path = '', 
                            require_session = True, )
                        ], 
                    pre = [
                        openapi_client.models.middleware_definition.MiddlewareDefinition(
                            name = '', 
                            path = '', 
                            require_session = True, )
                        ], 
                    response = [
                        
                        ], ),
                do_not_track = '',
                domain = '',
                dont_set_quota_on_create = True,
                enable_batch_request_support = True,
                enable_ip_whitelisting = True,
                event_handlers = openapi_client.models.event_handlers.event_handlers(),
                expire_analytics_after = 1.337,
                proxy = openapi_client.models.api_definition_uptime_tests_proxy.APIDefinition_uptime_tests_proxy(
                    check_host_against_uptime_tests = True, 
                    enable_load_balancing = True, 
                    listen_path = '', 
                    preserve_host_header = True, 
                    service_discovery = openapi_client.models.service_discover_configuration.ServiceDiscoverConfiguration(
                        cache_timeout = 1.337, 
                        data_path = '', 
                        endpoint_returns_list = True, 
                        parent_data_path = '', 
                        port_data_path = '', 
                        query_endpoint = '', 
                        use_discovery_service = '', 
                        use_nested_query = True, 
                        use_target_list = True, ), 
                    strip_listen_path = True, 
                    target_list = [
                        ''
                        ], 
                    target_url = '', ),
                response_processors = [
                    openapi_client.models.api_definition_uptime_tests_response_processors_inner.APIDefinition_uptime_tests_response_processors_inner(
                        name = '', 
                        options = openapi_client.models.options.options(), )
                    ],
                session_lifetime = 1.337,
                tags = [
                    ''
                    ]
            )
        else:
            return APIDefinitionUptimeTests(
        )
        """

    def testAPIDefinitionUptimeTests(self):
        """Test APIDefinitionUptimeTests"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
