openapi: 3.0.3
servers:
  - url: https://unify.apideck.com
info:
  contact:
    email: hello@apideck.com
    url: https://developers.apideck.com
  description: |+
    Welcome to the Accounting API.

    You can use this API to access all Accounting API endpoints.

    ## Base URL

    The base URL for all API requests is `https://unify.apideck.com`

    We also provide a [Mock API](https://developers.apideck.com/mock-api) that can be used for testing purposes: `https://mock-api.apideck.com`

    ## GraphQL

    Use the [GraphQL playground](https://developers.apideck.com/graphql/playground) to test out the GraphQL API.

    ## Headers

    Custom headers that are expected as part of the request. Note that [RFC7230](https://tools.ietf.org/html/rfc7230) states header names are case insensitive.

    | Name                  | Type    | Required | Description                                                                                                                                                    |
    | --------------------- | ------- | -------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------- |
    | x-apideck-consumer-id | String  | Yes      | The id of the customer stored inside Apideck Vault. This can be a user id, account id, device id or whatever entity that can have integration within your app. |
    | x-apideck-service-id  | String  | No       | Describe the service you want to call (e.g., pipedrive). Only needed when a customer has activated multiple integrations for the same Unified API.             |
    | x-apideck-raw         | Boolean | No       | Include raw response. Mostly used for debugging purposes.                                                                                                      |
    | x-apideck-app-id      | String  | Yes      | The application id of your Unify application. Available at https://app.apideck.com/unify/api-keys.                                                             |
    | Authorization         | String  | Yes      | Bearer API KEY                                                                                                                                                 |

    ## Authorization

    You can interact with the API through the authorization methods below.

    <!-- ReDoc-Inject: <security-definitions> -->

    ## Pagination

    All API resources have support for bulk retrieval via list APIs.  Apideck uses cursor-based pagination via the optional `cursor` and `limit` parameters.

    To fetch the first page of results, call the list API without a `cursor` parameter. Afterwards you can fetch subsequent pages by providing a cursor parameter. You will find the next cursor in the response body in `meta.cursors.next`. If `meta.cursors.next` is `null` you're at the end of the list.

    In the REST API you can also use the `links` from the response for added convenience. Simply call the URL in `links.next` to get the next page of results.

    ### Query Parameters

    | Name   | Type   | Required | Description                                                                                                        |
    | ------ | ------ | -------- | ------------------------------------------------------------------------------------------------------------------ |
    | cursor | String | No       | Cursor to start from. You can find cursors for next & previous pages in the meta.cursors property of the response. |
    | limit  | Number | No       | Number of results to return. Minimum 1, Maximum 200, Default 20                                                    |

    ### Response Body

    | Name                  | Type   | Description                                                        |
    | --------------------- | ------ | ------------------------------------------------------------------ |
    | meta.cursors.previous | String | Cursor to navigate to the previous page of results through the API |
    | meta.cursors.current  | String | Cursor to navigate to the current page of results through the API  |
    | meta.cursors.next     | String | Cursor to navigate to the next page of results through the API     |
    | meta.items_on_page    | Number | Number of items returned in the data property of the response      |
    | links.previous        | String | Link to navigate to the previous page of results through the API   |
    | links.current         | String | Link to navigate to the current page of results through the API    |
    | links.next            | String | Link to navigate to the next page of results through the API       |

    ⚠️ `meta.cursors.previous`/`links.previous` is not available for all connectors.

    ## SDKs and API Clients

    We currently offer a [Node.js](https://developers.apideck.com/sdks/node), [PHP](https://developers.apideck.com/sdks/php) and [.NET](https://developers.apideck.com/sdks/dot-net) SDK.
    Need another SDK? [Request the SDK of your choice](https://integrations.apideck.com/request).

    ## Debugging

    Because of the nature of the abstraction we do in Apideck Unify we still provide the option to the receive raw requests and responses being handled underlying. By including the raw flag `?raw=true` in your requests you can still receive the full request. Please note that this increases the response size and can introduce extra latency.

    ## Errors

    The API returns standard HTTP response codes to indicate success or failure of the API requests. For errors, we also return a customized error message inside the JSON response. You can see the returned HTTP status codes below.

    | Code | Title                | Description                                                                                                                                                                                              |
    | ---- | -------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
    | 200  | OK                   | The request message has been successfully processed, and it has produced a response. The response message varies, depending on the request method and the requested data.                                |
    | 201  | Created              | The request has been fulfilled and has resulted in one or more new resources being created.                                                                                                              |
    | 204  | No Content           | The server has successfully fulfilled the request and that there is no additional content to send in the response payload body.                                                                          |
    | 400  | Bad Request          | The receiving server cannot understand the request because of malformed syntax. Do not repeat the request without first modifying it; check the request for errors, fix them and then retry the request. |
    | 401  | Unauthorized         | The request has not been applied because it lacks valid authentication credentials for the target resource.                                                                                              |
    | 402  | Payment Required     | Subscription data is incomplete or out of date. You'll need to provide payment details to continue.                                                                                                      |
    | 403  | Forbidden            | You do not have the appropriate user rights to access the request. Do not repeat the request.                                                                                                            |
    | 404  | Not Found            | The origin server did not find a current representation for the target resource or is not willing to disclose that one exists.                                                                           |
    | 409  | Conflict             | The request could not be completed due to a conflict with the current state of the target resource.                                                                                                      |
    | 422  | Unprocessable Entity | The server understands the content type of the request entity, and the syntax of the request entity is correct but was unable to process the contained instructions.                                     |
    | 429  | Too Many Requests    | You sent too many requests in a given amount of time ("rate limit"). Try again later                                                                                                                     |
    | 5xx  | Server Errors        | Something went wrong with the Unify API. These errors are logged on our side. You can contact our team to resolve the issue.                                                                             |

    ### Handling errors

    The Unify API and SDKs can produce errors for many reasons, such as a failed requests due to misconfigured integrations, invalid parameters, authentication errors, and network unavailability.

    ### Error Types

    #### RequestValidationError

    Request is not valid for the current endpoint. The response body will include details on the validation error. Check the spelling and types of your attributes, and ensure you are not passing data that is outside of the specification.

    #### UnsupportedFiltersError

    Filters in the request are valid, but not supported by the connector. Remove the unsupported filter(s) to get a successful response.

    #### UnsupportedSortFieldError

    Sort field (`sort[by]`) in the request is valid, but not supported by the connector. Replace or remove the sort field to get a successful response.

    #### InvalidCursorError

    Pagination cursor in the request is not valid for the current connector. Make sure to use a cursor returned from the API, for the same connector.

    #### ConnectorExecutionError

    A Unified API request made via one of our downstream connectors returned an unexpected error. The `status_code` returned is proxied through to error response along with their original response via the error detail.

    #### UnauthorizedError

    We were unable to authorize the request as made. This can happen for a number of reasons, from missing header params to passing an incorrect authorization token. Verify your Api Key is being set correctly in the authorization header. ie: `Authorization: 'Bearer sk_live_***'`

    #### ConnectorCredentialsError

    A request using a given connector has not been authorized. Ensure the connector you are trying to use has been configured correctly and been authorized for use.

    #### ConnectorDisabledError

    A request has been made to a connector that has since been disabled. This may be temporary - You can contact our team to resolve the issue.

    #### ConnectorRateLimitError

    You sent too many request to a connector. These rate limits vary from connector to connector. You will need to try again later.

    #### RequestLimitError

    You have reached the number of requests included in your Free Tier Subscription. You will no be able to make further requests until this limit resets at the end of the month, or talk to us about upgrading your subscription to continue immediately.

    #### EntityNotFoundError

    You've made a request for a resource or route that does not exist. Verify your path parameters or any identifiers used to fetch this resource.

    #### OAuthCredentialsNotFoundError

    When adding a connector integration that implements OAuth, both a `client_id` and `client_secret` must be provided before any authorizations can be performed. Verify the integration has been configured properly before continuing.

    #### IntegrationNotFoundError

    The requested connector integration could not be found associated to your `application_id`. Verify your `application_id` is correct, and that this connector has been added and configured for your application.

    #### ConnectionNotFoundError

    A valid connection could not be found associated to your `application_id`. Something _may_ have interrupted the authorization flow. You may need to start the connector authorization process again.

    #### ConnectionSettingsError

    The connector has required settings that were not supplied. Verify `connection.settings` contains all required settings for the connector to be callable.

    #### ConnectorNotFoundError

    A request was made for an unknown connector. Verify your `service_id` is spelled correctly, and that this connector is enabled for your provided `unified_api`.

    #### OAuthRedirectUriError

    A request was made either in a connector authorization flow, or attempting to revoke connector access without a valid `redirect_uri`. This is the url the user should be returned to on completion of process.

    #### OAuthInvalidStateError

    The state param is required and is used to ensure the outgoing authorization state has not been altered before the user is redirected back. It also contains required params needed to identify the connector being used. If this has been altered, the authorization will not succeed.

    #### OAuthCodeExchangeError

    When attempting to exchange the authorization code for an `access_token` during an OAuth flow, an error occurred. This may be temporary. You can reattempt authorization or contact our team to resolve the issue.

    #### OAuthConnectorError

    It seems something went wrong on the connector side. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.

    #### MappingError

    There was an error attempting to retrieve the mapping for a given attribute. We've been notified and are working to fix this issue.

    #### ConnectorMappingNotFoundError

    It seems the implementation for this connector is incomplete. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.

    #### ConnectorResponseMappingNotFoundError

    We were unable to retrieve the response mapping for this connector. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.

    #### ConnectorOperationMappingNotFoundError

    Connector mapping has not been implemented for the requested operation. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.

    #### ConnectorWorkflowMappingError

    The composite api calls required for this operation have not been mapped entirely. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.

    #### ConnectorOperationUnsupportedError

    You're attempting a call that is not supported by the connector. It's likely this operation is supported by another connector, but we're unable to implement for this one.

    #### PaginationNotSupportedError

    Pagination is not yet supported for this connector, try removing limit and/or cursor from the query. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.

    ## API Design

    ### API Styles and data formats

    #### REST API

    The API is organized around [REST](https://restfulapi.net/), providing simple and predictable URIs to access and modify objects. Requests support standard HTTP methods like GET, PUT, POST, and DELETE and standard status codes. JSON is returned by all API responses, including errors. In all API requests, you must set the content-type HTTP header to application/json. All API requests must be made over HTTPS. Calls made over HTTP will fail.

    ##### Available HTTP methods

    The Apideck API uses HTTP verbs to understand if you want to read (GET), delete (DELETE) or create (POST) an object. When your web application cannot do a POST or DELETE, we provide the ability to set the method through the query parameter \_method.

    ```
    POST /messages
    GET /messages
    GET /messages/{messageId}
    PATCH /messages/{messageId}
    DELETE /messages/{messageId}
    ```

    Response bodies are always UTF-8 encoded JSON objects, unless explicitly documented otherwise. For some endpoints and use cases we divert from REST to provide a better developer experience.

    ### Schema

    All API requests and response bodies adhere to a common JSON format representing individual items, collections of items, links to related items and additional meta data.

    ### Meta

    Meta data can be represented as a top level member named “meta”. Any information may be provided in the meta data. It’s most common use is to return the total number of records when requesting a collection of resources.

    ### Idempotence (upcoming)

    To prevent the creation of duplicate resources, every POST method (such as one that creates a consumer record) must specify a unique value for the X-Unique-Transaction-ID header name. Uniquely identifying each unique POST request ensures that the API processes a given request once and only once.

    Uniquely identifying new resource-creation POSTs is especially important when the outcome of a response is ambiguous because of a transient service interruption, such as a server-side timeout or network disruption. If a service interruption occurs, then the client application can safely retry the uniquely identified request without creating duplicate operations. (API endpoints that guarantee that every uniquely identified request is processed only once no matter how many times that uniquely identifiable request is made are described as idempotent.)

    ### Request IDs

    Each API request has an associated request identifier. You can find this value in the response headers, under Request-Id. You can also find request identifiers in the URLs of individual request logs in your Dashboard. If you need to contact us about a specific request, providing the request identifier will ensure the fastest possible resolution.

    ### Fixed field types

    #### Dates

    The dates returned by the API are all represented in UTC (ISO8601 format).

    This example `2019-11-14T00:55:31.820Z` is defined by the ISO 8601 standard. The T in the middle separates the year-month-day portion from the hour-minute-second portion. The Z on the end means UTC, that is, an offset-from-UTC of zero hours-minutes-seconds. The Z is pronounced "Zulu" per military/aviation tradition.

    The ISO 8601 standard is more modern. The formats are wisely designed to be easy to parse by machine as well as easy to read by humans across cultures.

    #### Prices and Currencies

    All prices returned by the API are represented as integer amounts in a currency’s smallest unit. For example, $5 USD would be returned as 500 (i.e, 500 cents).

    For zero-decimal currencies, amounts will still be provided as an integer but without the need to divide by 100. For example, an amount of ¥5 (JPY) would be returned as 5.

    All currency codes conform to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).

    ## Support

    If you have problems or need help with your case, you can always reach out to our Support.

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Accounting API
  version: 8.70.2
  x-apideck-api: accounting
  x-apideck-sdk-support: true
  x-apisguru-categories:
    - developer_tools
  x-logo:
    url: https://developers.apideck.com/icon.png
  x-origin:
    - format: openapi
      url: https://raw.githubusercontent.com/apideck-libraries/openapi-specs/master/accounting.yml
      version: "3.0"
  x-providerName: apideck.com
  x-serviceName: accounting
  x-tags:
    - partner
externalDocs:
  description: Apideck Developer Docs
  url: https://developers.apideck.com
security:
  - apiKey: []
tags:
  - description: ""
    name: Bills
    x-apideck-model:
      $ref: "#/components/schemas/Bill"
    x-apideck-resource-id: bills
  - description: ""
    name: Company Info
    x-apideck-model:
      $ref: "#/components/schemas/CompanyInfo"
    x-apideck-resource-id: company-info
  - description: ""
    name: Credit Notes
    x-apideck-model:
      $ref: "#/components/schemas/CreditNote"
    x-apideck-resource-id: credit-notes
  - description: ""
    name: Customers
    x-apideck-model:
      $ref: "#/components/schemas/AccountingCustomer"
    x-apideck-resource-id: customers
  - description: ""
    name: Invoices
    x-apideck-model:
      $ref: "#/components/schemas/Invoice"
    x-apideck-resource-id: invoices
  - description: Invoice items are stored from invoice lines to be used later on when creating new invoices.
    name: Invoice Items
    x-apideck-model:
      $ref: "#/components/schemas/InvoiceItem"
    x-apideck-resource-id: invoice-items
  - description: ""
    name: Ledger Accounts
    x-apideck-model:
      $ref: "#/components/schemas/LedgerAccount"
    x-apideck-resource-id: ledger-accounts
  - description: ""
    name: Payments
    x-apideck-model:
      $ref: "#/components/schemas/Payment"
    x-apideck-resource-id: payments
  - description: ""
    name: Suppliers
    x-apideck-model:
      $ref: "#/components/schemas/Supplier"
    x-apideck-resource-id: suppliers
  - description: ""
    name: Tax Rates
    x-apideck-model:
      $ref: "#/components/schemas/TaxRate"
    x-apideck-resource-id: tax-rates
  - description: ""
    name: Balance Sheet
    x-apideck-model:
      $ref: "#/components/schemas/BalanceSheet"
    x-apideck-resource-id: balance-sheet
  - description: ""
    name: Profit and Loss
    x-apideck-model:
      $ref: "#/components/schemas/ProfitAndLoss"
    x-apideck-resource-id: profit-and-loss
paths:
  /accounting/balance-sheet:
    get:
      description: Get BalanceSheet
      operationId: balanceSheetOne
      parameters:
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
        - $ref: "#/components/parameters/passThrough"
        - $ref: "#/components/parameters/balanceSheetFilter"
        - $ref: "#/components/parameters/raw"
      responses:
        "200":
          $ref: "#/components/responses/GetBalanceSheetResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: Get BalanceSheet
      tags:
        - Balance Sheet
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.balanceSheetOne({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  /accounting/bills:
    get:
      description: List Bills
      operationId: billsAll
      parameters:
        - $ref: "#/components/parameters/raw"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
        - $ref: "#/components/parameters/cursor"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/GetBillsResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: List Bills
      tags:
        - Bills
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.billsAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-field-name: bills
    post:
      description: Create Bill
      operationId: billsAdd
      parameters:
        - $ref: "#/components/parameters/raw"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Bill"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/CreateBillResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: Create Bill
      tags:
        - Bills
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              bill: {
                supplier: {
                  id: '12345',
                  display_name: 'Windsurf Shop',
                  address: {
                    id: '123',
                    type: 'primary',
                    string: '25 Spring Street, Blackburn, VIC 3130',
                    name: 'HQ US',
                    line1: 'Main street',
                    line2: 'apt #',
                    line3: 'Suite #',
                    line4: 'delivery instructions',
                    street_number: '25',
                    city: 'San Francisco',
                    state: 'CA',
                    postal_code: '94104',
                    country: 'US',
                    latitude: '40.759211',
                    longitude: '-73.984638',
                    county: 'Santa Clara',
                    contact_name: 'Elon Musk',
                    salutation: 'Mr',
                    phone_number: '111-111-1111',
                    fax: '122-111-1111',
                    email: 'elon@musk.com',
                    website: 'https://elonmusk.com',
                    row_version: '1-12345'
                  }
                },
                currency: 'USD',
                currency_rate: 0.69,
                tax_inclusive: true,
                bill_date: '2020-09-30',
                due_date: '2020-10-30',
                paid_date: '2020-10-30',
                po_number: '90000117',
                reference: '123456',
                line_items: [
                  {
                    row_id: '12345',
                    code: '120-C',
                    line_number: 1,
                    description:
                      'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',
                    type: 'expense_account',
                    tax_amount: 27500,
                    total_amount: 27500,
                    quantity: 1,
                    unit_price: 27500.5,
                    unit_of_measure: 'pc.',
                    discount_percentage: 0.01,
                    item: {
                      id: '12344'
                    },
                    ledger_account: {
                      id: '123456',
                      nominal_code: 'N091',
                      code: '453'
                    },
                    tax_rate: {
                      id: '123456'
                    },
                    row_version: '1-12345'
                  }
                ],
                terms: 'Net 30 days',
                balance: 27500,
                deposit: 0,
                sub_total: 27500,
                total_tax: 2500,
                total: 27500,
                tax_code: '1234',
                notes: 'Some notes about this bill.',
                status: 'draft',
                ledger_account: {
                  id: '123456',
                  nominal_code: 'N091',
                  code: '453'
                },
                row_version: '1-12345'
              }
            }

            try {
              const { data } = await apideck.accounting.billsAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  "/accounting/bills/{id}":
    delete:
      description: Delete Bill
      operationId: billsDelete
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
        - $ref: "#/components/parameters/raw"
      responses:
        "200":
          $ref: "#/components/responses/DeleteBillResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: Delete Bill
      tags:
        - Bills
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.billsDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    get:
      description: Get Bill
      operationId: billsOne
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
        - $ref: "#/components/parameters/raw"
      responses:
        "200":
          $ref: "#/components/responses/GetBillResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: Get Bill
      tags:
        - Bills
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.billsOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    patch:
      description: Update Bill
      operationId: billsUpdate
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
        - $ref: "#/components/parameters/raw"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Bill"
        required: true
      responses:
        "200":
          $ref: "#/components/responses/UpdateBillResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: Update Bill
      tags:
        - Bills
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              bill: {
                supplier: {
                  id: '12345',
                  display_name: 'Windsurf Shop',
                  address: {
                    id: '123',
                    type: 'primary',
                    string: '25 Spring Street, Blackburn, VIC 3130',
                    name: 'HQ US',
                    line1: 'Main street',
                    line2: 'apt #',
                    line3: 'Suite #',
                    line4: 'delivery instructions',
                    street_number: '25',
                    city: 'San Francisco',
                    state: 'CA',
                    postal_code: '94104',
                    country: 'US',
                    latitude: '40.759211',
                    longitude: '-73.984638',
                    county: 'Santa Clara',
                    contact_name: 'Elon Musk',
                    salutation: 'Mr',
                    phone_number: '111-111-1111',
                    fax: '122-111-1111',
                    email: 'elon@musk.com',
                    website: 'https://elonmusk.com',
                    row_version: '1-12345'
                  }
                },
                currency: 'USD',
                currency_rate: 0.69,
                tax_inclusive: true,
                bill_date: '2020-09-30',
                due_date: '2020-10-30',
                paid_date: '2020-10-30',
                po_number: '90000117',
                reference: '123456',
                line_items: [
                  {
                    row_id: '12345',
                    code: '120-C',
                    line_number: 1,
                    description:
                      'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',
                    type: 'expense_account',
                    tax_amount: 27500,
                    total_amount: 27500,
                    quantity: 1,
                    unit_price: 27500.5,
                    unit_of_measure: 'pc.',
                    discount_percentage: 0.01,
                    item: {
                      id: '12344'
                    },
                    ledger_account: {
                      id: '123456',
                      nominal_code: 'N091',
                      code: '453'
                    },
                    tax_rate: {
                      id: '123456'
                    },
                    row_version: '1-12345'
                  }
                ],
                terms: 'Net 30 days',
                balance: 27500,
                deposit: 0,
                sub_total: 27500,
                total_tax: 2500,
                total: 27500,
                tax_code: '1234',
                notes: 'Some notes about this bill.',
                status: 'draft',
                ledger_account: {
                  id: '123456',
                  nominal_code: 'N091',
                  code: '453'
                },
                row_version: '1-12345'
              }
            }

            try {
              const { data } = await apideck.accounting.billsUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  /accounting/company-info:
    get:
      description: Get company info
      operationId: companyInfoOne
      parameters:
        - $ref: "#/components/parameters/raw"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
      responses:
        "200":
          $ref: "#/components/responses/GetCompanyInfoResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: Get company info
      tags:
        - Company Info
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.companyInfoOne({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-field-name: companyInfo
  /accounting/credit-notes:
    get:
      description: List Credit Notes
      operationId: creditNotesAll
      parameters:
        - $ref: "#/components/parameters/raw"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
        - $ref: "#/components/parameters/cursor"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/GetCreditNotesResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: List Credit Notes
      tags:
        - Credit Notes
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.creditNotesAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-field-name: CreditNotes
    post:
      description: Create Credit Note
      operationId: creditNotesAdd
      parameters:
        - $ref: "#/components/parameters/raw"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreditNote"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/CreateCreditNoteResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: Create Credit Note
      tags:
        - Credit Notes
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              creditNote: {
                number: 'OIT00546',
                customer: {
                  id: '12345',
                  display_name: 'Windsurf Shop',
                  name: 'Windsurf Shop'
                },
                currency: 'USD',
                currency_rate: 0.69,
                tax_inclusive: true,
                sub_total: 27500,
                total_amount: 49.99,
                total_tax: 2500,
                tax_code: '1234',
                balance: 27500,
                remaining_credit: 27500,
                status: 'authorised',
                reference: '123456',
                date_issued: '2021-05-01T12:00:00.000Z',
                date_paid: '2021-05-01T12:00:00.000Z',
                type: 'accounts_receivable_credit',
                line_items: [
                  {
                    row_id: '12345',
                    code: '120-C',
                    line_number: 1,
                    description:
                      'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',
                    type: 'sales_item',
                    tax_amount: 27500,
                    total_amount: 27500,
                    quantity: 1,
                    unit_price: 27500.5,
                    unit_of_measure: 'pc.',
                    discount_percentage: 0.01,
                    item: {
                      id: '12344'
                    },
                    tax_rate: {
                      id: '123456'
                    },
                    ledger_account: {
                      id: '123456',
                      nominal_code: 'N091',
                      code: '453'
                    },
                    row_version: '1-12345'
                  }
                ],
                allocations: [
                  {
                    id: '123456',
                    type: 'invoice',
                    amount: 49.99
                  }
                ],
                note: 'Some notes about this credit note',
                row_version: '1-12345'
              }
            }

            try {
              const { data } = await apideck.accounting.creditNotesAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  "/accounting/credit-notes/{id}":
    delete:
      description: Delete Credit Note
      operationId: creditNotesDelete
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
        - $ref: "#/components/parameters/raw"
      responses:
        "200":
          $ref: "#/components/responses/DeleteCreditNoteResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: Delete Credit Note
      tags:
        - Credit Notes
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: xero
          description: Xero will only allow deleting a Credit Note if it is in draft status.
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.creditNotesDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    get:
      description: Get Credit Note
      operationId: creditNotesOne
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
        - $ref: "#/components/parameters/raw"
      responses:
        "200":
          $ref: "#/components/responses/GetCreditNoteResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: Get Credit Note
      tags:
        - Credit Notes
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.creditNotesOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    patch:
      description: Update Credit Note
      operationId: creditNotesUpdate
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
        - $ref: "#/components/parameters/raw"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreditNote"
        required: true
      responses:
        "200":
          $ref: "#/components/responses/UpdateCreditNoteResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: Update Credit Note
      tags:
        - Credit Notes
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: xero
          description: Xero will only allow updating a Credit Note when it has not yet been allocated.
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              creditNote: {
                number: 'OIT00546',
                customer: {
                  id: '12345',
                  display_name: 'Windsurf Shop',
                  name: 'Windsurf Shop'
                },
                currency: 'USD',
                currency_rate: 0.69,
                tax_inclusive: true,
                sub_total: 27500,
                total_amount: 49.99,
                total_tax: 2500,
                tax_code: '1234',
                balance: 27500,
                remaining_credit: 27500,
                status: 'authorised',
                reference: '123456',
                date_issued: '2021-05-01T12:00:00.000Z',
                date_paid: '2021-05-01T12:00:00.000Z',
                type: 'accounts_receivable_credit',
                line_items: [
                  {
                    row_id: '12345',
                    code: '120-C',
                    line_number: 1,
                    description:
                      'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',
                    type: 'sales_item',
                    tax_amount: 27500,
                    total_amount: 27500,
                    quantity: 1,
                    unit_price: 27500.5,
                    unit_of_measure: 'pc.',
                    discount_percentage: 0.01,
                    item: {
                      id: '12344'
                    },
                    tax_rate: {
                      id: '123456'
                    },
                    ledger_account: {
                      id: '123456',
                      nominal_code: 'N091',
                      code: '453'
                    },
                    row_version: '1-12345'
                  }
                ],
                allocations: [
                  {
                    id: '123456',
                    type: 'invoice',
                    amount: 49.99
                  }
                ],
                note: 'Some notes about this credit note',
                row_version: '1-12345'
              }
            }

            try {
              const { data } = await apideck.accounting.creditNotesUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  /accounting/customers:
    get:
      description: List Customers
      operationId: customersAll
      parameters:
        - $ref: "#/components/parameters/raw"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
        - $ref: "#/components/parameters/cursor"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/customersFilter"
      responses:
        "200":
          $ref: "#/components/responses/GetCustomersResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: List Customers
      tags:
        - Customers
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.customersAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-field-name: customers
    post:
      description: Create Customer
      operationId: customersAdd
      parameters:
        - $ref: "#/components/parameters/raw"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountingCustomer"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/CreateCustomerResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: Create Customer
      tags:
        - Customers
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              customer: {
                display_id: 'EMP00101',
                display_name: 'Windsurf Shop',
                company_name: 'SpaceX',
                title: 'CEO',
                first_name: 'Elon',
                middle_name: 'D.',
                last_name: 'Musk',
                suffix: 'Jr.',
                individual: true,
                addresses: [
                  {
                    id: '123',
                    type: 'primary',
                    string: '25 Spring Street, Blackburn, VIC 3130',
                    name: 'HQ US',
                    line1: 'Main street',
                    line2: 'apt #',
                    line3: 'Suite #',
                    line4: 'delivery instructions',
                    street_number: '25',
                    city: 'San Francisco',
                    state: 'CA',
                    postal_code: '94104',
                    country: 'US',
                    latitude: '40.759211',
                    longitude: '-73.984638',
                    county: 'Santa Clara',
                    contact_name: 'Elon Musk',
                    salutation: 'Mr',
                    phone_number: '111-111-1111',
                    fax: '122-111-1111',
                    email: 'elon@musk.com',
                    website: 'https://elonmusk.com',
                    row_version: '1-12345'
                  }
                ],
                notes: 'Some notes about this customer',
                phone_numbers: [
                  {
                    id: '12345',
                    country_code: '1',
                    area_code: '323',
                    number: '111-111-1111',
                    extension: '105',
                    type: 'primary'
                  }
                ],
                emails: [
                  {
                    id: '123',
                    email: 'elon@musk.com',
                    type: 'primary'
                  }
                ],
                websites: [
                  {
                    id: '12345',
                    url: 'http://example.com',
                    type: 'primary'
                  }
                ],
                tax_rate: {
                  id: '123456'
                },
                tax_number: 'US123945459',
                currency: 'USD',
                bank_accounts: [
                  {
                    iban: 'CH2989144532982975332',
                    bic: 'AUDSCHGGXXX',
                    bsb_number: '062-001',
                    branch_identifier: '001',
                    bank_code: 'BNH',
                    account_number: '123465',
                    account_name: 'SPACEX LLC',
                    account_type: 'credit_card',
                    currency: 'USD'
                  }
                ],
                status: 'active',
                row_version: '1-12345'
              }
            }

            try {
              const { data } = await apideck.accounting.customersAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  "/accounting/customers/{id}":
    delete:
      description: Delete Customer
      operationId: customersDelete
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
        - $ref: "#/components/parameters/raw"
      responses:
        "200":
          $ref: "#/components/responses/DeleteCustomerResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: Delete Customer
      tags:
        - Customers
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.customersDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    get:
      description: Get Customer
      operationId: customersOne
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
        - $ref: "#/components/parameters/raw"
      responses:
        "200":
          $ref: "#/components/responses/GetCustomerResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: Get Customer
      tags:
        - Customers
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.customersOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    patch:
      description: Update Customer
      operationId: customersUpdate
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
        - $ref: "#/components/parameters/raw"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountingCustomer"
        required: true
      responses:
        "200":
          $ref: "#/components/responses/UpdateCustomerResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: Update Customer
      tags:
        - Customers
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              customer: {
                display_id: 'EMP00101',
                display_name: 'Windsurf Shop',
                company_name: 'SpaceX',
                title: 'CEO',
                first_name: 'Elon',
                middle_name: 'D.',
                last_name: 'Musk',
                suffix: 'Jr.',
                individual: true,
                addresses: [
                  {
                    id: '123',
                    type: 'primary',
                    string: '25 Spring Street, Blackburn, VIC 3130',
                    name: 'HQ US',
                    line1: 'Main street',
                    line2: 'apt #',
                    line3: 'Suite #',
                    line4: 'delivery instructions',
                    street_number: '25',
                    city: 'San Francisco',
                    state: 'CA',
                    postal_code: '94104',
                    country: 'US',
                    latitude: '40.759211',
                    longitude: '-73.984638',
                    county: 'Santa Clara',
                    contact_name: 'Elon Musk',
                    salutation: 'Mr',
                    phone_number: '111-111-1111',
                    fax: '122-111-1111',
                    email: 'elon@musk.com',
                    website: 'https://elonmusk.com',
                    row_version: '1-12345'
                  }
                ],
                notes: 'Some notes about this customer',
                phone_numbers: [
                  {
                    id: '12345',
                    country_code: '1',
                    area_code: '323',
                    number: '111-111-1111',
                    extension: '105',
                    type: 'primary'
                  }
                ],
                emails: [
                  {
                    id: '123',
                    email: 'elon@musk.com',
                    type: 'primary'
                  }
                ],
                websites: [
                  {
                    id: '12345',
                    url: 'http://example.com',
                    type: 'primary'
                  }
                ],
                tax_rate: {
                  id: '123456'
                },
                tax_number: 'US123945459',
                currency: 'USD',
                bank_accounts: [
                  {
                    iban: 'CH2989144532982975332',
                    bic: 'AUDSCHGGXXX',
                    bsb_number: '062-001',
                    branch_identifier: '001',
                    bank_code: 'BNH',
                    account_number: '123465',
                    account_name: 'SPACEX LLC',
                    account_type: 'credit_card',
                    currency: 'USD'
                  }
                ],
                status: 'active',
                row_version: '1-12345'
              }
            }

            try {
              const { data } = await apideck.accounting.customersUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  /accounting/invoice-items:
    get:
      description: List Invoice Items
      operationId: invoiceItemsAll
      parameters:
        - $ref: "#/components/parameters/raw"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
        - $ref: "#/components/parameters/cursor"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/invoiceItemsFilter"
      responses:
        "200":
          $ref: "#/components/responses/GetInvoiceItemsResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: List Invoice Items
      tags:
        - Invoice Items
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.invoiceItemsAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-field-name: invoiceItems
    post:
      description: Create Invoice Item
      operationId: invoiceItemsAdd
      parameters:
        - $ref: "#/components/parameters/raw"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InvoiceItem"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/CreateInvoiceItemResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: Create Invoice Item
      tags:
        - Invoice Items
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              invoiceItem: {
                name: 'Model Y',
                description:
                  'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',
                code: '120-C',
                sold: true,
                purchased: true,
                tracked: true,
                inventory_date: '2020-10-30',
                type: 'inventory',
                sales_details: {
                  unit_price: 27500.5,
                  unit_of_measure: 'pc.',
                  tax_inclusive: true,
                  tax_rate: {
                    id: '123456'
                  }
                },
                purchase_details: {
                  unit_price: 27500.5,
                  unit_of_measure: 'pc.',
                  tax_inclusive: true,
                  tax_rate: {
                    id: '123456'
                  }
                },
                quantity: 1,
                unit_price: 27500.5,
                asset_account: {
                  id: '123456',
                  nominal_code: 'N091',
                  code: '453'
                },
                income_account: {
                  id: '123456',
                  nominal_code: 'N091',
                  code: '453'
                },
                expense_account: {
                  id: '123456',
                  nominal_code: 'N091',
                  code: '453'
                },
                active: true,
                row_version: '1-12345'
              }
            }

            try {
              const { data } = await apideck.accounting.invoiceItemsAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  "/accounting/invoice-items/{id}":
    delete:
      description: Delete Invoice Item
      operationId: invoiceItemsDelete
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
        - $ref: "#/components/parameters/raw"
      responses:
        "200":
          $ref: "#/components/responses/DeleteInvoiceItemResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: Delete Invoice Item
      tags:
        - Invoice Items
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.invoiceItemsDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    get:
      description: Get Invoice Item
      operationId: invoiceItemsOne
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
        - $ref: "#/components/parameters/raw"
      responses:
        "200":
          $ref: "#/components/responses/GetInvoiceItemResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: Get Invoice Item
      tags:
        - Invoice Items
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.invoiceItemsOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    patch:
      description: Update Invoice Item
      operationId: invoiceItemsUpdate
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
        - $ref: "#/components/parameters/raw"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InvoiceItem"
        required: true
      responses:
        "200":
          $ref: "#/components/responses/UpdateInvoiceItemResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: Update Invoice Item
      tags:
        - Invoice Items
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              invoiceItem: {
                name: 'Model Y',
                description:
                  'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',
                code: '120-C',
                sold: true,
                purchased: true,
                tracked: true,
                inventory_date: '2020-10-30',
                type: 'inventory',
                sales_details: {
                  unit_price: 27500.5,
                  unit_of_measure: 'pc.',
                  tax_inclusive: true,
                  tax_rate: {
                    id: '123456'
                  }
                },
                purchase_details: {
                  unit_price: 27500.5,
                  unit_of_measure: 'pc.',
                  tax_inclusive: true,
                  tax_rate: {
                    id: '123456'
                  }
                },
                quantity: 1,
                unit_price: 27500.5,
                asset_account: {
                  id: '123456',
                  nominal_code: 'N091',
                  code: '453'
                },
                income_account: {
                  id: '123456',
                  nominal_code: 'N091',
                  code: '453'
                },
                expense_account: {
                  id: '123456',
                  nominal_code: 'N091',
                  code: '453'
                },
                active: true,
                row_version: '1-12345'
              }
            }

            try {
              const { data } = await apideck.accounting.invoiceItemsUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  /accounting/invoices:
    get:
      description: List Invoices
      operationId: invoicesAll
      parameters:
        - $ref: "#/components/parameters/raw"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
        - $ref: "#/components/parameters/cursor"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/invoicesSort"
      responses:
        "200":
          $ref: "#/components/responses/GetInvoicesResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: List Invoices
      tags:
        - Invoices
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.invoicesAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-field-name: invoices
    post:
      description: Create Invoice
      operationId: invoicesAdd
      parameters:
        - $ref: "#/components/parameters/raw"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Invoice"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/CreateInvoiceResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: Create Invoice
      tags:
        - Invoices
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: quickbooks
          description: Quickbooks offers limited (regional) support for applying discount on a Line Item. Including discount_percentage applies to entire invoice.
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              invoice: {
                type: 'service',
                number: 'OIT00546',
                customer: {
                  id: '12345',
                  display_name: 'Windsurf Shop',
                  name: 'Windsurf Shop'
                },
                invoice_date: '2020-09-30',
                due_date: '2020-09-30',
                terms: 'Net 30 days',
                po_number: '90000117',
                reference: '123456',
                status: 'draft',
                invoice_sent: true,
                currency: 'USD',
                currency_rate: 0.69,
                tax_inclusive: true,
                sub_total: 27500,
                total_tax: 2500,
                tax_code: '1234',
                discount_percentage: 5.5,
                total: 27500,
                balance: 27500,
                deposit: 0,
                customer_memo: 'Thank you for your business and have a great day!',
                line_items: [
                  {
                    row_id: '12345',
                    code: '120-C',
                    line_number: 1,
                    description:
                      'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',
                    type: 'sales_item',
                    tax_amount: 27500,
                    total_amount: 27500,
                    quantity: 1,
                    unit_price: 27500.5,
                    unit_of_measure: 'pc.',
                    discount_percentage: 0.01,
                    item: {
                      id: '12344'
                    },
                    tax_rate: {
                      id: '123456'
                    },
                    ledger_account: {
                      id: '123456',
                      nominal_code: 'N091',
                      code: '453'
                    },
                    row_version: '1-12345'
                  }
                ],
                billing_address: {
                  id: '123',
                  type: 'primary',
                  string: '25 Spring Street, Blackburn, VIC 3130',
                  name: 'HQ US',
                  line1: 'Main street',
                  line2: 'apt #',
                  line3: 'Suite #',
                  line4: 'delivery instructions',
                  street_number: '25',
                  city: 'San Francisco',
                  state: 'CA',
                  postal_code: '94104',
                  country: 'US',
                  latitude: '40.759211',
                  longitude: '-73.984638',
                  county: 'Santa Clara',
                  contact_name: 'Elon Musk',
                  salutation: 'Mr',
                  phone_number: '111-111-1111',
                  fax: '122-111-1111',
                  email: 'elon@musk.com',
                  website: 'https://elonmusk.com',
                  row_version: '1-12345'
                },
                shipping_address: {
                  id: '123',
                  type: 'primary',
                  string: '25 Spring Street, Blackburn, VIC 3130',
                  name: 'HQ US',
                  line1: 'Main street',
                  line2: 'apt #',
                  line3: 'Suite #',
                  line4: 'delivery instructions',
                  street_number: '25',
                  city: 'San Francisco',
                  state: 'CA',
                  postal_code: '94104',
                  country: 'US',
                  latitude: '40.759211',
                  longitude: '-73.984638',
                  county: 'Santa Clara',
                  contact_name: 'Elon Musk',
                  salutation: 'Mr',
                  phone_number: '111-111-1111',
                  fax: '122-111-1111',
                  email: 'elon@musk.com',
                  website: 'https://elonmusk.com',
                  row_version: '1-12345'
                },
                template_id: '123456',
                source_document_url: 'https://www.invoicesolution.com/invoice/123456',
                row_version: '1-12345'
              }
            }

            try {
              const { data } = await apideck.accounting.invoicesAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  "/accounting/invoices/{id}":
    delete:
      description: Delete Invoice
      operationId: invoicesDelete
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
        - $ref: "#/components/parameters/raw"
      responses:
        "200":
          $ref: "#/components/responses/DeleteInvoiceResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: Delete Invoice
      tags:
        - Invoices
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.invoicesDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    get:
      description: Get Invoice
      operationId: invoicesOne
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
        - $ref: "#/components/parameters/raw"
      responses:
        "200":
          $ref: "#/components/responses/GetInvoiceResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: Get Invoice
      tags:
        - Invoices
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.invoicesOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    patch:
      description: Update Invoice
      operationId: invoicesUpdate
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
        - $ref: "#/components/parameters/raw"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Invoice"
        required: true
      responses:
        "200":
          $ref: "#/components/responses/UpdateInvoiceResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: Update Invoice
      tags:
        - Invoices
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              invoice: {
                type: 'service',
                number: 'OIT00546',
                customer: {
                  id: '12345',
                  display_name: 'Windsurf Shop',
                  name: 'Windsurf Shop'
                },
                invoice_date: '2020-09-30',
                due_date: '2020-09-30',
                terms: 'Net 30 days',
                po_number: '90000117',
                reference: '123456',
                status: 'draft',
                invoice_sent: true,
                currency: 'USD',
                currency_rate: 0.69,
                tax_inclusive: true,
                sub_total: 27500,
                total_tax: 2500,
                tax_code: '1234',
                discount_percentage: 5.5,
                total: 27500,
                balance: 27500,
                deposit: 0,
                customer_memo: 'Thank you for your business and have a great day!',
                line_items: [
                  {
                    row_id: '12345',
                    code: '120-C',
                    line_number: 1,
                    description:
                      'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',
                    type: 'sales_item',
                    tax_amount: 27500,
                    total_amount: 27500,
                    quantity: 1,
                    unit_price: 27500.5,
                    unit_of_measure: 'pc.',
                    discount_percentage: 0.01,
                    item: {
                      id: '12344'
                    },
                    tax_rate: {
                      id: '123456'
                    },
                    ledger_account: {
                      id: '123456',
                      nominal_code: 'N091',
                      code: '453'
                    },
                    row_version: '1-12345'
                  }
                ],
                billing_address: {
                  id: '123',
                  type: 'primary',
                  string: '25 Spring Street, Blackburn, VIC 3130',
                  name: 'HQ US',
                  line1: 'Main street',
                  line2: 'apt #',
                  line3: 'Suite #',
                  line4: 'delivery instructions',
                  street_number: '25',
                  city: 'San Francisco',
                  state: 'CA',
                  postal_code: '94104',
                  country: 'US',
                  latitude: '40.759211',
                  longitude: '-73.984638',
                  county: 'Santa Clara',
                  contact_name: 'Elon Musk',
                  salutation: 'Mr',
                  phone_number: '111-111-1111',
                  fax: '122-111-1111',
                  email: 'elon@musk.com',
                  website: 'https://elonmusk.com',
                  row_version: '1-12345'
                },
                shipping_address: {
                  id: '123',
                  type: 'primary',
                  string: '25 Spring Street, Blackburn, VIC 3130',
                  name: 'HQ US',
                  line1: 'Main street',
                  line2: 'apt #',
                  line3: 'Suite #',
                  line4: 'delivery instructions',
                  street_number: '25',
                  city: 'San Francisco',
                  state: 'CA',
                  postal_code: '94104',
                  country: 'US',
                  latitude: '40.759211',
                  longitude: '-73.984638',
                  county: 'Santa Clara',
                  contact_name: 'Elon Musk',
                  salutation: 'Mr',
                  phone_number: '111-111-1111',
                  fax: '122-111-1111',
                  email: 'elon@musk.com',
                  website: 'https://elonmusk.com',
                  row_version: '1-12345'
                },
                template_id: '123456',
                source_document_url: 'https://www.invoicesolution.com/invoice/123456',
                row_version: '1-12345'
              }
            }

            try {
              const { data } = await apideck.accounting.invoicesUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  /accounting/ledger-accounts:
    get:
      description: List Ledger Accounts
      operationId: ledgerAccountsAll
      parameters:
        - $ref: "#/components/parameters/raw"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
        - $ref: "#/components/parameters/cursor"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/GetLedgerAccountsResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: List Ledger Accounts
      tags:
        - Ledger Accounts
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.ledgerAccountsAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-field-name: ledgerAccounts
    post:
      description: Create Ledger Account
      operationId: ledgerAccountsAdd
      parameters:
        - $ref: "#/components/parameters/raw"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LedgerAccount"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/CreateLedgerAccountResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: Create Ledger Account
      tags:
        - Ledger Accounts
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              ledgerAccount: {
                display_id: '1-12345',
                nominal_code: 'N091',
                code: '453',
                classification: 'asset',
                type: 'bank',
                sub_type: 'CHECKING_ACCOUNT',
                name: 'Bank account',
                fully_qualified_name: 'Asset.Bank.Checking_Account',
                description: 'Main checking account',
                opening_balance: 75000,
                current_balance: 20000,
                currency: 'USD',
                tax_type: 'NONE',
                tax_rate: {
                  id: '123456'
                },
                level: 1,
                active: true,
                status: 'active',
                header: true,
                bank_account: {
                  iban: 'CH2989144532982975332',
                  bic: 'AUDSCHGGXXX',
                  bsb_number: '062-001',
                  branch_identifier: '001',
                  bank_code: 'BNH',
                  account_number: '123465',
                  account_name: 'SPACEX LLC',
                  account_type: 'credit_card',
                  currency: 'USD'
                },
                parent_account: {
                  id: '12345',
                  name: 'Bank Accounts',
                  display_id: '1-1100'
                },
                sub_account: false,
                last_reconciliation_date: '2020-09-30',
                row_version: '1-12345'
              }
            }

            try {
              const { data } = await apideck.accounting.ledgerAccountsAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  "/accounting/ledger-accounts/{id}":
    delete:
      description: Delete Ledger Account
      operationId: ledgerAccountsDelete
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
        - $ref: "#/components/parameters/raw"
      responses:
        "200":
          $ref: "#/components/responses/DeleteLedgerAccountResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: Delete Ledger Account
      tags:
        - Ledger Accounts
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.ledgerAccountsDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    get:
      description: Get Ledger Account
      operationId: ledgerAccountsOne
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
        - $ref: "#/components/parameters/raw"
      responses:
        "200":
          $ref: "#/components/responses/GetLedgerAccountResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: Get Ledger Account
      tags:
        - Ledger Accounts
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.ledgerAccountsOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    patch:
      description: Update Ledger Account
      operationId: ledgerAccountsUpdate
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
        - $ref: "#/components/parameters/raw"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LedgerAccount"
        required: true
      responses:
        "200":
          $ref: "#/components/responses/UpdateLedgerAccountResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: Update Ledger Account
      tags:
        - Ledger Accounts
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              ledgerAccount: {
                display_id: '1-12345',
                nominal_code: 'N091',
                code: '453',
                classification: 'asset',
                type: 'bank',
                sub_type: 'CHECKING_ACCOUNT',
                name: 'Bank account',
                fully_qualified_name: 'Asset.Bank.Checking_Account',
                description: 'Main checking account',
                opening_balance: 75000,
                current_balance: 20000,
                currency: 'USD',
                tax_type: 'NONE',
                tax_rate: {
                  id: '123456'
                },
                level: 1,
                active: true,
                status: 'active',
                header: true,
                bank_account: {
                  iban: 'CH2989144532982975332',
                  bic: 'AUDSCHGGXXX',
                  bsb_number: '062-001',
                  branch_identifier: '001',
                  bank_code: 'BNH',
                  account_number: '123465',
                  account_name: 'SPACEX LLC',
                  account_type: 'credit_card',
                  currency: 'USD'
                },
                parent_account: {
                  id: '12345',
                  name: 'Bank Accounts',
                  display_id: '1-1100'
                },
                sub_account: false,
                last_reconciliation_date: '2020-09-30',
                row_version: '1-12345'
              }
            }

            try {
              const { data } = await apideck.accounting.ledgerAccountsUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  /accounting/payments:
    get:
      description: List Payments
      operationId: paymentsAll
      parameters:
        - $ref: "#/components/parameters/raw"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
        - $ref: "#/components/parameters/cursor"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/GetPaymentsResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: List Payments
      tags:
        - Payments
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.paymentsAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-field-name: Payments
    post:
      description: Create Payment
      operationId: paymentsAdd
      parameters:
        - $ref: "#/components/parameters/raw"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Payment"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/CreatePaymentResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: Create Payment
      tags:
        - Payments
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              payment: {
                currency: 'USD',
                currency_rate: 0.69,
                total_amount: 49.99,
                reference: '123456',
                payment_method: 'Credit Card',
                payment_method_reference: '123456',
                accounts_receivable_account_type: 'Account',
                accounts_receivable_account_id: '123456',
                account: {
                  id: '123456',
                  nominal_code: 'N091',
                  code: '453'
                },
                transaction_date: '2021-05-01T12:00:00.000Z',
                customer: {
                  id: '12345',
                  display_name: 'Windsurf Shop',
                  name: 'Windsurf Shop'
                },
                reconciled: true,
                status: 'authorised',
                type: 'accounts_receivable',
                allocations: [
                  {
                    id: '123456',
                    type: 'invoice',
                    amount: 49.99
                  }
                ],
                note: 'Some notes about this payment',
                row_version: '1-12345',
                display_id: '123456'
              }
            }

            try {
              const { data } = await apideck.accounting.paymentsAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  "/accounting/payments/{id}":
    delete:
      description: Delete Payment
      operationId: paymentsDelete
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
        - $ref: "#/components/parameters/raw"
      responses:
        "200":
          $ref: "#/components/responses/DeletePaymentResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: Delete Payment
      tags:
        - Payments
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.paymentsDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    get:
      description: Get Payment
      operationId: paymentsOne
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
        - $ref: "#/components/parameters/raw"
      responses:
        "200":
          $ref: "#/components/responses/GetPaymentResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: Get Payment
      tags:
        - Payments
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.paymentsOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    patch:
      description: Update Payment
      operationId: paymentsUpdate
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
        - $ref: "#/components/parameters/raw"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Payment"
        required: true
      responses:
        "200":
          $ref: "#/components/responses/UpdatePaymentResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: Update Payment
      tags:
        - Payments
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              payment: {
                currency: 'USD',
                currency_rate: 0.69,
                total_amount: 49.99,
                reference: '123456',
                payment_method: 'Credit Card',
                payment_method_reference: '123456',
                accounts_receivable_account_type: 'Account',
                accounts_receivable_account_id: '123456',
                account: {
                  id: '123456',
                  nominal_code: 'N091',
                  code: '453'
                },
                transaction_date: '2021-05-01T12:00:00.000Z',
                customer: {
                  id: '12345',
                  display_name: 'Windsurf Shop',
                  name: 'Windsurf Shop'
                },
                reconciled: true,
                status: 'authorised',
                type: 'accounts_receivable',
                allocations: [
                  {
                    id: '123456',
                    type: 'invoice',
                    amount: 49.99
                  }
                ],
                note: 'Some notes about this payment',
                row_version: '1-12345',
                display_id: '123456'
              }
            }

            try {
              const { data } = await apideck.accounting.paymentsUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  /accounting/profit-and-loss:
    get:
      description: Get Profit and Loss
      operationId: profitAndLossOne
      parameters:
        - $ref: "#/components/parameters/raw"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
        - $ref: "#/components/parameters/profitAndLossFilter"
      responses:
        "200":
          $ref: "#/components/responses/GetProfitAndLossResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: Get Profit and Loss
      tags:
        - Profit and Loss
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.profitAndLossOne({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-field-name: profitAndLoss
  /accounting/suppliers:
    get:
      description: List Suppliers
      operationId: suppliersAll
      parameters:
        - $ref: "#/components/parameters/raw"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
        - $ref: "#/components/parameters/cursor"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/GetSuppliersResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: List Suppliers
      tags:
        - Suppliers
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.suppliersAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-field-name: Suppliers
    post:
      description: Create Supplier
      operationId: suppliersAdd
      parameters:
        - $ref: "#/components/parameters/raw"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Supplier"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/CreateSupplierResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: Create Supplier
      tags:
        - Suppliers
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              supplier: {
                company_name: 'SpaceX',
                display_name: 'Windsurf Shop',
                title: 'CEO',
                first_name: 'Elon',
                middle_name: 'D.',
                last_name: 'Musk',
                suffix: 'Jr.',
                addresses: [
                  {
                    id: '123',
                    type: 'primary',
                    string: '25 Spring Street, Blackburn, VIC 3130',
                    name: 'HQ US',
                    line1: 'Main street',
                    line2: 'apt #',
                    line3: 'Suite #',
                    line4: 'delivery instructions',
                    street_number: '25',
                    city: 'San Francisco',
                    state: 'CA',
                    postal_code: '94104',
                    country: 'US',
                    latitude: '40.759211',
                    longitude: '-73.984638',
                    county: 'Santa Clara',
                    contact_name: 'Elon Musk',
                    salutation: 'Mr',
                    phone_number: '111-111-1111',
                    fax: '122-111-1111',
                    email: 'elon@musk.com',
                    website: 'https://elonmusk.com',
                    row_version: '1-12345'
                  }
                ],
                notes: 'Some notes about this supplier',
                phone_numbers: [
                  {
                    id: '12345',
                    country_code: '1',
                    area_code: '323',
                    number: '111-111-1111',
                    extension: '105',
                    type: 'primary'
                  }
                ],
                emails: [
                  {
                    id: '123',
                    email: 'elon@musk.com',
                    type: 'primary'
                  }
                ],
                websites: [
                  {
                    id: '12345',
                    url: 'http://example.com',
                    type: 'primary'
                  }
                ],
                bank_accounts: [
                  {
                    iban: 'CH2989144532982975332',
                    bic: 'AUDSCHGGXXX',
                    bsb_number: '062-001',
                    branch_identifier: '001',
                    bank_code: 'BNH',
                    account_number: '123465',
                    account_name: 'SPACEX LLC',
                    account_type: 'credit_card',
                    currency: 'USD'
                  }
                ],
                tax_rate: {
                  id: '123456'
                },
                tax_number: 'US123945459',
                currency: 'USD',
                account: {
                  id: '123456',
                  nominal_code: 'N091',
                  code: '453'
                },
                status: 'active',
                row_version: '1-12345'
              }
            }

            try {
              const { data } = await apideck.accounting.suppliersAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  "/accounting/suppliers/{id}":
    delete:
      description: Delete Supplier
      operationId: suppliersDelete
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
        - $ref: "#/components/parameters/raw"
      responses:
        "200":
          $ref: "#/components/responses/DeleteSupplierResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: Delete Supplier
      tags:
        - Suppliers
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.suppliersDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    get:
      description: Get Supplier
      operationId: suppliersOne
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
        - $ref: "#/components/parameters/raw"
      responses:
        "200":
          $ref: "#/components/responses/GetSupplierResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: Get Supplier
      tags:
        - Suppliers
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.suppliersOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    patch:
      description: Update Supplier
      operationId: suppliersUpdate
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
        - $ref: "#/components/parameters/raw"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Supplier"
        required: true
      responses:
        "200":
          $ref: "#/components/responses/UpdateSupplierResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: Update Supplier
      tags:
        - Suppliers
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              supplier: {
                company_name: 'SpaceX',
                display_name: 'Windsurf Shop',
                title: 'CEO',
                first_name: 'Elon',
                middle_name: 'D.',
                last_name: 'Musk',
                suffix: 'Jr.',
                addresses: [
                  {
                    id: '123',
                    type: 'primary',
                    string: '25 Spring Street, Blackburn, VIC 3130',
                    name: 'HQ US',
                    line1: 'Main street',
                    line2: 'apt #',
                    line3: 'Suite #',
                    line4: 'delivery instructions',
                    street_number: '25',
                    city: 'San Francisco',
                    state: 'CA',
                    postal_code: '94104',
                    country: 'US',
                    latitude: '40.759211',
                    longitude: '-73.984638',
                    county: 'Santa Clara',
                    contact_name: 'Elon Musk',
                    salutation: 'Mr',
                    phone_number: '111-111-1111',
                    fax: '122-111-1111',
                    email: 'elon@musk.com',
                    website: 'https://elonmusk.com',
                    row_version: '1-12345'
                  }
                ],
                notes: 'Some notes about this supplier',
                phone_numbers: [
                  {
                    id: '12345',
                    country_code: '1',
                    area_code: '323',
                    number: '111-111-1111',
                    extension: '105',
                    type: 'primary'
                  }
                ],
                emails: [
                  {
                    id: '123',
                    email: 'elon@musk.com',
                    type: 'primary'
                  }
                ],
                websites: [
                  {
                    id: '12345',
                    url: 'http://example.com',
                    type: 'primary'
                  }
                ],
                bank_accounts: [
                  {
                    iban: 'CH2989144532982975332',
                    bic: 'AUDSCHGGXXX',
                    bsb_number: '062-001',
                    branch_identifier: '001',
                    bank_code: 'BNH',
                    account_number: '123465',
                    account_name: 'SPACEX LLC',
                    account_type: 'credit_card',
                    currency: 'USD'
                  }
                ],
                tax_rate: {
                  id: '123456'
                },
                tax_number: 'US123945459',
                currency: 'USD',
                account: {
                  id: '123456',
                  nominal_code: 'N091',
                  code: '453'
                },
                status: 'active',
                row_version: '1-12345'
              }
            }

            try {
              const { data } = await apideck.accounting.suppliersUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  /accounting/tax-rates:
    get:
      description: |
        List Tax Rates. Note: Not all connectors return the actual rate/percentage value. In this case, only the tax code or reference is returned. Connectors Affected: Quickbooks
      operationId: taxRatesAll
      parameters:
        - $ref: "#/components/parameters/raw"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
        - $ref: "#/components/parameters/cursor"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/taxRatesFilter"
      responses:
        "200":
          $ref: "#/components/responses/GetTaxRatesResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: List Tax Rates
      tags:
        - Tax Rates
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.taxRatesAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-field-name: taxRates
    post:
      description: Create Tax Rate
      operationId: taxRatesAdd
      parameters:
        - $ref: "#/components/parameters/raw"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaxRate"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/CreateTaxRateResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: Create Tax Rate
      tags:
        - Tax Rates
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              taxRate: {
                id: '1234',
                name: 'GST on Purchases',
                code: 'ABN',
                description: 'Reduced rate GST Purchases',
                effective_tax_rate: 10,
                total_tax_rate: 10,
                tax_payable_account_id: '123456',
                tax_remitted_account_id: '123456',
                components: [
                  {
                    id: '10',
                    name: 'GST',
                    rate: 10,
                    compound: true
                  }
                ],
                type: 'NONE',
                report_tax_type: 'NONE',
                original_tax_rate_id: '12345',
                status: 'active',
                row_version: '1-12345'
              }
            }

            try {
              const { data } = await apideck.accounting.taxRatesAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  "/accounting/tax-rates/{id}":
    delete:
      description: Delete Tax Rate
      operationId: taxRatesDelete
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
        - $ref: "#/components/parameters/raw"
      responses:
        "200":
          $ref: "#/components/responses/DeleteTaxRateResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: Delete Tax Rate
      tags:
        - Tax Rates
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.taxRatesDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    get:
      description: |
        Get Tax Rate. Note: Not all connectors return the actual rate/percentage value. In this case, only the tax code or reference is returned. Support will soon be added to return the actual rate/percentage by doing additional calls in the background to provide the full view of a given tax rate. Connectors Affected: Quickbooks
      operationId: taxRatesOne
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
        - $ref: "#/components/parameters/raw"
      responses:
        "200":
          $ref: "#/components/responses/GetTaxRateResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: Get Tax Rate
      tags:
        - Tax Rates
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.taxRatesOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    patch:
      description: Update Tax Rate
      operationId: taxRatesUpdate
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
        - $ref: "#/components/parameters/raw"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaxRate"
        required: true
      responses:
        "200":
          $ref: "#/components/responses/UpdateTaxRateResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: Update Tax Rate
      tags:
        - Tax Rates
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              taxRate: {
                id: '1234',
                name: 'GST on Purchases',
                code: 'ABN',
                description: 'Reduced rate GST Purchases',
                effective_tax_rate: 10,
                total_tax_rate: 10,
                tax_payable_account_id: '123456',
                tax_remitted_account_id: '123456',
                components: [
                  {
                    id: '10',
                    name: 'GST',
                    rate: 10,
                    compound: true
                  }
                ],
                type: 'NONE',
                report_tax_type: 'NONE',
                original_tax_rate_id: '12345',
                status: 'active',
                row_version: '1-12345'
              }
            }

            try {
              const { data } = await apideck.accounting.taxRatesUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
components:
  parameters:
    applicationId:
      description: The ID of your Unify application
      in: header
      name: x-apideck-app-id
      required: true
      schema:
        type: string
    balanceSheetFilter:
      description: Apply filters
      explode: true
      in: query
      name: filter
      schema:
        $ref: "#/components/schemas/BalanceSheetFilter"
      style: deepObject
    consumerId:
      description: ID of the consumer which you want to get or push data from
      in: header
      name: x-apideck-consumer-id
      required: true
      schema:
        type: string
    cursor:
      description: Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.
      in: query
      name: cursor
      schema:
        nullable: true
        type: string
    customersFilter:
      description: Apply filters
      explode: true
      in: query
      name: filter
      schema:
        $ref: "#/components/schemas/CustomersFilter"
      style: deepObject
    id:
      description: ID of the record you are acting upon.
      in: path
      name: id
      required: true
      schema:
        type: string
    invoiceItemsFilter:
      description: Apply filters
      explode: true
      in: query
      name: filter
      schema:
        $ref: "#/components/schemas/InvoiceItemsFilter"
      style: deepObject
    invoicesSort:
      description: Apply sorting
      explode: true
      in: query
      name: sort
      schema:
        $ref: "#/components/schemas/InvoicesSort"
      style: deepObject
    limit:
      description: Number of records to return
      in: query
      name: limit
      schema:
        default: 20
        maximum: 200
        minimum: 1
        type: integer
    passThrough:
      description: Optional unmapped key/values that will be passed through to downstream as query parameters
      explode: true
      in: query
      name: pass_through
      schema:
        $ref: "#/components/schemas/Passthrough"
      style: deepObject
    profitAndLossFilter:
      description: Apply filters
      explode: true
      in: query
      name: filter
      schema:
        $ref: "#/components/schemas/ProfitAndLossFilter"
      style: deepObject
    raw:
      description: Include raw response. Mostly used for debugging purposes
      in: query
      name: raw
      schema:
        default: false
        type: boolean
    serviceId:
      description: Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
      in: header
      name: x-apideck-service-id
      schema:
        type: string
    taxRatesFilter:
      description: Apply filters
      explode: true
      in: query
      name: filter
      schema:
        $ref: "#/components/schemas/TaxRatesFilter"
      style: deepObject
  responses:
    BadRequestResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BadRequestResponse"
      description: Bad Request
    CompanyInfo:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CompanyInfo"
      description: Company Info
    CreateBillResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreateBillResponse"
      description: Bill created
    CreateCreditNoteResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreateCreditNoteResponse"
      description: Credit Note created
    CreateCustomerResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreateCustomerResponse"
      description: Customers
    CreateInvoiceItemResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreateInvoiceItemResponse"
      description: InvoiceItems
    CreateInvoiceResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreateInvoiceResponse"
      description: Invoice created
    CreateLedgerAccountResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreateLedgerAccountResponse"
      description: LedgerAccount created
    CreatePaymentResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreatePaymentResponse"
      description: Payment created
    CreateSupplierResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreateSupplierResponse"
      description: Supplier created
    CreateTaxRateResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreateTaxRateResponse"
      description: TaxRate created
    DeleteBillResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DeleteBillResponse"
      description: Bill deleted
    DeleteCreditNoteResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DeleteCreditNoteResponse"
      description: Credit Note deleted
    DeleteCustomerResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DeleteCustomerResponse"
      description: Customers
    DeleteInvoiceItemResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DeleteTaxRateResponse"
      description: InvoiceItems
    DeleteInvoiceResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DeleteInvoiceResponse"
      description: Invoice deleted
    DeleteLedgerAccountResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DeleteLedgerAccountResponse"
      description: LedgerAccount deleted
    DeletePaymentResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DeletePaymentResponse"
      description: Payment deleted
    DeleteSupplierResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DeleteSupplierResponse"
      description: Supplier deleted
    DeleteTaxRateResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DeleteTaxRateResponse"
      description: TaxRates deleted
    GetBalanceSheetResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GetBalanceSheetResponse"
      description: BalanceSheet
    GetBillResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GetBillResponse"
      description: Bill
    GetBillsResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GetBillsResponse"
      description: Bills
    GetCompanyInfoResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GetCompanyInfoResponse"
      description: CompanyInfo
    GetCreditNoteResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GetCreditNoteResponse"
      description: Credit Note
    GetCreditNotesResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GetCreditNotesResponse"
      description: Credit Notes
    GetCustomerResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GetCustomerResponse"
      description: Customer
    GetCustomersResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GetCustomersResponse"
      description: Customers
    GetInvoiceItemResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GetInvoiceItemResponse"
      description: InvoiceItems
    GetInvoiceItemsResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GetInvoiceItemsResponse"
      description: InvoiceItems
    GetInvoiceResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GetInvoiceResponse"
      description: Invoice
    GetInvoicesResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GetInvoicesResponse"
      description: Invoices
    GetLedgerAccountResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GetLedgerAccountResponse"
      description: LedgerAccount
    GetLedgerAccountsResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GetLedgerAccountsResponse"
      description: LedgerAccounts
    GetPaymentResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GetPaymentResponse"
      description: Payment
    GetPaymentsResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GetPaymentsResponse"
      description: Payments
    GetProfitAndLossResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GetProfitAndLossResponse"
      description: Profit & Loss Report
    GetSupplierResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GetSupplierResponse"
      description: Supplier
    GetSuppliersResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GetSuppliersResponse"
      description: Suppliers
    GetTaxRateResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GetTaxRateResponse"
      description: TaxRate
    GetTaxRatesResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GetTaxRatesResponse"
      description: TaxRates
    NotFoundResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/NotFoundResponse"
      description: The specified resource was not found
    NotImplementedResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/NotImplementedResponse"
      description: Not Implemented
    PaymentRequiredResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/PaymentRequiredResponse"
      description: Payment Required
    TooManyRequestsResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TooManyRequestsResponse"
      description: Too Many Requests
    UnauthorizedResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UnauthorizedResponse"
      description: Unauthorized
    UnexpectedErrorResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UnexpectedErrorResponse"
      description: Unexpected error
    UnprocessableResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UnprocessableResponse"
      description: Unprocessable
    UpdateBillResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UpdateBillResponse"
      description: Bill Updated
    UpdateCreditNoteResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UpdateCreditNoteResponse"
      description: Credit Note updated
    UpdateCustomerResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UpdateCustomerResponse"
      description: Customers
    UpdateInvoiceItemResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UpdateInvoiceItemsResponse"
      description: InvoiceItems
    UpdateInvoiceResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UpdateInvoiceResponse"
      description: Invoice updated
    UpdateLedgerAccountResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UpdateLedgerAccountResponse"
      description: LedgerAccount updated
    UpdatePaymentResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UpdatePaymentResponse"
      description: Payment Updated
    UpdateSupplierResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UpdateSupplierResponse"
      description: Supplier updated
    UpdateTaxRateResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UpdateTaxRateResponse"
      description: TaxRate updated
  schemas:
    AccountingCustomer:
      properties:
        addresses:
          items:
            $ref: "#/components/schemas/Address"
          type: array
        bank_accounts:
          items:
            $ref: "#/components/schemas/BankAccount"
          type: array
        company_name:
          $ref: "#/components/schemas/CompanyName"
        created_at:
          $ref: "#/components/schemas/CreatedAt"
        created_by:
          $ref: "#/components/schemas/CreatedBy"
        currency:
          $ref: "#/components/schemas/Currency"
        display_id:
          description: Display ID
          example: EMP00101
          nullable: true
          title: Display ID
          type: string
        display_name:
          description: Display Name
          example: Windsurf Shop
          nullable: true
          title: Display Name
          type: string
        emails:
          items:
            $ref: "#/components/schemas/Email"
          type: array
        first_name:
          $ref: "#/components/schemas/FirstName"
        id:
          $ref: "#/components/schemas/Id"
        individual:
          description: Is this an individual or business customer
          example: true
          nullable: true
          title: Is individual
          type: boolean
        last_name:
          $ref: "#/components/schemas/LastName"
        middle_name:
          $ref: "#/components/schemas/MiddleName"
        notes:
          description: Some notes about this customer
          example: Some notes about this customer
          nullable: true
          title: Notes
          type: string
        phone_numbers:
          items:
            $ref: "#/components/schemas/PhoneNumber"
          type: array
        row_version:
          $ref: "#/components/schemas/RowVersion"
        status:
          description: Customer status
          enum:
            - active
            - inactive
            - archived
            - gdpr-erasure-request
            - unknown
          example: active
          nullable: true
          title: Status
          type: string
          x-apideck-enum-id: customers.status
          x-graphql-type-name: CustomerStatus
        suffix:
          $ref: "#/components/schemas/Suffix"
        tax_number:
          $ref: "#/components/schemas/TaxNumber"
        tax_rate:
          $ref: "#/components/schemas/LinkedTaxRate"
        title:
          $ref: "#/components/schemas/Title"
        updated_at:
          $ref: "#/components/schemas/UpdatedAt"
        updated_by:
          $ref: "#/components/schemas/UpdatedBy"
        websites:
          items:
            $ref: "#/components/schemas/Website"
          type: array
      type: object
      x-apideck-schema-id: Customer
      x-apideck-weights:
        addresses: high
        bank_accounts: high
        company_name: high
        created_at: medium
        created_by: edge-case
        currency: medium
        display_id: edge-case
        display_name: edge-case
        emails: high
        first_name: high
        id: high
        individual: medium
        last_name: high
        middle_name: low
        notes: low
        phone_numbers: high
        row_version: edge-case
        status: high
        suffix: low
        tax_number: medium
        tax_rate: medium
        title: critical
        updated_at: medium
        updated_by: edge-case
        websites: medium
      x-graphql-type-name: Customer
    AccountingEventType:
      enum:
        - "*"
        - accounting.customer.created
        - accounting.customer.updated
        - accounting.customer.deleted
        - accounting.invoice.created
        - accounting.invoice.updated
        - accounting.invoice.deleted
        - accounting.invoice_item.created
        - accounting.invoice_item.updated
        - accounting.invoice_item.deleted
        - accounting.ledger_account.created
        - accounting.ledger_account.updated
        - accounting.ledger_account.deleted
        - accounting.tax_rate.created
        - accounting.tax_rate.updated
        - accounting.tax_rate.deleted
        - accounting.bill.created
        - accounting.bill.updated
        - accounting.bill.deleted
        - accounting.payment.created
        - accounting.payment.updated
        - accounting.payment.deleted
        - accounting.supplier.created
        - accounting.supplier.updated
        - accounting.supplier.deleted
      example: accounting.invoice.created
      type: string
      x-apideck-enum-id: accounting.events
    AccountingWebhookEvent:
      allOf:
        - properties:
            entity_id:
              description: The service provider's ID of the entity that triggered this event
              example: 123456ASDF
              type: string
            entity_type:
              description: The type entity that triggered this event
              example: Company
              type: string
            entity_url:
              description: The url to retrieve entity detail.
              example: https://unify.apideck.com/crm/contacts/123456
              type: string
            event_id:
              description: Unique reference to this request event
              example: 9755c355-56c3-4a2f-a2da-86ff4411fccb
              type: string
            execution_attempt:
              description: The current count this request event has been attempted
              example: 2
              type: number
            occurred_at:
              description: ISO Datetime for when the original event occurred
              example: 2021-10-01T03:14:55.419Z
              type: string
            service_id:
              description: Service provider identifier
              example: close
              type: string
          type: object
          x-apideck-schema-id: WebhookEvent
        - properties:
            event_type:
              $ref: "#/components/schemas/AccountingEventType"
          type: object
      x-sdk-exclude: true
    Active:
      example: true
      nullable: true
      title: Is active
      type: boolean
    Address:
      additionalProperties: false
      properties:
        city:
          description: Name of city.
          example: San Francisco
          nullable: true
          type: string
        contact_name:
          example: Elon Musk
          nullable: true
          type: string
        country:
          description: country code according to ISO 3166-1 alpha-2.
          example: US
          nullable: true
          type: string
        county:
          description: Address field that holds a sublocality, such as a county
          example: Santa Clara
          nullable: true
          type: string
        email:
          example: elon@musk.com
          nullable: true
          type: string
        fax:
          example: 122-111-1111
          nullable: true
          type: string
        id:
          example: "123"
          nullable: true
          type: string
        latitude:
          example: "40.759211"
          nullable: true
          type: string
        line1:
          description: "Line 1 of the address e.g. number, street, suite, apt #, etc."
          example: Main street
          nullable: true
          type: string
        line2:
          description: Line 2 of the address
          example: "apt #"
          nullable: true
          type: string
        line3:
          description: Line 3 of the address
          example: "Suite #"
          nullable: true
          type: string
        line4:
          description: Line 4 of the address
          example: delivery instructions
          nullable: true
          type: string
        longitude:
          example: "-73.984638"
          nullable: true
          type: string
        name:
          example: HQ US
          nullable: true
          type: string
        phone_number:
          example: 111-111-1111
          nullable: true
          type: string
        postal_code:
          description: Zip code or equivalent.
          example: "94104"
          nullable: true
          type: string
        row_version:
          $ref: "#/components/schemas/RowVersion"
        salutation:
          example: Mr
          nullable: true
          type: string
        state:
          description: Name of state
          example: CA
          nullable: true
          type: string
        street_number:
          description: Street number
          example: "25"
          nullable: true
          type: string
        string:
          example: 25 Spring Street, Blackburn, VIC 3130
          nullable: true
          title: The address string. Some APIs don't provide structured address data.
          type: string
        type:
          enum:
            - primary
            - secondary
            - home
            - office
            - shipping
            - billing
            - other
          example: primary
          type: string
          x-apideck-enum-id: addresses.type
          x-graphql-type-name: AddressType
        website:
          example: https://elonmusk.com
          nullable: true
          type: string
      type: object
      x-apideck-schema-id: Address
      x-apideck-weights:
        city: high
        contact_name: edge-case
        country: high
        county: edge-case
        email: edge-case
        fax: edge-case
        id: edge-case
        latitude: low
        line1: high
        line2: low
        line3: edge-case
        line4: edge-case
        longitude: low
        name: edge-case
        phone_number: edge-case
        postal_code: high
        row_version: edge-case
        salutation: edge-case
        state: high
        street_number: low
        string: low
        type: critical
        website: edge-case
    BadRequestResponse:
      properties:
        detail:
          anyOf:
            - example: Missing property foobar
              type: string
            - example:
                missing:
                  - foobar: required
              type: object
          description: Contains parameter or domain specific information related to the error and why it occurred.
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Bad Request
          type: string
        message:
          description: A human-readable message providing more details about the error.
          example: Invalid Params
          type: string
        ref:
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#requestvalidationerror
          type: string
        status_code:
          description: HTTP status code
          example: 400
          type: number
        type_name:
          description: The type of error returned
          example: RequestValidationError
          type: string
      type: object
      x-apideck-schema-id: BadRequest
    BalanceSheet:
      additionalProperties: false
      properties:
        assets:
          example:
            current_assets:
              accounts:
                - id: "1"
                  name: Accounts Receivable (A/R)
                  value: 10000
                - id: "2"
                  name: Accounts Payable (A/P)
                  value: 10000
              total: 100000
            fixed_assets:
              accounts:
                - id: "1"
                  name: Accounts Receivable (A/R)
                  value: 10000
                - id: "2"
                  name: Accounts Payable (A/P)
                  value: 10000
              total: 100000
            total: 200000
          properties:
            current_assets:
              properties:
                accounts:
                  items:
                    properties:
                      id:
                        $ref: "#/components/schemas/Id"
                      name:
                        description: The name of the current asset account
                        example: Accounts Receivable (A/R)
                        title: Account Name
                        type: string
                      value:
                        description: The value of the current asset
                        example: 10000
                        title: Value
                        type: number
                    type: object
                    x-graphql-type-name: CurrentAssetAccountsList
                  type: array
                total:
                  description: Total current assets
                  example: 100000
                  title: Total Current Assets
                  type: number
              required:
                - total
                - accounts
              type: object
              x-apideck-weights:
                accounts: medium
                total: medium
            fixed_assets:
              properties:
                accounts:
                  items:
                    properties:
                      id:
                        $ref: "#/components/schemas/Id"
                      name:
                        description: The name of the fixed asset account
                        example: Accounts Receivable (A/R)
                        title: Account Name
                        type: string
                      value:
                        description: The value of the fixed asset
                        example: 10000
                        title: Value
                        type: number
                    type: object
                    x-apideck-weights:
                      id: medium
                      name: medium
                      value: medium
                    x-graphql-type-name: FixedAssetAccountsList
                  type: array
                total:
                  description: Total fixed assets
                  example: 100000
                  title: Total Fixed Assets
                  type: number
              required:
                - total
                - accounts
              type: object
              x-apideck-weights:
                accounts: medium
                total: medium
            total:
              description: Total assets
              example: 100000
              title: Total Assets
              type: number
          required:
            - total
            - current_assets
            - fixed_assets
          type: object
          x-apideck-weights:
            current_assets: medium
            fixed_assets: medium
            total: medium
        created_at:
          $ref: "#/components/schemas/CreatedAt"
        created_by:
          $ref: "#/components/schemas/CreatedBy"
        end_date:
          description: The start date of the report
          example: 2017-01-01
          pattern: ^\d{4}-\d{2}-\d{2}$
          title: Start Date
          type: string
        equity:
          example:
            items:
              - id: "1"
                name: Retained Earnings
                value: 10000
            total: 200000
          properties:
            items:
              items:
                properties:
                  id:
                    $ref: "#/components/schemas/Id"
                  name:
                    description: The type of the equity
                    example: Retained Earnings
                    title: Account Name
                    type: string
                  value:
                    description: The equity amount
                    example: 10000
                    title: Value
                    type: number
                type: object
                x-apideck-weights:
                  id: medium
                  name: medium
                  value: medium
                x-graphql-type-name: EquityItemsList
              type: array
            total:
              description: Total equity
              example: 100000
              title: Total Equity
              type: number
          required:
            - total
            - items
          type: object
          x-apideck-weights:
            items: medium
            total: medium
        id:
          $ref: "#/components/schemas/Id"
        liabilities:
          example:
            accounts:
              - id: "1"
                name: Accounts Payable (A/P)
                value: 10000
            total: 200000
          properties:
            accounts:
              items:
                properties:
                  id:
                    $ref: "#/components/schemas/Id"
                  name:
                    description: The name of the liability account
                    example: Accounts Payable (A/P)
                    title: Account Name
                    type: string
                  value:
                    description: The value of the liability
                    example: 10000
                    title: Value
                    type: number
                type: object
                x-apideck-weights:
                  id: medium
                  name: medium
                  value: medium
                x-graphql-type-name: LiabilityAccountsList
              type: array
            total:
              description: Total liabilities
              example: 100000
              title: Total Liabilities
              type: number
          required:
            - total
            - accounts
          type: object
          x-apideck-weights:
            accounts: medium
            total: medium
        report_name:
          description: The name of the report
          example: BalanceSheet
          title: Report Name
          type: string
        start_date:
          description: The start date of the report
          example: 2017-01-01
          pattern: ^\d{4}-\d{2}-\d{2}$
          title: Start Date
          type: string
        updated_at:
          $ref: "#/components/schemas/UpdatedAt"
        updated_by:
          $ref: "#/components/schemas/UpdatedBy"
      required:
        - report_name
        - start_date
        - assets
        - liabilities
        - equity
      type: object
      x-apideck-schema-id: BalanceSheet
      x-apideck-weights:
        assets: critical
        created_at: edge-case
        created_by: edge-case
        equity: critical
        id: medium
        liabilities: critical
        report_name: medium
        start_date: critical
        updated_at: low
        updated_by: edge-case
    BalanceSheetFilter:
      additionalProperties: false
      example:
        end_date: 2021-12-31
        start_date: 2021-01-01
      properties:
        end_date:
          description: Filter by end date. If end date is given, start date is required.
          example: 2021-12-31
          title: End date
          type: string
        start_date:
          description: Filter by start date. If start date is given, end date is required.
          example: 2021-01-01
          title: Start date
          type: string
      type: object
      x-apideck-schema-id: BalanceSheetFilter
      x-graphql-type-name: BalanceSheetFilter
    BankAccount:
      additionalProperties: false
      properties:
        account_name:
          description: The name which you used in opening your bank account.
          example: SPACEX LLC
          nullable: true
          title: Bank Account Name
          type: string
        account_number:
          description: A bank account number is a number that is tied to your bank account. If you have several bank accounts, such as personal, joint, business (and so on), each account will have a different account number.
          example: "123465"
          nullable: true
          title: Bank Account Number
          type: string
        account_type:
          description: The type of bank account.
          enum:
            - bank_account
            - credit_card
            - other
          example: credit_card
          nullable: true
          title: Account Type
          type: string
          x-apideck-enum-id: bank-accounts.account_type
        bank_code:
          description: A bank code is a code assigned by a central bank, a bank supervisory body or a Bankers Association in a country to all its licensed member banks or financial institutions.
          example: BNH
          nullable: true
          title: Bank Code
          type: string
        bic:
          example: AUDSCHGGXXX
          nullable: true
          type: string
        branch_identifier:
          description: A branch identifier is a unique identifier for a branch of a bank or financial institution.
          example: "001"
          nullable: true
          title: Branch Identifier
          type: string
        bsb_number:
          description: A BSB is a 6 digit numeric code used for identifying the branch of an Australian or New Zealand bank or financial institution.
          example: 062-001
          nullable: true
          title: BSB Number
          type: string
        currency:
          $ref: "#/components/schemas/Currency"
        iban:
          example: CH2989144532982975332
          nullable: true
          type: string
      type: object
      x-apideck-schema-id: BankAccount
      x-apideck-weights:
        account_number: critical
        bsb_number: edge-case
        iban: high
    Bill:
      additionalProperties: false
      properties:
        balance:
          description: Balance of bill due.
          example: 27500
          nullable: true
          title: Balance
          type: number
        bill_date:
          description: Date bill was issued - YYYY-MM-DD.
          example: 2020-09-30
          format: date
          title: Bill date
          type: string
        created_at:
          $ref: "#/components/schemas/CreatedAt"
        created_by:
          $ref: "#/components/schemas/CreatedBy"
        currency:
          $ref: "#/components/schemas/Currency"
        currency_rate:
          $ref: "#/components/schemas/CurrencyRate"
        deposit:
          description: Amount of deposit made to this bill.
          example: 0
          nullable: true
          title: Deposit
          type: number
        downstream_id:
          $ref: "#/components/schemas/DownstreamId"
        due_date:
          description: The due date is the date on which a payment is scheduled to be received by the supplier - YYYY-MM-DD.
          example: 2020-10-30
          format: date
          title: Due date
          type: string
        id:
          $ref: "#/components/schemas/Id"
        ledger_account:
          $ref: "#/components/schemas/LinkedLedgerAccount"
        line_items:
          items:
            $ref: "#/components/schemas/BillLineItem"
          type: array
        notes:
          example: Some notes about this bill.
          nullable: true
          title: Notes
          type: string
        paid_date:
          description: The paid date is the date on which a payment was sent to the supplier - YYYY-MM-DD.
          example: 2020-10-30
          format: date
          nullable: true
          title: Paid date
          type: string
        po_number:
          description: A PO Number uniquely identifies a purchase order and is generally defined by the buyer. The buyer will match the PO number in the invoice to the Purchase Order.
          example: "90000117"
          nullable: true
          title: Purchase Order number
          type: string
        reference:
          description: Optional invoice reference.
          example: "123456"
          nullable: true
          title: Invoice reference
          type: string
        row_version:
          $ref: "#/components/schemas/RowVersion"
        status:
          description: Invoice status
          enum:
            - draft
            - submitted
            - authorised
            - partially_paid
            - paid
            - void
            - credit
            - deleted
          example: draft
          nullable: true
          title: Status
          type: string
          x-apideck-enum-id: invoices.status
        sub_total:
          description: Sub-total amount, normally before tax.
          example: 27500
          nullable: true
          title: Sub-total amount
          type: number
        supplier:
          $ref: "#/components/schemas/LinkedSupplier"
        tax_code:
          description: Applicable tax id/code override if tax is not supplied on a line item basis.
          example: "1234"
          nullable: true
          title: Tax Code
          type: string
        tax_inclusive:
          $ref: "#/components/schemas/TaxInclusive"
        terms:
          description: Terms of payment.
          example: Net 30 days
          nullable: true
          title: Terms
          type: string
        total:
          description: Total amount of bill, including tax.
          example: 27500
          nullable: true
          title: Total amount
          type: number
        total_tax:
          description: Total tax amount applied to this bill.
          example: 2500
          nullable: true
          title: Total tax amount
          type: number
        updated_at:
          $ref: "#/components/schemas/UpdatedAt"
        updated_by:
          $ref: "#/components/schemas/UpdatedBy"
      type: object
      x-apideck-schema-id: Bill
      x-apideck-weights:
        balance: high
        bill_date: critical
        created_at: edge-case
        created_by: low
        currency: medium
        currency_rate: low
        deposit: low
        downstream_id: low
        due_date: critical
        id: critical
        ledger_account: low
        line_items: critical
        notes: low
        paid_date: high
        po_number: low
        reference: low
        row_version: edge-case
        status: critical
        sub_total: high
        supplier: high
        tax_code: medium
        tax_inclusive: low
        terms: low
        total: critical
        total_tax: high
        updated_at: high
        updated_by: low
    BillLineItem:
      additionalProperties: false
      properties:
        code:
          description: User defined item code
          example: 120-C
          nullable: true
          title: Item code
          type: string
        description:
          description: User defined description
          example: Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.
          nullable: true
          title: Description
          type: string
        discount_percentage:
          description: Discount percentage
          example: 0.01
          nullable: true
          title: Discount amount
          type: number
        id:
          $ref: "#/components/schemas/Id"
        item:
          $ref: "#/components/schemas/LinkedInvoiceItem"
        ledger_account:
          $ref: "#/components/schemas/LinkedLedgerAccount"
        line_number:
          description: Line number in the invoice
          example: 1
          nullable: true
          title: Line number
          type: integer
        quantity:
          $ref: "#/components/schemas/Quantity"
        row_id:
          description: Row ID
          example: "12345"
          title: Row ID
          type: string
        row_version:
          $ref: "#/components/schemas/RowVersion"
        tax_amount:
          description: Tax amount
          example: 27500
          nullable: true
          title: Tax amount
          type: number
        tax_rate:
          $ref: "#/components/schemas/LinkedTaxRate"
        total_amount:
          description: Total amount of the line item
          example: 27500
          nullable: true
          title: Total amount
          type: number
        type:
          description: Bill Line Item type
          enum:
            - expense_item
            - expense_account
          example: expense_account
          nullable: true
          title: Type
          type: string
          x-apideck-enum-id: bills.line_items.type
          x-graphql-type-name: BillLineItemType
        unit_of_measure:
          $ref: "#/components/schemas/UnitOfMeasure"
        unit_price:
          $ref: "#/components/schemas/UnitPrice"
      type: object
      x-apideck-schema-id: BillLineItem
      x-apideck-weights:
        code: high
        created_at: edge-case
        description: high
        discount_percentage: edge-case
        id: critical
        item: high
        ledger_account: low
        line_number: edge-case
        quantity: medium
        row_id: edge-case
        row_version: edge-case
        tax_amount: low
        tax_rate: low
        total_amount: critical
        type: high
        unit_of_measure: edge-case
        unit_price: medium
        updated_at: high
    Company:
      additionalProperties: false
      properties:
        abn_branch:
          description: An ABN Branch (also known as a GST Branch) is used if part of your business needs to account for GST separately from its parent entity.
          example: "123"
          nullable: true
          title: ABN Branch
          type: string
        abn_or_tfn:
          description: An ABN is necessary for operating a business, while a TFN (Tax File Number) is required for any person working in Australia.
          example: 46 115 614 695
          nullable: true
          title: ABN or TFN
          type: string
        acn:
          description: The Australian Company Number (ACN) is a nine digit number with the last digit being a check digit calculated using a modified modulus 10 calculation. ASIC has adopted a convention of always printing and displaying the ACN in the format XXX XXX XXX; three blocks of three characters, each block separated by a blank.
          example: XXX XXX XXX
          nullable: true
          title: ACN
          type: string
        addresses:
          items:
            $ref: "#/components/schemas/Address"
          type: array
        annual_revenue:
          description: Annual revenue
          example: +$35m
          nullable: true
          type: string
        bank_accounts:
          items:
            $ref: "#/components/schemas/BankAccount"
          type: array
        birthday:
          example: 2000-08-12
          format: date
          nullable: true
          type: string
        created_at:
          example: 2020-09-30T07:43:32.000Z
          format: date-time
          readOnly: true
          type: string
        created_by:
          example: "12345"
          nullable: true
          readOnly: true
          type: string
        currency:
          $ref: "#/components/schemas/Currency"
        custom_fields:
          items:
            $ref: "#/components/schemas/CustomField"
          type: array
        deleted:
          example: false
          readOnly: true
          type: boolean
        description:
          example: Space Exploration Technologies Corp. is an American aerospace manufacturer, space transportation services and communications company headquartered in Hawthorne, California.
          nullable: true
          type: string
        emails:
          items:
            $ref: "#/components/schemas/Email"
          type: array
        fax:
          example: "+12129876543"
          nullable: true
          type: string
        first_name:
          $ref: "#/components/schemas/FirstName"
        id:
          example: "12345"
          readOnly: true
          type: string
        image:
          example: https://www.spacex.com/static/images/share.jpg
          nullable: true
          type: string
        industry:
          description: Industry
          example: Apparel
          nullable: true
          type: string
        interaction_count:
          example: 1
          nullable: true
          readOnly: true
          type: integer
        last_activity_at:
          example: 2020-09-30T07:43:32.000Z
          format: date-time
          nullable: true
          readOnly: true
          type: string
        last_name:
          $ref: "#/components/schemas/LastName"
        name:
          example: SpaceX
          minLength: 1
          type: string
        number_of_employees:
          description: Number of employees
          example: 500-1000
          nullable: true
          type: string
        owner_id:
          example: "12345"
          type: string
        ownership:
          description: Ownership
          example: Public
          nullable: true
          type: string
        parent_id:
          description: Parent ID
          example: "22345"
          readOnly: true
          type: string
        payee_number:
          example: 78932EN
          nullable: true
          title: Payee number
          type: string
        phone_numbers:
          items:
            $ref: "#/components/schemas/PhoneNumber"
          type: array
        read_only:
          example: false
          nullable: true
          title: Read-only
          type: boolean
        row_type:
          properties:
            id:
              example: "12345"
              type: string
            name:
              example: Customer Account
              type: string
          title: Company Row Type
          type: object
          x-apideck-weights:
            id: critical
            name: medium
          x-graphql-type-name: CompanyRowType
        sales_tax_number:
          example: 12456EN
          nullable: true
          title: Sales tax number
          type: string
        salutation:
          example: Mr
          nullable: true
          type: string
        social_links:
          items:
            $ref: "#/components/schemas/SocialLink"
          type: array
        status:
          example: Open
          nullable: true
          type: string
        tags:
          $ref: "#/components/schemas/Tags"
        updated_at:
          example: 2020-09-30T07:43:32.000Z
          format: date-time
          readOnly: true
          type: string
        updated_by:
          example: "12345"
          nullable: true
          readOnly: true
          type: string
        vat_number:
          description: VAT number
          example: BE0689615164
          nullable: true
          type: string
        websites:
          items:
            $ref: "#/components/schemas/Website"
          type: array
      required:
        - name
      type: object
      x-apideck-schema-id: Company
      x-apideck-weights:
        abn_branch: edge-case
        abn_or_tfn: edge-case
        acn: edge-case
        addresses: high
        annual_revenue: low
        bank_accounts: medium
        birthday: edge-case
        created_at: medium
        created_by: edge-case
        currency: medium
        custom_fields: medium
        deleted: medium
        description: medium
        emails: high
        fax: low
        first_name: edge-case
        id: critical
        image: low
        industry: medium
        interaction_count: edge-case
        last_activity_at: low
        last_name: edge-case
        name: critical
        number_of_employees: low
        owner_id: high
        ownership: low
        parent_id: edge-case
        payee_number: edge-case
        phone_numbers: high
        read_only: low
        row_type: edge-case
        sales_tax_number: medium
        salutation: edge-case
        social_links: low
        status: high
        tags: low
        updated_at: high
        updated_by: edge-case
        vat_number: high
        websites: medium
    CompanyInfo:
      additionalProperties: false
      properties:
        addresses:
          items:
            $ref: "#/components/schemas/Address"
          type: array
        automated_sales_tax:
          description: Whether sales tax is calculated automatically for the company
          title: Automated sales tax
          type: boolean
        company_name:
          $ref: "#/components/schemas/CompanyName"
        company_start_date:
          description: Date when company file was created
          example: 2015-06-05
          format: date
          title: Date when company file was created
          type: string
        country:
          description: country code according to ISO 3166-1 alpha-2.
          example: US
          nullable: true
          type: string
        created_at:
          $ref: "#/components/schemas/CreatedAt"
        created_by:
          $ref: "#/components/schemas/CreatedBy"
        currency:
          $ref: "#/components/schemas/Currency"
        default_sales_tax:
          $ref: "#/components/schemas/LinkedTaxRate"
        emails:
          items:
            $ref: "#/components/schemas/Email"
          type: array
        fiscal_year_start_month:
          description: The start month of fiscal year.
          enum:
            - January
            - February
            - March
            - April
            - May
            - June
            - July
            - August
            - September
            - October
            - November
            - December
          example: January
          title: The start month of fiscal year.
          type: string
          x-apideck-enum-id: company-info.fiscal_year_start_month
        id:
          $ref: "#/components/schemas/Id"
        language:
          $ref: "#/components/schemas/Language"
        legal_name:
          description: The legal name of the company
          example: SpaceX Inc.
          title: Legal name
          type: string
        phone_numbers:
          items:
            $ref: "#/components/schemas/PhoneNumber"
          type: array
        row_version:
          $ref: "#/components/schemas/RowVersion"
        sales_tax_enabled:
          description: Whether sales tax is enabled for the company
          title: Sales tax enabled
          type: boolean
        sales_tax_number:
          $ref: "#/components/schemas/SalesTaxNumber"
        status:
          description: Based on the status some functionality is enabled or disabled.
          enum:
            - active
            - inactive
          example: active
          title: Company status
          type: string
          x-apideck-enum-id: company-info.status
        updated_at:
          $ref: "#/components/schemas/UpdatedAt"
        updated_by:
          $ref: "#/components/schemas/UpdatedBy"
      type: object
      x-apideck-schema-id: CompanyInfo
      x-apideck-weights:
        addresses: medium
        automated_sales_tax: edge-case
        company_name: critical
        company_start_date: medium
        created_at: low
        created_by: edge-case
        currency: medium
        default_sales_tax: edge-case
        emails: medium
        fiscal_year_start_month: medium
        id: medium
        language: low
        legal_name: medium
        phone_numbers: medium
        row_version: edge-case
        sales_tax_enabled: edge-case
        sales_tax_number: medium
        status: critical
        updated_at: medium
        updated_by: edge-case
    CompanyName:
      example: SpaceX
      nullable: true
      title: Company name
      type: string
    Contact:
      additionalProperties: false
      properties:
        active:
          example: true
          nullable: true
          type: boolean
        addresses:
          items:
            $ref: "#/components/schemas/Address"
          type: array
        birthday:
          example: 2000-08-12
          nullable: true
          type: string
        company_id:
          example: "23456"
          nullable: true
          type: string
        company_name:
          example: "23456"
          nullable: true
          type: string
        created_at:
          example: 2017-08-12T20:43:21.291Z
          format: date-time
          readOnly: true
          type: string
        current_balance:
          example: 10.5
          nullable: true
          title: Current Balance
          type: number
        custom_fields:
          items:
            $ref: "#/components/schemas/CustomField"
          type: array
        department:
          example: Engineering
          nullable: true
          type: string
        description:
          example: Internal champion
          nullable: true
          title: Description
          type: string
        emails:
          items:
            $ref: "#/components/schemas/Email"
          type: array
        fax:
          example: "+12129876543"
          nullable: true
          type: string
        first_call_at:
          example: 2020-09-30T07:43:32.000Z
          format: date-time
          nullable: true
          readOnly: true
          type: string
        first_email_at:
          example: 2020-09-30T07:43:32.000Z
          format: date-time
          nullable: true
          readOnly: true
          type: string
        first_name:
          example: Elon
          nullable: true
          type: string
        gender:
          enum:
            - male
            - female
            - unisex
          example: female
          nullable: true
          type: string
          x-apideck-enum-id: contacts.gender
        id:
          example: "12345"
          readOnly: true
          type: string
        image:
          deprecated: true
          example: https://unavatar.io/elon-musk
          nullable: true
          type: string
        language:
          description: language code according to ISO 639-1. For the United States - EN
          example: EN
          nullable: true
          type: string
        last_activity_at:
          example: 2020-09-30T07:43:32.000Z
          format: date-time
          nullable: true
          readOnly: true
          type: string
        last_name:
          example: Musk
          nullable: true
          type: string
        lead_id:
          example: "34567"
          nullable: true
          type: string
        lead_source:
          example: Cold Call
          nullable: true
          type: string
        middle_name:
          example: D.
          nullable: true
          type: string
        name:
          example: Elon Musk
          minLength: 1
          type: string
        owner_id:
          example: "54321"
          nullable: true
          type: string
        phone_numbers:
          items:
            $ref: "#/components/schemas/PhoneNumber"
          type: array
        photo_url:
          example: https://unavatar.io/elon-musk
          nullable: true
          title: Photo URL
          type: string
        prefix:
          example: Mr.
          nullable: true
          type: string
        social_links:
          items:
            $ref: "#/components/schemas/SocialLink"
          type: array
        status:
          example: open
          nullable: true
          type: string
        suffix:
          example: PhD
          nullable: true
          type: string
        tags:
          $ref: "#/components/schemas/Tags"
        title:
          example: CEO
          nullable: true
          type: string
        type:
          enum:
            - customer
            - supplier
            - employee
            - personal
          example: personal
          nullable: true
          type: string
          x-apideck-enum-id: contacts.type
        updated_at:
          example: 2017-08-12T20:43:21.291Z
          format: date-time
          readOnly: true
          type: string
        websites:
          items:
            $ref: "#/components/schemas/Website"
          type: array
      required:
        - name
      type: object
      x-apideck-schema-id: Contact
      x-apideck-weights:
        active: edge-case
        addresses: high
        birthday: medium
        company_id: high
        company_name: medium
        created_at: medium
        current_balance: edge-case
        custom_fields: medium
        department: medium
        description: low
        emails: high
        fax: low
        first_call_at: edge-case
        first_email_at: edge-case
        first_name: high
        gender: medium
        id: critical
        image: medium
        language: medium
        last_activity_at: medium
        last_name: high
        lead_id: medium
        lead_source: low
        middle_name: low
        name: critical
        owner_id: medium
        phone_numbers: high
        photo_url: medium
        prefix: low
        social_links: low
        status: edge-case
        suffix: low
        tags: low
        title: medium
        type: medium
        updated_at: high
        websites: medium
      x-pii:
        - name
        - first_name
        - middle_name
        - last_name
        - email
    CreateBillResponse:
      properties:
        data:
          $ref: "#/components/schemas/UnifiedId"
        operation:
          description: Operation performed
          example: add
          type: string
        resource:
          description: Unified API resource name
          example: bills
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: CreateBillResponse
    CreateCreditNoteResponse:
      properties:
        data:
          $ref: "#/components/schemas/UnifiedId"
        operation:
          description: Operation performed
          example: add
          type: string
        resource:
          description: Unified API resource name
          example: credit-notes
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: CreateCreditNoteResponse
    CreateCustomerResponse:
      properties:
        data:
          $ref: "#/components/schemas/UnifiedId"
        operation:
          description: Operation performed
          example: add
          type: string
        resource:
          description: Unified API resource name
          example: customers
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: CreateCustomerResponse
    CreateInvoiceItemResponse:
      properties:
        data:
          $ref: "#/components/schemas/UnifiedId"
        operation:
          description: Operation performed
          example: add
          type: string
        resource:
          description: Unified API resource name
          example: invoice-items
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: CreateInvoiceItemResponse
    CreateInvoiceResponse:
      properties:
        data:
          $ref: "#/components/schemas/InvoiceResponse"
        operation:
          description: Operation performed
          example: add
          type: string
        resource:
          description: Unified API resource name
          example: invoices
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: CreateInvoiceResponse
    CreateLedgerAccountResponse:
      properties:
        data:
          $ref: "#/components/schemas/UnifiedId"
        operation:
          description: Operation performed
          example: add
          type: string
        resource:
          description: Unified API resource name
          example: ledger-accounts
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: CreateLedgerAccountResponse
    CreatePaymentResponse:
      properties:
        data:
          $ref: "#/components/schemas/UnifiedId"
        operation:
          description: Operation performed
          example: add
          type: string
        resource:
          description: Unified API resource name
          example: payments
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: CreatePaymentResponse
    CreateSupplierResponse:
      properties:
        data:
          $ref: "#/components/schemas/UnifiedId"
        operation:
          description: Operation performed
          example: add
          type: string
        resource:
          description: Unified API resource name
          example: payments
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: CreateSupplierResponse
    CreateTaxRateResponse:
      properties:
        data:
          $ref: "#/components/schemas/UnifiedId"
        operation:
          description: Operation performed
          example: add
          type: string
        resource:
          description: Unified API resource name
          example: tax-rates
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: CreateTaxRateResponse
    CreatedAt:
      example: 2020-09-30T07:43:32.000Z
      format: date-time
      readOnly: true
      title: Created at (timestamp)
      type: string
    CreatedBy:
      example: "12345"
      nullable: true
      readOnly: true
      title: Created by
      type: string
    CreditNote:
      properties:
        allocations:
          items:
            properties:
              amount:
                description: Amount of payment that should be attributed to this allocation. If null, the total_amount will be used.
                example: 49.99
                nullable: true
                title: Amount
                type: number
              code:
                example: N091
                readOnly: true
                type: string
              id:
                description: Unique identifier of entity this payment should be attributed to.
                example: "123456"
                title: Linked entity ID
                type: string
              type:
                description: Type of entity this payment should be attributed to.
                enum:
                  - invoice
                  - order
                  - expense
                  - credit_memo
                  - over_payment
                  - pre_payment
                title: Allocation type
                type: string
                x-apideck-enum-id: allocations.type
                x-graphql-type-name: AllocationType
            x-apideck-weights:
              amount: medium
              code: medium
              id: medium
              type: medium
          type: array
        balance:
          description: The balance reflecting any payments made against the transaction.
          example: 27500
          nullable: true
          title: Balance
          type: number
        created_at:
          $ref: "#/components/schemas/CreatedAt"
        currency:
          $ref: "#/components/schemas/Currency"
        currency_rate:
          $ref: "#/components/schemas/CurrencyRate"
        customer:
          $ref: "#/components/schemas/LinkedCustomer"
        date_issued:
          description: Date credit note issued - YYYY:MM::DDThh:mm:ss.sTZD
          example: 2021-05-01T12:00:00.000Z
          format: date-time
          title: Datetime
          type: string
        date_paid:
          description: Date credit note paid - YYYY:MM::DDThh:mm:ss.sTZD
          example: 2021-05-01T12:00:00.000Z
          format: date-time
          nullable: true
          title: Datetime
          type: string
        id:
          description: Unique identifier representing the entity
          example: "123456"
          readOnly: true
          title: Credit Note identifier
          type: string
        line_items:
          items:
            $ref: "#/components/schemas/InvoiceLineItem"
          type: array
        note:
          description: Optional note to be associated with the credit note.
          example: Some notes about this credit note
          nullable: true
          title: Note
          type: string
        number:
          description: Credit note number.
          example: OIT00546
          nullable: true
          title: Credit note number
          type: string
        reference:
          description: "Optional reference message ie: Debit remittance detail."
          example: "123456"
          nullable: true
          title: Credit Note reference
          type: string
        remaining_credit:
          description: Indicates the total credit amount still available to apply towards the payment.
          example: 27500
          nullable: true
          title: Remaining Credit
          type: number
        row_version:
          $ref: "#/components/schemas/RowVersion"
        status:
          description: Status of payment
          enum:
            - draft
            - authorised
            - paid
            - voided
            - deleted
          example: authorised
          title: Credit Note status
          type: string
          x-apideck-enum-id: payments.status
          x-graphql-type-name: CreditNoteStatus
        sub_total:
          description: Sub-total amount, normally before tax.
          example: 27500
          nullable: true
          title: Sub-total amount
          type: number
        tax_code:
          description: Applicable tax id/code override if tax is not supplied on a line item basis.
          example: "1234"
          nullable: true
          title: Tax Code
          type: string
        tax_inclusive:
          $ref: "#/components/schemas/TaxInclusive"
        total_amount:
          description: Amount of transaction
          example: 49.99
          title: Total amount
          type: number
        total_tax:
          description: Total tax amount applied to this invoice.
          example: 2500
          nullable: true
          title: Total tax amount
          type: number
        type:
          description: Type of payment
          enum:
            - accounts_receivable_credit
            - accounts_payable_credit
          example: accounts_receivable_credit
          title: Credit Note Type
          type: string
          x-apideck-enum-id: credit-notes.type
          x-graphql-type-name: CreditNoteType
        updated_at:
          $ref: "#/components/schemas/UpdatedAt"
      required:
        - total_amount
      type: object
      x-apideck-schema-id: CreditNote
      x-apideck-weights:
        account: critical
        allocations: medium
        balance: critical
        created_at: edge-case
        currency: critical
        currency_rate: medium
        customer: high
        date_issued: edge-case
        date_paid: critical
        id: critical
        line_items: medium
        note: low
        number: low
        reference: low
        row_version: edge-case
        status: high
        sub_total: critical
        tax_code: edge-case
        tax_inclusive: low
        total_amount: critical
        total_tax: edge-case
        type: edge-case
        updated_at: medium
    Currency:
      description: Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
      enum:
        - UNKNOWN_CURRENCY
        - AED
        - AFN
        - ALL
        - AMD
        - ANG
        - AOA
        - ARS
        - AUD
        - AWG
        - AZN
        - BAM
        - BBD
        - BDT
        - BGN
        - BHD
        - BIF
        - BMD
        - BND
        - BOB
        - BOV
        - BRL
        - BSD
        - BTN
        - BWP
        - BYR
        - BZD
        - CAD
        - CDF
        - CHE
        - CHF
        - CHW
        - CLF
        - CLP
        - CNY
        - COP
        - COU
        - CRC
        - CUC
        - CUP
        - CVE
        - CZK
        - DJF
        - DKK
        - DOP
        - DZD
        - EGP
        - ERN
        - ETB
        - EUR
        - FJD
        - FKP
        - GBP
        - GEL
        - GHS
        - GIP
        - GMD
        - GNF
        - GTQ
        - GYD
        - HKD
        - HNL
        - HRK
        - HTG
        - HUF
        - IDR
        - ILS
        - INR
        - IQD
        - IRR
        - ISK
        - JMD
        - JOD
        - JPY
        - KES
        - KGS
        - KHR
        - KMF
        - KPW
        - KRW
        - KWD
        - KYD
        - KZT
        - LAK
        - LBP
        - LKR
        - LRD
        - LSL
        - LTL
        - LVL
        - LYD
        - MAD
        - MDL
        - MGA
        - MKD
        - MMK
        - MNT
        - MOP
        - MRO
        - MUR
        - MVR
        - MWK
        - MXN
        - MXV
        - MYR
        - MZN
        - NAD
        - NGN
        - NIO
        - NOK
        - NPR
        - NZD
        - OMR
        - PAB
        - PEN
        - PGK
        - PHP
        - PKR
        - PLN
        - PYG
        - QAR
        - RON
        - RSD
        - RUB
        - RWF
        - SAR
        - SBD
        - SCR
        - SDG
        - SEK
        - SGD
        - SHP
        - SLL
        - SOS
        - SRD
        - SSP
        - STD
        - SVC
        - SYP
        - SZL
        - THB
        - TJS
        - TMT
        - TND
        - TOP
        - TRC
        - TRY
        - TTD
        - TWD
        - TZS
        - UAH
        - UGX
        - USD
        - USN
        - USS
        - UYI
        - UYU
        - UZS
        - VEF
        - VND
        - VUV
        - WST
        - XAF
        - XAG
        - XAU
        - XBA
        - XBB
        - XBC
        - XBD
        - XCD
        - XDR
        - XOF
        - XPD
        - XPF
        - XPT
        - XTS
        - XXX
        - YER
        - ZAR
        - ZMK
        - ZMW
        - BTC
      example: USD
      nullable: true
      title: Currency
      type: string
      x-apideck-enum-coverage-ignore: true
      x-apideck-enum-id: currencies
      x-enum-elements:
        - description: Unknown currency
          name: UNKNOWN_CURRENCY
        - description: United Arab Emirates dirham
          name: AED
        - description: Afghan afghani
          name: AFN
        - description: Albanian lek
          name: ALL
        - description: Armenian dram
          name: AMD
        - description: Netherlands Antillean guilder
          name: ANG
        - description: Angolan kwanza
          name: AOA
        - description: Argentine peso
          name: ARS
        - description: Australian dollar
          name: AUD
        - description: Aruban florin
          name: AWG
        - description: Azerbaijani manat
          name: AZN
        - description: Bosnia and Herzegovina convertible mark
          name: BAM
        - description: Barbados dollar
          name: BBD
        - description: Bangladeshi taka
          name: BDT
        - description: Bulgarian lev
          name: BGN
        - description: Bahraini dinar
          name: BHD
        - description: Burundian franc
          name: BIF
        - description: Bermudian dollar
          name: BMD
        - description: Brunei dollar
          name: BND
        - description: Boliviano
          name: BOB
        - description: Bolivian Mvdol
          name: BOV
        - description: Brazilian real
          name: BRL
        - description: Bahamian dollar
          name: BSD
        - description: Bhutanese ngultrum
          name: BTN
        - description: Botswana pula
          name: BWP
        - description: Belarusian ruble
          name: BYR
        - description: Belize dollar
          name: BZD
        - description: Canadian dollar
          name: CAD
        - description: Congolese franc
          name: CDF
        - description: WIR Euro
          name: CHE
        - description: Swiss franc
          name: CHF
        - description: WIR Franc
          name: CHW
        - description: Unidad de Fomento
          name: CLF
        - description: Chilean peso
          name: CLP
        - description: Chinese yuan
          name: CNY
        - description: Colombian peso
          name: COP
        - description: Unidad de Valor Real
          name: COU
        - description: Costa Rican colon
          name: CRC
        - description: Cuban convertible peso
          name: CUC
        - description: Cuban peso
          name: CUP
        - description: Cape Verdean escudo
          name: CVE
        - description: Czech koruna
          name: CZK
        - description: Djiboutian franc
          name: DJF
        - description: Danish krone
          name: DKK
        - description: Dominican peso
          name: DOP
        - description: Algerian dinar
          name: DZD
        - description: Egyptian pound
          name: EGP
        - description: Eritrean nakfa
          name: ERN
        - description: Ethiopian birr
          name: ETB
        - description: Euro
          name: EUR
        - description: Fiji dollar
          name: FJD
        - description: Falkland Islands pound
          name: FKP
        - description: Pound sterling
          name: GBP
        - description: Georgian lari
          name: GEL
        - description: Ghanaian cedi
          name: GHS
        - description: Gibraltar pound
          name: GIP
        - description: Gambian dalasi
          name: GMD
        - description: Guinean franc
          name: GNF
        - description: Guatemalan quetzal
          name: GTQ
        - description: Guyanese dollar
          name: GYD
        - description: Hong Kong dollar
          name: HKD
        - description: Honduran lempira
          name: HNL
        - description: Croatian kuna
          name: HRK
        - description: Haitian gourde
          name: HTG
        - description: Hungarian forint
          name: HUF
        - description: Indonesian rupiah
          name: IDR
        - description: Israeli new shekel
          name: ILS
        - description: Indian rupee
          name: INR
        - description: Iraqi dinar
          name: IQD
        - description: Iranian rial
          name: IRR
        - description: Icelandic króna
          name: ISK
        - description: Jamaican dollar
          name: JMD
        - description: Jordanian dinar
          name: JOD
        - description: Japanese yen
          name: JPY
        - description: Kenyan shilling
          name: KES
        - description: Kyrgyzstani som
          name: KGS
        - description: Cambodian riel
          name: KHR
        - description: Comoro franc
          name: KMF
        - description: North Korean won
          name: KPW
        - description: South Korean won
          name: KRW
        - description: Kuwaiti dinar
          name: KWD
        - description: Cayman Islands dollar
          name: KYD
        - description: Kazakhstani tenge
          name: KZT
        - description: Lao kip
          name: LAK
        - description: Lebanese pound
          name: LBP
        - description: Sri Lankan rupee
          name: LKR
        - description: Liberian dollar
          name: LRD
        - description: Lesotho loti
          name: LSL
        - description: Lithuanian litas
          name: LTL
        - description: Latvian lats
          name: LVL
        - description: Libyan dinar
          name: LYD
        - description: Moroccan dirham
          name: MAD
        - description: Moldovan leu
          name: MDL
        - description: Malagasy ariary
          name: MGA
        - description: Macedonian denar
          name: MKD
        - description: Myanmar kyat
          name: MMK
        - description: Mongolian tögrög
          name: MNT
        - description: Macanese pataca
          name: MOP
        - description: Mauritanian ouguiya
          name: MRO
        - description: Mauritian rupee
          name: MUR
        - description: Maldivian rufiyaa
          name: MVR
        - description: Malawian kwacha
          name: MWK
        - description: Mexican peso
          name: MXN
        - description: Mexican Unidad de Inversion
          name: MXV
        - description: Malaysian ringgit
          name: MYR
        - description: Mozambican metical
          name: MZN
        - description: Namibian dollar
          name: NAD
        - description: Nigerian naira
          name: NGN
        - description: Nicaraguan córdoba
          name: NIO
        - description: Norwegian krone
          name: NOK
        - description: Nepalese rupee
          name: NPR
        - description: New Zealand dollar
          name: NZD
        - description: Omani rial
          name: OMR
        - description: Panamanian balboa
          name: PAB
        - description: Peruvian sol
          name: PEN
        - description: Papua New Guinean kina
          name: PGK
        - description: Philippine peso
          name: PHP
        - description: Pakistani rupee
          name: PKR
        - description: Polish złoty
          name: PLN
        - description: Paraguayan guaraní
          name: PYG
        - description: Qatari riyal
          name: QAR
        - description: Romanian leu
          name: RON
        - description: Serbian dinar
          name: RSD
        - description: Russian ruble
          name: RUB
        - description: Rwandan franc
          name: RWF
        - description: Saudi riyal
          name: SAR
        - description: Solomon Islands dollar
          name: SBD
        - description: Seychelles rupee
          name: SCR
        - description: Sudanese pound
          name: SDG
        - description: Swedish krona
          name: SEK
        - description: Singapore dollar
          name: SGD
        - description: Saint Helena pound
          name: SHP
        - description: Sierra Leonean leone
          name: SLL
        - description: Somali shilling
          name: SOS
        - description: Surinamese dollar
          name: SRD
        - description: South Sudanese pound
          name: SSP
        - description: São Tomé and Príncipe dobra
          name: STD
        - description: Salvadoran colón
          name: SVC
        - description: Syrian pound
          name: SYP
        - description: Swazi lilangeni
          name: SZL
        - description: Thai baht
          name: THB
        - description: Tajikstani somoni
          name: TJS
        - description: Turkmenistan manat
          name: TMT
        - description: Tunisian dinar
          name: TND
        - description: Tongan pa'anga
          name: TOP
        - description: Turkish lira
          name: TRY
        - description: Trinidad and Tobago dollar
          name: TTD
        - description: New Taiwan dollar
          name: TWD
        - description: Tanzanian shilling
          name: TZS
        - description: Ukrainian hryvnia
          name: UAH
        - description: Ugandan shilling
          name: UGX
        - description: United States dollar
          name: USD
        - description: United States dollar (next day)
          name: USN
        - description: United States dollar (same day)
          name: USS
        - description: Uruguay Peso en Unidedades Indexadas
          name: UYI
        - description: Uruguyan peso
          name: UYU
        - description: Uzbekistan som
          name: UZS
        - description: Venezuelan bolívar soberano
          name: VEF
        - description: Vietnamese đồng
          name: VND
        - description: Vanuatu vatu
          name: VUV
        - description: Samoan tala
          name: WST
        - description: CFA franc BEAC
          name: XAF
        - description: Silver
          name: XAG
        - description: Gold
          name: XAU
        - description: European Composite Unit
          name: XBA
        - description: European Monetary Unit
          name: XBB
        - description: European Unit of Account 9
          name: XBC
        - description: European Unit of Account 17
          name: XBD
        - description: East Caribbean dollar
          name: XCD
        - description: Special drawing rights (International Monetary Fund)
          name: XDR
        - description: CFA franc BCEAO
          name: XOF
        - description: Palladium
          name: XPD
        - description: CFP franc
          name: XPF
        - description: Platinum
          name: XPT
        - description: Code reserved for testing
          name: XTS
        - description: No currency
          name: XXX
        - description: Yemeni rial
          name: YER
        - description: South African rand
          name: ZAR
        - description: Zambian kwacha
          name: ZMK
        - description: Zambian kwacha
          name: ZMW
        - description: Bitcoin
          name: BTC
    CurrencyRate:
      description: Currency Exchange Rate at the time entity was recorded/generated.
      example: 0.69
      nullable: true
      title: Currency Exchange Rate
      type: number
    CustomField:
      additionalProperties: false
      properties:
        description:
          description: More information about the custom field
          example: Employee Level
          title: Description
          type: string
        id:
          example: "2389328923893298"
          title: ID
          type: string
        name:
          description: Name of the custom field.
          example: employee_level
          title: Name
          type: string
        value:
          anyOf:
            - example: Uses Salesforce and Marketo
              nullable: true
              type: string
            - example: 10
              nullable: true
              type: number
            - example: true
              nullable: true
              type: boolean
            - items:
                type: string
              type: array
      required:
        - id
      type: object
      x-apideck-schema-id: CustomField
      x-apideck-weights:
        description: edge-case
        id: critical
        name: medium
        value: critical
    CustomersFilter:
      additionalProperties: false
      example:
        company_name: SpaceX
        display_name: Elon Musk
        email: elon@musk.com
        first_name: Elon
        last_name: Musk
      properties:
        company_name:
          description: Company Name of customer to search for
          example: SpaceX
          title: Company Name
          type: string
        display_name:
          description: Display Name of customer to search for
          example: Techno King
          title: Display Name
          type: string
        email:
          description: Email of customer to search for
          example: elon@spacex.com
          title: Email
          type: string
        first_name:
          description: First name of customer to search for
          example: Elon
          title: First Name
          type: string
        last_name:
          description: Last name of customer to search for
          example: Musk
          title: Last Name
          type: string
      type: object
      x-apideck-schema-id: CustomersFilter
      x-graphql-type-name: CustomersFilter
    DeleteBillResponse:
      properties:
        data:
          $ref: "#/components/schemas/UnifiedId"
        operation:
          description: Operation performed
          example: delete
          type: string
        resource:
          description: Unified API resource name
          example: bills
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: DeleteBillResponse
    DeleteCreditNoteResponse:
      properties:
        data:
          $ref: "#/components/schemas/UnifiedId"
        operation:
          description: Operation performed
          example: delete
          type: string
        resource:
          description: Unified API resource name
          example: credit-notes
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: DeleteCreditNoteResponse
    DeleteCustomerResponse:
      properties:
        data:
          $ref: "#/components/schemas/UnifiedId"
        operation:
          description: Operation performed
          example: delete
          type: string
        resource:
          description: Unified API resource name
          example: customers
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: DeleteCustomerResponse
    DeleteInvoiceItemResponse:
      $ref: "#/components/schemas/DeleteTaxRateResponse"
    DeleteInvoiceResponse:
      properties:
        data:
          $ref: "#/components/schemas/InvoiceResponse"
        operation:
          description: Operation performed
          example: delete
          type: string
        resource:
          description: Unified API resource name
          example: invoices
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: DeleteInvoiceResponse
    DeleteLedgerAccountResponse:
      properties:
        data:
          $ref: "#/components/schemas/UnifiedId"
        operation:
          description: Operation performed
          example: delete
          type: string
        resource:
          description: Unified API resource name
          example: ledger-accounts
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: DeleteLedgerAccountResponse
    DeletePaymentResponse:
      properties:
        data:
          $ref: "#/components/schemas/UnifiedId"
        operation:
          description: Operation performed
          example: delete
          type: string
        resource:
          description: Unified API resource name
          example: payments
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: DeletePaymentResponse
    DeleteSupplierResponse:
      properties:
        data:
          $ref: "#/components/schemas/UnifiedId"
        operation:
          description: Operation performed
          example: delete
          type: string
        resource:
          description: Unified API resource name
          example: suppliers
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: DeleteSupplierResponse
    DeleteTaxRateResponse:
      properties:
        data:
          $ref: "#/components/schemas/UnifiedId"
        operation:
          description: Operation performed
          example: delete
          type: string
        resource:
          description: Unified API resource name
          example: tax-rates
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: DeleteTaxRateResponse
    DownstreamId:
      description: The third-party API ID of original entity
      example: "12345"
      nullable: true
      readOnly: true
      type: string
    Email:
      additionalProperties: false
      properties:
        email:
          example: elon@musk.com
          format: email
          minLength: 1
          type: string
        id:
          example: "123"
          type: string
        type:
          enum:
            - primary
            - secondary
            - work
            - personal
            - billing
            - other
          example: primary
          type: string
          x-apideck-enum-id: emails.type
          x-graphql-type-name: EmailType
      required:
        - email
      type: object
      x-apideck-schema-id: Email
      x-apideck-weights:
        email: critical
        id: edge-case
        type: critical
    FirstName:
      example: Elon
      nullable: true
      title: First name
      type: string
    GetBalanceSheetResponse:
      properties:
        data:
          $ref: "#/components/schemas/BalanceSheet"
        operation:
          description: Operation performed
          example: one
          type: string
        resource:
          description: Unified API resource name
          example: BalanceSheets
          type: string
        service:
          description: Apideck ID of service provider
          example: quickbooks
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: GetBalanceSheetResponse
      x-graphql-type-name: BalanceSheet
    GetBillResponse:
      properties:
        data:
          $ref: "#/components/schemas/Bill"
        operation:
          description: Operation performed
          example: one
          type: string
        resource:
          description: Unified API resource name
          example: bills
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: GetBillResponse
      x-graphql-type-name: Bill
    GetBillsResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/Bill"
          type: array
        links:
          $ref: "#/components/schemas/Links"
        meta:
          $ref: "#/components/schemas/Meta"
        operation:
          description: Operation performed
          example: all
          type: string
        resource:
          description: Unified API resource name
          example: bills
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: GetBillsResponse
      x-graphql-type-name: BillList
    GetCompanyInfoResponse:
      properties:
        data:
          $ref: "#/components/schemas/CompanyInfo"
        operation:
          description: Operation performed
          example: one
          type: string
        resource:
          description: Unified API resource name
          example: company-info
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: GetCompanyInfoResponse
      x-graphql-type-name: CompanyInfo
    GetCreditNoteResponse:
      properties:
        data:
          $ref: "#/components/schemas/CreditNote"
        operation:
          description: Operation performed
          example: one
          type: string
        resource:
          description: Unified API resource name
          example: credit-notes
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: GetCreditNoteResponse
    GetCreditNotesResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/CreditNote"
          type: array
        links:
          $ref: "#/components/schemas/Links"
        meta:
          $ref: "#/components/schemas/Meta"
        operation:
          description: Operation performed
          example: all
          type: string
        resource:
          description: Unified API resource name
          example: credit-notes
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: GetCreditNotesResponse
    GetCustomerResponse:
      properties:
        data:
          $ref: "#/components/schemas/AccountingCustomer"
        operation:
          description: Operation performed
          example: one
          type: string
        resource:
          description: Unified API resource name
          example: customers
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: GetCustomerResponse
    GetCustomersResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/AccountingCustomer"
          type: array
        links:
          $ref: "#/components/schemas/Links"
        meta:
          $ref: "#/components/schemas/Meta"
        operation:
          description: Operation performed
          example: all
          type: string
        resource:
          description: Unified API resource name
          example: customers
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: GetCustomersResponse
      x-graphql-type-name: CustomerList
    GetInvoiceItemResponse:
      properties:
        data:
          $ref: "#/components/schemas/InvoiceItem"
        operation:
          description: Operation performed
          example: one
          type: string
        resource:
          description: Unified API resource name
          example: invoice-items
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: GetInvoiceItemResponse
      x-graphql-type-name: InvoiceItem
    GetInvoiceItemsResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/InvoiceItem"
          type: array
        links:
          $ref: "#/components/schemas/Links"
        meta:
          $ref: "#/components/schemas/Meta"
        operation:
          description: Operation performed
          example: all
          type: string
        resource:
          description: Unified API resource name
          example: invoice-items
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: GetInvoiceItemsResponse
      x-graphql-type-name: InvoiceItemList
    GetInvoiceResponse:
      properties:
        data:
          $ref: "#/components/schemas/Invoice"
        operation:
          description: Operation performed
          example: one
          type: string
        resource:
          description: Unified API resource name
          example: invoices
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: GetInvoiceResponse
      x-graphql-type-name: Invoice
    GetInvoicesResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/Invoice"
          type: array
        links:
          $ref: "#/components/schemas/Links"
        meta:
          $ref: "#/components/schemas/Meta"
        operation:
          description: Operation performed
          example: all
          type: string
        resource:
          description: Unified API resource name
          example: invoices
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: GetInvoicesResponse
      x-graphql-type-name: InvoiceList
    GetLedgerAccountResponse:
      properties:
        data:
          $ref: "#/components/schemas/LedgerAccount"
        operation:
          description: Operation performed
          example: one
          type: string
        resource:
          description: Unified API resource name
          example: ledger-accounts
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: GetLedgerAccountResponse
      x-graphql-type-name: LedgerAccount
    GetLedgerAccountsResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/LedgerAccount"
          type: array
        links:
          $ref: "#/components/schemas/Links"
        meta:
          $ref: "#/components/schemas/Meta"
        operation:
          description: Operation performed
          example: all
          type: string
        resource:
          description: Unified API resource name
          example: ledger-accounts
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: GetLedgerAccountsResponse
      x-graphql-type-name: LedgerAccountList
    GetPaymentResponse:
      properties:
        data:
          $ref: "#/components/schemas/Payment"
        operation:
          description: Operation performed
          example: one
          type: string
        resource:
          description: Unified API resource name
          example: payments
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: GetPaymentResponse
      x-graphql-type-name: Payment
    GetPaymentsResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/Payment"
          type: array
        links:
          $ref: "#/components/schemas/Links"
        meta:
          $ref: "#/components/schemas/Meta"
        operation:
          description: Operation performed
          example: all
          type: string
        resource:
          description: Unified API resource name
          example: payments
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: GetPaymentsResponse
      x-graphql-type-name: PaymentList
    GetProfitAndLossResponse:
      properties:
        data:
          $ref: "#/components/schemas/ProfitAndLoss"
        operation:
          description: Operation performed
          example: one
          type: string
        resource:
          description: Unified API resource name
          example: ProfitAndLosses
          type: string
        service:
          description: Apideck ID of service provider
          example: quickbooks
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: GetProfitAndLossResponse
      x-graphql-type-name: ProfitAndLoss
    GetSupplierResponse:
      properties:
        data:
          $ref: "#/components/schemas/Supplier"
        operation:
          description: Operation performed
          example: one
          type: string
        resource:
          description: Unified API resource name
          example: suppliers
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: GetSupplierResponse
      x-graphql-type-name: Supplier
    GetSuppliersResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/Supplier"
          type: array
        links:
          $ref: "#/components/schemas/Links"
        meta:
          $ref: "#/components/schemas/Meta"
        operation:
          description: Operation performed
          example: all
          type: string
        resource:
          description: Unified API resource name
          example: suppliers
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: GetSuppliersResponse
      x-graphql-type-name: SupplierList
    GetTaxRateResponse:
      properties:
        data:
          $ref: "#/components/schemas/TaxRate"
        operation:
          description: Operation performed
          example: one
          type: string
        resource:
          description: Unified API resource name
          example: tax-rates
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: GetTaxRateResponse
      x-graphql-type-name: TaxRateOne
    GetTaxRatesResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/TaxRate"
          type: array
        links:
          $ref: "#/components/schemas/Links"
        meta:
          $ref: "#/components/schemas/Meta"
        operation:
          description: Operation performed
          example: all
          type: string
        resource:
          description: Unified API resource name
          example: tax-rates
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: GetTaxRatesResponse
      x-graphql-type-name: TaxRateList
    Id:
      example: "12345"
      readOnly: true
      type: string
    Invoice:
      additionalProperties: false
      properties:
        balance:
          description: Balance of invoice due.
          example: 27500
          nullable: true
          title: Balance
          type: number
        billing_address:
          $ref: "#/components/schemas/Address"
        created_at:
          $ref: "#/components/schemas/CreatedAt"
        created_by:
          $ref: "#/components/schemas/CreatedBy"
        currency:
          $ref: "#/components/schemas/Currency"
        currency_rate:
          $ref: "#/components/schemas/CurrencyRate"
        customer:
          $ref: "#/components/schemas/LinkedCustomer"
        customer_memo:
          description: Customer memo
          example: Thank you for your business and have a great day!
          nullable: true
          title: Customer memo
          type: string
        deposit:
          description: Amount of deposit made to this invoice.
          example: 0
          nullable: true
          title: Deposit
          type: number
        discount_percentage:
          description: Discount percentage applied to this invoice.
          example: 5.5
          nullable: true
          title: Discount
          type: number
        downstream_id:
          $ref: "#/components/schemas/DownstreamId"
        due_date:
          description: The invoice due date is the date on which a payment or invoice is scheduled to be received by the seller - YYYY-MM-DD.
          example: 2020-09-30
          format: date
          nullable: true
          title: Due date
          type: string
        id:
          $ref: "#/components/schemas/Id"
        invoice_date:
          description: Date invoice was issued - YYYY-MM-DD.
          example: 2020-09-30
          format: date
          nullable: true
          title: Invoice date
          type: string
        invoice_sent:
          description: Invoice sent to contact/customer.
          example: true
          title: Invoice Sent
          type: boolean
        line_items:
          items:
            $ref: "#/components/schemas/InvoiceLineItem"
          type: array
        number:
          description: Invoice number.
          example: OIT00546
          nullable: true
          title: Invoice number
          type: string
        po_number:
          description: A PO Number uniquely identifies a purchase order and is generally defined by the buyer. The buyer will match the PO number in the invoice to the Purchase Order.
          example: "90000117"
          nullable: true
          title: Purchase Order number
          type: string
        reference:
          description: Optional invoice reference.
          example: "123456"
          nullable: true
          title: Invoice reference
          type: string
        row_version:
          $ref: "#/components/schemas/RowVersion"
        shipping_address:
          $ref: "#/components/schemas/Address"
        source_document_url:
          description: URL link to a source document - shown as 'Go to [appName]' in the downstream app. Currently only supported for Xero.
          example: https://www.invoicesolution.com/invoice/123456
          nullable: true
          title: Source document URL
          type: string
        status:
          description: Invoice status
          enum:
            - draft
            - submitted
            - authorised
            - partially_paid
            - paid
            - void
            - credit
            - deleted
          example: draft
          nullable: true
          title: Status
          type: string
          x-apideck-enum-id: invoices.status
        sub_total:
          description: Sub-total amount, normally before tax.
          example: 27500
          nullable: true
          title: Sub-total amount
          type: number
        tax_code:
          description: Applicable tax id/code override if tax is not supplied on a line item basis.
          example: "1234"
          nullable: true
          title: Tax Code
          type: string
        tax_inclusive:
          $ref: "#/components/schemas/TaxInclusive"
        template_id:
          description: Optional invoice template
          example: "123456"
          nullable: true
          title: Template
          type: string
        terms:
          description: Terms of payment.
          example: Net 30 days
          nullable: true
          title: Terms
          type: string
        total:
          description: Total amount of invoice, including tax.
          example: 27500
          nullable: true
          title: Total amount
          type: number
        total_tax:
          description: Total tax amount applied to this invoice.
          example: 2500
          nullable: true
          title: Total tax amount
          type: number
        type:
          description: Invoice type
          enum:
            - standard
            - credit
            - service
            - product
            - supplier
            - other
          example: service
          nullable: true
          title: Invoice type
          type: string
          x-apideck-enum-id: invoices.type
          x-graphql-type-name: InvoiceType
        updated_at:
          $ref: "#/components/schemas/UpdatedAt"
        updated_by:
          $ref: "#/components/schemas/UpdatedBy"
      type: object
      x-apideck-schema-id: Invoice
      x-apideck-weights:
        balance: high
        billing_address: high
        created_at: high
        created_by: low
        currency: medium
        currency_rate: low
        customer: high
        customer_memo: low
        deposit: low
        discount_percentage: medium
        downstream_id: low
        due_date: edge-case
        id: critical
        invoice_date: edge-case
        invoice_sent: low
        line_items: critical
        number: high
        po_number: low
        reference: low
        row_version: edge-case
        shipping_address: medium
        source_document_url: edge-case
        status: critical
        sub_total: high
        tax_code: medium
        tax_inclusive: low
        template_id: edge-case
        terms: low
        total: critical
        total_tax: high
        type: high
        updated_at: high
        updated_by: low
    InvoiceItem:
      additionalProperties: false
      properties:
        active:
          $ref: "#/components/schemas/Active"
        asset_account:
          $ref: "#/components/schemas/LinkedLedgerAccount"
        code:
          description: User defined item code
          example: 120-C
          nullable: true
          title: Item code
          type: string
        created_at:
          $ref: "#/components/schemas/CreatedAt"
        created_by:
          $ref: "#/components/schemas/CreatedBy"
        description:
          description: A short description of the item
          example: Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.
          nullable: true
          title: Description
          type: string
        expense_account:
          $ref: "#/components/schemas/LinkedLedgerAccount"
        id:
          description: The ID of the item.
          example: "123456"
          readOnly: true
          title: Item ID
          type: string
        income_account:
          $ref: "#/components/schemas/LinkedLedgerAccount"
        inventory_date:
          description: The date of opening balance if inventory item is tracked - YYYY-MM-DD.
          example: 2020-10-30
          format: date
          nullable: true
          title: Inventory date
          type: string
        name:
          description: Item name
          example: Model Y
          nullable: true
          title: Item name
          type: string
        purchase_details:
          properties:
            tax_inclusive:
              $ref: "#/components/schemas/TaxInclusive"
            tax_rate:
              $ref: "#/components/schemas/LinkedTaxRate"
            unit_of_measure:
              $ref: "#/components/schemas/UnitOfMeasure"
            unit_price:
              $ref: "#/components/schemas/UnitPrice"
          type: object
          x-apideck-weights:
            tax_inclusive: medium
            tax_rate: medium
            unit_of_measure: medium
            unit_price: medium
        purchased:
          description: Item is available for purchase transactions
          example: true
          nullable: true
          title: Item purchased
          type: boolean
        quantity:
          $ref: "#/components/schemas/Quantity"
        row_version:
          $ref: "#/components/schemas/RowVersion"
        sales_details:
          properties:
            tax_inclusive:
              $ref: "#/components/schemas/TaxInclusive"
            tax_rate:
              $ref: "#/components/schemas/LinkedTaxRate"
            unit_of_measure:
              $ref: "#/components/schemas/UnitOfMeasure"
            unit_price:
              $ref: "#/components/schemas/UnitPrice"
          type: object
          x-apideck-weights:
            tax_inclusive: medium
            tax_rate: medium
            unit_of_measure: medium
            unit_price: medium
        sold:
          description: Item will be available on sales transactions
          example: true
          nullable: true
          title: Item sold
          type: boolean
        tracked:
          description: Item is inventoried
          example: true
          nullable: true
          title: Item tracked
          type: boolean
        type:
          description: Item type
          enum:
            - inventory
            - service
            - other
          example: inventory
          nullable: true
          title: Type
          type: string
          x-apideck-enum-id: invoice-items.type
          x-graphql-type-name: InvoiceItemType
        unit_price:
          $ref: "#/components/schemas/UnitPrice"
        updated_at:
          $ref: "#/components/schemas/UpdatedAt"
        updated_by:
          $ref: "#/components/schemas/UpdatedBy"
      type: object
      x-apideck-schema-id: InvoiceItem
      x-apideck-weights:
        active: medium
        asset_account: medium
        code: high
        created_at: medium
        created_by: edge-case
        description: medium
        expense_account: medium
        id: critical
        income_account: high
        inventory_date: high
        name: critical
        purchase_details: medium
        purchased: edge-case
        quantity: high
        row_version: edge-case
        sales_details: medium
        sold: edge-case
        tracked: edge-case
        type: high
        unit_price: high
        updated_at: medium
        updated_by: edge-case
    InvoiceItemAssetAccount:
      $ref: "#/components/schemas/LinkedLedgerAccount"
    InvoiceItemExpenseAccount:
      $ref: "#/components/schemas/LinkedLedgerAccount"
    InvoiceItemIncomeAccount:
      $ref: "#/components/schemas/LinkedLedgerAccount"
    InvoiceItemsFilter:
      additionalProperties: false
      example:
        name: Widgets Large
      properties:
        name:
          description: Name of Invoice Items to search for
          example: Widgets Large
          title: Name
          type: string
      type: object
      x-apideck-schema-id: InvoiceItemsFilter
      x-graphql-type-name: InvoiceItemsFilter
    InvoiceLineItem:
      additionalProperties: false
      properties:
        code:
          description: User defined item code
          example: 120-C
          nullable: true
          title: Item code
          type: string
        description:
          description: User defined description
          example: Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.
          nullable: true
          title: Description
          type: string
        discount_percentage:
          description: Discount percentage applied to the line item when supported downstream.
          example: 0.01
          nullable: true
          title: Discount
          type: number
        id:
          $ref: "#/components/schemas/Id"
        item:
          $ref: "#/components/schemas/LinkedInvoiceItem"
        ledger_account:
          $ref: "#/components/schemas/LinkedLedgerAccount"
        line_number:
          description: Line number in the invoice
          example: 1
          nullable: true
          title: Line number
          type: integer
        quantity:
          $ref: "#/components/schemas/Quantity"
        row_id:
          description: Row ID
          example: "12345"
          title: Row ID
          type: string
        row_version:
          $ref: "#/components/schemas/RowVersion"
        tax_amount:
          description: Tax amount
          example: 27500
          nullable: true
          title: Tax amount
          type: number
        tax_rate:
          $ref: "#/components/schemas/LinkedTaxRate"
        total_amount:
          description: Total amount of the line item
          example: 27500
          nullable: true
          title: Total amount
          type: number
        type:
          description: Item type
          enum:
            - sales_item
            - discount
            - info
            - sub_total
          example: sales_item
          nullable: true
          title: Type
          type: string
          x-apideck-enum-id: invoices.lines-items.type
          x-graphql-type-name: InvoiceLineItemType
        unit_of_measure:
          $ref: "#/components/schemas/UnitOfMeasure"
        unit_price:
          $ref: "#/components/schemas/UnitPrice"
      type: object
      x-apideck-schema-id: InvoiceLineItem
      x-apideck-weights:
        code: medium
        description: high
        discount_percentage: low
        id: high
        item: critical
        ledger_account: low
        line_number: medium
        quantity: high
        row_id: edge-case
        row_version: edge-case
        tax_amount: high
        tax_rate: medium
        total_amount: critical
        type: medium
        unit_of_measure: edge-case
        unit_price: high
    InvoiceResponse:
      properties:
        downstream_id:
          $ref: "#/components/schemas/DownstreamId"
        id:
          $ref: "#/components/schemas/Id"
      type: object
      x-apideck-schema-id: InvoiceResponse
    InvoicesSort:
      additionalProperties: false
      example:
        by: updated_at
        direction: desc
      properties:
        by:
          description: The field on which to sort the Invoices
          enum:
            - updated_at
          example: updated_at
          type: string
          x-apideck-enum-id: invoices.sort_by
          x-graphql-type-name: InvoicesSortBy
        direction:
          $ref: "#/components/schemas/SortDirection"
      type: object
      x-apideck-schema-id: InvoicesSort
      x-graphql-type-name: InvoicesSort
    Language:
      description: language code according to ISO 639-1. For the United States - EN
      example: EN
      nullable: true
      type: string
    LastName:
      example: Musk
      nullable: true
      title: Last name
      type: string
    LedgerAccount:
      additionalProperties: true
      properties:
        active:
          description: Whether the account is active or not.
          example: true
          nullable: true
          title: Is active
          type: boolean
        bank_account:
          $ref: "#/components/schemas/BankAccount"
        categories:
          description: The categories of the account.
          items:
            properties:
              id:
                example: "12345"
                readOnly: true
                type: string
              name:
                description: The name of the category.
                example: Finance Charges Expense
                readOnly: true
                title: Category name
                type: string
            type: object
          readOnly: true
          title: Categories
          type: array
        classification:
          description: The classification of account.
          enum:
            - asset
            - equity
            - expense
            - liability
            - revenue
            - income
            - other_income
            - other_expense
            - costs_of_sales
          example: asset
          nullable: true
          title: Classification
          type: string
          x-apideck-enum-id: ledger-accounts.classification
        code:
          description: The code assigned to the account.
          example: "453"
          nullable: true
          title: Code
          type: string
        created_at:
          $ref: "#/components/schemas/CreatedAt"
        created_by:
          $ref: "#/components/schemas/CreatedBy"
        currency:
          $ref: "#/components/schemas/Currency"
        current_balance:
          description: The current balance of the account.
          example: 20000
          nullable: true
          title: Current balance
          type: number
        description:
          description: The description of the account.
          example: Main checking account
          nullable: true
          title: Description
          type: string
        display_id:
          description: The human readable display ID used when displaying the account
          example: 1-12345
          title: Display ID
          type: string
        fully_qualified_name:
          description: The fully qualified name of the account.
          example: Asset.Bank.Checking_Account
          nullable: true
          title: Fully Qualified Name
          type: string
        header:
          description: Whether the account is a header or not.
          example: true
          nullable: true
          title: Is header
          type: boolean
        id:
          $ref: "#/components/schemas/Id"
        last_reconciliation_date:
          description: Reconciliation Date means the last calendar day of each Reconciliation Period.
          example: 2020-09-30
          format: date
          nullable: true
          title: Last Reconciliation Date
          type: string
        level:
          example: 1
          nullable: true
          type: number
        name:
          description: The name of the account.
          example: Bank account
          nullable: true
          title: Name
          type: string
        nominal_code:
          deprecated: true
          description: The nominal code of the ledger account.
          example: N091
          nullable: true
          title: Nominal Code
          type: string
        opening_balance:
          description: The opening balance of the account.
          example: 75000
          nullable: true
          title: Opening balance
          type: number
        parent_account:
          properties:
            display_id:
              description: The human readable display ID used when displaying the parent account
              example: 1-1100
              title: Display ID
              type: string
            id:
              description: The ID of the parent account.
              example: "12345"
              title: Parent account ID
              type: string
            name:
              description: The name of the parent account.
              example: Bank Accounts
              title: Name
              type: string
          type: object
        row_version:
          $ref: "#/components/schemas/RowVersion"
        status:
          description: The status of the account.
          enum:
            - active
            - inactive
            - archived
          example: active
          nullable: true
          title: Account status
          type: string
          x-apideck-enum-id: ledger-accounts.status
          x-graphql-type-name: LedgerAccountStatus
        sub_account:
          description: Whether the account is a sub account or not.
          example: false
          nullable: true
          title: Is sub account
          type: boolean
        sub_accounts:
          description: The sub accounts of the account.
          items:
            properties:
              account_sub_name:
                description: The name of the sub account.
                example: Petty Cash
                readOnly: true
                title: Sub Account Name
                type: string
              id:
                description: The ID of the sub account.
                example: "12345"
                readOnly: true
                title: Sub account ID
                type: string
          readOnly: true
          title: Sub accounts
          type: array
        sub_type:
          description: The sub type of account.
          example: CHECKING_ACCOUNT
          nullable: true
          title: Sub Type
          type: string
        tax_rate:
          $ref: "#/components/schemas/LinkedTaxRate"
        tax_type:
          description: The tax type of the account.
          example: NONE
          nullable: true
          title: Tax Type
          type: string
        type:
          description: The type of account.
          enum:
            - accounts_receivable
            - revenue
            - sales
            - other_income
            - bank
            - current_asset
            - fixed_asset
            - non_current_asset
            - other_asset
            - balancesheet
            - equity
            - expense
            - other_expense
            - costs_of_sales
            - accounts_payable
            - credit_card
            - current_liability
            - non_current_liability
            - other_liability
          example: bank
          title: Type
          type: string
          x-apideck-enum-id: ledger-accounts.type
          x-graphql-type-name: LedgerAccountType
        updated_at:
          $ref: "#/components/schemas/UpdatedAt"
        updated_by:
          $ref: "#/components/schemas/UpdatedBy"
      type: object
      x-apideck-schema-id: LedgerAccount
      x-apideck-weights:
        active: edge-case
        bank_account: high
        categories: high
        classification: edge-case
        code: low
        created_at: low
        created_by: edge-case
        currency: edge-case
        current_balance: edge-case
        description: edge-case
        display_id: low
        fully_qualified_name: edge-case
        header: edge-case
        id: critical
        last_reconciliation_date: edge-case
        level: edge-case
        name: high
        nominal_code: low
        opening_balance: edge-case
        parent_account: high
        row_version: edge-case
        status: medium
        sub_account: medium
        sub_accounts: medium
        sub_type: edge-case
        tax_rate: edge-case
        tax_type: edge-case
        type: high
        updated_at: high
        updated_by: edge-case
    LedgerAccounts:
      items:
        $ref: "#/components/schemas/LedgerAccount"
      type: array
    LinkedCustomer:
      description: The customer this entity is linked to.
      nullable: true
      properties:
        company_name:
          description: The company name of the customer.
          example: The boring company
          nullable: true
          readOnly: true
          title: Company Name
          type: string
        display_id:
          description: The display ID of the customer.
          example: CUST00101
          nullable: true
          readOnly: true
          title: Display ID
          type: string
        display_name:
          description: The display name of the customer.
          example: Windsurf Shop
          nullable: true
          title: Display Name
          type: string
        id:
          description: The ID of the customer this entity is linked to.
          example: "12345"
          title: Customer ID
          type: string
        name:
          deprecated: true
          description: The name of the customer. Deprecated, use display_name instead.
          example: Windsurf Shop
          title: Name
          type: string
      required:
        - id
      title: LinkedCustomer
      type: object
      x-apideck-schema-id: LinkedCustomer
      x-apideck-weights:
        company_name: medium
        display_id: medium
        display_name: medium
        id: medium
      x-graphql-type-name: AccountingLinkedCustomer
    LinkedInvoiceItem:
      properties:
        code:
          description: User defined item code
          example: 120-C
          nullable: true
          readOnly: true
          title: Item code
          type: string
        id:
          description: ID of the linked item. A reference to the [invoice item](https://developers.apideck.com/apis/accounting/reference#tag/Invoice-Items) that was used to create this line item
          example: "12344"
          nullable: true
          title: Item ID
          type: string
        name:
          description: User defined item name
          example: Model Y
          nullable: true
          readOnly: true
          title: Item name
          type: string
      type: object
      x-apideck-schema-id: LinkedInvoiceItem
      x-apideck-weights:
        code: medium
        id: medium
        name: medium
      x-graphql-type-name: LinkedInvoiceItem
    LinkedLedgerAccount:
      nullable: true
      properties:
        code:
          description: The code assigned to the account.
          example: "453"
          nullable: true
          title: Code
          type: string
        id:
          description: The unique identifier for the account.
          example: "123456"
          title: Account ID
          type: string
        name:
          description: The name of the account.
          example: Bank account
          nullable: true
          readOnly: true
          title: Account Name
          type: string
        nominal_code:
          description: The nominal code of the account.
          example: N091
          nullable: true
          title: Nominal Code
          type: string
      type: object
      x-apideck-schema-id: LinkedLedgerAccount
      x-apideck-weights:
        code: medium
        id: medium
        name: medium
        nominal_code: medium
      x-graphql-type-name: LinkedLedgerAccount
    LinkedSupplier:
      description: The supplier this entity is linked to.
      nullable: true
      properties:
        address:
          $ref: "#/components/schemas/Address"
        company_name:
          description: The company name of the supplier.
          example: The boring company
          nullable: true
          readOnly: true
          title: Company Name
          type: string
        display_name:
          description: The display name of the supplier.
          example: Windsurf Shop
          nullable: true
          title: Display Name
          type: string
        id:
          description: The ID of the supplier this entity is linked to.
          example: "12345"
          title: Supplier ID
          type: string
      required:
        - id
      title: LinkedSupplier
      type: object
      x-apideck-schema-id: LinkedSupplier
      x-apideck-weights:
        address: low
        company_name: edge-case
        display_name: high
        id: medium
      x-graphql-type-name: AccountingLinkedSupplier
    LinkedTaxRate:
      properties:
        code:
          description: Tax rate code
          example: N-T
          nullable: true
          readOnly: true
          title: Tax rate code
          type: string
        id:
          description: The ID of the object.
          example: "123456"
          nullable: true
          title: The ID of the object.
          type: string
        name:
          description: Name of the tax rate
          example: GST on Purchases
          nullable: true
          readOnly: true
          title: Name
          type: string
      type: object
      x-apideck-schema-id: LinkedTaxRate
      x-apideck-weights:
        code: medium
        id: medium
        name: medium
      x-graphql-type-name: LinkedTaxRate
    Links:
      description: Links to navigate to previous or next pages through the API
      properties:
        current:
          description: Link to navigate to the current page through the API
          example: https://unify.apideck.com/crm/companies
          type: string
        next:
          description: Link to navigate to the previous page through the API
          example: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM
          nullable: true
          type: string
        previous:
          description: Link to navigate to the previous page through the API
          example: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D
          nullable: true
          type: string
      type: object
      x-apideck-schema-id: Links
    Meta:
      description: Response metadata
      properties:
        cursors:
          description: Cursors to navigate to previous or next pages through the API
          properties:
            current:
              description: Cursor to navigate to the current page of results through the API
              example: em9oby1jcm06OnBhZ2U6OjI=
              nullable: true
              type: string
            next:
              description: Cursor to navigate to the next page of results through the API
              example: em9oby1jcm06OnBhZ2U6OjM=
              nullable: true
              type: string
            previous:
              description: Cursor to navigate to the previous page of results through the API
              example: em9oby1jcm06OnBhZ2U6OjE=
              nullable: true
              type: string
          type: object
        items_on_page:
          description: Number of items returned in the data property of the response
          example: 50
          type: integer
      type: object
      x-apideck-schema-id: Meta
    MiddleName:
      example: D.
      nullable: true
      title: Middle name
      type: string
    NotFoundResponse:
      properties:
        detail:
          anyOf:
            - example: "Could not find widget with id: '123'"
              type: string
            - example:
                not_found:
                  entity: widget
                  id: "123"
              type: object
          description: Contains parameter or domain specific information related to the error and why it occurred.
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Not Found
          type: string
        message:
          description: A human-readable message providing more details about the error.
          example: Unknown Widget
          type: string
        ref:
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#entitynotfounderror
          type: string
        status_code:
          description: HTTP status code
          example: 404
          type: number
        type_name:
          description: The type of error returned
          example: EntityNotFoundError
          type: string
      type: object
      x-apideck-schema-id: NotFound
    NotImplementedResponse:
      properties:
        detail:
          anyOf:
            - example: Failed to retrieve Widget tokenUrl from 'components.securitySchemes.OAuth2.flows'
              type: string
            - type: object
          description: Contains parameter or domain specific information related to the error and why it occurred.
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Not Implemented
          type: string
        message:
          description: A human-readable message providing more details about the error.
          example: Unmapped Attribute
          type: string
        ref:
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#mappingerror
          type: string
        status_code:
          description: HTTP status code
          example: 501
          type: number
        type_name:
          description: The type of error returned
          example: MappingError
          type: string
      type: object
      x-apideck-schema-id: NotImplemented
    Passthrough:
      additionalProperties: true
      properties:
        example_downstream_property:
          description: All passthrough query parameters are passed along to the connector as is (?pass_through[search]=leads becomes ?search=leads)
          type: string
      type: object
    Payment:
      properties:
        account:
          $ref: "#/components/schemas/LinkedLedgerAccount"
        accounts_receivable_account_id:
          deprecated: true
          description: Unique identifier for the account to allocate payment to.
          example: "123456"
          nullable: true
          title: Accounts receivable account id
          type: string
        accounts_receivable_account_type:
          deprecated: true
          description: Type of accounts receivable account.
          example: Account
          nullable: true
          title: Type of accounts receivable account
          type: string
        allocations:
          items:
            properties:
              amount:
                description: Amount of payment that should be attributed to this allocation. If null, the total_amount will be used.
                example: 49.99
                nullable: true
                title: Amount
                type: number
              code:
                example: N091
                readOnly: true
                type: string
              id:
                description: Unique identifier of entity this payment should be attributed to.
                example: "123456"
                title: Linked entity ID
                type: string
              type:
                description: Type of entity this payment should be attributed to.
                enum:
                  - invoice
                  - order
                  - expense
                  - credit_memo
                  - over_payment
                  - pre_payment
                title: Allocation type
                type: string
                x-apideck-enum-id: allocations.type
                x-graphql-type-name: AllocationType
            type: object
            x-apideck-weights:
              amount: medium
              code: medium
              id: medium
              type: medium
            x-graphql-type-name: PaymentAllocation
          type: array
        created_at:
          $ref: "#/components/schemas/CreatedAt"
        created_by:
          $ref: "#/components/schemas/CreatedBy"
        currency:
          $ref: "#/components/schemas/Currency"
        currency_rate:
          $ref: "#/components/schemas/CurrencyRate"
        customer:
          $ref: "#/components/schemas/LinkedCustomer"
        display_id:
          description: Payment id to be displayed.
          example: "123456"
          nullable: true
          title: Display id
          type: string
        id:
          description: Unique identifier representing the entity
          example: "123456"
          readOnly: true
          title: Payment identifier
          type: string
        note:
          description: Optional note to be associated with the payment.
          example: Some notes about this payment
          nullable: true
          title: Note
          type: string
        payment_method:
          description: Payment method
          example: Credit Card
          nullable: true
          title: Payment method
          type: string
        payment_method_reference:
          description: Optional reference message returned by payment method on processing
          example: "123456"
          nullable: true
          title: Payment method reference
          type: string
        reconciled:
          description: Payment has been reconciled
          example: true
          title: Reconciled
          type: boolean
        reference:
          description: "Optional payment reference message ie: Debit remittance detail."
          example: "123456"
          nullable: true
          title: Payment reference
          type: string
        row_version:
          $ref: "#/components/schemas/RowVersion"
        status:
          description: Status of payment
          enum:
            - authorised
            - paid
            - voided
            - deleted
          example: authorised
          title: Payment status
          type: string
          x-apideck-enum-id: payments.status
          x-graphql-type-name: PaymentStatus
        total_amount:
          description: Amount of payment
          example: 49.99
          title: Total amount
          type: number
        transaction_date:
          description: Date transaction was entered - YYYY:MM::DDThh:mm:ss.sTZD
          example: 2021-05-01T12:00:00.000Z
          format: date-time
          title: Transaction datetime
          type: string
        type:
          description: Type of payment
          enum:
            - accounts_receivable
            - accounts_payable
            - accounts_receivable_credit
            - accounts_payable_credit
            - accounts_receivable_overpayment
            - accounts_payable_overpayment
            - accounts_receivable_prepayment
            - accounts_payable_prepayment
          example: accounts_receivable
          title: Payment Type
          type: string
          x-apideck-enum-id: payments.type
          x-graphql-type-name: PaymentType
        updated_at:
          $ref: "#/components/schemas/UpdatedAt"
        updated_by:
          $ref: "#/components/schemas/UpdatedBy"
      required:
        - total_amount
        - transaction_date
      type: object
      x-apideck-schema-id: Payment
      x-apideck-weights:
        account: critical
        accounts_receivable_account_id: edge-case
        accounts_receivable_account_type: edge-case
        allocations: critical
        created_at: medium
        created_by: edge-case
        currency: critical
        currency_rate: medium
        customer: high
        display_id: low
        id: critical
        note: low
        payment_method: medium
        payment_method_reference: medium
        reconciled: low
        reference: medium
        row_version: edge-case
        status: high
        total_amount: critical
        transaction_date: critical
        type: high
        updated_at: medium
        updated_by: edge-case
    PaymentRequiredResponse:
      properties:
        detail:
          description: Contains parameter or domain specific information related to the error and why it occurred.
          example: You have reached your limit of 2000
          type: string
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Payment Required
          type: string
        message:
          description: A human-readable message providing more details about the error.
          example: Request Limit Reached
          type: string
        ref:
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#requestlimiterror
          type: string
        status_code:
          description: HTTP status code
          example: 402
          type: number
        type_name:
          description: The type of error returned
          example: RequestLimitError
          type: string
      type: object
      x-apideck-schema-id: PaymentRequired
    PhoneNumber:
      additionalProperties: false
      properties:
        area_code:
          example: "323"
          nullable: true
          title: Area code
          type: string
        country_code:
          example: "1"
          nullable: true
          title: Country code
          type: string
        extension:
          example: "105"
          nullable: true
          title: Phone extension
          type: string
        id:
          example: "12345"
          nullable: true
          type: string
        number:
          example: 111-111-1111
          minLength: 1
          title: Phone number
          type: string
        type:
          enum:
            - primary
            - secondary
            - home
            - work
            - office
            - mobile
            - assistant
            - fax
            - direct-dial-in
            - personal
            - other
          example: primary
          type: string
          x-apideck-enum-id: phone_numbers.type
          x-graphql-type-name: PhoneType
      required:
        - number
      type: object
      x-apideck-schema-id: PhoneNumber
      x-apideck-weights:
        area_code: edge-case
        country_code: edge-case
        extension: edge-case
        id: edge-case
        number: critical
        type: critical
    ProfitAndLoss:
      additionalProperties: false
      properties:
        currency:
          example: USD
          title: Currency
          type: string
        customer_id:
          description: Customer id
          example: "123"
          title: Customer Id
          type: string
        end_date:
          description: The start date of the report
          example: 2017-01-01
          pattern: ^\d{4}-\d{2}-\d{2}$
          title: Start Date
          type: string
        expenses:
          example:
            records:
              - amount: 10000
                id: "123"
                name: Expense 1
              - amount: 20000
                id: "456"
                name: Expense 2
            total: 200000
          properties:
            records:
              $ref: "#/components/schemas/ProfitAndLossRecords"
            total:
              description: Total expense
              example: 100000
              nullable: true
              title: Total expense
              type: number
          required:
            - total
            - records
          type: object
          x-apideck-weights:
            record: critical
            total: critical
        gross_profit:
          example:
            total: 200000
          nullable: true
          properties:
            records:
              $ref: "#/components/schemas/ProfitAndLossRecords"
            total:
              description: Total gross profit
              example: 100000
              nullable: true
              title: Total gross profit
              type: number
          required:
            - total
            - records
          type: object
          x-apideck-weights:
            record: critical
            total: critical
        id:
          $ref: "#/components/schemas/Id"
        income:
          example:
            records:
              - amount: 10000
                id: "123"
                name: Income 1
              - amount: 20000
                id: "456"
                name: Income 2
            total: 200000
          properties:
            records:
              $ref: "#/components/schemas/ProfitAndLossRecords"
            total:
              description: Total income
              example: 100000
              nullable: true
              title: Total income
              type: number
          required:
            - total
            - records
          type: object
          x-apideck-weights:
            record: critical
            total: critical
        net_income:
          example:
            total: 200000
          nullable: true
          properties:
            records:
              $ref: "#/components/schemas/ProfitAndLossRecords"
            total:
              description: Total net income
              example: 100000
              nullable: true
              title: Total net income
              type: number
          required:
            - total
            - records
          type: object
          x-apideck-weights:
            record: critical
            total: critical
        net_operating_income:
          example:
            total: 200000
          nullable: true
          properties:
            records:
              $ref: "#/components/schemas/ProfitAndLossRecords"
            total:
              description: Total net operating income
              example: 100000
              nullable: true
              title: Total net operating income
              type: number
          required:
            - total
            - records
          type: object
          x-apideck-weights:
            record: critical
            total: critical
        report_name:
          description: The name of the report
          example: ProfitAndLoss
          title: Report Name
          type: string
        start_date:
          description: The start date of the report
          example: 2017-01-01
          pattern: ^\d{4}-\d{2}-\d{2}$
          title: Start Date
          type: string
      required:
        - report_name
        - currency
        - income
        - expenses
      type: object
      x-apideck-circular-ref: true
      x-apideck-schema-id: ProfitAndLoss
      x-apideck-weights:
        currency: critical
        customer: low
        end_date: low
        expenses: critical
        gross_profit: medium
        id: medium
        income: critical
        net_income: medium
        net_operating_income: medium
        report_name: medium
        start_date: low
    ProfitAndLossFilter:
      additionalProperties: false
      example:
        customer_id: 123abc
        end_date: 2021-12-31
        start_date: 2021-01-01
      properties:
        customer_id:
          description: Filter by customer id
          example: 123abc
          title: Customer Id
          type: string
        end_date:
          description: Filter by end date. If end date is given, start date is required.
          example: 2021-12-31
          title: End date
          type: string
        start_date:
          description: Filter by start date. If start date is given, end date is required.
          example: 2021-01-01
          title: Start date
          type: string
      type: object
      x-apideck-schema-id: ProfitAndLossFilter
      x-graphql-type-name: ProfitAndLossFilter
    ProfitAndLossRecord:
      example:
        type: Record
      properties:
        id:
          example: 123abc
          nullable: true
          type: string
        title:
          example: Income
          nullable: true
          type: string
        type:
          example: Record
          type: string
        value:
          example: 23992.34
          nullable: true
          type: number
      required:
        - type
      type: object
      x-apideck-schema-id: ProfitAndLossRecord
      x-apideck-weights:
        type: critical
      x-graphql-type-name: ProfitAndLossRecord
    ProfitAndLossRecords:
      items:
        anyOf:
          - $ref: "#/components/schemas/ProfitAndLossSection"
          - $ref: "#/components/schemas/ProfitAndLossRecord"
      nullable: true
      type: array
      x-apideck-schema-id: ProfitAndLossRecords
      x-graphql-type-name: ProfitAndLossRecords
    ProfitAndLossSection:
      example:
        total: 200000
      properties:
        id:
          example: 123abc
          nullable: true
          type: string
        records:
          $ref: "#/components/schemas/ProfitAndLossRecords"
        title:
          example: Income
          nullable: true
          type: string
        total:
          example: 23992.34
          nullable: true
          type: number
        type:
          example: Section
          type: string
      required:
        - type
      type: object
      x-apideck-schema-id: ProfitAndLossSection
      x-apideck-weights:
        id: medium
        records: medium
        title: medium
        total: medium
        type: critical
      x-graphql-type-name: ProfitAndLossSection
    Quantity:
      example: 1
      nullable: true
      title: Quantity
      type: number
    RowVersion:
      example: 1-12345
      nullable: true
      title: Row version
      type: string
    SalesTaxNumber:
      example: 111.222.333
      nullable: true
      title: Sales Tax Number
      type: string
    SocialLink:
      additionalProperties: false
      properties:
        id:
          example: "12345"
          nullable: true
          type: string
        type:
          example: twitter
          nullable: true
          type: string
        url:
          example: https://www.twitter.com/apideck-io
          minLength: 1
          type: string
      required:
        - url
      type: object
      x-apideck-schema-id: SocialLink
      x-apideck-weights:
        id: edge-case
        type: critical
        url: critical
    SortDirection:
      default: asc
      description: The direction in which to sort the results
      enum:
        - asc
        - desc
      type: string
      x-apideck-enum-id: sort_direction
      x-apideck-schema-id: SortDirection
      x-graphql-type-name: SortDirection
    Suffix:
      example: Jr.
      nullable: true
      title: Suffix
      type: string
    Supplier:
      properties:
        account:
          $ref: "#/components/schemas/LinkedLedgerAccount"
        addresses:
          items:
            $ref: "#/components/schemas/Address"
          type: array
        bank_accounts:
          items:
            $ref: "#/components/schemas/BankAccount"
          type: array
        company_name:
          $ref: "#/components/schemas/CompanyName"
        created_at:
          $ref: "#/components/schemas/CreatedAt"
        created_by:
          $ref: "#/components/schemas/CreatedBy"
        currency:
          $ref: "#/components/schemas/Currency"
        display_name:
          description: Display name of supplier.
          example: Windsurf Shop
          nullable: true
          title: Display Name
          type: string
        downstream_id:
          $ref: "#/components/schemas/DownstreamId"
        emails:
          items:
            $ref: "#/components/schemas/Email"
          type: array
        first_name:
          $ref: "#/components/schemas/FirstName"
        id:
          $ref: "#/components/schemas/Id"
        last_name:
          $ref: "#/components/schemas/LastName"
        middle_name:
          $ref: "#/components/schemas/MiddleName"
        notes:
          example: Some notes about this supplier
          nullable: true
          title: Notes
          type: string
        phone_numbers:
          items:
            $ref: "#/components/schemas/PhoneNumber"
          type: array
        row_version:
          $ref: "#/components/schemas/RowVersion"
        status:
          description: Customer status
          enum:
            - active
            - inactive
            - archived
            - gdpr-erasure-request
            - unknown
          example: active
          nullable: true
          title: Status
          type: string
          x-apideck-enum-id: customers.status
          x-graphql-type-name: CustomerStatus
        suffix:
          $ref: "#/components/schemas/Suffix"
        tax_number:
          $ref: "#/components/schemas/TaxNumber"
        tax_rate:
          $ref: "#/components/schemas/LinkedTaxRate"
        title:
          $ref: "#/components/schemas/Title"
        updated_at:
          $ref: "#/components/schemas/UpdatedAt"
        updated_by:
          $ref: "#/components/schemas/UpdatedBy"
        websites:
          items:
            $ref: "#/components/schemas/Website"
          type: array
      type: object
      x-apideck-schema-id: Supplier
      x-apideck-weights:
        account: edge-case
        addresses: high
        bank_accounts: high
        company_name: high
        created_at: low
        created_by: edge-case
        currency: high
        display_name: edge-case
        downstream_id: edge-case
        emails: high
        first_name: high
        id: critical
        last_name: high
        middle_name: low
        notes: low
        phone_numbers: high
        row_version: edge-case
        status: high
        suffix: low
        tax_number: medium
        tax_rate: high
        title: high
        updated_at: medium
        updated_by: edge-case
        websites: medium
      x-graphql-type-name: Supplier
    Tags:
      example:
        - New
      items:
        type: string
      type: array
      x-apideck-schema-id: Tags
    TaxInclusive:
      description: Amounts are including tax
      example: true
      nullable: true
      title: Tax inclusive
      type: boolean
    TaxNumber:
      example: US123945459
      nullable: true
      title: Tax number
      type: string
    TaxRate:
      additionalProperties: false
      properties:
        code:
          description: Tax code assigned to identify this tax rate.
          example: ABN
          nullable: true
          title: Tax code
          type: string
        components:
          items:
            properties:
              compound:
                example: true
                nullable: true
                title: Compound
                type: boolean
              id:
                example: "10"
                nullable: true
                title: TaxRate Id
                type: string
              name:
                example: GST
                minLength: 1
                type: string
              rate:
                example: 10
                nullable: true
                title: TaxRate
                type: number
            x-apideck-weights:
              compound: medium
              id: medium
              name: medium
              rate: medium
          nullable: true
          title: Tax components
          type: array
        created_at:
          $ref: "#/components/schemas/CreatedAt"
        created_by:
          $ref: "#/components/schemas/CreatedBy"
        description:
          description: Description of tax rate
          example: Reduced rate GST Purchases
          nullable: true
          title: Description
          type: string
        effective_tax_rate:
          description: Effective tax rate
          example: 10
          nullable: true
          title: Effective tax rate
          type: number
        id:
          description: ID assigned to identify this tax rate.
          example: "1234"
          nullable: true
          type: string
        name:
          description: Name assigned to identify this tax rate.
          example: GST on Purchases
          minLength: 1
          title: Name
          type: string
        original_tax_rate_id:
          description: ID of the original tax rate from which the new tax rate is derived. Helps to understand the relationship between corresponding tax rate entities.
          example: "12345"
          nullable: true
          title: Original tax rate ID
          type: string
        report_tax_type:
          description: Report Tax type to aggregate tax collected or paid for reporting purposes
          example: NONE
          nullable: true
          title: Report Tax Type
          type: string
        row_version:
          $ref: "#/components/schemas/RowVersion"
        status:
          description: Tax rate status
          enum:
            - active
            - inactive
            - archived
          example: active
          nullable: true
          title: Tax rate status
          type: string
          x-apideck-enum-id: tax-rates.status
          x-graphql-type-name: TaxRateStatus
        tax_payable_account_id:
          description: Unique identifier for the account for tax collected.
          example: "123456"
          nullable: true
          title: Tax payable account id
          type: string
        tax_remitted_account_id:
          description: Unique identifier for the account for tax remitted.
          example: "123456"
          nullable: true
          title: Tax remitted account id
          type: string
        total_tax_rate:
          description: Not compounded sum of the components of a tax rate
          example: 10
          nullable: true
          title: Total tax rate
          type: number
        type:
          description: Tax type used to indicate the source of tax collected or paid
          example: NONE
          nullable: true
          title: Tax Type
          type: string
        updated_at:
          $ref: "#/components/schemas/UpdatedAt"
        updated_by:
          $ref: "#/components/schemas/UpdatedBy"
      type: object
      x-apideck-schema-id: TaxRate
      x-apideck-weights:
        code: edge-case
        components: medium
        created_at: low
        created_by: edge-case
        description: low
        effective_tax_rate: critical
        id: critical
        name: high
        original_tax_rate_id: edge-case
        report_tax_type: edge-case
        row_version: edge-case
        status: high
        tax_payable_account_id: high
        tax_remitted_account_id: medium
        total_tax_rate: high
        type: high
        updated_at: medium
        updated_by: edge-case
    TaxRatesFilter:
      additionalProperties: false
      example:
        assets: true
        equity: true
        expenses: true
        liabilities: true
        revenue: true
      properties:
        assets:
          description: Boolean to describe if tax rate can be used for asset accounts
          example: true
          title: Assets
          type: boolean
        equity:
          description: Boolean to describe if tax rate can be used for equity accounts
          example: true
          title: Equity
          type: boolean
        expenses:
          description: Boolean to describe if tax rate can be used for expense accounts
          example: true
          title: Expenses
          type: boolean
        liabilities:
          description: Boolean to describe if tax rate can be used for liability accounts
          example: true
          title: Liabilities
          type: boolean
        revenue:
          description: Boolean to describe if tax rate can be used for revenue accounts
          example: true
          title: Revenue
          type: boolean
      type: object
      x-apideck-schema-id: TaxRatesFilter
      x-graphql-type-name: TaxRatesFilter
    Title:
      example: CEO
      nullable: true
      title: Job title
      type: string
    TooManyRequestsResponse:
      properties:
        detail:
          properties:
            context:
              type: string
            error:
              additionalProperties: true
              type: object
          type: object
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 6585)
          example: Too Many Requests
          type: string
        message:
          description: A human-readable message providing more details about the error.
          example: Connector Rate Limit Error
          type: string
        ref:
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#connectorratelimiterror
          type: string
        status_code:
          description: HTTP status code
          example: 429
          type: number
        type_name:
          description: The type of error returned
          example: ConnectorRateLimitError
          type: string
      type: object
      x-apideck-schema-id: TooManyRequests
    UnauthorizedResponse:
      properties:
        detail:
          description: Contains parameter or domain specific information related to the error and why it occurred.
          example: Failed to generate valid JWT Session. Verify applicationId is correct
          type: string
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Unauthorized
          type: string
        message:
          description: A human-readable message providing more details about the error.
          example: Unauthorized Request
          type: string
        ref:
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#unauthorizederror
          type: string
        status_code:
          description: HTTP status code
          example: 401
          type: number
        type_name:
          description: The type of error returned
          example: UnauthorizedError
          type: string
      type: object
      x-apideck-schema-id: Unauthorized
    UnexpectedErrorResponse:
      properties:
        detail:
          anyOf:
            - example: "Missing Header: x-apideck-consumer-id"
              type: string
            - example:
                missing:
                  - x-apideck-consumer-id: required
              type: object
          description: Contains parameter or domain specific information related to the error and why it occurred.
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Bad Request
          type: string
        message:
          description: A human-readable message providing more details about the error.
          example: Invalid Params
          type: string
        ref:
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#unauthorizederror
          type: string
        status_code:
          description: HTTP status code
          example: 400
          type: number
        type_name:
          description: The type of error returned
          example: RequestHeadersValidationError
          type: string
      type: object
      x-apideck-schema-id: Error
    UnifiedId:
      properties:
        id:
          example: "12345"
          readOnly: true
          type: string
      required:
        - id
      title: UnifiedId
      type: object
      x-apideck-schema-id: Id
    UnitOfMeasure:
      description: "Description of the unit type the item is sold as, ie: kg, hour."
      example: pc.
      nullable: true
      title: Unit of measure
      type: string
    UnitPrice:
      example: 27500.5
      nullable: true
      title: Unit price
      type: number
    UnprocessableResponse:
      properties:
        detail:
          description: Contains parameter or domain specific information related to the error and why it occurred.
          example: Unprocessable request, please verify your request headers and body.
          type: string
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Unprocessable Entity
          type: string
        message:
          description: A human-readable message providing more details about the error.
          example: Invalid State
          type: string
        ref:
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#invalidstateerror
          type: string
        status_code:
          description: HTTP status code
          example: 422
          type: number
        type_name:
          description: The type of error returned
          example: InvalidStateError
          type: string
      type: object
      x-apideck-schema-id: Unprocessable
    UpdateBillResponse:
      properties:
        data:
          $ref: "#/components/schemas/UnifiedId"
        operation:
          description: Operation performed
          example: update
          type: string
        resource:
          description: Unified API resource name
          example: bills
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: UpdateBillResponse
    UpdateCreditNoteResponse:
      properties:
        data:
          $ref: "#/components/schemas/UnifiedId"
        operation:
          description: Operation performed
          example: update
          type: string
        resource:
          description: Unified API resource name
          example: credit-notes
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: UpdateCreditNoteResponse
    UpdateCustomerResponse:
      properties:
        data:
          $ref: "#/components/schemas/UnifiedId"
        operation:
          description: Operation performed
          example: update
          type: string
        resource:
          description: Unified API resource name
          example: customers
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: UpdateCustomerResponse
    UpdateInvoiceItemsResponse:
      properties:
        data:
          $ref: "#/components/schemas/UnifiedId"
        operation:
          description: Operation performed
          example: update
          type: string
        resource:
          description: Unified API resource name
          example: invoice-items
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: UpdateInvoiceItemsResponse
    UpdateInvoiceResponse:
      properties:
        data:
          $ref: "#/components/schemas/InvoiceResponse"
        operation:
          description: Operation performed
          example: update
          type: string
        resource:
          description: Unified API resource name
          example: invoices
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: UpdateInvoiceResponse
    UpdateLedgerAccountResponse:
      properties:
        data:
          $ref: "#/components/schemas/UnifiedId"
        operation:
          description: Operation performed
          example: update
          type: string
        resource:
          description: Unified API resource name
          example: ledger-accounts
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: UpdateLedgerAccountResponse
    UpdatePaymentResponse:
      properties:
        data:
          $ref: "#/components/schemas/UnifiedId"
        operation:
          description: Operation performed
          example: update
          type: string
        resource:
          description: Unified API resource name
          example: payments
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: UpdatePaymentResponse
    UpdateSupplierResponse:
      properties:
        data:
          $ref: "#/components/schemas/UnifiedId"
        operation:
          description: Operation performed
          example: update
          type: string
        resource:
          description: Unified API resource name
          example: suppliers
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: UpdateSupplierResponse
    UpdateTaxRateResponse:
      properties:
        data:
          $ref: "#/components/schemas/UnifiedId"
        operation:
          description: Operation performed
          example: update
          type: string
        resource:
          description: Unified API resource name
          example: tax-rates
          type: string
        service:
          description: Apideck ID of service provider
          example: xero
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: UpdateTaxRateResponse
    UpdatedAt:
      example: 2020-09-30T07:43:32.000Z
      format: date-time
      readOnly: true
      title: Updated at (timestamp)
      type: string
    UpdatedBy:
      example: "12345"
      nullable: true
      readOnly: true
      type: string
    Website:
      additionalProperties: false
      properties:
        id:
          example: "12345"
          nullable: true
          type: string
        type:
          enum:
            - primary
            - secondary
            - work
            - personal
            - other
          example: primary
          type: string
          x-apideck-enum-id: websites.type
          x-graphql-type-name: WebsiteType
        url:
          example: http://example.com
          minLength: 1
          type: string
      required:
        - url
      type: object
      x-apideck-schema-id: Website
      x-apideck-weights:
        id: edge-case
        type: critical
        url: critical
  securitySchemes:
    apiKey:
      description: |
        To use API you have to sign up and get your own API key. Unify API accounts have sandbox mode and live mode API keys. 
        To change modes just use the appropriate key to get a live or test object. You can find your API keys on the unify settings of your Apideck app.
        Your Apideck application_id can also be found on the same page.

        Authenticate your API requests by including your test or live secret API key in the request header. 

        - Bearer authorization header: `Authorization: Bearer <your-apideck-api-key>`
        - Application id header: `x-apideck-app-id: <your-apideck-app-id>`

        You should use the public keys on the SDKs and the secret keys to authenticate API requests.

        **Do not share or include your secret API keys on client side code.** Your API keys carry significant privileges. Please ensure to keep them 100% secure and be sure to not share your secret API keys in areas that are publicly accessible like GitHub.

        Learn how to set the Authorization header inside Postman https://learning.postman.com/docs/postman/sending-api-requests/authorization/#api-key

        Go to Unify to grab your API KEY https://app.apideck.com/unify/api-keys
      in: header
      name: Authorization
      type: apiKey
x-webhooks:
  CustomerCreated:
    post:
      description: Customer Created
      operationId: customerCreated
      parameters:
        - description: The type of event that was triggered
          in: header
          name: x-apideck-event-type
          required: true
          schema:
            $ref: "#/components/schemas/AccountingEventType"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountingWebhookEvent"
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received successfully
      summary: Customer Created
      tags:
        - Webhook Events
  CustomerDeleted:
    post:
      description: Activity Deleted
      operationId: activityDeleted
      parameters:
        - description: The type of event that was triggered
          in: header
          name: x-apideck-event-type
          required: true
          schema:
            $ref: "#/components/schemas/AccountingEventType"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountingWebhookEvent"
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received successfully
      summary: Activity Deleted
      tags:
        - Webhook Events
  CustomerUpdated:
    post:
      description: Activity Updated
      operationId: activityUpdated
      parameters:
        - description: The type of event that was triggered
          in: header
          name: x-apideck-event-type
          required: true
          schema:
            $ref: "#/components/schemas/AccountingEventType"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountingWebhookEvent"
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received successfully
      summary: Activity Updated
      tags:
        - Webhook Events
  InvoiceCreated:
    post:
      description: Invoice Created
      operationId: invoiceCreated
      parameters:
        - description: The type of event that was triggered
          in: header
          name: x-apideck-event-type
          required: true
          schema:
            $ref: "#/components/schemas/AccountingEventType"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountingWebhookEvent"
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received successfully
      summary: Invoice Created
      tags:
        - Webhook Events
  InvoiceDeleted:
    post:
      description: Invoice Deleted
      operationId: invoiceDeleted
      parameters:
        - description: The type of event that was triggered
          in: header
          name: x-apideck-event-type
          required: true
          schema:
            $ref: "#/components/schemas/AccountingEventType"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountingWebhookEvent"
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received successfully
      summary: Invoice Deleted
      tags:
        - Webhook Events
  InvoiceItemCreated:
    post:
      description: Invoice Item Created
      operationId: invoiceItemCreated
      parameters:
        - description: The type of event that was triggered
          in: header
          name: x-apideck-event-type
          required: true
          schema:
            $ref: "#/components/schemas/AccountingEventType"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountingWebhookEvent"
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received successfully
      summary: Invoice Item Created
      tags:
        - Webhook Events
  InvoiceItemDeleted:
    post:
      description: Invoice Item Deleted
      operationId: invoiceItemDeleted
      parameters:
        - description: The type of event that was triggered
          in: header
          name: x-apideck-event-type
          required: true
          schema:
            $ref: "#/components/schemas/AccountingEventType"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountingWebhookEvent"
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received successfully
      summary: Invoice Item Deleted
      tags:
        - Webhook Events
  InvoiceItemUpdated:
    post:
      description: Invoice Item Updated
      operationId: invoiceItemUpdated
      parameters:
        - description: The type of event that was triggered
          in: header
          name: x-apideck-event-type
          required: true
          schema:
            $ref: "#/components/schemas/AccountingEventType"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountingWebhookEvent"
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received successfully
      summary: Invoice Item Updated
      tags:
        - Webhook Events
  InvoiceUpdated:
    post:
      description: Invoice Updated
      operationId: invoiceUpdated
      parameters:
        - description: The type of event that was triggered
          in: header
          name: x-apideck-event-type
          required: true
          schema:
            $ref: "#/components/schemas/AccountingEventType"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountingWebhookEvent"
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received successfully
      summary: Invoice Updated
      tags:
        - Webhook Events
  LedgerAccountCreated:
    post:
      description: Ledger Account Created
      operationId: ledgerAccountCreated
      parameters:
        - description: The type of event that was triggered
          in: header
          name: x-apideck-event-type
          required: true
          schema:
            $ref: "#/components/schemas/AccountingEventType"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountingWebhookEvent"
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received successfully
      summary: Ledger Account Created
      tags:
        - Webhook Events
  LedgerAccountDeleted:
    post:
      description: Ledger Account Deleted
      operationId: ledgerAccountDeleted
      parameters:
        - description: The type of event that was triggered
          in: header
          name: x-apideck-event-type
          required: true
          schema:
            $ref: "#/components/schemas/AccountingEventType"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountingWebhookEvent"
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received successfully
      summary: Ledger Account Deleted
      tags:
        - Webhook Events
  LedgerAccountUpdated:
    post:
      description: Ledger Account Updated
      operationId: ledgerAccountUpdated
      parameters:
        - description: The type of event that was triggered
          in: header
          name: x-apideck-event-type
          required: true
          schema:
            $ref: "#/components/schemas/AccountingEventType"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountingWebhookEvent"
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received successfully
      summary: Ledger Account Updated
      tags:
        - Webhook Events
  TaxRateCreated:
    post:
      description: Tax Rate Created
      operationId: taxRateCreated
      parameters:
        - description: The type of event that was triggered
          in: header
          name: x-apideck-event-type
          required: true
          schema:
            $ref: "#/components/schemas/AccountingEventType"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountingWebhookEvent"
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received successfully
      summary: Tax Rate Created
      tags:
        - Webhook Events
  TaxRateDeleted:
    post:
      description: Tax Rate Deleted
      operationId: taxRateDeleted
      parameters:
        - description: The type of event that was triggered
          in: header
          name: x-apideck-event-type
          required: true
          schema:
            $ref: "#/components/schemas/AccountingEventType"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountingWebhookEvent"
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received successfully
      summary: Tax Rate Deleted
      tags:
        - Webhook Events
  TaxRateUpdated:
    post:
      description: Tax Rate Updated
      operationId: taxRateUpdated
      parameters:
        - description: The type of event that was triggered
          in: header
          name: x-apideck-event-type
          required: true
          schema:
            $ref: "#/components/schemas/AccountingEventType"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountingWebhookEvent"
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received successfully
      summary: Tax Rate Updated
      tags:
        - Webhook Events
  x-sdk-exclude: true
