openapi: 3.0.0
servers:
  - url: https://unify.apideck.com
info:
  contact:
    email: hello@apideck.com
    url: https://developers.apideck.com
  description: |+
    Welcome to the ATS API.

    You can use this API to access all ATS API endpoints.

    ## Base URL

    The base URL for all API requests is `https://unify.apideck.com`

    We also provide a [Mock API](https://developers.apideck.com/mock-api) that can be used for testing purposes: `https://mock-api.apideck.com`

    ## GraphQL

    Use the [GraphQL playground](https://developers.apideck.com/graphql/playground) to test out the GraphQL API.

    ## Headers

    Custom headers that are expected as part of the request. Note that [RFC7230](https://tools.ietf.org/html/rfc7230) states header names are case insensitive.

    | Name                  | Type    | Required | Description                                                                                                                                                    |
    | --------------------- | ------- | -------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------- |
    | x-apideck-consumer-id | String  | Yes      | The id of the customer stored inside Apideck Vault. This can be a user id, account id, device id or whatever entity that can have integration within your app. |
    | x-apideck-service-id  | String  | No       | Describe the service you want to call (e.g., pipedrive). Only needed when a customer has activated multiple integrations for the same Unified API.             |
    | x-apideck-raw         | Boolean | No       | Include raw response. Mostly used for debugging purposes.                                                                                                      |
    | x-apideck-app-id      | String  | Yes      | The application id of your Unify application. Available at https://app.apideck.com/unify/api-keys.                                                             |
    | Authorization         | String  | Yes      | Bearer API KEY                                                                                                                                                 |

    ## Authorization

    You can interact with the API through the authorization methods below.

    <!-- ReDoc-Inject: <security-definitions> -->

    ## Pagination

    All API resources have support for bulk retrieval via list APIs.  Apideck uses cursor-based pagination via the optional `cursor` and `limit` parameters.

    To fetch the first page of results, call the list API without a `cursor` parameter. Afterwards you can fetch subsequent pages by providing a cursor parameter. You will find the next cursor in the response body in `meta.cursors.next`. If `meta.cursors.next` is `null` you're at the end of the list.

    In the REST API you can also use the `links` from the response for added convenience. Simply call the URL in `links.next` to get the next page of results.

    ### Query Parameters

    | Name   | Type   | Required | Description                                                                                                        |
    | ------ | ------ | -------- | ------------------------------------------------------------------------------------------------------------------ |
    | cursor | String | No       | Cursor to start from. You can find cursors for next & previous pages in the meta.cursors property of the response. |
    | limit  | Number | No       | Number of results to return. Minimum 1, Maximum 200, Default 20                                                    |

    ### Response Body

    | Name                  | Type   | Description                                                        |
    | --------------------- | ------ | ------------------------------------------------------------------ |
    | meta.cursors.previous | String | Cursor to navigate to the previous page of results through the API |
    | meta.cursors.current  | String | Cursor to navigate to the current page of results through the API  |
    | meta.cursors.next     | String | Cursor to navigate to the next page of results through the API     |
    | meta.items_on_page    | Number | Number of items returned in the data property of the response      |
    | links.previous        | String | Link to navigate to the previous page of results through the API   |
    | links.current         | String | Link to navigate to the current page of results through the API    |
    | links.next            | String | Link to navigate to the next page of results through the API       |

    ⚠️ `meta.cursors.previous`/`links.previous` is not available for all connectors.

    ## SDKs and API Clients

    We currently offer a [Node.js](https://developers.apideck.com/sdks/node), [PHP](https://developers.apideck.com/sdks/php) and [.NET](https://developers.apideck.com/sdks/dot-net) SDK.
    Need another SDK? [Request the SDK of your choice](https://integrations.apideck.com/request).

    ## Debugging

    Because of the nature of the abstraction we do in Apideck Unify we still provide the option to the receive raw requests and responses being handled underlying. By including the raw flag `?raw=true` in your requests you can still receive the full request. Please note that this increases the response size and can introduce extra latency.

    ## Errors

    The API returns standard HTTP response codes to indicate success or failure of the API requests. For errors, we also return a customized error message inside the JSON response. You can see the returned HTTP status codes below.

    | Code | Title                | Description                                                                                                                                                                                              |
    | ---- | -------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
    | 200  | OK                   | The request message has been successfully processed, and it has produced a response. The response message varies, depending on the request method and the requested data.                                |
    | 201  | Created              | The request has been fulfilled and has resulted in one or more new resources being created.                                                                                                              |
    | 204  | No Content           | The server has successfully fulfilled the request and that there is no additional content to send in the response payload body.                                                                          |
    | 400  | Bad Request          | The receiving server cannot understand the request because of malformed syntax. Do not repeat the request without first modifying it; check the request for errors, fix them and then retry the request. |
    | 401  | Unauthorized         | The request has not been applied because it lacks valid authentication credentials for the target resource.                                                                                              |
    | 402  | Payment Required     | Subscription data is incomplete or out of date. You'll need to provide payment details to continue.                                                                                                      |
    | 403  | Forbidden            | You do not have the appropriate user rights to access the request. Do not repeat the request.                                                                                                            |
    | 404  | Not Found            | The origin server did not find a current representation for the target resource or is not willing to disclose that one exists.                                                                           |
    | 409  | Conflict             | The request could not be completed due to a conflict with the current state of the target resource.                                                                                                      |
    | 422  | Unprocessable Entity | The server understands the content type of the request entity, and the syntax of the request entity is correct but was unable to process the contained instructions.                                     |
    | 429  | Too Many Requests    | You sent too many requests in a given amount of time ("rate limit"). Try again later                                                                                                                     |
    | 5xx  | Server Errors        | Something went wrong with the Unify API. These errors are logged on our side. You can contact our team to resolve the issue.                                                                             |

    ### Handling errors

    The Unify API and SDKs can produce errors for many reasons, such as a failed requests due to misconfigured integrations, invalid parameters, authentication errors, and network unavailability.

    ### Error Types

    #### RequestValidationError

    Request is not valid for the current endpoint. The response body will include details on the validation error. Check the spelling and types of your attributes, and ensure you are not passing data that is outside of the specification.

    #### UnsupportedFiltersError

    Filters in the request are valid, but not supported by the connector. Remove the unsupported filter(s) to get a successful response.

    #### UnsupportedSortFieldError

    Sort field (`sort[by]`) in the request is valid, but not supported by the connector. Replace or remove the sort field to get a successful response.

    #### InvalidCursorError

    Pagination cursor in the request is not valid for the current connector. Make sure to use a cursor returned from the API, for the same connector.

    #### ConnectorExecutionError

    A Unified API request made via one of our downstream connectors returned an unexpected error. The `status_code` returned is proxied through to error response along with their original response via the error detail.

    #### UnauthorizedError

    We were unable to authorize the request as made. This can happen for a number of reasons, from missing header params to passing an incorrect authorization token. Verify your Api Key is being set correctly in the authorization header. ie: `Authorization: 'Bearer sk_live_***'`

    #### ConnectorCredentialsError

    A request using a given connector has not been authorized. Ensure the connector you are trying to use has been configured correctly and been authorized for use.

    #### ConnectorDisabledError

    A request has been made to a connector that has since been disabled. This may be temporary - You can contact our team to resolve the issue.

    #### ConnectorRateLimitError

    You sent too many request to a connector. These rate limits vary from connector to connector. You will need to try again later.

    #### RequestLimitError

    You have reached the number of requests included in your Free Tier Subscription. You will no be able to make further requests until this limit resets at the end of the month, or talk to us about upgrading your subscription to continue immediately.

    #### EntityNotFoundError

    You've made a request for a resource or route that does not exist. Verify your path parameters or any identifiers used to fetch this resource.

    #### OAuthCredentialsNotFoundError

    When adding a connector integration that implements OAuth, both a `client_id` and `client_secret` must be provided before any authorizations can be performed. Verify the integration has been configured properly before continuing.

    #### IntegrationNotFoundError

    The requested connector integration could not be found associated to your `application_id`. Verify your `application_id` is correct, and that this connector has been added and configured for your application.

    #### ConnectionNotFoundError

    A valid connection could not be found associated to your `application_id`. Something _may_ have interrupted the authorization flow. You may need to start the connector authorization process again.

    #### ConnectionSettingsError

    The connector has required settings that were not supplied. Verify `connection.settings` contains all required settings for the connector to be callable.

    #### ConnectorNotFoundError

    A request was made for an unknown connector. Verify your `service_id` is spelled correctly, and that this connector is enabled for your provided `unified_api`.

    #### OAuthRedirectUriError

    A request was made either in a connector authorization flow, or attempting to revoke connector access without a valid `redirect_uri`. This is the url the user should be returned to on completion of process.

    #### OAuthInvalidStateError

    The state param is required and is used to ensure the outgoing authorization state has not been altered before the user is redirected back. It also contains required params needed to identify the connector being used. If this has been altered, the authorization will not succeed.

    #### OAuthCodeExchangeError

    When attempting to exchange the authorization code for an `access_token` during an OAuth flow, an error occurred. This may be temporary. You can reattempt authorization or contact our team to resolve the issue.

    #### OAuthConnectorError

    It seems something went wrong on the connector side. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.

    #### MappingError

    There was an error attempting to retrieve the mapping for a given attribute. We've been notified and are working to fix this issue.

    #### ConnectorMappingNotFoundError

    It seems the implementation for this connector is incomplete. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.

    #### ConnectorResponseMappingNotFoundError

    We were unable to retrieve the response mapping for this connector. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.

    #### ConnectorOperationMappingNotFoundError

    Connector mapping has not been implemented for the requested operation. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.

    #### ConnectorWorkflowMappingError

    The composite api calls required for this operation have not been mapped entirely. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.

    #### ConnectorOperationUnsupportedError

    You're attempting a call that is not supported by the connector. It's likely this operation is supported by another connector, but we're unable to implement for this one.

    #### PaginationNotSupportedError

    Pagination is not yet supported for this connector, try removing limit and/or cursor from the query. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.

    ## API Design

    ### API Styles and data formats

    #### REST API

    The API is organized around [REST](https://restfulapi.net/), providing simple and predictable URIs to access and modify objects. Requests support standard HTTP methods like GET, PUT, POST, and DELETE and standard status codes. JSON is returned by all API responses, including errors. In all API requests, you must set the content-type HTTP header to application/json. All API requests must be made over HTTPS. Calls made over HTTP will fail.

    ##### Available HTTP methods

    The Apideck API uses HTTP verbs to understand if you want to read (GET), delete (DELETE) or create (POST) an object. When your web application cannot do a POST or DELETE, we provide the ability to set the method through the query parameter \_method.

    ```
    POST /messages
    GET /messages
    GET /messages/{messageId}
    PATCH /messages/{messageId}
    DELETE /messages/{messageId}
    ```

    Response bodies are always UTF-8 encoded JSON objects, unless explicitly documented otherwise. For some endpoints and use cases we divert from REST to provide a better developer experience.

    ### Schema

    All API requests and response bodies adhere to a common JSON format representing individual items, collections of items, links to related items and additional meta data.

    ### Meta

    Meta data can be represented as a top level member named “meta”. Any information may be provided in the meta data. It’s most common use is to return the total number of records when requesting a collection of resources.

    ### Idempotence (upcoming)

    To prevent the creation of duplicate resources, every POST method (such as one that creates a consumer record) must specify a unique value for the X-Unique-Transaction-ID header name. Uniquely identifying each unique POST request ensures that the API processes a given request once and only once.

    Uniquely identifying new resource-creation POSTs is especially important when the outcome of a response is ambiguous because of a transient service interruption, such as a server-side timeout or network disruption. If a service interruption occurs, then the client application can safely retry the uniquely identified request without creating duplicate operations. (API endpoints that guarantee that every uniquely identified request is processed only once no matter how many times that uniquely identifiable request is made are described as idempotent.)

    ### Request IDs

    Each API request has an associated request identifier. You can find this value in the response headers, under Request-Id. You can also find request identifiers in the URLs of individual request logs in your Dashboard. If you need to contact us about a specific request, providing the request identifier will ensure the fastest possible resolution.

    ### Fixed field types

    #### Dates

    The dates returned by the API are all represented in UTC (ISO8601 format).

    This example `2019-11-14T00:55:31.820Z` is defined by the ISO 8601 standard. The T in the middle separates the year-month-day portion from the hour-minute-second portion. The Z on the end means UTC, that is, an offset-from-UTC of zero hours-minutes-seconds. The Z is pronounced "Zulu" per military/aviation tradition.

    The ISO 8601 standard is more modern. The formats are wisely designed to be easy to parse by machine as well as easy to read by humans across cultures.

    #### Prices and Currencies

    All prices returned by the API are represented as integer amounts in a currency’s smallest unit. For example, $5 USD would be returned as 500 (i.e, 500 cents).

    For zero-decimal currencies, amounts will still be provided as an integer but without the need to divide by 100. For example, an amount of ¥5 (JPY) would be returned as 5.

    All currency codes conform to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).

    ## Support

    If you have problems or need help with your case, you can always reach out to our Support.

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: ATS API
  version: 8.85.0
  x-apideck-api: ats
  x-apideck-sdk-support: true
  x-apisguru-categories:
    - developer_tools
  x-logo:
    url: https://developers.apideck.com/icon.png
  x-origin:
    - format: openapi
      url: https://raw.githubusercontent.com/apideck-libraries/openapi-specs/master/ats.yml
      version: "3.0"
  x-providerName: apideck.com
  x-serviceName: ats
  x-tags:
    - partner
externalDocs:
  description: Apideck Developer Docs
  url: https://developers.apideck.com
security:
  - apiKey: []
tags:
  - description: ""
    name: Applicants
    x-apideck-model:
      $ref: "#/components/schemas/Applicant"
    x-apideck-resource-id: applicants
  - description: ""
    name: Employees
    x-apideck-resource-id: employees
    x-apideck-upcoming: true
  - description: ""
    name: Offers
    x-apideck-model:
      $ref: "#/components/schemas/Offer"
    x-apideck-resource-id: offers
    x-apideck-upcoming: true
  - description: ""
    name: Activities
    x-apideck-model:
      $ref: "#/components/schemas/AtsActivity"
    x-apideck-resource-id: activities
    x-apideck-upcoming: true
  - description: ""
    name: Jobs
    x-apideck-model:
      $ref: "#/components/schemas/Job"
    x-apideck-resource-id: jobs
paths:
  /ats/applicants:
    get:
      description: List applicants
      operationId: applicantsAll
      parameters:
        - $ref: "#/components/parameters/raw"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
        - $ref: "#/components/parameters/cursor"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/jobsFilter"
      responses:
        "200":
          $ref: "#/components/responses/GetApplicantsResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: List applicants
      tags:
        - Applicants
      x-apideck-api: ats
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.ats.applicantsAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-field-name: applicants
    post:
      description: Create applicant
      operationId: applicantsAdd
      parameters:
        - $ref: "#/components/parameters/raw"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Applicant"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/CreateApplicantResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: Create applicant
      tags:
        - Applicants
      x-apideck-api: ats
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              applicant: {
                position_id: '123',
                name: 'Elon Musk',
                first_name: 'Elon',
                last_name: 'Musk',
                middle_name: 'D.',
                initials: 'EM',
                birthday: '2000-08-12',
                cover_letter:
                  'I submit this application to express my sincere interest in the API developer position. In the previous role, I was responsible for leadership and ...',
                photo_url: 'https://unavatar.io/elon-musk',
                headline: 'PepsiCo, Inc, Central Perk',
                title: 'CEO',
                emails: [
                  {
                    id: '123',
                    email: 'elon@musk.com',
                    type: 'primary'
                  }
                ],
                phone_numbers: [
                  {
                    id: '12345',
                    country_code: '1',
                    area_code: '323',
                    number: '111-111-1111',
                    extension: '105',
                    type: 'primary'
                  }
                ],
                addresses: [
                  {
                    id: '123',
                    type: 'primary',
                    string: '25 Spring Street, Blackburn, VIC 3130',
                    name: 'HQ US',
                    line1: 'Main street',
                    line2: 'apt #',
                    line3: 'Suite #',
                    line4: 'delivery instructions',
                    street_number: '25',
                    city: 'San Francisco',
                    state: 'CA',
                    postal_code: '94104',
                    country: 'US',
                    latitude: '40.759211',
                    longitude: '-73.984638',
                    county: 'Santa Clara',
                    contact_name: 'Elon Musk',
                    salutation: 'Mr',
                    phone_number: '111-111-1111',
                    fax: '122-111-1111',
                    email: 'elon@musk.com',
                    website: 'https://elonmusk.com',
                    row_version: '1-12345'
                  }
                ],
                websites: [
                  {
                    id: '12345',
                    url: 'http://example.com',
                    type: 'primary'
                  }
                ],
                social_links: [
                  {
                    id: '12345',
                    url: 'https://www.twitter.com/apideck-io',
                    type: 'twitter'
                  }
                ],
                stage_id: '12345',
                recruiter_id: '12345',
                coordinator_id: '12345',
                applications: ['a0d636c6-43b3-4bde-8c70-85b707d992f4', 'a98lfd96-43b3-4bde-8c70-85b707d992e6'],
                followers: ['a0d636c6-43b3-4bde-8c70-85b707d992f4', 'a98lfd96-43b3-4bde-8c70-85b707d992e6'],
                sources: ['Job site'],
                confidential: false,
                anonymized: true,
                tags: ['New'],
                archived: false,
                owner_id: '54321',
                record_url: 'https://app.intercom.io/contacts/12345',
                deleted: true
              }
            }

            try {
              const { data } = await apideck.ats.applicantsAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  "/ats/applicants/{id}":
    get:
      description: Get applicant
      operationId: applicantsOne
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
        - $ref: "#/components/parameters/raw"
      responses:
        "200":
          $ref: "#/components/responses/GetApplicantResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: Get applicant
      tags:
        - Applicants
      x-apideck-api: ats
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.ats.applicantsOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  /ats/jobs:
    get:
      description: List Jobs
      operationId: jobsAll
      parameters:
        - $ref: "#/components/parameters/raw"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
        - $ref: "#/components/parameters/cursor"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/GetJobsResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: List Jobs
      tags:
        - Jobs
      x-apideck-api: ats
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.ats.jobsAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-field-name: jobs
  "/ats/jobs/{id}":
    get:
      description: Get Job
      operationId: jobsOne
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
        - $ref: "#/components/parameters/raw"
      responses:
        "200":
          $ref: "#/components/responses/GetJobResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: Get Job
      tags:
        - Jobs
      x-apideck-api: ats
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.ats.jobsOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
components:
  parameters:
    applicantsFilter:
      description: Apply filters
      explode: true
      in: query
      name: filter
      schema:
        $ref: "#/components/schemas/ApplicantsFilter"
      style: deepObject
    applicationId:
      description: The ID of your Unify application
      in: header
      name: x-apideck-app-id
      required: true
      schema:
        type: string
    consumerId:
      description: ID of the consumer which you want to get or push data from
      in: header
      name: x-apideck-consumer-id
      required: true
      schema:
        type: string
    cursor:
      description: Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.
      in: query
      name: cursor
      schema:
        nullable: true
        type: string
    id:
      description: ID of the record you are acting upon.
      in: path
      name: id
      required: true
      schema:
        type: string
    jobsFilter:
      description: Apply filters
      explode: true
      in: query
      name: filter
      schema:
        $ref: "#/components/schemas/JobsFilter"
      style: deepObject
    limit:
      description: Number of records to return
      in: query
      name: limit
      schema:
        default: 20
        maximum: 200
        minimum: 1
        type: integer
    raw:
      description: Include raw response. Mostly used for debugging purposes
      in: query
      name: raw
      schema:
        default: false
        type: boolean
    serviceId:
      description: Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
      in: header
      name: x-apideck-service-id
      schema:
        type: string
  responses:
    AtsActivity:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AtsActivity"
      description: Activities
    BadRequestResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BadRequestResponse"
      description: Bad Request
    CreateApplicantResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreateApplicantResponse"
      description: Applicants
    CreateJobResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreateJobResponse"
      description: Jobs
    DeleteJobResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DeleteJobResponse"
      description: Jobs
    GetApplicantResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GetApplicantResponse"
      description: Applicants
    GetApplicantsResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GetApplicantsResponse"
      description: Applicants
    GetJobResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GetJobResponse"
      description: Jobs
    GetJobsResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GetJobsResponse"
      description: Jobs
    Job:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Job"
      description: Jobs
    NotFoundResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/NotFoundResponse"
      description: The specified resource was not found
    NotImplementedResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/NotImplementedResponse"
      description: Not Implemented
    Offer:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Offer"
      description: Offers
    PaymentRequiredResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/PaymentRequiredResponse"
      description: Payment Required
    TooManyRequestsResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TooManyRequestsResponse"
      description: Too Many Requests
    UnauthorizedResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UnauthorizedResponse"
      description: Unauthorized
    UnexpectedErrorResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UnexpectedErrorResponse"
      description: Unexpected error
    UnprocessableResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UnprocessableResponse"
      description: Unprocessable
    UpdateJobResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UpdateJobResponse"
      description: Jobs
  schemas:
    Address:
      additionalProperties: false
      properties:
        city:
          description: Name of city.
          example: San Francisco
          nullable: true
          type: string
        contact_name:
          example: Elon Musk
          nullable: true
          type: string
        country:
          description: country code according to ISO 3166-1 alpha-2.
          example: US
          nullable: true
          type: string
        county:
          description: Address field that holds a sublocality, such as a county
          example: Santa Clara
          nullable: true
          type: string
        email:
          example: elon@musk.com
          nullable: true
          type: string
        fax:
          example: 122-111-1111
          nullable: true
          type: string
        id:
          example: "123"
          nullable: true
          type: string
        latitude:
          example: "40.759211"
          nullable: true
          type: string
        line1:
          description: "Line 1 of the address e.g. number, street, suite, apt #, etc."
          example: Main street
          nullable: true
          type: string
        line2:
          description: Line 2 of the address
          example: "apt #"
          nullable: true
          type: string
        line3:
          description: Line 3 of the address
          example: "Suite #"
          nullable: true
          type: string
        line4:
          description: Line 4 of the address
          example: delivery instructions
          nullable: true
          type: string
        longitude:
          example: "-73.984638"
          nullable: true
          type: string
        name:
          example: HQ US
          nullable: true
          type: string
        phone_number:
          example: 111-111-1111
          nullable: true
          type: string
        postal_code:
          description: Zip code or equivalent.
          example: "94104"
          nullable: true
          type: string
        row_version:
          $ref: "#/components/schemas/RowVersion"
        salutation:
          example: Mr
          nullable: true
          type: string
        state:
          description: Name of state
          example: CA
          nullable: true
          type: string
        street_number:
          description: Street number
          example: "25"
          nullable: true
          type: string
        string:
          example: 25 Spring Street, Blackburn, VIC 3130
          nullable: true
          title: The address string. Some APIs don't provide structured address data.
          type: string
        type:
          enum:
            - primary
            - secondary
            - home
            - office
            - shipping
            - billing
            - other
          example: primary
          type: string
          x-apideck-enum-id: addresses.type
          x-graphql-type-name: AddressType
        website:
          example: https://elonmusk.com
          nullable: true
          type: string
      type: object
      x-apideck-schema-id: Address
      x-apideck-weights:
        city: high
        contact_name: edge-case
        country: high
        county: edge-case
        email: edge-case
        fax: edge-case
        id: edge-case
        latitude: low
        line1: high
        line2: low
        line3: edge-case
        line4: edge-case
        longitude: low
        name: edge-case
        phone_number: edge-case
        postal_code: high
        row_version: edge-case
        salutation: edge-case
        state: high
        street_number: low
        string: low
        type: critical
        website: edge-case
    Anonymized:
      example: true
      title: Anonymized
      type: boolean
    Applicant:
      additionalProperties: false
      properties:
        addresses:
          items:
            $ref: "#/components/schemas/Address"
          type: array
        anonymized:
          $ref: "#/components/schemas/Anonymized"
        applications:
          example:
            - a0d636c6-43b3-4bde-8c70-85b707d992f4
            - a98lfd96-43b3-4bde-8c70-85b707d992e6
          items:
            type: string
          nullable: true
          type: array
        archived:
          $ref: "#/components/schemas/Archived"
        birthday:
          example: 2000-08-12
          format: date
          nullable: true
          type: string
        confidential:
          example: false
          title: Confidential
          type: boolean
        coordinator_id:
          example: "12345"
          title: Coordinator ID
          type: string
        cover_letter:
          example: I submit this application to express my sincere interest in the API developer position. In the previous role, I was responsible for leadership and ...
          title: Cover letter
          type: string
        created_at:
          $ref: "#/components/schemas/CreatedAt"
        created_by:
          $ref: "#/components/schemas/CreatedBy"
        cv_url:
          example: https://recruitee-main.s3.eu-central-1.amazonaws.com/candidates/36615291/pdf_cv_38swhu4w42k1.pdf?response-content-disposition=inline&response-content-type=application%2Fpdf&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAQYHB7CA5RLR4Y3ON%2F20220514%2Feu-central-1%2Fs3%2Faws4_request&X-Amz-Date=20220514T235654Z&X-Amz-Expires=36000&X-Amz-SignedHeaders=host&X-Amz-Signature=72c0621f5976db75b54de487eb821a8e73480d7f2a6a4a9713ab997944b0561f
          readOnly: true
          title: CV URL
          type: string
        deleted:
          $ref: "#/components/schemas/Deleted"
        deleted_at:
          $ref: "#/components/schemas/DeletedAt"
        deleted_by:
          $ref: "#/components/schemas/DeletedBy"
        emails:
          items:
            $ref: "#/components/schemas/Email"
          type: array
        first_name:
          example: Elon
          nullable: true
          title: First name
          type: string
        followers:
          example:
            - a0d636c6-43b3-4bde-8c70-85b707d992f4
            - a98lfd96-43b3-4bde-8c70-85b707d992e6
          items:
            type: string
          nullable: true
          type: array
        headline:
          description: Typically a list of previous companies where the contact has worked or schools that the contact has attended
          example: PepsiCo, Inc, Central Perk
          title: Headline
          type: string
        id:
          $ref: "#/components/schemas/Id"
        initials:
          $ref: "#/components/schemas/Initials"
        job_url:
          example: https://democompany.recruitee.com/o/example-talent-pool
          nullable: true
          readOnly: true
          title: Job URL
          type: string
        last_interaction_at:
          $ref: "#/components/schemas/LastInteractionAt"
        last_name:
          example: Musk
          nullable: true
          title: Last name
          type: string
        middle_name:
          example: D.
          nullable: true
          title: Middle name
          type: string
        name:
          description: The name of an applicant.
          example: Elon Musk
          type: string
        owner_id:
          $ref: "#/components/schemas/OwnerId"
        phone_numbers:
          items:
            $ref: "#/components/schemas/PhoneNumber"
          type: array
        photo_url:
          example: https://unavatar.io/elon-musk
          nullable: true
          title: Photo URL
          type: string
        position_id:
          description: The PositionId the applicant applied for.
          example: "123"
          type: string
        record_url:
          $ref: "#/components/schemas/RecordUrl"
        recruiter_id:
          example: "12345"
          title: Recruiter ID
          type: string
        rejected_at:
          example: 2020-09-30T07:43:32.000Z
          format: date-time
          nullable: true
          readOnly: true
          title: Rejected at (timestamp)
          type: string
        social_links:
          items:
            additionalProperties: false
            properties:
              id:
                example: "12345"
                nullable: true
                type: string
              type:
                example: twitter
                nullable: true
                type: string
              url:
                example: https://www.twitter.com/apideck-io
                minLength: 1
                type: string
            required:
              - url
            type: object
            x-apideck-schema-id: SocialLink
            x-apideck-weights:
              id: edge-case
              type: critical
              url: critical
          type: array
        source_id:
          example: "12345"
          readOnly: true
          title: Source ID
          type: string
        sourced_by:
          example: "12345"
          nullable: true
          readOnly: true
          title: Sourced by
          type: string
        sources:
          example:
            - Job site
          items:
            type: string
          nullable: true
          type: array
        stage_id:
          example: "12345"
          title: Stage
          type: string
        tags:
          $ref: "#/components/schemas/Tags"
        title:
          $ref: "#/components/schemas/Title"
        updated_at:
          $ref: "#/components/schemas/UpdatedAt"
        updated_by:
          $ref: "#/components/schemas/UpdatedBy"
        websites:
          items:
            additionalProperties: false
            properties:
              id:
                example: "12345"
                nullable: true
                type: string
              type:
                enum:
                  - primary
                  - secondary
                  - work
                  - personal
                  - other
                example: primary
                type: string
                x-apideck-enum-id: websites.type
                x-graphql-type-name: WebsiteType
              url:
                example: http://example.com
                minLength: 1
                type: string
            required:
              - url
            type: object
            x-apideck-schema-id: Website
            x-apideck-weights:
              id: edge-case
              type: critical
              url: critical
          type: array
      type: object
      x-apideck-schema-id: Applicant
      x-apideck-weights:
        addresses: high
        anonymized: low
        applications: medium
        archived: medium
        birthday: high
        confidential: medium
        coordinator_id: medium
        cover_letter: low
        created_at: medium
        created_by: edge-case
        cv_url: high
        deleted: medium
        deleted_at: medium
        deleted_by: medium
        emails: high
        first_name: high
        followers: low
        headline: medium
        id: critical
        initials: low
        job_url: medium
        last_interaction_at: medium
        last_name: high
        middle_name: low
        name: critical
        owner_id: high
        phone_numbers: high
        photo_url: medium
        position_id: medium
        record_url: low
        recruiter_id: medium
        rejected_at: high
        social_links: medium
        source_id: low
        sourced_by: high
        sources: low
        stage_id: low
        tags: low
        title: high
        updated_at: medium
        updated_by: edge-case
        websites: medium
    ApplicantsFilter:
      additionalProperties: false
      example:
        job_id: "1234"
      properties:
        job_id:
          description: Id of the job to filter on
          example: "1234"
          type: string
      type: object
      x-apideck-schema-id: ApplicantsFilter
      x-graphql-type-name: ApplicantsFilter
    Archived:
      example: false
      title: Archived
      type: boolean
    AtsActivity:
      additionalProperties: false
      properties:
        created_at:
          $ref: "#/components/schemas/CreatedAt"
        created_by:
          $ref: "#/components/schemas/CreatedBy"
        id:
          $ref: "#/components/schemas/Id"
        updated_at:
          $ref: "#/components/schemas/UpdatedAt"
        updated_by:
          $ref: "#/components/schemas/UpdatedBy"
      type: object
      x-apideck-schema-id: AtsActivity
      x-apideck-weights:
        created_at: medium
        created_by: edge-case
        id: high
        updated_at: medium
        updated_by: edge-case
      x-graphql-type-name: AtsActivity
    AtsEventType:
      enum:
        - ats.job.created
        - ats.job.updated
        - ats.job.deleted
        - ats.applicant.created
        - ats.applicant.updated
        - ats.applicant.deleted
      example: ats.job.created
      type: string
    AtsWebhookEvent:
      allOf:
        - properties:
            entity_id:
              description: The service provider's ID of the entity that triggered this event
              example: 123456ASDF
              type: string
            entity_type:
              description: The type entity that triggered this event
              example: Company
              type: string
            entity_url:
              description: The url to retrieve entity detail.
              example: https://unify.apideck.com/crm/contacts/123456
              type: string
            event_id:
              description: Unique reference to this request event
              example: 9755c355-56c3-4a2f-a2da-86ff4411fccb
              type: string
            execution_attempt:
              description: The current count this request event has been attempted
              example: 2
              type: number
            occurred_at:
              description: ISO Datetime for when the original event occurred
              example: 2021-10-01T03:14:55.419Z
              type: string
            service_id:
              description: Service provider identifier
              example: close
              type: string
          type: object
          x-apideck-schema-id: WebhookEvent
        - properties:
            event_type:
              $ref: "#/components/schemas/AtsEventType"
          type: object
      x-sdk-exclude: true
    BadRequestResponse:
      properties:
        detail:
          anyOf:
            - example: Missing property foobar
              type: string
            - example:
                missing:
                  - foobar: required
              type: object
          description: Contains parameter or domain specific information related to the error and why it occurred.
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Bad Request
          type: string
        message:
          description: A human-readable message providing more details about the error.
          example: Invalid Params
          type: string
        ref:
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#requestvalidationerror
          type: string
        status_code:
          description: HTTP status code
          example: 400
          type: number
        type_name:
          description: The type of error returned
          example: RequestValidationError
          type: string
      type: object
      x-apideck-schema-id: BadRequest
    Code:
      description: The code of the job.
      example: 123-OC
      type: string
    CreateApplicantResponse:
      properties:
        data:
          $ref: "#/components/schemas/UnifiedId"
        operation:
          description: Operation performed
          example: add
          type: string
        resource:
          description: Unified API resource name
          example: Applicants
          type: string
        service:
          description: Apideck ID of service provider
          example: lever
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: CreateApplicantResponse
    CreateJobResponse:
      properties:
        data:
          $ref: "#/components/schemas/UnifiedId"
        operation:
          description: Operation performed
          example: add
          type: string
        resource:
          description: Unified API resource name
          example: Jobs
          type: string
        service:
          description: Apideck ID of service provider
          example: sage-hr
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: CreateJobResponse
    CreatedAt:
      example: 2020-09-30T07:43:32.000Z
      format: date-time
      readOnly: true
      title: Created at (timestamp)
      type: string
    CreatedBy:
      example: "12345"
      nullable: true
      readOnly: true
      title: Created by
      type: string
    Currency:
      description: Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
      enum:
        - UNKNOWN_CURRENCY
        - AED
        - AFN
        - ALL
        - AMD
        - ANG
        - AOA
        - ARS
        - AUD
        - AWG
        - AZN
        - BAM
        - BBD
        - BDT
        - BGN
        - BHD
        - BIF
        - BMD
        - BND
        - BOB
        - BOV
        - BRL
        - BSD
        - BTN
        - BWP
        - BYR
        - BZD
        - CAD
        - CDF
        - CHE
        - CHF
        - CHW
        - CLF
        - CLP
        - CNY
        - COP
        - COU
        - CRC
        - CUC
        - CUP
        - CVE
        - CZK
        - DJF
        - DKK
        - DOP
        - DZD
        - EGP
        - ERN
        - ETB
        - EUR
        - FJD
        - FKP
        - GBP
        - GEL
        - GHS
        - GIP
        - GMD
        - GNF
        - GTQ
        - GYD
        - HKD
        - HNL
        - HRK
        - HTG
        - HUF
        - IDR
        - ILS
        - INR
        - IQD
        - IRR
        - ISK
        - JMD
        - JOD
        - JPY
        - KES
        - KGS
        - KHR
        - KMF
        - KPW
        - KRW
        - KWD
        - KYD
        - KZT
        - LAK
        - LBP
        - LKR
        - LRD
        - LSL
        - LTL
        - LVL
        - LYD
        - MAD
        - MDL
        - MGA
        - MKD
        - MMK
        - MNT
        - MOP
        - MRO
        - MUR
        - MVR
        - MWK
        - MXN
        - MXV
        - MYR
        - MZN
        - NAD
        - NGN
        - NIO
        - NOK
        - NPR
        - NZD
        - OMR
        - PAB
        - PEN
        - PGK
        - PHP
        - PKR
        - PLN
        - PYG
        - QAR
        - RON
        - RSD
        - RUB
        - RWF
        - SAR
        - SBD
        - SCR
        - SDG
        - SEK
        - SGD
        - SHP
        - SLL
        - SOS
        - SRD
        - SSP
        - STD
        - SVC
        - SYP
        - SZL
        - THB
        - TJS
        - TMT
        - TND
        - TOP
        - TRC
        - TRY
        - TTD
        - TWD
        - TZS
        - UAH
        - UGX
        - USD
        - USN
        - USS
        - UYI
        - UYU
        - UZS
        - VEF
        - VND
        - VUV
        - WST
        - XAF
        - XAG
        - XAU
        - XBA
        - XBB
        - XBC
        - XBD
        - XCD
        - XDR
        - XOF
        - XPD
        - XPF
        - XPT
        - XTS
        - XXX
        - YER
        - ZAR
        - ZMK
        - ZMW
        - BTC
      example: USD
      nullable: true
      title: Currency
      type: string
      x-apideck-enum-coverage-ignore: true
      x-apideck-enum-id: currencies
      x-enum-elements:
        - description: Unknown currency
          name: UNKNOWN_CURRENCY
        - description: United Arab Emirates dirham
          name: AED
        - description: Afghan afghani
          name: AFN
        - description: Albanian lek
          name: ALL
        - description: Armenian dram
          name: AMD
        - description: Netherlands Antillean guilder
          name: ANG
        - description: Angolan kwanza
          name: AOA
        - description: Argentine peso
          name: ARS
        - description: Australian dollar
          name: AUD
        - description: Aruban florin
          name: AWG
        - description: Azerbaijani manat
          name: AZN
        - description: Bosnia and Herzegovina convertible mark
          name: BAM
        - description: Barbados dollar
          name: BBD
        - description: Bangladeshi taka
          name: BDT
        - description: Bulgarian lev
          name: BGN
        - description: Bahraini dinar
          name: BHD
        - description: Burundian franc
          name: BIF
        - description: Bermudian dollar
          name: BMD
        - description: Brunei dollar
          name: BND
        - description: Boliviano
          name: BOB
        - description: Bolivian Mvdol
          name: BOV
        - description: Brazilian real
          name: BRL
        - description: Bahamian dollar
          name: BSD
        - description: Bhutanese ngultrum
          name: BTN
        - description: Botswana pula
          name: BWP
        - description: Belarusian ruble
          name: BYR
        - description: Belize dollar
          name: BZD
        - description: Canadian dollar
          name: CAD
        - description: Congolese franc
          name: CDF
        - description: WIR Euro
          name: CHE
        - description: Swiss franc
          name: CHF
        - description: WIR Franc
          name: CHW
        - description: Unidad de Fomento
          name: CLF
        - description: Chilean peso
          name: CLP
        - description: Chinese yuan
          name: CNY
        - description: Colombian peso
          name: COP
        - description: Unidad de Valor Real
          name: COU
        - description: Costa Rican colon
          name: CRC
        - description: Cuban convertible peso
          name: CUC
        - description: Cuban peso
          name: CUP
        - description: Cape Verdean escudo
          name: CVE
        - description: Czech koruna
          name: CZK
        - description: Djiboutian franc
          name: DJF
        - description: Danish krone
          name: DKK
        - description: Dominican peso
          name: DOP
        - description: Algerian dinar
          name: DZD
        - description: Egyptian pound
          name: EGP
        - description: Eritrean nakfa
          name: ERN
        - description: Ethiopian birr
          name: ETB
        - description: Euro
          name: EUR
        - description: Fiji dollar
          name: FJD
        - description: Falkland Islands pound
          name: FKP
        - description: Pound sterling
          name: GBP
        - description: Georgian lari
          name: GEL
        - description: Ghanaian cedi
          name: GHS
        - description: Gibraltar pound
          name: GIP
        - description: Gambian dalasi
          name: GMD
        - description: Guinean franc
          name: GNF
        - description: Guatemalan quetzal
          name: GTQ
        - description: Guyanese dollar
          name: GYD
        - description: Hong Kong dollar
          name: HKD
        - description: Honduran lempira
          name: HNL
        - description: Croatian kuna
          name: HRK
        - description: Haitian gourde
          name: HTG
        - description: Hungarian forint
          name: HUF
        - description: Indonesian rupiah
          name: IDR
        - description: Israeli new shekel
          name: ILS
        - description: Indian rupee
          name: INR
        - description: Iraqi dinar
          name: IQD
        - description: Iranian rial
          name: IRR
        - description: Icelandic króna
          name: ISK
        - description: Jamaican dollar
          name: JMD
        - description: Jordanian dinar
          name: JOD
        - description: Japanese yen
          name: JPY
        - description: Kenyan shilling
          name: KES
        - description: Kyrgyzstani som
          name: KGS
        - description: Cambodian riel
          name: KHR
        - description: Comoro franc
          name: KMF
        - description: North Korean won
          name: KPW
        - description: South Korean won
          name: KRW
        - description: Kuwaiti dinar
          name: KWD
        - description: Cayman Islands dollar
          name: KYD
        - description: Kazakhstani tenge
          name: KZT
        - description: Lao kip
          name: LAK
        - description: Lebanese pound
          name: LBP
        - description: Sri Lankan rupee
          name: LKR
        - description: Liberian dollar
          name: LRD
        - description: Lesotho loti
          name: LSL
        - description: Lithuanian litas
          name: LTL
        - description: Latvian lats
          name: LVL
        - description: Libyan dinar
          name: LYD
        - description: Moroccan dirham
          name: MAD
        - description: Moldovan leu
          name: MDL
        - description: Malagasy ariary
          name: MGA
        - description: Macedonian denar
          name: MKD
        - description: Myanmar kyat
          name: MMK
        - description: Mongolian tögrög
          name: MNT
        - description: Macanese pataca
          name: MOP
        - description: Mauritanian ouguiya
          name: MRO
        - description: Mauritian rupee
          name: MUR
        - description: Maldivian rufiyaa
          name: MVR
        - description: Malawian kwacha
          name: MWK
        - description: Mexican peso
          name: MXN
        - description: Mexican Unidad de Inversion
          name: MXV
        - description: Malaysian ringgit
          name: MYR
        - description: Mozambican metical
          name: MZN
        - description: Namibian dollar
          name: NAD
        - description: Nigerian naira
          name: NGN
        - description: Nicaraguan córdoba
          name: NIO
        - description: Norwegian krone
          name: NOK
        - description: Nepalese rupee
          name: NPR
        - description: New Zealand dollar
          name: NZD
        - description: Omani rial
          name: OMR
        - description: Panamanian balboa
          name: PAB
        - description: Peruvian sol
          name: PEN
        - description: Papua New Guinean kina
          name: PGK
        - description: Philippine peso
          name: PHP
        - description: Pakistani rupee
          name: PKR
        - description: Polish złoty
          name: PLN
        - description: Paraguayan guaraní
          name: PYG
        - description: Qatari riyal
          name: QAR
        - description: Romanian leu
          name: RON
        - description: Serbian dinar
          name: RSD
        - description: Russian ruble
          name: RUB
        - description: Rwandan franc
          name: RWF
        - description: Saudi riyal
          name: SAR
        - description: Solomon Islands dollar
          name: SBD
        - description: Seychelles rupee
          name: SCR
        - description: Sudanese pound
          name: SDG
        - description: Swedish krona
          name: SEK
        - description: Singapore dollar
          name: SGD
        - description: Saint Helena pound
          name: SHP
        - description: Sierra Leonean leone
          name: SLL
        - description: Somali shilling
          name: SOS
        - description: Surinamese dollar
          name: SRD
        - description: South Sudanese pound
          name: SSP
        - description: São Tomé and Príncipe dobra
          name: STD
        - description: Salvadoran colón
          name: SVC
        - description: Syrian pound
          name: SYP
        - description: Swazi lilangeni
          name: SZL
        - description: Thai baht
          name: THB
        - description: Tajikstani somoni
          name: TJS
        - description: Turkmenistan manat
          name: TMT
        - description: Tunisian dinar
          name: TND
        - description: Tongan pa'anga
          name: TOP
        - description: Turkish lira
          name: TRY
        - description: Trinidad and Tobago dollar
          name: TTD
        - description: New Taiwan dollar
          name: TWD
        - description: Tanzanian shilling
          name: TZS
        - description: Ukrainian hryvnia
          name: UAH
        - description: Ugandan shilling
          name: UGX
        - description: United States dollar
          name: USD
        - description: United States dollar (next day)
          name: USN
        - description: United States dollar (same day)
          name: USS
        - description: Uruguay Peso en Unidedades Indexadas
          name: UYI
        - description: Uruguyan peso
          name: UYU
        - description: Uzbekistan som
          name: UZS
        - description: Venezuelan bolívar soberano
          name: VEF
        - description: Vietnamese đồng
          name: VND
        - description: Vanuatu vatu
          name: VUV
        - description: Samoan tala
          name: WST
        - description: CFA franc BEAC
          name: XAF
        - description: Silver
          name: XAG
        - description: Gold
          name: XAU
        - description: European Composite Unit
          name: XBA
        - description: European Monetary Unit
          name: XBB
        - description: European Unit of Account 9
          name: XBC
        - description: European Unit of Account 17
          name: XBD
        - description: East Caribbean dollar
          name: XCD
        - description: Special drawing rights (International Monetary Fund)
          name: XDR
        - description: CFA franc BCEAO
          name: XOF
        - description: Palladium
          name: XPD
        - description: CFP franc
          name: XPF
        - description: Platinum
          name: XPT
        - description: Code reserved for testing
          name: XTS
        - description: No currency
          name: XXX
        - description: Yemeni rial
          name: YER
        - description: South African rand
          name: ZAR
        - description: Zambian kwacha
          name: ZMK
        - description: Zambian kwacha
          name: ZMW
        - description: Bitcoin
          name: BTC
    CustomField:
      additionalProperties: false
      properties:
        description:
          description: More information about the custom field
          example: Employee Level
          title: Description
          type: string
        id:
          example: "2389328923893298"
          title: ID
          type: string
        name:
          description: Name of the custom field.
          example: employee_level
          title: Name
          type: string
        value:
          anyOf:
            - example: Uses Salesforce and Marketo
              nullable: true
              type: string
            - example: 10
              nullable: true
              type: number
            - example: true
              nullable: true
              type: boolean
            - items:
                type: string
              type: array
      required:
        - id
      type: object
      x-apideck-schema-id: CustomField
      x-apideck-weights:
        description: edge-case
        id: critical
        name: medium
        value: critical
    DeleteJobResponse:
      properties:
        data:
          $ref: "#/components/schemas/UnifiedId"
        operation:
          description: Operation performed
          example: delete
          type: string
        resource:
          description: Unified API resource name
          example: Jobs
          type: string
        service:
          description: Apideck ID of service provider
          example: sage-hr
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: DeleteJobResponse
    Deleted:
      example: true
      nullable: true
      title: Deleted
      type: boolean
    DeletedAt:
      example: 2020-09-30T07:43:32.000Z
      format: date-time
      nullable: true
      readOnly: true
      title: Deleted at (timestamp)
      type: string
    DeletedBy:
      example: "12345"
      nullable: true
      readOnly: true
      title: Deleted by
      type: string
    Department:
      additionalProperties: false
      properties:
        code:
          example: "2"
          nullable: true
          title: Code
          type: string
        created_at:
          $ref: "#/components/schemas/CreatedAt"
        created_by:
          $ref: "#/components/schemas/CreatedBy"
        description:
          example: R&D
          nullable: true
          title: Description
          type: string
        id:
          $ref: "#/components/schemas/Id"
        name:
          description: Department name
          example: R&D
          nullable: true
          title: Name
          type: string
        updated_at:
          $ref: "#/components/schemas/UpdatedAt"
        updated_by:
          $ref: "#/components/schemas/UpdatedBy"
      type: object
      x-apideck-schema-id: Department
      x-apideck-weights:
        code: medium
        created_at: medium
        created_by: edge-case
        description: low
        id: critical
        name: critical
        updated_at: medium
        updated_by: edge-case
    Description:
      example: A description
      nullable: true
      title: Description
      type: string
    Email:
      additionalProperties: false
      properties:
        email:
          example: elon@musk.com
          format: email
          minLength: 1
          type: string
        id:
          example: "123"
          type: string
        type:
          enum:
            - primary
            - secondary
            - work
            - personal
            - billing
            - other
          example: primary
          type: string
          x-apideck-enum-id: emails.type
          x-graphql-type-name: EmailType
      required:
        - email
      type: object
      x-apideck-schema-id: Email
      x-apideck-weights:
        email: critical
        id: edge-case
        type: critical
    GetApplicantResponse:
      properties:
        data:
          $ref: "#/components/schemas/Applicant"
        operation:
          description: Operation performed
          example: one
          type: string
        resource:
          description: Unified API resource name
          example: Applicants
          type: string
        service:
          description: Apideck ID of service provider
          example: lever
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: GetApplicantResponse
      x-graphql-type-name: Applicant
    GetApplicantsResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/Applicant"
          type: array
        links:
          $ref: "#/components/schemas/Links"
        meta:
          $ref: "#/components/schemas/Meta"
        operation:
          description: Operation performed
          example: all
          type: string
        resource:
          description: Unified API resource name
          example: Applicants
          type: string
        service:
          description: Apideck ID of service provider
          example: lever
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: GetApplicantsResponse
      x-graphql-type-name: ApplicantList
    GetJobResponse:
      properties:
        data:
          $ref: "#/components/schemas/Job"
        operation:
          description: Operation performed
          example: one
          type: string
        resource:
          description: Unified API resource name
          example: Jobs
          type: string
        service:
          description: Apideck ID of service provider
          example: lever
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: GetJobResponse
      x-graphql-type-name: Job
    GetJobsResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/Job"
          type: array
        links:
          $ref: "#/components/schemas/Links"
        meta:
          $ref: "#/components/schemas/Meta"
        operation:
          description: Operation performed
          example: all
          type: string
        resource:
          description: Unified API resource name
          example: Jobs
          type: string
        service:
          description: Apideck ID of service provider
          example: lever
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: GetJobsResponse
      x-graphql-type-name: JobList
    Id:
      example: "12345"
      readOnly: true
      type: string
    Initials:
      example: EM
      nullable: true
      title: Initials
      type: string
    Job:
      additionalProperties: false
      properties:
        addresses:
          items:
            $ref: "#/components/schemas/Address"
          type: array
        available_to_employees:
          description: Specifies whether an employee of the organization can apply for the job.
          example: false
          title: Available to employees
          type: boolean
        blocks:
          example:
            - content: string
              title: string
          items:
            properties:
              content:
                type: string
              title:
                type: string
            x-apideck-weights:
              content: medium
              title: medium
          type: array
        branch:
          description: Details of the branch for which the job is created.
          example:
            id: "123"
            name: HQ NY
          properties:
            id:
              $ref: "#/components/schemas/Id"
            name:
              description: Name of the branch.
              example: HQ NY
              type: string
          title: Branch
          type: object
          x-apideck-weights:
            id: medium
            name: medium
        closing:
          example: The closing section of the job description
          nullable: true
          title: Closing
          type: string
        closing_date:
          example: 2020-10-30
          format: date
          nullable: true
          type: string
        closing_html:
          description: The closing section of the job description in HTML format
          nullable: true
          title: Closing
          type: string
        code:
          $ref: "#/components/schemas/Code"
        confidential:
          example: false
          title: Confidential
          type: boolean
        created_at:
          $ref: "#/components/schemas/CreatedAt"
        created_by:
          $ref: "#/components/schemas/CreatedBy"
        deleted:
          $ref: "#/components/schemas/Deleted"
        department:
          $ref: "#/components/schemas/Department"
        description:
          $ref: "#/components/schemas/Description"
        description_html:
          description: The job description in HTML format
          nullable: true
          title: Description (HTML)
          type: string
        employment_terms:
          enum:
            - full-time
            - part-time
            - intership
            - contractor
            - employee
            - freelance
            - temp
            - seasonal
            - volunteer
            - other
          example: full-time
          nullable: true
          type: string
          x-apideck-enum-id: jobs.employment_terms
        experience:
          description: Level of experience required for the job role.
          example: Director/ Vice President
          title: Experience
          type: string
        followers:
          example:
            - a0d636c6-43b3-4bde-8c70-85b707d992f4
            - a98lfd96-43b3-4bde-8c70-85b707d992e6
          items:
            example: "12345"
            readOnly: true
            type: string
          nullable: true
          type: array
        hiring_managers:
          example:
            - "123456"
          items:
            properties:
              id:
                example: "12345"
                readOnly: true
                type: string
            x-apideck-weights:
              id: medium
          type: array
        id:
          $ref: "#/components/schemas/Id"
        job_portal_url:
          description: URL of the job portal
          nullable: true
          title: URL
          type: string
        language:
          $ref: "#/components/schemas/Language"
        owner_id:
          $ref: "#/components/schemas/OwnerId"
        published_at:
          $ref: "#/components/schemas/PublishedAt"
        record_url:
          $ref: "#/components/schemas/RecordUrl"
        recruiters:
          description: The recruiter is generally someone who is tasked to help the hiring manager find and screen qualified applicant
          example:
            - a0d636c6-43b3-4bde-8c70-85b707d992f4
          items:
            example: "12345"
            readOnly: true
            type: string
          nullable: true
          type: array
        remote:
          description: Specifies whether the posting is for a remote job.
          example: true
          nullable: true
          title: Remote
          type: boolean
        requisition_id:
          description: A job's Requisition ID (Req ID) allows your organization to identify and track a job based on alphanumeric naming conventions unique to your company's internal processes.
          example: abc123
          title: Requisition ID
          type: string
        salary:
          properties:
            currency:
              $ref: "#/components/schemas/Currency"
            max:
              description: Maximum salary payable for the job role.
              example: 10000
              type: integer
            min:
              description: Minimum salary payable for the job role.
              example: 8000
              type: integer
          type: object
          x-apideck-weights:
            currency: medium
            max: medium
            min: medium
        sequence:
          description: Sequence in relation to other jobs.
          example: 3
          type: integer
        slug:
          example: ceo
          nullable: true
          type: string
        status:
          $ref: "#/components/schemas/JobStatus"
        tags:
          $ref: "#/components/schemas/Tags"
        title:
          $ref: "#/components/schemas/Title"
        updated_at:
          $ref: "#/components/schemas/UpdatedAt"
        updated_by:
          $ref: "#/components/schemas/UpdatedBy"
        url:
          description: URL of the job description
          nullable: true
          title: URL
          type: string
        visibility:
          description: The visibility of the job
          enum:
            - public
            - internal
          example: internal
          type: string
          x-apideck-enum-id: jobs.visibility
      type: object
      x-apideck-schema-id: Job
      x-apideck-weights:
        addresses: high
        available_to_employees: medium
        blocks: edge-case
        branch: low
        closing: medium
        closing_date: high
        closing_html: edge-case
        code: low
        confidential: medium
        created_at: medium
        created_by: edge-case
        deleted: medium
        department: medium
        description: medium
        description_html: edge-case
        employment_terms: low
        experience: low
        followers: low
        hiring_managers: low
        id: high
        job_portal_url: low
        language: medium
        owner_id: high
        published_at: high
        record_url: low
        recruiters: low
        remote: low
        requisition_id: medium
        salary: high
        sequence: low
        slug: low
        status: high
        tags: low
        title: critical
        updated_at: medium
        updated_by: edge-case
        url: medium
        visibility: low
    JobStatus:
      description: The status of the job.
      enum:
        - draft
        - internal
        - published
        - completed
        - on-hold
        - private
      example: completed
      type: string
      x-apideck-enum-id: jobs.status
    JobsFilter:
      additionalProperties: false
      example:
        job_id: "1234"
      properties:
        job_id:
          description: Id of the job to filter on
          example: "1234"
          type: string
      type: object
      x-apideck-schema-id: JobsFilter
      x-graphql-type-name: JobsFilter
    Language:
      description: language code according to ISO 639-1. For the United States - EN
      example: EN
      nullable: true
      type: string
    LastInteractionAt:
      example: 2020-09-30T07:43:32.000Z
      format: date-time
      readOnly: true
      title: Last interaction at (timestamp)
      type: string
    Links:
      description: Links to navigate to previous or next pages through the API
      properties:
        current:
          description: Link to navigate to the current page through the API
          example: https://unify.apideck.com/crm/companies
          type: string
        next:
          description: Link to navigate to the previous page through the API
          example: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM
          nullable: true
          type: string
        previous:
          description: Link to navigate to the previous page through the API
          example: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D
          nullable: true
          type: string
      type: object
      x-apideck-schema-id: Links
    Meta:
      description: Response metadata
      properties:
        cursors:
          description: Cursors to navigate to previous or next pages through the API
          properties:
            current:
              description: Cursor to navigate to the current page of results through the API
              example: em9oby1jcm06OnBhZ2U6OjI=
              nullable: true
              type: string
            next:
              description: Cursor to navigate to the next page of results through the API
              example: em9oby1jcm06OnBhZ2U6OjM=
              nullable: true
              type: string
            previous:
              description: Cursor to navigate to the previous page of results through the API
              example: em9oby1jcm06OnBhZ2U6OjE=
              nullable: true
              type: string
          type: object
        items_on_page:
          description: Number of items returned in the data property of the response
          example: 50
          type: integer
      type: object
      x-apideck-schema-id: Meta
    NotFoundResponse:
      properties:
        detail:
          anyOf:
            - example: "Could not find widget with id: '123'"
              type: string
            - example:
                not_found:
                  entity: widget
                  id: "123"
              type: object
          description: Contains parameter or domain specific information related to the error and why it occurred.
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Not Found
          type: string
        message:
          description: A human-readable message providing more details about the error.
          example: Unknown Widget
          type: string
        ref:
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#entitynotfounderror
          type: string
        status_code:
          description: HTTP status code
          example: 404
          type: number
        type_name:
          description: The type of error returned
          example: EntityNotFoundError
          type: string
      type: object
      x-apideck-schema-id: NotFound
    NotImplementedResponse:
      properties:
        detail:
          anyOf:
            - example: Failed to retrieve Widget tokenUrl from 'components.securitySchemes.OAuth2.flows'
              type: string
            - type: object
          description: Contains parameter or domain specific information related to the error and why it occurred.
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Not Implemented
          type: string
        message:
          description: A human-readable message providing more details about the error.
          example: Unmapped Attribute
          type: string
        ref:
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#mappingerror
          type: string
        status_code:
          description: HTTP status code
          example: 501
          type: number
        type_name:
          description: The type of error returned
          example: MappingError
          type: string
      type: object
      x-apideck-schema-id: NotImplemented
    Offer:
      additionalProperties: false
      properties:
        application_id:
          example: abc123
          title: Application ID
          type: string
        created_at:
          $ref: "#/components/schemas/CreatedAt"
        created_by:
          $ref: "#/components/schemas/CreatedBy"
        id:
          $ref: "#/components/schemas/Id"
        updated_at:
          $ref: "#/components/schemas/UpdatedAt"
        updated_by:
          $ref: "#/components/schemas/UpdatedBy"
      type: object
      x-apideck-schema-id: Offer
      x-apideck-weights:
        created_at: medium
        created_by: edge-case
        id: high
        updated_at: medium
        updated_by: edge-case
    OwnerId:
      example: "54321"
      title: Owner ID
      type: string
    PaymentRequiredResponse:
      properties:
        detail:
          description: Contains parameter or domain specific information related to the error and why it occurred.
          example: You have reached your limit of 2000
          type: string
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Payment Required
          type: string
        message:
          description: A human-readable message providing more details about the error.
          example: Request Limit Reached
          type: string
        ref:
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#requestlimiterror
          type: string
        status_code:
          description: HTTP status code
          example: 402
          type: number
        type_name:
          description: The type of error returned
          example: RequestLimitError
          type: string
      type: object
      x-apideck-schema-id: PaymentRequired
    PhoneNumber:
      additionalProperties: false
      properties:
        area_code:
          example: "323"
          nullable: true
          title: Area code
          type: string
        country_code:
          example: "1"
          nullable: true
          title: Country code
          type: string
        extension:
          example: "105"
          nullable: true
          title: Phone extension
          type: string
        id:
          example: "12345"
          nullable: true
          type: string
        number:
          example: 111-111-1111
          minLength: 1
          title: Phone number
          type: string
        type:
          enum:
            - primary
            - secondary
            - home
            - work
            - office
            - mobile
            - assistant
            - fax
            - direct-dial-in
            - personal
            - other
          example: primary
          type: string
          x-apideck-enum-id: phone_numbers.type
          x-graphql-type-name: PhoneType
      required:
        - number
      type: object
      x-apideck-schema-id: PhoneNumber
      x-apideck-weights:
        area_code: edge-case
        country_code: edge-case
        extension: edge-case
        id: edge-case
        number: critical
        type: critical
    PublishedAt:
      example: 2020-09-30T07:43:32.000Z
      format: date-time
      readOnly: true
      title: Published at (timestamp)
      type: string
    RecordUrl:
      example: https://app.intercom.io/contacts/12345
      nullable: true
      title: Record URL
      type: string
    RowVersion:
      example: 1-12345
      nullable: true
      title: Row version
      type: string
    Tags:
      example:
        - New
      items:
        type: string
      type: array
      x-apideck-schema-id: Tags
    Title:
      example: CEO
      nullable: true
      title: Job title
      type: string
    TooManyRequestsResponse:
      properties:
        detail:
          properties:
            context:
              type: string
            error:
              additionalProperties: true
              type: object
          type: object
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 6585)
          example: Too Many Requests
          type: string
        message:
          description: A human-readable message providing more details about the error.
          example: Connector Rate Limit Error
          type: string
        ref:
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#connectorratelimiterror
          type: string
        status_code:
          description: HTTP status code
          example: 429
          type: number
        type_name:
          description: The type of error returned
          example: ConnectorRateLimitError
          type: string
      type: object
      x-apideck-schema-id: TooManyRequests
    UnauthorizedResponse:
      properties:
        detail:
          description: Contains parameter or domain specific information related to the error and why it occurred.
          example: Failed to generate valid JWT Session. Verify applicationId is correct
          type: string
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Unauthorized
          type: string
        message:
          description: A human-readable message providing more details about the error.
          example: Unauthorized Request
          type: string
        ref:
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#unauthorizederror
          type: string
        status_code:
          description: HTTP status code
          example: 401
          type: number
        type_name:
          description: The type of error returned
          example: UnauthorizedError
          type: string
      type: object
      x-apideck-schema-id: Unauthorized
    UnexpectedErrorResponse:
      properties:
        detail:
          anyOf:
            - example: "Missing Header: x-apideck-consumer-id"
              type: string
            - example:
                missing:
                  - x-apideck-consumer-id: required
              type: object
          description: Contains parameter or domain specific information related to the error and why it occurred.
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Bad Request
          type: string
        message:
          description: A human-readable message providing more details about the error.
          example: Invalid Params
          type: string
        ref:
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#unauthorizederror
          type: string
        status_code:
          description: HTTP status code
          example: 400
          type: number
        type_name:
          description: The type of error returned
          example: RequestHeadersValidationError
          type: string
      type: object
      x-apideck-schema-id: Error
    UnifiedId:
      properties:
        id:
          example: "12345"
          readOnly: true
          type: string
      required:
        - id
      title: UnifiedId
      type: object
      x-apideck-schema-id: Id
    UnprocessableResponse:
      properties:
        detail:
          description: Contains parameter or domain specific information related to the error and why it occurred.
          example: Unprocessable request, please verify your request headers and body.
          type: string
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Unprocessable Entity
          type: string
        message:
          description: A human-readable message providing more details about the error.
          example: Invalid State
          type: string
        ref:
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#invalidstateerror
          type: string
        status_code:
          description: HTTP status code
          example: 422
          type: number
        type_name:
          description: The type of error returned
          example: InvalidStateError
          type: string
      type: object
      x-apideck-schema-id: Unprocessable
    UpdateJobResponse:
      properties:
        data:
          $ref: "#/components/schemas/UnifiedId"
        operation:
          description: Operation performed
          example: update
          type: string
        resource:
          description: Unified API resource name
          example: Jobs
          type: string
        service:
          description: Apideck ID of service provider
          example: sage-hr
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: UpdateJobResponse
    UpdatedAt:
      example: 2020-09-30T07:43:32.000Z
      format: date-time
      readOnly: true
      title: Updated at (timestamp)
      type: string
    UpdatedBy:
      example: "12345"
      nullable: true
      readOnly: true
      type: string
    Url:
      description: The url pointing to the job.
      example: https://downstreamconnector.com/job?id=123
      format: uri
      pattern: ^(https?)://
      type: string
  securitySchemes:
    apiKey:
      description: |
        To use API you have to sign up and get your own API key. Unify API accounts have sandbox mode and live mode API keys. 
        To change modes just use the appropriate key to get a live or test object. You can find your API keys on the unify settings of your Apideck app.
        Your Apideck application_id can also be found on the same page.

        Authenticate your API requests by including your test or live secret API key in the request header. 

        - Bearer authorization header: `Authorization: Bearer <your-apideck-api-key>`
        - Application id header: `x-apideck-app-id: <your-apideck-app-id>`

        You should use the public keys on the SDKs and the secret keys to authenticate API requests.

        **Do not share or include your secret API keys on client side code.** Your API keys carry significant privileges. Please ensure to keep them 100% secure and be sure to not share your secret API keys in areas that are publicly accessible like GitHub.

        Learn how to set the Authorization header inside Postman https://learning.postman.com/docs/postman/sending-api-requests/authorization/#api-key

        Go to Unify to grab your API KEY https://app.apideck.com/unify/api-keys
      in: header
      name: Authorization
      type: apiKey
x-webhooks:
  ApplicantCreated:
    post:
      description: Applicant created
      operationId: applicantCreated
      parameters:
        - description: The type of event that was triggered
          in: header
          name: x-apideck-event-type
          required: true
          schema:
            $ref: "#/components/schemas/AtsEventType"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AtsWebhookEvent"
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received successfully
      summary: Applicant created
      tags:
        - Webhook Events
      x-apideck-event-type: ats.applicant.created
      x-apideck-upcoming: true
  ApplicantDeleted:
    post:
      description: Applicant deleted
      operationId: applicantDeleted
      parameters:
        - description: The type of event that was triggered
          in: header
          name: x-apideck-event-type
          required: true
          schema:
            $ref: "#/components/schemas/AtsEventType"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AtsWebhookEvent"
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received successfully
      summary: Applicant deleted
      tags:
        - Webhook Events
      x-apideck-event-type: ats.applicant.deleted
      x-apideck-upcoming: true
  ApplicantUpdated:
    post:
      description: Applicant updated
      operationId: applicantUpdated
      parameters:
        - description: The type of event that was triggered
          in: header
          name: x-apideck-event-type
          required: true
          schema:
            $ref: "#/components/schemas/AtsEventType"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AtsWebhookEvent"
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received successfully
      summary: Applicant updated
      tags:
        - Webhook Events
      x-apideck-event-type: ats.applicant.updated
      x-apideck-upcoming: true
  JobCreated:
    post:
      description: Job created
      operationId: jobCreated
      parameters:
        - description: The type of event that was triggered
          in: header
          name: x-apideck-event-type
          required: true
          schema:
            $ref: "#/components/schemas/AtsEventType"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AtsWebhookEvent"
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received successfully
      summary: Job created
      tags:
        - Webhook Events
      x-apideck-event-type: ats.job.created
  JobDeleted:
    post:
      description: Job deleted
      operationId: jobDeleted
      parameters:
        - description: The type of event that was triggered
          in: header
          name: x-apideck-event-type
          required: true
          schema:
            $ref: "#/components/schemas/AtsEventType"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AtsWebhookEvent"
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received successfully
      summary: Job deleted
      tags:
        - Webhook Events
      x-apideck-event-type: ats.job.deleted
  JobUpdated:
    post:
      description: Job updated
      operationId: jobUpdated
      parameters:
        - description: The type of event that was triggered
          in: header
          name: x-apideck-event-type
          required: true
          schema:
            $ref: "#/components/schemas/AtsEventType"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AtsWebhookEvent"
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received successfully
      summary: Job updated
      tags:
        - Webhook Events
      x-apideck-event-type: ats.job.updated
  x-sdk-exclude: true
