openapi: 3.0.0
servers:
  - url: https://unify.apideck.com
info:
  contact:
    email: hello@apideck.com
    url: https://developers.apideck.com
  description: |+
    Welcome to the Customer Support API.

    You can use this API to access all Customer Support API endpoints.

    ## Base URL

    The base URL for all API requests is `https://unify.apideck.com`

    We also provide a [Mock API](https://developers.apideck.com/mock-api) that can be used for testing purposes: `https://mock-api.apideck.com`

    ## GraphQL

    Use the [GraphQL playground](https://developers.apideck.com/graphql/playground) to test out the GraphQL API.

    ## Headers

    Custom headers that are expected as part of the request. Note that [RFC7230](https://tools.ietf.org/html/rfc7230) states header names are case insensitive.

    | Name                  | Type    | Required | Description                                                                                                                                                    |
    | --------------------- | ------- | -------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------- |
    | x-apideck-consumer-id | String  | Yes      | The id of the customer stored inside Apideck Vault. This can be a user id, account id, device id or whatever entity that can have integration within your app. |
    | x-apideck-service-id  | String  | No       | Describe the service you want to call (e.g., pipedrive). Only needed when a customer has activated multiple integrations for the same Unified API.             |
    | x-apideck-raw         | Boolean | No       | Include raw response. Mostly used for debugging purposes.                                                                                                      |
    | x-apideck-app-id      | String  | Yes      | The application id of your Unify application. Available at https://app.apideck.com/unify/api-keys.                                                             |
    | Authorization         | String  | Yes      | Bearer API KEY                                                                                                                                                 |

    ## Authorization

    You can interact with the API through the authorization methods below.

    <!-- ReDoc-Inject: <security-definitions> -->

    ## Pagination

    All API resources have support for bulk retrieval via list APIs.  Apideck uses cursor-based pagination via the optional `cursor` and `limit` parameters.

    To fetch the first page of results, call the list API without a `cursor` parameter. Afterwards you can fetch subsequent pages by providing a cursor parameter. You will find the next cursor in the response body in `meta.cursors.next`. If `meta.cursors.next` is `null` you're at the end of the list.

    In the REST API you can also use the `links` from the response for added convenience. Simply call the URL in `links.next` to get the next page of results.

    ### Query Parameters

    | Name   | Type   | Required | Description                                                                                                        |
    | ------ | ------ | -------- | ------------------------------------------------------------------------------------------------------------------ |
    | cursor | String | No       | Cursor to start from. You can find cursors for next & previous pages in the meta.cursors property of the response. |
    | limit  | Number | No       | Number of results to return. Minimum 1, Maximum 200, Default 20                                                    |

    ### Response Body

    | Name                  | Type   | Description                                                        |
    | --------------------- | ------ | ------------------------------------------------------------------ |
    | meta.cursors.previous | String | Cursor to navigate to the previous page of results through the API |
    | meta.cursors.current  | String | Cursor to navigate to the current page of results through the API  |
    | meta.cursors.next     | String | Cursor to navigate to the next page of results through the API     |
    | meta.items_on_page    | Number | Number of items returned in the data property of the response      |
    | links.previous        | String | Link to navigate to the previous page of results through the API   |
    | links.current         | String | Link to navigate to the current page of results through the API    |
    | links.next            | String | Link to navigate to the next page of results through the API       |

    ⚠️ `meta.cursors.previous`/`links.previous` is not available for all connectors.

    ## SDKs and API Clients

    We currently offer a [Node.js](https://developers.apideck.com/sdks/node), [PHP](https://developers.apideck.com/sdks/php) and [.NET](https://developers.apideck.com/sdks/dot-net) SDK.
    Need another SDK? [Request the SDK of your choice](https://integrations.apideck.com/request).

    ## Debugging

    Because of the nature of the abstraction we do in Apideck Unify we still provide the option to the receive raw requests and responses being handled underlying. By including the raw flag `?raw=true` in your requests you can still receive the full request. Please note that this increases the response size and can introduce extra latency.

    ## Errors

    The API returns standard HTTP response codes to indicate success or failure of the API requests. For errors, we also return a customized error message inside the JSON response. You can see the returned HTTP status codes below.

    | Code | Title                | Description                                                                                                                                                                                              |
    | ---- | -------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
    | 200  | OK                   | The request message has been successfully processed, and it has produced a response. The response message varies, depending on the request method and the requested data.                                |
    | 201  | Created              | The request has been fulfilled and has resulted in one or more new resources being created.                                                                                                              |
    | 204  | No Content           | The server has successfully fulfilled the request and that there is no additional content to send in the response payload body.                                                                          |
    | 400  | Bad Request          | The receiving server cannot understand the request because of malformed syntax. Do not repeat the request without first modifying it; check the request for errors, fix them and then retry the request. |
    | 401  | Unauthorized         | The request has not been applied because it lacks valid authentication credentials for the target resource.                                                                                              |
    | 402  | Payment Required     | Subscription data is incomplete or out of date. You'll need to provide payment details to continue.                                                                                                      |
    | 403  | Forbidden            | You do not have the appropriate user rights to access the request. Do not repeat the request.                                                                                                            |
    | 404  | Not Found            | The origin server did not find a current representation for the target resource or is not willing to disclose that one exists.                                                                           |
    | 409  | Conflict             | The request could not be completed due to a conflict with the current state of the target resource.                                                                                                      |
    | 422  | Unprocessable Entity | The server understands the content type of the request entity, and the syntax of the request entity is correct but was unable to process the contained instructions.                                     |
    | 429  | Too Many Requests    | You sent too many requests in a given amount of time ("rate limit"). Try again later                                                                                                                     |
    | 5xx  | Server Errors        | Something went wrong with the Unify API. These errors are logged on our side. You can contact our team to resolve the issue.                                                                             |

    ### Handling errors

    The Unify API and SDKs can produce errors for many reasons, such as a failed requests due to misconfigured integrations, invalid parameters, authentication errors, and network unavailability.

    ### Error Types

    #### RequestValidationError

    Request is not valid for the current endpoint. The response body will include details on the validation error. Check the spelling and types of your attributes, and ensure you are not passing data that is outside of the specification.

    #### UnsupportedFiltersError

    Filters in the request are valid, but not supported by the connector. Remove the unsupported filter(s) to get a successful response.

    #### UnsupportedSortFieldError

    Sort field (`sort[by]`) in the request is valid, but not supported by the connector. Replace or remove the sort field to get a successful response.

    #### InvalidCursorError

    Pagination cursor in the request is not valid for the current connector. Make sure to use a cursor returned from the API, for the same connector.

    #### ConnectorExecutionError

    A Unified API request made via one of our downstream connectors returned an unexpected error. The `status_code` returned is proxied through to error response along with their original response via the error detail.

    #### UnauthorizedError

    We were unable to authorize the request as made. This can happen for a number of reasons, from missing header params to passing an incorrect authorization token. Verify your Api Key is being set correctly in the authorization header. ie: `Authorization: 'Bearer sk_live_***'`

    #### ConnectorCredentialsError

    A request using a given connector has not been authorized. Ensure the connector you are trying to use has been configured correctly and been authorized for use.

    #### ConnectorDisabledError

    A request has been made to a connector that has since been disabled. This may be temporary - You can contact our team to resolve the issue.

    #### ConnectorRateLimitError

    You sent too many request to a connector. These rate limits vary from connector to connector. You will need to try again later.

    #### RequestLimitError

    You have reached the number of requests included in your Free Tier Subscription. You will no be able to make further requests until this limit resets at the end of the month, or talk to us about upgrading your subscription to continue immediately.

    #### EntityNotFoundError

    You've made a request for a resource or route that does not exist. Verify your path parameters or any identifiers used to fetch this resource.

    #### OAuthCredentialsNotFoundError

    When adding a connector integration that implements OAuth, both a `client_id` and `client_secret` must be provided before any authorizations can be performed. Verify the integration has been configured properly before continuing.

    #### IntegrationNotFoundError

    The requested connector integration could not be found associated to your `application_id`. Verify your `application_id` is correct, and that this connector has been added and configured for your application.

    #### ConnectionNotFoundError

    A valid connection could not be found associated to your `application_id`. Something _may_ have interrupted the authorization flow. You may need to start the connector authorization process again.

    #### ConnectionSettingsError

    The connector has required settings that were not supplied. Verify `connection.settings` contains all required settings for the connector to be callable.

    #### ConnectorNotFoundError

    A request was made for an unknown connector. Verify your `service_id` is spelled correctly, and that this connector is enabled for your provided `unified_api`.

    #### OAuthRedirectUriError

    A request was made either in a connector authorization flow, or attempting to revoke connector access without a valid `redirect_uri`. This is the url the user should be returned to on completion of process.

    #### OAuthInvalidStateError

    The state param is required and is used to ensure the outgoing authorization state has not been altered before the user is redirected back. It also contains required params needed to identify the connector being used. If this has been altered, the authorization will not succeed.

    #### OAuthCodeExchangeError

    When attempting to exchange the authorization code for an `access_token` during an OAuth flow, an error occurred. This may be temporary. You can reattempt authorization or contact our team to resolve the issue.

    #### OAuthConnectorError

    It seems something went wrong on the connector side. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.

    #### MappingError

    There was an error attempting to retrieve the mapping for a given attribute. We've been notified and are working to fix this issue.

    #### ConnectorMappingNotFoundError

    It seems the implementation for this connector is incomplete. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.

    #### ConnectorResponseMappingNotFoundError

    We were unable to retrieve the response mapping for this connector. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.

    #### ConnectorOperationMappingNotFoundError

    Connector mapping has not been implemented for the requested operation. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.

    #### ConnectorWorkflowMappingError

    The composite api calls required for this operation have not been mapped entirely. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.

    #### ConnectorOperationUnsupportedError

    You're attempting a call that is not supported by the connector. It's likely this operation is supported by another connector, but we're unable to implement for this one.

    #### PaginationNotSupportedError

    Pagination is not yet supported for this connector, try removing limit and/or cursor from the query. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.

    ## API Design

    ### API Styles and data formats

    #### REST API

    The API is organized around [REST](https://restfulapi.net/), providing simple and predictable URIs to access and modify objects. Requests support standard HTTP methods like GET, PUT, POST, and DELETE and standard status codes. JSON is returned by all API responses, including errors. In all API requests, you must set the content-type HTTP header to application/json. All API requests must be made over HTTPS. Calls made over HTTP will fail.

    ##### Available HTTP methods

    The Apideck API uses HTTP verbs to understand if you want to read (GET), delete (DELETE) or create (POST) an object. When your web application cannot do a POST or DELETE, we provide the ability to set the method through the query parameter \_method.

    ```
    POST /messages
    GET /messages
    GET /messages/{messageId}
    PATCH /messages/{messageId}
    DELETE /messages/{messageId}
    ```

    Response bodies are always UTF-8 encoded JSON objects, unless explicitly documented otherwise. For some endpoints and use cases we divert from REST to provide a better developer experience.

    ### Schema

    All API requests and response bodies adhere to a common JSON format representing individual items, collections of items, links to related items and additional meta data.

    ### Meta

    Meta data can be represented as a top level member named “meta”. Any information may be provided in the meta data. It’s most common use is to return the total number of records when requesting a collection of resources.

    ### Idempotence (upcoming)

    To prevent the creation of duplicate resources, every POST method (such as one that creates a consumer record) must specify a unique value for the X-Unique-Transaction-ID header name. Uniquely identifying each unique POST request ensures that the API processes a given request once and only once.

    Uniquely identifying new resource-creation POSTs is especially important when the outcome of a response is ambiguous because of a transient service interruption, such as a server-side timeout or network disruption. If a service interruption occurs, then the client application can safely retry the uniquely identified request without creating duplicate operations. (API endpoints that guarantee that every uniquely identified request is processed only once no matter how many times that uniquely identifiable request is made are described as idempotent.)

    ### Request IDs

    Each API request has an associated request identifier. You can find this value in the response headers, under Request-Id. You can also find request identifiers in the URLs of individual request logs in your Dashboard. If you need to contact us about a specific request, providing the request identifier will ensure the fastest possible resolution.

    ### Fixed field types

    #### Dates

    The dates returned by the API are all represented in UTC (ISO8601 format).

    This example `2019-11-14T00:55:31.820Z` is defined by the ISO 8601 standard. The T in the middle separates the year-month-day portion from the hour-minute-second portion. The Z on the end means UTC, that is, an offset-from-UTC of zero hours-minutes-seconds. The Z is pronounced "Zulu" per military/aviation tradition.

    The ISO 8601 standard is more modern. The formats are wisely designed to be easy to parse by machine as well as easy to read by humans across cultures.

    #### Prices and Currencies

    All prices returned by the API are represented as integer amounts in a currency’s smallest unit. For example, $5 USD would be returned as 500 (i.e, 500 cents).

    For zero-decimal currencies, amounts will still be provided as an integer but without the need to divide by 100. For example, an amount of ¥5 (JPY) would be returned as 5.

    All currency codes conform to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).

    ## Support

    If you have problems or need help with your case, you can always reach out to our Support.

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Customer Support
  version: 8.85.0
  x-apideck-api: customer-support
  x-apideck-sdk-support: true
  x-apisguru-categories:
    - developer_tools
  x-logo:
    url: https://developers.apideck.com/icon.png
  x-origin:
    - format: openapi
      url: https://raw.githubusercontent.com/apideck-libraries/openapi-specs/master/customer-support.yml
      version: "3.0"
  x-providerName: apideck.com
  x-serviceName: customer-support
  x-tags:
    - partner
externalDocs:
  description: Apideck Developer Docs
  url: https://developers.apideck.com
security:
  - apiKey: []
tags:
  - description: ""
    name: Customers
    x-apideck-model:
      $ref: "#/components/schemas/CustomerSupportCustomer"
    x-apideck-resource-id: customers
paths:
  /customer-support/customers:
    get:
      description: List Customer Support Customers
      operationId: customersAll
      parameters:
        - $ref: "#/components/parameters/raw"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
        - $ref: "#/components/parameters/cursor"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/GetCustomerSupportCustomersResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: List Customer Support Customers
      tags:
        - Customers
      x-apideck-api: customerSupport
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.customerSupport.customersAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-field-name: customerSupportCustomers
    post:
      description: Create Customer Support Customer
      operationId: customersAdd
      parameters:
        - $ref: "#/components/parameters/raw"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerSupportCustomer"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/CreateCustomerSupportCustomerResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: Create Customer Support Customer
      tags:
        - Customers
      x-apideck-api: customerSupport
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              customer: {
                company_name: 'SpaceX',
                first_name: 'Elon',
                last_name: 'Musk',
                individual: true,
                addresses: [
                  {
                    id: '123',
                    type: 'primary',
                    string: '25 Spring Street, Blackburn, VIC 3130',
                    name: 'HQ US',
                    line1: 'Main street',
                    line2: 'apt #',
                    line3: 'Suite #',
                    line4: 'delivery instructions',
                    street_number: '25',
                    city: 'San Francisco',
                    state: 'CA',
                    postal_code: '94104',
                    country: 'US',
                    latitude: '40.759211',
                    longitude: '-73.984638',
                    county: 'Santa Clara',
                    contact_name: 'Elon Musk',
                    salutation: 'Mr',
                    phone_number: '111-111-1111',
                    fax: '122-111-1111',
                    email: 'elon@musk.com',
                    website: 'https://elonmusk.com',
                    row_version: '1-12345'
                  }
                ],
                notes: 'Some notes about this customer',
                phone_numbers: [
                  {
                    id: '12345',
                    country_code: '1',
                    area_code: '323',
                    number: '111-111-1111',
                    extension: '105',
                    type: 'primary'
                  }
                ],
                emails: [
                  {
                    id: '123',
                    email: 'elon@musk.com',
                    type: 'primary'
                  }
                ],
                tax_number: 'US123945459',
                currency: 'USD',
                bank_accounts: {
                  iban: 'CH2989144532982975332',
                  bic: 'AUDSCHGGXXX',
                  bsb_number: '062-001',
                  branch_identifier: '001',
                  bank_code: 'BNH',
                  account_number: '123465',
                  account_name: 'SPACEX LLC',
                  account_type: 'credit_card',
                  currency: 'USD'
                },
                status: 'active'
              }
            }

            try {
              const { data } = await apideck.customerSupport.customersAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  "/customer-support/customers/{id}":
    delete:
      description: Delete Customer Support Customer
      operationId: customersDelete
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
        - $ref: "#/components/parameters/raw"
      responses:
        "200":
          $ref: "#/components/responses/DeleteCustomerSupportCustomerResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: Delete Customer Support Customer
      tags:
        - Customers
      x-apideck-api: customerSupport
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.customerSupport.customersDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    get:
      description: Get Customer Support Customer
      operationId: customersOne
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
        - $ref: "#/components/parameters/raw"
      responses:
        "200":
          $ref: "#/components/responses/GetCustomerSupportCustomerResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: Get Customer Support Customer
      tags:
        - Customers
      x-apideck-api: customerSupport
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.customerSupport.customersOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    patch:
      description: Update Customer Support Customer
      operationId: customersUpdate
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/consumerId"
        - $ref: "#/components/parameters/applicationId"
        - $ref: "#/components/parameters/serviceId"
        - $ref: "#/components/parameters/raw"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerSupportCustomer"
        required: true
      responses:
        "200":
          $ref: "#/components/responses/UpdateCustomerSupportCustomerResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "402":
          $ref: "#/components/responses/PaymentRequiredResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "422":
          $ref: "#/components/responses/UnprocessableResponse"
        default:
          $ref: "#/components/responses/UnexpectedErrorResponse"
      security:
        - apiKey: []
      summary: Update Customer Support Customer
      tags:
        - Customers
      x-apideck-api: customerSupport
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              customer: {
                company_name: 'SpaceX',
                first_name: 'Elon',
                last_name: 'Musk',
                individual: true,
                addresses: [
                  {
                    id: '123',
                    type: 'primary',
                    string: '25 Spring Street, Blackburn, VIC 3130',
                    name: 'HQ US',
                    line1: 'Main street',
                    line2: 'apt #',
                    line3: 'Suite #',
                    line4: 'delivery instructions',
                    street_number: '25',
                    city: 'San Francisco',
                    state: 'CA',
                    postal_code: '94104',
                    country: 'US',
                    latitude: '40.759211',
                    longitude: '-73.984638',
                    county: 'Santa Clara',
                    contact_name: 'Elon Musk',
                    salutation: 'Mr',
                    phone_number: '111-111-1111',
                    fax: '122-111-1111',
                    email: 'elon@musk.com',
                    website: 'https://elonmusk.com',
                    row_version: '1-12345'
                  }
                ],
                notes: 'Some notes about this customer',
                phone_numbers: [
                  {
                    id: '12345',
                    country_code: '1',
                    area_code: '323',
                    number: '111-111-1111',
                    extension: '105',
                    type: 'primary'
                  }
                ],
                emails: [
                  {
                    id: '123',
                    email: 'elon@musk.com',
                    type: 'primary'
                  }
                ],
                tax_number: 'US123945459',
                currency: 'USD',
                bank_accounts: {
                  iban: 'CH2989144532982975332',
                  bic: 'AUDSCHGGXXX',
                  bsb_number: '062-001',
                  branch_identifier: '001',
                  bank_code: 'BNH',
                  account_number: '123465',
                  account_name: 'SPACEX LLC',
                  account_type: 'credit_card',
                  currency: 'USD'
                },
                status: 'active'
              }
            }

            try {
              const { data } = await apideck.customerSupport.customersUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
components:
  parameters:
    applicationId:
      description: The ID of your Unify application
      in: header
      name: x-apideck-app-id
      required: true
      schema:
        type: string
    consumerId:
      description: ID of the consumer which you want to get or push data from
      in: header
      name: x-apideck-consumer-id
      required: true
      schema:
        type: string
    cursor:
      description: Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.
      in: query
      name: cursor
      schema:
        nullable: true
        type: string
    id:
      description: ID of the record you are acting upon.
      in: path
      name: id
      required: true
      schema:
        type: string
    limit:
      description: Number of records to return
      in: query
      name: limit
      schema:
        default: 20
        maximum: 200
        minimum: 1
        type: integer
    raw:
      description: Include raw response. Mostly used for debugging purposes
      in: query
      name: raw
      schema:
        default: false
        type: boolean
    serviceId:
      description: Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
      in: header
      name: x-apideck-service-id
      schema:
        type: string
  responses:
    BadRequestResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BadRequestResponse"
      description: Bad Request
    CreateCustomerSupportCustomerResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreateCustomerSupportCustomerResponse"
      description: CustomerSupportCustomers
    DeleteCustomerSupportCustomerResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DeleteCustomerSupportCustomerResponse"
      description: CustomerSupportCustomers
    GetCustomerSupportCustomerResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GetCustomerSupportCustomerResponse"
      description: CustomerSupportCustomers
    GetCustomerSupportCustomersResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GetCustomerSupportCustomersResponse"
      description: CustomerSupportCustomers
    NotFoundResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/NotFoundResponse"
      description: The specified resource was not found
    NotImplementedResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/NotImplementedResponse"
      description: Not Implemented
    PaymentRequiredResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/PaymentRequiredResponse"
      description: Payment Required
    TooManyRequestsResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TooManyRequestsResponse"
      description: Too Many Requests
    UnauthorizedResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UnauthorizedResponse"
      description: Unauthorized
    UnexpectedErrorResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UnexpectedErrorResponse"
      description: Unexpected error
    UnprocessableResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UnprocessableResponse"
      description: Unprocessable
    UpdateCustomerSupportCustomerResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UpdateCustomerSupportCustomerResponse"
      description: CustomerSupportCustomers
  schemas:
    Address:
      additionalProperties: false
      properties:
        city:
          description: Name of city.
          example: San Francisco
          nullable: true
          type: string
        contact_name:
          example: Elon Musk
          nullable: true
          type: string
        country:
          description: country code according to ISO 3166-1 alpha-2.
          example: US
          nullable: true
          type: string
        county:
          description: Address field that holds a sublocality, such as a county
          example: Santa Clara
          nullable: true
          type: string
        email:
          example: elon@musk.com
          nullable: true
          type: string
        fax:
          example: 122-111-1111
          nullable: true
          type: string
        id:
          example: "123"
          nullable: true
          type: string
        latitude:
          example: "40.759211"
          nullable: true
          type: string
        line1:
          description: "Line 1 of the address e.g. number, street, suite, apt #, etc."
          example: Main street
          nullable: true
          type: string
        line2:
          description: Line 2 of the address
          example: "apt #"
          nullable: true
          type: string
        line3:
          description: Line 3 of the address
          example: "Suite #"
          nullable: true
          type: string
        line4:
          description: Line 4 of the address
          example: delivery instructions
          nullable: true
          type: string
        longitude:
          example: "-73.984638"
          nullable: true
          type: string
        name:
          example: HQ US
          nullable: true
          type: string
        phone_number:
          example: 111-111-1111
          nullable: true
          type: string
        postal_code:
          description: Zip code or equivalent.
          example: "94104"
          nullable: true
          type: string
        row_version:
          $ref: "#/components/schemas/RowVersion"
        salutation:
          example: Mr
          nullable: true
          type: string
        state:
          description: Name of state
          example: CA
          nullable: true
          type: string
        street_number:
          description: Street number
          example: "25"
          nullable: true
          type: string
        string:
          example: 25 Spring Street, Blackburn, VIC 3130
          nullable: true
          title: The address string. Some APIs don't provide structured address data.
          type: string
        type:
          enum:
            - primary
            - secondary
            - home
            - office
            - shipping
            - billing
            - other
          example: primary
          type: string
          x-apideck-enum-id: addresses.type
          x-graphql-type-name: AddressType
        website:
          example: https://elonmusk.com
          nullable: true
          type: string
      type: object
      x-apideck-schema-id: Address
      x-apideck-weights:
        city: high
        contact_name: edge-case
        country: high
        county: edge-case
        email: edge-case
        fax: edge-case
        id: edge-case
        latitude: low
        line1: high
        line2: low
        line3: edge-case
        line4: edge-case
        longitude: low
        name: edge-case
        phone_number: edge-case
        postal_code: high
        row_version: edge-case
        salutation: edge-case
        state: high
        street_number: low
        string: low
        type: critical
        website: edge-case
    BadRequestResponse:
      properties:
        detail:
          anyOf:
            - example: Missing property foobar
              type: string
            - example:
                missing:
                  - foobar: required
              type: object
          description: Contains parameter or domain specific information related to the error and why it occurred.
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Bad Request
          type: string
        message:
          description: A human-readable message providing more details about the error.
          example: Invalid Params
          type: string
        ref:
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#requestvalidationerror
          type: string
        status_code:
          description: HTTP status code
          example: 400
          type: number
        type_name:
          description: The type of error returned
          example: RequestValidationError
          type: string
      type: object
      x-apideck-schema-id: BadRequest
    BankAccount:
      additionalProperties: false
      properties:
        account_name:
          description: The name which you used in opening your bank account.
          example: SPACEX LLC
          nullable: true
          title: Bank Account Name
          type: string
        account_number:
          description: A bank account number is a number that is tied to your bank account. If you have several bank accounts, such as personal, joint, business (and so on), each account will have a different account number.
          example: "123465"
          nullable: true
          title: Bank Account Number
          type: string
        account_type:
          description: The type of bank account.
          enum:
            - bank_account
            - credit_card
            - other
          example: credit_card
          nullable: true
          title: Account Type
          type: string
          x-apideck-enum-id: bank-accounts.account_type
        bank_code:
          description: A bank code is a code assigned by a central bank, a bank supervisory body or a Bankers Association in a country to all its licensed member banks or financial institutions.
          example: BNH
          nullable: true
          title: Bank Code
          type: string
        bic:
          example: AUDSCHGGXXX
          nullable: true
          type: string
        branch_identifier:
          description: A branch identifier is a unique identifier for a branch of a bank or financial institution.
          example: "001"
          nullable: true
          title: Branch Identifier
          type: string
        bsb_number:
          description: A BSB is a 6 digit numeric code used for identifying the branch of an Australian or New Zealand bank or financial institution.
          example: 062-001
          nullable: true
          title: BSB Number
          type: string
        currency:
          $ref: "#/components/schemas/Currency"
        iban:
          example: CH2989144532982975332
          nullable: true
          type: string
      type: object
      x-apideck-schema-id: BankAccount
      x-apideck-weights:
        account_number: critical
        bsb_number: edge-case
        iban: high
    Company:
      additionalProperties: false
      properties:
        abn_branch:
          description: An ABN Branch (also known as a GST Branch) is used if part of your business needs to account for GST separately from its parent entity.
          example: "123"
          nullable: true
          title: ABN Branch
          type: string
        abn_or_tfn:
          description: An ABN is necessary for operating a business, while a TFN (Tax File Number) is required for any person working in Australia.
          example: 46 115 614 695
          nullable: true
          title: ABN or TFN
          type: string
        acn:
          description: The Australian Company Number (ACN) is a nine digit number with the last digit being a check digit calculated using a modified modulus 10 calculation. ASIC has adopted a convention of always printing and displaying the ACN in the format XXX XXX XXX; three blocks of three characters, each block separated by a blank.
          example: XXX XXX XXX
          nullable: true
          title: ACN
          type: string
        addresses:
          items:
            $ref: "#/components/schemas/Address"
          type: array
        annual_revenue:
          description: Annual revenue
          example: +$35m
          nullable: true
          type: string
        bank_accounts:
          items:
            $ref: "#/components/schemas/BankAccount"
          type: array
        birthday:
          example: 2000-08-12
          format: date
          nullable: true
          type: string
        created_at:
          example: 2020-09-30T07:43:32.000Z
          format: date-time
          readOnly: true
          type: string
        created_by:
          example: "12345"
          nullable: true
          readOnly: true
          type: string
        currency:
          $ref: "#/components/schemas/Currency"
        custom_fields:
          items:
            $ref: "#/components/schemas/CustomField"
          type: array
        deleted:
          example: false
          readOnly: true
          type: boolean
        description:
          example: Space Exploration Technologies Corp. is an American aerospace manufacturer, space transportation services and communications company headquartered in Hawthorne, California.
          nullable: true
          type: string
        emails:
          items:
            $ref: "#/components/schemas/Email"
          type: array
        fax:
          example: "+12129876543"
          nullable: true
          type: string
        first_name:
          $ref: "#/components/schemas/FirstName"
        id:
          example: "12345"
          readOnly: true
          type: string
        image:
          example: https://www.spacex.com/static/images/share.jpg
          nullable: true
          type: string
        industry:
          description: Industry
          example: Apparel
          nullable: true
          type: string
        interaction_count:
          example: 1
          nullable: true
          readOnly: true
          type: integer
        last_activity_at:
          example: 2020-09-30T07:43:32.000Z
          format: date-time
          nullable: true
          readOnly: true
          type: string
        last_name:
          $ref: "#/components/schemas/LastName"
        name:
          example: SpaceX
          minLength: 1
          type: string
        number_of_employees:
          description: Number of employees
          example: 500-1000
          nullable: true
          type: string
        owner_id:
          example: "12345"
          type: string
        ownership:
          description: Ownership
          example: Public
          nullable: true
          type: string
        parent_id:
          description: Parent ID
          example: "22345"
          readOnly: true
          type: string
        payee_number:
          example: 78932EN
          nullable: true
          title: Payee number
          type: string
        phone_numbers:
          items:
            $ref: "#/components/schemas/PhoneNumber"
          type: array
        read_only:
          example: false
          nullable: true
          title: Read-only
          type: boolean
        row_type:
          properties:
            id:
              example: "12345"
              type: string
            name:
              example: Customer Account
              type: string
          title: Company Row Type
          type: object
          x-apideck-weights:
            id: critical
            name: medium
          x-graphql-type-name: CompanyRowType
        sales_tax_number:
          example: 12456EN
          nullable: true
          title: Sales tax number
          type: string
        salutation:
          example: Mr
          nullable: true
          type: string
        social_links:
          items:
            $ref: "#/components/schemas/SocialLink"
          type: array
        status:
          example: Open
          nullable: true
          type: string
        tags:
          $ref: "#/components/schemas/Tags"
        updated_at:
          example: 2020-09-30T07:43:32.000Z
          format: date-time
          readOnly: true
          type: string
        updated_by:
          example: "12345"
          nullable: true
          readOnly: true
          type: string
        vat_number:
          description: VAT number
          example: BE0689615164
          nullable: true
          type: string
        websites:
          items:
            $ref: "#/components/schemas/Website"
          type: array
      required:
        - name
      type: object
      x-apideck-schema-id: Company
      x-apideck-weights:
        abn_branch: edge-case
        abn_or_tfn: edge-case
        acn: edge-case
        addresses: high
        annual_revenue: low
        bank_accounts: medium
        birthday: edge-case
        created_at: medium
        created_by: edge-case
        currency: medium
        custom_fields: medium
        deleted: medium
        description: medium
        emails: high
        fax: low
        first_name: edge-case
        id: critical
        image: low
        industry: medium
        interaction_count: edge-case
        last_activity_at: low
        last_name: edge-case
        name: critical
        number_of_employees: low
        owner_id: high
        ownership: low
        parent_id: edge-case
        payee_number: edge-case
        phone_numbers: high
        read_only: low
        row_type: edge-case
        sales_tax_number: medium
        salutation: edge-case
        social_links: low
        status: high
        tags: low
        updated_at: high
        updated_by: edge-case
        vat_number: high
        websites: medium
    CompanyName:
      example: SpaceX
      nullable: true
      title: Company name
      type: string
    Contact:
      additionalProperties: false
      properties:
        active:
          example: true
          nullable: true
          type: boolean
        addresses:
          items:
            $ref: "#/components/schemas/Address"
          type: array
        birthday:
          example: 2000-08-12
          nullable: true
          type: string
        company_id:
          example: "23456"
          nullable: true
          type: string
        company_name:
          example: "23456"
          nullable: true
          type: string
        created_at:
          example: 2017-08-12T20:43:21.291Z
          format: date-time
          readOnly: true
          type: string
        current_balance:
          example: 10.5
          nullable: true
          title: Current Balance
          type: number
        custom_fields:
          items:
            $ref: "#/components/schemas/CustomField"
          type: array
        department:
          example: Engineering
          nullable: true
          type: string
        description:
          example: Internal champion
          nullable: true
          title: Description
          type: string
        emails:
          items:
            $ref: "#/components/schemas/Email"
          type: array
        fax:
          example: "+12129876543"
          nullable: true
          type: string
        first_call_at:
          example: 2020-09-30T07:43:32.000Z
          format: date-time
          nullable: true
          readOnly: true
          type: string
        first_email_at:
          example: 2020-09-30T07:43:32.000Z
          format: date-time
          nullable: true
          readOnly: true
          type: string
        first_name:
          example: Elon
          nullable: true
          type: string
        gender:
          enum:
            - male
            - female
            - unisex
          example: female
          nullable: true
          type: string
          x-apideck-enum-id: contacts.gender
        id:
          example: "12345"
          readOnly: true
          type: string
        image:
          deprecated: true
          example: https://unavatar.io/elon-musk
          nullable: true
          type: string
        language:
          description: language code according to ISO 639-1. For the United States - EN
          example: EN
          nullable: true
          type: string
        last_activity_at:
          example: 2020-09-30T07:43:32.000Z
          format: date-time
          nullable: true
          readOnly: true
          type: string
        last_name:
          example: Musk
          nullable: true
          type: string
        lead_id:
          example: "34567"
          nullable: true
          type: string
        lead_source:
          example: Cold Call
          nullable: true
          type: string
        middle_name:
          example: D.
          nullable: true
          type: string
        name:
          example: Elon Musk
          minLength: 1
          type: string
        owner_id:
          example: "54321"
          nullable: true
          type: string
        phone_numbers:
          items:
            $ref: "#/components/schemas/PhoneNumber"
          type: array
        photo_url:
          example: https://unavatar.io/elon-musk
          nullable: true
          title: Photo URL
          type: string
        prefix:
          example: Mr.
          nullable: true
          type: string
        social_links:
          items:
            $ref: "#/components/schemas/SocialLink"
          type: array
        status:
          example: open
          nullable: true
          type: string
        suffix:
          example: PhD
          nullable: true
          type: string
        tags:
          $ref: "#/components/schemas/Tags"
        title:
          example: CEO
          nullable: true
          type: string
        type:
          enum:
            - customer
            - supplier
            - employee
            - personal
          example: personal
          nullable: true
          type: string
          x-apideck-enum-id: contacts.type
        updated_at:
          example: 2017-08-12T20:43:21.291Z
          format: date-time
          readOnly: true
          type: string
        websites:
          items:
            $ref: "#/components/schemas/Website"
          type: array
      required:
        - name
      type: object
      x-apideck-schema-id: Contact
      x-apideck-weights:
        active: edge-case
        addresses: high
        birthday: medium
        company_id: high
        company_name: medium
        created_at: medium
        current_balance: edge-case
        custom_fields: medium
        department: medium
        description: low
        emails: high
        fax: low
        first_call_at: edge-case
        first_email_at: edge-case
        first_name: high
        gender: medium
        id: critical
        image: medium
        language: medium
        last_activity_at: medium
        last_name: high
        lead_id: medium
        lead_source: low
        middle_name: low
        name: critical
        owner_id: medium
        phone_numbers: high
        photo_url: medium
        prefix: low
        social_links: low
        status: edge-case
        suffix: low
        tags: low
        title: medium
        type: medium
        updated_at: high
        websites: medium
      x-pii:
        - name
        - first_name
        - middle_name
        - last_name
        - email
    CreateCustomerSupportCustomerResponse:
      properties:
        data:
          $ref: "#/components/schemas/UnifiedId"
        operation:
          description: Operation performed
          example: add
          type: string
        resource:
          description: Unified API resource name
          example: customers
          type: string
        service:
          description: Apideck ID of service provider
          example: kustomer
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: CreateCustomerSupportCustomerResponse
    Currency:
      description: Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
      enum:
        - UNKNOWN_CURRENCY
        - AED
        - AFN
        - ALL
        - AMD
        - ANG
        - AOA
        - ARS
        - AUD
        - AWG
        - AZN
        - BAM
        - BBD
        - BDT
        - BGN
        - BHD
        - BIF
        - BMD
        - BND
        - BOB
        - BOV
        - BRL
        - BSD
        - BTN
        - BWP
        - BYR
        - BZD
        - CAD
        - CDF
        - CHE
        - CHF
        - CHW
        - CLF
        - CLP
        - CNY
        - COP
        - COU
        - CRC
        - CUC
        - CUP
        - CVE
        - CZK
        - DJF
        - DKK
        - DOP
        - DZD
        - EGP
        - ERN
        - ETB
        - EUR
        - FJD
        - FKP
        - GBP
        - GEL
        - GHS
        - GIP
        - GMD
        - GNF
        - GTQ
        - GYD
        - HKD
        - HNL
        - HRK
        - HTG
        - HUF
        - IDR
        - ILS
        - INR
        - IQD
        - IRR
        - ISK
        - JMD
        - JOD
        - JPY
        - KES
        - KGS
        - KHR
        - KMF
        - KPW
        - KRW
        - KWD
        - KYD
        - KZT
        - LAK
        - LBP
        - LKR
        - LRD
        - LSL
        - LTL
        - LVL
        - LYD
        - MAD
        - MDL
        - MGA
        - MKD
        - MMK
        - MNT
        - MOP
        - MRO
        - MUR
        - MVR
        - MWK
        - MXN
        - MXV
        - MYR
        - MZN
        - NAD
        - NGN
        - NIO
        - NOK
        - NPR
        - NZD
        - OMR
        - PAB
        - PEN
        - PGK
        - PHP
        - PKR
        - PLN
        - PYG
        - QAR
        - RON
        - RSD
        - RUB
        - RWF
        - SAR
        - SBD
        - SCR
        - SDG
        - SEK
        - SGD
        - SHP
        - SLL
        - SOS
        - SRD
        - SSP
        - STD
        - SVC
        - SYP
        - SZL
        - THB
        - TJS
        - TMT
        - TND
        - TOP
        - TRC
        - TRY
        - TTD
        - TWD
        - TZS
        - UAH
        - UGX
        - USD
        - USN
        - USS
        - UYI
        - UYU
        - UZS
        - VEF
        - VND
        - VUV
        - WST
        - XAF
        - XAG
        - XAU
        - XBA
        - XBB
        - XBC
        - XBD
        - XCD
        - XDR
        - XOF
        - XPD
        - XPF
        - XPT
        - XTS
        - XXX
        - YER
        - ZAR
        - ZMK
        - ZMW
        - BTC
      example: USD
      nullable: true
      title: Currency
      type: string
      x-apideck-enum-coverage-ignore: true
      x-apideck-enum-id: currencies
      x-enum-elements:
        - description: Unknown currency
          name: UNKNOWN_CURRENCY
        - description: United Arab Emirates dirham
          name: AED
        - description: Afghan afghani
          name: AFN
        - description: Albanian lek
          name: ALL
        - description: Armenian dram
          name: AMD
        - description: Netherlands Antillean guilder
          name: ANG
        - description: Angolan kwanza
          name: AOA
        - description: Argentine peso
          name: ARS
        - description: Australian dollar
          name: AUD
        - description: Aruban florin
          name: AWG
        - description: Azerbaijani manat
          name: AZN
        - description: Bosnia and Herzegovina convertible mark
          name: BAM
        - description: Barbados dollar
          name: BBD
        - description: Bangladeshi taka
          name: BDT
        - description: Bulgarian lev
          name: BGN
        - description: Bahraini dinar
          name: BHD
        - description: Burundian franc
          name: BIF
        - description: Bermudian dollar
          name: BMD
        - description: Brunei dollar
          name: BND
        - description: Boliviano
          name: BOB
        - description: Bolivian Mvdol
          name: BOV
        - description: Brazilian real
          name: BRL
        - description: Bahamian dollar
          name: BSD
        - description: Bhutanese ngultrum
          name: BTN
        - description: Botswana pula
          name: BWP
        - description: Belarusian ruble
          name: BYR
        - description: Belize dollar
          name: BZD
        - description: Canadian dollar
          name: CAD
        - description: Congolese franc
          name: CDF
        - description: WIR Euro
          name: CHE
        - description: Swiss franc
          name: CHF
        - description: WIR Franc
          name: CHW
        - description: Unidad de Fomento
          name: CLF
        - description: Chilean peso
          name: CLP
        - description: Chinese yuan
          name: CNY
        - description: Colombian peso
          name: COP
        - description: Unidad de Valor Real
          name: COU
        - description: Costa Rican colon
          name: CRC
        - description: Cuban convertible peso
          name: CUC
        - description: Cuban peso
          name: CUP
        - description: Cape Verdean escudo
          name: CVE
        - description: Czech koruna
          name: CZK
        - description: Djiboutian franc
          name: DJF
        - description: Danish krone
          name: DKK
        - description: Dominican peso
          name: DOP
        - description: Algerian dinar
          name: DZD
        - description: Egyptian pound
          name: EGP
        - description: Eritrean nakfa
          name: ERN
        - description: Ethiopian birr
          name: ETB
        - description: Euro
          name: EUR
        - description: Fiji dollar
          name: FJD
        - description: Falkland Islands pound
          name: FKP
        - description: Pound sterling
          name: GBP
        - description: Georgian lari
          name: GEL
        - description: Ghanaian cedi
          name: GHS
        - description: Gibraltar pound
          name: GIP
        - description: Gambian dalasi
          name: GMD
        - description: Guinean franc
          name: GNF
        - description: Guatemalan quetzal
          name: GTQ
        - description: Guyanese dollar
          name: GYD
        - description: Hong Kong dollar
          name: HKD
        - description: Honduran lempira
          name: HNL
        - description: Croatian kuna
          name: HRK
        - description: Haitian gourde
          name: HTG
        - description: Hungarian forint
          name: HUF
        - description: Indonesian rupiah
          name: IDR
        - description: Israeli new shekel
          name: ILS
        - description: Indian rupee
          name: INR
        - description: Iraqi dinar
          name: IQD
        - description: Iranian rial
          name: IRR
        - description: Icelandic króna
          name: ISK
        - description: Jamaican dollar
          name: JMD
        - description: Jordanian dinar
          name: JOD
        - description: Japanese yen
          name: JPY
        - description: Kenyan shilling
          name: KES
        - description: Kyrgyzstani som
          name: KGS
        - description: Cambodian riel
          name: KHR
        - description: Comoro franc
          name: KMF
        - description: North Korean won
          name: KPW
        - description: South Korean won
          name: KRW
        - description: Kuwaiti dinar
          name: KWD
        - description: Cayman Islands dollar
          name: KYD
        - description: Kazakhstani tenge
          name: KZT
        - description: Lao kip
          name: LAK
        - description: Lebanese pound
          name: LBP
        - description: Sri Lankan rupee
          name: LKR
        - description: Liberian dollar
          name: LRD
        - description: Lesotho loti
          name: LSL
        - description: Lithuanian litas
          name: LTL
        - description: Latvian lats
          name: LVL
        - description: Libyan dinar
          name: LYD
        - description: Moroccan dirham
          name: MAD
        - description: Moldovan leu
          name: MDL
        - description: Malagasy ariary
          name: MGA
        - description: Macedonian denar
          name: MKD
        - description: Myanmar kyat
          name: MMK
        - description: Mongolian tögrög
          name: MNT
        - description: Macanese pataca
          name: MOP
        - description: Mauritanian ouguiya
          name: MRO
        - description: Mauritian rupee
          name: MUR
        - description: Maldivian rufiyaa
          name: MVR
        - description: Malawian kwacha
          name: MWK
        - description: Mexican peso
          name: MXN
        - description: Mexican Unidad de Inversion
          name: MXV
        - description: Malaysian ringgit
          name: MYR
        - description: Mozambican metical
          name: MZN
        - description: Namibian dollar
          name: NAD
        - description: Nigerian naira
          name: NGN
        - description: Nicaraguan córdoba
          name: NIO
        - description: Norwegian krone
          name: NOK
        - description: Nepalese rupee
          name: NPR
        - description: New Zealand dollar
          name: NZD
        - description: Omani rial
          name: OMR
        - description: Panamanian balboa
          name: PAB
        - description: Peruvian sol
          name: PEN
        - description: Papua New Guinean kina
          name: PGK
        - description: Philippine peso
          name: PHP
        - description: Pakistani rupee
          name: PKR
        - description: Polish złoty
          name: PLN
        - description: Paraguayan guaraní
          name: PYG
        - description: Qatari riyal
          name: QAR
        - description: Romanian leu
          name: RON
        - description: Serbian dinar
          name: RSD
        - description: Russian ruble
          name: RUB
        - description: Rwandan franc
          name: RWF
        - description: Saudi riyal
          name: SAR
        - description: Solomon Islands dollar
          name: SBD
        - description: Seychelles rupee
          name: SCR
        - description: Sudanese pound
          name: SDG
        - description: Swedish krona
          name: SEK
        - description: Singapore dollar
          name: SGD
        - description: Saint Helena pound
          name: SHP
        - description: Sierra Leonean leone
          name: SLL
        - description: Somali shilling
          name: SOS
        - description: Surinamese dollar
          name: SRD
        - description: South Sudanese pound
          name: SSP
        - description: São Tomé and Príncipe dobra
          name: STD
        - description: Salvadoran colón
          name: SVC
        - description: Syrian pound
          name: SYP
        - description: Swazi lilangeni
          name: SZL
        - description: Thai baht
          name: THB
        - description: Tajikstani somoni
          name: TJS
        - description: Turkmenistan manat
          name: TMT
        - description: Tunisian dinar
          name: TND
        - description: Tongan pa'anga
          name: TOP
        - description: Turkish lira
          name: TRY
        - description: Trinidad and Tobago dollar
          name: TTD
        - description: New Taiwan dollar
          name: TWD
        - description: Tanzanian shilling
          name: TZS
        - description: Ukrainian hryvnia
          name: UAH
        - description: Ugandan shilling
          name: UGX
        - description: United States dollar
          name: USD
        - description: United States dollar (next day)
          name: USN
        - description: United States dollar (same day)
          name: USS
        - description: Uruguay Peso en Unidedades Indexadas
          name: UYI
        - description: Uruguyan peso
          name: UYU
        - description: Uzbekistan som
          name: UZS
        - description: Venezuelan bolívar soberano
          name: VEF
        - description: Vietnamese đồng
          name: VND
        - description: Vanuatu vatu
          name: VUV
        - description: Samoan tala
          name: WST
        - description: CFA franc BEAC
          name: XAF
        - description: Silver
          name: XAG
        - description: Gold
          name: XAU
        - description: European Composite Unit
          name: XBA
        - description: European Monetary Unit
          name: XBB
        - description: European Unit of Account 9
          name: XBC
        - description: European Unit of Account 17
          name: XBD
        - description: East Caribbean dollar
          name: XCD
        - description: Special drawing rights (International Monetary Fund)
          name: XDR
        - description: CFA franc BCEAO
          name: XOF
        - description: Palladium
          name: XPD
        - description: CFP franc
          name: XPF
        - description: Platinum
          name: XPT
        - description: Code reserved for testing
          name: XTS
        - description: No currency
          name: XXX
        - description: Yemeni rial
          name: YER
        - description: South African rand
          name: ZAR
        - description: Zambian kwacha
          name: ZMK
        - description: Zambian kwacha
          name: ZMW
        - description: Bitcoin
          name: BTC
    CustomField:
      additionalProperties: false
      properties:
        description:
          description: More information about the custom field
          example: Employee Level
          title: Description
          type: string
        id:
          example: "2389328923893298"
          title: ID
          type: string
        name:
          description: Name of the custom field.
          example: employee_level
          title: Name
          type: string
        value:
          anyOf:
            - example: Uses Salesforce and Marketo
              nullable: true
              type: string
            - example: 10
              nullable: true
              type: number
            - example: true
              nullable: true
              type: boolean
            - items:
                type: string
              type: array
      required:
        - id
      type: object
      x-apideck-schema-id: CustomField
      x-apideck-weights:
        description: edge-case
        id: critical
        name: medium
        value: critical
    CustomerSupportCustomer:
      additionalProperties: false
      properties:
        addresses:
          items:
            $ref: "#/components/schemas/Address"
          type: array
        bank_accounts:
          $ref: "#/components/schemas/BankAccount"
        company_name:
          $ref: "#/components/schemas/CompanyName"
        created_at:
          example: 2020-09-30T07:43:32.000Z
          format: date-time
          readOnly: true
          title: Created at (timestamp)
          type: string
        created_by:
          example: "12345"
          nullable: true
          readOnly: true
          title: Created by
          type: string
        currency:
          $ref: "#/components/schemas/Currency"
        emails:
          items:
            $ref: "#/components/schemas/Email"
          type: array
        first_name:
          $ref: "#/components/schemas/FirstName"
        id:
          example: "12345"
          readOnly: true
          type: string
        individual:
          example: true
          nullable: true
          title: Is individual
          type: boolean
        last_name:
          $ref: "#/components/schemas/LastName"
        notes:
          example: Some notes about this customer
          nullable: true
          title: Notes
          type: string
        phone_numbers:
          items:
            $ref: "#/components/schemas/PhoneNumber"
          type: array
        status:
          description: Customer status
          enum:
            - active
            - archived
            - gdpr-erasure-request
            - unknown
          example: active
          nullable: true
          title: Status
          type: string
          x-apideck-enum-id: customers.status
          x-graphql-type-name: CustomerStatus
        tax_number:
          example: US123945459
          nullable: true
          title: Tax number
          type: string
        updated_at:
          example: 2020-09-30T07:43:32.000Z
          format: date-time
          readOnly: true
          title: Updated at (timestamp)
          type: string
        updated_by:
          example: "12345"
          nullable: true
          readOnly: true
          type: string
      type: object
      x-apideck-schema-id: CustomerSupportCustomer
      x-apideck-weights:
        id: critical
    DeleteCustomerSupportCustomerResponse:
      properties:
        data:
          $ref: "#/components/schemas/UnifiedId"
        operation:
          description: Operation performed
          example: delete
          type: string
        resource:
          description: Unified API resource name
          example: customers
          type: string
        service:
          description: Apideck ID of service provider
          example: kustomer
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: DeleteCustomerSupportCustomerResponse
    Email:
      additionalProperties: false
      properties:
        email:
          example: elon@musk.com
          format: email
          minLength: 1
          type: string
        id:
          example: "123"
          type: string
        type:
          enum:
            - primary
            - secondary
            - work
            - personal
            - billing
            - other
          example: primary
          type: string
          x-apideck-enum-id: emails.type
          x-graphql-type-name: EmailType
      required:
        - email
      type: object
      x-apideck-schema-id: Email
      x-apideck-weights:
        email: critical
        id: edge-case
        type: critical
    FirstName:
      example: Elon
      nullable: true
      title: First name
      type: string
    GetCustomerSupportCustomerResponse:
      properties:
        data:
          $ref: "#/components/schemas/CustomerSupportCustomer"
        operation:
          description: Operation performed
          example: one
          type: string
        resource:
          description: Unified API resource name
          example: customers
          type: string
        service:
          description: Apideck ID of service provider
          example: kustomer
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: GetCustomerSupportCustomerResponse
      x-graphql-type-name: CustomerSupportCustomer
    GetCustomerSupportCustomersResponse:
      properties:
        data:
          items:
            $ref: "#/components/schemas/CustomerSupportCustomer"
          type: array
        links:
          $ref: "#/components/schemas/Links"
        meta:
          $ref: "#/components/schemas/Meta"
        operation:
          description: Operation performed
          example: all
          type: string
        resource:
          description: Unified API resource name
          example: customers
          type: string
        service:
          description: Apideck ID of service provider
          example: kustomer
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: GetCustomerSupportCustomersResponse
      x-graphql-type-name: CustomerSupportCustomerList
    LastName:
      example: Musk
      nullable: true
      title: Last name
      type: string
    Lead:
      additionalProperties: false
      properties:
        addresses:
          items:
            $ref: "#/components/schemas/Address"
          type: array
        company_id:
          example: "2"
          nullable: true
          type: string
        company_name:
          example: Spacex
          nullable: true
          type: string
        contact_id:
          example: "2"
          nullable: true
          type: string
        created_at:
          example: 2020-09-30T07:43:32.000Z
          readOnly: true
          type: string
        currency:
          $ref: "#/components/schemas/Currency"
        custom_fields:
          items:
            $ref: "#/components/schemas/CustomField"
          type: array
        description:
          example: A thinker
          nullable: true
          type: string
        emails:
          items:
            $ref: "#/components/schemas/Email"
          type: array
        fax:
          example: "+12129876543"
          nullable: true
          type: string
        first_name:
          example: Elon
          nullable: true
          type: string
        id:
          example: "12345"
          readOnly: true
          type: string
        language:
          description: language code according to ISO 639-1. For the United States - EN
          example: EN
          nullable: true
          type: string
        last_name:
          example: Musk
          nullable: true
          type: string
        lead_source:
          example: Cold Call
          nullable: true
          type: string
        monetary_amount:
          example: 75000
          nullable: true
          type: number
        name:
          example: Elon Musk
          minLength: 1
          type: string
        owner_id:
          example: "54321"
          type: string
        phone_numbers:
          items:
            $ref: "#/components/schemas/PhoneNumber"
          type: array
        prefix:
          example: Sir
          nullable: true
          type: string
        social_links:
          items:
            $ref: "#/components/schemas/SocialLink"
          type: array
        status:
          example: New
          nullable: true
          type: string
        tags:
          $ref: "#/components/schemas/Tags"
        title:
          example: CEO
          nullable: true
          type: string
        updated_at:
          example: 2020-09-30T07:43:32.000Z
          readOnly: true
          type: string
        websites:
          items:
            $ref: "#/components/schemas/Website"
          type: array
      required:
        - name
        - company_name
      type: object
      x-apideck-schema-id: Lead
      x-apideck-weights:
        addresses: high
        company_id: high
        company_name: high
        contact_id: low
        created_at: medium
        currency: low
        custom_fields: medium
        description: low
        emails: high
        fax: low
        first_name: high
        id: critical
        language: medium
        last_name: high
        lead_source: low
        monetary_amount: low
        name: critical
        owner_id: high
        phone_numbers: high
        prefix: low
        social_links: low
        status: high
        tags: low
        title: high
        updated_at: medium
        websites: medium
      x-pii:
        - name
        - email
        - first_name
        - last_name
    Links:
      description: Links to navigate to previous or next pages through the API
      properties:
        current:
          description: Link to navigate to the current page through the API
          example: https://unify.apideck.com/crm/companies
          type: string
        next:
          description: Link to navigate to the previous page through the API
          example: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM
          nullable: true
          type: string
        previous:
          description: Link to navigate to the previous page through the API
          example: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D
          nullable: true
          type: string
      type: object
      x-apideck-schema-id: Links
    Meta:
      description: Response metadata
      properties:
        cursors:
          description: Cursors to navigate to previous or next pages through the API
          properties:
            current:
              description: Cursor to navigate to the current page of results through the API
              example: em9oby1jcm06OnBhZ2U6OjI=
              nullable: true
              type: string
            next:
              description: Cursor to navigate to the next page of results through the API
              example: em9oby1jcm06OnBhZ2U6OjM=
              nullable: true
              type: string
            previous:
              description: Cursor to navigate to the previous page of results through the API
              example: em9oby1jcm06OnBhZ2U6OjE=
              nullable: true
              type: string
          type: object
        items_on_page:
          description: Number of items returned in the data property of the response
          example: 50
          type: integer
      type: object
      x-apideck-schema-id: Meta
    NotFoundResponse:
      properties:
        detail:
          anyOf:
            - example: "Could not find widget with id: '123'"
              type: string
            - example:
                not_found:
                  entity: widget
                  id: "123"
              type: object
          description: Contains parameter or domain specific information related to the error and why it occurred.
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Not Found
          type: string
        message:
          description: A human-readable message providing more details about the error.
          example: Unknown Widget
          type: string
        ref:
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#entitynotfounderror
          type: string
        status_code:
          description: HTTP status code
          example: 404
          type: number
        type_name:
          description: The type of error returned
          example: EntityNotFoundError
          type: string
      type: object
      x-apideck-schema-id: NotFound
    NotImplementedResponse:
      properties:
        detail:
          anyOf:
            - example: Failed to retrieve Widget tokenUrl from 'components.securitySchemes.OAuth2.flows'
              type: string
            - type: object
          description: Contains parameter or domain specific information related to the error and why it occurred.
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Not Implemented
          type: string
        message:
          description: A human-readable message providing more details about the error.
          example: Unmapped Attribute
          type: string
        ref:
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#mappingerror
          type: string
        status_code:
          description: HTTP status code
          example: 501
          type: number
        type_name:
          description: The type of error returned
          example: MappingError
          type: string
      type: object
      x-apideck-schema-id: NotImplemented
    Opportunity:
      additionalProperties: false
      properties:
        close_date:
          example: 2020-10-30
          format: date
          nullable: true
          type: string
        company_id:
          example: "12345"
          nullable: true
          type: string
        company_name:
          example: Copper
          nullable: true
          type: string
        contact_id:
          example: "12345"
          nullable: true
          type: string
        created_at:
          example: 2020-09-30T07:43:32.000Z
          format: date-time
          readOnly: true
          type: string
        created_by:
          example: "12345"
          nullable: true
          readOnly: true
          type: string
        currency:
          $ref: "#/components/schemas/Currency"
        custom_fields:
          items:
            $ref: "#/components/schemas/CustomField"
          type: array
        date_last_contacted:
          example: 2020-09-30T00:00:00.000Z
          format: date-time
          nullable: true
          readOnly: true
          type: string
        date_lead_created:
          example: 2020-09-30T00:00:00.000Z
          format: date-time
          nullable: true
          readOnly: true
          type: string
        date_stage_changed:
          example: 2020-09-30T00:00:00.000Z
          format: date-time
          nullable: true
          readOnly: true
          type: string
        deleted:
          example: false
          readOnly: true
          type: boolean
        description:
          example: Opportunities are created for People and Companies that are interested in buying your products or services. Create Opportunities for People and Companies to move them through one of your Pipelines.
          nullable: true
          type: string
        expected_revenue:
          description: Expected Revenue
          example: 75000
          nullable: true
          readOnly: true
          type: number
        id:
          example: "12345"
          readOnly: true
          type: string
        interaction_count:
          example: 0
          nullable: true
          readOnly: true
          type: number
        last_activity_at:
          example: 2020-09-30T07:43:32.000Z
          nullable: true
          readOnly: true
          type: string
        lead_id:
          example: "12345"
          nullable: true
          type: string
        lead_source:
          description: Lead source
          example: Website
          nullable: true
          type: string
        loss_reason:
          example: No budget
          nullable: true
          type: string
        loss_reason_id:
          example: "12345"
          nullable: true
          type: string
        monetary_amount:
          example: 75000
          nullable: true
          type: number
        owner_id:
          example: "12345"
          nullable: true
          type: string
        pipeline_id:
          example: "12345"
          nullable: true
          type: string
        pipeline_stage_id:
          example: "12345"
          nullable: true
          type: string
        primary_contact_id:
          example: "12345"
          nullable: true
          type: string
        priority:
          example: None
          nullable: true
          type: string
        source_id:
          example: "12345"
          nullable: true
          type: string
        stage_last_changed_at:
          example: 2020-09-30T07:43:32.000Z
          format: date-time
          nullable: true
          type: string
        status:
          example: Open
          nullable: true
          type: string
        status_id:
          example: "12345"
          nullable: true
          type: string
        tags:
          $ref: "#/components/schemas/Tags"
        title:
          example: New Rocket
          minLength: 1
          type: string
        type:
          example: Existing Customer - Upgrade
          nullable: true
          type: string
        updated_at:
          example: 2020-09-30T07:43:32.000Z
          format: date-time
          readOnly: true
          type: string
        updated_by:
          example: "12345"
          nullable: true
          readOnly: true
          type: string
        win_probability:
          example: 40
          nullable: true
          type: number
        won_reason:
          example: Best pitch
          nullable: true
          type: string
        won_reason_id:
          example: "12345"
          nullable: true
          type: string
      required:
        - title
        - primary_contact_id
      type: object
      x-apideck-schema-id: Opportunity
      x-apideck-weights:
        close_date: medium
        company_id: high
        company_name: medium
        contact_id: medium
        created_at: medium
        created_by: edge-case
        currency: high
        custom_fields: medium
        date_last_contacted: medium
        date_lead_created: edge-case
        date_stage_changed: edge-case
        deleted: low
        description: medium
        expected_revenue: medium
        id: critical
        interaction_count: low
        last_activity_at: medium
        lead_id: medium
        lead_source: edge-case
        loss_reason: edge-case
        loss_reason_id: edge-case
        monetary_amount: high
        owner_id: high
        pipeline_id: edge-case
        pipeline_stage_id: edge-case
        primary_contact_id: critical
        priority: medium
        source_id: medium
        stage_last_changed_at: edge-case
        status: high
        status_id: edge-case
        tags: low
        title: critical
        type: high
        updated_at: medium
        updated_by: edge-case
        win_probability: high
        won_reason: edge-case
        won_reason_id: edge-case
    PaymentRequiredResponse:
      properties:
        detail:
          description: Contains parameter or domain specific information related to the error and why it occurred.
          example: You have reached your limit of 2000
          type: string
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Payment Required
          type: string
        message:
          description: A human-readable message providing more details about the error.
          example: Request Limit Reached
          type: string
        ref:
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#requestlimiterror
          type: string
        status_code:
          description: HTTP status code
          example: 402
          type: number
        type_name:
          description: The type of error returned
          example: RequestLimitError
          type: string
      type: object
      x-apideck-schema-id: PaymentRequired
    PhoneNumber:
      additionalProperties: false
      properties:
        area_code:
          example: "323"
          nullable: true
          title: Area code
          type: string
        country_code:
          example: "1"
          nullable: true
          title: Country code
          type: string
        extension:
          example: "105"
          nullable: true
          title: Phone extension
          type: string
        id:
          example: "12345"
          nullable: true
          type: string
        number:
          example: 111-111-1111
          minLength: 1
          title: Phone number
          type: string
        type:
          enum:
            - primary
            - secondary
            - home
            - work
            - office
            - mobile
            - assistant
            - fax
            - direct-dial-in
            - personal
            - other
          example: primary
          type: string
          x-apideck-enum-id: phone_numbers.type
          x-graphql-type-name: PhoneType
      required:
        - number
      type: object
      x-apideck-schema-id: PhoneNumber
      x-apideck-weights:
        area_code: edge-case
        country_code: edge-case
        extension: edge-case
        id: edge-case
        number: critical
        type: critical
    RowVersion:
      example: 1-12345
      nullable: true
      title: Row version
      type: string
    SocialLink:
      additionalProperties: false
      properties:
        id:
          example: "12345"
          nullable: true
          type: string
        type:
          example: twitter
          nullable: true
          type: string
        url:
          example: https://www.twitter.com/apideck-io
          minLength: 1
          type: string
      required:
        - url
      type: object
      x-apideck-schema-id: SocialLink
      x-apideck-weights:
        id: edge-case
        type: critical
        url: critical
    Tags:
      example:
        - New
      items:
        type: string
      type: array
      x-apideck-schema-id: Tags
    TooManyRequestsResponse:
      properties:
        detail:
          properties:
            context:
              type: string
            error:
              additionalProperties: true
              type: object
          type: object
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 6585)
          example: Too Many Requests
          type: string
        message:
          description: A human-readable message providing more details about the error.
          example: Connector Rate Limit Error
          type: string
        ref:
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#connectorratelimiterror
          type: string
        status_code:
          description: HTTP status code
          example: 429
          type: number
        type_name:
          description: The type of error returned
          example: ConnectorRateLimitError
          type: string
      type: object
      x-apideck-schema-id: TooManyRequests
    UnauthorizedResponse:
      properties:
        detail:
          description: Contains parameter or domain specific information related to the error and why it occurred.
          example: Failed to generate valid JWT Session. Verify applicationId is correct
          type: string
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Unauthorized
          type: string
        message:
          description: A human-readable message providing more details about the error.
          example: Unauthorized Request
          type: string
        ref:
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#unauthorizederror
          type: string
        status_code:
          description: HTTP status code
          example: 401
          type: number
        type_name:
          description: The type of error returned
          example: UnauthorizedError
          type: string
      type: object
      x-apideck-schema-id: Unauthorized
    UnexpectedErrorResponse:
      properties:
        detail:
          anyOf:
            - example: "Missing Header: x-apideck-consumer-id"
              type: string
            - example:
                missing:
                  - x-apideck-consumer-id: required
              type: object
          description: Contains parameter or domain specific information related to the error and why it occurred.
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Bad Request
          type: string
        message:
          description: A human-readable message providing more details about the error.
          example: Invalid Params
          type: string
        ref:
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#unauthorizederror
          type: string
        status_code:
          description: HTTP status code
          example: 400
          type: number
        type_name:
          description: The type of error returned
          example: RequestHeadersValidationError
          type: string
      type: object
      x-apideck-schema-id: Error
    UnifiedId:
      properties:
        id:
          example: "12345"
          readOnly: true
          type: string
      required:
        - id
      title: UnifiedId
      type: object
      x-apideck-schema-id: Id
    UnprocessableResponse:
      properties:
        detail:
          description: Contains parameter or domain specific information related to the error and why it occurred.
          example: Unprocessable request, please verify your request headers and body.
          type: string
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Unprocessable Entity
          type: string
        message:
          description: A human-readable message providing more details about the error.
          example: Invalid State
          type: string
        ref:
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#invalidstateerror
          type: string
        status_code:
          description: HTTP status code
          example: 422
          type: number
        type_name:
          description: The type of error returned
          example: InvalidStateError
          type: string
      type: object
      x-apideck-schema-id: Unprocessable
    UpdateCustomerSupportCustomerResponse:
      properties:
        data:
          $ref: "#/components/schemas/UnifiedId"
        operation:
          description: Operation performed
          example: update
          type: string
        resource:
          description: Unified API resource name
          example: customers
          type: string
        service:
          description: Apideck ID of service provider
          example: kustomer
          type: string
        status:
          description: HTTP Response Status
          example: OK
          type: string
        status_code:
          description: HTTP Response Status Code
          example: 200
          type: integer
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      type: object
      x-apideck-schema-id: UpdateCustomerSupportCustomerResponse
    Website:
      additionalProperties: false
      properties:
        id:
          example: "12345"
          nullable: true
          type: string
        type:
          enum:
            - primary
            - secondary
            - work
            - personal
            - other
          example: primary
          type: string
          x-apideck-enum-id: websites.type
          x-graphql-type-name: WebsiteType
        url:
          example: http://example.com
          minLength: 1
          type: string
      required:
        - url
      type: object
      x-apideck-schema-id: Website
      x-apideck-weights:
        id: edge-case
        type: critical
        url: critical
  securitySchemes:
    apiKey:
      description: |
        To use API you have to sign up and get your own API key. Unify API accounts have sandbox mode and live mode API keys. 
        To change modes just use the appropriate key to get a live or test object. You can find your API keys on the unify settings of your Apideck app.
        Your Apideck application_id can also be found on the same page.

        Authenticate your API requests by including your test or live secret API key in the request header. 

        - Bearer authorization header: `Authorization: Bearer <your-apideck-api-key>`
        - Application id header: `x-apideck-app-id: <your-apideck-app-id>`

        You should use the public keys on the SDKs and the secret keys to authenticate API requests.

        **Do not share or include your secret API keys on client side code.** Your API keys carry significant privileges. Please ensure to keep them 100% secure and be sure to not share your secret API keys in areas that are publicly accessible like GitHub.

        Learn how to set the Authorization header inside Postman https://learning.postman.com/docs/postman/sending-api-requests/authorization/#api-key

        Go to Unify to grab your API KEY https://app.apideck.com/unify/api-keys
      in: header
      name: Authorization
      type: apiKey
