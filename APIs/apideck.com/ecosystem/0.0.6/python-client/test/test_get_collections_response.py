# coding: utf-8

"""
    Ecosystem API

    Ecosystem API

    The version of the OpenAPI document: 0.0.6
    Contact: hello@apideck.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_collections_response import GetCollectionsResponse

class TestGetCollectionsResponse(unittest.TestCase):
    """GetCollectionsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetCollectionsResponse:
        """Test GetCollectionsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetCollectionsResponse`
        """
        model = GetCollectionsResponse()
        if include_optional:
            return GetCollectionsResponse(
                data = [
                    openapi_client.models.collection.Collection(
                        card_background_color = '', 
                        card_background_image = openapi_client.models.file.File(
                            content_type = 'application/jpeg', 
                            created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            id = '12345', 
                            type = 'LOGO', 
                            updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            url = '', ), 
                        card_columns = 56, 
                        card_style = '', 
                        count = 1, 
                        description = '', 
                        hidden_from_homepage = True, 
                        id = '', 
                        logo = openapi_client.models.file.File(
                            content_type = 'application/jpeg', 
                            created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            id = '12345', 
                            type = 'LOGO', 
                            updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            url = '', ), 
                        name = '', 
                        sequence = 56, 
                        show_max_items_homepage = 56, 
                        slug = '', 
                        translations = [
                            openapi_client.models.translation.Translation(
                                key = '', 
                                locale = '', 
                                value = '', )
                            ], 
                        visible = True, )
                    ],
                status = 'OK',
                status_code = 200
            )
        else:
            return GetCollectionsResponse(
                data = [
                    openapi_client.models.collection.Collection(
                        card_background_color = '', 
                        card_background_image = openapi_client.models.file.File(
                            content_type = 'application/jpeg', 
                            created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            id = '12345', 
                            type = 'LOGO', 
                            updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            url = '', ), 
                        card_columns = 56, 
                        card_style = '', 
                        count = 1, 
                        description = '', 
                        hidden_from_homepage = True, 
                        id = '', 
                        logo = openapi_client.models.file.File(
                            content_type = 'application/jpeg', 
                            created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            id = '12345', 
                            type = 'LOGO', 
                            updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            url = '', ), 
                        name = '', 
                        sequence = 56, 
                        show_max_items_homepage = 56, 
                        slug = '', 
                        translations = [
                            openapi_client.models.translation.Translation(
                                key = '', 
                                locale = '', 
                                value = '', )
                            ], 
                        visible = True, )
                    ],
                status = 'OK',
                status_code = 200,
        )
        """

    def testGetCollectionsResponse(self):
        """Test GetCollectionsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
