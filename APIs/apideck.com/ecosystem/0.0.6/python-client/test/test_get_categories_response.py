# coding: utf-8

"""
    Ecosystem API

    Ecosystem API

    The version of the OpenAPI document: 0.0.6
    Contact: hello@apideck.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_categories_response import GetCategoriesResponse

class TestGetCategoriesResponse(unittest.TestCase):
    """GetCategoriesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetCategoriesResponse:
        """Test GetCategoriesResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetCategoriesResponse`
        """
        model = GetCategoriesResponse()
        if include_optional:
            return GetCategoriesResponse(
                data = [
                    openapi_client.models.category.Category(
                        count = 1, 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        description = '', 
                        id = '', 
                        listing_description_text_template = '', 
                        listing_features_text_template = '', 
                        listing_pricing_text_template = '', 
                        logo = openapi_client.models.logo.Logo(
                            content_type = '', 
                            id = '', 
                            type = 'LOGO', 
                            url = '', ), 
                        name = '', 
                        slug = '', 
                        translations = [
                            openapi_client.models.translation.Translation(
                                key = '', 
                                locale = '', 
                                value = '', )
                            ], 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                links = openapi_client.models.links.Links(
                    current = 'https://api.apideck.com/ecosystem/123abc/listings', 
                    next = 'https://api.apideck.com/ecosystem/123abc/listings?cursor=em9oby1jcm06OnBhZ2U6OjM', 
                    previous = 'https://api.apideck.com/ecosystem/123abc/listings?cursor=em9oby1jcm06OnBhZ2U6OjE%3D', ),
                meta = openapi_client.models.meta.Meta(
                    cursors = openapi_client.models.meta_cursors.Meta_cursors(
                        current = 'em9oby1jcm06OnBhZ2U6OjI=', 
                        next = 'em9oby1jcm06OnBhZ2U6OjM=', 
                        previous = 'em9oby1jcm06OnBhZ2U6OjE=', ), 
                    items_on_page = 50, ),
                status = 'OK',
                status_code = 200
            )
        else:
            return GetCategoriesResponse(
                data = [
                    openapi_client.models.category.Category(
                        count = 1, 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        description = '', 
                        id = '', 
                        listing_description_text_template = '', 
                        listing_features_text_template = '', 
                        listing_pricing_text_template = '', 
                        logo = openapi_client.models.logo.Logo(
                            content_type = '', 
                            id = '', 
                            type = 'LOGO', 
                            url = '', ), 
                        name = '', 
                        slug = '', 
                        translations = [
                            openapi_client.models.translation.Translation(
                                key = '', 
                                locale = '', 
                                value = '', )
                            ], 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                status = 'OK',
                status_code = 200,
        )
        """

    def testGetCategoriesResponse(self):
        """Test GetCategoriesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
