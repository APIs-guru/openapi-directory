# coding: utf-8

"""
    Ecosystem API

    Ecosystem API

    The version of the OpenAPI document: 0.0.6
    Contact: hello@apideck.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_listings_response import GetListingsResponse

class TestGetListingsResponse(unittest.TestCase):
    """GetListingsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetListingsResponse:
        """Test GetListingsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetListingsResponse`
        """
        model = GetListingsResponse()
        if include_optional:
            return GetListingsResponse(
                data = [
                    openapi_client.models.listing.Listing(
                        automate_id = '', 
                        blendr_id = '', 
                        card_background_color = '', 
                        card_background_image = openapi_client.models.file.File(
                            content_type = 'application/jpeg', 
                            created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            id = '12345', 
                            type = 'LOGO', 
                            updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            url = '', ), 
                        categories = [
                            openapi_client.models.category.Category(
                                count = 1, 
                                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                description = '', 
                                id = '', 
                                listing_description_text_template = '', 
                                listing_features_text_template = '', 
                                listing_pricing_text_template = '', 
                                logo = openapi_client.models.logo.Logo(
                                    content_type = '', 
                                    id = '', 
                                    type = 'LOGO', 
                                    url = '', ), 
                                name = '', 
                                slug = '', 
                                translations = [
                                    openapi_client.models.translation.Translation(
                                        key = '', 
                                        locale = '', 
                                        value = '', )
                                    ], 
                                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                            ], 
                        cloud_service_id = '', 
                        collections = [
                            openapi_client.models.collection.Collection(
                                card_background_color = '', 
                                card_columns = 56, 
                                card_style = '', 
                                count = 1, 
                                description = '', 
                                hidden_from_homepage = True, 
                                id = '', 
                                name = '', 
                                sequence = 56, 
                                show_max_items_homepage = 56, 
                                slug = '', 
                                visible = True, )
                            ], 
                        combidesk_id = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        description = '', 
                        detail_page_disabled = True, 
                        external_id = '12345', 
                        features = '', 
                        id = '12345', 
                        integromat_id = '', 
                        logo = openapi_client.models.logo.Logo(
                            content_type = '', 
                            id = '', 
                            type = 'LOGO', 
                            url = '', ), 
                        media = [
                            openapi_client.models.media.Media(
                                caption = 'Media', 
                                id = '12345', 
                                sequence = 1, 
                                type = 'SCREENSHOT', 
                                url = '', )
                            ], 
                        meta_tag_description = '', 
                        meta_tag_keywords = '', 
                        meta_tag_title = '', 
                        microsoft_flow_id = '', 
                        name = '', 
                        native_integration = True, 
                        native_integration_link = '', 
                        partner = openapi_client.models.partner.Partner(
                            company = '', 
                            contacts = [
                                openapi_client.models.contact.Contact(
                                    email = '', 
                                    first_name = '', 
                                    id = '12345', 
                                    last_name = '', 
                                    linked_in = '', 
                                    name = '', 
                                    role = '', 
                                    twitter = '', )
                                ], 
                            created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            icon = openapi_client.models.file.File(
                                content_type = 'application/jpeg', 
                                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                id = '12345', 
                                type = 'LOGO', 
                                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                url = '', ), 
                            id = '12345', 
                            listed = '', 
                            twitter = '', 
                            updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            website = '', ), 
                        piesync_id = '', 
                        pricing = '', 
                        products = [
                            openapi_client.models.product.Product(
                                count = 1, 
                                description = '', 
                                id = '12345', 
                                name = '', 
                                sequence = 1, 
                                slug = '', 
                                visible = True, )
                            ], 
                        published = True, 
                        published_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        screenshots = [
                            openapi_client.models.screenshot.Screenshot(
                                caption = 'Screenshot', 
                                file = , 
                                id = '12345', )
                            ], 
                        segment_id = '', 
                        slug = '', 
                        sticky = True, 
                        tag_line = '', 
                        third_party_integration = True, 
                        third_party_integration_link = '', 
                        translations = [
                            openapi_client.models.translation.Translation(
                                key = '', 
                                locale = '', 
                                value = '', )
                            ], 
                        tray_io_id = '', 
                        unify_connector_id = '', 
                        upcoming = True, 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        zapier_id = '', )
                    ],
                links = openapi_client.models.links.Links(
                    current = 'https://api.apideck.com/ecosystem/123abc/listings', 
                    next = 'https://api.apideck.com/ecosystem/123abc/listings?cursor=em9oby1jcm06OnBhZ2U6OjM', 
                    previous = 'https://api.apideck.com/ecosystem/123abc/listings?cursor=em9oby1jcm06OnBhZ2U6OjE%3D', ),
                meta = openapi_client.models.meta.Meta(
                    cursors = openapi_client.models.meta_cursors.Meta_cursors(
                        current = 'em9oby1jcm06OnBhZ2U6OjI=', 
                        next = 'em9oby1jcm06OnBhZ2U6OjM=', 
                        previous = 'em9oby1jcm06OnBhZ2U6OjE=', ), 
                    items_on_page = 50, ),
                status = 'OK',
                status_code = 200
            )
        else:
            return GetListingsResponse(
                data = [
                    openapi_client.models.listing.Listing(
                        automate_id = '', 
                        blendr_id = '', 
                        card_background_color = '', 
                        card_background_image = openapi_client.models.file.File(
                            content_type = 'application/jpeg', 
                            created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            id = '12345', 
                            type = 'LOGO', 
                            updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            url = '', ), 
                        categories = [
                            openapi_client.models.category.Category(
                                count = 1, 
                                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                description = '', 
                                id = '', 
                                listing_description_text_template = '', 
                                listing_features_text_template = '', 
                                listing_pricing_text_template = '', 
                                logo = openapi_client.models.logo.Logo(
                                    content_type = '', 
                                    id = '', 
                                    type = 'LOGO', 
                                    url = '', ), 
                                name = '', 
                                slug = '', 
                                translations = [
                                    openapi_client.models.translation.Translation(
                                        key = '', 
                                        locale = '', 
                                        value = '', )
                                    ], 
                                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                            ], 
                        cloud_service_id = '', 
                        collections = [
                            openapi_client.models.collection.Collection(
                                card_background_color = '', 
                                card_columns = 56, 
                                card_style = '', 
                                count = 1, 
                                description = '', 
                                hidden_from_homepage = True, 
                                id = '', 
                                name = '', 
                                sequence = 56, 
                                show_max_items_homepage = 56, 
                                slug = '', 
                                visible = True, )
                            ], 
                        combidesk_id = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        description = '', 
                        detail_page_disabled = True, 
                        external_id = '12345', 
                        features = '', 
                        id = '12345', 
                        integromat_id = '', 
                        logo = openapi_client.models.logo.Logo(
                            content_type = '', 
                            id = '', 
                            type = 'LOGO', 
                            url = '', ), 
                        media = [
                            openapi_client.models.media.Media(
                                caption = 'Media', 
                                id = '12345', 
                                sequence = 1, 
                                type = 'SCREENSHOT', 
                                url = '', )
                            ], 
                        meta_tag_description = '', 
                        meta_tag_keywords = '', 
                        meta_tag_title = '', 
                        microsoft_flow_id = '', 
                        name = '', 
                        native_integration = True, 
                        native_integration_link = '', 
                        partner = openapi_client.models.partner.Partner(
                            company = '', 
                            contacts = [
                                openapi_client.models.contact.Contact(
                                    email = '', 
                                    first_name = '', 
                                    id = '12345', 
                                    last_name = '', 
                                    linked_in = '', 
                                    name = '', 
                                    role = '', 
                                    twitter = '', )
                                ], 
                            created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            icon = openapi_client.models.file.File(
                                content_type = 'application/jpeg', 
                                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                id = '12345', 
                                type = 'LOGO', 
                                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                url = '', ), 
                            id = '12345', 
                            listed = '', 
                            twitter = '', 
                            updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            website = '', ), 
                        piesync_id = '', 
                        pricing = '', 
                        products = [
                            openapi_client.models.product.Product(
                                count = 1, 
                                description = '', 
                                id = '12345', 
                                name = '', 
                                sequence = 1, 
                                slug = '', 
                                visible = True, )
                            ], 
                        published = True, 
                        published_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        screenshots = [
                            openapi_client.models.screenshot.Screenshot(
                                caption = 'Screenshot', 
                                file = , 
                                id = '12345', )
                            ], 
                        segment_id = '', 
                        slug = '', 
                        sticky = True, 
                        tag_line = '', 
                        third_party_integration = True, 
                        third_party_integration_link = '', 
                        translations = [
                            openapi_client.models.translation.Translation(
                                key = '', 
                                locale = '', 
                                value = '', )
                            ], 
                        tray_io_id = '', 
                        unify_connector_id = '', 
                        upcoming = True, 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        zapier_id = '', )
                    ],
                status = 'OK',
                status_code = 200,
        )
        """

    def testGetListingsResponse(self):
        """Test GetListingsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
