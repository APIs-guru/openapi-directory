# coding: utf-8

"""
    Growth Services

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.forecast_response import ForecastResponse

class TestForecastResponse(unittest.TestCase):
    """ForecastResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ForecastResponse:
        """Test ForecastResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ForecastResponse`
        """
        model = ForecastResponse()
        if include_optional:
            return ForecastResponse(
                hyperparameters = openapi_client.models.forecast_hyperparameter_response.ForecastHyperparameterResponse(
                    discard_data = False, 
                    error_type = 'MeanAbsolutePercentageError', 
                    hold_out_period = 4, 
                    no_fcst = 18, 
                    periodicity = 12, ),
                time_series = [
                    openapi_client.models.time_series_forecast_response.TimeSeriesForecastResponse(
                        error = 1.337, 
                        forecast_data = [
                            openapi_client.models.planning_level_forecast_result_data.PlanningLevelForecastResultData(
                                date = '', 
                                value = 1.337, )
                            ], 
                        method = '', 
                        time_series_id = '', )
                    ]
            )
        else:
            return ForecastResponse(
        )
        """

    def testForecastResponse(self):
        """Test ForecastResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
