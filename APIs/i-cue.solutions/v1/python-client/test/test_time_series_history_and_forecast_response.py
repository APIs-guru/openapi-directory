# coding: utf-8

"""
    Growth Services

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.time_series_history_and_forecast_response import TimeSeriesHistoryAndForecastResponse

class TestTimeSeriesHistoryAndForecastResponse(unittest.TestCase):
    """TimeSeriesHistoryAndForecastResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TimeSeriesHistoryAndForecastResponse:
        """Test TimeSeriesHistoryAndForecastResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TimeSeriesHistoryAndForecastResponse`
        """
        model = TimeSeriesHistoryAndForecastResponse()
        if include_optional:
            return TimeSeriesHistoryAndForecastResponse(
                error = 1.337,
                forecast_data = [
                    openapi_client.models.planning_level_forecast_result_data.PlanningLevelForecastResultData(
                        date = '', 
                        value = 1.337, )
                    ],
                history_data = [
                    openapi_client.models.planning_level_forecast_result_data.PlanningLevelForecastResultData(
                        date = '', 
                        value = 1.337, )
                    ],
                method = '',
                time_series_id = ''
            )
        else:
            return TimeSeriesHistoryAndForecastResponse(
        )
        """

    def testTimeSeriesHistoryAndForecastResponse(self):
        """Test TimeSeriesHistoryAndForecastResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
