# coding: utf-8

"""
    Growth Services

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.insight_driven_planning_forecast_optimization_api import InsightDrivenPlanningForecastOptimizationApi


class TestInsightDrivenPlanningForecastOptimizationApi(unittest.TestCase):
    """InsightDrivenPlanningForecastOptimizationApi unit test stubs"""

    def setUp(self) -> None:
        self.api = InsightDrivenPlanningForecastOptimizationApi()

    def tearDown(self) -> None:
        pass

    def test_forecast_ai_history_and_forecast_post(self) -> None:
        """Test case for forecast_ai_history_and_forecast_post

        History and forecast utilizing advanced machine learning models
        """
        pass

    def test_forecast_ai_post(self) -> None:
        """Test case for forecast_ai_post

        Forecast utilizing advanced machine learning models
        """
        pass

    def test_forecast_file_to_forecast_post(self) -> None:
        """Test case for forecast_file_to_forecast_post

        Forecast from file
        """
        pass

    def test_forecast_forecast_bottom_up_post(self) -> None:
        """Test case for forecast_forecast_bottom_up_post

        Bottom up forecasting
        """
        pass

    def test_forecast_forecast_top_down_post(self) -> None:
        """Test case for forecast_forecast_top_down_post

        Top down forecasting
        """
        pass

    def test_forecast_full_detail_post(self) -> None:
        """Test case for forecast_full_detail_post

        Full forecast result details, including error, trend seasonality and outlier
        """
        pass

    def test_forecast_history_and_forecast_post(self) -> None:
        """Test case for forecast_history_and_forecast_post

        History and forecast for fast timeseries view
        """
        pass

    def test_forecast_optimal_parameter_post(self) -> None:
        """Test case for forecast_optimal_parameter_post

        Get optimal parameter per method
        """
        pass

    def test_forecast_post(self) -> None:
        """Test case for forecast_post

        Forecasts only, for faster results
        """
        pass

    def test_forecast_rerun_post(self) -> None:
        """Test case for forecast_rerun_post

        Rerun previously uploaded planning level
        """
        pass

    def test_forecast_result_job_id_get(self) -> None:
        """Test case for forecast_result_job_id_get

        Forecast result
        """
        pass

    def test_forecast_status_job_id_get(self) -> None:
        """Test case for forecast_status_job_id_get

        Forecast status
        """
        pass

    def test_outlier_post(self) -> None:
        """Test case for outlier_post

        Get outlier
        """
        pass


if __name__ == '__main__':
    unittest.main()
