# coding: utf-8

"""
    Influx OSS API Service

    # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.template_summary_label import TemplateSummaryLabel

class TestTemplateSummaryLabel(unittest.TestCase):
    """TemplateSummaryLabel unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TemplateSummaryLabel:
        """Test TemplateSummaryLabel
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TemplateSummaryLabel`
        """
        model = TemplateSummaryLabel()
        if include_optional:
            return TemplateSummaryLabel(
                env_references = [
                    openapi_client.models.template_env_references_inner.TemplateEnvReferences_inner(
                        default_value = null, 
                        env_ref_key = '', 
                        resource_field = '', 
                        value = null, )
                    ],
                id = '',
                kind = 'Bucket',
                name = '',
                org_id = '',
                properties = openapi_client.models.template_summary_label_properties.TemplateSummaryLabel_properties(
                    color = '', 
                    description = '', ),
                template_meta_name = ''
            )
        else:
            return TemplateSummaryLabel(
        )
        """

    def testTemplateSummaryLabel(self):
        """Test TemplateSummaryLabel"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
