# coding: utf-8

"""
    Influx OSS API Service

    # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.view_properties import ViewProperties

class TestViewProperties(unittest.TestCase):
    """ViewProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ViewProperties:
        """Test ViewProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ViewProperties`
        """
        model = ViewProperties()
        if include_optional:
            return ViewProperties(
                axes = openapi_client.models.axes.Axes(
                    x = openapi_client.models.axis.Axis(
                        base = '', 
                        bounds = [
                            ''
                            ], 
                        label = '', 
                        prefix = '', 
                        scale = 'log', 
                        suffix = '', ), 
                    y = openapi_client.models.axis.Axis(
                        base = '', 
                        label = '', 
                        prefix = '', 
                        suffix = '', ), ),
                colors = [
                    openapi_client.models.dashboard_color.DashboardColor(
                        hex = '0123456', 
                        id = '', 
                        name = '', 
                        type = 'min', 
                        value = 1.337, )
                    ],
                decimal_places = openapi_client.models.decimal_places.DecimalPlaces(
                    digits = 56, 
                    is_enforced = True, ),
                generate_x_axis_ticks = [
                    ''
                    ],
                generate_y_axis_ticks = [
                    ''
                    ],
                hover_dimension = 'auto',
                legend_colorize_rows = True,
                legend_hide = True,
                legend_opacity = 1.337,
                legend_orientation_threshold = 56,
                note = '',
                position = 'overlaid',
                prefix = '',
                queries = [
                    openapi_client.models.dashboard_query.DashboardQuery(
                        builder_config = openapi_client.models.builder_config.BuilderConfig(
                            aggregate_window = openapi_client.models.builder_config_aggregate_window.BuilderConfig_aggregateWindow(
                                fill_values = True, 
                                period = '', ), 
                            buckets = [
                                ''
                                ], 
                            functions = [
                                openapi_client.models.builder_functions_type.BuilderFunctionsType(
                                    name = '', )
                                ], 
                            tags = [
                                openapi_client.models.builder_tags_type.BuilderTagsType(
                                    aggregate_function_type = 'filter', 
                                    key = '', 
                                    values = [
                                        ''
                                        ], )
                                ], ), 
                        edit_mode = 'builder', 
                        name = '', 
                        text = '', )
                    ],
                shade_below = True,
                shape = 'chronograf-v2',
                show_note_when_empty = True,
                static_legend = openapi_client.models.static_legend.StaticLegend(
                    colorize_rows = True, 
                    height_ratio = 1.337, 
                    hide = True, 
                    opacity = 1.337, 
                    orientation_threshold = 56, 
                    value_axis = '', 
                    width_ratio = 1.337, ),
                suffix = '',
                time_format = '',
                type = 'line-plus-single-stat',
                x_column = '',
                x_tick_start = 1.337,
                x_tick_step = 1.337,
                x_total_ticks = 56,
                y_column = '',
                y_tick_start = 1.337,
                y_tick_step = 1.337,
                y_total_ticks = 56,
                geom = 'line',
                tick_prefix = '',
                tick_suffix = '',
                bin_count = 56,
                fill_columns = [
                    ''
                    ],
                x_axis_label = '',
                x_domain = [
                    1.337
                    ],
                field_options = [
                    openapi_client.models.renamable_field.RenamableField(
                        display_name = '', 
                        internal_name = '', 
                        visible = True, )
                    ],
                table_options = openapi_client.models.table_view_properties_table_options.TableViewProperties_tableOptions(
                    fix_first_column = True, 
                    sort_by = openapi_client.models.renamable_field.RenamableField(
                        display_name = '', 
                        internal_name = '', 
                        visible = True, ), 
                    vertical_time_axis = True, 
                    wrapping = 'truncate', ),
                check = None,
                check_id = '',
                symbol_columns = [
                    ''
                    ],
                x_prefix = '',
                x_suffix = '',
                y_axis_label = '',
                y_domain = [
                    1.337
                    ],
                y_prefix = '',
                y_suffix = '',
                bin_size = 1.337,
                y_label_column_separator = '',
                y_label_columns = [
                    ''
                    ],
                y_series_columns = [
                    ''
                    ],
                lower_column = '',
                main_column = '',
                upper_column = '',
                allow_pan_and_zoom = True,
                center = openapi_client.models.geo_view_properties_center.GeoViewProperties_center(
                    lat = 1.337, 
                    lon = 1.337, ),
                detect_coordinate_fields = True,
                layers = [
                    openapi_client.models.geo_view_layer.GeoViewLayer()
                    ],
                map_style = '',
                zoom = 1
            )
        else:
            return ViewProperties(
                axes = openapi_client.models.axes.Axes(
                    x = openapi_client.models.axis.Axis(
                        base = '', 
                        bounds = [
                            ''
                            ], 
                        label = '', 
                        prefix = '', 
                        scale = 'log', 
                        suffix = '', ), 
                    y = openapi_client.models.axis.Axis(
                        base = '', 
                        label = '', 
                        prefix = '', 
                        suffix = '', ), ),
                colors = [
                    openapi_client.models.dashboard_color.DashboardColor(
                        hex = '0123456', 
                        id = '', 
                        name = '', 
                        type = 'min', 
                        value = 1.337, )
                    ],
                decimal_places = openapi_client.models.decimal_places.DecimalPlaces(
                    digits = 56, 
                    is_enforced = True, ),
                note = '',
                position = 'overlaid',
                prefix = '',
                queries = [
                    openapi_client.models.dashboard_query.DashboardQuery(
                        builder_config = openapi_client.models.builder_config.BuilderConfig(
                            aggregate_window = openapi_client.models.builder_config_aggregate_window.BuilderConfig_aggregateWindow(
                                fill_values = True, 
                                period = '', ), 
                            buckets = [
                                ''
                                ], 
                            functions = [
                                openapi_client.models.builder_functions_type.BuilderFunctionsType(
                                    name = '', )
                                ], 
                            tags = [
                                openapi_client.models.builder_tags_type.BuilderTagsType(
                                    aggregate_function_type = 'filter', 
                                    key = '', 
                                    values = [
                                        ''
                                        ], )
                                ], ), 
                        edit_mode = 'builder', 
                        name = '', 
                        text = '', )
                    ],
                shape = 'chronograf-v2',
                show_note_when_empty = True,
                suffix = '',
                time_format = '',
                type = 'line-plus-single-stat',
                x_column = '',
                y_column = '',
                geom = 'line',
                tick_prefix = '',
                tick_suffix = '',
                bin_count = 56,
                fill_columns = [
                    ''
                    ],
                x_axis_label = '',
                x_domain = [
                    1.337
                    ],
                field_options = [
                    openapi_client.models.renamable_field.RenamableField(
                        display_name = '', 
                        internal_name = '', 
                        visible = True, )
                    ],
                table_options = openapi_client.models.table_view_properties_table_options.TableViewProperties_tableOptions(
                    fix_first_column = True, 
                    sort_by = openapi_client.models.renamable_field.RenamableField(
                        display_name = '', 
                        internal_name = '', 
                        visible = True, ), 
                    vertical_time_axis = True, 
                    wrapping = 'truncate', ),
                check_id = '',
                symbol_columns = [
                    ''
                    ],
                x_prefix = '',
                x_suffix = '',
                y_axis_label = '',
                y_domain = [
                    1.337
                    ],
                y_prefix = '',
                y_suffix = '',
                bin_size = 1.337,
                y_series_columns = [
                    ''
                    ],
                allow_pan_and_zoom = True,
                center = openapi_client.models.geo_view_properties_center.GeoViewProperties_center(
                    lat = 1.337, 
                    lon = 1.337, ),
                detect_coordinate_fields = True,
                layers = [
                    openapi_client.models.geo_view_layer.GeoViewLayer()
                    ],
                zoom = 1,
        )
        """

    def testViewProperties(self):
        """Test ViewProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
