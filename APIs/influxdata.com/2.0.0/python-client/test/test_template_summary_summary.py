# coding: utf-8

"""
    Influx OSS API Service

    # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.template_summary_summary import TemplateSummarySummary

class TestTemplateSummarySummary(unittest.TestCase):
    """TemplateSummarySummary unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TemplateSummarySummary:
        """Test TemplateSummarySummary
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TemplateSummarySummary`
        """
        model = TemplateSummarySummary()
        if include_optional:
            return TemplateSummarySummary(
                buckets = [
                    openapi_client.models.template_summary_summary_buckets_inner.TemplateSummary_summary_buckets_inner(
                        description = '', 
                        env_references = [
                            openapi_client.models.template_env_references_inner.TemplateEnvReferences_inner(
                                default_value = null, 
                                env_ref_key = '', 
                                resource_field = '', 
                                value = null, )
                            ], 
                        id = '', 
                        kind = 'Bucket', 
                        label_associations = [
                            openapi_client.models.template_summary_label.TemplateSummaryLabel(
                                env_references = [
                                    openapi_client.models.template_env_references_inner.TemplateEnvReferences_inner(
                                        env_ref_key = '', 
                                        resource_field = '', )
                                    ], 
                                id = '', 
                                name = '', 
                                org_id = '', 
                                properties = openapi_client.models.template_summary_label_properties.TemplateSummaryLabel_properties(
                                    color = '', 
                                    description = '', ), 
                                template_meta_name = '', )
                            ], 
                        name = '', 
                        org_id = '', 
                        retention_period = 56, 
                        template_meta_name = '', )
                    ],
                checks = [
                    null
                    ],
                dashboards = [
                    openapi_client.models.template_summary_summary_dashboards_inner.TemplateSummary_summary_dashboards_inner(
                        charts = [
                            openapi_client.models.template_chart.TemplateChart(
                                height = 56, 
                                properties = null, 
                                width = 56, 
                                x_pos = 56, 
                                y_pos = 56, )
                            ], 
                        description = '', 
                        env_references = [
                            openapi_client.models.template_env_references_inner.TemplateEnvReferences_inner(
                                default_value = null, 
                                env_ref_key = '', 
                                resource_field = '', 
                                value = null, )
                            ], 
                        id = '', 
                        kind = 'Bucket', 
                        label_associations = [
                            openapi_client.models.template_summary_label.TemplateSummaryLabel(
                                env_references = [
                                    openapi_client.models.template_env_references_inner.TemplateEnvReferences_inner(
                                        env_ref_key = '', 
                                        resource_field = '', )
                                    ], 
                                id = '', 
                                name = '', 
                                org_id = '', 
                                template_meta_name = '', )
                            ], 
                        name = '', 
                        org_id = '', 
                        template_meta_name = '', )
                    ],
                label_mappings = [
                    openapi_client.models.template_summary_diff_label_mappings_inner.TemplateSummary_diff_labelMappings_inner(
                        label_id = '', 
                        label_name = '', 
                        label_template_meta_name = '', 
                        resource_id = '', 
                        resource_name = '', 
                        resource_template_meta_name = '', 
                        resource_type = '', 
                        status = '', )
                    ],
                labels = [
                    openapi_client.models.template_summary_label.TemplateSummaryLabel(
                        env_references = [
                            openapi_client.models.template_env_references_inner.TemplateEnvReferences_inner(
                                default_value = null, 
                                env_ref_key = '', 
                                resource_field = '', 
                                value = null, )
                            ], 
                        id = '', 
                        kind = 'Bucket', 
                        name = '', 
                        org_id = '', 
                        properties = openapi_client.models.template_summary_label_properties.TemplateSummaryLabel_properties(
                            color = '', 
                            description = '', ), 
                        template_meta_name = '', )
                    ],
                missing_env_refs = [
                    ''
                    ],
                missing_secrets = [
                    ''
                    ],
                notification_endpoints = [
                    null
                    ],
                notification_rules = [
                    openapi_client.models.template_summary_summary_notification_rules_inner.TemplateSummary_summary_notificationRules_inner(
                        description = '', 
                        endpoint_id = '', 
                        endpoint_template_meta_name = '', 
                        endpoint_type = '', 
                        env_references = [
                            openapi_client.models.template_env_references_inner.TemplateEnvReferences_inner(
                                default_value = null, 
                                env_ref_key = '', 
                                resource_field = '', 
                                value = null, )
                            ], 
                        every = '', 
                        kind = 'Bucket', 
                        label_associations = [
                            openapi_client.models.template_summary_label.TemplateSummaryLabel(
                                env_references = [
                                    openapi_client.models.template_env_references_inner.TemplateEnvReferences_inner(
                                        env_ref_key = '', 
                                        resource_field = '', )
                                    ], 
                                id = '', 
                                name = '', 
                                org_id = '', 
                                properties = openapi_client.models.template_summary_label_properties.TemplateSummaryLabel_properties(
                                    color = '', 
                                    description = '', ), 
                                template_meta_name = '', )
                            ], 
                        message_template = '', 
                        name = '', 
                        offset = '', 
                        status = '', 
                        status_rules = [
                            openapi_client.models.template_summary_diff_notification_rules_inner_new_status_rules_inner.TemplateSummary_diff_notificationRules_inner_new_statusRules_inner(
                                current_level = '', 
                                previous_level = '', )
                            ], 
                        tag_rules = [
                            openapi_client.models.template_summary_diff_notification_rules_inner_new_tag_rules_inner.TemplateSummary_diff_notificationRules_inner_new_tagRules_inner(
                                key = '', 
                                operator = '', )
                            ], 
                        template_meta_name = '', )
                    ],
                tasks = [
                    openapi_client.models.template_summary_summary_tasks_inner.TemplateSummary_summary_tasks_inner(
                        cron = '', 
                        description = '', 
                        env_references = [
                            openapi_client.models.template_env_references_inner.TemplateEnvReferences_inner(
                                default_value = null, 
                                env_ref_key = '', 
                                resource_field = '', 
                                value = null, )
                            ], 
                        every = '', 
                        id = '', 
                        kind = 'Bucket', 
                        name = '', 
                        offset = '', 
                        query = '', 
                        status = '', 
                        template_meta_name = '', )
                    ],
                telegraf_configs = [
                    null
                    ],
                variables = [
                    openapi_client.models.template_summary_summary_variables_inner.TemplateSummary_summary_variables_inner(
                        arguments = openapi_client.models.variable_properties.VariableProperties(), 
                        description = '', 
                        env_references = [
                            openapi_client.models.template_env_references_inner.TemplateEnvReferences_inner(
                                default_value = null, 
                                env_ref_key = '', 
                                resource_field = '', 
                                value = null, )
                            ], 
                        id = '', 
                        kind = 'Bucket', 
                        label_associations = [
                            openapi_client.models.template_summary_label.TemplateSummaryLabel(
                                env_references = [
                                    openapi_client.models.template_env_references_inner.TemplateEnvReferences_inner(
                                        env_ref_key = '', 
                                        resource_field = '', )
                                    ], 
                                id = '', 
                                name = '', 
                                org_id = '', 
                                properties = openapi_client.models.template_summary_label_properties.TemplateSummaryLabel_properties(
                                    color = '', 
                                    description = '', ), 
                                template_meta_name = '', )
                            ], 
                        name = '', 
                        org_id = '', 
                        template_meta_name = '', )
                    ]
            )
        else:
            return TemplateSummarySummary(
        )
        """

    def testTemplateSummarySummary(self):
        """Test TemplateSummarySummary"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
