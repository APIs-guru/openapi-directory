# coding: utf-8

"""
    Influx OSS API Service

    # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.dashboard_query import DashboardQuery

class TestDashboardQuery(unittest.TestCase):
    """DashboardQuery unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DashboardQuery:
        """Test DashboardQuery
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DashboardQuery`
        """
        model = DashboardQuery()
        if include_optional:
            return DashboardQuery(
                builder_config = openapi_client.models.builder_config.BuilderConfig(
                    aggregate_window = openapi_client.models.builder_config_aggregate_window.BuilderConfig_aggregateWindow(
                        fill_values = True, 
                        period = '', ), 
                    buckets = [
                        ''
                        ], 
                    functions = [
                        openapi_client.models.builder_functions_type.BuilderFunctionsType(
                            name = '', )
                        ], 
                    tags = [
                        openapi_client.models.builder_tags_type.BuilderTagsType(
                            aggregate_function_type = 'filter', 
                            key = '', 
                            values = [
                                ''
                                ], )
                        ], ),
                edit_mode = 'builder',
                name = '',
                text = ''
            )
        else:
            return DashboardQuery(
        )
        """

    def testDashboardQuery(self):
        """Test DashboardQuery"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
