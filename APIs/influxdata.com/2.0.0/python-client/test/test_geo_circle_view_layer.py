# coding: utf-8

"""
    Influx OSS API Service

    # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.geo_circle_view_layer import GeoCircleViewLayer

class TestGeoCircleViewLayer(unittest.TestCase):
    """GeoCircleViewLayer unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GeoCircleViewLayer:
        """Test GeoCircleViewLayer
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GeoCircleViewLayer`
        """
        model = GeoCircleViewLayer()
        if include_optional:
            return GeoCircleViewLayer(
                type = 'heatmap',
                color_dimension = openapi_client.models.axis.Axis(
                    base = '', 
                    bounds = [
                        ''
                        ], 
                    label = '', 
                    prefix = '', 
                    scale = 'log', 
                    suffix = '', ),
                color_field = '',
                colors = [
                    openapi_client.models.dashboard_color.DashboardColor(
                        hex = '0123456', 
                        id = '', 
                        name = '', 
                        type = 'min', 
                        value = 1.337, )
                    ],
                interpolate_colors = True,
                radius = 56,
                radius_dimension = openapi_client.models.axis.Axis(
                    base = '', 
                    bounds = [
                        ''
                        ], 
                    label = '', 
                    prefix = '', 
                    scale = 'log', 
                    suffix = '', ),
                radius_field = ''
            )
        else:
            return GeoCircleViewLayer(
                type = 'heatmap',
                color_dimension = openapi_client.models.axis.Axis(
                    base = '', 
                    bounds = [
                        ''
                        ], 
                    label = '', 
                    prefix = '', 
                    scale = 'log', 
                    suffix = '', ),
                color_field = '',
                colors = [
                    openapi_client.models.dashboard_color.DashboardColor(
                        hex = '0123456', 
                        id = '', 
                        name = '', 
                        type = 'min', 
                        value = 1.337, )
                    ],
                radius_dimension = openapi_client.models.axis.Axis(
                    base = '', 
                    bounds = [
                        ''
                        ], 
                    label = '', 
                    prefix = '', 
                    scale = 'log', 
                    suffix = '', ),
                radius_field = '',
        )
        """

    def testGeoCircleViewLayer(self):
        """Test GeoCircleViewLayer"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
