# coding: utf-8

"""
    Influx OSS API Service

    # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.dashboards_api import DashboardsApi


class TestDashboardsApi(unittest.TestCase):
    """DashboardsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = DashboardsApi()

    def tearDown(self) -> None:
        pass

    def test_delete_dashboards_id(self) -> None:
        """Test case for delete_dashboards_id

        Delete a dashboard
        """
        pass

    def test_delete_dashboards_id_cells_id_0(self) -> None:
        """Test case for delete_dashboards_id_cells_id_0

        Delete a dashboard cell
        """
        pass

    def test_delete_dashboards_id_labels_id(self) -> None:
        """Test case for delete_dashboards_id_labels_id

        Delete a label from a dashboard
        """
        pass

    def test_delete_dashboards_id_members_id(self) -> None:
        """Test case for delete_dashboards_id_members_id

        Remove a member from a dashboard
        """
        pass

    def test_delete_dashboards_id_owners_id(self) -> None:
        """Test case for delete_dashboards_id_owners_id

        Remove an owner from a dashboard
        """
        pass

    def test_get_dashboards(self) -> None:
        """Test case for get_dashboards

        List all dashboards
        """
        pass

    def test_get_dashboards_id(self) -> None:
        """Test case for get_dashboards_id

        Retrieve a Dashboard
        """
        pass

    def test_get_dashboards_id_cells_id_view_0(self) -> None:
        """Test case for get_dashboards_id_cells_id_view_0

        Retrieve the view for a cell
        """
        pass

    def test_get_dashboards_id_labels(self) -> None:
        """Test case for get_dashboards_id_labels

        List all labels for a dashboard
        """
        pass

    def test_get_dashboards_id_members(self) -> None:
        """Test case for get_dashboards_id_members

        List all dashboard members
        """
        pass

    def test_get_dashboards_id_owners(self) -> None:
        """Test case for get_dashboards_id_owners

        List all dashboard owners
        """
        pass

    def test_patch_dashboards_id(self) -> None:
        """Test case for patch_dashboards_id

        Update a dashboard
        """
        pass

    def test_patch_dashboards_id_cells_id_0(self) -> None:
        """Test case for patch_dashboards_id_cells_id_0

        Update the non-positional information related to a cell
        """
        pass

    def test_patch_dashboards_id_cells_id_view_0(self) -> None:
        """Test case for patch_dashboards_id_cells_id_view_0

        Update the view for a cell
        """
        pass

    def test_post_dashboards(self) -> None:
        """Test case for post_dashboards

        Create a dashboard
        """
        pass

    def test_post_dashboards_id_cells_0(self) -> None:
        """Test case for post_dashboards_id_cells_0

        Create a dashboard cell
        """
        pass

    def test_post_dashboards_id_labels(self) -> None:
        """Test case for post_dashboards_id_labels

        Add a label to a dashboard
        """
        pass

    def test_post_dashboards_id_members(self) -> None:
        """Test case for post_dashboards_id_members

        Add a member to a dashboard
        """
        pass

    def test_post_dashboards_id_owners(self) -> None:
        """Test case for post_dashboards_id_owners

        Add an owner to a dashboard
        """
        pass

    def test_put_dashboards_id_cells_0(self) -> None:
        """Test case for put_dashboards_id_cells_0

        Replace cells in a dashboard
        """
        pass


if __name__ == '__main__':
    unittest.main()
