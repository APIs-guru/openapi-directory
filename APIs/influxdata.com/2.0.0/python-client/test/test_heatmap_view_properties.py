# coding: utf-8

"""
    Influx OSS API Service

    # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.heatmap_view_properties import HeatmapViewProperties

class TestHeatmapViewProperties(unittest.TestCase):
    """HeatmapViewProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> HeatmapViewProperties:
        """Test HeatmapViewProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `HeatmapViewProperties`
        """
        model = HeatmapViewProperties()
        if include_optional:
            return HeatmapViewProperties(
                bin_size = 1.337,
                colors = [
                    ''
                    ],
                generate_x_axis_ticks = [
                    ''
                    ],
                generate_y_axis_ticks = [
                    ''
                    ],
                legend_colorize_rows = True,
                legend_hide = True,
                legend_opacity = 1.337,
                legend_orientation_threshold = 56,
                note = '',
                queries = [
                    openapi_client.models.dashboard_query.DashboardQuery(
                        builder_config = openapi_client.models.builder_config.BuilderConfig(
                            aggregate_window = openapi_client.models.builder_config_aggregate_window.BuilderConfig_aggregateWindow(
                                fill_values = True, 
                                period = '', ), 
                            buckets = [
                                ''
                                ], 
                            functions = [
                                openapi_client.models.builder_functions_type.BuilderFunctionsType(
                                    name = '', )
                                ], 
                            tags = [
                                openapi_client.models.builder_tags_type.BuilderTagsType(
                                    aggregate_function_type = 'filter', 
                                    key = '', 
                                    values = [
                                        ''
                                        ], )
                                ], ), 
                        edit_mode = 'builder', 
                        name = '', 
                        text = '', )
                    ],
                shape = 'chronograf-v2',
                show_note_when_empty = True,
                time_format = '',
                type = 'heatmap',
                x_axis_label = '',
                x_column = '',
                x_domain = [
                    1.337
                    ],
                x_prefix = '',
                x_suffix = '',
                x_tick_start = 1.337,
                x_tick_step = 1.337,
                x_total_ticks = 56,
                y_axis_label = '',
                y_column = '',
                y_domain = [
                    1.337
                    ],
                y_prefix = '',
                y_suffix = '',
                y_tick_start = 1.337,
                y_tick_step = 1.337,
                y_total_ticks = 56
            )
        else:
            return HeatmapViewProperties(
                bin_size = 1.337,
                colors = [
                    ''
                    ],
                note = '',
                queries = [
                    openapi_client.models.dashboard_query.DashboardQuery(
                        builder_config = openapi_client.models.builder_config.BuilderConfig(
                            aggregate_window = openapi_client.models.builder_config_aggregate_window.BuilderConfig_aggregateWindow(
                                fill_values = True, 
                                period = '', ), 
                            buckets = [
                                ''
                                ], 
                            functions = [
                                openapi_client.models.builder_functions_type.BuilderFunctionsType(
                                    name = '', )
                                ], 
                            tags = [
                                openapi_client.models.builder_tags_type.BuilderTagsType(
                                    aggregate_function_type = 'filter', 
                                    key = '', 
                                    values = [
                                        ''
                                        ], )
                                ], ), 
                        edit_mode = 'builder', 
                        name = '', 
                        text = '', )
                    ],
                shape = 'chronograf-v2',
                show_note_when_empty = True,
                type = 'heatmap',
                x_axis_label = '',
                x_column = '',
                x_domain = [
                    1.337
                    ],
                x_prefix = '',
                x_suffix = '',
                y_axis_label = '',
                y_column = '',
                y_domain = [
                    1.337
                    ],
                y_prefix = '',
                y_suffix = '',
        )
        """

    def testHeatmapViewProperties(self):
        """Test HeatmapViewProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
