# coding: utf-8

"""
    Influx OSS API Service

    # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.stack_events_inner_resources_inner import StackEventsInnerResourcesInner

class TestStackEventsInnerResourcesInner(unittest.TestCase):
    """StackEventsInnerResourcesInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> StackEventsInnerResourcesInner:
        """Test StackEventsInnerResourcesInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `StackEventsInnerResourcesInner`
        """
        model = StackEventsInnerResourcesInner()
        if include_optional:
            return StackEventsInnerResourcesInner(
                api_version = '',
                associations = [
                    openapi_client.models.stack_events_inner_resources_inner_associations_inner.Stack_events_inner_resources_inner_associations_inner(
                        kind = 'Bucket', 
                        meta_name = '', )
                    ],
                kind = 'Bucket',
                links = openapi_client.models.stack_events_inner_resources_inner_links.Stack_events_inner_resources_inner_links(
                    self = '', ),
                resource_id = '',
                template_meta_name = ''
            )
        else:
            return StackEventsInnerResourcesInner(
        )
        """

    def testStackEventsInnerResourcesInner(self):
        """Test StackEventsInnerResourcesInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
