# coding: utf-8

"""
    Influx OSS API Service

    # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.authorization import Authorization

class TestAuthorization(unittest.TestCase):
    """Authorization unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Authorization:
        """Test Authorization
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Authorization`
        """
        model = Authorization()
        if include_optional:
            return Authorization(
                description = '',
                status = 'active',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                id = '',
                links = {"self":"/api/v2/authorizations/1","user":"/api/v2/users/12"},
                org = '',
                org_id = '',
                permissions = [
                    openapi_client.models.permission.Permission(
                        action = 'read', 
                        resource = openapi_client.models.resource.Resource(
                            id = '', 
                            name = '', 
                            org = '', 
                            org_id = '', 
                            type = 'authorizations', ), )
                    ],
                token = '',
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                user = '',
                user_id = ''
            )
        else:
            return Authorization(
                org_id = '',
                permissions = [
                    openapi_client.models.permission.Permission(
                        action = 'read', 
                        resource = openapi_client.models.resource.Resource(
                            id = '', 
                            name = '', 
                            org = '', 
                            org_id = '', 
                            type = 'authorizations', ), )
                    ],
        )
        """

    def testAuthorization(self):
        """Test Authorization"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
