# coding: utf-8

"""
    Influx OSS API Service

    # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.routes import Routes

class TestRoutes(unittest.TestCase):
    """Routes unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Routes:
        """Test Routes
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Routes`
        """
        model = Routes()
        if include_optional:
            return Routes(
                authorizations = '',
                buckets = '',
                dashboards = '',
                external = openapi_client.models.routes_external.Routes_external(
                    status_feed = '', ),
                flags = '',
                me = '',
                orgs = '',
                query = openapi_client.models.routes_query.Routes_query(
                    analyze = '', 
                    ast = '', 
                    self = '', 
                    suggestions = '', ),
                setup = '',
                signin = '',
                signout = '',
                sources = '',
                system = openapi_client.models.routes_system.Routes_system(
                    debug = '', 
                    health = '', 
                    metrics = '', ),
                tasks = '',
                telegrafs = '',
                users = '',
                variables = '',
                write = ''
            )
        else:
            return Routes(
        )
        """

    def testRoutes(self):
        """Test Routes"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
