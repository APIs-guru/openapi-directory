# coding: utf-8

"""
    Influx OSS API Service

    # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.package import Package

class TestPackage(unittest.TestCase):
    """Package unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Package:
        """Test Package
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Package`
        """
        model = Package()
        if include_optional:
            return Package(
                files = [
                    openapi_client.models.file.File(
                        body = [
                            null
                            ], 
                        imports = [
                            openapi_client.models.import_declaration.ImportDeclaration(
                                as = openapi_client.models.identifier.Identifier(
                                    name = '', 
                                    type = '', ), 
                                path = openapi_client.models.string_literal.StringLiteral(
                                    type = '', 
                                    value = '', ), 
                                type = '', )
                            ], 
                        name = '', 
                        package = openapi_client.models.package_clause.PackageClause(
                            name = openapi_client.models.identifier.Identifier(), ), 
                        type = '', )
                    ],
                package = '',
                path = '',
                type = ''
            )
        else:
            return Package(
        )
        """

    def testPackage(self):
        """Test Package"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
