# coding: utf-8

"""
    Influx OSS API Service

    # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.sources import Sources

class TestSources(unittest.TestCase):
    """Sources unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Sources:
        """Test Sources
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Sources`
        """
        model = Sources()
        if include_optional:
            return Sources(
                links = openapi_client.models.resource_members_links.ResourceMembers_links(
                    self = '', ),
                sources = [
                    openapi_client.models.source.Source(
                        default = True, 
                        default_rp = '', 
                        id = '', 
                        insecure_skip_verify = True, 
                        languages = [
                            'flux'
                            ], 
                        links = openapi_client.models.source_links.Source_links(
                            buckets = '', 
                            health = '', 
                            query = '', 
                            self = '', ), 
                        meta_url = '', 
                        name = '', 
                        org_id = '', 
                        password = '', 
                        shared_secret = '', 
                        telegraf = '', 
                        token = '', 
                        type = 'v1', 
                        url = '', 
                        username = '', )
                    ]
            )
        else:
            return Sources(
        )
        """

    def testSources(self):
        """Test Sources"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
