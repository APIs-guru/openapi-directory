# coding: utf-8

"""
    Influx OSS API Service

    # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.template_summary_summary_dashboards_inner import TemplateSummarySummaryDashboardsInner

class TestTemplateSummarySummaryDashboardsInner(unittest.TestCase):
    """TemplateSummarySummaryDashboardsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TemplateSummarySummaryDashboardsInner:
        """Test TemplateSummarySummaryDashboardsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TemplateSummarySummaryDashboardsInner`
        """
        model = TemplateSummarySummaryDashboardsInner()
        if include_optional:
            return TemplateSummarySummaryDashboardsInner(
                charts = [
                    openapi_client.models.template_chart.TemplateChart(
                        height = 56, 
                        properties = null, 
                        width = 56, 
                        x_pos = 56, 
                        y_pos = 56, )
                    ],
                description = '',
                env_references = [
                    openapi_client.models.template_env_references_inner.TemplateEnvReferences_inner(
                        default_value = null, 
                        env_ref_key = '', 
                        resource_field = '', 
                        value = null, )
                    ],
                id = '',
                kind = 'Bucket',
                label_associations = [
                    openapi_client.models.template_summary_label.TemplateSummaryLabel(
                        env_references = [
                            openapi_client.models.template_env_references_inner.TemplateEnvReferences_inner(
                                default_value = null, 
                                env_ref_key = '', 
                                resource_field = '', 
                                value = null, )
                            ], 
                        id = '', 
                        kind = 'Bucket', 
                        name = '', 
                        org_id = '', 
                        properties = openapi_client.models.template_summary_label_properties.TemplateSummaryLabel_properties(
                            color = '', 
                            description = '', ), 
                        template_meta_name = '', )
                    ],
                name = '',
                org_id = '',
                template_meta_name = ''
            )
        else:
            return TemplateSummarySummaryDashboardsInner(
        )
        """

    def testTemplateSummarySummaryDashboardsInner(self):
        """Test TemplateSummarySummaryDashboardsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
