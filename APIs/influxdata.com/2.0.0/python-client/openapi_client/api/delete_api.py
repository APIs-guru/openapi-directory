# coding: utf-8

"""
    Influx OSS API Service

    # Authentication  &lt;!-- ReDoc-Inject: &lt;security-definitions&gt; --&gt;

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictStr
from typing import Optional
from typing_extensions import Annotated
from openapi_client.models.delete_predicate_request import DeletePredicateRequest

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class DeleteApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def post_delete(
        self,
        delete_predicate_request: Annotated[DeletePredicateRequest, Field(description="Predicate delete request")],
        zap_trace_span: Annotated[Optional[StrictStr], Field(description="OpenTracing span context")] = None,
        org: Annotated[Optional[StrictStr], Field(description="Specifies the organization to delete data from.")] = None,
        bucket: Annotated[Optional[StrictStr], Field(description="Specifies the bucket to delete data from.")] = None,
        org_id: Annotated[Optional[StrictStr], Field(description="Specifies the organization ID of the resource.")] = None,
        bucket_id: Annotated[Optional[StrictStr], Field(description="Specifies the bucket ID to delete data from.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Delete time series data from InfluxDB


        :param delete_predicate_request: Predicate delete request (required)
        :type delete_predicate_request: DeletePredicateRequest
        :param zap_trace_span: OpenTracing span context
        :type zap_trace_span: str
        :param org: Specifies the organization to delete data from.
        :type org: str
        :param bucket: Specifies the bucket to delete data from.
        :type bucket: str
        :param org_id: Specifies the organization ID of the resource.
        :type org_id: str
        :param bucket_id: Specifies the bucket ID to delete data from.
        :type bucket_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._post_delete_serialize(
            delete_predicate_request=delete_predicate_request,
            zap_trace_span=zap_trace_span,
            org=org,
            bucket=bucket,
            org_id=org_id,
            bucket_id=bucket_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '204': None,
            '400': "Error",
            '403': "Error",
            '404': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def post_delete_with_http_info(
        self,
        delete_predicate_request: Annotated[DeletePredicateRequest, Field(description="Predicate delete request")],
        zap_trace_span: Annotated[Optional[StrictStr], Field(description="OpenTracing span context")] = None,
        org: Annotated[Optional[StrictStr], Field(description="Specifies the organization to delete data from.")] = None,
        bucket: Annotated[Optional[StrictStr], Field(description="Specifies the bucket to delete data from.")] = None,
        org_id: Annotated[Optional[StrictStr], Field(description="Specifies the organization ID of the resource.")] = None,
        bucket_id: Annotated[Optional[StrictStr], Field(description="Specifies the bucket ID to delete data from.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Delete time series data from InfluxDB


        :param delete_predicate_request: Predicate delete request (required)
        :type delete_predicate_request: DeletePredicateRequest
        :param zap_trace_span: OpenTracing span context
        :type zap_trace_span: str
        :param org: Specifies the organization to delete data from.
        :type org: str
        :param bucket: Specifies the bucket to delete data from.
        :type bucket: str
        :param org_id: Specifies the organization ID of the resource.
        :type org_id: str
        :param bucket_id: Specifies the bucket ID to delete data from.
        :type bucket_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._post_delete_serialize(
            delete_predicate_request=delete_predicate_request,
            zap_trace_span=zap_trace_span,
            org=org,
            bucket=bucket,
            org_id=org_id,
            bucket_id=bucket_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '204': None,
            '400': "Error",
            '403': "Error",
            '404': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def post_delete_without_preload_content(
        self,
        delete_predicate_request: Annotated[DeletePredicateRequest, Field(description="Predicate delete request")],
        zap_trace_span: Annotated[Optional[StrictStr], Field(description="OpenTracing span context")] = None,
        org: Annotated[Optional[StrictStr], Field(description="Specifies the organization to delete data from.")] = None,
        bucket: Annotated[Optional[StrictStr], Field(description="Specifies the bucket to delete data from.")] = None,
        org_id: Annotated[Optional[StrictStr], Field(description="Specifies the organization ID of the resource.")] = None,
        bucket_id: Annotated[Optional[StrictStr], Field(description="Specifies the bucket ID to delete data from.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Delete time series data from InfluxDB


        :param delete_predicate_request: Predicate delete request (required)
        :type delete_predicate_request: DeletePredicateRequest
        :param zap_trace_span: OpenTracing span context
        :type zap_trace_span: str
        :param org: Specifies the organization to delete data from.
        :type org: str
        :param bucket: Specifies the bucket to delete data from.
        :type bucket: str
        :param org_id: Specifies the organization ID of the resource.
        :type org_id: str
        :param bucket_id: Specifies the bucket ID to delete data from.
        :type bucket_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._post_delete_serialize(
            delete_predicate_request=delete_predicate_request,
            zap_trace_span=zap_trace_span,
            org=org,
            bucket=bucket,
            org_id=org_id,
            bucket_id=bucket_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '204': None,
            '400': "Error",
            '403': "Error",
            '404': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _post_delete_serialize(
        self,
        delete_predicate_request,
        zap_trace_span,
        org,
        bucket,
        org_id,
        bucket_id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if org is not None:
            
            _query_params.append(('org', org))
            
        if bucket is not None:
            
            _query_params.append(('bucket', bucket))
            
        if org_id is not None:
            
            _query_params.append(('orgID', org_id))
            
        if bucket_id is not None:
            
            _query_params.append(('bucketID', bucket_id))
            
        # process the header parameters
        if zap_trace_span is not None:
            _header_params['Zap-Trace-Span'] = zap_trace_span
        # process the form parameters
        # process the body parameter
        if delete_predicate_request is not None:
            _body_params = delete_predicate_request


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/delete',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


