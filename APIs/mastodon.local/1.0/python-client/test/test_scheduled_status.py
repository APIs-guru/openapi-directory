# coding: utf-8

"""
    Mastodon API Specification (https://github.com/mastodon/mastodon)

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Contact: sardo@hey.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.scheduled_status import ScheduledStatus

class TestScheduledStatus(unittest.TestCase):
    """ScheduledStatus unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ScheduledStatus:
        """Test ScheduledStatus
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ScheduledStatus`
        """
        model = ScheduledStatus()
        if include_optional:
            return ScheduledStatus(
                id = '',
                media_attachments = [
                    openapi_client.models.attachment.Attachment(
                        blurhash = '', 
                        description = '', 
                        id = '', 
                        meta = openapi_client.models.meta.meta(), 
                        preview_url = '', 
                        remote_url = '', 
                        text_url = '', 
                        type = 'unknown', 
                        url = '', )
                    ],
                params = openapi_client.models.status_params.StatusParams(
                    application_id = '', 
                    in_reply_to_id = '', 
                    media_ids = [
                        ''
                        ], 
                    scheduled_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    sensitive = True, 
                    spoiler_text = '', 
                    text = '', 
                    visibility = '', ),
                scheduled_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return ScheduledStatus(
                id = '',
                media_attachments = [
                    openapi_client.models.attachment.Attachment(
                        blurhash = '', 
                        description = '', 
                        id = '', 
                        meta = openapi_client.models.meta.meta(), 
                        preview_url = '', 
                        remote_url = '', 
                        text_url = '', 
                        type = 'unknown', 
                        url = '', )
                    ],
                params = openapi_client.models.status_params.StatusParams(
                    application_id = '', 
                    in_reply_to_id = '', 
                    media_ids = [
                        ''
                        ], 
                    scheduled_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    sensitive = True, 
                    spoiler_text = '', 
                    text = '', 
                    visibility = '', ),
                scheduled_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
        )
        """

    def testScheduledStatus(self):
        """Test ScheduledStatus"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
