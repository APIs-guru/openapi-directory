# coding: utf-8

"""
    LotaData

    Access the most exhaustive, accurate and up-to-date collection of global and hyper-local geocoded events and activities across a wide range of categories and genres

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.place_reference import PlaceReference

class TestPlaceReference(unittest.TestCase):
    """PlaceReference unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PlaceReference:
        """Test PlaceReference
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PlaceReference`
        """
        model = PlaceReference()
        if include_optional:
            return PlaceReference(
                id = '',
                type = 'Place',
                address = openapi_client.models.address.Address(
                    country = '', 
                    formatted = '', 
                    locality = '', 
                    postal_code = '', 
                    region = '', 
                    street = '', 
                    unit = '', ),
                geo = openapi_client.models.geo_pt.GeoPt(
                    lat = 1.337, 
                    lon = 1.337, ),
                geometry = openapi_client.models.geo_json_object.GeoJsonObject(),
                location = openapi_client.models.virtual_location.VirtualLocation(
                    domain = '', 
                    platform = '', 
                    url = '', ),
                logo = openapi_client.models.image_meta.ImageMeta(
                    @id = '', 
                    caption = '', 
                    height = 56, 
                    url = '', 
                    width = 56, ),
                name = '',
                tag = [
                    openapi_client.models.feature_reference.FeatureReference(
                        @id = '', 
                        @type = '', 
                        name = '', )
                    ]
            )
        else:
            return PlaceReference(
        )
        """

    def testPlaceReference(self):
        """Test PlaceReference"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
