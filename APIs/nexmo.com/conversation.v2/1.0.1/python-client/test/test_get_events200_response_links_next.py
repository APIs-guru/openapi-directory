# coding: utf-8

"""
    Conversation API

    The Conversation API enables you to build conversation features where communication can take place across multiple mediums including IP Messaging, PSTN Voice, SMS and WebRTC Audio and Video. The context of the conversations is maintained though each communication event taking place within a conversation, no matter the medium.

    The version of the OpenAPI document: 1.0.1
    Contact: devrel@vonage.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_events200_response_links_next import GetEvents200ResponseLinksNext

class TestGetEvents200ResponseLinksNext(unittest.TestCase):
    """GetEvents200ResponseLinksNext unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetEvents200ResponseLinksNext:
        """Test GetEvents200ResponseLinksNext
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetEvents200ResponseLinksNext`
        """
        model = GetEvents200ResponseLinksNext()
        if include_optional:
            return GetEvents200ResponseLinksNext(
                href = 'https://api.nexmo.com/v0.2/conversations/CON-92a44c64-7e4e-485f-a0c4-1f2adfc44625/events?page_size=10&cursor=4db03d9254d1cdaecc7b1fc15b6bf1a81f3d3151191d784f1327893f8dc96416'
            )
        else:
            return GetEvents200ResponseLinksNext(
        )
        """

    def testGetEvents200ResponseLinksNext(self):
        """Test GetEvents200ResponseLinksNext"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
