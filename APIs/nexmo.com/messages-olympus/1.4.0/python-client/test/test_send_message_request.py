# coding: utf-8

"""
    Messages API

    The Messages API consolidates and normalises exchanges across all messaging channels. It allows you to use a single API to interact with our various channels such as SMS, MMS, WhatsApp, Viber and Facebook Messenger

    The version of the OpenAPI document: 1.4.0
    Contact: devrel@nexmo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.send_message_request import SendMessageRequest

class TestSendMessageRequest(unittest.TestCase):
    """SendMessageRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SendMessageRequest:
        """Test SendMessageRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SendMessageRequest`
        """
        model = SendMessageRequest()
        if include_optional:
            return SendMessageRequest(
                client_ref = '',
                message_type = 'file',
                text = None,
                channel = 'viber_service',
                var_from = '9876543210',
                to = '447700900000',
                image = openapi_client.models.viber_one_of_1_all_of_image.Viber_oneOf_1_allOf_image(
                    caption = 'Check out this new promotion', 
                    url = 'https://example.com/image.jpg', ),
                vcard = openapi_client.models.mms_one_of_1_all_of_vcard.MMS_oneOf_1_allOf_vcard(
                    url = 'https://example.com/contact.vcf', ),
                audio = openapi_client.models.messenger_one_of_2_all_of_audio.Messenger_oneOf_2_allOf_audio(
                    url = null, ),
                video = openapi_client.models.viber_one_of_2_all_of_video.Viber_oneOf_2_allOf_video(
                    caption = 'Check out this new video', 
                    thumb_url = 'https://example.com/file1.jpg', 
                    url = 'https://example.com/image.jpg', ),
                location = openapi_client.models.location_1_location.Location_1_location(
                    address = '23 Main St, Holmdel, NJ 07733, USA', 
                    lat = 40.34772, 
                    long = -74.18847, 
                    name = 'Vonage', ),
                file = openapi_client.models.viber_one_of_3_all_of_file.Viber_oneOf_3_allOf_file(
                    name = 'example.pdf', 
                    url = 'https://example.com/files/', ),
                template = openapi_client.models.template_1_template.Template_1_template(
                    name = '9b6b4fcb_da19_4a26_8fe8_78074a91b584:verify', 
                    parameters = ["Verification","2526","5"], ),
                whatsapp = openapi_client.models.whats_app_one_of_6_all_of_whatsapp.WhatsApp_oneOf_6_allOf_whatsapp(
                    locale = 'en_US', 
                    policy = 'deterministic', ),
                custom = { },
                messenger = openapi_client.models.channel_options_messenger_messenger.channelOptionsMessenger_messenger(
                    category = 'response', 
                    tag = 'CONFIRMED_EVENT_UPDATE', ),
                viber_service = openapi_client.models.channel_options_viber_viber_service.channelOptionsViber_viber_service(
                    category = 'transaction', 
                    ttl = 600, 
                    type = '', )
            )
        else:
            return SendMessageRequest(
                message_type = 'file',
                text = None,
                channel = 'viber_service',
                var_from = '9876543210',
                to = '447700900000',
                image = openapi_client.models.viber_one_of_1_all_of_image.Viber_oneOf_1_allOf_image(
                    caption = 'Check out this new promotion', 
                    url = 'https://example.com/image.jpg', ),
                vcard = openapi_client.models.mms_one_of_1_all_of_vcard.MMS_oneOf_1_allOf_vcard(
                    url = 'https://example.com/contact.vcf', ),
                audio = openapi_client.models.messenger_one_of_2_all_of_audio.Messenger_oneOf_2_allOf_audio(
                    url = null, ),
                video = openapi_client.models.viber_one_of_2_all_of_video.Viber_oneOf_2_allOf_video(
                    caption = 'Check out this new video', 
                    thumb_url = 'https://example.com/file1.jpg', 
                    url = 'https://example.com/image.jpg', ),
                location = openapi_client.models.location_1_location.Location_1_location(
                    address = '23 Main St, Holmdel, NJ 07733, USA', 
                    lat = 40.34772, 
                    long = -74.18847, 
                    name = 'Vonage', ),
                file = openapi_client.models.viber_one_of_3_all_of_file.Viber_oneOf_3_allOf_file(
                    name = 'example.pdf', 
                    url = 'https://example.com/files/', ),
                template = openapi_client.models.template_1_template.Template_1_template(
                    name = '9b6b4fcb_da19_4a26_8fe8_78074a91b584:verify', 
                    parameters = ["Verification","2526","5"], ),
                whatsapp = openapi_client.models.whats_app_one_of_6_all_of_whatsapp.WhatsApp_oneOf_6_allOf_whatsapp(
                    locale = 'en_US', 
                    policy = 'deterministic', ),
        )
        """

    def testSendMessageRequest(self):
        """Test SendMessageRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
