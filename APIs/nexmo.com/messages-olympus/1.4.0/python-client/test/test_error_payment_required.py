# coding: utf-8

"""
    Messages API

    The Messages API consolidates and normalises exchanges across all messaging channels. It allows you to use a single API to interact with our various channels such as SMS, MMS, WhatsApp, Viber and Facebook Messenger

    The version of the OpenAPI document: 1.4.0
    Contact: devrel@nexmo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.error_payment_required import ErrorPaymentRequired

class TestErrorPaymentRequired(unittest.TestCase):
    """ErrorPaymentRequired unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ErrorPaymentRequired:
        """Test ErrorPaymentRequired
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ErrorPaymentRequired`
        """
        model = ErrorPaymentRequired()
        if include_optional:
            return ErrorPaymentRequired(
                detail = 'This request could not be performed due to your account balance being low.',
                instance = 'bf0ca0bf927b3b52e3cb03217e1a1ddf',
                title = 'Low balance',
                type = 'https://developer.nexmo.com/api-errors/#low-balance'
            )
        else:
            return ErrorPaymentRequired(
                detail = 'This request could not be performed due to your account balance being low.',
                instance = 'bf0ca0bf927b3b52e3cb03217e1a1ddf',
                title = 'Low balance',
                type = 'https://developer.nexmo.com/api-errors/#low-balance',
        )
        """

    def testErrorPaymentRequired(self):
        """Test ErrorPaymentRequired"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
