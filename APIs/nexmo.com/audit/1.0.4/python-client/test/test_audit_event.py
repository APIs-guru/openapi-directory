# coding: utf-8

"""
    Audit API

    The Vonage Audit API allows you to view details of changes to your account. More information is available at <https://developer.nexmo.com/audit/overview>. _Please note that the Audit API is currently in Beta_ 

    The version of the OpenAPI document: 1.0.4
    Contact: devrel@vonage.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.audit_event import AuditEvent

class TestAuditEvent(unittest.TestCase):
    """AuditEvent unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AuditEvent:
        """Test AuditEvent
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AuditEvent`
        """
        model = AuditEvent()
        if include_optional:
            return AuditEvent(
                links = openapi_client.models.event_link.EventLink(
                    self = openapi_client.models.event_link_self.EventLink_self(
                        href = 'https://api.nexmo.com/beta/audit/events/aaaaaaaa-bbbb-cccc-dddd-0123456789ab', ), ),
                account_id = 'abcd1234',
                context = {"created":{"accountId":"abcdef01","answer_url":{"method":"GET","url":"https://example.org/call"},"appId":"aaaaaaaa-bbbb-cccc-dddd-0123456789ab","event_url":{"method":"POST","url":"https://example.org/event"},"name":"My voice app","type":"voice"}},
                created_at = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                event_type = 'APP_CREATE',
                event_type_description = 'Application created.',
                id = 'aaaaaaaa-bbbb-cccc-dddd-0123456789ab',
                source = 'CD',
                source_country = 'GB',
                source_description = 'Customer Dashboard',
                source_ip = '192.0.2.0',
                user_email = 'user@example.org',
                user_id = 1234567
            )
        else:
            return AuditEvent(
        )
        """

    def testAuditEvent(self):
        """Test AuditEvent"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
