# coding: utf-8

"""
    Audit API

    The Vonage Audit API allows you to view details of changes to your account. More information is available at <https://developer.nexmo.com/audit/overview>. _Please note that the Audit API is currently in Beta_ 

    The version of the OpenAPI document: 1.0.4
    Contact: devrel@vonage.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.context_app_create_created import ContextAppCreateCreated

class TestContextAppCreateCreated(unittest.TestCase):
    """ContextAppCreateCreated unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ContextAppCreateCreated:
        """Test ContextAppCreateCreated
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ContextAppCreateCreated`
        """
        model = ContextAppCreateCreated()
        if include_optional:
            return ContextAppCreateCreated(
                account_id = 'abcdef01',
                answer_url = openapi_client.models.callback_url.CallbackUrl(
                    method = 'GET', 
                    url = 'https://example.org/my-app-callback', ),
                app_id = 'aaaaaaaa-bbbb-cccc-dddd-0123456789ab',
                event_url = openapi_client.models.callback_url.CallbackUrl(
                    method = 'GET', 
                    url = 'https://example.org/my-app-callback', ),
                name = 'My Voice App',
                type = 'voice'
            )
        else:
            return ContextAppCreateCreated(
        )
        """

    def testContextAppCreateCreated(self):
        """Test ContextAppCreateCreated"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
