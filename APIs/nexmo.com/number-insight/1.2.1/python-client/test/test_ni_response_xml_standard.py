# coding: utf-8

"""
    Number Insight API

    The Number Insight API delivers real-time intelligence about the validity, reachability and roaming status of a phone number and tells you how to format the number correctly in your application. There are three levels of Number Insight API available: [Basic, Standard and Advanced](https://developer.nexmo.com/number-insight/overview#basic-standard-and-advanced-apis). The advanced API is available asynchronously as well as synchronously.

    The version of the OpenAPI document: 1.2.1
    Contact: devrel@vonage.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.ni_response_xml_standard import NiResponseXmlStandard

class TestNiResponseXmlStandard(unittest.TestCase):
    """NiResponseXmlStandard unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NiResponseXmlStandard:
        """Test NiResponseXmlStandard
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NiResponseXmlStandard`
        """
        model = NiResponseXmlStandard()
        if include_optional:
            return NiResponseXmlStandard(
                caller_identity = openapi_client.models.ni_response_xml_standard_caller_identity.niResponseXmlStandard_caller_identity(
                    caller_name = 'John Smith', 
                    caller_type = 'consumer', 
                    caller_name = 'John Smith', 
                    caller_type = 'consumer', 
                    firs_name = 'John', 
                    first_name = 'John', 
                    last_name = 'Smith', 
                    last_name = 'Smith', ),
                current_carrier = openapi_client.models.ni_current_carrier_properties.niCurrentCarrierProperties(
                    country = 'GB', 
                    name = 'Acme Inc', 
                    network_code = '12345', 
                    network_type = 'mobile', ),
                error = openapi_client.models.ni_response_xml_basic_error.niResponseXmlBasic_error(
                    code = '0', 
                    status_text = 'Success', ),
                international_format_number = '447700900000',
                local_number = openapi_client.models.ni_response_xml_basic_local_number.niResponseXmlBasic_local_number(
                    country_code = 'GB', 
                    country_code_iso3 = 'GBR', 
                    country_name = 'United Kingdom', 
                    country_prefix = '44', 
                    number = '07700 900000', ),
                original_carrier = openapi_client.models.ni_initial_carrier_properties.niInitialCarrierProperties(
                    country = 'GB', 
                    name = 'Acme Inc', 
                    network_code = '12345', 
                    network_type = 'mobile', ),
                ported = openapi_client.models.ni_response_xml_standard_ported.niResponseXmlStandard_ported(
                    ported_message = 'not_ported', ),
                remaining_balance = '1.23456789',
                request_id = 'aaaaaaaa-bbbb-cccc-dddd-0123456789ab',
                request_price = '0.01500000'
            )
        else:
            return NiResponseXmlStandard(
        )
        """

    def testNiResponseXmlStandard(self):
        """Test NiResponseXmlStandard"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
