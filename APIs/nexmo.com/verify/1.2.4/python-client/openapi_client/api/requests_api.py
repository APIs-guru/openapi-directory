# coding: utf-8

"""
    Verify API

    The Verify API helps you to implement 2FA (two-factor authentication) in your applications. This is useful for:  * Protecting against spam, by preventing spammers from creating multiple accounts * Monitoring suspicious activity, by forcing an account user to verify ownership of a number * Ensuring that you can reach your users at any time because you have their correct phone number More information is available at <https://developer.nexmo.com/verify>

    The version of the OpenAPI document: 1.2.4
    Contact: devrel@vonage.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictInt, StrictStr, field_validator
from typing import Optional
from typing_extensions import Annotated
from openapi_client.models.verify_request_with_psd2200_response import VerifyRequestWithPSD2200Response

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class RequestsApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def verify_request(
        self,
        format: Annotated[StrictStr, Field(description="The response format.")],
        api_key: Annotated[StrictStr, Field(description="You can find your API key in your [account dashboard](https://dashboard.nexmo.com)")],
        api_secret: Annotated[StrictStr, Field(description="You can find your API secret in your [account dashboard](https://dashboard.nexmo.com)")],
        brand: Annotated[str, Field(strict=True, max_length=18, description="An 18-character alphanumeric string you can use to personalize the verification request SMS body, to help users identify your company or application name. For example: \\\"Your `Acme Inc` PIN is ...\\\"")],
        number: Annotated[StrictStr, Field(description="The mobile or landline phone number to verify. Unless you are setting `country` explicitly, this number must be in [E.164](https://en.wikipedia.org/wiki/E.164) format.")],
        code_length: Annotated[Optional[StrictInt], Field(description="The length of the verification code.")] = None,
        country: Annotated[Optional[StrictStr], Field(description="If you do not provide `number` in international format or you are not sure if `number` is correctly formatted, specify the two-character country code in `country`. Verify will then format the number for you.")] = None,
        lg: Annotated[Optional[StrictStr], Field(description="By default, the SMS or text-to-speech (TTS) message is generated in the locale that matches the `number`. For example, the text message or TTS message for a `33*` number is sent in French. Use this parameter to explicitly control the language used for the Verify request. A list of languages is available: <https://developer.nexmo.com/verify/guides/verify-languages>")] = None,
        next_event_wait: Annotated[Optional[Annotated[int, Field(le=900, strict=True, ge=60)]], Field(description="Specifies the wait time in seconds between attempts to deliver the verification code.")] = None,
        pin_code: Annotated[Optional[Annotated[str, Field(strict=True)]], Field(description="A custom PIN to send to the user. If a PIN is not provided, Verify will generate a random PIN for you. <b>This feature is not enabled by default</b> - please discuss with your Account Manager if you would like it enabled. If this feature is not enabled on your account, error status `20` will be returned.")] = None,
        pin_expiry: Annotated[Optional[Annotated[int, Field(le=3600, strict=True, ge=60)]], Field(description="How long the generated verification code is valid for, in seconds. When you specify both `pin_expiry` and `next_event_wait` then `pin_expiry` must be an integer multiple of `next_event_wait` otherwise `pin_expiry` is defaulted to equal next_event_wait. See [changing the event timings](https://developer.nexmo.com/verify/guides/changing-default-timings).")] = None,
        sender_id: Annotated[Optional[Annotated[str, Field(strict=True, max_length=11)]], Field(description="An 11-character alphanumeric string that represents the [identity of the sender](https://developer.nexmo.com/messaging/sms/guides/custom-sender-id) of the verification request. Depending on the destination of the phone number you are sending the verification SMS to, restrictions might apply.")] = None,
        workflow_id: Annotated[Optional[StrictInt], Field(description="Selects the predefined sequence of SMS and TTS (Text To Speech) actions to use in order to convey the PIN to your user. For example, an id of 1 identifies the workflow SMS - TTS - TTS. For a list of all workflows and their associated ids, please visit the [developer portal](https://developer.nexmo.com/verify/guides/workflows-and-events).")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> VerifyRequestWithPSD2200Response:
        """Request a Verification

        Use Verify request to generate and send a PIN to your user:  1. Create a request to send a verification code to your user.  2. Check the `status` field in the response to ensure that your request was successful (zero is success).  3. Use the `request_id` field in the response for the Verify check.  *Note that this endpoint is available by `GET` request as well as `POST`.*

        :param format: The response format. (required)
        :type format: str
        :param api_key: You can find your API key in your [account dashboard](https://dashboard.nexmo.com) (required)
        :type api_key: str
        :param api_secret: You can find your API secret in your [account dashboard](https://dashboard.nexmo.com) (required)
        :type api_secret: str
        :param brand: An 18-character alphanumeric string you can use to personalize the verification request SMS body, to help users identify your company or application name. For example: \\\"Your `Acme Inc` PIN is ...\\\" (required)
        :type brand: str
        :param number: The mobile or landline phone number to verify. Unless you are setting `country` explicitly, this number must be in [E.164](https://en.wikipedia.org/wiki/E.164) format. (required)
        :type number: str
        :param code_length: The length of the verification code.
        :type code_length: int
        :param country: If you do not provide `number` in international format or you are not sure if `number` is correctly formatted, specify the two-character country code in `country`. Verify will then format the number for you.
        :type country: str
        :param lg: By default, the SMS or text-to-speech (TTS) message is generated in the locale that matches the `number`. For example, the text message or TTS message for a `33*` number is sent in French. Use this parameter to explicitly control the language used for the Verify request. A list of languages is available: <https://developer.nexmo.com/verify/guides/verify-languages>
        :type lg: str
        :param next_event_wait: Specifies the wait time in seconds between attempts to deliver the verification code.
        :type next_event_wait: int
        :param pin_code: A custom PIN to send to the user. If a PIN is not provided, Verify will generate a random PIN for you. <b>This feature is not enabled by default</b> - please discuss with your Account Manager if you would like it enabled. If this feature is not enabled on your account, error status `20` will be returned.
        :type pin_code: str
        :param pin_expiry: How long the generated verification code is valid for, in seconds. When you specify both `pin_expiry` and `next_event_wait` then `pin_expiry` must be an integer multiple of `next_event_wait` otherwise `pin_expiry` is defaulted to equal next_event_wait. See [changing the event timings](https://developer.nexmo.com/verify/guides/changing-default-timings).
        :type pin_expiry: int
        :param sender_id: An 11-character alphanumeric string that represents the [identity of the sender](https://developer.nexmo.com/messaging/sms/guides/custom-sender-id) of the verification request. Depending on the destination of the phone number you are sending the verification SMS to, restrictions might apply.
        :type sender_id: str
        :param workflow_id: Selects the predefined sequence of SMS and TTS (Text To Speech) actions to use in order to convey the PIN to your user. For example, an id of 1 identifies the workflow SMS - TTS - TTS. For a list of all workflows and their associated ids, please visit the [developer portal](https://developer.nexmo.com/verify/guides/workflows-and-events).
        :type workflow_id: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._verify_request_serialize(
            format=format,
            api_key=api_key,
            api_secret=api_secret,
            brand=brand,
            number=number,
            code_length=code_length,
            country=country,
            lg=lg,
            next_event_wait=next_event_wait,
            pin_code=pin_code,
            pin_expiry=pin_expiry,
            sender_id=sender_id,
            workflow_id=workflow_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "VerifyRequestWithPSD2200Response",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def verify_request_with_http_info(
        self,
        format: Annotated[StrictStr, Field(description="The response format.")],
        api_key: Annotated[StrictStr, Field(description="You can find your API key in your [account dashboard](https://dashboard.nexmo.com)")],
        api_secret: Annotated[StrictStr, Field(description="You can find your API secret in your [account dashboard](https://dashboard.nexmo.com)")],
        brand: Annotated[str, Field(strict=True, max_length=18, description="An 18-character alphanumeric string you can use to personalize the verification request SMS body, to help users identify your company or application name. For example: \\\"Your `Acme Inc` PIN is ...\\\"")],
        number: Annotated[StrictStr, Field(description="The mobile or landline phone number to verify. Unless you are setting `country` explicitly, this number must be in [E.164](https://en.wikipedia.org/wiki/E.164) format.")],
        code_length: Annotated[Optional[StrictInt], Field(description="The length of the verification code.")] = None,
        country: Annotated[Optional[StrictStr], Field(description="If you do not provide `number` in international format or you are not sure if `number` is correctly formatted, specify the two-character country code in `country`. Verify will then format the number for you.")] = None,
        lg: Annotated[Optional[StrictStr], Field(description="By default, the SMS or text-to-speech (TTS) message is generated in the locale that matches the `number`. For example, the text message or TTS message for a `33*` number is sent in French. Use this parameter to explicitly control the language used for the Verify request. A list of languages is available: <https://developer.nexmo.com/verify/guides/verify-languages>")] = None,
        next_event_wait: Annotated[Optional[Annotated[int, Field(le=900, strict=True, ge=60)]], Field(description="Specifies the wait time in seconds between attempts to deliver the verification code.")] = None,
        pin_code: Annotated[Optional[Annotated[str, Field(strict=True)]], Field(description="A custom PIN to send to the user. If a PIN is not provided, Verify will generate a random PIN for you. <b>This feature is not enabled by default</b> - please discuss with your Account Manager if you would like it enabled. If this feature is not enabled on your account, error status `20` will be returned.")] = None,
        pin_expiry: Annotated[Optional[Annotated[int, Field(le=3600, strict=True, ge=60)]], Field(description="How long the generated verification code is valid for, in seconds. When you specify both `pin_expiry` and `next_event_wait` then `pin_expiry` must be an integer multiple of `next_event_wait` otherwise `pin_expiry` is defaulted to equal next_event_wait. See [changing the event timings](https://developer.nexmo.com/verify/guides/changing-default-timings).")] = None,
        sender_id: Annotated[Optional[Annotated[str, Field(strict=True, max_length=11)]], Field(description="An 11-character alphanumeric string that represents the [identity of the sender](https://developer.nexmo.com/messaging/sms/guides/custom-sender-id) of the verification request. Depending on the destination of the phone number you are sending the verification SMS to, restrictions might apply.")] = None,
        workflow_id: Annotated[Optional[StrictInt], Field(description="Selects the predefined sequence of SMS and TTS (Text To Speech) actions to use in order to convey the PIN to your user. For example, an id of 1 identifies the workflow SMS - TTS - TTS. For a list of all workflows and their associated ids, please visit the [developer portal](https://developer.nexmo.com/verify/guides/workflows-and-events).")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[VerifyRequestWithPSD2200Response]:
        """Request a Verification

        Use Verify request to generate and send a PIN to your user:  1. Create a request to send a verification code to your user.  2. Check the `status` field in the response to ensure that your request was successful (zero is success).  3. Use the `request_id` field in the response for the Verify check.  *Note that this endpoint is available by `GET` request as well as `POST`.*

        :param format: The response format. (required)
        :type format: str
        :param api_key: You can find your API key in your [account dashboard](https://dashboard.nexmo.com) (required)
        :type api_key: str
        :param api_secret: You can find your API secret in your [account dashboard](https://dashboard.nexmo.com) (required)
        :type api_secret: str
        :param brand: An 18-character alphanumeric string you can use to personalize the verification request SMS body, to help users identify your company or application name. For example: \\\"Your `Acme Inc` PIN is ...\\\" (required)
        :type brand: str
        :param number: The mobile or landline phone number to verify. Unless you are setting `country` explicitly, this number must be in [E.164](https://en.wikipedia.org/wiki/E.164) format. (required)
        :type number: str
        :param code_length: The length of the verification code.
        :type code_length: int
        :param country: If you do not provide `number` in international format or you are not sure if `number` is correctly formatted, specify the two-character country code in `country`. Verify will then format the number for you.
        :type country: str
        :param lg: By default, the SMS or text-to-speech (TTS) message is generated in the locale that matches the `number`. For example, the text message or TTS message for a `33*` number is sent in French. Use this parameter to explicitly control the language used for the Verify request. A list of languages is available: <https://developer.nexmo.com/verify/guides/verify-languages>
        :type lg: str
        :param next_event_wait: Specifies the wait time in seconds between attempts to deliver the verification code.
        :type next_event_wait: int
        :param pin_code: A custom PIN to send to the user. If a PIN is not provided, Verify will generate a random PIN for you. <b>This feature is not enabled by default</b> - please discuss with your Account Manager if you would like it enabled. If this feature is not enabled on your account, error status `20` will be returned.
        :type pin_code: str
        :param pin_expiry: How long the generated verification code is valid for, in seconds. When you specify both `pin_expiry` and `next_event_wait` then `pin_expiry` must be an integer multiple of `next_event_wait` otherwise `pin_expiry` is defaulted to equal next_event_wait. See [changing the event timings](https://developer.nexmo.com/verify/guides/changing-default-timings).
        :type pin_expiry: int
        :param sender_id: An 11-character alphanumeric string that represents the [identity of the sender](https://developer.nexmo.com/messaging/sms/guides/custom-sender-id) of the verification request. Depending on the destination of the phone number you are sending the verification SMS to, restrictions might apply.
        :type sender_id: str
        :param workflow_id: Selects the predefined sequence of SMS and TTS (Text To Speech) actions to use in order to convey the PIN to your user. For example, an id of 1 identifies the workflow SMS - TTS - TTS. For a list of all workflows and their associated ids, please visit the [developer portal](https://developer.nexmo.com/verify/guides/workflows-and-events).
        :type workflow_id: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._verify_request_serialize(
            format=format,
            api_key=api_key,
            api_secret=api_secret,
            brand=brand,
            number=number,
            code_length=code_length,
            country=country,
            lg=lg,
            next_event_wait=next_event_wait,
            pin_code=pin_code,
            pin_expiry=pin_expiry,
            sender_id=sender_id,
            workflow_id=workflow_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "VerifyRequestWithPSD2200Response",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def verify_request_without_preload_content(
        self,
        format: Annotated[StrictStr, Field(description="The response format.")],
        api_key: Annotated[StrictStr, Field(description="You can find your API key in your [account dashboard](https://dashboard.nexmo.com)")],
        api_secret: Annotated[StrictStr, Field(description="You can find your API secret in your [account dashboard](https://dashboard.nexmo.com)")],
        brand: Annotated[str, Field(strict=True, max_length=18, description="An 18-character alphanumeric string you can use to personalize the verification request SMS body, to help users identify your company or application name. For example: \\\"Your `Acme Inc` PIN is ...\\\"")],
        number: Annotated[StrictStr, Field(description="The mobile or landline phone number to verify. Unless you are setting `country` explicitly, this number must be in [E.164](https://en.wikipedia.org/wiki/E.164) format.")],
        code_length: Annotated[Optional[StrictInt], Field(description="The length of the verification code.")] = None,
        country: Annotated[Optional[StrictStr], Field(description="If you do not provide `number` in international format or you are not sure if `number` is correctly formatted, specify the two-character country code in `country`. Verify will then format the number for you.")] = None,
        lg: Annotated[Optional[StrictStr], Field(description="By default, the SMS or text-to-speech (TTS) message is generated in the locale that matches the `number`. For example, the text message or TTS message for a `33*` number is sent in French. Use this parameter to explicitly control the language used for the Verify request. A list of languages is available: <https://developer.nexmo.com/verify/guides/verify-languages>")] = None,
        next_event_wait: Annotated[Optional[Annotated[int, Field(le=900, strict=True, ge=60)]], Field(description="Specifies the wait time in seconds between attempts to deliver the verification code.")] = None,
        pin_code: Annotated[Optional[Annotated[str, Field(strict=True)]], Field(description="A custom PIN to send to the user. If a PIN is not provided, Verify will generate a random PIN for you. <b>This feature is not enabled by default</b> - please discuss with your Account Manager if you would like it enabled. If this feature is not enabled on your account, error status `20` will be returned.")] = None,
        pin_expiry: Annotated[Optional[Annotated[int, Field(le=3600, strict=True, ge=60)]], Field(description="How long the generated verification code is valid for, in seconds. When you specify both `pin_expiry` and `next_event_wait` then `pin_expiry` must be an integer multiple of `next_event_wait` otherwise `pin_expiry` is defaulted to equal next_event_wait. See [changing the event timings](https://developer.nexmo.com/verify/guides/changing-default-timings).")] = None,
        sender_id: Annotated[Optional[Annotated[str, Field(strict=True, max_length=11)]], Field(description="An 11-character alphanumeric string that represents the [identity of the sender](https://developer.nexmo.com/messaging/sms/guides/custom-sender-id) of the verification request. Depending on the destination of the phone number you are sending the verification SMS to, restrictions might apply.")] = None,
        workflow_id: Annotated[Optional[StrictInt], Field(description="Selects the predefined sequence of SMS and TTS (Text To Speech) actions to use in order to convey the PIN to your user. For example, an id of 1 identifies the workflow SMS - TTS - TTS. For a list of all workflows and their associated ids, please visit the [developer portal](https://developer.nexmo.com/verify/guides/workflows-and-events).")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Request a Verification

        Use Verify request to generate and send a PIN to your user:  1. Create a request to send a verification code to your user.  2. Check the `status` field in the response to ensure that your request was successful (zero is success).  3. Use the `request_id` field in the response for the Verify check.  *Note that this endpoint is available by `GET` request as well as `POST`.*

        :param format: The response format. (required)
        :type format: str
        :param api_key: You can find your API key in your [account dashboard](https://dashboard.nexmo.com) (required)
        :type api_key: str
        :param api_secret: You can find your API secret in your [account dashboard](https://dashboard.nexmo.com) (required)
        :type api_secret: str
        :param brand: An 18-character alphanumeric string you can use to personalize the verification request SMS body, to help users identify your company or application name. For example: \\\"Your `Acme Inc` PIN is ...\\\" (required)
        :type brand: str
        :param number: The mobile or landline phone number to verify. Unless you are setting `country` explicitly, this number must be in [E.164](https://en.wikipedia.org/wiki/E.164) format. (required)
        :type number: str
        :param code_length: The length of the verification code.
        :type code_length: int
        :param country: If you do not provide `number` in international format or you are not sure if `number` is correctly formatted, specify the two-character country code in `country`. Verify will then format the number for you.
        :type country: str
        :param lg: By default, the SMS or text-to-speech (TTS) message is generated in the locale that matches the `number`. For example, the text message or TTS message for a `33*` number is sent in French. Use this parameter to explicitly control the language used for the Verify request. A list of languages is available: <https://developer.nexmo.com/verify/guides/verify-languages>
        :type lg: str
        :param next_event_wait: Specifies the wait time in seconds between attempts to deliver the verification code.
        :type next_event_wait: int
        :param pin_code: A custom PIN to send to the user. If a PIN is not provided, Verify will generate a random PIN for you. <b>This feature is not enabled by default</b> - please discuss with your Account Manager if you would like it enabled. If this feature is not enabled on your account, error status `20` will be returned.
        :type pin_code: str
        :param pin_expiry: How long the generated verification code is valid for, in seconds. When you specify both `pin_expiry` and `next_event_wait` then `pin_expiry` must be an integer multiple of `next_event_wait` otherwise `pin_expiry` is defaulted to equal next_event_wait. See [changing the event timings](https://developer.nexmo.com/verify/guides/changing-default-timings).
        :type pin_expiry: int
        :param sender_id: An 11-character alphanumeric string that represents the [identity of the sender](https://developer.nexmo.com/messaging/sms/guides/custom-sender-id) of the verification request. Depending on the destination of the phone number you are sending the verification SMS to, restrictions might apply.
        :type sender_id: str
        :param workflow_id: Selects the predefined sequence of SMS and TTS (Text To Speech) actions to use in order to convey the PIN to your user. For example, an id of 1 identifies the workflow SMS - TTS - TTS. For a list of all workflows and their associated ids, please visit the [developer portal](https://developer.nexmo.com/verify/guides/workflows-and-events).
        :type workflow_id: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._verify_request_serialize(
            format=format,
            api_key=api_key,
            api_secret=api_secret,
            brand=brand,
            number=number,
            code_length=code_length,
            country=country,
            lg=lg,
            next_event_wait=next_event_wait,
            pin_code=pin_code,
            pin_expiry=pin_expiry,
            sender_id=sender_id,
            workflow_id=workflow_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "VerifyRequestWithPSD2200Response",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _verify_request_serialize(
        self,
        format,
        api_key,
        api_secret,
        brand,
        number,
        code_length,
        country,
        lg,
        next_event_wait,
        pin_code,
        pin_expiry,
        sender_id,
        workflow_id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if format is not None:
            _path_params['format'] = format
        # process the query parameters
        # process the header parameters
        # process the form parameters
        if api_key is not None:
            _form_params.append(('api_key', api_key))
        if api_secret is not None:
            _form_params.append(('api_secret', api_secret))
        if brand is not None:
            _form_params.append(('brand', brand))
        if code_length is not None:
            _form_params.append(('code_length', code_length))
        if country is not None:
            _form_params.append(('country', country))
        if lg is not None:
            _form_params.append(('lg', lg))
        if next_event_wait is not None:
            _form_params.append(('next_event_wait', next_event_wait))
        if number is not None:
            _form_params.append(('number', number))
        if pin_code is not None:
            _form_params.append(('pin_code', pin_code))
        if pin_expiry is not None:
            _form_params.append(('pin_expiry', pin_expiry))
        if sender_id is not None:
            _form_params.append(('sender_id', sender_id))
        if workflow_id is not None:
            _form_params.append(('workflow_id', workflow_id))
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json', 
                    'text/xml'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/x-www-form-urlencoded'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/{format}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


