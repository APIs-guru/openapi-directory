# coding: utf-8

"""
    Numbers API

    The Numbers API enables you to manage your existing numbers and buy new virtual numbers for use with the Vonage APIs. Further information is here: <https://developer.nexmo.com/numbers/overview>

    The version of the OpenAPI document: 1.0.20
    Contact: devrel@vonage.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.inbound_numbers import InboundNumbers

class TestInboundNumbers(unittest.TestCase):
    """InboundNumbers unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> InboundNumbers:
        """Test InboundNumbers
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `InboundNumbers`
        """
        model = InboundNumbers()
        if include_optional:
            return InboundNumbers(
                count = 1,
                numbers = [
                    openapi_client.models.ownednumber.ownednumber(
                        country = 'GB', 
                        features = ["VOICE","SMS","MMS"], 
                        messages_callback_type = 'app', 
                        messages_callback_value = 'aaaaaaaa-bbbb-cccc-dddd-0123456789ab', 
                        mo_http_url = 'https://example.com/webhooks/inbound-sms', 
                        msisdn = '447700900000', 
                        type = 'mobile-lvn', 
                        voice_callback_type = 'app', 
                        voice_callback_value = 'aaaaaaaa-bbbb-cccc-dddd-0123456789ab', )
                    ]
            )
        else:
            return InboundNumbers(
        )
        """

    def testInboundNumbers(self):
        """Test InboundNumbers"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
