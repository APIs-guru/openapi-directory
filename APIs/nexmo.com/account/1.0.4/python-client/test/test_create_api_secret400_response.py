# coding: utf-8

"""
    Account API

    Enables users to manage their Vonage API Account by programmable means. More information is available here: <https://developer.nexmo.com/account/overview>.

    The version of the OpenAPI document: 1.0.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.create_api_secret400_response import CreateAPISecret400Response

class TestCreateAPISecret400Response(unittest.TestCase):
    """CreateAPISecret400Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateAPISecret400Response:
        """Test CreateAPISecret400Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateAPISecret400Response`
        """
        model = CreateAPISecret400Response()
        if include_optional:
            return CreateAPISecret400Response(
                detail = 'The request failed due to secret validation errors',
                instance = 'bf0ca0bf927b3b52e3cb03217e1a1ddf',
                invalid_parameters = [
                    openapi_client.models.create_api_secret_400_response_invalid_parameters_inner.createAPISecret_400_response_invalid_parameters_inner(
                        name = 'secret', 
                        reason = 'Does not meet complexity requirements', )
                    ],
                title = 'Bad Request',
                type = 'https://developer.nexmo.com/api-errors/account/secret-management#validation'
            )
        else:
            return CreateAPISecret400Response(
        )
        """

    def testCreateAPISecret400Response(self):
        """Test CreateAPISecret400Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
