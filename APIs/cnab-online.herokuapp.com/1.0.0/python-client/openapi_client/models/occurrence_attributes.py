# coding: utf-8

"""
    Cnab Online

    Processe arquivos de retorno CNAB

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field, StrictBool, StrictFloat, StrictInt, StrictStr
from typing import Any, ClassVar, Dict, List, Optional, Union
from typing import Optional, Set
from typing_extensions import Self

class OccurrenceAttributes(BaseModel):
    """
    OccurrenceAttributes
    """ # noqa: E501
    agency: Optional[StrictStr] = Field(default=None, description="Retorna o número da agencia")
    bank_tax: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="Tarifa bancária")
    charged_agency: Optional[StrictStr] = Field(default=None, description="Retorna a agencia cobradora (com o digito)")
    code: Optional[StrictStr] = Field(default=None, description="Código de Ocorrência conforme o padrão CNAB")
    code_name: Optional[StrictStr] = Field(default=None, description="Nome do código")
    credit_date: Optional[StrictStr] = Field(default=None, description="Retorna a data em que o dinheiro caiu na conta")
    discount_value: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="Valor de desconto")
    document_number: Optional[StrictStr] = Field(default=None, description="Retorna o número do documento do boleto")
    due_date: Optional[StrictStr] = Field(default=None, description="Retorna a data de vencimento de boleto")
    iof_tax: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="Retorna o valor do Imposto sobre operações financeiras (IOF)")
    is_dda: Optional[StrictStr] = Field(default=None, description="Retorna de o boleto foi pago através do Débito Direto Autorizado")
    is_payment: Optional[StrictBool] = Field(default=None, description="Retorna se é para dar baixa no boleto")
    is_rejected_payment: Optional[StrictBool] = Field(default=None, description="Retorno se é uma baixa rejeitada (Ex: pedido de baixa foi rejeitado)")
    liquidation_code: Optional[StrictStr] = Field(default=None, description="Retorna o código de liquidação, normalmente usado para saber onde o cliente efetuou o pagamento")
    liquidation_description: Optional[StrictStr] = Field(default=None, description="Retorna a descrição do código de liquidação")
    mulct_value: Optional[StrictStr] = Field(default=None, description="Retorna o valor de juros e mora")
    occurrence_date: Optional[StrictStr] = Field(default=None, description="Retorna a data da ocorrencia, o dia do pagamento")
    others_credits_value: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="Retorna o valor de outros creditos")
    our_number: Optional[StrictStr] = Field(default=None, description="Retorna o nosso número do boleto (sem o digito)")
    payer_allegation: Optional[StrictStr] = Field(default=None, description="Retorna a alegação do pagador (para erros)")
    rebate_value: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="Retornna o valor dos abatimentos concedidos (depois da emissão)")
    received_value: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="Valor recebido")
    sequencial_number: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="Retorna o numero sequencial da ocorrência no arquivo")
    title_value: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="Valor do título (valor do boleto)")
    wallet: Optional[StrictStr] = Field(default=None, description="Retorna o número da carteira do boleto")
    __properties: ClassVar[List[str]] = ["agency", "bank_tax", "charged_agency", "code", "code_name", "credit_date", "discount_value", "document_number", "due_date", "iof_tax", "is_dda", "is_payment", "is_rejected_payment", "liquidation_code", "liquidation_description", "mulct_value", "occurrence_date", "others_credits_value", "our_number", "payer_allegation", "rebate_value", "received_value", "sequencial_number", "title_value", "wallet"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of OccurrenceAttributes from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of OccurrenceAttributes from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "agency": obj.get("agency"),
            "bank_tax": obj.get("bank_tax"),
            "charged_agency": obj.get("charged_agency"),
            "code": obj.get("code"),
            "code_name": obj.get("code_name"),
            "credit_date": obj.get("credit_date"),
            "discount_value": obj.get("discount_value"),
            "document_number": obj.get("document_number"),
            "due_date": obj.get("due_date"),
            "iof_tax": obj.get("iof_tax"),
            "is_dda": obj.get("is_dda"),
            "is_payment": obj.get("is_payment"),
            "is_rejected_payment": obj.get("is_rejected_payment"),
            "liquidation_code": obj.get("liquidation_code"),
            "liquidation_description": obj.get("liquidation_description"),
            "mulct_value": obj.get("mulct_value"),
            "occurrence_date": obj.get("occurrence_date"),
            "others_credits_value": obj.get("others_credits_value"),
            "our_number": obj.get("our_number"),
            "payer_allegation": obj.get("payer_allegation"),
            "rebate_value": obj.get("rebate_value"),
            "received_value": obj.get("received_value"),
            "sequencial_number": obj.get("sequencial_number"),
            "title_value": obj.get("title_value"),
            "wallet": obj.get("wallet")
        })
        return _obj


