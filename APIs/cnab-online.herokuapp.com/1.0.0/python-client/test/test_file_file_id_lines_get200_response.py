# coding: utf-8

"""
    Cnab Online

    Processe arquivos de retorno CNAB

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.file_file_id_lines_get200_response import FileFileIdLinesGet200Response

class TestFileFileIdLinesGet200Response(unittest.TestCase):
    """FileFileIdLinesGet200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FileFileIdLinesGet200Response:
        """Test FileFileIdLinesGet200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FileFileIdLinesGet200Response`
        """
        model = FileFileIdLinesGet200Response()
        if include_optional:
            return FileFileIdLinesGet200Response(
                data = [
                    openapi_client.models.line.Line(
                        attributes = openapi_client.models.line_attributes.Line_attributes(
                            identified_fields = [
                                openapi_client.models.line_attributes_identified_fields_inner.Line_attributes_identified_fields_inner(
                                    end = 56, 
                                    name = '', 
                                    start = 56, 
                                    value = '', )
                                ], 
                            raw_text = '', ), 
                        id = '', 
                        type = '', )
                    ]
            )
        else:
            return FileFileIdLinesGet200Response(
        )
        """

    def testFileFileIdLinesGet200Response(self):
        """Test FileFileIdLinesGet200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
