# coding: utf-8

"""
    Billbee API

    Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  

    The version of the OpenAPI document: v1
    Contact: support@billbee.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from datetime import datetime
from pydantic import BaseModel, ConfigDict, Field, StrictInt, StrictStr
from typing import Any, ClassVar, Dict, List, Optional
from openapi_client.models.billbee_interfaces_billbee_api_model_customer_address_api_model import BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel
from openapi_client.models.billbee_interfaces_billbee_api_models_customer_meta_data_api_model import BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataApiModel
from typing import Optional, Set
from typing_extensions import Self

class BillbeeInterfacesBillbeeAPIModelCreateCustomerApiModel(BaseModel):
    """
    BillbeeInterfacesBillbeeAPIModelCreateCustomerApiModel
    """ # noqa: E501
    address: Optional[BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel] = Field(default=None, alias="Address")
    archived_at: Optional[datetime] = Field(default=None, description="If set, the customer was already archived at the given date. Further modification is disabled.", alias="ArchivedAt")
    default_commercial_mail_address: Optional[BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataApiModel] = Field(default=None, alias="DefaultCommercialMailAddress")
    default_fax: Optional[BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataApiModel] = Field(default=None, alias="DefaultFax")
    default_mail_address: Optional[BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataApiModel] = Field(default=None, alias="DefaultMailAddress")
    default_phone1: Optional[BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataApiModel] = Field(default=None, alias="DefaultPhone1")
    default_phone2: Optional[BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataApiModel] = Field(default=None, alias="DefaultPhone2")
    default_status_updates_mail_address: Optional[BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataApiModel] = Field(default=None, alias="DefaultStatusUpdatesMailAddress")
    email: Optional[StrictStr] = Field(default=None, alias="Email")
    id: Optional[StrictInt] = Field(default=None, description="The Billbee Id of the customer", alias="Id")
    language_id: Optional[StrictInt] = Field(default=None, alias="LanguageId")
    meta_data: Optional[List[BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataApiModel]] = Field(default=None, alias="MetaData")
    name: Optional[StrictStr] = Field(default=None, alias="Name")
    number: Optional[StrictInt] = Field(default=None, alias="Number")
    price_group_id: Optional[StrictInt] = Field(default=None, alias="PriceGroupId")
    restored_at: Optional[datetime] = Field(default=None, description="If set, the customer was restored from the archive at the given date.", alias="RestoredAt")
    tel1: Optional[StrictStr] = Field(default=None, alias="Tel1")
    tel2: Optional[StrictStr] = Field(default=None, alias="Tel2")
    type: Optional[StrictInt] = Field(default=None, description="Customer Type", alias="Type")
    vat_id: Optional[StrictStr] = Field(default=None, description="The vat-id, that should be saved at the customer. Only used if CustomerVatId is not set on the order.", alias="VatId")
    __properties: ClassVar[List[str]] = ["Address", "ArchivedAt", "DefaultCommercialMailAddress", "DefaultFax", "DefaultMailAddress", "DefaultPhone1", "DefaultPhone2", "DefaultStatusUpdatesMailAddress", "Email", "Id", "LanguageId", "MetaData", "Name", "Number", "PriceGroupId", "RestoredAt", "Tel1", "Tel2", "Type", "VatId"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of BillbeeInterfacesBillbeeAPIModelCreateCustomerApiModel from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of address
        if self.address:
            _dict['Address'] = self.address.to_dict()
        # override the default output from pydantic by calling `to_dict()` of default_commercial_mail_address
        if self.default_commercial_mail_address:
            _dict['DefaultCommercialMailAddress'] = self.default_commercial_mail_address.to_dict()
        # override the default output from pydantic by calling `to_dict()` of default_fax
        if self.default_fax:
            _dict['DefaultFax'] = self.default_fax.to_dict()
        # override the default output from pydantic by calling `to_dict()` of default_mail_address
        if self.default_mail_address:
            _dict['DefaultMailAddress'] = self.default_mail_address.to_dict()
        # override the default output from pydantic by calling `to_dict()` of default_phone1
        if self.default_phone1:
            _dict['DefaultPhone1'] = self.default_phone1.to_dict()
        # override the default output from pydantic by calling `to_dict()` of default_phone2
        if self.default_phone2:
            _dict['DefaultPhone2'] = self.default_phone2.to_dict()
        # override the default output from pydantic by calling `to_dict()` of default_status_updates_mail_address
        if self.default_status_updates_mail_address:
            _dict['DefaultStatusUpdatesMailAddress'] = self.default_status_updates_mail_address.to_dict()
        # override the default output from pydantic by calling `to_dict()` of each item in meta_data (list)
        _items = []
        if self.meta_data:
            for _item_meta_data in self.meta_data:
                if _item_meta_data:
                    _items.append(_item_meta_data.to_dict())
            _dict['MetaData'] = _items
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of BillbeeInterfacesBillbeeAPIModelCreateCustomerApiModel from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "Address": BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel.from_dict(obj["Address"]) if obj.get("Address") is not None else None,
            "ArchivedAt": obj.get("ArchivedAt"),
            "DefaultCommercialMailAddress": BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataApiModel.from_dict(obj["DefaultCommercialMailAddress"]) if obj.get("DefaultCommercialMailAddress") is not None else None,
            "DefaultFax": BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataApiModel.from_dict(obj["DefaultFax"]) if obj.get("DefaultFax") is not None else None,
            "DefaultMailAddress": BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataApiModel.from_dict(obj["DefaultMailAddress"]) if obj.get("DefaultMailAddress") is not None else None,
            "DefaultPhone1": BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataApiModel.from_dict(obj["DefaultPhone1"]) if obj.get("DefaultPhone1") is not None else None,
            "DefaultPhone2": BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataApiModel.from_dict(obj["DefaultPhone2"]) if obj.get("DefaultPhone2") is not None else None,
            "DefaultStatusUpdatesMailAddress": BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataApiModel.from_dict(obj["DefaultStatusUpdatesMailAddress"]) if obj.get("DefaultStatusUpdatesMailAddress") is not None else None,
            "Email": obj.get("Email"),
            "Id": obj.get("Id"),
            "LanguageId": obj.get("LanguageId"),
            "MetaData": [BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataApiModel.from_dict(_item) for _item in obj["MetaData"]] if obj.get("MetaData") is not None else None,
            "Name": obj.get("Name"),
            "Number": obj.get("Number"),
            "PriceGroupId": obj.get("PriceGroupId"),
            "RestoredAt": obj.get("RestoredAt"),
            "Tel1": obj.get("Tel1"),
            "Tel2": obj.get("Tel2"),
            "Type": obj.get("Type"),
            "VatId": obj.get("VatId")
        })
        return _obj


