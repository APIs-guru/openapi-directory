# coding: utf-8

"""
    Billbee API

    Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  

    The version of the OpenAPI document: v1
    Contact: support@billbee.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.billbee_interfaces_billbee_api_model_order_item import BillbeeInterfacesBillbeeAPIModelOrderItem

class TestBillbeeInterfacesBillbeeAPIModelOrderItem(unittest.TestCase):
    """BillbeeInterfacesBillbeeAPIModelOrderItem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BillbeeInterfacesBillbeeAPIModelOrderItem:
        """Test BillbeeInterfacesBillbeeAPIModelOrderItem
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BillbeeInterfacesBillbeeAPIModelOrderItem`
        """
        model = BillbeeInterfacesBillbeeAPIModelOrderItem()
        if include_optional:
            return BillbeeInterfacesBillbeeAPIModelOrderItem(
                attributes = [
                    openapi_client.models.billbee/interfaces/billbee_api/model/order_item_attribute.Billbee.Interfaces.BillbeeAPI.Model.OrderItemAttribute(
                        id = '', 
                        name = '', 
                        price = 1.337, 
                        value = '', )
                    ],
                billbee_id = 56,
                discount = 1.337,
                dont_adjust_stock = True,
                get_price_from_article_if_any = True,
                invoice_sku = '',
                is_coupon = True,
                product = openapi_client.models.billbee/interfaces/billbee_api/model/sold_product.Billbee.Interfaces.BillbeeAPI.Model.SoldProduct(
                    billbee_id = 56, 
                    country_of_origin = '', 
                    ean = '', 
                    id = '', 
                    images = [
                        openapi_client.models.billbee/interfaces/billbee_api/model/product_image.Billbee.Interfaces.BillbeeAPI.Model.ProductImage(
                            external_id = '', 
                            is_default_image = True, 
                            position = 56, 
                            url = '', )
                        ], 
                    is_digital = True, 
                    old_id = '', 
                    platform_data = '', 
                    sku = '', 
                    sku_or_id = '', 
                    taric_code = '', 
                    title = '', 
                    type = 56, 
                    weight = 56, ),
                quantity = 1.337,
                serial_number = '',
                shipping_profile_id = '',
                tax_amount = 1.337,
                tax_index = 56,
                total_price = 1.337,
                transaction_id = '',
                unrebated_total_price = 1.337
            )
        else:
            return BillbeeInterfacesBillbeeAPIModelOrderItem(
        )
        """

    def testBillbeeInterfacesBillbeeAPIModelOrderItem(self):
        """Test BillbeeInterfacesBillbeeAPIModelOrderItem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
