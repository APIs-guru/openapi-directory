# coding: utf-8

"""
    Billbee API

    Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  

    The version of the OpenAPI document: v1
    Contact: support@billbee.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.billbee_interfaces_billbee_api_model_create_customer_api_model import BillbeeInterfacesBillbeeAPIModelCreateCustomerApiModel

class TestBillbeeInterfacesBillbeeAPIModelCreateCustomerApiModel(unittest.TestCase):
    """BillbeeInterfacesBillbeeAPIModelCreateCustomerApiModel unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BillbeeInterfacesBillbeeAPIModelCreateCustomerApiModel:
        """Test BillbeeInterfacesBillbeeAPIModelCreateCustomerApiModel
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BillbeeInterfacesBillbeeAPIModelCreateCustomerApiModel`
        """
        model = BillbeeInterfacesBillbeeAPIModelCreateCustomerApiModel()
        if include_optional:
            return BillbeeInterfacesBillbeeAPIModelCreateCustomerApiModel(
                address = openapi_client.models.billbee/interfaces/billbee_api/model/customer_address_api_model.Billbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel(
                    address_addition = '', 
                    address_type = 1, 
                    archived_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    city = '', 
                    company = '', 
                    country_code = '', 
                    customer_id = 56, 
                    email = '', 
                    fax = '', 
                    first_name = '', 
                    housenumber = '', 
                    id = 56, 
                    last_name = '', 
                    name2 = '', 
                    restored_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    state = '', 
                    street = '', 
                    tel1 = '', 
                    tel2 = '', 
                    zip = '', ),
                archived_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                default_commercial_mail_address = openapi_client.models.billbee/interfaces/billbee_api/models/customer_meta_data_api_model.Billbee.Interfaces.BillbeeAPI.Models.CustomerMetaDataApiModel(
                    id = 56, 
                    sub_type = '', 
                    type_id = 56, 
                    type_name = '', 
                    value = '', ),
                default_fax = openapi_client.models.billbee/interfaces/billbee_api/models/customer_meta_data_api_model.Billbee.Interfaces.BillbeeAPI.Models.CustomerMetaDataApiModel(
                    id = 56, 
                    sub_type = '', 
                    type_id = 56, 
                    type_name = '', 
                    value = '', ),
                default_mail_address = openapi_client.models.billbee/interfaces/billbee_api/models/customer_meta_data_api_model.Billbee.Interfaces.BillbeeAPI.Models.CustomerMetaDataApiModel(
                    id = 56, 
                    sub_type = '', 
                    type_id = 56, 
                    type_name = '', 
                    value = '', ),
                default_phone1 = openapi_client.models.billbee/interfaces/billbee_api/models/customer_meta_data_api_model.Billbee.Interfaces.BillbeeAPI.Models.CustomerMetaDataApiModel(
                    id = 56, 
                    sub_type = '', 
                    type_id = 56, 
                    type_name = '', 
                    value = '', ),
                default_phone2 = openapi_client.models.billbee/interfaces/billbee_api/models/customer_meta_data_api_model.Billbee.Interfaces.BillbeeAPI.Models.CustomerMetaDataApiModel(
                    id = 56, 
                    sub_type = '', 
                    type_id = 56, 
                    type_name = '', 
                    value = '', ),
                default_status_updates_mail_address = openapi_client.models.billbee/interfaces/billbee_api/models/customer_meta_data_api_model.Billbee.Interfaces.BillbeeAPI.Models.CustomerMetaDataApiModel(
                    id = 56, 
                    sub_type = '', 
                    type_id = 56, 
                    type_name = '', 
                    value = '', ),
                email = '',
                id = 56,
                language_id = 56,
                meta_data = [
                    openapi_client.models.billbee/interfaces/billbee_api/models/customer_meta_data_api_model.Billbee.Interfaces.BillbeeAPI.Models.CustomerMetaDataApiModel(
                        id = 56, 
                        sub_type = '', 
                        type_id = 56, 
                        type_name = '', 
                        value = '', )
                    ],
                name = '',
                number = 56,
                price_group_id = 56,
                restored_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                tel1 = '',
                tel2 = '',
                type = 56,
                vat_id = ''
            )
        else:
            return BillbeeInterfacesBillbeeAPIModelCreateCustomerApiModel(
        )
        """

    def testBillbeeInterfacesBillbeeAPIModelCreateCustomerApiModel(self):
        """Test BillbeeInterfacesBillbeeAPIModelCreateCustomerApiModel"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
