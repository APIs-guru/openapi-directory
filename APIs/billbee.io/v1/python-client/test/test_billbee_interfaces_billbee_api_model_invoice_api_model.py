# coding: utf-8

"""
    Billbee API

    Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  

    The version of the OpenAPI document: v1
    Contact: support@billbee.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.billbee_interfaces_billbee_api_model_invoice_api_model import BillbeeInterfacesBillbeeAPIModelInvoiceApiModel

class TestBillbeeInterfacesBillbeeAPIModelInvoiceApiModel(unittest.TestCase):
    """BillbeeInterfacesBillbeeAPIModelInvoiceApiModel unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BillbeeInterfacesBillbeeAPIModelInvoiceApiModel:
        """Test BillbeeInterfacesBillbeeAPIModelInvoiceApiModel
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BillbeeInterfacesBillbeeAPIModelInvoiceApiModel`
        """
        model = BillbeeInterfacesBillbeeAPIModelInvoiceApiModel()
        if include_optional:
            return BillbeeInterfacesBillbeeAPIModelInvoiceApiModel(
                additional_fees = [
                    openapi_client.models.billbee/interfaces/billbee_api/model/additional_fee_api_model.Billbee.Interfaces.BillbeeAPI.Model.AdditionalFeeApiModel(
                        gross = 1.337, 
                        net = 1.337, 
                        type = '', 
                        vat_amount = 1.337, 
                        vat_rate = 1.337, )
                    ],
                billbee_id = 56,
                company = '',
                currency = '',
                customer_number = 56,
                customer_vat_id = '',
                debtor_number = 56,
                email = '',
                first_name = '',
                invoice_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                invoice_number = '',
                last_name = '',
                merchant_vat_id = '',
                order_number = '',
                pay_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                payment_type_id = 56,
                positions = [
                    openapi_client.models.billbee/interfaces/billbee_api/model/invoice_api_position_api_model.Billbee.Interfaces.BillbeeAPI.Model.InvoiceApiPositionApiModel(
                        amount = 1.337, 
                        article_billbee_id = 56, 
                        billbee_id = 56, 
                        gross_value = 1.337, 
                        net_value = 1.337, 
                        position = 56, 
                        rebate_percent = 1.337, 
                        sku = '', 
                        title = '', 
                        total_gross_value = 1.337, 
                        total_net_value = 1.337, 
                        total_vat_amount = 1.337, 
                        vat_rate = 1.337, )
                    ],
                salutation = '',
                shipping_country = '',
                shop_name = '',
                title = '',
                total_gross = 1.337,
                total_net = 1.337,
                transaction_id = '',
                type = '',
                vat_flags = openapi_client.models.billbee/interfaces/order/vat_details_recognized_history_entry/vat_detection_flags.Billbee.Interfaces.Order.VatDetailsRecognizedHistoryEntry.VatDetectionFlags(
                    customer_has_vat_id = True, 
                    eu_delivery_threshold_exceeded = True, 
                    is_distance_sale = True, 
                    order_distribution_country_is_empty = True, 
                    oss_enabled = True, 
                    rates_from = '', 
                    seller_is_registered_in_dst_country = True, 
                    set_igl_when_vat_id_is_available_enabled = True, 
                    src_country_is_equal_to_dst_country = True, 
                    third_party_country = True, 
                    user_profile_country_is_empty = True, 
                    vat_id_from = '', ),
                vat_mode = 0
            )
        else:
            return BillbeeInterfacesBillbeeAPIModelInvoiceApiModel(
        )
        """

    def testBillbeeInterfacesBillbeeAPIModelInvoiceApiModel(self):
        """Test BillbeeInterfacesBillbeeAPIModelInvoiceApiModel"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
