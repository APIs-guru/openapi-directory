# coding: utf-8

"""
    Billbee API

    Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  

    The version of the OpenAPI document: v1
    Contact: support@billbee.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.rechnungsdruck_web_app_controllers_api_api_result_billbee_interfaces_billbee_api_model_order import RechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelOrder

class TestRechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelOrder(unittest.TestCase):
    """RechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelOrder unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelOrder:
        """Test RechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelOrder
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelOrder`
        """
        model = RechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelOrder()
        if include_optional:
            return RechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelOrder(
                data = openapi_client.models.billbee/interfaces/billbee_api/model/order.Billbee.Interfaces.BillbeeAPI.Model.Order(
                    accept_loss_of_return_right = True, 
                    adjustment_cost = 1.337, 
                    adjustment_reason = '', 
                    api_account_id = 56, 
                    api_account_name = '', 
                    archived_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    bill_bee_order_id = 56, 
                    bill_bee_parent_order_id = 56, 
                    buyer = openapi_client.models.billbee/interfaces/billbee_api/model/order_user.Billbee.Interfaces.BillbeeAPI.Model.OrderUser(
                        billbee_shop_id = 56, 
                        billbee_shop_name = '', 
                        email = '', 
                        first_name = '', 
                        full_name = '', 
                        id = '', 
                        last_name = '', 
                        nick = '', 
                        platform = '', ), 
                    comments = [
                        openapi_client.models.billbee/interfaces/billbee_api/model/comment_api_model.Billbee.Interfaces.BillbeeAPI.Model.CommentApiModel(
                            created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            from_customer = True, 
                            id = 56, 
                            name = '', 
                            text = '', )
                        ], 
                    confirmed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    currency = '', 
                    custom_invoice_note = '', 
                    customer = openapi_client.models.billbee/interfaces/billbee_api/model/customer_api_model.Billbee.Interfaces.BillbeeAPI.Model.CustomerApiModel(
                        archived_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        default_commercial_mail_address = openapi_client.models.billbee/interfaces/billbee_api/models/customer_meta_data_api_model.Billbee.Interfaces.BillbeeAPI.Models.CustomerMetaDataApiModel(
                            id = 56, 
                            sub_type = '', 
                            type_id = 56, 
                            type_name = '', 
                            value = '', ), 
                        default_fax = openapi_client.models.billbee/interfaces/billbee_api/models/customer_meta_data_api_model.Billbee.Interfaces.BillbeeAPI.Models.CustomerMetaDataApiModel(
                            id = 56, 
                            sub_type = '', 
                            type_id = 56, 
                            type_name = '', 
                            value = '', ), 
                        default_mail_address = , 
                        default_phone1 = , 
                        default_phone2 = , 
                        default_status_updates_mail_address = , 
                        email = '', 
                        id = 56, 
                        language_id = 56, 
                        meta_data = [
                            
                            ], 
                        name = '', 
                        number = 56, 
                        price_group_id = 56, 
                        restored_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        tel1 = '', 
                        tel2 = '', 
                        type = 56, 
                        vat_id = '', ), 
                    customer_number = '', 
                    customer_vat_id = '', 
                    delivery_source_country_code = '', 
                    distribution_center = '', 
                    history = [
                        openapi_client.models.billbee/interfaces/order/history_entry.Billbee.Interfaces.Order.HistoryEntry(
                            created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            employee_name = '', 
                            event_type_name = '', 
                            text = '', 
                            type_id = 56, )
                        ], 
                    id = '', 
                    invoice_address = openapi_client.models.billbee/interfaces/billbee_api/model/order_address_api_model.Billbee.Interfaces.BillbeeAPI.Model.OrderAddressApiModel(
                        billbee_id = 56, 
                        city = '', 
                        company = '', 
                        country = '', 
                        country_iso2 = '', 
                        email = '', 
                        first_name = '', 
                        house_number = '', 
                        last_name = '', 
                        line2 = '', 
                        name_addition = '', 
                        phone = '', 
                        state = '', 
                        street = '', 
                        zip = '', ), 
                    invoice_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    invoice_number = 56, 
                    invoice_number_postfix = '', 
                    invoice_number_prefix = '', 
                    is_cancelation_for = '', 
                    is_from_billbee_api = True, 
                    language_code = '', 
                    last_modified_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    merchant_vat_id = '', 
                    order_items = [
                        openapi_client.models.billbee/interfaces/billbee_api/model/order_item.Billbee.Interfaces.BillbeeAPI.Model.OrderItem(
                            attributes = [
                                openapi_client.models.billbee/interfaces/billbee_api/model/order_item_attribute.Billbee.Interfaces.BillbeeAPI.Model.OrderItemAttribute(
                                    id = '', 
                                    name = '', 
                                    price = 1.337, 
                                    value = '', )
                                ], 
                            billbee_id = 56, 
                            discount = 1.337, 
                            dont_adjust_stock = True, 
                            get_price_from_article_if_any = True, 
                            invoice_sku = '', 
                            is_coupon = True, 
                            product = openapi_client.models.billbee/interfaces/billbee_api/model/sold_product.Billbee.Interfaces.BillbeeAPI.Model.SoldProduct(
                                billbee_id = 56, 
                                country_of_origin = '', 
                                ean = '', 
                                id = '', 
                                images = [
                                    openapi_client.models.billbee/interfaces/billbee_api/model/product_image.Billbee.Interfaces.BillbeeAPI.Model.ProductImage(
                                        external_id = '', 
                                        is_default_image = True, 
                                        position = 56, 
                                        url = '', )
                                    ], 
                                is_digital = True, 
                                old_id = '', 
                                platform_data = '', 
                                sku = '', 
                                sku_or_id = '', 
                                taric_code = '', 
                                title = '', 
                                type = 56, 
                                weight = 56, ), 
                            quantity = 1.337, 
                            serial_number = '', 
                            shipping_profile_id = '', 
                            tax_amount = 1.337, 
                            tax_index = 56, 
                            total_price = 1.337, 
                            transaction_id = '', 
                            unrebated_total_price = 1.337, )
                        ], 
                    order_number = '', 
                    paid_amount = 1.337, 
                    payed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    payment_instruction = '', 
                    payment_method = 1, 
                    payment_reference = '', 
                    payment_transaction_id = '', 
                    payments = [
                        openapi_client.models.billbee/interfaces/billbee_api/models/order_payment.Billbee.Interfaces.BillbeeAPI.Models.OrderPayment(
                            billbee_id = 56, 
                            name = '', 
                            pay_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            pay_value = 1.337, 
                            payment_type = 56, 
                            purpose = '', 
                            source_technology = '', 
                            source_text = '', 
                            transaction_id = '', )
                        ], 
                    rebate_difference = 1.337, 
                    restored_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    seller = openapi_client.models.billbee/interfaces/billbee_api/model/order_user.Billbee.Interfaces.BillbeeAPI.Model.OrderUser(
                        billbee_shop_id = 56, 
                        billbee_shop_name = '', 
                        email = '', 
                        first_name = '', 
                        full_name = '', 
                        id = '', 
                        last_name = '', 
                        nick = '', 
                        platform = '', ), 
                    seller_comment = '', 
                    ship_weight_kg = 1.337, 
                    shipped_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    shipping_address = openapi_client.models.billbee/interfaces/billbee_api/model/order_address_api_model.Billbee.Interfaces.BillbeeAPI.Model.OrderAddressApiModel(
                        billbee_id = 56, 
                        city = '', 
                        company = '', 
                        country = '', 
                        country_iso2 = '', 
                        email = '', 
                        first_name = '', 
                        house_number = '', 
                        last_name = '', 
                        line2 = '', 
                        name_addition = '', 
                        phone = '', 
                        state = '', 
                        street = '', 
                        zip = '', ), 
                    shipping_cost = 1.337, 
                    shipping_ids = [
                        openapi_client.models.billbee/interfaces/billbee_api/model/shipment.Billbee.Interfaces.BillbeeAPI.Model.Shipment(
                            billbee_id = 56, 
                            created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            shipment_type = 56, 
                            shipper = '', 
                            shipping_carrier = 56, 
                            shipping_id = '', 
                            shipping_provider_id = 56, 
                            shipping_provider_product_id = 56, 
                            tracking_url = '', )
                        ], 
                    shipping_profile_id = '', 
                    shipping_profile_name = '', 
                    shipping_provider_id = 56, 
                    shipping_provider_name = '', 
                    shipping_provider_product_id = 56, 
                    shipping_provider_product_name = '', 
                    shipping_services = [
                        openapi_client.models.billbee/interfaces/shipping/product_service.Billbee.Interfaces.Shipping.ProductService(
                            can_be_configured = True, 
                            display_name = '', 
                            display_value = '', 
                            possible_value_lists = [
                                openapi_client.models.system/collections/generic/key_value_pair_system/string_system/collections/generic/list_system/collections/generic/key_value_pair_system/int32_system/string_.System.Collections.Generic.KeyValuePair_System.String_System.Collections.Generic.List_System.Collections.Generic.KeyValuePair_System.Int32_System.String_(
                                    key = '', 
                                    value = [
                                        openapi_client.models.system/collections/generic/key_value_pair_system/int32_system/string_.System.Collections.Generic.KeyValuePair_System.Int32_System.String_(
                                            key = 56, )
                                        ], )
                                ], 
                            requires_user_input = True, 
                            service_name = '', 
                            type_name = '', )
                        ], 
                    state = 1, 
                    tags = [
                        ''
                        ], 
                    tax_rate1 = 1.337, 
                    tax_rate2 = 1.337, 
                    total_cost = 1.337, 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    vat_id = '', 
                    vat_mode = 0, ),
                error_code = 0,
                error_description = 0,
                error_message = ''
            )
        else:
            return RechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelOrder(
        )
        """

    def testRechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelOrder(self):
        """Test RechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelOrder"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
