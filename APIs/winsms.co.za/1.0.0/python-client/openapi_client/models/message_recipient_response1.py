# coding: utf-8

"""
    WINSMS

    WinSMS RESTful API

    The version of the OpenAPI document: 1.0.0
    Contact: support@winsms.co.za
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field, StrictBool, StrictFloat, StrictInt, StrictStr
from typing import Any, ClassVar, Dict, List, Optional, Union
from typing import Optional, Set
from typing_extensions import Self

class MessageRecipientResponse1(BaseModel):
    """
    MessageRecipientResponse1
    """ # noqa: E501
    accept_error: Optional[StrictStr] = Field(default=None, description="If the ***accepted*** value is **false**, this will contain the reason that delivery to the recipient was declined by the API. If the recipient was accepted, this value will be blank. Possible values-   | Value | Description |   |-------|-------------|   |INSUFFICIENT&nbsp;CREDITS | The User Account has insufficient credits to send the message |   |ACCOUNTLOCKED | The specified User Account is locked   |TRIALNOT2SELF | Trial Account Restriction â€“ Message not to own number. <a href=\"https://support.winsms.co.za/trial-account-restrictions/\" target=\"_blank\">More Info</a> |   |TOOLONG | The <a href=\"https://en.wikipedia.org/wiki/GSM_03.38#GSM_7-bit_default_alphabet_and_extension_table_of_3GPP_TS_23.038_/_GSM_03.38\" target=\"_blank\">GSM 7-bit encoded</a> message length exceeded 918 characters |   |BADDEST | An invalid mobile number was supplied, or the recipient has been blacklisted from receiving messages |   |OPTEDOUT | The recipient has opted out from receiving any further messages from the user |   |WASPADNC | The number is on the WASPA Do Not Contact List (DNC).<br>If you are sending transactional messages then you can bypass the DNC list. <a href=\"https://zasupport.winsms.co.za/portal/en/kb/articles/marketing-vs-transactional-sms/\" target=\"_blank\">Read this article</a> for instructions. |   | &nbsp; | &nbsp; | ", alias="acceptError")
    accepted: Optional[StrictBool] = Field(default=None, description="A boolean value indicating whether the API accepted the recipient for SMS delivery. This will be **false** If you have insufficient credits or the recipient mobile number supplied is not valid. ")
    api_message_id: Optional[StrictInt] = Field(default=None, description="The WinSMS Message Id assigned to the specific message recipient. This Id can be used to obtain the status of the message, and to delete the message if it was scheduled. If the API did not accept the recipient for delivery, the value will be **null**. ", alias="apiMessageId")
    client_message_id: Optional[StrictStr] = Field(default=None, description="If the optional ***clientMessageId*** value was specified in the recipient object for the recipient, it will be returned here. If not, ***clientMessageId*** will be **null**. ", alias="clientMessageId")
    credit_cost: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The number of credits deducted from your account for the SMS to this recipient.  The credit cost is based on the destination country of the recipient and the length (number of segments) of the message.  This credit cost will be reimbursed if the message is scheduled and subsequently deleted.  If the recipient is not accepted for delivery, the ***creditCost*** value will be **null**. ", alias="creditCost")
    mobile_number: Optional[StrictStr] = Field(default=None, description="The mobile number specified as the ***mobileNumber*** value of the recipient object of the request. ", alias="mobileNumber")
    new_credit_balance: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The number of WinSMS credits remaining in your account after processing this recipient. ", alias="newCreditBalance")
    scheduled_time: Optional[StrictStr] = Field(default=None, description="The date and time that the message was scheduled for delivery to the recipient.  If no ***scheduledTime*** value was specified in the request, or the recipient was not accepted for delivery, this value will be **null**. ", alias="scheduledTime")
    __properties: ClassVar[List[str]] = ["acceptError", "accepted", "apiMessageId", "clientMessageId", "creditCost", "mobileNumber", "newCreditBalance", "scheduledTime"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of MessageRecipientResponse1 from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of MessageRecipientResponse1 from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "acceptError": obj.get("acceptError"),
            "accepted": obj.get("accepted"),
            "apiMessageId": obj.get("apiMessageId"),
            "clientMessageId": obj.get("clientMessageId"),
            "creditCost": obj.get("creditCost"),
            "mobileNumber": obj.get("mobileNumber"),
            "newCreditBalance": obj.get("newCreditBalance"),
            "scheduledTime": obj.get("scheduledTime")
        })
        return _obj


