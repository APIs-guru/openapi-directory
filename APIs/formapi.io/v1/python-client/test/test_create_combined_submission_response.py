# coding: utf-8

"""
    API v1

    DocSpring is a service that helps you fill out and sign PDF templates.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.create_combined_submission_response import CreateCombinedSubmissionResponse

class TestCreateCombinedSubmissionResponse(unittest.TestCase):
    """CreateCombinedSubmissionResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateCombinedSubmissionResponse:
        """Test CreateCombinedSubmissionResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateCombinedSubmissionResponse`
        """
        model = CreateCombinedSubmissionResponse()
        if include_optional:
            return CreateCombinedSubmissionResponse(
                combined_submission = openapi_client.models.combined_submission.combined_submission(
                    actions = [
                        openapi_client.models.combined_submission_action.combined_submission_action(
                            action_category = 'notification', 
                            action_type = 'webhook', 
                            id = '', 
                            integration_id = '', 
                            result_data = openapi_client.models.result_data.result_data(), 
                            state = 'pending', )
                        ], 
                    download_url = '', 
                    error_message = '', 
                    expired = True, 
                    expires_at = '', 
                    expires_in = 56, 
                    id = '', 
                    metadata = openapi_client.models.metadata.metadata(), 
                    password = '', 
                    pdf_hash = '', 
                    source_pdfs = [
                        null
                        ], 
                    state = 'pending', 
                    submission_ids = [
                        ''
                        ], ),
                errors = [
                    ''
                    ],
                status = 'success'
            )
        else:
            return CreateCombinedSubmissionResponse(
                combined_submission = openapi_client.models.combined_submission.combined_submission(
                    actions = [
                        openapi_client.models.combined_submission_action.combined_submission_action(
                            action_category = 'notification', 
                            action_type = 'webhook', 
                            id = '', 
                            integration_id = '', 
                            result_data = openapi_client.models.result_data.result_data(), 
                            state = 'pending', )
                        ], 
                    download_url = '', 
                    error_message = '', 
                    expired = True, 
                    expires_at = '', 
                    expires_in = 56, 
                    id = '', 
                    metadata = openapi_client.models.metadata.metadata(), 
                    password = '', 
                    pdf_hash = '', 
                    source_pdfs = [
                        null
                        ], 
                    state = 'pending', 
                    submission_ids = [
                        ''
                        ], ),
                status = 'success',
        )
        """

    def testCreateCombinedSubmissionResponse(self):
        """Test CreateCombinedSubmissionResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
