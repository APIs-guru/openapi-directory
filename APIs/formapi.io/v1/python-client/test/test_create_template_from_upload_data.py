# coding: utf-8

"""
    API v1

    DocSpring is a service that helps you fill out and sign PDF templates.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.create_template_from_upload_data import CreateTemplateFromUploadData

class TestCreateTemplateFromUploadData(unittest.TestCase):
    """CreateTemplateFromUploadData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateTemplateFromUploadData:
        """Test CreateTemplateFromUploadData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateTemplateFromUploadData`
        """
        model = CreateTemplateFromUploadData()
        if include_optional:
            return CreateTemplateFromUploadData(
                template = openapi_client.models.upload_template_data.upload_template_data(
                    allow_additional_properties = True, 
                    description = '', 
                    document = openapi_client.models.upload_template_data_document.upload_template_data_document(
                        id = '', 
                        metadata = openapi_client.models.upload_template_data_document_metadata.upload_template_data_document_metadata(
                            filename = '', 
                            mime_type = 'application/pdf', 
                            size = 56, ), 
                        storage = 'cache', ), 
                    editable_submissions = True, 
                    expiration_interval = 'minutes', 
                    expire_after = 1.337, 
                    expire_submissions = True, 
                    footer_html = '', 
                    header_html = '', 
                    html = '', 
                    name = '', 
                    public_submissions = True, 
                    public_web_form = True, 
                    redirect_url = '', 
                    scss = '', 
                    slack_webhook_url = '', 
                    template_type = 'pdf', 
                    webhook_url = '', )
            )
        else:
            return CreateTemplateFromUploadData(
                template = openapi_client.models.upload_template_data.upload_template_data(
                    allow_additional_properties = True, 
                    description = '', 
                    document = openapi_client.models.upload_template_data_document.upload_template_data_document(
                        id = '', 
                        metadata = openapi_client.models.upload_template_data_document_metadata.upload_template_data_document_metadata(
                            filename = '', 
                            mime_type = 'application/pdf', 
                            size = 56, ), 
                        storage = 'cache', ), 
                    editable_submissions = True, 
                    expiration_interval = 'minutes', 
                    expire_after = 1.337, 
                    expire_submissions = True, 
                    footer_html = '', 
                    header_html = '', 
                    html = '', 
                    name = '', 
                    public_submissions = True, 
                    public_web_form = True, 
                    redirect_url = '', 
                    scss = '', 
                    slack_webhook_url = '', 
                    template_type = 'pdf', 
                    webhook_url = '', ),
        )
        """

    def testCreateTemplateFromUploadData(self):
        """Test CreateTemplateFromUploadData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
