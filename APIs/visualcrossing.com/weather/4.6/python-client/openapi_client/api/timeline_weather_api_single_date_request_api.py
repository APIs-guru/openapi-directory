# coding: utf-8

"""
    Visual Crossing Weather API

    Weather Forecast and Historical Weather Data via RESTful API.

    The version of the OpenAPI document: 4.6
    Contact: info@visualcrossing.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictStr
from typing import Optional
from typing_extensions import Annotated

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class TimelineWeatherAPISingleDateRequestApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def visual_crossing_web_services_rest_services_timeline_location_startdate_get(
        self,
        location: StrictStr,
        startdate: StrictStr,
        key: StrictStr,
        content_type: Annotated[Optional[StrictStr], Field(description="data format of the output either json or CSV")] = None,
        unit_group: Optional[StrictStr] = None,
        include: Annotated[Optional[StrictStr], Field(description="data to include in the output (required for CSV format - days,hours,alerts,current,events )")] = None,
        lang: Annotated[Optional[StrictStr], Field(description="Language to use for weather descriptions")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=1)] = 0,
    ) -> None:
        """Historical and Forecast Weather API

        Seamless access to daily and hourly historical and forecast weather data plus weather alerts, events and current conditions.

        :param location: (required)
        :type location: str
        :param startdate: (required)
        :type startdate: str
        :param key: (required)
        :type key: str
        :param content_type: data format of the output either json or CSV
        :type content_type: str
        :param unit_group:
        :type unit_group: str
        :param include: data to include in the output (required for CSV format - days,hours,alerts,current,events )
        :type include: str
        :param lang: Language to use for weather descriptions
        :type lang: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._visual_crossing_web_services_rest_services_timeline_location_startdate_get_serialize(
            location=location,
            startdate=startdate,
            key=key,
            content_type=content_type,
            unit_group=unit_group,
            include=include,
            lang=lang,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def visual_crossing_web_services_rest_services_timeline_location_startdate_get_with_http_info(
        self,
        location: StrictStr,
        startdate: StrictStr,
        key: StrictStr,
        content_type: Annotated[Optional[StrictStr], Field(description="data format of the output either json or CSV")] = None,
        unit_group: Optional[StrictStr] = None,
        include: Annotated[Optional[StrictStr], Field(description="data to include in the output (required for CSV format - days,hours,alerts,current,events )")] = None,
        lang: Annotated[Optional[StrictStr], Field(description="Language to use for weather descriptions")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=1)] = 0,
    ) -> ApiResponse[None]:
        """Historical and Forecast Weather API

        Seamless access to daily and hourly historical and forecast weather data plus weather alerts, events and current conditions.

        :param location: (required)
        :type location: str
        :param startdate: (required)
        :type startdate: str
        :param key: (required)
        :type key: str
        :param content_type: data format of the output either json or CSV
        :type content_type: str
        :param unit_group:
        :type unit_group: str
        :param include: data to include in the output (required for CSV format - days,hours,alerts,current,events )
        :type include: str
        :param lang: Language to use for weather descriptions
        :type lang: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._visual_crossing_web_services_rest_services_timeline_location_startdate_get_serialize(
            location=location,
            startdate=startdate,
            key=key,
            content_type=content_type,
            unit_group=unit_group,
            include=include,
            lang=lang,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def visual_crossing_web_services_rest_services_timeline_location_startdate_get_without_preload_content(
        self,
        location: StrictStr,
        startdate: StrictStr,
        key: StrictStr,
        content_type: Annotated[Optional[StrictStr], Field(description="data format of the output either json or CSV")] = None,
        unit_group: Optional[StrictStr] = None,
        include: Annotated[Optional[StrictStr], Field(description="data to include in the output (required for CSV format - days,hours,alerts,current,events )")] = None,
        lang: Annotated[Optional[StrictStr], Field(description="Language to use for weather descriptions")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=1)] = 0,
    ) -> RESTResponseType:
        """Historical and Forecast Weather API

        Seamless access to daily and hourly historical and forecast weather data plus weather alerts, events and current conditions.

        :param location: (required)
        :type location: str
        :param startdate: (required)
        :type startdate: str
        :param key: (required)
        :type key: str
        :param content_type: data format of the output either json or CSV
        :type content_type: str
        :param unit_group:
        :type unit_group: str
        :param include: data to include in the output (required for CSV format - days,hours,alerts,current,events )
        :type include: str
        :param lang: Language to use for weather descriptions
        :type lang: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._visual_crossing_web_services_rest_services_timeline_location_startdate_get_serialize(
            location=location,
            startdate=startdate,
            key=key,
            content_type=content_type,
            unit_group=unit_group,
            include=include,
            lang=lang,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _visual_crossing_web_services_rest_services_timeline_location_startdate_get_serialize(
        self,
        location,
        startdate,
        key,
        content_type,
        unit_group,
        include,
        lang,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _hosts = [
            'https://weather.visualcrossing.com'
        ]
        _host = _hosts[_host_index]

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if location is not None:
            _path_params['location'] = location
        if startdate is not None:
            _path_params['startdate'] = startdate
        # process the query parameters
        if content_type is not None:
            
            _query_params.append(('contentType', content_type))
            
        if unit_group is not None:
            
            _query_params.append(('unitGroup', unit_group))
            
        if include is not None:
            
            _query_params.append(('include', include))
            
        if lang is not None:
            
            _query_params.append(('lang', lang))
            
        if key is not None:
            
            _query_params.append(('key', key))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter




        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/VisualCrossingWebServices/rest/services/timeline/{location}/{startdate}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


