# coding: utf-8

"""
    Etherpad API

    Etherpad is a real-time collaborative editor scalable to thousands of simultaneous real time users. It provides full data export capabilities, and runs on your server, under your control.

    The version of the OpenAPI document: 1.2.15
    Contact: support@example.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.append_chat_message_using_get400_response import AppendChatMessageUsingGET400Response

class TestAppendChatMessageUsingGET400Response(unittest.TestCase):
    """AppendChatMessageUsingGET400Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AppendChatMessageUsingGET400Response:
        """Test AppendChatMessageUsingGET400Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AppendChatMessageUsingGET400Response`
        """
        model = AppendChatMessageUsingGET400Response()
        if include_optional:
            return AppendChatMessageUsingGET400Response(
                code = 1,
                data = None,
                message = 'error message'
            )
        else:
            return AppendChatMessageUsingGET400Response(
        )
        """

    def testAppendChatMessageUsingGET400Response(self):
        """Test AppendChatMessageUsingGET400Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
