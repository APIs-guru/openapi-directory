# coding: utf-8

"""
    Neutrino API

    The general-purpose API

    The version of the OpenAPI document: 3.6.4
    Contact: ops@neutrinoapi.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.ip_probe_response import IPProbeResponse

class TestIPProbeResponse(unittest.TestCase):
    """IPProbeResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IPProbeResponse:
        """Test IPProbeResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IPProbeResponse`
        """
        model = IPProbeResponse()
        if include_optional:
            return IPProbeResponse(
                as_age = 56,
                as_cidr = '',
                as_country_code = '',
                as_country_code3 = '',
                as_description = '',
                as_domains = [
                    ''
                    ],
                asn = '',
                city = '',
                continent_code = '',
                country = '',
                country_code = '',
                country_code3 = '',
                currency_code = '',
                host_domain = '',
                hostname = '',
                ip = '',
                is_bogon = True,
                is_hosting = True,
                is_isp = True,
                is_proxy = True,
                is_v4_mapped = True,
                is_v6 = True,
                is_vpn = True,
                provider_description = '',
                provider_domain = '',
                provider_type = '',
                provider_website = '',
                region = '',
                region_code = '',
                valid = True,
                vpn_domain = ''
            )
        else:
            return IPProbeResponse(
                as_age = 56,
                as_cidr = '',
                as_country_code = '',
                as_country_code3 = '',
                as_description = '',
                as_domains = [
                    ''
                    ],
                asn = '',
                city = '',
                continent_code = '',
                country = '',
                country_code = '',
                country_code3 = '',
                currency_code = '',
                host_domain = '',
                hostname = '',
                ip = '',
                is_bogon = True,
                is_hosting = True,
                is_isp = True,
                is_proxy = True,
                is_v4_mapped = True,
                is_v6 = True,
                is_vpn = True,
                provider_description = '',
                provider_domain = '',
                provider_type = '',
                provider_website = '',
                region = '',
                region_code = '',
                valid = True,
                vpn_domain = '',
        )
        """

    def testIPProbeResponse(self):
        """Test IPProbeResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
