# coding: utf-8

"""
    Otoroshi Admin API

    Admin API of the Otoroshi reverse proxy

    The version of the OpenAPI document: 1.5.0-dev
    Contact: oss@maif.fr
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.generic_oauth2_module_config import GenericOauth2ModuleConfig

class TestGenericOauth2ModuleConfig(unittest.TestCase):
    """GenericOauth2ModuleConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GenericOauth2ModuleConfig:
        """Test GenericOauth2ModuleConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GenericOauth2ModuleConfig`
        """
        model = GenericOauth2ModuleConfig()
        if include_optional:
            return GenericOauth2ModuleConfig(
                access_token_field = 'a string value',
                authorize_url = 'a string value',
                callback_url = 'a string value',
                claims = 'a string value',
                client_id = 'a string value',
                client_secret = 'a string value',
                desc = 'a string value',
                email_field = 'a string value',
                id = 'a string value',
                jwt_verifier = None,
                login_url = 'a string value',
                logout_url = 'a string value',
                name = 'a string value',
                name_field = 'a string value',
                oid_config = 'a string value',
                otoroshi_data_field = 'a string value',
                read_profile_from_token = True,
                scope = 'a string value',
                session_max_age = 123123,
                token_url = 'a string value',
                type = 'a string value',
                use_cookies = True,
                use_json = True,
                user_info_url = 'a string value'
            )
        else:
            return GenericOauth2ModuleConfig(
                access_token_field = 'a string value',
                authorize_url = 'a string value',
                callback_url = 'a string value',
                client_id = 'a string value',
                client_secret = 'a string value',
                desc = 'a string value',
                email_field = 'a string value',
                id = 'a string value',
                login_url = 'a string value',
                logout_url = 'a string value',
                name = 'a string value',
                name_field = 'a string value',
                otoroshi_data_field = 'a string value',
                session_max_age = 123123,
                token_url = 'a string value',
                type = 'a string value',
                user_info_url = 'a string value',
        )
        """

    def testGenericOauth2ModuleConfig(self):
        """Test GenericOauth2ModuleConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
