# coding: utf-8

"""
    Otoroshi Admin API

    Admin API of the Otoroshi reverse proxy

    The version of the OpenAPI document: 1.5.0-dev
    Contact: oss@maif.fr
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.services_api import ServicesApi


class TestServicesApi(unittest.TestCase):
    """ServicesApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ServicesApi()

    def tearDown(self) -> None:
        pass

    def test_all_services(self) -> None:
        """Test case for all_services

        Get all services
        """
        pass

    def test_create_service(self) -> None:
        """Test case for create_service

        Create a new service descriptor
        """
        pass

    def test_create_service_template(self) -> None:
        """Test case for create_service_template

        Create a service descriptor error template
        """
        pass

    def test_delete_service(self) -> None:
        """Test case for delete_service

        Delete a service descriptor
        """
        pass

    def test_delete_service_template(self) -> None:
        """Test case for delete_service_template

        Delete a service descriptor error template
        """
        pass

    def test_patch_service(self) -> None:
        """Test case for patch_service

        Update a service descriptor with a diff
        """
        pass

    def test_service(self) -> None:
        """Test case for service

        Get a service descriptor
        """
        pass

    def test_service_add_target(self) -> None:
        """Test case for service_add_target

        Add a target to a service descriptor
        """
        pass

    def test_service_delete_target(self) -> None:
        """Test case for service_delete_target

        Delete a service descriptor target
        """
        pass

    def test_service_group_services(self) -> None:
        """Test case for service_group_services

        Get all services descriptor for a group
        """
        pass

    def test_service_targets(self) -> None:
        """Test case for service_targets

        Get a service descriptor targets
        """
        pass

    def test_service_template(self) -> None:
        """Test case for service_template

        Get a service descriptor error template
        """
        pass

    def test_update_service(self) -> None:
        """Test case for update_service

        Update a service descriptor
        """
        pass

    def test_update_service_targets(self) -> None:
        """Test case for update_service_targets

        Update a service descriptor targets
        """
        pass

    def test_update_service_template(self) -> None:
        """Test case for update_service_template

        Update an error template to a service descriptor
        """
        pass


if __name__ == '__main__':
    unittest.main()
