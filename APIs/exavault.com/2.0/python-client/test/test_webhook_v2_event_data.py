# coding: utf-8

"""
    ExaVault

    ExaVaults API allows you to incorporate ExaVaults suite of file transfer and user management tools into your own application.\\nExaVault supports both POST (recommended when requesting large data sets) and GET operations, and requires an API key in order to use.

    The version of the OpenAPI document: 2.0
    Contact: support@exavault.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.webhook_v2_event_data import WebhookV2EventData

class TestWebhookV2EventData(unittest.TestCase):
    """WebhookV2EventData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WebhookV2EventData:
        """Test WebhookV2EventData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WebhookV2EventData`
        """
        model = WebhookV2EventData()
        if include_optional:
            return WebhookV2EventData(
                form_details = [
                    None
                    ],
                resources = [
                    openapi_client.models.webhook_v2_event_data_resources_inner.WebhookV2EventData_resources_inner(
                        accessed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        created_by = '', 
                        file_count = 56, 
                        hash = '', 
                        id = 56, 
                        name = '', 
                        path = '', 
                        previewable = True, 
                        size = 56, 
                        type = '', 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        upload_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                share = [
                    openapi_client.models.webhook_v2_event_data_share_inner.WebhookV2EventData_share_inner(
                        access_description = '', 
                        access_mode = openapi_client.models.access_mode.AccessMode(
                            delete = True, 
                            download = True, 
                            modify = True, 
                            upload = True, ), 
                        assets = [
                            ''
                            ], 
                        created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        embed = True, 
                        expiration = '', 
                        expired = True, 
                        file_drop_create_folders = True, 
                        form_id = 56, 
                        has_notification = True, 
                        has_password = True, 
                        hash = '', 
                        id = 56, 
                        inherited = True, 
                        is_public = True, 
                        messages = [
                            openapi_client.models.message.Message(
                                body = 'You have files available for download.', 
                                created = '2017-01-26T18:10:47Z', 
                                id = 397584, 
                                modified = '2017-01-28T13:10:47Z', 
                                share_id = 3544253, 
                                subject = 'Files available for download', 
                                user_id = 119394, )
                            ], 
                        modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        name = '', 
                        owner_hash = '', 
                        paths = [
                            ''
                            ], 
                        recipients = [
                            openapi_client.models.share_recipient.ShareRecipient(
                                created = '2017-01-26T18:10:47Z', 
                                email = 'recipient@example.com', 
                                hash = 'fseowxan', 
                                id = 2, 
                                received = False, 
                                sent = True, 
                                share_id = '23', 
                                type = 'owner', )
                            ], 
                        require_email = True, 
                        resent = True, 
                        status = 56, 
                        tracking_status = '', 
                        type = '', )
                    ],
                transfer_status = ''
            )
        else:
            return WebhookV2EventData(
        )
        """

    def testWebhookV2EventData(self):
        """Test WebhookV2EventData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
