# coding: utf-8

"""
    ExaVault

    ExaVaults API allows you to incorporate ExaVaults suite of file transfer and user management tools into your own application.\\nExaVault supports both POST (recommended when requesting large data sets) and GET operations, and requires an API key in order to use.

    The version of the OpenAPI document: 2.0
    Contact: support@exavault.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.form_response import FormResponse

class TestFormResponse(unittest.TestCase):
    """FormResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FormResponse:
        """Test FormResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FormResponse`
        """
        model = FormResponse()
        if include_optional:
            return FormResponse(
                data = openapi_client.models.form.Form(
                    attributes = openapi_client.models.form_attributes.FormAttributes(
                        css_styles = '#ev-widget-form {
  /*Change this to change the font. Remove to use your website font*/
  font-family: Helvetica Neue, sans-serif;
  /*Makes the form the same width as your website */
  margin: 0 -2%;
}
#ev-widget-form label{
  width: 100%;
}
#ev-widget-form input,
#ev-widget-form textarea {
  /*Changes color and thickness of borders on form elements */
  border: 2px solid #ccc;
  /*Changes spacing inside the form elements (top/bottom and left/right */
  padding: 5px 5px;
  /* Changes how far away the inputs are from their label */
  margin-top: 2px;
}

#ev-widget-form input:focus,
#ev-widget-form textarea:focus {
  /*Changes the color of the form elements when they are clicked in to */
  border: 2px solid #b2cf88;
  /*Removes glow effect from form elements that are clicked in to */
  outline: none;
}

#ev-widget-form label {
  font-size: 14px;
  font-weight: bold;
  /*Changes color of labels */
  color: #232323
}

#ev-widget-form .ev-form-element-description {
  /*Changes size of descriptions */
  font-size: 12px;
  /*Changes color of descriptions */
  color: #777;
  /* Changes how far away the descriptions are from their input */
  margin-top: 2px;
}

#ev-widget-form textarea {
  /* Makes textareas (multiline inputs) a taller. */
  min-height: 90px;
}', 
                        elements = [{"id":234,"name":"Project ID","order":0,"settings":{"description":null,"isRequired":false,"useAsFolderName":false,"width":1},"type":"name"},{"id":235,"name":"Your Email","order":1,"setings":{"description":"Enter your email from the registration system","isRequired":true,"senderEmail":true,"useAsFolderName":true,"width":1},"type":"email"},{"id":236,"name":"Upload Area","order":2,"settings":{"fileTypes":null},"type":"upload_area"}], 
                        form_description = 'Upload your photos to us', 
                        submit_button_text = 'Send Files', 
                        success_message = 'Your files were uploaded', ), 
                    id = 823752, 
                    relationships = openapi_client.models.form_relationships.Form_relationships(
                        share = openapi_client.models.form_relationships_share.Form_relationships_share(
                            data = openapi_client.models.form_relationships_share_data.Form_relationships_share_data(
                                id = 22, 
                                type = 'share', ), ), ), 
                    type = 'form', ),
                included = [
                    openapi_client.models.share.Share(
                        attributes = openapi_client.models.share_attributes.ShareAttributes(
                            access_description = 'Download only', 
                            access_mode = openapi_client.models.access_mode.AccessMode(
                                delete = True, 
                                download = True, 
                                modify = True, 
                                upload = True, ), 
                            created = '2017-01-28T13:10:47Z', 
                            embed = False, 
                            expiration = '', 
                            expired = False, 
                            file_drop_create_folders = False, 
                            form_id = 56, 
                            has_notification = False, 
                            has_password = False, 
                            hash = 'hd1e-3erufo72', 
                            inherited = False, 
                            messages = [
                                openapi_client.models.message.Message(
                                    body = 'You have files available for download.', 
                                    created = '2017-01-26T18:10:47Z', 
                                    id = 397584, 
                                    modified = '2017-01-28T13:10:47Z', 
                                    share_id = 3544253, 
                                    subject = 'Files available for download', 
                                    user_id = 119394, )
                                ], 
                            modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            name = 'Example Folder', 
                            owner_hash = 'hd1e-3erufo72-fsxak999', 
                            paths = ["/Example Folder"], 
                            public = True, 
                            recipients = [{"created":"2017-04-21T10:53:47Z","email":"recipient@example.com","hash":"fseowxan","id":2,"received":false,"sent":true,"shareId":23,"type":"direct"}], 
                            require_email = True, 
                            resent = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            status = 1, 
                            tracking_status = 'complete', 
                            type = 'shared_folder', ), 
                        id = 655621, 
                        relationships = openapi_client.models.share_relationships.ShareRelationships(
                            notifications = [
                                openapi_client.models.share_relationships_notification.ShareRelationshipsNotification(
                                    data = openapi_client.models.share_relationships_notification_data.ShareRelationshipsNotification_data(
                                        id = 9, 
                                        type = 'notification', ), )
                                ], 
                            owner = openapi_client.models.share_relationships_owner.ShareRelationshipsOwner(), 
                            resources = [
                                openapi_client.models.share_relationships_resource.ShareRelationshipsResource()
                                ], ), 
                        type = 'share', )
                    ],
                response_status = 200
            )
        else:
            return FormResponse(
        )
        """

    def testFormResponse(self):
        """Test FormResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
