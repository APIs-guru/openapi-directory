# coding: utf-8

"""
    ExaVault

    ExaVaults API allows you to incorporate ExaVaults suite of file transfer and user management tools into your own application.\\nExaVault supports both POST (recommended when requesting large data sets) and GET operations, and requires an API key in order to use.

    The version of the OpenAPI document: 2.0
    Contact: support@exavault.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.webhook_attributes import WebhookAttributes

class TestWebhookAttributes(unittest.TestCase):
    """WebhookAttributes unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WebhookAttributes:
        """Test WebhookAttributes
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WebhookAttributes`
        """
        model = WebhookAttributes()
        if include_optional:
            return WebhookAttributes(
                created = '2021-03-04T22:22-08:00',
                endpoint_url = 'https://example.com/webhook',
                failed = True,
                modified = '2021-03-04T22:23:03-08:00',
                response_version = 'v2',
                triggers = openapi_client.models.webhook_triggers.WebhookTriggers(
                    resources = openapi_client.models.webhook_triggers_resources.WebhookTriggers_resources(
                        compress = True, 
                        copy = True, 
                        create_folder = True, 
                        delete = True, 
                        download = True, 
                        extract = True, 
                        move = True, 
                        rename = True, 
                        upload = True, ), 
                    shares = openapi_client.models.webhook_triggers_shares.WebhookTriggers_shares(
                        form_submit = True, ), ),
                verification_token = '8df8200f7dee90ba4a41abe39c858c6c'
            )
        else:
            return WebhookAttributes(
        )
        """

    def testWebhookAttributes(self):
        """Test WebhookAttributes"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
