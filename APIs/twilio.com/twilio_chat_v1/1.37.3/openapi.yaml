openapi: 3.0.1
servers:
  - url: https://chat.twilio.com
info:
  contact:
    email: support@twilio.com
    name: Twilio Support
    url: https://support.twilio.com
  description: This is the public Twilio REST API.
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://www.twilio.com/legal/tos
  title: Twilio - Chat
  version: 1.37.3
  x-apisguru-categories:
    - telecom
    - messaging
  x-logo:
    url: https://static1.twilio.com/marketing/bundles/marketing/img/logos/wordmark-red.svg
  x-origin:
    - format: openapi
      url: https://raw.githubusercontent.com/twilio/twilio-oai/main/spec/json/twilio_chat_v1.json
      version: "3.0"
  x-providerName: twilio.com
  x-serviceName: twilio_chat_v1
paths:
  /v1/Credentials:
    description: Credentials for push notifications channels
    get:
      description: ""
      operationId: ListCredential
      parameters:
        - description: How many resources to return in each list page. The default is 50, and the maximum is 1000.
          in: query
          name: PageSize
          schema:
            maximum: 1000
            minimum: 1
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  credentials:
                    items:
                      $ref: "#/components/schemas/chat.v1.credential"
                    type: array
                  meta:
                    properties:
                      first_page_url:
                        format: uri
                        type: string
                      key:
                        type: string
                      next_page_url:
                        format: uri
                        type: string
                      page:
                        type: integer
                      page_size:
                        type: integer
                      previous_page_url:
                        format: uri
                        type: string
                      url:
                        format: uri
                        type: string
                    type: object
                title: ListCredentialResponse
                type: object
          description: OK
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    post:
      description: ""
      operationId: CreateCredential
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                ApiKey:
                  description: "[GCM only] The API key for the project that was obtained from the Google Developer console for your GCM Service application credential."
                  type: string
                Certificate:
                  description: |-
                    [APN only] The URL encoded representation of the certificate. For example, 
                    `-----BEGIN CERTIFICATE-----
                    MIIFnTCCBIWgAwIBAgIIAjy9H849+E8wDQYJKoZIhvcNAQEFBQAwgZYxCzAJBgNV.....A==
                    -----END CERTIFICATE-----`
                  type: string
                FriendlyName:
                  description: A descriptive string that you create to describe the new resource. It can be up to 64 characters long.
                  type: string
                PrivateKey:
                  description: |-
                    [APN only] The URL encoded representation of the private key. For example,
                    `-----BEGIN RSA PRIVATE KEY-----
                    MIIEpQIBAAKCAQEAuyf/lNrH9ck8DmNyo3fGgvCI1l9s+cmBY3WIz+cUDqmxiieR.
                    -----END RSA PRIVATE KEY-----`
                  type: string
                Sandbox:
                  description: "[APN only] Whether to send the credential to sandbox APNs. Can be `true` to send to sandbox APNs or `false` to send to production."
                  type: boolean
                Secret:
                  description: "[FCM only] The **Server key** of your project from the Firebase console, found under Settings / Cloud messaging."
                  type: string
                Type:
                  $ref: "#/components/schemas/credential_enum_push_service"
                  description: "The type of push-notification service the credential is for. Can be: `gcm`, `fcm`, or `apn`."
                  type: string
              required:
                - Type
              title: CreateCredentialRequest
              type: object
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chat.v1.credential"
          description: Created
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    servers:
      - url: https://chat.twilio.com
    x-twilio:
      defaultOutputProperties:
        - sid
        - friendly_name
        - type
      pathType: list
  "/v1/Credentials/{Sid}":
    delete:
      description: ""
      operationId: DeleteCredential
      parameters:
        - description: The Twilio-provided string that uniquely identifies the Credential resource to delete.
          in: path
          name: Sid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^CR[0-9a-fA-F]{32}$
            type: string
      responses:
        "204":
          description: The resource was deleted successfully.
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    description: Credentials for push notifications channels
    get:
      description: ""
      operationId: FetchCredential
      parameters:
        - description: The Twilio-provided string that uniquely identifies the Credential resource to fetch.
          in: path
          name: Sid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^CR[0-9a-fA-F]{32}$
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chat.v1.credential"
          description: OK
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    post:
      description: ""
      operationId: UpdateCredential
      parameters:
        - description: The Twilio-provided string that uniquely identifies the Credential resource to update.
          in: path
          name: Sid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^CR[0-9a-fA-F]{32}$
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                ApiKey:
                  description: "[GCM only] The API key for the project that was obtained from the Google Developer console for your GCM Service application credential."
                  type: string
                Certificate:
                  description: |-
                    [APN only] The URL encoded representation of the certificate. For example, 
                    `-----BEGIN CERTIFICATE-----
                    MIIFnTCCBIWgAwIBAgIIAjy9H849+E8wDQYJKoZIhvcNAQEFBQAwgZYxCzAJBgNV.....A==
                    -----END CERTIFICATE-----`
                  type: string
                FriendlyName:
                  description: A descriptive string that you create to describe the resource. It can be up to 64 characters long.
                  type: string
                PrivateKey:
                  description: |-
                    [APN only] The URL encoded representation of the private key. For example,
                    `-----BEGIN RSA PRIVATE KEY-----
                    MIIEpQIBAAKCAQEAuyf/lNrH9ck8DmNyo3fGgvCI1l9s+cmBY3WIz+cUDqmxiieR.
                    -----END RSA PRIVATE KEY-----`
                  type: string
                Sandbox:
                  description: "[APN only] Whether to send the credential to sandbox APNs. Can be `true` to send to sandbox APNs or `false` to send to production."
                  type: boolean
                Secret:
                  description: "[FCM only] The **Server key** of your project from the Firebase console, found under Settings / Cloud messaging."
                  type: string
              title: UpdateCredentialRequest
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chat.v1.credential"
          description: OK
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    servers:
      - url: https://chat.twilio.com
    x-twilio:
      defaultOutputProperties:
        - sid
        - friendly_name
        - type
      pathType: instance
  /v1/Services:
    description: Top level scope for all chat resources
    get:
      description: ""
      operationId: ListService
      parameters:
        - description: How many resources to return in each list page. The default is 50, and the maximum is 1000.
          in: query
          name: PageSize
          schema:
            maximum: 1000
            minimum: 1
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  meta:
                    properties:
                      first_page_url:
                        format: uri
                        type: string
                      key:
                        type: string
                      next_page_url:
                        format: uri
                        type: string
                      page:
                        type: integer
                      page_size:
                        type: integer
                      previous_page_url:
                        format: uri
                        type: string
                      url:
                        format: uri
                        type: string
                    type: object
                  services:
                    items:
                      $ref: "#/components/schemas/chat.v1.service"
                    type: array
                title: ListServiceResponse
                type: object
          description: OK
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    post:
      description: ""
      operationId: CreateService
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                FriendlyName:
                  description: A descriptive string that you create to describe the resource. It can be up to 64 characters long.
                  type: string
              required:
                - FriendlyName
              title: CreateServiceRequest
              type: object
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chat.v1.service"
          description: Created
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    servers:
      - url: https://chat.twilio.com
    x-twilio:
      defaultOutputProperties:
        - sid
        - friendly_name
        - date_created
      pathType: list
  "/v1/Services/{ServiceSid}/Channels":
    description: Channels represent chat rooms
    get:
      description: ""
      operationId: ListChannel
      parameters:
        - description: The SID of the [Service](https://www.twilio.com/docs/api/chat/rest/services) to read the resources from.
          in: path
          name: ServiceSid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^IS[0-9a-fA-F]{32}$
            type: string
        - description: "The visibility of the Channels to read. Can be: `public` or `private` and defaults to `public`."
          in: query
          name: Type
          schema:
            items:
              $ref: "#/components/schemas/channel_enum_channel_type"
              type: string
            type: array
        - description: How many resources to return in each list page. The default is 50, and the maximum is 1000.
          in: query
          name: PageSize
          schema:
            maximum: 1000
            minimum: 1
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  channels:
                    items:
                      $ref: "#/components/schemas/chat.v1.service.channel"
                    type: array
                  meta:
                    properties:
                      first_page_url:
                        format: uri
                        type: string
                      key:
                        type: string
                      next_page_url:
                        format: uri
                        type: string
                      page:
                        type: integer
                      page_size:
                        type: integer
                      previous_page_url:
                        format: uri
                        type: string
                      url:
                        format: uri
                        type: string
                    type: object
                title: ListChannelResponse
                type: object
          description: OK
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    post:
      description: ""
      operationId: CreateChannel
      parameters:
        - description: The SID of the [Service](https://www.twilio.com/docs/api/chat/rest/services) to create the resource under.
          in: path
          name: ServiceSid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^IS[0-9a-fA-F]{32}$
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                Attributes:
                  description: A valid JSON string that contains application-specific data.
                  type: string
                FriendlyName:
                  description: A descriptive string that you create to describe the new resource. It can be up to 64 characters long.
                  type: string
                Type:
                  $ref: "#/components/schemas/channel_enum_channel_type"
                  description: "The visibility of the channel. Can be: `public` or `private` and defaults to `public`."
                  type: string
                UniqueName:
                  description: An application-defined string that uniquely identifies the resource. It can be used to address the resource in place of the resource's `sid` in the URL. This value must be 64 characters or less in length and be unique within the Service.
                  type: string
              title: CreateChannelRequest
              type: object
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chat.v1.service.channel"
          description: Created
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    servers:
      - url: https://chat.twilio.com
    x-twilio:
      defaultOutputProperties:
        - sid
        - unique_name
        - friendly_name
      parent: /Services/{Sid}
      pathType: list
  "/v1/Services/{ServiceSid}/Channels/{ChannelSid}/Invites":
    description: Pending invitations to users to become channel members
    get:
      description: ""
      operationId: ListInvite
      parameters:
        - description: The SID of the [Service](https://www.twilio.com/docs/api/chat/rest/services) to read the resources from.
          in: path
          name: ServiceSid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^IS[0-9a-fA-F]{32}$
            type: string
        - description: The SID of the [Channel](https://www.twilio.com/docs/api/chat/rest/channels) the resources to read belong to.
          in: path
          name: ChannelSid
          required: true
          schema:
            type: string
        - description: The [User](https://www.twilio.com/docs/api/chat/rest/v1/user)'s `identity` value of the resources to read. See [access tokens](https://www.twilio.com/docs/api/chat/guides/create-tokens) for more details.
          in: query
          name: Identity
          schema:
            items:
              type: string
            type: array
        - description: How many resources to return in each list page. The default is 50, and the maximum is 1000.
          in: query
          name: PageSize
          schema:
            maximum: 1000
            minimum: 1
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  invites:
                    items:
                      $ref: "#/components/schemas/chat.v1.service.channel.invite"
                    type: array
                  meta:
                    properties:
                      first_page_url:
                        format: uri
                        type: string
                      key:
                        type: string
                      next_page_url:
                        format: uri
                        type: string
                      page:
                        type: integer
                      page_size:
                        type: integer
                      previous_page_url:
                        format: uri
                        type: string
                      url:
                        format: uri
                        type: string
                    type: object
                title: ListInviteResponse
                type: object
          description: OK
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    post:
      description: ""
      operationId: CreateInvite
      parameters:
        - description: The SID of the [Service](https://www.twilio.com/docs/api/chat/rest/services) to create the resource under.
          in: path
          name: ServiceSid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^IS[0-9a-fA-F]{32}$
            type: string
        - description: The SID of the [Channel](https://www.twilio.com/docs/api/chat/rest/channels) the new resource belongs to.
          in: path
          name: ChannelSid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                Identity:
                  description: The `identity` value that uniquely identifies the new resource's [User](https://www.twilio.com/docs/api/chat/rest/v1/user) within the [Service](https://www.twilio.com/docs/api/chat/rest/v1/service). See [access tokens](https://www.twilio.com/docs/api/chat/guides/create-tokens) for more info.
                  type: string
                RoleSid:
                  description: The SID of the [Role](https://www.twilio.com/docs/api/chat/rest/roles) assigned to the new member.
                  maxLength: 34
                  minLength: 34
                  pattern: ^RL[0-9a-fA-F]{32}$
                  type: string
              required:
                - Identity
              title: CreateInviteRequest
              type: object
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chat.v1.service.channel.invite"
          description: Created
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    servers:
      - url: https://chat.twilio.com
    x-twilio:
      defaultOutputProperties:
        - sid
        - identity
        - date_created
      parent: /Services/{ServiceSid}/Channels/{Sid}
      pathType: list
  "/v1/Services/{ServiceSid}/Channels/{ChannelSid}/Invites/{Sid}":
    delete:
      description: ""
      operationId: DeleteInvite
      parameters:
        - description: The SID of the [Service](https://www.twilio.com/docs/api/chat/rest/services) to delete the resource from.
          in: path
          name: ServiceSid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^IS[0-9a-fA-F]{32}$
            type: string
        - description: The SID of the [Channel](https://www.twilio.com/docs/api/chat/rest/channels) the resource to delete belongs to.
          in: path
          name: ChannelSid
          required: true
          schema:
            type: string
        - description: The Twilio-provided string that uniquely identifies the Invite resource to delete.
          in: path
          name: Sid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^IN[0-9a-fA-F]{32}$
            type: string
      responses:
        "204":
          description: The resource was deleted successfully.
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    description: Pending invitations to users to become channel members
    get:
      description: ""
      operationId: FetchInvite
      parameters:
        - description: The SID of the [Service](https://www.twilio.com/docs/api/chat/rest/services) to fetch the resource from.
          in: path
          name: ServiceSid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^IS[0-9a-fA-F]{32}$
            type: string
        - description: The SID of the [Channel](https://www.twilio.com/docs/api/chat/rest/channels) the resource to fetch belongs to.
          in: path
          name: ChannelSid
          required: true
          schema:
            type: string
        - description: The Twilio-provided string that uniquely identifies the Invite resource to fetch.
          in: path
          name: Sid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^IN[0-9a-fA-F]{32}$
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chat.v1.service.channel.invite"
          description: OK
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    servers:
      - url: https://chat.twilio.com
    x-twilio:
      defaultOutputProperties:
        - sid
        - identity
        - date_created
      parent: /Services/{ServiceSid}/Channels/{Sid}
      pathType: instance
  "/v1/Services/{ServiceSid}/Channels/{ChannelSid}/Members":
    description: Users joined to specific channels
    get:
      description: ""
      operationId: ListMember
      parameters:
        - description: The SID of the [Service](https://www.twilio.com/docs/api/chat/rest/services) to read the resources from.
          in: path
          name: ServiceSid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^IS[0-9a-fA-F]{32}$
            type: string
        - description: The unique ID of the [Channel](https://www.twilio.com/docs/api/chat/rest/channels) the members to read belong to. Can be the Channel resource's `sid` or `unique_name` value.
          in: path
          name: ChannelSid
          required: true
          schema:
            type: string
        - description: The [User](https://www.twilio.com/docs/api/chat/rest/v1/user)'s `identity` value of the resources to read. See [access tokens](https://www.twilio.com/docs/api/chat/guides/create-tokens) for more details.
          in: query
          name: Identity
          schema:
            items:
              type: string
            type: array
        - description: How many resources to return in each list page. The default is 50, and the maximum is 1000.
          in: query
          name: PageSize
          schema:
            maximum: 1000
            minimum: 1
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  members:
                    items:
                      $ref: "#/components/schemas/chat.v1.service.channel.member"
                    type: array
                  meta:
                    properties:
                      first_page_url:
                        format: uri
                        type: string
                      key:
                        type: string
                      next_page_url:
                        format: uri
                        type: string
                      page:
                        type: integer
                      page_size:
                        type: integer
                      previous_page_url:
                        format: uri
                        type: string
                      url:
                        format: uri
                        type: string
                    type: object
                title: ListMemberResponse
                type: object
          description: OK
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    post:
      description: ""
      operationId: CreateMember
      parameters:
        - description: The SID of the [Service](https://www.twilio.com/docs/api/chat/rest/services) to create the resource under.
          in: path
          name: ServiceSid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^IS[0-9a-fA-F]{32}$
            type: string
        - description: The unique ID of the [Channel](https://www.twilio.com/docs/api/chat/rest/channels) the new member belongs to. Can be the Channel resource's `sid` or `unique_name`.
          in: path
          name: ChannelSid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                Identity:
                  description: The `identity` value that uniquely identifies the new resource's [User](https://www.twilio.com/docs/api/chat/rest/v1/user) within the [Service](https://www.twilio.com/docs/api/chat/rest/services). See [access tokens](https://www.twilio.com/docs/api/chat/guides/create-tokens) for more details.
                  type: string
                RoleSid:
                  description: The SID of the [Role](https://www.twilio.com/docs/api/chat/rest/roles) to assign to the member. The default roles are those specified on the [Service](https://www.twilio.com/docs/chat/api/services).
                  maxLength: 34
                  minLength: 34
                  pattern: ^RL[0-9a-fA-F]{32}$
                  type: string
              required:
                - Identity
              title: CreateMemberRequest
              type: object
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chat.v1.service.channel.member"
          description: Created
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    servers:
      - url: https://chat.twilio.com
    x-twilio:
      defaultOutputProperties:
        - sid
        - identity
        - date_created
      parent: /Services/{ServiceSid}/Channels/{Sid}
      pathType: list
  "/v1/Services/{ServiceSid}/Channels/{ChannelSid}/Members/{Sid}":
    delete:
      description: ""
      operationId: DeleteMember
      parameters:
        - description: The SID of the [Service](https://www.twilio.com/docs/api/chat/rest/services) to delete the resource from.
          in: path
          name: ServiceSid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^IS[0-9a-fA-F]{32}$
            type: string
        - description: The unique ID of the [Channel](https://www.twilio.com/docs/api/chat/rest/channels) the message belongs to.  Can be the Channel's `sid` or `unique_name`.
          in: path
          name: ChannelSid
          required: true
          schema:
            type: string
        - description: The Twilio-provided string that uniquely identifies the Member resource to delete.
          in: path
          name: Sid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^MB[0-9a-fA-F]{32}$
            type: string
      responses:
        "204":
          description: The resource was deleted successfully.
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    description: Users joined to specific channels
    get:
      description: ""
      operationId: FetchMember
      parameters:
        - description: The SID of the [Service](https://www.twilio.com/docs/api/chat/rest/services) to fetch the resource from.
          in: path
          name: ServiceSid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^IS[0-9a-fA-F]{32}$
            type: string
        - description: The unique ID of the [Channel](https://www.twilio.com/docs/api/chat/rest/channels) the member to fetch belongs to. Can be the Channel resource's `sid` or `unique_name` value.
          in: path
          name: ChannelSid
          required: true
          schema:
            type: string
        - description: The Twilio-provided string that uniquely identifies the Member resource to fetch.
          in: path
          name: Sid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^MB[0-9a-fA-F]{32}$
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chat.v1.service.channel.member"
          description: OK
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    post:
      description: ""
      operationId: UpdateMember
      parameters:
        - description: The SID of the [Service](https://www.twilio.com/docs/api/chat/rest/services) to update the resource from.
          in: path
          name: ServiceSid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^IS[0-9a-fA-F]{32}$
            type: string
        - description: The unique ID of the [Channel](https://www.twilio.com/docs/api/chat/rest/channels) the member to update belongs to. Can be the Channel resource's `sid` or `unique_name`.
          in: path
          name: ChannelSid
          required: true
          schema:
            type: string
        - description: The Twilio-provided string that uniquely identifies the Member resource to update.
          in: path
          name: Sid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^MB[0-9a-fA-F]{32}$
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                LastConsumedMessageIndex:
                  description: The index of the last [Message](https://www.twilio.com/docs/api/chat/rest/messages) that the Member has read within the [Channel](https://www.twilio.com/docs/api/chat/rest/channels).
                  nullable: true
                  type: integer
                RoleSid:
                  description: The SID of the [Role](https://www.twilio.com/docs/api/chat/rest/roles) to assign to the member. The default roles are those specified on the [Service](https://www.twilio.com/docs/chat/api/services).
                  maxLength: 34
                  minLength: 34
                  pattern: ^RL[0-9a-fA-F]{32}$
                  type: string
              title: UpdateMemberRequest
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chat.v1.service.channel.member"
          description: OK
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    servers:
      - url: https://chat.twilio.com
    x-twilio:
      defaultOutputProperties:
        - sid
        - identity
        - date_created
      parent: /Services/{ServiceSid}/Channels/{Sid}
      pathType: instance
  "/v1/Services/{ServiceSid}/Channels/{ChannelSid}/Messages":
    description: Individual chat messages
    get:
      description: ""
      operationId: ListMessage
      parameters:
        - description: The SID of the [Service](https://www.twilio.com/docs/api/chat/rest/services) to read the resources from.
          in: path
          name: ServiceSid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^IS[0-9a-fA-F]{32}$
            type: string
        - description: The unique ID of the [Channel](https://www.twilio.com/docs/api/chat/rest/channels) the message to read belongs to. Can be the Channel's `sid` or `unique_name`.
          in: path
          name: ChannelSid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^CH[0-9a-fA-F]{32}$
            type: string
        - description: "The sort order of the returned messages. Can be: `asc` (ascending) or `desc` (descending) with `asc` as the default."
          in: query
          name: Order
          schema:
            $ref: "#/components/schemas/message_enum_order_type"
            type: string
        - description: How many resources to return in each list page. The default is 50, and the maximum is 1000.
          in: query
          name: PageSize
          schema:
            maximum: 1000
            minimum: 1
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  messages:
                    items:
                      $ref: "#/components/schemas/chat.v1.service.channel.message"
                    type: array
                  meta:
                    properties:
                      first_page_url:
                        format: uri
                        type: string
                      key:
                        type: string
                      next_page_url:
                        format: uri
                        type: string
                      page:
                        type: integer
                      page_size:
                        type: integer
                      previous_page_url:
                        format: uri
                        type: string
                      url:
                        format: uri
                        type: string
                    type: object
                title: ListMessageResponse
                type: object
          description: OK
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    post:
      description: ""
      operationId: CreateMessage
      parameters:
        - description: The SID of the [Service](https://www.twilio.com/docs/api/chat/rest/services) to create the resource under.
          in: path
          name: ServiceSid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^IS[0-9a-fA-F]{32}$
            type: string
        - description: The unique ID of the [Channel](https://www.twilio.com/docs/api/chat/rest/channels) the new resource belongs to. Can be the Channel resource's `sid` or `unique_name`.
          in: path
          name: ChannelSid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^CH[0-9a-fA-F]{32}$
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                Attributes:
                  description: A valid JSON string that contains application-specific data.
                  type: string
                Body:
                  description: The message to send to the channel. Can also be an empty string or `null`, which sets the value as an empty string. You can send structured data in the body by serializing it as a string.
                  type: string
                From:
                  description: The [identity](https://www.twilio.com/docs/api/chat/guides/identity) of the new message's author. The default value is `system`.
                  type: string
              required:
                - Body
              title: CreateMessageRequest
              type: object
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chat.v1.service.channel.message"
          description: Created
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    servers:
      - url: https://chat.twilio.com
    x-twilio:
      defaultOutputProperties:
        - sid
        - from
        - to
        - date_created
      parent: /Services/{ServiceSid}/Channels/{Sid}
      pathType: list
  "/v1/Services/{ServiceSid}/Channels/{ChannelSid}/Messages/{Sid}":
    delete:
      description: ""
      operationId: DeleteMessage
      parameters:
        - description: The SID of the [Service](https://www.twilio.com/docs/api/chat/rest/services) to delete the resource from.
          in: path
          name: ServiceSid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^IS[0-9a-fA-F]{32}$
            type: string
        - description: The unique ID of the [Channel](https://www.twilio.com/docs/api/chat/rest/channels) the message to delete belongs to.  Can be the Channel resource's `sid` or `unique_name`.
          in: path
          name: ChannelSid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^CH[0-9a-fA-F]{32}$
            type: string
        - description: The Twilio-provided string that uniquely identifies the Message resource to delete.
          in: path
          name: Sid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^IM[0-9a-fA-F]{32}$
            type: string
      responses:
        "204":
          description: The resource was deleted successfully.
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    description: Individual chat messages
    get:
      description: ""
      operationId: FetchMessage
      parameters:
        - description: The SID of the [Service](https://www.twilio.com/docs/api/chat/rest/services) to fetch the resource from.
          in: path
          name: ServiceSid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^IS[0-9a-fA-F]{32}$
            type: string
        - description: The unique ID of the [Channel](https://www.twilio.com/docs/api/chat/rest/channels) the message to fetch belongs to. Can be the Channel's `sid` or `unique_name`.
          in: path
          name: ChannelSid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^CH[0-9a-fA-F]{32}$
            type: string
        - description: The Twilio-provided string that uniquely identifies the Message resource to fetch.
          in: path
          name: Sid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^IM[0-9a-fA-F]{32}$
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chat.v1.service.channel.message"
          description: OK
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    post:
      description: ""
      operationId: UpdateMessage
      parameters:
        - description: The SID of the [Service](https://www.twilio.com/docs/api/chat/rest/services) to update the resource from.
          in: path
          name: ServiceSid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^IS[0-9a-fA-F]{32}$
            type: string
        - description: The unique ID of the [Channel](https://www.twilio.com/docs/api/chat/rest/channels) the message belongs to. Can be the Channel's `sid` or `unique_name`.
          in: path
          name: ChannelSid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^CH[0-9a-fA-F]{32}$
            type: string
        - description: The Twilio-provided string that uniquely identifies the Message resource to update.
          in: path
          name: Sid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^IM[0-9a-fA-F]{32}$
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                Attributes:
                  description: A valid JSON string that contains application-specific data.
                  type: string
                Body:
                  description: The message to send to the channel. Can also be an empty string or `null`, which sets the value as an empty string. You can send structured data in the body by serializing it as a string.
                  type: string
              title: UpdateMessageRequest
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chat.v1.service.channel.message"
          description: OK
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    servers:
      - url: https://chat.twilio.com
    x-twilio:
      defaultOutputProperties:
        - sid
        - from
        - to
        - date_created
      parent: /Services/{ServiceSid}/Channels/{Sid}
      pathType: instance
  "/v1/Services/{ServiceSid}/Channels/{Sid}":
    delete:
      description: ""
      operationId: DeleteChannel
      parameters:
        - description: The SID of the [Service](https://www.twilio.com/docs/api/chat/rest/services) to delete the resource from.
          in: path
          name: ServiceSid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^IS[0-9a-fA-F]{32}$
            type: string
        - description: The Twilio-provided string that uniquely identifies the Channel resource to delete.
          in: path
          name: Sid
          required: true
          schema:
            type: string
      responses:
        "204":
          description: The resource was deleted successfully.
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    description: Channels represent chat rooms
    get:
      description: ""
      operationId: FetchChannel
      parameters:
        - description: The SID of the [Service](https://www.twilio.com/docs/api/chat/rest/services) to fetch the resource from.
          in: path
          name: ServiceSid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^IS[0-9a-fA-F]{32}$
            type: string
        - description: The Twilio-provided string that uniquely identifies the Channel resource to fetch.
          in: path
          name: Sid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chat.v1.service.channel"
          description: OK
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    post:
      description: ""
      operationId: UpdateChannel
      parameters:
        - description: The SID of the [Service](https://www.twilio.com/docs/api/chat/rest/services) to update the resource from.
          in: path
          name: ServiceSid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^IS[0-9a-fA-F]{32}$
            type: string
        - description: The Twilio-provided string that uniquely identifies the Channel resource to update.
          in: path
          name: Sid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                Attributes:
                  description: A valid JSON string that contains application-specific data.
                  type: string
                FriendlyName:
                  description: A descriptive string that you create to describe the resource. It can be up to 64 characters long.
                  type: string
                UniqueName:
                  description: An application-defined string that uniquely identifies the resource. It can be used to address the resource in place of the resource's `sid` in the URL. This value must be 64 characters or less in length and be unique within the Service.
                  type: string
              title: UpdateChannelRequest
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chat.v1.service.channel"
          description: OK
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    servers:
      - url: https://chat.twilio.com
    x-twilio:
      defaultOutputProperties:
        - sid
        - unique_name
        - friendly_name
      parent: /Services/{Sid}
      pathType: instance
  "/v1/Services/{ServiceSid}/Roles":
    description: Roles determining user or member permissions
    get:
      description: ""
      operationId: ListRole
      parameters:
        - description: The SID of the [Service](https://www.twilio.com/docs/api/chat/rest/services) to read the resources from.
          in: path
          name: ServiceSid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^IS[0-9a-fA-F]{32}$
            type: string
        - description: How many resources to return in each list page. The default is 50, and the maximum is 1000.
          in: query
          name: PageSize
          schema:
            maximum: 1000
            minimum: 1
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  meta:
                    properties:
                      first_page_url:
                        format: uri
                        type: string
                      key:
                        type: string
                      next_page_url:
                        format: uri
                        type: string
                      page:
                        type: integer
                      page_size:
                        type: integer
                      previous_page_url:
                        format: uri
                        type: string
                      url:
                        format: uri
                        type: string
                    type: object
                  roles:
                    items:
                      $ref: "#/components/schemas/chat.v1.service.role"
                    type: array
                title: ListRoleResponse
                type: object
          description: OK
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    post:
      description: ""
      operationId: CreateRole
      parameters:
        - description: The SID of the [Service](https://www.twilio.com/docs/api/chat/rest/services) to create the resource under.
          in: path
          name: ServiceSid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^IS[0-9a-fA-F]{32}$
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                FriendlyName:
                  description: A descriptive string that you create to describe the new resource. It can be up to 64 characters long.
                  type: string
                Permission:
                  description: A permission that you grant to the new role. Only one permission can be granted per parameter. To assign more than one permission, repeat this parameter for each permission value. The values for this parameter depend on the role's `type` and are described in the documentation.
                  items:
                    type: string
                  type: array
                Type:
                  $ref: "#/components/schemas/role_enum_role_type"
                  description: "The type of role. Can be: `channel` for [Channel](https://www.twilio.com/docs/chat/api/channels) roles or `deployment` for [Service](https://www.twilio.com/docs/chat/api/services) roles."
                  type: string
              required:
                - FriendlyName
                - Type
                - Permission
              title: CreateRoleRequest
              type: object
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chat.v1.service.role"
          description: Created
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    servers:
      - url: https://chat.twilio.com
    x-twilio:
      defaultOutputProperties:
        - sid
        - friendly_name
        - type
      parent: /Services/{Sid}
      pathType: list
  "/v1/Services/{ServiceSid}/Roles/{Sid}":
    delete:
      description: ""
      operationId: DeleteRole
      parameters:
        - description: The SID of the [Service](https://www.twilio.com/docs/api/chat/rest/services) to delete the resource from.
          in: path
          name: ServiceSid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^IS[0-9a-fA-F]{32}$
            type: string
        - description: The Twilio-provided string that uniquely identifies the Role resource to delete.
          in: path
          name: Sid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^RL[0-9a-fA-F]{32}$
            type: string
      responses:
        "204":
          description: The resource was deleted successfully.
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    description: Roles determining user or member permissions
    get:
      description: ""
      operationId: FetchRole
      parameters:
        - description: The SID of the [Service](https://www.twilio.com/docs/api/chat/rest/services) to fetch the resource from.
          in: path
          name: ServiceSid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^IS[0-9a-fA-F]{32}$
            type: string
        - description: The Twilio-provided string that uniquely identifies the Role resource to fetch.
          in: path
          name: Sid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^RL[0-9a-fA-F]{32}$
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chat.v1.service.role"
          description: OK
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    post:
      description: ""
      operationId: UpdateRole
      parameters:
        - description: The SID of the [Service](https://www.twilio.com/docs/api/chat/rest/services) to update the resource from.
          in: path
          name: ServiceSid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^IS[0-9a-fA-F]{32}$
            type: string
        - description: The Twilio-provided string that uniquely identifies the Role resource to update.
          in: path
          name: Sid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^RL[0-9a-fA-F]{32}$
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                Permission:
                  description: A permission that you grant to the role. Only one permission can be granted per parameter. To assign more than one permission, repeat this parameter for each permission value. The values for this parameter depend on the role's `type` and are described in the documentation.
                  items:
                    type: string
                  type: array
              required:
                - Permission
              title: UpdateRoleRequest
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chat.v1.service.role"
          description: OK
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    servers:
      - url: https://chat.twilio.com
    x-twilio:
      defaultOutputProperties:
        - sid
        - friendly_name
        - type
      parent: /Services/{Sid}
      pathType: instance
  "/v1/Services/{ServiceSid}/Users":
    description: Unique chat users within a chat service
    get:
      description: ""
      operationId: ListUser
      parameters:
        - description: The SID of the [Service](https://www.twilio.com/docs/api/chat/rest/services) to read the resources from.
          in: path
          name: ServiceSid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^IS[0-9a-fA-F]{32}$
            type: string
        - description: How many resources to return in each list page. The default is 50, and the maximum is 1000.
          in: query
          name: PageSize
          schema:
            maximum: 1000
            minimum: 1
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  meta:
                    properties:
                      first_page_url:
                        format: uri
                        type: string
                      key:
                        type: string
                      next_page_url:
                        format: uri
                        type: string
                      page:
                        type: integer
                      page_size:
                        type: integer
                      previous_page_url:
                        format: uri
                        type: string
                      url:
                        format: uri
                        type: string
                    type: object
                  users:
                    items:
                      $ref: "#/components/schemas/chat.v1.service.user"
                    type: array
                title: ListUserResponse
                type: object
          description: OK
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    post:
      description: ""
      operationId: CreateUser
      parameters:
        - description: The SID of the [Service](https://www.twilio.com/docs/api/chat/rest/services) to create the resource under.
          in: path
          name: ServiceSid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^IS[0-9a-fA-F]{32}$
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                Attributes:
                  description: A valid JSON string that contains application-specific data.
                  type: string
                FriendlyName:
                  description: A descriptive string that you create to describe the new resource. This value is often used for display purposes.
                  type: string
                Identity:
                  description: The `identity` value that uniquely identifies the new resource's [User](https://www.twilio.com/docs/api/chat/rest/v1/user) within the [Service](https://www.twilio.com/docs/api/chat/rest/v1/service). This value is often a username or email address. See the Identity documentation for more details.
                  type: string
                RoleSid:
                  description: The SID of the [Role](https://www.twilio.com/docs/api/chat/rest/roles) assigned to the new User.
                  maxLength: 34
                  minLength: 34
                  pattern: ^RL[0-9a-fA-F]{32}$
                  type: string
              required:
                - Identity
              title: CreateUserRequest
              type: object
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chat.v1.service.user"
          description: Created
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    servers:
      - url: https://chat.twilio.com
    x-twilio:
      defaultOutputProperties:
        - sid
        - friendly_name
        - date_created
      parent: /Services/{Sid}
      pathType: list
  "/v1/Services/{ServiceSid}/Users/{Sid}":
    delete:
      description: ""
      operationId: DeleteUser
      parameters:
        - description: The SID of the [Service](https://www.twilio.com/docs/api/chat/rest/services) to delete the resource from.
          in: path
          name: ServiceSid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^IS[0-9a-fA-F]{32}$
            type: string
        - description: The Twilio-provided string that uniquely identifies the User resource to delete.
          in: path
          name: Sid
          required: true
          schema:
            type: string
      responses:
        "204":
          description: The resource was deleted successfully.
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    description: Unique chat users within a chat service
    get:
      description: ""
      operationId: FetchUser
      parameters:
        - description: The SID of the [Service](https://www.twilio.com/docs/api/chat/rest/services) to fetch the resource from.
          in: path
          name: ServiceSid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^IS[0-9a-fA-F]{32}$
            type: string
        - description: The Twilio-provided string that uniquely identifies the User resource to fetch.
          in: path
          name: Sid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chat.v1.service.user"
          description: OK
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    post:
      description: ""
      operationId: UpdateUser
      parameters:
        - description: The SID of the [Service](https://www.twilio.com/docs/api/chat/rest/services) to update the resource from.
          in: path
          name: ServiceSid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^IS[0-9a-fA-F]{32}$
            type: string
        - description: The Twilio-provided string that uniquely identifies the User resource to update.
          in: path
          name: Sid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                Attributes:
                  description: A valid JSON string that contains application-specific data.
                  type: string
                FriendlyName:
                  description: A descriptive string that you create to describe the resource. It is often used for display purposes.
                  type: string
                RoleSid:
                  description: The SID of the [Role](https://www.twilio.com/docs/api/chat/rest/roles) assigned to this user.
                  maxLength: 34
                  minLength: 34
                  pattern: ^RL[0-9a-fA-F]{32}$
                  type: string
              title: UpdateUserRequest
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chat.v1.service.user"
          description: OK
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    servers:
      - url: https://chat.twilio.com
    x-twilio:
      defaultOutputProperties:
        - sid
        - friendly_name
        - date_created
      parent: /Services/{Sid}
      pathType: instance
  "/v1/Services/{ServiceSid}/Users/{UserSid}/Channels":
    description: "TODO: Resource-level docs"
    get:
      description: List all Channels for a given User.
      operationId: ListUserChannel
      parameters:
        - description: The SID of the [Service](https://www.twilio.com/docs/api/chat/rest/services) to read the resources from.
          in: path
          name: ServiceSid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^IS[0-9a-fA-F]{32}$
            type: string
        - description: The SID of the [User](https://www.twilio.com/docs/api/chat/rest/users) to read the User Channel resources from.
          in: path
          name: UserSid
          required: true
          schema:
            type: string
        - description: How many resources to return in each list page. The default is 50, and the maximum is 1000.
          in: query
          name: PageSize
          schema:
            maximum: 1000
            minimum: 1
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  channels:
                    items:
                      $ref: "#/components/schemas/chat.v1.service.user.user_channel"
                    type: array
                  meta:
                    properties:
                      first_page_url:
                        format: uri
                        type: string
                      key:
                        type: string
                      next_page_url:
                        format: uri
                        type: string
                      page:
                        type: integer
                      page_size:
                        type: integer
                      previous_page_url:
                        format: uri
                        type: string
                      url:
                        format: uri
                        type: string
                    type: object
                title: ListUserChannelResponse
                type: object
          description: OK
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    servers:
      - url: https://chat.twilio.com
    x-twilio:
      defaultOutputProperties:
        - channel_sid
        - status
      mountName: user_channels
      parent: /Services/{ServiceSid}/Users/{Sid}
      pathType: list
  "/v1/Services/{Sid}":
    delete:
      description: ""
      operationId: DeleteService
      parameters:
        - description: The Twilio-provided string that uniquely identifies the Service resource to delete.
          in: path
          name: Sid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^IS[0-9a-fA-F]{32}$
            type: string
      responses:
        "204":
          description: The resource was deleted successfully.
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    description: Top level scope for all chat resources
    get:
      description: ""
      operationId: FetchService
      parameters:
        - description: The Twilio-provided string that uniquely identifies the Service resource to fetch.
          in: path
          name: Sid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^IS[0-9a-fA-F]{32}$
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chat.v1.service"
          description: OK
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    post:
      description: ""
      operationId: UpdateService
      parameters:
        - description: The Twilio-provided string that uniquely identifies the Service resource to update.
          in: path
          name: Sid
          required: true
          schema:
            maxLength: 34
            minLength: 34
            pattern: ^IS[0-9a-fA-F]{32}$
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                ConsumptionReportInterval:
                  description: DEPRECATED. The interval in seconds between consumption reports submission batches from client endpoints.
                  type: integer
                DefaultChannelCreatorRoleSid:
                  description: The channel role assigned to a channel creator when they join a new channel. See the [Roles endpoint](https://www.twilio.com/docs/chat/api/roles) for more details.
                  maxLength: 34
                  minLength: 34
                  pattern: ^RL[0-9a-fA-F]{32}$
                  type: string
                DefaultChannelRoleSid:
                  description: The channel role assigned to users when they are added to a channel. See the [Roles endpoint](https://www.twilio.com/docs/chat/api/roles) for more details.
                  maxLength: 34
                  minLength: 34
                  pattern: ^RL[0-9a-fA-F]{32}$
                  type: string
                DefaultServiceRoleSid:
                  description: The service role assigned to users when they are added to the service. See the [Roles endpoint](https://www.twilio.com/docs/chat/api/roles) for more details.
                  maxLength: 34
                  minLength: 34
                  pattern: ^RL[0-9a-fA-F]{32}$
                  type: string
                FriendlyName:
                  description: A descriptive string that you create to describe the resource. It can be up to 64 characters long.
                  type: string
                Limits.ChannelMembers:
                  description: The maximum number of Members that can be added to Channels within this Service. Can be up to 1,000.
                  type: integer
                Limits.UserChannels:
                  description: The maximum number of Channels Users can be a Member of within this Service. Can be up to 1,000.
                  type: integer
                Notifications.AddedToChannel.Enabled:
                  description: "Whether to send a notification when a member is added to a channel. Can be: `true` or `false` and the default is `false`."
                  type: boolean
                Notifications.AddedToChannel.Template:
                  description: The template to use to create the notification text displayed when a member is added to a channel and `notifications.added_to_channel.enabled` is `true`.
                  type: string
                Notifications.InvitedToChannel.Enabled:
                  description: "Whether to send a notification when a user is invited to a channel. Can be: `true` or `false` and the default is `false`."
                  type: boolean
                Notifications.InvitedToChannel.Template:
                  description: The template to use to create the notification text displayed when a user is invited to a channel and `notifications.invited_to_channel.enabled` is `true`.
                  type: string
                Notifications.NewMessage.Enabled:
                  description: "Whether to send a notification when a new message is added to a channel. Can be: `true` or `false` and the default is `false`."
                  type: boolean
                Notifications.NewMessage.Template:
                  description: The template to use to create the notification text displayed when a new message is added to a channel and `notifications.new_message.enabled` is `true`.
                  type: string
                Notifications.RemovedFromChannel.Enabled:
                  description: "Whether to send a notification to a user when they are removed from a channel. Can be: `true` or `false` and the default is `false`."
                  type: boolean
                Notifications.RemovedFromChannel.Template:
                  description: The template to use to create the notification text displayed to a user when they are removed from a channel and `notifications.removed_from_channel.enabled` is `true`.
                  type: string
                PostWebhookUrl:
                  description: The URL for post-event webhooks, which are called by using the `webhook_method`. See [Webhook Events](https://www.twilio.com/docs/api/chat/webhooks) for more details.
                  format: uri
                  type: string
                PreWebhookUrl:
                  description: The URL for pre-event webhooks, which are called by using the `webhook_method`. See [Webhook Events](https://www.twilio.com/docs/api/chat/webhooks) for more details.
                  format: uri
                  type: string
                ReachabilityEnabled:
                  description: Whether to enable the [Reachability Indicator](https://www.twilio.com/docs/chat/reachability-indicator) for this Service instance. The default is `false`.
                  type: boolean
                ReadStatusEnabled:
                  description: Whether to enable the [Message Consumption Horizon](https://www.twilio.com/docs/chat/consumption-horizon) feature. The default is `true`.
                  type: boolean
                TypingIndicatorTimeout:
                  description: How long in seconds after a `started typing` event until clients should assume that user is no longer typing, even if no `ended typing` message was received.  The default is 5 seconds.
                  type: integer
                WebhookFilters:
                  description: The list of WebHook events that are enabled for this Service instance. See [Webhook Events](https://www.twilio.com/docs/chat/webhook-events) for more details.
                  items:
                    type: string
                  type: array
                WebhookMethod:
                  description: "The HTTP method to use for calls to the `pre_webhook_url` and `post_webhook_url` webhooks.  Can be: `POST` or `GET` and the default is `POST`. See [Webhook Events](https://www.twilio.com/docs/chat/webhook-events) for more details."
                  enum:
                    - HEAD
                    - GET
                    - POST
                    - PATCH
                    - PUT
                    - DELETE
                  format: http-method
                  type: string
                Webhooks.OnChannelAdd.Method:
                  description: The HTTP method to use when calling the `webhooks.on_channel_add.url`.
                  enum:
                    - HEAD
                    - GET
                    - POST
                    - PATCH
                    - PUT
                    - DELETE
                  format: http-method
                  type: string
                Webhooks.OnChannelAdd.Url:
                  description: The URL of the webhook to call in response to the `on_channel_add` event using the `webhooks.on_channel_add.method` HTTP method.
                  format: uri
                  type: string
                Webhooks.OnChannelAdded.Method:
                  description: The URL of the webhook to call in response to the `on_channel_added` event`.
                  enum:
                    - HEAD
                    - GET
                    - POST
                    - PATCH
                    - PUT
                    - DELETE
                  format: http-method
                  type: string
                Webhooks.OnChannelAdded.Url:
                  description: The URL of the webhook to call in response to the `on_channel_added` event using the `webhooks.on_channel_added.method` HTTP method.
                  format: uri
                  type: string
                Webhooks.OnChannelDestroy.Method:
                  description: The HTTP method to use when calling the `webhooks.on_channel_destroy.url`.
                  enum:
                    - HEAD
                    - GET
                    - POST
                    - PATCH
                    - PUT
                    - DELETE
                  format: http-method
                  type: string
                Webhooks.OnChannelDestroy.Url:
                  description: The URL of the webhook to call in response to the `on_channel_destroy` event using the `webhooks.on_channel_destroy.method` HTTP method.
                  format: uri
                  type: string
                Webhooks.OnChannelDestroyed.Method:
                  description: The HTTP method to use when calling the `webhooks.on_channel_destroyed.url`.
                  enum:
                    - HEAD
                    - GET
                    - POST
                    - PATCH
                    - PUT
                    - DELETE
                  format: http-method
                  type: string
                Webhooks.OnChannelDestroyed.Url:
                  description: The URL of the webhook to call in response to the `on_channel_added` event using the `webhooks.on_channel_destroyed.method` HTTP method.
                  format: uri
                  type: string
                Webhooks.OnChannelUpdate.Method:
                  description: The HTTP method to use when calling the `webhooks.on_channel_update.url`.
                  enum:
                    - HEAD
                    - GET
                    - POST
                    - PATCH
                    - PUT
                    - DELETE
                  format: http-method
                  type: string
                Webhooks.OnChannelUpdate.Url:
                  description: The URL of the webhook to call in response to the `on_channel_update` event using the `webhooks.on_channel_update.method` HTTP method.
                  format: uri
                  type: string
                Webhooks.OnChannelUpdated.Method:
                  description: The HTTP method to use when calling the `webhooks.on_channel_updated.url`.
                  enum:
                    - HEAD
                    - GET
                    - POST
                    - PATCH
                    - PUT
                    - DELETE
                  format: http-method
                  type: string
                Webhooks.OnChannelUpdated.Url:
                  description: The URL of the webhook to call in response to the `on_channel_updated` event using the `webhooks.on_channel_updated.method` HTTP method.
                  format: uri
                  type: string
                Webhooks.OnMemberAdd.Method:
                  description: The HTTP method to use when calling the `webhooks.on_member_add.url`.
                  enum:
                    - HEAD
                    - GET
                    - POST
                    - PATCH
                    - PUT
                    - DELETE
                  format: http-method
                  type: string
                Webhooks.OnMemberAdd.Url:
                  description: The URL of the webhook to call in response to the `on_member_add` event using the `webhooks.on_member_add.method` HTTP method.
                  format: uri
                  type: string
                Webhooks.OnMemberAdded.Method:
                  description: The HTTP method to use when calling the `webhooks.on_channel_updated.url`.
                  enum:
                    - HEAD
                    - GET
                    - POST
                    - PATCH
                    - PUT
                    - DELETE
                  format: http-method
                  type: string
                Webhooks.OnMemberAdded.Url:
                  description: The URL of the webhook to call in response to the `on_channel_updated` event using the `webhooks.on_channel_updated.method` HTTP method.
                  format: uri
                  type: string
                Webhooks.OnMemberRemove.Method:
                  description: The HTTP method to use when calling the `webhooks.on_member_remove.url`.
                  enum:
                    - HEAD
                    - GET
                    - POST
                    - PATCH
                    - PUT
                    - DELETE
                  format: http-method
                  type: string
                Webhooks.OnMemberRemove.Url:
                  description: The URL of the webhook to call in response to the `on_member_remove` event using the `webhooks.on_member_remove.method` HTTP method.
                  format: uri
                  type: string
                Webhooks.OnMemberRemoved.Method:
                  description: The HTTP method to use when calling the `webhooks.on_member_removed.url`.
                  enum:
                    - HEAD
                    - GET
                    - POST
                    - PATCH
                    - PUT
                    - DELETE
                  format: http-method
                  type: string
                Webhooks.OnMemberRemoved.Url:
                  description: The URL of the webhook to call in response to the `on_member_removed` event using the `webhooks.on_member_removed.method` HTTP method.
                  format: uri
                  type: string
                Webhooks.OnMessageRemove.Method:
                  description: The HTTP method to use when calling the `webhooks.on_message_remove.url`.
                  enum:
                    - HEAD
                    - GET
                    - POST
                    - PATCH
                    - PUT
                    - DELETE
                  format: http-method
                  type: string
                Webhooks.OnMessageRemove.Url:
                  description: The URL of the webhook to call in response to the `on_message_remove` event using the `webhooks.on_message_remove.method` HTTP method.
                  format: uri
                  type: string
                Webhooks.OnMessageRemoved.Method:
                  description: The HTTP method to use when calling the `webhooks.on_message_removed.url`.
                  enum:
                    - HEAD
                    - GET
                    - POST
                    - PATCH
                    - PUT
                    - DELETE
                  format: http-method
                  type: string
                Webhooks.OnMessageRemoved.Url:
                  description: The URL of the webhook to call in response to the `on_message_removed` event using the `webhooks.on_message_removed.method` HTTP method.
                  format: uri
                  type: string
                Webhooks.OnMessageSend.Method:
                  description: The HTTP method to use when calling the `webhooks.on_message_send.url`.
                  enum:
                    - HEAD
                    - GET
                    - POST
                    - PATCH
                    - PUT
                    - DELETE
                  format: http-method
                  type: string
                Webhooks.OnMessageSend.Url:
                  description: The URL of the webhook to call in response to the `on_message_send` event using the `webhooks.on_message_send.method` HTTP method.
                  format: uri
                  type: string
                Webhooks.OnMessageSent.Method:
                  description: The URL of the webhook to call in response to the `on_message_sent` event`.
                  enum:
                    - HEAD
                    - GET
                    - POST
                    - PATCH
                    - PUT
                    - DELETE
                  format: http-method
                  type: string
                Webhooks.OnMessageSent.Url:
                  description: The URL of the webhook to call in response to the `on_message_sent` event using the `webhooks.on_message_sent.method` HTTP method.
                  format: uri
                  type: string
                Webhooks.OnMessageUpdate.Method:
                  description: The HTTP method to use when calling the `webhooks.on_message_update.url`.
                  enum:
                    - HEAD
                    - GET
                    - POST
                    - PATCH
                    - PUT
                    - DELETE
                  format: http-method
                  type: string
                Webhooks.OnMessageUpdate.Url:
                  description: The URL of the webhook to call in response to the `on_message_update` event using the `webhooks.on_message_update.method` HTTP method.
                  format: uri
                  type: string
                Webhooks.OnMessageUpdated.Method:
                  description: The HTTP method to use when calling the `webhooks.on_message_updated.url`.
                  enum:
                    - HEAD
                    - GET
                    - POST
                    - PATCH
                    - PUT
                    - DELETE
                  format: http-method
                  type: string
                Webhooks.OnMessageUpdated.Url:
                  description: The URL of the webhook to call in response to the `on_message_updated` event using the `webhooks.on_message_updated.method` HTTP method.
                  format: uri
                  type: string
              title: UpdateServiceRequest
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chat.v1.service"
          description: OK
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    servers:
      - url: https://chat.twilio.com
    x-twilio:
      defaultOutputProperties:
        - sid
        - friendly_name
        - date_created
      pathType: instance
components:
  schemas:
    channel_enum_channel_type:
      enum:
        - public
        - private
      type: string
    chat.v1.credential:
      properties:
        account_sid:
          description: The SID of the Account that created the resource
          maxLength: 34
          minLength: 34
          nullable: true
          pattern: ^AC[0-9a-fA-F]{32}$
          type: string
        date_created:
          description: The RFC 2822 date and time in GMT when the resource was created
          format: date-time
          nullable: true
          type: string
        date_updated:
          description: The RFC 2822 date and time in GMT when the resource was last updated
          format: date-time
          nullable: true
          type: string
        friendly_name:
          description: The string that you assigned to describe the resource
          nullable: true
          type: string
        sandbox:
          description: "[APN only] Whether to send the credential to sandbox APNs"
          nullable: true
          type: string
        sid:
          description: The unique string that identifies the resource
          maxLength: 34
          minLength: 34
          nullable: true
          pattern: ^CR[0-9a-fA-F]{32}$
          type: string
        type:
          $ref: "#/components/schemas/credential_enum_push_service"
          description: The type of push-notification service the credential is for
          nullable: true
          type: string
        url:
          description: The absolute URL of the Credential resource
          format: uri
          nullable: true
          type: string
      type: object
    chat.v1.service:
      properties:
        account_sid:
          description: The SID of the Account that created the resource
          maxLength: 34
          minLength: 34
          nullable: true
          pattern: ^AC[0-9a-fA-F]{32}$
          type: string
        consumption_report_interval:
          description: DEPRECATED
          nullable: true
          type: integer
        date_created:
          description: The RFC 2822 date and time in GMT when the resource was created
          format: date-time
          nullable: true
          type: string
        date_updated:
          description: The RFC 2822 date and time in GMT when the resource was last updated
          format: date-time
          nullable: true
          type: string
        default_channel_creator_role_sid:
          description: The channel role assigned to a channel creator when they join a new channel
          maxLength: 34
          minLength: 34
          nullable: true
          pattern: ^RL[0-9a-fA-F]{32}$
          type: string
        default_channel_role_sid:
          description: The channel role assigned to users when they are added to a channel
          maxLength: 34
          minLength: 34
          nullable: true
          pattern: ^RL[0-9a-fA-F]{32}$
          type: string
        default_service_role_sid:
          description: The service role assigned to users when they are added to the service
          maxLength: 34
          minLength: 34
          nullable: true
          pattern: ^RL[0-9a-fA-F]{32}$
          type: string
        friendly_name:
          description: The string that you assigned to describe the resource
          nullable: true
          type: string
        limits:
          description: An object that describes the limits of the service instance
          nullable: true
        links:
          description: The absolute URLs of the Service's Channels, Roles, and Users
          format: uri-map
          nullable: true
          type: object
        notifications:
          description: The notification configuration for the Service instance
          nullable: true
        post_webhook_url:
          description: The URL for post-event webhooks
          nullable: true
          type: string
        pre_webhook_url:
          description: The webhook URL for pre-event webhooks
          nullable: true
          type: string
        reachability_enabled:
          description: Whether the Reachability Indicator feature is enabled for this Service instance
          nullable: true
          type: boolean
        read_status_enabled:
          description: Whether the Message Consumption Horizon feature is enabled
          nullable: true
          type: boolean
        sid:
          description: The unique string that identifies the resource
          maxLength: 34
          minLength: 34
          nullable: true
          pattern: ^IS[0-9a-fA-F]{32}$
          type: string
        typing_indicator_timeout:
          description: How long in seconds to wait before assuming the user is no longer typing
          nullable: true
          type: integer
        url:
          description: The absolute URL of the Service resource
          format: uri
          nullable: true
          type: string
        webhook_filters:
          description: The list of WebHook events that are enabled for this Service instance
          items:
            type: string
          nullable: true
          type: array
        webhook_method:
          description: The HTTP method  to use for both PRE and POST webhooks
          nullable: true
          type: string
        webhooks:
          description: An object that contains information about the webhooks configured for this service
          nullable: true
      type: object
    chat.v1.service.channel:
      properties:
        account_sid:
          description: The SID of the Account that created the resource
          maxLength: 34
          minLength: 34
          nullable: true
          pattern: ^AC[0-9a-fA-F]{32}$
          type: string
        attributes:
          description: The JSON string that stores application-specific data
          nullable: true
          type: string
        created_by:
          description: The identity of the User that created the channel
          nullable: true
          type: string
        date_created:
          description: The RFC 2822 date and time in GMT when the resource was created
          format: date-time
          nullable: true
          type: string
        date_updated:
          description: The RFC 2822 date and time in GMT when the resource was last updated
          format: date-time
          nullable: true
          type: string
        friendly_name:
          description: The string that you assigned to describe the resource
          nullable: true
          type: string
        links:
          description: Absolute URLs to access the Members, Messages , Invites and, if it exists, the last Message for the Channel
          format: uri-map
          nullable: true
          type: object
        members_count:
          description: The number of Members in the Channel
          nullable: true
          type: integer
        messages_count:
          description: The number of Messages in the Channel
          nullable: true
          type: integer
        service_sid:
          description: The SID of the Service that the resource is associated with
          maxLength: 34
          minLength: 34
          nullable: true
          pattern: ^IS[0-9a-fA-F]{32}$
          type: string
        sid:
          description: The unique string that identifies the resource
          maxLength: 34
          minLength: 34
          nullable: true
          pattern: ^CH[0-9a-fA-F]{32}$
          type: string
        type:
          $ref: "#/components/schemas/channel_enum_channel_type"
          description: "The visibility of the channel. Can be: `public` or `private`"
          nullable: true
          type: string
        unique_name:
          description: An application-defined string that uniquely identifies the resource
          nullable: true
          type: string
        url:
          description: The absolute URL of the Channel resource
          format: uri
          nullable: true
          type: string
      type: object
    chat.v1.service.channel.invite:
      properties:
        account_sid:
          description: The SID of the Account that created the resource
          maxLength: 34
          minLength: 34
          nullable: true
          pattern: ^AC[0-9a-fA-F]{32}$
          type: string
        channel_sid:
          description: The SID of the Channel the new resource belongs to
          maxLength: 34
          minLength: 34
          nullable: true
          pattern: ^CH[0-9a-fA-F]{32}$
          type: string
        created_by:
          description: The identity of the User that created the invite
          nullable: true
          type: string
        date_created:
          description: The RFC 2822 date and time in GMT when the resource was created
          format: date-time
          nullable: true
          type: string
        date_updated:
          description: The RFC 2822 date and time in GMT when the resource was last updated
          format: date-time
          nullable: true
          type: string
        identity:
          description: The string that identifies the resource's User
          nullable: true
          type: string
        role_sid:
          description: The SID of the Role assigned to the member
          maxLength: 34
          minLength: 34
          nullable: true
          pattern: ^RL[0-9a-fA-F]{32}$
          type: string
        service_sid:
          description: The SID of the Service that the resource is associated with
          maxLength: 34
          minLength: 34
          nullable: true
          pattern: ^IS[0-9a-fA-F]{32}$
          type: string
        sid:
          description: The unique string that identifies the resource
          maxLength: 34
          minLength: 34
          nullable: true
          pattern: ^IN[0-9a-fA-F]{32}$
          type: string
        url:
          description: The absolute URL of the Invite resource
          format: uri
          nullable: true
          type: string
      type: object
    chat.v1.service.channel.member:
      properties:
        account_sid:
          description: The SID of the Account that created the resource
          maxLength: 34
          minLength: 34
          nullable: true
          pattern: ^AC[0-9a-fA-F]{32}$
          type: string
        channel_sid:
          description: The unique ID of the Channel for the member
          maxLength: 34
          minLength: 34
          nullable: true
          pattern: ^CH[0-9a-fA-F]{32}$
          type: string
        date_created:
          description: The RFC 2822 date and time in GMT when the resource was created
          format: date-time
          nullable: true
          type: string
        date_updated:
          description: The RFC 2822 date and time in GMT when the resource was last updated
          format: date-time
          nullable: true
          type: string
        identity:
          description: The string that identifies the resource's User
          nullable: true
          type: string
        last_consumed_message_index:
          description: The index of the last Message that the Member has read within the Channel
          nullable: true
          type: integer
        last_consumption_timestamp:
          description: The ISO 8601 based timestamp string that represents the date-time of the last Message read event for the Member within the Channel
          format: date-time
          nullable: true
          type: string
        role_sid:
          description: The SID of the Role assigned to the member
          maxLength: 34
          minLength: 34
          nullable: true
          pattern: ^RL[0-9a-fA-F]{32}$
          type: string
        service_sid:
          description: The SID of the Service that the resource is associated with
          maxLength: 34
          minLength: 34
          nullable: true
          pattern: ^IS[0-9a-fA-F]{32}$
          type: string
        sid:
          description: The unique string that identifies the resource
          maxLength: 34
          minLength: 34
          nullable: true
          pattern: ^MB[0-9a-fA-F]{32}$
          type: string
        url:
          description: The absolute URL of the Member resource
          format: uri
          nullable: true
          type: string
      type: object
    chat.v1.service.channel.message:
      properties:
        account_sid:
          description: The SID of the Account that created the resource
          maxLength: 34
          minLength: 34
          nullable: true
          pattern: ^AC[0-9a-fA-F]{32}$
          type: string
        attributes:
          description: The JSON string that stores application-specific data
          nullable: true
          type: string
        body:
          description: The content of the message
          nullable: true
          type: string
        channel_sid:
          description: The unique ID of the Channel the Message resource belongs to
          maxLength: 34
          minLength: 34
          nullable: true
          pattern: ^CH[0-9a-fA-F]{32}$
          type: string
        date_created:
          description: The RFC 2822 date and time in GMT when the resource was created
          format: date-time
          nullable: true
          type: string
        date_updated:
          description: The RFC 2822 date and time in GMT when the resource was last updated
          format: date-time
          nullable: true
          type: string
        from:
          description: The identity of the message's author
          nullable: true
          type: string
        index:
          description: The index of the message within the Channel
          nullable: true
          type: integer
        service_sid:
          description: The SID of the Service that the resource is associated with
          maxLength: 34
          minLength: 34
          nullable: true
          pattern: ^IS[0-9a-fA-F]{32}$
          type: string
        sid:
          description: The unique string that identifies the resource
          maxLength: 34
          minLength: 34
          nullable: true
          pattern: ^IM[0-9a-fA-F]{32}$
          type: string
        to:
          description: The SID of the Channel that the message was sent to
          maxLength: 34
          minLength: 34
          nullable: true
          pattern: ^CH[0-9a-fA-F]{32}$
          type: string
        url:
          description: The absolute URL of the Message resource
          format: uri
          nullable: true
          type: string
        was_edited:
          description: Whether the message has been edited since  it was created
          nullable: true
          type: boolean
      type: object
    chat.v1.service.role:
      properties:
        account_sid:
          description: The SID of the Account that created the resource
          maxLength: 34
          minLength: 34
          nullable: true
          pattern: ^AC[0-9a-fA-F]{32}$
          type: string
        date_created:
          description: The RFC 2822 date and time in GMT when the resource was created
          format: date-time
          nullable: true
          type: string
        date_updated:
          description: The RFC 2822 date and time in GMT when the resource was last updated
          format: date-time
          nullable: true
          type: string
        friendly_name:
          description: The string that you assigned to describe the resource
          nullable: true
          type: string
        permissions:
          description: An array of the permissions the role has been granted
          items:
            type: string
          nullable: true
          type: array
        service_sid:
          description: The SID of the Service that the resource is associated with
          maxLength: 34
          minLength: 34
          nullable: true
          pattern: ^IS[0-9a-fA-F]{32}$
          type: string
        sid:
          description: The unique string that identifies the resource
          maxLength: 34
          minLength: 34
          nullable: true
          pattern: ^RL[0-9a-fA-F]{32}$
          type: string
        type:
          $ref: "#/components/schemas/role_enum_role_type"
          description: The type of role
          nullable: true
          type: string
        url:
          description: The absolute URL of the Role resource
          format: uri
          nullable: true
          type: string
      type: object
    chat.v1.service.user:
      properties:
        account_sid:
          description: The SID of the Account that created the resource
          maxLength: 34
          minLength: 34
          nullable: true
          pattern: ^AC[0-9a-fA-F]{32}$
          type: string
        attributes:
          description: The JSON string that stores application-specific data
          nullable: true
          type: string
        date_created:
          description: The RFC 2822 date and time in GMT when the resource was created
          format: date-time
          nullable: true
          type: string
        date_updated:
          description: The RFC 2822 date and time in GMT when the resource was last updated
          format: date-time
          nullable: true
          type: string
        friendly_name:
          description: The string that you assigned to describe the resource
          nullable: true
          type: string
        identity:
          description: The string that identifies the resource's User
          nullable: true
          type: string
        is_notifiable:
          description: Whether the User has a potentially valid Push Notification registration for the Service instance
          nullable: true
          type: boolean
        is_online:
          description: Whether the User is actively connected to the Service instance and online
          nullable: true
          type: boolean
        joined_channels_count:
          description: The number of Channels this User is a Member of
          nullable: true
          type: integer
        links:
          description: The absolute URLs of the Channel and Binding resources related to the user
          format: uri-map
          nullable: true
          type: object
        role_sid:
          description: The SID of the assigned to the user
          maxLength: 34
          minLength: 34
          nullable: true
          pattern: ^RL[0-9a-fA-F]{32}$
          type: string
        service_sid:
          description: The SID of the Service that the resource is associated with
          maxLength: 34
          minLength: 34
          nullable: true
          pattern: ^IS[0-9a-fA-F]{32}$
          type: string
        sid:
          description: The unique string that identifies the resource
          maxLength: 34
          minLength: 34
          nullable: true
          pattern: ^US[0-9a-fA-F]{32}$
          type: string
        url:
          description: The absolute URL of the User resource
          format: uri
          nullable: true
          type: string
      type: object
    chat.v1.service.user.user_channel:
      properties:
        account_sid:
          description: The SID of the Account that created the resource
          maxLength: 34
          minLength: 34
          nullable: true
          pattern: ^AC[0-9a-fA-F]{32}$
          type: string
        channel_sid:
          description: The SID of the Channel the resource belongs to
          maxLength: 34
          minLength: 34
          nullable: true
          pattern: ^CH[0-9a-fA-F]{32}$
          type: string
        last_consumed_message_index:
          description: The index of the last Message in the Channel the Member has read
          nullable: true
          type: integer
        links:
          description: Absolute URLs to access the Members, Messages , Invites and, if it exists, the last Message for the Channel
          format: uri-map
          nullable: true
          type: object
        member_sid:
          description: The SID of the User as a Member in the Channel
          maxLength: 34
          minLength: 34
          nullable: true
          pattern: ^MB[0-9a-fA-F]{32}$
          type: string
        service_sid:
          description: The SID of the Service that the resource is associated with
          maxLength: 34
          minLength: 34
          nullable: true
          pattern: ^IS[0-9a-fA-F]{32}$
          type: string
        status:
          $ref: "#/components/schemas/user_channel_enum_channel_status"
          description: The status of the User on the Channel
          nullable: true
          type: string
        unread_messages_count:
          description: The number of unread Messages in the Channel for the User
          nullable: true
          type: integer
      type: object
    credential_enum_push_service:
      enum:
        - gcm
        - apn
        - fcm
      type: string
    message_enum_order_type:
      enum:
        - asc
        - desc
      type: string
    role_enum_role_type:
      enum:
        - channel
        - deployment
      type: string
    user_channel_enum_channel_status:
      enum:
        - joined
        - invited
        - not_participating
      type: string
  securitySchemes:
    accountSid_authToken:
      scheme: basic
      type: http
x-maturity:
  - description: This product is Generally Available.
    name: GA
