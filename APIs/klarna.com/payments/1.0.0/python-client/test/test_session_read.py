# coding: utf-8

"""
    Klarna Payments API V1

    The payments API is used to create a session to offer Klarna's payment methods as part of your checkout. As soon as the purchase is completed the order should be read and handled using the [`Order Management API`](https://docs.klarna.com/api/ordermanagement).  Read more on [Klarna payments](https://docs.klarna.com/klarna-payments/).

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.session_read import SessionRead

class TestSessionRead(unittest.TestCase):
    """SessionRead unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SessionRead:
        """Test SessionRead
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SessionRead`
        """
        model = SessionRead()
        if include_optional:
            return SessionRead(
                acquiring_channel = 'ECOMMERCE',
                attachment = openapi_client.models.attachment.attachment(
                    body = '{"customer_account_info":[{"unique_account_identifier":"test@gmail.com","account_registration_date":"2017-02-13T10:49:20Z","account_last_modified":"2019-03-13T11:45:27Z"}]}', 
                    content_type = 'application/vnd.klarna.internal.emd-v2+json', ),
                authorization_token = '',
                billing_address = openapi_client.models.address.address(
                    attention = 'Attn', 
                    city = 'London', 
                    country = 'GB', 
                    email = 'test.sam@test.com', 
                    family_name = 'Andersson', 
                    given_name = 'Adam', 
                    organization_name = '', 
                    phone = '+44795465131', 
                    postal_code = 'W1G 0PW', 
                    region = 'OH', 
                    street_address = '33 Cavendish Square', 
                    street_address2 = 'Floor 22 / Flat 2', 
                    title = 'Mr.', ),
                client_token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.ewogICJzZXNzaW9uX2lkIiA6ICIw',
                custom_payment_method_ids = [
                    ''
                    ],
                customer = openapi_client.models.customer_read.customer_read(
                    date_of_birth = '1978-12-31', 
                    gender = 'male', 
                    organization_entity_type = 'LIMITED_COMPANY', 
                    organization_registration_id = '', 
                    title = 'Mr.', 
                    type = 'organization', 
                    vat_id = '', ),
                design = '',
                expires_at = '2038-01-19T03:14:07Z',
                intent = 'buy',
                locale = 'en-GB',
                merchant_data = '{"order_specific":[{"substore":"Women's Fashion","product_name":"Women Sweatshirt"}]}',
                merchant_reference1 = 'ON4711',
                merchant_reference2 = 'hdt53h-zdgg6-hdaff2',
                merchant_urls = openapi_client.models.merchant_urls.merchant_urls(
                    authorization = 'https://www.example-url.com/authorization', 
                    confirmation = 'https://www.example-url.com/confirmation', 
                    notification = 'https://www.example-url.com/notification', 
                    push = 'https://www.example-url.com/push', ),
                options = openapi_client.models.options.options(
                    color_border = '#FF9900', 
                    color_border_selected = '#FF9900', 
                    color_details = '#FF9900', 
                    color_text = '#FF9900', 
                    radius_border = '5px', ),
                order_amount = 2500,
                order_lines = [
                    openapi_client.models.order_line.order_line(
                        image_url = 'https://www.exampleobjects.com/logo.png', 
                        merchant_data = '{"customer_account_info":[{"unique_account_identifier":"test@gmail.com","account_registration_date":"2017-02-13T10:49:20Z","account_last_modified":"2019-03-13T11:45:27Z"}]}', 
                        name = 'Running shoe', 
                        product_identifiers = openapi_client.models.product_identifiers.product_identifiers(
                            brand = 'shoe-brand', 
                            category_path = 'Shoes > Running', 
                            color = 'white', 
                            global_trade_item_number = '4912345678904', 
                            manufacturer_part_number = 'AD6654412-334.22', 
                            size = 'small', ), 
                        product_url = 'https://.../AD6654412.html', 
                        quantity = 1, 
                        quantity_unit = 'pcs', 
                        reference = 'AD6654412', 
                        subscription = openapi_client.models.subscription.subscription(
                            interval = 'DAY', 
                            interval_count = 1, 
                            name = '0', ), 
                        tax_rate = 1900, 
                        total_amount = 2500, 
                        total_discount_amount = 500, 
                        total_tax_amount = 475, 
                        type = 'physical', 
                        unit_price = 2500, )
                    ],
                order_tax_amount = 475,
                payment_method_categories = [
                    openapi_client.models.payment_method_category.payment_method_category(
                        asset_urls = openapi_client.models.asset_urls.asset_urls(
                            descriptive = 'https://x.klarnacdn.net/payment-method/assets/badges/generic/klarna.svg', 
                            standard = 'https://x.klarnacdn.net/payment-method/assets/badges/generic/klarna.svg', ), 
                        identifier = 'klarna', 
                        name = 'Pay with Klarna', )
                    ],
                purchase_country = 'GB',
                purchase_currency = 'GBP',
                shipping_address = openapi_client.models.address.address(
                    attention = 'Attn', 
                    city = 'London', 
                    country = 'GB', 
                    email = 'test.sam@test.com', 
                    family_name = 'Andersson', 
                    given_name = 'Adam', 
                    organization_name = '', 
                    phone = '+44795465131', 
                    postal_code = 'W1G 0PW', 
                    region = 'OH', 
                    street_address = '33 Cavendish Square', 
                    street_address2 = 'Floor 22 / Flat 2', 
                    title = 'Mr.', ),
                status = 'complete'
            )
        else:
            return SessionRead(
        )
        """

    def testSessionRead(self):
        """Test SessionRead"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
