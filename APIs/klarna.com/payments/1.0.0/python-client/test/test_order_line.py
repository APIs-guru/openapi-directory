# coding: utf-8

"""
    Klarna Payments API V1

    The payments API is used to create a session to offer Klarna's payment methods as part of your checkout. As soon as the purchase is completed the order should be read and handled using the [`Order Management API`](https://docs.klarna.com/api/ordermanagement).  Read more on [Klarna payments](https://docs.klarna.com/klarna-payments/).

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.order_line import OrderLine

class TestOrderLine(unittest.TestCase):
    """OrderLine unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OrderLine:
        """Test OrderLine
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OrderLine`
        """
        model = OrderLine()
        if include_optional:
            return OrderLine(
                image_url = 'https://www.exampleobjects.com/logo.png',
                merchant_data = '{"customer_account_info":[{"unique_account_identifier":"test@gmail.com","account_registration_date":"2017-02-13T10:49:20Z","account_last_modified":"2019-03-13T11:45:27Z"}]}',
                name = 'Running shoe',
                product_identifiers = openapi_client.models.product_identifiers.product_identifiers(
                    brand = 'shoe-brand', 
                    category_path = 'Shoes > Running', 
                    color = 'white', 
                    global_trade_item_number = '4912345678904', 
                    manufacturer_part_number = 'AD6654412-334.22', 
                    size = 'small', ),
                product_url = 'https://.../AD6654412.html',
                quantity = 1,
                quantity_unit = 'pcs',
                reference = 'AD6654412',
                subscription = openapi_client.models.subscription.subscription(
                    interval = 'DAY', 
                    interval_count = 1, 
                    name = '0', ),
                tax_rate = 1900,
                total_amount = 2500,
                total_discount_amount = 500,
                total_tax_amount = 475,
                type = 'physical',
                unit_price = 2500
            )
        else:
            return OrderLine(
                name = 'Running shoe',
                quantity = 1,
                total_amount = 2500,
                unit_price = 2500,
        )
        """

    def testOrderLine(self):
        """Test OrderLine"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
