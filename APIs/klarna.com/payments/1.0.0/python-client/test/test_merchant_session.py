# coding: utf-8

"""
    Klarna Payments API V1

    The payments API is used to create a session to offer Klarna's payment methods as part of your checkout. As soon as the purchase is completed the order should be read and handled using the [`Order Management API`](https://docs.klarna.com/api/ordermanagement).  Read more on [Klarna payments](https://docs.klarna.com/klarna-payments/).

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.merchant_session import MerchantSession

class TestMerchantSession(unittest.TestCase):
    """MerchantSession unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MerchantSession:
        """Test MerchantSession
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MerchantSession`
        """
        model = MerchantSession()
        if include_optional:
            return MerchantSession(
                client_token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.ewogICJzZXNzaW9uX2lkIiA6ICIw',
                payment_method_categories = [
                    openapi_client.models.payment_method_category.payment_method_category(
                        asset_urls = openapi_client.models.asset_urls.asset_urls(
                            descriptive = 'https://x.klarnacdn.net/payment-method/assets/badges/generic/klarna.svg', 
                            standard = 'https://x.klarnacdn.net/payment-method/assets/badges/generic/klarna.svg', ), 
                        identifier = 'klarna', 
                        name = 'Pay with Klarna', )
                    ],
                session_id = '0b1d9815-165e-42e2-8867-35bc03789e00'
            )
        else:
            return MerchantSession(
                client_token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.ewogICJzZXNzaW9uX2lkIiA6ICIw',
                session_id = '0b1d9815-165e-42e2-8867-35bc03789e00',
        )
        """

    def testMerchantSession(self):
        """Test MerchantSession"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
