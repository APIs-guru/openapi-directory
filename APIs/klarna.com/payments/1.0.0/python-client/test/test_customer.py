# coding: utf-8

"""
    Klarna Payments API V1

    The payments API is used to create a session to offer Klarna's payment methods as part of your checkout. As soon as the purchase is completed the order should be read and handled using the [`Order Management API`](https://docs.klarna.com/api/ordermanagement).  Read more on [Klarna payments](https://docs.klarna.com/klarna-payments/).

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.customer import Customer

class TestCustomer(unittest.TestCase):
    """Customer unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Customer:
        """Test Customer
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Customer`
        """
        model = Customer()
        if include_optional:
            return Customer(
                date_of_birth = '1978-12-31',
                gender = 'male',
                last_four_ssn = '480728880',
                national_identification_number = '',
                organization_entity_type = 'LIMITED_COMPANY',
                organization_registration_id = '',
                title = 'Mr.',
                type = 'organization',
                vat_id = ''
            )
        else:
            return Customer(
        )
        """

    def testCustomer(self):
        """Test Customer"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
