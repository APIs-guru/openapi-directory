# coding: utf-8

"""
    Klarna Payments API V1

    The payments API is used to create a session to offer Klarna's payment methods as part of your checkout. As soon as the purchase is completed the order should be read and handled using the [`Order Management API`](https://docs.klarna.com/api/ordermanagement).  Read more on [Klarna payments](https://docs.klarna.com/klarna-payments/).

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.error_v2 import ErrorV2

class TestErrorV2(unittest.TestCase):
    """ErrorV2 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ErrorV2:
        """Test ErrorV2
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ErrorV2`
        """
        model = ErrorV2()
        if include_optional:
            return ErrorV2(
                authorized_payment_method = openapi_client.models.authorized_payment_method.authorized_payment_method(
                    number_of_days = 56, 
                    number_of_installments = 56, 
                    type = 'invoice', ),
                correlation_id = '',
                error_code = '',
                error_messages = [
                    ''
                    ],
                fraud_status = '',
                reason = ''
            )
        else:
            return ErrorV2(
        )
        """

    def testErrorV2(self):
        """Test ErrorV2"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
