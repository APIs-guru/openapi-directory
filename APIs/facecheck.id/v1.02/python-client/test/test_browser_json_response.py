# coding: utf-8

"""
    Facial Recognition Reverse Image Face Search API

    Let your users search the Internet by face! Integrate FaceCheck facial search seamlessly with your app, website or software platform.   FaceCheck's REST API is hassle-free and easy to use. For code examples visit <a href='https://facecheck.id/Face-Search/API'>https://facecheck.id/Face-Search/API</a>

    The version of the OpenAPI document: v1.02
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.browser_json_response import BrowserJsonResponse

class TestBrowserJsonResponse(unittest.TestCase):
    """BrowserJsonResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BrowserJsonResponse:
        """Test BrowserJsonResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BrowserJsonResponse`
        """
        model = BrowserJsonResponse()
        if include_optional:
            return BrowserJsonResponse(
                code = '',
                error = '',
                has_empty_images = True,
                id_search = '',
                input = [
                    openapi_client.models.input_image.InputImage(
                        base64 = '', 
                        id_pic = '', 
                        svg_anim = '', 
                        url_source = '', )
                    ],
                message = '',
                output = openapi_client.models.search_results.Search_Results(
                    demo = True, 
                    face_per_sec = 56, 
                    free_ram = 1.337, 
                    images_in_bundle = 56, 
                    items = [
                        openapi_client.models.search_item.SearchItem(
                            base64 = '', 
                            group = 56, 
                            guid = '', 
                            index = 56, 
                            index_db = 56, 
                            score = 56, 
                            seen = 56, 
                            url = '', )
                        ], 
                    max_score = 56, 
                    performance = '', 
                    scaned_till_index = 56, 
                    searched_faces = 56, 
                    took_seconds = 1.337, 
                    took_seconds_download = 1.337, 
                    took_seconds_queue = 1.337, ),
                progress = 56
            )
        else:
            return BrowserJsonResponse(
        )
        """

    def testBrowserJsonResponse(self):
        """Test BrowserJsonResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
