# coding: utf-8

"""
    Stats

    API that provides statistical data about Players and Matches.

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictBool, StrictFloat, StrictInt, StrictStr
from typing import Optional, Union
from typing_extensions import Annotated

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class DefaultApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def halo5_company(
        self,
        company_id: Annotated[StrictStr, Field(description="The ID for the Company. The Company ID for a player can be retrieved from the Profile APIs via the \"Halo 5 - Player Apperance\" Endpoint.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Halo 5 - Company

        <p>Retrieves information about the Company. The response will contain the Company's name, status, and members.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>July 14, 2017:</strong></p>     <ul>         <li>Added Endpoint.</li>     </ul> </div> 

        :param company_id: The ID for the Company. The Company ID for a player can be retrieved from the Profile APIs via the \"Halo 5 - Player Apperance\" Endpoint. (required)
        :type company_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_company_serialize(
            company_id=company_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def halo5_company_with_http_info(
        self,
        company_id: Annotated[StrictStr, Field(description="The ID for the Company. The Company ID for a player can be retrieved from the Profile APIs via the \"Halo 5 - Player Apperance\" Endpoint.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Halo 5 - Company

        <p>Retrieves information about the Company. The response will contain the Company's name, status, and members.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>July 14, 2017:</strong></p>     <ul>         <li>Added Endpoint.</li>     </ul> </div> 

        :param company_id: The ID for the Company. The Company ID for a player can be retrieved from the Profile APIs via the \"Halo 5 - Player Apperance\" Endpoint. (required)
        :type company_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_company_serialize(
            company_id=company_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def halo5_company_without_preload_content(
        self,
        company_id: Annotated[StrictStr, Field(description="The ID for the Company. The Company ID for a player can be retrieved from the Profile APIs via the \"Halo 5 - Player Apperance\" Endpoint.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Halo 5 - Company

        <p>Retrieves information about the Company. The response will contain the Company's name, status, and members.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>July 14, 2017:</strong></p>     <ul>         <li>Added Endpoint.</li>     </ul> </div> 

        :param company_id: The ID for the Company. The Company ID for a player can be retrieved from the Profile APIs via the \"Halo 5 - Player Apperance\" Endpoint. (required)
        :type company_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_company_serialize(
            company_id=company_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _halo5_company_serialize(
        self,
        company_id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if company_id is not None:
            _path_params['companyId'] = company_id
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/h5/companies/{companyId}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def halo5_company_commendations(
        self,
        company_id: Annotated[StrictStr, Field(description="The ID for the Company. The Company ID for a player can be retrieved from the Profile APIs via the \"Halo 5 - Player Apperance\" Endpoint.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Halo 5 - Company Commendations

        <p>Retrieves the commendation state for a Company.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>July 14, 2017:</strong></p>     <ul>         <li>Added Endpoint.</li>     </ul> </div> 

        :param company_id: The ID for the Company. The Company ID for a player can be retrieved from the Profile APIs via the \"Halo 5 - Player Apperance\" Endpoint. (required)
        :type company_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_company_commendations_serialize(
            company_id=company_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def halo5_company_commendations_with_http_info(
        self,
        company_id: Annotated[StrictStr, Field(description="The ID for the Company. The Company ID for a player can be retrieved from the Profile APIs via the \"Halo 5 - Player Apperance\" Endpoint.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Halo 5 - Company Commendations

        <p>Retrieves the commendation state for a Company.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>July 14, 2017:</strong></p>     <ul>         <li>Added Endpoint.</li>     </ul> </div> 

        :param company_id: The ID for the Company. The Company ID for a player can be retrieved from the Profile APIs via the \"Halo 5 - Player Apperance\" Endpoint. (required)
        :type company_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_company_commendations_serialize(
            company_id=company_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def halo5_company_commendations_without_preload_content(
        self,
        company_id: Annotated[StrictStr, Field(description="The ID for the Company. The Company ID for a player can be retrieved from the Profile APIs via the \"Halo 5 - Player Apperance\" Endpoint.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Halo 5 - Company Commendations

        <p>Retrieves the commendation state for a Company.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>July 14, 2017:</strong></p>     <ul>         <li>Added Endpoint.</li>     </ul> </div> 

        :param company_id: The ID for the Company. The Company ID for a player can be retrieved from the Profile APIs via the \"Halo 5 - Player Apperance\" Endpoint. (required)
        :type company_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_company_commendations_serialize(
            company_id=company_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _halo5_company_commendations_serialize(
        self,
        company_id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if company_id is not None:
            _path_params['companyId'] = company_id
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/h5/companies/{companyId}/commendations',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def halo5_leaderboard_player_csr(
        self,
        season_id: Annotated[StrictStr, Field(description="The ID for the Season.")],
        playlist_id: Annotated[StrictStr, Field(description="The ID for the Playlist.")],
        count: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="When specified, this indicates the maximum quantity of items the client would like returned in the response.  When omitted, 200 is assumed.  When the value contains a non-digit or is exactly \"0\", HTTP 400 (\"Bad Request\") is returned.  When the value is greater than the allowed range [1,250], the maximum allowed value is used instead.  The \"Count\" field in the response will confirm the actual value that was used.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Halo 5 - Leaderboard - Player CSR

        <p>Retrieves the Leaderboard for Player CSRs. The Leaderboard consists of the top Players with a CSR of 1800 or above for a given Playlist in a Season.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>March 6, 2018:</strong></p>     <ul>         <li>Fixed documentation typos for the names of the \"Player\" and \"Gamertag\" properties.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>July 31, 2017:</strong></p>     <ul>         <li>Clarified documentation for which players are included in the leaderboard.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Renamed Endpoint from \"Player Leaderboard\" to \"Halo 5 - Leaderboard Player CSR\".</li>         <li>Removed \"{title}\" Request Parameter.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>April 20, 2016:</strong></p>     <ul>         <li>Added Endpoint.</li>     </ul> </div> 

        :param season_id: The ID for the Season. (required)
        :type season_id: str
        :param playlist_id: The ID for the Playlist. (required)
        :type playlist_id: str
        :param count: When specified, this indicates the maximum quantity of items the client would like returned in the response.  When omitted, 200 is assumed.  When the value contains a non-digit or is exactly \"0\", HTTP 400 (\"Bad Request\") is returned.  When the value is greater than the allowed range [1,250], the maximum allowed value is used instead.  The \"Count\" field in the response will confirm the actual value that was used.
        :type count: float
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_leaderboard_player_csr_serialize(
            season_id=season_id,
            playlist_id=playlist_id,
            count=count,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def halo5_leaderboard_player_csr_with_http_info(
        self,
        season_id: Annotated[StrictStr, Field(description="The ID for the Season.")],
        playlist_id: Annotated[StrictStr, Field(description="The ID for the Playlist.")],
        count: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="When specified, this indicates the maximum quantity of items the client would like returned in the response.  When omitted, 200 is assumed.  When the value contains a non-digit or is exactly \"0\", HTTP 400 (\"Bad Request\") is returned.  When the value is greater than the allowed range [1,250], the maximum allowed value is used instead.  The \"Count\" field in the response will confirm the actual value that was used.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Halo 5 - Leaderboard - Player CSR

        <p>Retrieves the Leaderboard for Player CSRs. The Leaderboard consists of the top Players with a CSR of 1800 or above for a given Playlist in a Season.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>March 6, 2018:</strong></p>     <ul>         <li>Fixed documentation typos for the names of the \"Player\" and \"Gamertag\" properties.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>July 31, 2017:</strong></p>     <ul>         <li>Clarified documentation for which players are included in the leaderboard.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Renamed Endpoint from \"Player Leaderboard\" to \"Halo 5 - Leaderboard Player CSR\".</li>         <li>Removed \"{title}\" Request Parameter.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>April 20, 2016:</strong></p>     <ul>         <li>Added Endpoint.</li>     </ul> </div> 

        :param season_id: The ID for the Season. (required)
        :type season_id: str
        :param playlist_id: The ID for the Playlist. (required)
        :type playlist_id: str
        :param count: When specified, this indicates the maximum quantity of items the client would like returned in the response.  When omitted, 200 is assumed.  When the value contains a non-digit or is exactly \"0\", HTTP 400 (\"Bad Request\") is returned.  When the value is greater than the allowed range [1,250], the maximum allowed value is used instead.  The \"Count\" field in the response will confirm the actual value that was used.
        :type count: float
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_leaderboard_player_csr_serialize(
            season_id=season_id,
            playlist_id=playlist_id,
            count=count,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def halo5_leaderboard_player_csr_without_preload_content(
        self,
        season_id: Annotated[StrictStr, Field(description="The ID for the Season.")],
        playlist_id: Annotated[StrictStr, Field(description="The ID for the Playlist.")],
        count: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="When specified, this indicates the maximum quantity of items the client would like returned in the response.  When omitted, 200 is assumed.  When the value contains a non-digit or is exactly \"0\", HTTP 400 (\"Bad Request\") is returned.  When the value is greater than the allowed range [1,250], the maximum allowed value is used instead.  The \"Count\" field in the response will confirm the actual value that was used.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Halo 5 - Leaderboard - Player CSR

        <p>Retrieves the Leaderboard for Player CSRs. The Leaderboard consists of the top Players with a CSR of 1800 or above for a given Playlist in a Season.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>March 6, 2018:</strong></p>     <ul>         <li>Fixed documentation typos for the names of the \"Player\" and \"Gamertag\" properties.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>July 31, 2017:</strong></p>     <ul>         <li>Clarified documentation for which players are included in the leaderboard.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Renamed Endpoint from \"Player Leaderboard\" to \"Halo 5 - Leaderboard Player CSR\".</li>         <li>Removed \"{title}\" Request Parameter.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>April 20, 2016:</strong></p>     <ul>         <li>Added Endpoint.</li>     </ul> </div> 

        :param season_id: The ID for the Season. (required)
        :type season_id: str
        :param playlist_id: The ID for the Playlist. (required)
        :type playlist_id: str
        :param count: When specified, this indicates the maximum quantity of items the client would like returned in the response.  When omitted, 200 is assumed.  When the value contains a non-digit or is exactly \"0\", HTTP 400 (\"Bad Request\") is returned.  When the value is greater than the allowed range [1,250], the maximum allowed value is used instead.  The \"Count\" field in the response will confirm the actual value that was used.
        :type count: float
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_leaderboard_player_csr_serialize(
            season_id=season_id,
            playlist_id=playlist_id,
            count=count,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _halo5_leaderboard_player_csr_serialize(
        self,
        season_id,
        playlist_id,
        count,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if season_id is not None:
            _path_params['seasonId'] = season_id
        if playlist_id is not None:
            _path_params['playlistId'] = playlist_id
        # process the query parameters
        if count is not None:
            
            _query_params.append(('count', count))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/h5/player-leaderboards/csr/{seasonId}/{playlistId}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def halo5_match_events(
        self,
        match_id: Annotated[StrictStr, Field(description="An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo 5 - Player Match History\" Endpoint.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Halo 5 - Match Events

        <p>Retrieves a set of Events related to the Match specified. Events are only available once the Match has completed.</p> <p>The set of Events may grow over time as data becomes available.</p> <p>This Endpoint does not have the accuracy guarantees of other Endpoints have, so please use with caution. This endpoint may not return Matches before December 1, 2015.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Renamed Endpoint from \"Events for Match\" to \"Halo 5 - Match Events\".</li>         <li>Removed \"{title}\" Request Parameter.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>May 20, 2016:</strong></p>     <ul>         <li>The Endpoint now correctly reports the \"Content-Type\" Response Header as \"application/json\".</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>May 16, 2016:</strong></p>     <ul>         <li>Documented HTTP 503 Response Code.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>April 20, 2016:</strong></p>     <ul>         <li>Added new types of events to the Endpoint: Impulses, Medals, Player Spawns, Round Stats, Round Ends, Weapon Drops, Weapon Pickups, and Weapon Pickup Pads.</li>         <li>Fixed an issue that caused the API to consistently return HTTP 500's for matches where a player left and rejoined the match.</li>     </ul> </div> 

        :param match_id: An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo 5 - Player Match History\" Endpoint. (required)
        :type match_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_match_events_serialize(
            match_id=match_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def halo5_match_events_with_http_info(
        self,
        match_id: Annotated[StrictStr, Field(description="An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo 5 - Player Match History\" Endpoint.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Halo 5 - Match Events

        <p>Retrieves a set of Events related to the Match specified. Events are only available once the Match has completed.</p> <p>The set of Events may grow over time as data becomes available.</p> <p>This Endpoint does not have the accuracy guarantees of other Endpoints have, so please use with caution. This endpoint may not return Matches before December 1, 2015.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Renamed Endpoint from \"Events for Match\" to \"Halo 5 - Match Events\".</li>         <li>Removed \"{title}\" Request Parameter.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>May 20, 2016:</strong></p>     <ul>         <li>The Endpoint now correctly reports the \"Content-Type\" Response Header as \"application/json\".</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>May 16, 2016:</strong></p>     <ul>         <li>Documented HTTP 503 Response Code.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>April 20, 2016:</strong></p>     <ul>         <li>Added new types of events to the Endpoint: Impulses, Medals, Player Spawns, Round Stats, Round Ends, Weapon Drops, Weapon Pickups, and Weapon Pickup Pads.</li>         <li>Fixed an issue that caused the API to consistently return HTTP 500's for matches where a player left and rejoined the match.</li>     </ul> </div> 

        :param match_id: An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo 5 - Player Match History\" Endpoint. (required)
        :type match_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_match_events_serialize(
            match_id=match_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def halo5_match_events_without_preload_content(
        self,
        match_id: Annotated[StrictStr, Field(description="An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo 5 - Player Match History\" Endpoint.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Halo 5 - Match Events

        <p>Retrieves a set of Events related to the Match specified. Events are only available once the Match has completed.</p> <p>The set of Events may grow over time as data becomes available.</p> <p>This Endpoint does not have the accuracy guarantees of other Endpoints have, so please use with caution. This endpoint may not return Matches before December 1, 2015.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Renamed Endpoint from \"Events for Match\" to \"Halo 5 - Match Events\".</li>         <li>Removed \"{title}\" Request Parameter.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>May 20, 2016:</strong></p>     <ul>         <li>The Endpoint now correctly reports the \"Content-Type\" Response Header as \"application/json\".</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>May 16, 2016:</strong></p>     <ul>         <li>Documented HTTP 503 Response Code.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>April 20, 2016:</strong></p>     <ul>         <li>Added new types of events to the Endpoint: Impulses, Medals, Player Spawns, Round Stats, Round Ends, Weapon Drops, Weapon Pickups, and Weapon Pickup Pads.</li>         <li>Fixed an issue that caused the API to consistently return HTTP 500's for matches where a player left and rejoined the match.</li>     </ul> </div> 

        :param match_id: An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo 5 - Player Match History\" Endpoint. (required)
        :type match_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_match_events_serialize(
            match_id=match_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _halo5_match_events_serialize(
        self,
        match_id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if match_id is not None:
            _path_params['matchId'] = match_id
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/h5/matches/{matchId}/events',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def halo5_match_result_arena(
        self,
        match_id: Annotated[StrictStr, Field(description="An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo 5 - Player Match History\" Endpoint.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Halo 5 - Match Result - Arena

        <p>Retrieves detailed statistics for a Match with the Arena Game Mode.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>December 12, 2018:</strong></p>     <ul>         <li>Updated the documentation for \"PlayerScore\".</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>December 22, 2017:</strong></p>     <ul>         <li>Added Game Mode clarifications to the Endpoint description.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Renamed Endpoint from \"Post-Game Carnage Report: Arena\" to \"Halo 5 - Match Result - Arena\".</li>         <li>Removed \"{title}\" Request Parameter.</li>         <li>Updated the documentation for \"GameVariantResourceId\" and \"MapVariantResourceId\" to reference the UGC API.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>May 16, 2016:</strong></p>     <ul>         <li>Documented HTTP 503 Response Code.</li>         <li>Added documentation for the \"MatchSpeedWinAmount\", \"ObjectivesCompletedAmount\", and \"BoostData\" fields.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>April 20, 2016:</strong></p>     <ul>         <li>Added documentation for the \"GameVariantResourceId\", \"MapVariantResourceId\", and \"PlayerScore\" fields.</li>         <li>Updated the documentation for the \"MapVariantId\" and \"GameVariantId\" fields with the recommendation of using the \"MapVariantResourceId\" and \"GameVariantResourceId\" fields, respectively.</li>     </ul> </div> 

        :param match_id: An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo 5 - Player Match History\" Endpoint. (required)
        :type match_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_match_result_arena_serialize(
            match_id=match_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def halo5_match_result_arena_with_http_info(
        self,
        match_id: Annotated[StrictStr, Field(description="An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo 5 - Player Match History\" Endpoint.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Halo 5 - Match Result - Arena

        <p>Retrieves detailed statistics for a Match with the Arena Game Mode.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>December 12, 2018:</strong></p>     <ul>         <li>Updated the documentation for \"PlayerScore\".</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>December 22, 2017:</strong></p>     <ul>         <li>Added Game Mode clarifications to the Endpoint description.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Renamed Endpoint from \"Post-Game Carnage Report: Arena\" to \"Halo 5 - Match Result - Arena\".</li>         <li>Removed \"{title}\" Request Parameter.</li>         <li>Updated the documentation for \"GameVariantResourceId\" and \"MapVariantResourceId\" to reference the UGC API.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>May 16, 2016:</strong></p>     <ul>         <li>Documented HTTP 503 Response Code.</li>         <li>Added documentation for the \"MatchSpeedWinAmount\", \"ObjectivesCompletedAmount\", and \"BoostData\" fields.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>April 20, 2016:</strong></p>     <ul>         <li>Added documentation for the \"GameVariantResourceId\", \"MapVariantResourceId\", and \"PlayerScore\" fields.</li>         <li>Updated the documentation for the \"MapVariantId\" and \"GameVariantId\" fields with the recommendation of using the \"MapVariantResourceId\" and \"GameVariantResourceId\" fields, respectively.</li>     </ul> </div> 

        :param match_id: An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo 5 - Player Match History\" Endpoint. (required)
        :type match_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_match_result_arena_serialize(
            match_id=match_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def halo5_match_result_arena_without_preload_content(
        self,
        match_id: Annotated[StrictStr, Field(description="An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo 5 - Player Match History\" Endpoint.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Halo 5 - Match Result - Arena

        <p>Retrieves detailed statistics for a Match with the Arena Game Mode.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>December 12, 2018:</strong></p>     <ul>         <li>Updated the documentation for \"PlayerScore\".</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>December 22, 2017:</strong></p>     <ul>         <li>Added Game Mode clarifications to the Endpoint description.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Renamed Endpoint from \"Post-Game Carnage Report: Arena\" to \"Halo 5 - Match Result - Arena\".</li>         <li>Removed \"{title}\" Request Parameter.</li>         <li>Updated the documentation for \"GameVariantResourceId\" and \"MapVariantResourceId\" to reference the UGC API.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>May 16, 2016:</strong></p>     <ul>         <li>Documented HTTP 503 Response Code.</li>         <li>Added documentation for the \"MatchSpeedWinAmount\", \"ObjectivesCompletedAmount\", and \"BoostData\" fields.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>April 20, 2016:</strong></p>     <ul>         <li>Added documentation for the \"GameVariantResourceId\", \"MapVariantResourceId\", and \"PlayerScore\" fields.</li>         <li>Updated the documentation for the \"MapVariantId\" and \"GameVariantId\" fields with the recommendation of using the \"MapVariantResourceId\" and \"GameVariantResourceId\" fields, respectively.</li>     </ul> </div> 

        :param match_id: An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo 5 - Player Match History\" Endpoint. (required)
        :type match_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_match_result_arena_serialize(
            match_id=match_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _halo5_match_result_arena_serialize(
        self,
        match_id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if match_id is not None:
            _path_params['matchId'] = match_id
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/h5/arena/matches/{matchId}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def halo5_match_result_campaign(
        self,
        match_id: Annotated[StrictStr, Field(description="An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo 5 - Player Match History\" Endpoint.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Halo 5 - Match Result - Campaign

        <p>Retrieves detailed statistics for a Match with the Campaign Game Mode.</p> <p>Every time a player plays a portion of a Campaign Mission, a Match will be generated whether the player finishes the Mission or not. If the \"Match\" ends because the Mission was completed, this will be indicated in the response.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>December 22, 2017:</strong></p>     <ul>         <li>Added Game Mode clarifications to the Endpoint description.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Renamed Endpoint from \"Post-Game Carnage Report: Campaign\" to \"Halo 5 - Match Result - Campaign\".</li>         <li>Removed \"{title}\" Request Parameter.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>May 16, 2016:</strong></p>     <ul>         <li>Documented HTTP 503 Response Code.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>April 20, 2016:</strong></p>     <ul>         <li>Added documentation for the \"GameVariantResourceId\", \"MapVariantResourceId\", and \"PlayerScore\" fields.</li>     </ul> </div> 

        :param match_id: An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo 5 - Player Match History\" Endpoint. (required)
        :type match_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_match_result_campaign_serialize(
            match_id=match_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def halo5_match_result_campaign_with_http_info(
        self,
        match_id: Annotated[StrictStr, Field(description="An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo 5 - Player Match History\" Endpoint.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Halo 5 - Match Result - Campaign

        <p>Retrieves detailed statistics for a Match with the Campaign Game Mode.</p> <p>Every time a player plays a portion of a Campaign Mission, a Match will be generated whether the player finishes the Mission or not. If the \"Match\" ends because the Mission was completed, this will be indicated in the response.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>December 22, 2017:</strong></p>     <ul>         <li>Added Game Mode clarifications to the Endpoint description.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Renamed Endpoint from \"Post-Game Carnage Report: Campaign\" to \"Halo 5 - Match Result - Campaign\".</li>         <li>Removed \"{title}\" Request Parameter.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>May 16, 2016:</strong></p>     <ul>         <li>Documented HTTP 503 Response Code.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>April 20, 2016:</strong></p>     <ul>         <li>Added documentation for the \"GameVariantResourceId\", \"MapVariantResourceId\", and \"PlayerScore\" fields.</li>     </ul> </div> 

        :param match_id: An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo 5 - Player Match History\" Endpoint. (required)
        :type match_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_match_result_campaign_serialize(
            match_id=match_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def halo5_match_result_campaign_without_preload_content(
        self,
        match_id: Annotated[StrictStr, Field(description="An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo 5 - Player Match History\" Endpoint.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Halo 5 - Match Result - Campaign

        <p>Retrieves detailed statistics for a Match with the Campaign Game Mode.</p> <p>Every time a player plays a portion of a Campaign Mission, a Match will be generated whether the player finishes the Mission or not. If the \"Match\" ends because the Mission was completed, this will be indicated in the response.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>December 22, 2017:</strong></p>     <ul>         <li>Added Game Mode clarifications to the Endpoint description.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Renamed Endpoint from \"Post-Game Carnage Report: Campaign\" to \"Halo 5 - Match Result - Campaign\".</li>         <li>Removed \"{title}\" Request Parameter.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>May 16, 2016:</strong></p>     <ul>         <li>Documented HTTP 503 Response Code.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>April 20, 2016:</strong></p>     <ul>         <li>Added documentation for the \"GameVariantResourceId\", \"MapVariantResourceId\", and \"PlayerScore\" fields.</li>     </ul> </div> 

        :param match_id: An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo 5 - Player Match History\" Endpoint. (required)
        :type match_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_match_result_campaign_serialize(
            match_id=match_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _halo5_match_result_campaign_serialize(
        self,
        match_id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if match_id is not None:
            _path_params['matchId'] = match_id
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/h5/campaign/matches/{matchId}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def halo5_match_result_custom(
        self,
        match_id: Annotated[StrictStr, Field(description="An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo 5 - Player Match History\" Endpoint.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Halo 5 - Match Result - Custom

        <p>Retrieves detailed statistics for a Match with the Custom Game Mode. Games with the Custom Game Mode are played on Xbox Live Servers. For games played on Local Servers, use the \"Halo 5 - Match Result - Custom Local\" Endpoint.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>December 12, 2018:</strong></p>     <ul>         <li>Updated the documentation for \"PlayerScore\".</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>December 22, 2017:</strong></p>     <ul>         <li>Added Game Mode clarifications to the Endpoint description.</li>         <li>Added documentation for \"PresentInMatch\".</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Renamed Endpoint from \"Post-Game Carnage Report: Custom\" to \"Halo 5 - Match Result - Custom\".</li>         <li>Removed \"{title}\" Request Parameter.</li>         <li>Updated the documentation for \"GameVariantResourceId\" and \"MapVariantResourceId\" to reference the UGC API.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>May 16, 2016:</strong></p>     <ul>         <li>Documented HTTP 503 Response Code.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>April 20, 2016:</strong></p>     <ul>         <li>Added documentation for the \"GameVariantResourceId\", \"MapVariantResourceId\", and \"PlayerScore\" fields.</li>         <li>Updated the documentation for the \"MapVariantId\" and \"GameVariantId\" fields with the recommendation of using the \"MapVariantResourceId\" and \"GameVariantResourceId\" fields, respectively.</li>     </ul> </div> 

        :param match_id: An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo 5 - Player Match History\" Endpoint. (required)
        :type match_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_match_result_custom_serialize(
            match_id=match_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def halo5_match_result_custom_with_http_info(
        self,
        match_id: Annotated[StrictStr, Field(description="An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo 5 - Player Match History\" Endpoint.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Halo 5 - Match Result - Custom

        <p>Retrieves detailed statistics for a Match with the Custom Game Mode. Games with the Custom Game Mode are played on Xbox Live Servers. For games played on Local Servers, use the \"Halo 5 - Match Result - Custom Local\" Endpoint.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>December 12, 2018:</strong></p>     <ul>         <li>Updated the documentation for \"PlayerScore\".</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>December 22, 2017:</strong></p>     <ul>         <li>Added Game Mode clarifications to the Endpoint description.</li>         <li>Added documentation for \"PresentInMatch\".</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Renamed Endpoint from \"Post-Game Carnage Report: Custom\" to \"Halo 5 - Match Result - Custom\".</li>         <li>Removed \"{title}\" Request Parameter.</li>         <li>Updated the documentation for \"GameVariantResourceId\" and \"MapVariantResourceId\" to reference the UGC API.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>May 16, 2016:</strong></p>     <ul>         <li>Documented HTTP 503 Response Code.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>April 20, 2016:</strong></p>     <ul>         <li>Added documentation for the \"GameVariantResourceId\", \"MapVariantResourceId\", and \"PlayerScore\" fields.</li>         <li>Updated the documentation for the \"MapVariantId\" and \"GameVariantId\" fields with the recommendation of using the \"MapVariantResourceId\" and \"GameVariantResourceId\" fields, respectively.</li>     </ul> </div> 

        :param match_id: An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo 5 - Player Match History\" Endpoint. (required)
        :type match_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_match_result_custom_serialize(
            match_id=match_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def halo5_match_result_custom_without_preload_content(
        self,
        match_id: Annotated[StrictStr, Field(description="An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo 5 - Player Match History\" Endpoint.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Halo 5 - Match Result - Custom

        <p>Retrieves detailed statistics for a Match with the Custom Game Mode. Games with the Custom Game Mode are played on Xbox Live Servers. For games played on Local Servers, use the \"Halo 5 - Match Result - Custom Local\" Endpoint.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>December 12, 2018:</strong></p>     <ul>         <li>Updated the documentation for \"PlayerScore\".</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>December 22, 2017:</strong></p>     <ul>         <li>Added Game Mode clarifications to the Endpoint description.</li>         <li>Added documentation for \"PresentInMatch\".</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Renamed Endpoint from \"Post-Game Carnage Report: Custom\" to \"Halo 5 - Match Result - Custom\".</li>         <li>Removed \"{title}\" Request Parameter.</li>         <li>Updated the documentation for \"GameVariantResourceId\" and \"MapVariantResourceId\" to reference the UGC API.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>May 16, 2016:</strong></p>     <ul>         <li>Documented HTTP 503 Response Code.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>April 20, 2016:</strong></p>     <ul>         <li>Added documentation for the \"GameVariantResourceId\", \"MapVariantResourceId\", and \"PlayerScore\" fields.</li>         <li>Updated the documentation for the \"MapVariantId\" and \"GameVariantId\" fields with the recommendation of using the \"MapVariantResourceId\" and \"GameVariantResourceId\" fields, respectively.</li>     </ul> </div> 

        :param match_id: An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo 5 - Player Match History\" Endpoint. (required)
        :type match_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_match_result_custom_serialize(
            match_id=match_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _halo5_match_result_custom_serialize(
        self,
        match_id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if match_id is not None:
            _path_params['matchId'] = match_id
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/h5/custom/matches/{matchId}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def halo5_match_result_custom_local(
        self,
        match_id: Annotated[StrictStr, Field(description="An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo 5 - Player Match History\" Endpoint.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Halo 5 - Match Result - Custom Local

        <p>Retrieves detailed statistics for a Match with the Custom Local Game Mode. Games with the Custom Local Game Mode are played on Local Servers. For games played on Xbox Live Servers, use the \"Halo 5 - Match Result - Custom\" Endpoint.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>December 12, 2018:</strong></p>     <ul>         <li>Updated the documentation for \"PlayerScore\".</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>December 22, 2017:</strong></p>     <ul>         <li>Added Endpoint.</li>     </ul> </div> 

        :param match_id: An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo 5 - Player Match History\" Endpoint. (required)
        :type match_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_match_result_custom_local_serialize(
            match_id=match_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def halo5_match_result_custom_local_with_http_info(
        self,
        match_id: Annotated[StrictStr, Field(description="An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo 5 - Player Match History\" Endpoint.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Halo 5 - Match Result - Custom Local

        <p>Retrieves detailed statistics for a Match with the Custom Local Game Mode. Games with the Custom Local Game Mode are played on Local Servers. For games played on Xbox Live Servers, use the \"Halo 5 - Match Result - Custom\" Endpoint.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>December 12, 2018:</strong></p>     <ul>         <li>Updated the documentation for \"PlayerScore\".</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>December 22, 2017:</strong></p>     <ul>         <li>Added Endpoint.</li>     </ul> </div> 

        :param match_id: An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo 5 - Player Match History\" Endpoint. (required)
        :type match_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_match_result_custom_local_serialize(
            match_id=match_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def halo5_match_result_custom_local_without_preload_content(
        self,
        match_id: Annotated[StrictStr, Field(description="An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo 5 - Player Match History\" Endpoint.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Halo 5 - Match Result - Custom Local

        <p>Retrieves detailed statistics for a Match with the Custom Local Game Mode. Games with the Custom Local Game Mode are played on Local Servers. For games played on Xbox Live Servers, use the \"Halo 5 - Match Result - Custom\" Endpoint.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>December 12, 2018:</strong></p>     <ul>         <li>Updated the documentation for \"PlayerScore\".</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>December 22, 2017:</strong></p>     <ul>         <li>Added Endpoint.</li>     </ul> </div> 

        :param match_id: An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo 5 - Player Match History\" Endpoint. (required)
        :type match_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_match_result_custom_local_serialize(
            match_id=match_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _halo5_match_result_custom_local_serialize(
        self,
        match_id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if match_id is not None:
            _path_params['matchId'] = match_id
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/h5/customlocal/matches/{matchId}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def halo5_match_result_warzone(
        self,
        match_id: Annotated[StrictStr, Field(description="An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo 5 - Player Match History\" Endpoint.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Halo 5 - Match Result - Warzone

        <p>Retrieves detailed statistics for a Match with the Warzone Game Mode.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>December 22, 2017:</strong></p>     <ul>         <li>Added Game Mode clarifications to the Endpoint description.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Renamed Endpoint from \"Post-Game Carnage Report: Warzone\" to \"Halo 5 - Match Result - Warzone\".</li>         <li>Removed \"{title}\" Request Parameter.</li>         <li>Updated the documentation for \"GameVariantResourceId\" and \"MapVariantResourceId\" to reference the UGC API.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>May 16, 2016:</strong></p>     <ul>         <li>Documented HTTP 503 Response Code.</li>         <li>Added documentation for the \"MatchSpeedWinAmount\", \"ObjectivesCompletedAmount\", and \"BoostData\" fields.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>April 20, 2016:</strong></p>     <ul>         <li>Added documentation for the \"GameVariantResourceId\", \"MapVariantResourceId\", and \"PlayerScore\" fields.</li>         <li>Updated the documentation for the \"MapVariantId\" and \"GameVariantId\" fields with the recommendation of using the \"MapVariantResourceId\" and \"GameVariantResourceId\" fields, respectively.</li>     </ul> </div> 

        :param match_id: An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo 5 - Player Match History\" Endpoint. (required)
        :type match_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_match_result_warzone_serialize(
            match_id=match_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def halo5_match_result_warzone_with_http_info(
        self,
        match_id: Annotated[StrictStr, Field(description="An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo 5 - Player Match History\" Endpoint.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Halo 5 - Match Result - Warzone

        <p>Retrieves detailed statistics for a Match with the Warzone Game Mode.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>December 22, 2017:</strong></p>     <ul>         <li>Added Game Mode clarifications to the Endpoint description.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Renamed Endpoint from \"Post-Game Carnage Report: Warzone\" to \"Halo 5 - Match Result - Warzone\".</li>         <li>Removed \"{title}\" Request Parameter.</li>         <li>Updated the documentation for \"GameVariantResourceId\" and \"MapVariantResourceId\" to reference the UGC API.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>May 16, 2016:</strong></p>     <ul>         <li>Documented HTTP 503 Response Code.</li>         <li>Added documentation for the \"MatchSpeedWinAmount\", \"ObjectivesCompletedAmount\", and \"BoostData\" fields.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>April 20, 2016:</strong></p>     <ul>         <li>Added documentation for the \"GameVariantResourceId\", \"MapVariantResourceId\", and \"PlayerScore\" fields.</li>         <li>Updated the documentation for the \"MapVariantId\" and \"GameVariantId\" fields with the recommendation of using the \"MapVariantResourceId\" and \"GameVariantResourceId\" fields, respectively.</li>     </ul> </div> 

        :param match_id: An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo 5 - Player Match History\" Endpoint. (required)
        :type match_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_match_result_warzone_serialize(
            match_id=match_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def halo5_match_result_warzone_without_preload_content(
        self,
        match_id: Annotated[StrictStr, Field(description="An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo 5 - Player Match History\" Endpoint.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Halo 5 - Match Result - Warzone

        <p>Retrieves detailed statistics for a Match with the Warzone Game Mode.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>December 22, 2017:</strong></p>     <ul>         <li>Added Game Mode clarifications to the Endpoint description.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Renamed Endpoint from \"Post-Game Carnage Report: Warzone\" to \"Halo 5 - Match Result - Warzone\".</li>         <li>Removed \"{title}\" Request Parameter.</li>         <li>Updated the documentation for \"GameVariantResourceId\" and \"MapVariantResourceId\" to reference the UGC API.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>May 16, 2016:</strong></p>     <ul>         <li>Documented HTTP 503 Response Code.</li>         <li>Added documentation for the \"MatchSpeedWinAmount\", \"ObjectivesCompletedAmount\", and \"BoostData\" fields.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>April 20, 2016:</strong></p>     <ul>         <li>Added documentation for the \"GameVariantResourceId\", \"MapVariantResourceId\", and \"PlayerScore\" fields.</li>         <li>Updated the documentation for the \"MapVariantId\" and \"GameVariantId\" fields with the recommendation of using the \"MapVariantResourceId\" and \"GameVariantResourceId\" fields, respectively.</li>     </ul> </div> 

        :param match_id: An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo 5 - Player Match History\" Endpoint. (required)
        :type match_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_match_result_warzone_serialize(
            match_id=match_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _halo5_match_result_warzone_serialize(
        self,
        match_id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if match_id is not None:
            _path_params['matchId'] = match_id
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/h5/warzone/matches/{matchId}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def halo5_pc_match_result_custom(
        self,
        match_id: Annotated[StrictStr, Field(description="An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo 5 PC - Player Match History\" Endpoint.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Halo 5 PC - Match Result - Custom

        <p>Retrieves detailed statistics for a Match with the Custom Game Mode. Games with the Custom Game Mode are played on Xbox Live Servers. For games played on Local Servers, use the \"Halo 5 - Match Result - Custom Local\" Endpoint.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>December 12, 2018:</strong></p>     <ul>         <li>Updated the documentation for \"PlayerScore\".</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>December 22, 2017:</strong></p>     <ul>         <li>Added Game Mode clarifications to the Endpoint description.</li>         <li>Added documentation for \"PresentInMatch\".</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Renamed Endpoint from \"Post-Game Carnage Report: Custom\" to \"Halo 5 - Match Result - Custom\".</li>         <li>Removed \"{title}\" Request Parameter.</li>         <li>Updated the documentation for \"GameVariantResourceId\" and \"MapVariantResourceId\" to reference the UGC API.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>May 16, 2016:</strong></p>     <ul>         <li>Documented HTTP 503 Response Code.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>April 20, 2016:</strong></p>     <ul>         <li>Added documentation for the \"GameVariantResourceId\", \"MapVariantResourceId\", and \"PlayerScore\" fields.</li>         <li>Updated the documentation for the \"MapVariantId\" and \"GameVariantId\" fields with the recommendation of using the \"MapVariantResourceId\" and \"GameVariantResourceId\" fields, respectively.</li>     </ul> </div> 

        :param match_id: An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo 5 PC - Player Match History\" Endpoint. (required)
        :type match_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_pc_match_result_custom_serialize(
            match_id=match_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def halo5_pc_match_result_custom_with_http_info(
        self,
        match_id: Annotated[StrictStr, Field(description="An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo 5 PC - Player Match History\" Endpoint.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Halo 5 PC - Match Result - Custom

        <p>Retrieves detailed statistics for a Match with the Custom Game Mode. Games with the Custom Game Mode are played on Xbox Live Servers. For games played on Local Servers, use the \"Halo 5 - Match Result - Custom Local\" Endpoint.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>December 12, 2018:</strong></p>     <ul>         <li>Updated the documentation for \"PlayerScore\".</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>December 22, 2017:</strong></p>     <ul>         <li>Added Game Mode clarifications to the Endpoint description.</li>         <li>Added documentation for \"PresentInMatch\".</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Renamed Endpoint from \"Post-Game Carnage Report: Custom\" to \"Halo 5 - Match Result - Custom\".</li>         <li>Removed \"{title}\" Request Parameter.</li>         <li>Updated the documentation for \"GameVariantResourceId\" and \"MapVariantResourceId\" to reference the UGC API.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>May 16, 2016:</strong></p>     <ul>         <li>Documented HTTP 503 Response Code.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>April 20, 2016:</strong></p>     <ul>         <li>Added documentation for the \"GameVariantResourceId\", \"MapVariantResourceId\", and \"PlayerScore\" fields.</li>         <li>Updated the documentation for the \"MapVariantId\" and \"GameVariantId\" fields with the recommendation of using the \"MapVariantResourceId\" and \"GameVariantResourceId\" fields, respectively.</li>     </ul> </div> 

        :param match_id: An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo 5 PC - Player Match History\" Endpoint. (required)
        :type match_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_pc_match_result_custom_serialize(
            match_id=match_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def halo5_pc_match_result_custom_without_preload_content(
        self,
        match_id: Annotated[StrictStr, Field(description="An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo 5 PC - Player Match History\" Endpoint.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Halo 5 PC - Match Result - Custom

        <p>Retrieves detailed statistics for a Match with the Custom Game Mode. Games with the Custom Game Mode are played on Xbox Live Servers. For games played on Local Servers, use the \"Halo 5 - Match Result - Custom Local\" Endpoint.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>December 12, 2018:</strong></p>     <ul>         <li>Updated the documentation for \"PlayerScore\".</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>December 22, 2017:</strong></p>     <ul>         <li>Added Game Mode clarifications to the Endpoint description.</li>         <li>Added documentation for \"PresentInMatch\".</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Renamed Endpoint from \"Post-Game Carnage Report: Custom\" to \"Halo 5 - Match Result - Custom\".</li>         <li>Removed \"{title}\" Request Parameter.</li>         <li>Updated the documentation for \"GameVariantResourceId\" and \"MapVariantResourceId\" to reference the UGC API.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>May 16, 2016:</strong></p>     <ul>         <li>Documented HTTP 503 Response Code.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>April 20, 2016:</strong></p>     <ul>         <li>Added documentation for the \"GameVariantResourceId\", \"MapVariantResourceId\", and \"PlayerScore\" fields.</li>         <li>Updated the documentation for the \"MapVariantId\" and \"GameVariantId\" fields with the recommendation of using the \"MapVariantResourceId\" and \"GameVariantResourceId\" fields, respectively.</li>     </ul> </div> 

        :param match_id: An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo 5 PC - Player Match History\" Endpoint. (required)
        :type match_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_pc_match_result_custom_serialize(
            match_id=match_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _halo5_pc_match_result_custom_serialize(
        self,
        match_id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if match_id is not None:
            _path_params['matchId'] = match_id
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/h5pc/custom/matches/{matchId}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def halo5_pc_player_match_history(
        self,
        player: Annotated[StrictStr, Field(description="The Player's Gamertag.")],
        modes: Annotated[Optional[StrictStr], Field(description="Indicates what Game Mode(s) the client is interested in getting Matches for (arena, campaign, custom, or warzone).  When the parameter is omitted or empty, Matches from all modes are returned. When a client would like to receive Matches spanning multiple Modes, separate the Modes with a comma (e.g. \"arena,custom\"). There is no significance to the order the Modes are specified in this parameter.  When an invalid Mode is specified, HTTP 400 (\"Bad Request\") is returned.  When a valid Mode is specified more than once, HTTP 400 (\"Bad Request\") is returned.")] = None,
        start: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="When specified, this indicates the starting index (0-based) for which the batch of results will begin at. For example, \"start=0\" indicates that the first qualifying result will be returned, no items are 'skipped'. Passing \"start=10\" indicates that the result will begin with the 11th item, the first 10 will be 'skipped'.  When omitted, zero is assumed.  When the value contains a non-digit, HTTP 400 (\"Bad Request\") is returned.")] = None,
        count: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="When specified, this indicates the maximum quantity of items the client would like returned in the response.  When omitted, 25 is assumed.  When the value contains a non-digit or is exactly \"0\", HTTP 400 (\"Bad Request\") is returned.  When the value is greater than the allowed range [1,25], the maximum allowed value is used instead. The \"Count\" field in the response will confirm the actual value that was used.")] = None,
        include_times: Annotated[Optional[StrictBool], Field(description="When set to \"true\", this indicates that the time component of the \"MatchCompletedDate\" field should be populated.  Otherwise, when set to \"false\" or when omitted, the time component will be set to \"00:00:00\".  When the value contains a non-boolean, HTTP 400 (\"Bad Request\") is returned.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Halo 5 PC - Player Match History

        <p>Retrieves a list of Matches that the Player has participated in and which have completed processing. If the Player is currently in a match, it is not returned in this API.</p> <p>This endpoint will include games played on Local Servers with the Custom Local Game Mode for games that occurred or after December 22, 2017.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>February 1, 2019:</strong></p>     <ul>         <li>Enabled support for viewing the time component of the \"MatchCompletedDate\" via the \"{include-times}\" Request Parameter.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>December 22, 2017:</strong></p>     <ul>         <li>Added support for the Custom Local Game mode.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Renamed Endpoint from \"Matches for Player\" to \"Halo 5 - Player Match History\".</li>         <li>Removed \"{title}\" Request Parameter.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>April 20, 2016:</strong></p>     <ul>         <li>Clarified documentation for the \"MapVariant\" and \"GameVariant\" fields.</li>         <li>Corrected \"OwnerType\" values for the \"MapVariant\" and \"GameVariant\" fields.</li>     </ul> </div> 

        :param player: The Player's Gamertag. (required)
        :type player: str
        :param modes: Indicates what Game Mode(s) the client is interested in getting Matches for (arena, campaign, custom, or warzone).  When the parameter is omitted or empty, Matches from all modes are returned. When a client would like to receive Matches spanning multiple Modes, separate the Modes with a comma (e.g. \"arena,custom\"). There is no significance to the order the Modes are specified in this parameter.  When an invalid Mode is specified, HTTP 400 (\"Bad Request\") is returned.  When a valid Mode is specified more than once, HTTP 400 (\"Bad Request\") is returned.
        :type modes: str
        :param start: When specified, this indicates the starting index (0-based) for which the batch of results will begin at. For example, \"start=0\" indicates that the first qualifying result will be returned, no items are 'skipped'. Passing \"start=10\" indicates that the result will begin with the 11th item, the first 10 will be 'skipped'.  When omitted, zero is assumed.  When the value contains a non-digit, HTTP 400 (\"Bad Request\") is returned.
        :type start: float
        :param count: When specified, this indicates the maximum quantity of items the client would like returned in the response.  When omitted, 25 is assumed.  When the value contains a non-digit or is exactly \"0\", HTTP 400 (\"Bad Request\") is returned.  When the value is greater than the allowed range [1,25], the maximum allowed value is used instead. The \"Count\" field in the response will confirm the actual value that was used.
        :type count: float
        :param include_times: When set to \"true\", this indicates that the time component of the \"MatchCompletedDate\" field should be populated.  Otherwise, when set to \"false\" or when omitted, the time component will be set to \"00:00:00\".  When the value contains a non-boolean, HTTP 400 (\"Bad Request\") is returned.
        :type include_times: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_pc_player_match_history_serialize(
            player=player,
            modes=modes,
            start=start,
            count=count,
            include_times=include_times,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '400': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def halo5_pc_player_match_history_with_http_info(
        self,
        player: Annotated[StrictStr, Field(description="The Player's Gamertag.")],
        modes: Annotated[Optional[StrictStr], Field(description="Indicates what Game Mode(s) the client is interested in getting Matches for (arena, campaign, custom, or warzone).  When the parameter is omitted or empty, Matches from all modes are returned. When a client would like to receive Matches spanning multiple Modes, separate the Modes with a comma (e.g. \"arena,custom\"). There is no significance to the order the Modes are specified in this parameter.  When an invalid Mode is specified, HTTP 400 (\"Bad Request\") is returned.  When a valid Mode is specified more than once, HTTP 400 (\"Bad Request\") is returned.")] = None,
        start: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="When specified, this indicates the starting index (0-based) for which the batch of results will begin at. For example, \"start=0\" indicates that the first qualifying result will be returned, no items are 'skipped'. Passing \"start=10\" indicates that the result will begin with the 11th item, the first 10 will be 'skipped'.  When omitted, zero is assumed.  When the value contains a non-digit, HTTP 400 (\"Bad Request\") is returned.")] = None,
        count: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="When specified, this indicates the maximum quantity of items the client would like returned in the response.  When omitted, 25 is assumed.  When the value contains a non-digit or is exactly \"0\", HTTP 400 (\"Bad Request\") is returned.  When the value is greater than the allowed range [1,25], the maximum allowed value is used instead. The \"Count\" field in the response will confirm the actual value that was used.")] = None,
        include_times: Annotated[Optional[StrictBool], Field(description="When set to \"true\", this indicates that the time component of the \"MatchCompletedDate\" field should be populated.  Otherwise, when set to \"false\" or when omitted, the time component will be set to \"00:00:00\".  When the value contains a non-boolean, HTTP 400 (\"Bad Request\") is returned.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Halo 5 PC - Player Match History

        <p>Retrieves a list of Matches that the Player has participated in and which have completed processing. If the Player is currently in a match, it is not returned in this API.</p> <p>This endpoint will include games played on Local Servers with the Custom Local Game Mode for games that occurred or after December 22, 2017.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>February 1, 2019:</strong></p>     <ul>         <li>Enabled support for viewing the time component of the \"MatchCompletedDate\" via the \"{include-times}\" Request Parameter.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>December 22, 2017:</strong></p>     <ul>         <li>Added support for the Custom Local Game mode.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Renamed Endpoint from \"Matches for Player\" to \"Halo 5 - Player Match History\".</li>         <li>Removed \"{title}\" Request Parameter.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>April 20, 2016:</strong></p>     <ul>         <li>Clarified documentation for the \"MapVariant\" and \"GameVariant\" fields.</li>         <li>Corrected \"OwnerType\" values for the \"MapVariant\" and \"GameVariant\" fields.</li>     </ul> </div> 

        :param player: The Player's Gamertag. (required)
        :type player: str
        :param modes: Indicates what Game Mode(s) the client is interested in getting Matches for (arena, campaign, custom, or warzone).  When the parameter is omitted or empty, Matches from all modes are returned. When a client would like to receive Matches spanning multiple Modes, separate the Modes with a comma (e.g. \"arena,custom\"). There is no significance to the order the Modes are specified in this parameter.  When an invalid Mode is specified, HTTP 400 (\"Bad Request\") is returned.  When a valid Mode is specified more than once, HTTP 400 (\"Bad Request\") is returned.
        :type modes: str
        :param start: When specified, this indicates the starting index (0-based) for which the batch of results will begin at. For example, \"start=0\" indicates that the first qualifying result will be returned, no items are 'skipped'. Passing \"start=10\" indicates that the result will begin with the 11th item, the first 10 will be 'skipped'.  When omitted, zero is assumed.  When the value contains a non-digit, HTTP 400 (\"Bad Request\") is returned.
        :type start: float
        :param count: When specified, this indicates the maximum quantity of items the client would like returned in the response.  When omitted, 25 is assumed.  When the value contains a non-digit or is exactly \"0\", HTTP 400 (\"Bad Request\") is returned.  When the value is greater than the allowed range [1,25], the maximum allowed value is used instead. The \"Count\" field in the response will confirm the actual value that was used.
        :type count: float
        :param include_times: When set to \"true\", this indicates that the time component of the \"MatchCompletedDate\" field should be populated.  Otherwise, when set to \"false\" or when omitted, the time component will be set to \"00:00:00\".  When the value contains a non-boolean, HTTP 400 (\"Bad Request\") is returned.
        :type include_times: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_pc_player_match_history_serialize(
            player=player,
            modes=modes,
            start=start,
            count=count,
            include_times=include_times,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '400': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def halo5_pc_player_match_history_without_preload_content(
        self,
        player: Annotated[StrictStr, Field(description="The Player's Gamertag.")],
        modes: Annotated[Optional[StrictStr], Field(description="Indicates what Game Mode(s) the client is interested in getting Matches for (arena, campaign, custom, or warzone).  When the parameter is omitted or empty, Matches from all modes are returned. When a client would like to receive Matches spanning multiple Modes, separate the Modes with a comma (e.g. \"arena,custom\"). There is no significance to the order the Modes are specified in this parameter.  When an invalid Mode is specified, HTTP 400 (\"Bad Request\") is returned.  When a valid Mode is specified more than once, HTTP 400 (\"Bad Request\") is returned.")] = None,
        start: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="When specified, this indicates the starting index (0-based) for which the batch of results will begin at. For example, \"start=0\" indicates that the first qualifying result will be returned, no items are 'skipped'. Passing \"start=10\" indicates that the result will begin with the 11th item, the first 10 will be 'skipped'.  When omitted, zero is assumed.  When the value contains a non-digit, HTTP 400 (\"Bad Request\") is returned.")] = None,
        count: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="When specified, this indicates the maximum quantity of items the client would like returned in the response.  When omitted, 25 is assumed.  When the value contains a non-digit or is exactly \"0\", HTTP 400 (\"Bad Request\") is returned.  When the value is greater than the allowed range [1,25], the maximum allowed value is used instead. The \"Count\" field in the response will confirm the actual value that was used.")] = None,
        include_times: Annotated[Optional[StrictBool], Field(description="When set to \"true\", this indicates that the time component of the \"MatchCompletedDate\" field should be populated.  Otherwise, when set to \"false\" or when omitted, the time component will be set to \"00:00:00\".  When the value contains a non-boolean, HTTP 400 (\"Bad Request\") is returned.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Halo 5 PC - Player Match History

        <p>Retrieves a list of Matches that the Player has participated in and which have completed processing. If the Player is currently in a match, it is not returned in this API.</p> <p>This endpoint will include games played on Local Servers with the Custom Local Game Mode for games that occurred or after December 22, 2017.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>February 1, 2019:</strong></p>     <ul>         <li>Enabled support for viewing the time component of the \"MatchCompletedDate\" via the \"{include-times}\" Request Parameter.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>December 22, 2017:</strong></p>     <ul>         <li>Added support for the Custom Local Game mode.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Renamed Endpoint from \"Matches for Player\" to \"Halo 5 - Player Match History\".</li>         <li>Removed \"{title}\" Request Parameter.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>April 20, 2016:</strong></p>     <ul>         <li>Clarified documentation for the \"MapVariant\" and \"GameVariant\" fields.</li>         <li>Corrected \"OwnerType\" values for the \"MapVariant\" and \"GameVariant\" fields.</li>     </ul> </div> 

        :param player: The Player's Gamertag. (required)
        :type player: str
        :param modes: Indicates what Game Mode(s) the client is interested in getting Matches for (arena, campaign, custom, or warzone).  When the parameter is omitted or empty, Matches from all modes are returned. When a client would like to receive Matches spanning multiple Modes, separate the Modes with a comma (e.g. \"arena,custom\"). There is no significance to the order the Modes are specified in this parameter.  When an invalid Mode is specified, HTTP 400 (\"Bad Request\") is returned.  When a valid Mode is specified more than once, HTTP 400 (\"Bad Request\") is returned.
        :type modes: str
        :param start: When specified, this indicates the starting index (0-based) for which the batch of results will begin at. For example, \"start=0\" indicates that the first qualifying result will be returned, no items are 'skipped'. Passing \"start=10\" indicates that the result will begin with the 11th item, the first 10 will be 'skipped'.  When omitted, zero is assumed.  When the value contains a non-digit, HTTP 400 (\"Bad Request\") is returned.
        :type start: float
        :param count: When specified, this indicates the maximum quantity of items the client would like returned in the response.  When omitted, 25 is assumed.  When the value contains a non-digit or is exactly \"0\", HTTP 400 (\"Bad Request\") is returned.  When the value is greater than the allowed range [1,25], the maximum allowed value is used instead. The \"Count\" field in the response will confirm the actual value that was used.
        :type count: float
        :param include_times: When set to \"true\", this indicates that the time component of the \"MatchCompletedDate\" field should be populated.  Otherwise, when set to \"false\" or when omitted, the time component will be set to \"00:00:00\".  When the value contains a non-boolean, HTTP 400 (\"Bad Request\") is returned.
        :type include_times: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_pc_player_match_history_serialize(
            player=player,
            modes=modes,
            start=start,
            count=count,
            include_times=include_times,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '400': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _halo5_pc_player_match_history_serialize(
        self,
        player,
        modes,
        start,
        count,
        include_times,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if player is not None:
            _path_params['player'] = player
        # process the query parameters
        if modes is not None:
            
            _query_params.append(('modes', modes))
            
        if start is not None:
            
            _query_params.append(('start', start))
            
        if count is not None:
            
            _query_params.append(('count', count))
            
        if include_times is not None:
            
            _query_params.append(('include-times', include_times))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/h5pc/players/{player}/matches',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def halo5_pc_player_service_records_custom(
        self,
        players: Annotated[StrictStr, Field(description="A comma-separated list of Gamertags. Up to 32 Gamertags may be specified.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Halo 5 PC - Player Service Records - Custom

        <p>Retrieves Service Records for the Custom Game Mode for one or more players. A Service Record contains a player's lifetime statistics in the Game Mode. Games with the Custom Game Mode are played on Xbox Live Servers. For games played on Local Servers, use the \"Halo 5 - Player Service Records - Custom Local\" Endpoint.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>December 22, 2017:</strong></p>     <ul>         <li>Added Game Mode clarifications to the Endpoint description.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Renamed Endpoint from \"Service Record: Custom\" to \"Halo 5 - Player Service Records - Custom\".</li>         <li>Removed \"{title}\" Request Parameter.</li>     </ul> </div> 

        :param players: A comma-separated list of Gamertags. Up to 32 Gamertags may be specified. (required)
        :type players: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_pc_player_service_records_custom_serialize(
            players=players,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def halo5_pc_player_service_records_custom_with_http_info(
        self,
        players: Annotated[StrictStr, Field(description="A comma-separated list of Gamertags. Up to 32 Gamertags may be specified.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Halo 5 PC - Player Service Records - Custom

        <p>Retrieves Service Records for the Custom Game Mode for one or more players. A Service Record contains a player's lifetime statistics in the Game Mode. Games with the Custom Game Mode are played on Xbox Live Servers. For games played on Local Servers, use the \"Halo 5 - Player Service Records - Custom Local\" Endpoint.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>December 22, 2017:</strong></p>     <ul>         <li>Added Game Mode clarifications to the Endpoint description.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Renamed Endpoint from \"Service Record: Custom\" to \"Halo 5 - Player Service Records - Custom\".</li>         <li>Removed \"{title}\" Request Parameter.</li>     </ul> </div> 

        :param players: A comma-separated list of Gamertags. Up to 32 Gamertags may be specified. (required)
        :type players: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_pc_player_service_records_custom_serialize(
            players=players,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def halo5_pc_player_service_records_custom_without_preload_content(
        self,
        players: Annotated[StrictStr, Field(description="A comma-separated list of Gamertags. Up to 32 Gamertags may be specified.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Halo 5 PC - Player Service Records - Custom

        <p>Retrieves Service Records for the Custom Game Mode for one or more players. A Service Record contains a player's lifetime statistics in the Game Mode. Games with the Custom Game Mode are played on Xbox Live Servers. For games played on Local Servers, use the \"Halo 5 - Player Service Records - Custom Local\" Endpoint.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>December 22, 2017:</strong></p>     <ul>         <li>Added Game Mode clarifications to the Endpoint description.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Renamed Endpoint from \"Service Record: Custom\" to \"Halo 5 - Player Service Records - Custom\".</li>         <li>Removed \"{title}\" Request Parameter.</li>     </ul> </div> 

        :param players: A comma-separated list of Gamertags. Up to 32 Gamertags may be specified. (required)
        :type players: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_pc_player_service_records_custom_serialize(
            players=players,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _halo5_pc_player_service_records_custom_serialize(
        self,
        players,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if players is not None:
            
            _query_params.append(('players', players))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/h5pc/servicerecords/custom',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def halo5_player_commendations(
        self,
        player: Annotated[StrictStr, Field(description="The Player's Gamertag.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Halo 5 - Player Commendations

        <p>Retrieves the commendation state for a Player.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>July 14, 2017:</strong></p>     <ul>         <li>Added Endpoint.</li>     </ul> </div> 

        :param player: The Player's Gamertag. (required)
        :type player: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_player_commendations_serialize(
            player=player,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def halo5_player_commendations_with_http_info(
        self,
        player: Annotated[StrictStr, Field(description="The Player's Gamertag.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Halo 5 - Player Commendations

        <p>Retrieves the commendation state for a Player.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>July 14, 2017:</strong></p>     <ul>         <li>Added Endpoint.</li>     </ul> </div> 

        :param player: The Player's Gamertag. (required)
        :type player: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_player_commendations_serialize(
            player=player,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def halo5_player_commendations_without_preload_content(
        self,
        player: Annotated[StrictStr, Field(description="The Player's Gamertag.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Halo 5 - Player Commendations

        <p>Retrieves the commendation state for a Player.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>July 14, 2017:</strong></p>     <ul>         <li>Added Endpoint.</li>     </ul> </div> 

        :param player: The Player's Gamertag. (required)
        :type player: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_player_commendations_serialize(
            player=player,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _halo5_player_commendations_serialize(
        self,
        player,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if player is not None:
            _path_params['player'] = player
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/h5/players/{player}/commendations',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def halo5_player_match_history(
        self,
        player: Annotated[StrictStr, Field(description="The Player's Gamertag.")],
        modes: Annotated[Optional[StrictStr], Field(description="Indicates what Game Mode(s) the client is interested in getting Matches for (arena, campaign, custom, customlocal, or warzone).  When the parameter is omitted or empty, Matches from all modes are returned. When a client would like to receive Matches spanning multiple Modes, separate the Modes with a comma (e.g. \"arena,custom\"). There is no significance to the order the Modes are specified in this parameter.  When an invalid Mode is specified, HTTP 400 (\"Bad Request\") is returned.  When a valid Mode is specified more than once, HTTP 400 (\"Bad Request\") is returned.")] = None,
        start: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="When specified, this indicates the starting index (0-based) for which the batch of results will begin at. For example, \"start=0\" indicates that the first qualifying result will be returned, no items are 'skipped'. Passing \"start=10\" indicates that the result will begin with the 11th item, the first 10 will be 'skipped'.  When omitted, zero is assumed.  When the value contains a non-digit, HTTP 400 (\"Bad Request\") is returned.")] = None,
        count: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="When specified, this indicates the maximum quantity of items the client would like returned in the response.  When omitted, 25 is assumed.  When the value contains a non-digit or is exactly \"0\", HTTP 400 (\"Bad Request\") is returned.  When the value is greater than the allowed range [1,25], the maximum allowed value is used instead. The \"Count\" field in the response will confirm the actual value that was used.")] = None,
        include_times: Annotated[Optional[StrictBool], Field(description="When set to \"true\", this indicates that the time component of the \"MatchCompletedDate\" field should be populated.  Otherwise, when set to \"false\" or when omitted, the time component will be set to \"00:00:00\".  When the value contains a non-boolean, HTTP 400 (\"Bad Request\") is returned.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Halo 5 - Player Match History

        <p>Retrieves a list of Matches that the Player has participated in and which have completed processing. If the Player is currently in a match, it is not returned in this API.</p> <p>This endpoint will include games played on Local Servers with the Custom Local Game Mode for games that occurred or after December 22, 2017.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>February 1, 2019:</strong></p>     <ul>         <li>Enabled support for viewing the time component of the \"MatchCompletedDate\" via the \"{include-times}\" Request Parameter.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>December 22, 2017:</strong></p>     <ul>         <li>Added support for the Custom Local Game mode.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Renamed Endpoint from \"Matches for Player\" to \"Halo 5 - Player Match History\".</li>         <li>Removed \"{title}\" Request Parameter.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>April 20, 2016:</strong></p>     <ul>         <li>Clarified documentation for the \"MapVariant\" and \"GameVariant\" fields.</li>         <li>Corrected \"OwnerType\" values for the \"MapVariant\" and \"GameVariant\" fields.</li>     </ul> </div> 

        :param player: The Player's Gamertag. (required)
        :type player: str
        :param modes: Indicates what Game Mode(s) the client is interested in getting Matches for (arena, campaign, custom, customlocal, or warzone).  When the parameter is omitted or empty, Matches from all modes are returned. When a client would like to receive Matches spanning multiple Modes, separate the Modes with a comma (e.g. \"arena,custom\"). There is no significance to the order the Modes are specified in this parameter.  When an invalid Mode is specified, HTTP 400 (\"Bad Request\") is returned.  When a valid Mode is specified more than once, HTTP 400 (\"Bad Request\") is returned.
        :type modes: str
        :param start: When specified, this indicates the starting index (0-based) for which the batch of results will begin at. For example, \"start=0\" indicates that the first qualifying result will be returned, no items are 'skipped'. Passing \"start=10\" indicates that the result will begin with the 11th item, the first 10 will be 'skipped'.  When omitted, zero is assumed.  When the value contains a non-digit, HTTP 400 (\"Bad Request\") is returned.
        :type start: float
        :param count: When specified, this indicates the maximum quantity of items the client would like returned in the response.  When omitted, 25 is assumed.  When the value contains a non-digit or is exactly \"0\", HTTP 400 (\"Bad Request\") is returned.  When the value is greater than the allowed range [1,25], the maximum allowed value is used instead. The \"Count\" field in the response will confirm the actual value that was used.
        :type count: float
        :param include_times: When set to \"true\", this indicates that the time component of the \"MatchCompletedDate\" field should be populated.  Otherwise, when set to \"false\" or when omitted, the time component will be set to \"00:00:00\".  When the value contains a non-boolean, HTTP 400 (\"Bad Request\") is returned.
        :type include_times: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_player_match_history_serialize(
            player=player,
            modes=modes,
            start=start,
            count=count,
            include_times=include_times,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '400': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def halo5_player_match_history_with_http_info(
        self,
        player: Annotated[StrictStr, Field(description="The Player's Gamertag.")],
        modes: Annotated[Optional[StrictStr], Field(description="Indicates what Game Mode(s) the client is interested in getting Matches for (arena, campaign, custom, customlocal, or warzone).  When the parameter is omitted or empty, Matches from all modes are returned. When a client would like to receive Matches spanning multiple Modes, separate the Modes with a comma (e.g. \"arena,custom\"). There is no significance to the order the Modes are specified in this parameter.  When an invalid Mode is specified, HTTP 400 (\"Bad Request\") is returned.  When a valid Mode is specified more than once, HTTP 400 (\"Bad Request\") is returned.")] = None,
        start: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="When specified, this indicates the starting index (0-based) for which the batch of results will begin at. For example, \"start=0\" indicates that the first qualifying result will be returned, no items are 'skipped'. Passing \"start=10\" indicates that the result will begin with the 11th item, the first 10 will be 'skipped'.  When omitted, zero is assumed.  When the value contains a non-digit, HTTP 400 (\"Bad Request\") is returned.")] = None,
        count: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="When specified, this indicates the maximum quantity of items the client would like returned in the response.  When omitted, 25 is assumed.  When the value contains a non-digit or is exactly \"0\", HTTP 400 (\"Bad Request\") is returned.  When the value is greater than the allowed range [1,25], the maximum allowed value is used instead. The \"Count\" field in the response will confirm the actual value that was used.")] = None,
        include_times: Annotated[Optional[StrictBool], Field(description="When set to \"true\", this indicates that the time component of the \"MatchCompletedDate\" field should be populated.  Otherwise, when set to \"false\" or when omitted, the time component will be set to \"00:00:00\".  When the value contains a non-boolean, HTTP 400 (\"Bad Request\") is returned.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Halo 5 - Player Match History

        <p>Retrieves a list of Matches that the Player has participated in and which have completed processing. If the Player is currently in a match, it is not returned in this API.</p> <p>This endpoint will include games played on Local Servers with the Custom Local Game Mode for games that occurred or after December 22, 2017.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>February 1, 2019:</strong></p>     <ul>         <li>Enabled support for viewing the time component of the \"MatchCompletedDate\" via the \"{include-times}\" Request Parameter.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>December 22, 2017:</strong></p>     <ul>         <li>Added support for the Custom Local Game mode.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Renamed Endpoint from \"Matches for Player\" to \"Halo 5 - Player Match History\".</li>         <li>Removed \"{title}\" Request Parameter.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>April 20, 2016:</strong></p>     <ul>         <li>Clarified documentation for the \"MapVariant\" and \"GameVariant\" fields.</li>         <li>Corrected \"OwnerType\" values for the \"MapVariant\" and \"GameVariant\" fields.</li>     </ul> </div> 

        :param player: The Player's Gamertag. (required)
        :type player: str
        :param modes: Indicates what Game Mode(s) the client is interested in getting Matches for (arena, campaign, custom, customlocal, or warzone).  When the parameter is omitted or empty, Matches from all modes are returned. When a client would like to receive Matches spanning multiple Modes, separate the Modes with a comma (e.g. \"arena,custom\"). There is no significance to the order the Modes are specified in this parameter.  When an invalid Mode is specified, HTTP 400 (\"Bad Request\") is returned.  When a valid Mode is specified more than once, HTTP 400 (\"Bad Request\") is returned.
        :type modes: str
        :param start: When specified, this indicates the starting index (0-based) for which the batch of results will begin at. For example, \"start=0\" indicates that the first qualifying result will be returned, no items are 'skipped'. Passing \"start=10\" indicates that the result will begin with the 11th item, the first 10 will be 'skipped'.  When omitted, zero is assumed.  When the value contains a non-digit, HTTP 400 (\"Bad Request\") is returned.
        :type start: float
        :param count: When specified, this indicates the maximum quantity of items the client would like returned in the response.  When omitted, 25 is assumed.  When the value contains a non-digit or is exactly \"0\", HTTP 400 (\"Bad Request\") is returned.  When the value is greater than the allowed range [1,25], the maximum allowed value is used instead. The \"Count\" field in the response will confirm the actual value that was used.
        :type count: float
        :param include_times: When set to \"true\", this indicates that the time component of the \"MatchCompletedDate\" field should be populated.  Otherwise, when set to \"false\" or when omitted, the time component will be set to \"00:00:00\".  When the value contains a non-boolean, HTTP 400 (\"Bad Request\") is returned.
        :type include_times: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_player_match_history_serialize(
            player=player,
            modes=modes,
            start=start,
            count=count,
            include_times=include_times,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '400': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def halo5_player_match_history_without_preload_content(
        self,
        player: Annotated[StrictStr, Field(description="The Player's Gamertag.")],
        modes: Annotated[Optional[StrictStr], Field(description="Indicates what Game Mode(s) the client is interested in getting Matches for (arena, campaign, custom, customlocal, or warzone).  When the parameter is omitted or empty, Matches from all modes are returned. When a client would like to receive Matches spanning multiple Modes, separate the Modes with a comma (e.g. \"arena,custom\"). There is no significance to the order the Modes are specified in this parameter.  When an invalid Mode is specified, HTTP 400 (\"Bad Request\") is returned.  When a valid Mode is specified more than once, HTTP 400 (\"Bad Request\") is returned.")] = None,
        start: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="When specified, this indicates the starting index (0-based) for which the batch of results will begin at. For example, \"start=0\" indicates that the first qualifying result will be returned, no items are 'skipped'. Passing \"start=10\" indicates that the result will begin with the 11th item, the first 10 will be 'skipped'.  When omitted, zero is assumed.  When the value contains a non-digit, HTTP 400 (\"Bad Request\") is returned.")] = None,
        count: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="When specified, this indicates the maximum quantity of items the client would like returned in the response.  When omitted, 25 is assumed.  When the value contains a non-digit or is exactly \"0\", HTTP 400 (\"Bad Request\") is returned.  When the value is greater than the allowed range [1,25], the maximum allowed value is used instead. The \"Count\" field in the response will confirm the actual value that was used.")] = None,
        include_times: Annotated[Optional[StrictBool], Field(description="When set to \"true\", this indicates that the time component of the \"MatchCompletedDate\" field should be populated.  Otherwise, when set to \"false\" or when omitted, the time component will be set to \"00:00:00\".  When the value contains a non-boolean, HTTP 400 (\"Bad Request\") is returned.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Halo 5 - Player Match History

        <p>Retrieves a list of Matches that the Player has participated in and which have completed processing. If the Player is currently in a match, it is not returned in this API.</p> <p>This endpoint will include games played on Local Servers with the Custom Local Game Mode for games that occurred or after December 22, 2017.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>February 1, 2019:</strong></p>     <ul>         <li>Enabled support for viewing the time component of the \"MatchCompletedDate\" via the \"{include-times}\" Request Parameter.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>December 22, 2017:</strong></p>     <ul>         <li>Added support for the Custom Local Game mode.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Renamed Endpoint from \"Matches for Player\" to \"Halo 5 - Player Match History\".</li>         <li>Removed \"{title}\" Request Parameter.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>April 20, 2016:</strong></p>     <ul>         <li>Clarified documentation for the \"MapVariant\" and \"GameVariant\" fields.</li>         <li>Corrected \"OwnerType\" values for the \"MapVariant\" and \"GameVariant\" fields.</li>     </ul> </div> 

        :param player: The Player's Gamertag. (required)
        :type player: str
        :param modes: Indicates what Game Mode(s) the client is interested in getting Matches for (arena, campaign, custom, customlocal, or warzone).  When the parameter is omitted or empty, Matches from all modes are returned. When a client would like to receive Matches spanning multiple Modes, separate the Modes with a comma (e.g. \"arena,custom\"). There is no significance to the order the Modes are specified in this parameter.  When an invalid Mode is specified, HTTP 400 (\"Bad Request\") is returned.  When a valid Mode is specified more than once, HTTP 400 (\"Bad Request\") is returned.
        :type modes: str
        :param start: When specified, this indicates the starting index (0-based) for which the batch of results will begin at. For example, \"start=0\" indicates that the first qualifying result will be returned, no items are 'skipped'. Passing \"start=10\" indicates that the result will begin with the 11th item, the first 10 will be 'skipped'.  When omitted, zero is assumed.  When the value contains a non-digit, HTTP 400 (\"Bad Request\") is returned.
        :type start: float
        :param count: When specified, this indicates the maximum quantity of items the client would like returned in the response.  When omitted, 25 is assumed.  When the value contains a non-digit or is exactly \"0\", HTTP 400 (\"Bad Request\") is returned.  When the value is greater than the allowed range [1,25], the maximum allowed value is used instead. The \"Count\" field in the response will confirm the actual value that was used.
        :type count: float
        :param include_times: When set to \"true\", this indicates that the time component of the \"MatchCompletedDate\" field should be populated.  Otherwise, when set to \"false\" or when omitted, the time component will be set to \"00:00:00\".  When the value contains a non-boolean, HTTP 400 (\"Bad Request\") is returned.
        :type include_times: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_player_match_history_serialize(
            player=player,
            modes=modes,
            start=start,
            count=count,
            include_times=include_times,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '400': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _halo5_player_match_history_serialize(
        self,
        player,
        modes,
        start,
        count,
        include_times,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if player is not None:
            _path_params['player'] = player
        # process the query parameters
        if modes is not None:
            
            _query_params.append(('modes', modes))
            
        if start is not None:
            
            _query_params.append(('start', start))
            
        if count is not None:
            
            _query_params.append(('count', count))
            
        if include_times is not None:
            
            _query_params.append(('include-times', include_times))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/h5/players/{player}/matches',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def halo5_player_service_records_arena(
        self,
        players: Annotated[StrictStr, Field(description="A comma-separated list of Gamertags. Up to 32 Gamertags may be specified.")],
        season_id: Annotated[Optional[StrictStr], Field(description="When specified, this indicates the Season to request the Arena Playlist Stats for. If this is not specified, the default is the current Season. Seasons are available via the Metadata API. Social (Unranked) Arena Playlist Stats can be retrieved by specifying \"NonSeasonal\".")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Halo 5 - Player Service Records - Arena

        <p>Retrieves Service Records for the Arena Game Mode for one or more players. A Service Record contains a player's lifetime statistics in the Game Mode.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>June 29, 2018:</strong></p>     <ul>         <li>Added support for Social (Unranked) Playlists.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>December 22, 2017:</strong></p>     <ul>         <li>Added Game Mode clarifications to the Endpoint description.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Renamed Endpoint from \"Service Record: Arena\" to \"Halo 5 - Player Service Records - Arena\".</li>         <li>Removed \"{title}\" Request Parameter.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>April 20, 2016:</strong></p>     <ul>         <li>Added documentation for the \"CsrPercentile\" field.</li>     </ul> </div> 

        :param players: A comma-separated list of Gamertags. Up to 32 Gamertags may be specified. (required)
        :type players: str
        :param season_id: When specified, this indicates the Season to request the Arena Playlist Stats for. If this is not specified, the default is the current Season. Seasons are available via the Metadata API. Social (Unranked) Arena Playlist Stats can be retrieved by specifying \"NonSeasonal\".
        :type season_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_player_service_records_arena_serialize(
            players=players,
            season_id=season_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def halo5_player_service_records_arena_with_http_info(
        self,
        players: Annotated[StrictStr, Field(description="A comma-separated list of Gamertags. Up to 32 Gamertags may be specified.")],
        season_id: Annotated[Optional[StrictStr], Field(description="When specified, this indicates the Season to request the Arena Playlist Stats for. If this is not specified, the default is the current Season. Seasons are available via the Metadata API. Social (Unranked) Arena Playlist Stats can be retrieved by specifying \"NonSeasonal\".")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Halo 5 - Player Service Records - Arena

        <p>Retrieves Service Records for the Arena Game Mode for one or more players. A Service Record contains a player's lifetime statistics in the Game Mode.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>June 29, 2018:</strong></p>     <ul>         <li>Added support for Social (Unranked) Playlists.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>December 22, 2017:</strong></p>     <ul>         <li>Added Game Mode clarifications to the Endpoint description.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Renamed Endpoint from \"Service Record: Arena\" to \"Halo 5 - Player Service Records - Arena\".</li>         <li>Removed \"{title}\" Request Parameter.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>April 20, 2016:</strong></p>     <ul>         <li>Added documentation for the \"CsrPercentile\" field.</li>     </ul> </div> 

        :param players: A comma-separated list of Gamertags. Up to 32 Gamertags may be specified. (required)
        :type players: str
        :param season_id: When specified, this indicates the Season to request the Arena Playlist Stats for. If this is not specified, the default is the current Season. Seasons are available via the Metadata API. Social (Unranked) Arena Playlist Stats can be retrieved by specifying \"NonSeasonal\".
        :type season_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_player_service_records_arena_serialize(
            players=players,
            season_id=season_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def halo5_player_service_records_arena_without_preload_content(
        self,
        players: Annotated[StrictStr, Field(description="A comma-separated list of Gamertags. Up to 32 Gamertags may be specified.")],
        season_id: Annotated[Optional[StrictStr], Field(description="When specified, this indicates the Season to request the Arena Playlist Stats for. If this is not specified, the default is the current Season. Seasons are available via the Metadata API. Social (Unranked) Arena Playlist Stats can be retrieved by specifying \"NonSeasonal\".")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Halo 5 - Player Service Records - Arena

        <p>Retrieves Service Records for the Arena Game Mode for one or more players. A Service Record contains a player's lifetime statistics in the Game Mode.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>June 29, 2018:</strong></p>     <ul>         <li>Added support for Social (Unranked) Playlists.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>December 22, 2017:</strong></p>     <ul>         <li>Added Game Mode clarifications to the Endpoint description.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Renamed Endpoint from \"Service Record: Arena\" to \"Halo 5 - Player Service Records - Arena\".</li>         <li>Removed \"{title}\" Request Parameter.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>April 20, 2016:</strong></p>     <ul>         <li>Added documentation for the \"CsrPercentile\" field.</li>     </ul> </div> 

        :param players: A comma-separated list of Gamertags. Up to 32 Gamertags may be specified. (required)
        :type players: str
        :param season_id: When specified, this indicates the Season to request the Arena Playlist Stats for. If this is not specified, the default is the current Season. Seasons are available via the Metadata API. Social (Unranked) Arena Playlist Stats can be retrieved by specifying \"NonSeasonal\".
        :type season_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_player_service_records_arena_serialize(
            players=players,
            season_id=season_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _halo5_player_service_records_arena_serialize(
        self,
        players,
        season_id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if players is not None:
            
            _query_params.append(('players', players))
            
        if season_id is not None:
            
            _query_params.append(('seasonId', season_id))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/h5/servicerecords/arena',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def halo5_player_service_records_campaign(
        self,
        players: Annotated[StrictStr, Field(description="A comma-separated list of Gamertags. Up to 32 Gamertags may be specified.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Halo 5 - Player Service Records - Campaign

        <p>Retrieves Service Records for the Campaign Game Mode for one or more players. A Service Record contains a player's lifetime statistics in the Game Mode.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>December 22, 2017:</strong></p>     <ul>         <li>Added Game Mode clarifications to the Endpoint description.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Renamed Endpoint from \"Service Record: Campaign\" to \"Halo 5 - Player Service Records - Campaign\".</li>         <li>Removed \"{title}\" Request Parameter.</li>     </ul> </div> 

        :param players: A comma-separated list of Gamertags. Up to 32 Gamertags may be specified. (required)
        :type players: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_player_service_records_campaign_serialize(
            players=players,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def halo5_player_service_records_campaign_with_http_info(
        self,
        players: Annotated[StrictStr, Field(description="A comma-separated list of Gamertags. Up to 32 Gamertags may be specified.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Halo 5 - Player Service Records - Campaign

        <p>Retrieves Service Records for the Campaign Game Mode for one or more players. A Service Record contains a player's lifetime statistics in the Game Mode.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>December 22, 2017:</strong></p>     <ul>         <li>Added Game Mode clarifications to the Endpoint description.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Renamed Endpoint from \"Service Record: Campaign\" to \"Halo 5 - Player Service Records - Campaign\".</li>         <li>Removed \"{title}\" Request Parameter.</li>     </ul> </div> 

        :param players: A comma-separated list of Gamertags. Up to 32 Gamertags may be specified. (required)
        :type players: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_player_service_records_campaign_serialize(
            players=players,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def halo5_player_service_records_campaign_without_preload_content(
        self,
        players: Annotated[StrictStr, Field(description="A comma-separated list of Gamertags. Up to 32 Gamertags may be specified.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Halo 5 - Player Service Records - Campaign

        <p>Retrieves Service Records for the Campaign Game Mode for one or more players. A Service Record contains a player's lifetime statistics in the Game Mode.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>December 22, 2017:</strong></p>     <ul>         <li>Added Game Mode clarifications to the Endpoint description.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Renamed Endpoint from \"Service Record: Campaign\" to \"Halo 5 - Player Service Records - Campaign\".</li>         <li>Removed \"{title}\" Request Parameter.</li>     </ul> </div> 

        :param players: A comma-separated list of Gamertags. Up to 32 Gamertags may be specified. (required)
        :type players: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_player_service_records_campaign_serialize(
            players=players,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _halo5_player_service_records_campaign_serialize(
        self,
        players,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if players is not None:
            
            _query_params.append(('players', players))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/h5/servicerecords/campaign',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def halo5_player_service_records_custom(
        self,
        players: Annotated[StrictStr, Field(description="A comma-separated list of Gamertags. Up to 32 Gamertags may be specified.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Halo 5 - Player Service Records - Custom

        <p>Retrieves Service Records for the Custom Game Mode for one or more players. A Service Record contains a player's lifetime statistics in the Game Mode. Games with the Custom Game Mode are played on Xbox Live Servers. For games played on Local Servers, use the \"Halo 5 - Player Service Records - Custom Local\" Endpoint.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>December 22, 2017:</strong></p>     <ul>         <li>Added Game Mode clarifications to the Endpoint description.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Renamed Endpoint from \"Service Record: Custom\" to \"Halo 5 - Player Service Records - Custom\".</li>         <li>Removed \"{title}\" Request Parameter.</li>     </ul> </div> 

        :param players: A comma-separated list of Gamertags. Up to 32 Gamertags may be specified. (required)
        :type players: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_player_service_records_custom_serialize(
            players=players,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def halo5_player_service_records_custom_with_http_info(
        self,
        players: Annotated[StrictStr, Field(description="A comma-separated list of Gamertags. Up to 32 Gamertags may be specified.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Halo 5 - Player Service Records - Custom

        <p>Retrieves Service Records for the Custom Game Mode for one or more players. A Service Record contains a player's lifetime statistics in the Game Mode. Games with the Custom Game Mode are played on Xbox Live Servers. For games played on Local Servers, use the \"Halo 5 - Player Service Records - Custom Local\" Endpoint.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>December 22, 2017:</strong></p>     <ul>         <li>Added Game Mode clarifications to the Endpoint description.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Renamed Endpoint from \"Service Record: Custom\" to \"Halo 5 - Player Service Records - Custom\".</li>         <li>Removed \"{title}\" Request Parameter.</li>     </ul> </div> 

        :param players: A comma-separated list of Gamertags. Up to 32 Gamertags may be specified. (required)
        :type players: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_player_service_records_custom_serialize(
            players=players,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def halo5_player_service_records_custom_without_preload_content(
        self,
        players: Annotated[StrictStr, Field(description="A comma-separated list of Gamertags. Up to 32 Gamertags may be specified.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Halo 5 - Player Service Records - Custom

        <p>Retrieves Service Records for the Custom Game Mode for one or more players. A Service Record contains a player's lifetime statistics in the Game Mode. Games with the Custom Game Mode are played on Xbox Live Servers. For games played on Local Servers, use the \"Halo 5 - Player Service Records - Custom Local\" Endpoint.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>December 22, 2017:</strong></p>     <ul>         <li>Added Game Mode clarifications to the Endpoint description.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Renamed Endpoint from \"Service Record: Custom\" to \"Halo 5 - Player Service Records - Custom\".</li>         <li>Removed \"{title}\" Request Parameter.</li>     </ul> </div> 

        :param players: A comma-separated list of Gamertags. Up to 32 Gamertags may be specified. (required)
        :type players: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_player_service_records_custom_serialize(
            players=players,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _halo5_player_service_records_custom_serialize(
        self,
        players,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if players is not None:
            
            _query_params.append(('players', players))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/h5/servicerecords/custom',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def halo5_player_service_records_custom_local(
        self,
        players: Annotated[StrictStr, Field(description="A comma-separated list of Gamertags. Up to 32 Gamertags may be specified.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Halo 5 - Player Service Records - Custom Local

        <p>Retrieves Service Records for the Custom Local Game Mode for one or more players. A Service Record contains a player's lifetime statistics in the Game Mode. Games with the Custom Local Game Mode are played on Local Servers. For games played on Xbox Live Servers, use the \"Halo 5 - Player Service Records - Custom\" Endpoint. A player's Custom Local Service Record summarizes games played on or after December 22, 2017.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>December 22, 2017:</strong></p>     <ul>         <li>Added Endpoint.</li>     </ul> </div> 

        :param players: A comma-separated list of Gamertags. Up to 32 Gamertags may be specified. (required)
        :type players: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_player_service_records_custom_local_serialize(
            players=players,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def halo5_player_service_records_custom_local_with_http_info(
        self,
        players: Annotated[StrictStr, Field(description="A comma-separated list of Gamertags. Up to 32 Gamertags may be specified.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Halo 5 - Player Service Records - Custom Local

        <p>Retrieves Service Records for the Custom Local Game Mode for one or more players. A Service Record contains a player's lifetime statistics in the Game Mode. Games with the Custom Local Game Mode are played on Local Servers. For games played on Xbox Live Servers, use the \"Halo 5 - Player Service Records - Custom\" Endpoint. A player's Custom Local Service Record summarizes games played on or after December 22, 2017.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>December 22, 2017:</strong></p>     <ul>         <li>Added Endpoint.</li>     </ul> </div> 

        :param players: A comma-separated list of Gamertags. Up to 32 Gamertags may be specified. (required)
        :type players: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_player_service_records_custom_local_serialize(
            players=players,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def halo5_player_service_records_custom_local_without_preload_content(
        self,
        players: Annotated[StrictStr, Field(description="A comma-separated list of Gamertags. Up to 32 Gamertags may be specified.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Halo 5 - Player Service Records - Custom Local

        <p>Retrieves Service Records for the Custom Local Game Mode for one or more players. A Service Record contains a player's lifetime statistics in the Game Mode. Games with the Custom Local Game Mode are played on Local Servers. For games played on Xbox Live Servers, use the \"Halo 5 - Player Service Records - Custom\" Endpoint. A player's Custom Local Service Record summarizes games played on or after December 22, 2017.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>December 22, 2017:</strong></p>     <ul>         <li>Added Endpoint.</li>     </ul> </div> 

        :param players: A comma-separated list of Gamertags. Up to 32 Gamertags may be specified. (required)
        :type players: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_player_service_records_custom_local_serialize(
            players=players,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _halo5_player_service_records_custom_local_serialize(
        self,
        players,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if players is not None:
            
            _query_params.append(('players', players))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/h5/servicerecords/customlocal',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def halo5_player_service_records_warzone(
        self,
        players: Annotated[StrictStr, Field(description="A comma-separated list of Gamertags. Up to 32 Gamertags may be specified.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Halo 5 - Player Service Records - Warzone

        <p>Retrieves Service Records for the Warzone Game Mode for one or more players. A Service Record contains a player's lifetime statistics in the Game Mode.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>December 22, 2017:</strong></p>     <ul>         <li>Added Game Mode clarifications to the Endpoint description.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Renamed Endpoint from \"Service Record: Warzone\" to \"Halo 5 - Player Service Records - Warzone\".</li>         <li>Removed \"{title}\" Request Parameter.</li>     </ul> </div> 

        :param players: A comma-separated list of Gamertags. Up to 32 Gamertags may be specified. (required)
        :type players: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_player_service_records_warzone_serialize(
            players=players,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def halo5_player_service_records_warzone_with_http_info(
        self,
        players: Annotated[StrictStr, Field(description="A comma-separated list of Gamertags. Up to 32 Gamertags may be specified.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Halo 5 - Player Service Records - Warzone

        <p>Retrieves Service Records for the Warzone Game Mode for one or more players. A Service Record contains a player's lifetime statistics in the Game Mode.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>December 22, 2017:</strong></p>     <ul>         <li>Added Game Mode clarifications to the Endpoint description.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Renamed Endpoint from \"Service Record: Warzone\" to \"Halo 5 - Player Service Records - Warzone\".</li>         <li>Removed \"{title}\" Request Parameter.</li>     </ul> </div> 

        :param players: A comma-separated list of Gamertags. Up to 32 Gamertags may be specified. (required)
        :type players: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_player_service_records_warzone_serialize(
            players=players,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def halo5_player_service_records_warzone_without_preload_content(
        self,
        players: Annotated[StrictStr, Field(description="A comma-separated list of Gamertags. Up to 32 Gamertags may be specified.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Halo 5 - Player Service Records - Warzone

        <p>Retrieves Service Records for the Warzone Game Mode for one or more players. A Service Record contains a player's lifetime statistics in the Game Mode.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>December 22, 2017:</strong></p>     <ul>         <li>Added Game Mode clarifications to the Endpoint description.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Renamed Endpoint from \"Service Record: Warzone\" to \"Halo 5 - Player Service Records - Warzone\".</li>         <li>Removed \"{title}\" Request Parameter.</li>     </ul> </div> 

        :param players: A comma-separated list of Gamertags. Up to 32 Gamertags may be specified. (required)
        :type players: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo5_player_service_records_warzone_serialize(
            players=players,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _halo5_player_service_records_warzone_serialize(
        self,
        players,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if players is not None:
            
            _query_params.append(('players', players))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/h5/servicerecords/warzone',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def halo_wars2_leaderboard_player_csr(
        self,
        season_id: Annotated[StrictStr, Field(description="The ID for the Season.")],
        playlist_id: Annotated[StrictStr, Field(description="The ID for the Playlist.")],
        count: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="When specified, this indicates the maximum quantity of items the client would like returned in the response.  When omitted, 200 is assumed.  When the value contains a non-digit or is exactly \"0\", HTTP 400 (\"Bad Request\") is returned.  When the value is greater than the allowed range [1,250], the maximum allowed value is used instead.  The \"Count\" field in the response will confirm the actual value that was used.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Halo Wars 2 - Leaderboard - Player CSR

        <p>Retrieves the Leaderboard for Player CSRs. The Leaderboard consists of the top Players with a CSR of 1800 or above for a given Playlist in a Season.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>March 6, 2018:</strong></p>     <ul>         <li>Fixed documentation typos for the names of the \"Player\" and \"Gamertag\" properties.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>July 31, 2017:</strong></p>     <ul>         <li>Clarified documentation for which players are included in the leaderboard.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>July 14, 2017:</strong></p>     <ul>         <li>Added Endpoint.</li>     </ul> </div> 

        :param season_id: The ID for the Season. (required)
        :type season_id: str
        :param playlist_id: The ID for the Playlist. (required)
        :type playlist_id: str
        :param count: When specified, this indicates the maximum quantity of items the client would like returned in the response.  When omitted, 200 is assumed.  When the value contains a non-digit or is exactly \"0\", HTTP 400 (\"Bad Request\") is returned.  When the value is greater than the allowed range [1,250], the maximum allowed value is used instead.  The \"Count\" field in the response will confirm the actual value that was used.
        :type count: float
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo_wars2_leaderboard_player_csr_serialize(
            season_id=season_id,
            playlist_id=playlist_id,
            count=count,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def halo_wars2_leaderboard_player_csr_with_http_info(
        self,
        season_id: Annotated[StrictStr, Field(description="The ID for the Season.")],
        playlist_id: Annotated[StrictStr, Field(description="The ID for the Playlist.")],
        count: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="When specified, this indicates the maximum quantity of items the client would like returned in the response.  When omitted, 200 is assumed.  When the value contains a non-digit or is exactly \"0\", HTTP 400 (\"Bad Request\") is returned.  When the value is greater than the allowed range [1,250], the maximum allowed value is used instead.  The \"Count\" field in the response will confirm the actual value that was used.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Halo Wars 2 - Leaderboard - Player CSR

        <p>Retrieves the Leaderboard for Player CSRs. The Leaderboard consists of the top Players with a CSR of 1800 or above for a given Playlist in a Season.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>March 6, 2018:</strong></p>     <ul>         <li>Fixed documentation typos for the names of the \"Player\" and \"Gamertag\" properties.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>July 31, 2017:</strong></p>     <ul>         <li>Clarified documentation for which players are included in the leaderboard.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>July 14, 2017:</strong></p>     <ul>         <li>Added Endpoint.</li>     </ul> </div> 

        :param season_id: The ID for the Season. (required)
        :type season_id: str
        :param playlist_id: The ID for the Playlist. (required)
        :type playlist_id: str
        :param count: When specified, this indicates the maximum quantity of items the client would like returned in the response.  When omitted, 200 is assumed.  When the value contains a non-digit or is exactly \"0\", HTTP 400 (\"Bad Request\") is returned.  When the value is greater than the allowed range [1,250], the maximum allowed value is used instead.  The \"Count\" field in the response will confirm the actual value that was used.
        :type count: float
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo_wars2_leaderboard_player_csr_serialize(
            season_id=season_id,
            playlist_id=playlist_id,
            count=count,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def halo_wars2_leaderboard_player_csr_without_preload_content(
        self,
        season_id: Annotated[StrictStr, Field(description="The ID for the Season.")],
        playlist_id: Annotated[StrictStr, Field(description="The ID for the Playlist.")],
        count: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="When specified, this indicates the maximum quantity of items the client would like returned in the response.  When omitted, 200 is assumed.  When the value contains a non-digit or is exactly \"0\", HTTP 400 (\"Bad Request\") is returned.  When the value is greater than the allowed range [1,250], the maximum allowed value is used instead.  The \"Count\" field in the response will confirm the actual value that was used.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Halo Wars 2 - Leaderboard - Player CSR

        <p>Retrieves the Leaderboard for Player CSRs. The Leaderboard consists of the top Players with a CSR of 1800 or above for a given Playlist in a Season.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>March 6, 2018:</strong></p>     <ul>         <li>Fixed documentation typos for the names of the \"Player\" and \"Gamertag\" properties.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>July 31, 2017:</strong></p>     <ul>         <li>Clarified documentation for which players are included in the leaderboard.</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>July 14, 2017:</strong></p>     <ul>         <li>Added Endpoint.</li>     </ul> </div> 

        :param season_id: The ID for the Season. (required)
        :type season_id: str
        :param playlist_id: The ID for the Playlist. (required)
        :type playlist_id: str
        :param count: When specified, this indicates the maximum quantity of items the client would like returned in the response.  When omitted, 200 is assumed.  When the value contains a non-digit or is exactly \"0\", HTTP 400 (\"Bad Request\") is returned.  When the value is greater than the allowed range [1,250], the maximum allowed value is used instead.  The \"Count\" field in the response will confirm the actual value that was used.
        :type count: float
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo_wars2_leaderboard_player_csr_serialize(
            season_id=season_id,
            playlist_id=playlist_id,
            count=count,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _halo_wars2_leaderboard_player_csr_serialize(
        self,
        season_id,
        playlist_id,
        count,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if season_id is not None:
            _path_params['seasonId'] = season_id
        if playlist_id is not None:
            _path_params['playlistId'] = playlist_id
        # process the query parameters
        if count is not None:
            
            _query_params.append(('count', count))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/hw2/player-leaderboards/csr/{seasonId}/{playlistId}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def halo_wars2_match_events(
        self,
        match_id: Annotated[StrictStr, Field(description="An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo Wars 2 - Player Match History\" Endpoint.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Halo Wars 2 - Match Events

        <p>Retrieves a set of Events related to the Match specified. Events are only available once the Match has completed. Events are not available for Matches played with the Custom Match Type.</p> <p>The set of Events may grow over time as data becomes available.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>September 5, 2017:</strong></p>     <ul>         <li>Documented new game mode \"Terminus Firefight\".</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Added Endpoint.</li>     </ul> </div> 

        :param match_id: An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo Wars 2 - Player Match History\" Endpoint. (required)
        :type match_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo_wars2_match_events_serialize(
            match_id=match_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def halo_wars2_match_events_with_http_info(
        self,
        match_id: Annotated[StrictStr, Field(description="An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo Wars 2 - Player Match History\" Endpoint.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Halo Wars 2 - Match Events

        <p>Retrieves a set of Events related to the Match specified. Events are only available once the Match has completed. Events are not available for Matches played with the Custom Match Type.</p> <p>The set of Events may grow over time as data becomes available.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>September 5, 2017:</strong></p>     <ul>         <li>Documented new game mode \"Terminus Firefight\".</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Added Endpoint.</li>     </ul> </div> 

        :param match_id: An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo Wars 2 - Player Match History\" Endpoint. (required)
        :type match_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo_wars2_match_events_serialize(
            match_id=match_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def halo_wars2_match_events_without_preload_content(
        self,
        match_id: Annotated[StrictStr, Field(description="An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo Wars 2 - Player Match History\" Endpoint.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Halo Wars 2 - Match Events

        <p>Retrieves a set of Events related to the Match specified. Events are only available once the Match has completed. Events are not available for Matches played with the Custom Match Type.</p> <p>The set of Events may grow over time as data becomes available.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>September 5, 2017:</strong></p>     <ul>         <li>Documented new game mode \"Terminus Firefight\".</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Added Endpoint.</li>     </ul> </div> 

        :param match_id: An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo Wars 2 - Player Match History\" Endpoint. (required)
        :type match_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo_wars2_match_events_serialize(
            match_id=match_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _halo_wars2_match_events_serialize(
        self,
        match_id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if match_id is not None:
            _path_params['matchId'] = match_id
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/hw2/matches/{matchId}/events',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def halo_wars2_match_result(
        self,
        match_id: Annotated[StrictStr, Field(description="An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo Wars 2 - Player Match History\" Endpoint.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Halo Wars 2 - Match Result

        <p>Retrieves detailed statistics for a Match. Matches can be retrieved before they are completed; however, the data for in-progress Matches is only updated every few minutes.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>September 5, 2017:</strong></p>     <ul>         <li>Documented new game mode \"Terminus Firefight\".</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Added Endpoint.</li>     </ul> </div> 

        :param match_id: An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo Wars 2 - Player Match History\" Endpoint. (required)
        :type match_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo_wars2_match_result_serialize(
            match_id=match_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def halo_wars2_match_result_with_http_info(
        self,
        match_id: Annotated[StrictStr, Field(description="An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo Wars 2 - Player Match History\" Endpoint.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Halo Wars 2 - Match Result

        <p>Retrieves detailed statistics for a Match. Matches can be retrieved before they are completed; however, the data for in-progress Matches is only updated every few minutes.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>September 5, 2017:</strong></p>     <ul>         <li>Documented new game mode \"Terminus Firefight\".</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Added Endpoint.</li>     </ul> </div> 

        :param match_id: An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo Wars 2 - Player Match History\" Endpoint. (required)
        :type match_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo_wars2_match_result_serialize(
            match_id=match_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def halo_wars2_match_result_without_preload_content(
        self,
        match_id: Annotated[StrictStr, Field(description="An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo Wars 2 - Player Match History\" Endpoint.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Halo Wars 2 - Match Result

        <p>Retrieves detailed statistics for a Match. Matches can be retrieved before they are completed; however, the data for in-progress Matches is only updated every few minutes.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>September 5, 2017:</strong></p>     <ul>         <li>Documented new game mode \"Terminus Firefight\".</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Added Endpoint.</li>     </ul> </div> 

        :param match_id: An ID that uniquely identifies a Match. Match IDs can be retrieved from the \"Halo Wars 2 - Player Match History\" Endpoint. (required)
        :type match_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo_wars2_match_result_serialize(
            match_id=match_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _halo_wars2_match_result_serialize(
        self,
        match_id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if match_id is not None:
            _path_params['matchId'] = match_id
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/hw2/matches/{matchId}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def halo_wars2_player_campaign_progress(
        self,
        player: Annotated[StrictStr, Field(description="The Player's Gamertag.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Halo Wars 2 - Player Campaign Progress

        <p>Retrieves the Campaign Progress state for a Player.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Added Endpoint.</li>     </ul> </div> 

        :param player: The Player's Gamertag. (required)
        :type player: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo_wars2_player_campaign_progress_serialize(
            player=player,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def halo_wars2_player_campaign_progress_with_http_info(
        self,
        player: Annotated[StrictStr, Field(description="The Player's Gamertag.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Halo Wars 2 - Player Campaign Progress

        <p>Retrieves the Campaign Progress state for a Player.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Added Endpoint.</li>     </ul> </div> 

        :param player: The Player's Gamertag. (required)
        :type player: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo_wars2_player_campaign_progress_serialize(
            player=player,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def halo_wars2_player_campaign_progress_without_preload_content(
        self,
        player: Annotated[StrictStr, Field(description="The Player's Gamertag.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Halo Wars 2 - Player Campaign Progress

        <p>Retrieves the Campaign Progress state for a Player.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Added Endpoint.</li>     </ul> </div> 

        :param player: The Player's Gamertag. (required)
        :type player: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo_wars2_player_campaign_progress_serialize(
            player=player,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _halo_wars2_player_campaign_progress_serialize(
        self,
        player,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if player is not None:
            _path_params['player'] = player
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/hw2/players/{player}/campaign-progress',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def halo_wars2_player_match_history(
        self,
        player: Annotated[StrictStr, Field(description="The Player's Gamertag.")],
        match_type: Annotated[Optional[StrictStr], Field(description="Indicates what Match Type the client is interested in getting Matches for (\"custom\" or \"matchmaking\").  When the parameter is omitted or empty, Matches from all Match Types are returned.  When an invalid Mode is specified, HTTP 400 (\"Bad Request\") is returned.")] = None,
        start: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="When specified, this indicates the starting index (0-based) for which the batch of results will begin at. For example, \"start=0\" indicates that the first qualifying result will be returned, no items are 'skipped'. Passing \"start=10\" indicates that the result will begin with the 11th item, the first 10 will be 'skipped'.  When omitted, zero is assumed.  When the value contains a non-digit, HTTP 400 (\"Bad Request\") is returned.")] = None,
        count: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="When specified, this indicates the maximum quantity of items the client would like returned in the response.  When omitted, 25 is assumed.  When the value contains a non-digit or is exactly \"0\", HTTP 400 (\"Bad Request\") is returned.  When the value is greater than the allowed range [1,25], the maximum allowed value is used instead. The \"Count\" field in the response will confirm the actual value that was used.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Halo Wars 2 - Player Match History

        <p>Retrieves a list of Matches that the Player has participated in. If the Player is currently in a Match, it is not returned in this API.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>September 5, 2017:</strong></p>     <ul>         <li>Documented new game mode \"Terminus Firefight\".</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Added Endpoint.</li>     </ul> </div> 

        :param player: The Player's Gamertag. (required)
        :type player: str
        :param match_type: Indicates what Match Type the client is interested in getting Matches for (\"custom\" or \"matchmaking\").  When the parameter is omitted or empty, Matches from all Match Types are returned.  When an invalid Mode is specified, HTTP 400 (\"Bad Request\") is returned.
        :type match_type: str
        :param start: When specified, this indicates the starting index (0-based) for which the batch of results will begin at. For example, \"start=0\" indicates that the first qualifying result will be returned, no items are 'skipped'. Passing \"start=10\" indicates that the result will begin with the 11th item, the first 10 will be 'skipped'.  When omitted, zero is assumed.  When the value contains a non-digit, HTTP 400 (\"Bad Request\") is returned.
        :type start: float
        :param count: When specified, this indicates the maximum quantity of items the client would like returned in the response.  When omitted, 25 is assumed.  When the value contains a non-digit or is exactly \"0\", HTTP 400 (\"Bad Request\") is returned.  When the value is greater than the allowed range [1,25], the maximum allowed value is used instead. The \"Count\" field in the response will confirm the actual value that was used.
        :type count: float
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo_wars2_player_match_history_serialize(
            player=player,
            match_type=match_type,
            start=start,
            count=count,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def halo_wars2_player_match_history_with_http_info(
        self,
        player: Annotated[StrictStr, Field(description="The Player's Gamertag.")],
        match_type: Annotated[Optional[StrictStr], Field(description="Indicates what Match Type the client is interested in getting Matches for (\"custom\" or \"matchmaking\").  When the parameter is omitted or empty, Matches from all Match Types are returned.  When an invalid Mode is specified, HTTP 400 (\"Bad Request\") is returned.")] = None,
        start: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="When specified, this indicates the starting index (0-based) for which the batch of results will begin at. For example, \"start=0\" indicates that the first qualifying result will be returned, no items are 'skipped'. Passing \"start=10\" indicates that the result will begin with the 11th item, the first 10 will be 'skipped'.  When omitted, zero is assumed.  When the value contains a non-digit, HTTP 400 (\"Bad Request\") is returned.")] = None,
        count: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="When specified, this indicates the maximum quantity of items the client would like returned in the response.  When omitted, 25 is assumed.  When the value contains a non-digit or is exactly \"0\", HTTP 400 (\"Bad Request\") is returned.  When the value is greater than the allowed range [1,25], the maximum allowed value is used instead. The \"Count\" field in the response will confirm the actual value that was used.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Halo Wars 2 - Player Match History

        <p>Retrieves a list of Matches that the Player has participated in. If the Player is currently in a Match, it is not returned in this API.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>September 5, 2017:</strong></p>     <ul>         <li>Documented new game mode \"Terminus Firefight\".</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Added Endpoint.</li>     </ul> </div> 

        :param player: The Player's Gamertag. (required)
        :type player: str
        :param match_type: Indicates what Match Type the client is interested in getting Matches for (\"custom\" or \"matchmaking\").  When the parameter is omitted or empty, Matches from all Match Types are returned.  When an invalid Mode is specified, HTTP 400 (\"Bad Request\") is returned.
        :type match_type: str
        :param start: When specified, this indicates the starting index (0-based) for which the batch of results will begin at. For example, \"start=0\" indicates that the first qualifying result will be returned, no items are 'skipped'. Passing \"start=10\" indicates that the result will begin with the 11th item, the first 10 will be 'skipped'.  When omitted, zero is assumed.  When the value contains a non-digit, HTTP 400 (\"Bad Request\") is returned.
        :type start: float
        :param count: When specified, this indicates the maximum quantity of items the client would like returned in the response.  When omitted, 25 is assumed.  When the value contains a non-digit or is exactly \"0\", HTTP 400 (\"Bad Request\") is returned.  When the value is greater than the allowed range [1,25], the maximum allowed value is used instead. The \"Count\" field in the response will confirm the actual value that was used.
        :type count: float
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo_wars2_player_match_history_serialize(
            player=player,
            match_type=match_type,
            start=start,
            count=count,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def halo_wars2_player_match_history_without_preload_content(
        self,
        player: Annotated[StrictStr, Field(description="The Player's Gamertag.")],
        match_type: Annotated[Optional[StrictStr], Field(description="Indicates what Match Type the client is interested in getting Matches for (\"custom\" or \"matchmaking\").  When the parameter is omitted or empty, Matches from all Match Types are returned.  When an invalid Mode is specified, HTTP 400 (\"Bad Request\") is returned.")] = None,
        start: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="When specified, this indicates the starting index (0-based) for which the batch of results will begin at. For example, \"start=0\" indicates that the first qualifying result will be returned, no items are 'skipped'. Passing \"start=10\" indicates that the result will begin with the 11th item, the first 10 will be 'skipped'.  When omitted, zero is assumed.  When the value contains a non-digit, HTTP 400 (\"Bad Request\") is returned.")] = None,
        count: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="When specified, this indicates the maximum quantity of items the client would like returned in the response.  When omitted, 25 is assumed.  When the value contains a non-digit or is exactly \"0\", HTTP 400 (\"Bad Request\") is returned.  When the value is greater than the allowed range [1,25], the maximum allowed value is used instead. The \"Count\" field in the response will confirm the actual value that was used.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Halo Wars 2 - Player Match History

        <p>Retrieves a list of Matches that the Player has participated in. If the Player is currently in a Match, it is not returned in this API.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>September 5, 2017:</strong></p>     <ul>         <li>Documented new game mode \"Terminus Firefight\".</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Added Endpoint.</li>     </ul> </div> 

        :param player: The Player's Gamertag. (required)
        :type player: str
        :param match_type: Indicates what Match Type the client is interested in getting Matches for (\"custom\" or \"matchmaking\").  When the parameter is omitted or empty, Matches from all Match Types are returned.  When an invalid Mode is specified, HTTP 400 (\"Bad Request\") is returned.
        :type match_type: str
        :param start: When specified, this indicates the starting index (0-based) for which the batch of results will begin at. For example, \"start=0\" indicates that the first qualifying result will be returned, no items are 'skipped'. Passing \"start=10\" indicates that the result will begin with the 11th item, the first 10 will be 'skipped'.  When omitted, zero is assumed.  When the value contains a non-digit, HTTP 400 (\"Bad Request\") is returned.
        :type start: float
        :param count: When specified, this indicates the maximum quantity of items the client would like returned in the response.  When omitted, 25 is assumed.  When the value contains a non-digit or is exactly \"0\", HTTP 400 (\"Bad Request\") is returned.  When the value is greater than the allowed range [1,25], the maximum allowed value is used instead. The \"Count\" field in the response will confirm the actual value that was used.
        :type count: float
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo_wars2_player_match_history_serialize(
            player=player,
            match_type=match_type,
            start=start,
            count=count,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _halo_wars2_player_match_history_serialize(
        self,
        player,
        match_type,
        start,
        count,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if player is not None:
            _path_params['player'] = player
        # process the query parameters
        if match_type is not None:
            
            _query_params.append(('matchType', match_type))
            
        if start is not None:
            
            _query_params.append(('start', start))
            
        if count is not None:
            
            _query_params.append(('count', count))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/hw2/players/{player}/matches',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def halo_wars2_player_playlist_ratings(
        self,
        playlist_id: Annotated[StrictStr, Field(description="The ID of the Playlist to get Ratings for.")],
        players: Annotated[StrictStr, Field(description="A comma-separated list of Gamertags. Up to 6 Gamertags may be specified.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Halo Wars 2 - Player Playlist Ratings

        <p>Retrieves Playlist Ratings in the current season for one or more Players.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Added Endpoint.</li>     </ul> </div> 

        :param playlist_id: The ID of the Playlist to get Ratings for. (required)
        :type playlist_id: str
        :param players: A comma-separated list of Gamertags. Up to 6 Gamertags may be specified. (required)
        :type players: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo_wars2_player_playlist_ratings_serialize(
            playlist_id=playlist_id,
            players=players,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def halo_wars2_player_playlist_ratings_with_http_info(
        self,
        playlist_id: Annotated[StrictStr, Field(description="The ID of the Playlist to get Ratings for.")],
        players: Annotated[StrictStr, Field(description="A comma-separated list of Gamertags. Up to 6 Gamertags may be specified.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Halo Wars 2 - Player Playlist Ratings

        <p>Retrieves Playlist Ratings in the current season for one or more Players.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Added Endpoint.</li>     </ul> </div> 

        :param playlist_id: The ID of the Playlist to get Ratings for. (required)
        :type playlist_id: str
        :param players: A comma-separated list of Gamertags. Up to 6 Gamertags may be specified. (required)
        :type players: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo_wars2_player_playlist_ratings_serialize(
            playlist_id=playlist_id,
            players=players,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def halo_wars2_player_playlist_ratings_without_preload_content(
        self,
        playlist_id: Annotated[StrictStr, Field(description="The ID of the Playlist to get Ratings for.")],
        players: Annotated[StrictStr, Field(description="A comma-separated list of Gamertags. Up to 6 Gamertags may be specified.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Halo Wars 2 - Player Playlist Ratings

        <p>Retrieves Playlist Ratings in the current season for one or more Players.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Added Endpoint.</li>     </ul> </div> 

        :param playlist_id: The ID of the Playlist to get Ratings for. (required)
        :type playlist_id: str
        :param players: A comma-separated list of Gamertags. Up to 6 Gamertags may be specified. (required)
        :type players: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo_wars2_player_playlist_ratings_serialize(
            playlist_id=playlist_id,
            players=players,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _halo_wars2_player_playlist_ratings_serialize(
        self,
        playlist_id,
        players,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if playlist_id is not None:
            _path_params['playlistId'] = playlist_id
        # process the query parameters
        if players is not None:
            
            _query_params.append(('players', players))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/hw2/playlist/{playlistId}/rating',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def halo_wars2_player_season_stats_summary(
        self,
        player: Annotated[StrictStr, Field(description="The Player's Gamertag.")],
        season_id: Annotated[StrictStr, Field(description="A Season ID or \"current\" for the current Season. Seasons are available via the Metadata API.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Halo Wars 2 - Player Season Stats Summary

        <p>Retrieves high-level aggregations across a Season for a Player.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>September 5, 2017:</strong></p>     <ul>         <li>Added additional pivots of data: \"CustomModeStats\", \"SinglePlayerModeStats\", \"MultiplayerModeStats\", \"SocialModeStats\", and \"RankedModeStats\".</li>         <li>Added additional fields to the \"Summary\" contract: \"GameMode\" and \"HighestObjectiveScoreByTeamSize\".</li>         <li>Documented new game mode \"Terminus Firefight\".</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Added Endpoint.</li>     </ul> </div> 

        :param player: The Player's Gamertag. (required)
        :type player: str
        :param season_id: A Season ID or \"current\" for the current Season. Seasons are available via the Metadata API. (required)
        :type season_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo_wars2_player_season_stats_summary_serialize(
            player=player,
            season_id=season_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def halo_wars2_player_season_stats_summary_with_http_info(
        self,
        player: Annotated[StrictStr, Field(description="The Player's Gamertag.")],
        season_id: Annotated[StrictStr, Field(description="A Season ID or \"current\" for the current Season. Seasons are available via the Metadata API.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Halo Wars 2 - Player Season Stats Summary

        <p>Retrieves high-level aggregations across a Season for a Player.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>September 5, 2017:</strong></p>     <ul>         <li>Added additional pivots of data: \"CustomModeStats\", \"SinglePlayerModeStats\", \"MultiplayerModeStats\", \"SocialModeStats\", and \"RankedModeStats\".</li>         <li>Added additional fields to the \"Summary\" contract: \"GameMode\" and \"HighestObjectiveScoreByTeamSize\".</li>         <li>Documented new game mode \"Terminus Firefight\".</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Added Endpoint.</li>     </ul> </div> 

        :param player: The Player's Gamertag. (required)
        :type player: str
        :param season_id: A Season ID or \"current\" for the current Season. Seasons are available via the Metadata API. (required)
        :type season_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo_wars2_player_season_stats_summary_serialize(
            player=player,
            season_id=season_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def halo_wars2_player_season_stats_summary_without_preload_content(
        self,
        player: Annotated[StrictStr, Field(description="The Player's Gamertag.")],
        season_id: Annotated[StrictStr, Field(description="A Season ID or \"current\" for the current Season. Seasons are available via the Metadata API.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Halo Wars 2 - Player Season Stats Summary

        <p>Retrieves high-level aggregations across a Season for a Player.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>September 5, 2017:</strong></p>     <ul>         <li>Added additional pivots of data: \"CustomModeStats\", \"SinglePlayerModeStats\", \"MultiplayerModeStats\", \"SocialModeStats\", and \"RankedModeStats\".</li>         <li>Added additional fields to the \"Summary\" contract: \"GameMode\" and \"HighestObjectiveScoreByTeamSize\".</li>         <li>Documented new game mode \"Terminus Firefight\".</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Added Endpoint.</li>     </ul> </div> 

        :param player: The Player's Gamertag. (required)
        :type player: str
        :param season_id: A Season ID or \"current\" for the current Season. Seasons are available via the Metadata API. (required)
        :type season_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo_wars2_player_season_stats_summary_serialize(
            player=player,
            season_id=season_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _halo_wars2_player_season_stats_summary_serialize(
        self,
        player,
        season_id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if player is not None:
            _path_params['player'] = player
        if season_id is not None:
            _path_params['seasonId'] = season_id
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/hw2/players/{player}/stats/seasons/{seasonId}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def halo_wars2_player_stats_summary(
        self,
        player: Annotated[StrictStr, Field(description="The Player's Gamertag.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Halo Wars 2 - Player Stats Summary

        <p>Retrieves high-level aggregations across the lifetime of a Player.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>September 5, 2017:</strong></p>     <ul>         <li>Added additional fields: \"GameMode\" and \"HighestObjectiveScoreByTeamSize\".</li>         <li>Documented new game mode \"Terminus Firefight\".</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Added Endpoint.</li>     </ul> </div> 

        :param player: The Player's Gamertag. (required)
        :type player: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo_wars2_player_stats_summary_serialize(
            player=player,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def halo_wars2_player_stats_summary_with_http_info(
        self,
        player: Annotated[StrictStr, Field(description="The Player's Gamertag.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Halo Wars 2 - Player Stats Summary

        <p>Retrieves high-level aggregations across the lifetime of a Player.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>September 5, 2017:</strong></p>     <ul>         <li>Added additional fields: \"GameMode\" and \"HighestObjectiveScoreByTeamSize\".</li>         <li>Documented new game mode \"Terminus Firefight\".</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Added Endpoint.</li>     </ul> </div> 

        :param player: The Player's Gamertag. (required)
        :type player: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo_wars2_player_stats_summary_serialize(
            player=player,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def halo_wars2_player_stats_summary_without_preload_content(
        self,
        player: Annotated[StrictStr, Field(description="The Player's Gamertag.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Halo Wars 2 - Player Stats Summary

        <p>Retrieves high-level aggregations across the lifetime of a Player.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>September 5, 2017:</strong></p>     <ul>         <li>Added additional fields: \"GameMode\" and \"HighestObjectiveScoreByTeamSize\".</li>         <li>Documented new game mode \"Terminus Firefight\".</li>     </ul> </div> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Added Endpoint.</li>     </ul> </div> 

        :param player: The Player's Gamertag. (required)
        :type player: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo_wars2_player_stats_summary_serialize(
            player=player,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _halo_wars2_player_stats_summary_serialize(
        self,
        player,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if player is not None:
            _path_params['player'] = player
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/hw2/players/{player}/stats',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def halo_wars2_player_xps(
        self,
        players: Annotated[StrictStr, Field(description="A comma-separated list of Gamertags. Up to 6 Gamertags may be specified.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Halo Wars 2 - Player XPs

        <p>Retrieves XP and Rank information for one or more players.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Added Endpoint.</li>     </ul> </div> 

        :param players: A comma-separated list of Gamertags. Up to 6 Gamertags may be specified. (required)
        :type players: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo_wars2_player_xps_serialize(
            players=players,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def halo_wars2_player_xps_with_http_info(
        self,
        players: Annotated[StrictStr, Field(description="A comma-separated list of Gamertags. Up to 6 Gamertags may be specified.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Halo Wars 2 - Player XPs

        <p>Retrieves XP and Rank information for one or more players.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Added Endpoint.</li>     </ul> </div> 

        :param players: A comma-separated list of Gamertags. Up to 6 Gamertags may be specified. (required)
        :type players: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo_wars2_player_xps_serialize(
            players=players,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def halo_wars2_player_xps_without_preload_content(
        self,
        players: Annotated[StrictStr, Field(description="A comma-separated list of Gamertags. Up to 6 Gamertags may be specified.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Halo Wars 2 - Player XPs

        <p>Retrieves XP and Rank information for one or more players.</p> <br /> <h4>Changelog</h4> <div class=\"panel-body\">     <p><strong>February 21, 2017:</strong></p>     <ul>         <li>Added Endpoint.</li>     </ul> </div> 

        :param players: A comma-separated list of Gamertags. Up to 6 Gamertags may be specified. (required)
        :type players: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._halo_wars2_player_xps_serialize(
            players=players,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '500': None,
            '503': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _halo_wars2_player_xps_serialize(
        self,
        players,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if players is not None:
            
            _query_params.append(('players', players))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKeyQuery', 
            'apiKeyHeader'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/hw2/xp',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


