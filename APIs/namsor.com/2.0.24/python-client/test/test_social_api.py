# coding: utf-8

"""
    NamSor API v2

    NamSor API v2 : enpoints to process personal names (gender, cultural origin or ethnicity) in all alphabets or languages. By default, enpoints use 1 unit per name (ex. Gender), but Ethnicity classification uses 10 to 20 units per name depending on taxonomy. Use GET methods for small tests, but prefer POST methods for higher throughput (batch processing of up to 100 names at a time). Need something you can't find here? We have many more features coming soon. Let us know, we'll do our best to add it! 

    The version of the OpenAPI document: 2.0.24
    Contact: contact@namsor.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.social_api import SocialApi


class TestSocialApi(unittest.TestCase):
    """SocialApi unit test stubs"""

    def setUp(self) -> None:
        self.api = SocialApi()

    def tearDown(self) -> None:
        pass

    def test_phone_code(self) -> None:
        """Test case for phone_code

        [USES 11 UNITS PER NAME] Infer the likely country and phone prefix, given a personal name and formatted / unformatted phone number.
        """
        pass

    def test_phone_code_batch(self) -> None:
        """Test case for phone_code_batch

        [USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, detecting automatically the local context given a name and formatted / unformatted phone number.
        """
        pass

    def test_phone_code_geo(self) -> None:
        """Test case for phone_code_geo

        [USES 11 UNITS PER NAME] Infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence).
        """
        pass

    def test_phone_code_geo_batch(self) -> None:
        """Test case for phone_code_geo_batch

        [USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, with a local context (ISO2 country of residence).
        """
        pass

    def test_phone_code_geo_feedback_loop(self) -> None:
        """Test case for phone_code_geo_feedback_loop

        [CREDITS 1 UNIT] Feedback loop to better infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence).
        """
        pass


if __name__ == '__main__':
    unittest.main()
