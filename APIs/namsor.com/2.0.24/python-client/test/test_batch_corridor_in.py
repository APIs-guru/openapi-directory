# coding: utf-8

"""
    NamSor API v2

    NamSor API v2 : enpoints to process personal names (gender, cultural origin or ethnicity) in all alphabets or languages. By default, enpoints use 1 unit per name (ex. Gender), but Ethnicity classification uses 10 to 20 units per name depending on taxonomy. Use GET methods for small tests, but prefer POST methods for higher throughput (batch processing of up to 100 names at a time). Need something you can't find here? We have many more features coming soon. Let us know, we'll do our best to add it! 

    The version of the OpenAPI document: 2.0.24
    Contact: contact@namsor.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.batch_corridor_in import BatchCorridorIn

class TestBatchCorridorIn(unittest.TestCase):
    """BatchCorridorIn unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BatchCorridorIn:
        """Test BatchCorridorIn
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BatchCorridorIn`
        """
        model = BatchCorridorIn()
        if include_optional:
            return BatchCorridorIn(
                corridor_from_to = [
                    openapi_client.models.corridor_in.CorridorIn(
                        first_last_name_geo_from = openapi_client.models.first_last_name_geo_in.FirstLastNameGeoIn(
                            country_iso2 = '', 
                            first_name = '', 
                            id = '', 
                            last_name = '', ), 
                        first_last_name_geo_to = openapi_client.models.first_last_name_geo_in.FirstLastNameGeoIn(
                            country_iso2 = '', 
                            first_name = '', 
                            id = '', 
                            last_name = '', ), 
                        id = '', )
                    ],
                facts = [
                    openapi_client.models.fact_in.FactIn(
                        id = '', 
                        name = '', )
                    ]
            )
        else:
            return BatchCorridorIn(
        )
        """

    def testBatchCorridorIn(self):
        """Test BatchCorridorIn"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
