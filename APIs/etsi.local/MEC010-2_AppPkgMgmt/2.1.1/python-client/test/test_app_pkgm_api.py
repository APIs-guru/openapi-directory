# coding: utf-8

"""
    ETSI GS MEC 010-2 - Part 2: Application lifecycle, rules and requirements management

    ETSI GS MEC 010-2 - Part 2: Application lifecycle, rules and requirements management described using OpenAPI.

    The version of the OpenAPI document: 2.1.1
    Contact: cti_support@etsi.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.app_pkgm_api import AppPkgmApi


class TestAppPkgmApi(unittest.TestCase):
    """AppPkgmApi unit test stubs"""

    def setUp(self) -> None:
        self.api = AppPkgmApi()

    def tearDown(self) -> None:
        pass

    def test_app_dget(self) -> None:
        """Test case for app_dget

        Reads the content of the AppD of on-boarded individual application package resources.
        """
        pass

    def test_app_did_get(self) -> None:
        """Test case for app_did_get

        Fetch the onboarded application package content identified by appPkgId or appDId.
        """
        pass

    def test_app_did_put(self) -> None:
        """Test case for app_did_put

        Uploads the content of application package.
        """
        pass

    def test_app_package_delete(self) -> None:
        """Test case for app_package_delete

        Deletes an individual application package resources
        """
        pass

    def test_app_package_get(self) -> None:
        """Test case for app_package_get

        Queries the information related to individual application package resources
        """
        pass

    def test_app_package_patch(self) -> None:
        """Test case for app_package_patch

        Updates the operational state of an individual application package resource
        """
        pass

    def test_app_packages_get(self) -> None:
        """Test case for app_packages_get

        Queries information relating to on-boarded application packages in the MEO
        """
        pass

    def test_app_packages_post(self) -> None:
        """Test case for app_packages_post

        Create a resource for on-boarding an application package to a MEO
        """
        pass

    def test_app_pkg_get(self) -> None:
        """Test case for app_pkg_get

        Fetch the onboarded application package content identified by appPkgId or appDId.
        """
        pass

    def test_app_pkg_id_get(self) -> None:
        """Test case for app_pkg_id_get

        Reads the content of the AppD of on-boarded individual application package resources.
        """
        pass

    def test_app_pkg_put(self) -> None:
        """Test case for app_pkg_put

        Uploads the content of application package.
        """
        pass

    def test_individual_subscription_delete(self) -> None:
        """Test case for individual_subscription_delete

        Deletes the individual subscription to notifications about application package changes in MEO.
        """
        pass

    def test_individual_subscription_get(self) -> None:
        """Test case for individual_subscription_get

        Used to represent an individual subscription to notifications about application package changes.
        """
        pass

    def test_subscriptions_get(self) -> None:
        """Test case for subscriptions_get

        used to retrieve the information of subscriptions to individual application package resource in MEO
        """
        pass

    def test_subscriptions_post(self) -> None:
        """Test case for subscriptions_post

        Subscribe to notifications about on-boarding an application package
        """
        pass


if __name__ == '__main__':
    unittest.main()
