# coding: utf-8

"""
    ETSI GS MEC 010-2 - Part 2: Application lifecycle, rules and requirements management

    ETSI GS MEC 010-2 - Part 2: Application lifecycle, rules and requirements management described using OpenAPI.

    The version of the OpenAPI document: 2.1.1
    Contact: cti_support@etsi.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.service_descriptor import ServiceDescriptor

class TestServiceDescriptor(unittest.TestCase):
    """ServiceDescriptor unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ServiceDescriptor:
        """Test ServiceDescriptor
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ServiceDescriptor`
        """
        model = ServiceDescriptor()
        if include_optional:
            return ServiceDescriptor(
                ser_category = None,
                ser_name = '',
                transports_supported = openapi_client.models.transports_supported.TransportsSupported(
                    serializers = [
                        ''
                        ], 
                    transport = openapi_client.models.transport_descriptor.TransportDescriptor(
                        protocol = '', 
                        security = null, 
                        type = '', 
                        version = '', ), ),
                version = ''
            )
        else:
            return ServiceDescriptor(
                ser_name = '',
                version = '',
        )
        """

    def testServiceDescriptor(self):
        """Test ServiceDescriptor"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
