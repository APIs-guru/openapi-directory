# coding: utf-8

"""
    ETSI GS MEC 010-2 - Part 2: Application lifecycle, rules and requirements management

    ETSI GS MEC 010-2 - Part 2: Application lifecycle, rules and requirements management described using OpenAPI.

    The version of the OpenAPI document: 2.1.1
    Contact: cti_support@etsi.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.traffic_filter import TrafficFilter

class TestTrafficFilter(unittest.TestCase):
    """TrafficFilter unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TrafficFilter:
        """Test TrafficFilter
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TrafficFilter`
        """
        model = TrafficFilter()
        if include_optional:
            return TrafficFilter(
                d_scp = 56,
                dst_address = [
                    ''
                    ],
                dst_port = [
                    ''
                    ],
                dst_tunnel_port = [
                    ''
                    ],
                protocol = [
                    ''
                    ],
                q_ci = 56,
                src_address = [
                    ''
                    ],
                src_port = [
                    ''
                    ],
                src_tunnel_address = [
                    ''
                    ],
                src_tunnel_port = [
                    ''
                    ],
                t_c = 56,
                tag = [
                    ''
                    ],
                tgt_tunnel_address = [
                    ''
                    ]
            )
        else:
            return TrafficFilter(
        )
        """

    def testTrafficFilter(self):
        """Test TrafficFilter"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
