# coding: utf-8

"""
    BrandLovers Marketplace API V1

    Allows sellers to: 1) Load products definitions to the BrandLovers marktplace. 2) Receive and update orders status. 3) Receive and update shipping information. 4) Receive and update customer tickets. All requests consume and return application/json content. All request must be authenticated and use HTTPS.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_orders import GetOrders

class TestGetOrders(unittest.TestCase):
    """GetOrders unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetOrders:
        """Test GetOrders
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetOrders`
        """
        model = GetOrders()
        if include_optional:
            return GetOrders(
                metadata = [
                    openapi_client.models.metadata.Metadata(
                        key = '', 
                        value = '', )
                    ],
                orders = [
                    openapi_client.models.order.Order(
                        approved_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        billing_address = openapi_client.models.address.Address(
                            address = '', 
                            city = '', 
                            complement = '', 
                            country_id = '', 
                            neighbourhood = '', 
                            number = '', 
                            recipient_name = '', 
                            reference = '', 
                            state = '', 
                            zip_code = '', ), 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        customer = openapi_client.models.customer.Customer(
                            document_number = '', 
                            email = '', 
                            id = '', 
                            name = '', 
                            phones = [
                                openapi_client.models.phone.Phone(
                                    number = '', 
                                    type = '', )
                                ], 
                            type = '', ), 
                        freight = openapi_client.models.freight.Freight(
                            eta = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            additional_info = '', 
                            charged_amount = 56, 
                            cross_docking_time = 56, 
                            default_amount = 56, 
                            scheduled_period = '', 
                            transit_time = 56, 
                            type = '', ), 
                        items = [
                            openapi_client.models.order_item.OrderItem(
                                freight = openapi_client.models.freight.Freight(
                                    eta = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    additional_info = '', 
                                    charged_amount = 56, 
                                    cross_docking_time = 56, 
                                    default_amount = 56, 
                                    scheduled_period = '', 
                                    transit_time = 56, 
                                    type = '', ), 
                                gift_wrap = openapi_client.models.order_gift_wrap.OrderGiftWrap(
                                    available = True, 
                                    gift_card = openapi_client.models.gift_card.GiftCard(
                                        from = '', 
                                        message = '', 
                                        to = '', ), 
                                    message_support = True, 
                                    value = 56, ), 
                                id = '', 
                                name = '', 
                                promotions = [
                                    openapi_client.models.promotion.Promotion(
                                        amount = 56, 
                                        id = '', 
                                        name = '', 
                                        type = '', )
                                    ], 
                                sale_price = 56, 
                                sent = True, 
                                sku_seller_id = '', )
                            ], 
                        order_id = '', 
                        order_marketplace_id = '', 
                        seller = openapi_client.models.seller.Seller(
                            id = '', 
                            name = '', ), 
                        shipments = [
                            openapi_client.models.shippment.Shippment(
                                courier = openapi_client.models.courier.Courier(
                                    name = '', 
                                    tax_id = '', ), 
                                cte = '', 
                                description = '', 
                                id = '', 
                                invoice = openapi_client.models.invoice.Invoice(
                                    access_key = '', 
                                    cnpj = '', 
                                    issued_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    link_danfe = '', 
                                    link_xml = '', 
                                    number = '', 
                                    serie = '', ), 
                                items = [
                                    openapi_client.models.order_item_reference.OrderItemReference(
                                        quantity = 56, 
                                        sku_seller_id = '', )
                                    ], 
                                number = '', 
                                occurred_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                seller_shipment_id = '', 
                                status = '', 
                                tracking_url = '', )
                            ], 
                        shipping_address = openapi_client.models.address.Address(
                            address = '', 
                            city = '', 
                            complement = '', 
                            country_id = '', 
                            neighbourhood = '', 
                            number = '', 
                            recipient_name = '', 
                            reference = '', 
                            state = '', 
                            zip_code = '', ), 
                        status = '', 
                        total_amount = 56, 
                        total_discount_amount = 56, 
                        total_items_amount = 56, 
                        total_shipping_amount = 56, 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ]
            )
        else:
            return GetOrders(
                metadata = [
                    openapi_client.models.metadata.Metadata(
                        key = '', 
                        value = '', )
                    ],
                orders = [
                    openapi_client.models.order.Order(
                        approved_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        billing_address = openapi_client.models.address.Address(
                            address = '', 
                            city = '', 
                            complement = '', 
                            country_id = '', 
                            neighbourhood = '', 
                            number = '', 
                            recipient_name = '', 
                            reference = '', 
                            state = '', 
                            zip_code = '', ), 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        customer = openapi_client.models.customer.Customer(
                            document_number = '', 
                            email = '', 
                            id = '', 
                            name = '', 
                            phones = [
                                openapi_client.models.phone.Phone(
                                    number = '', 
                                    type = '', )
                                ], 
                            type = '', ), 
                        freight = openapi_client.models.freight.Freight(
                            eta = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            additional_info = '', 
                            charged_amount = 56, 
                            cross_docking_time = 56, 
                            default_amount = 56, 
                            scheduled_period = '', 
                            transit_time = 56, 
                            type = '', ), 
                        items = [
                            openapi_client.models.order_item.OrderItem(
                                freight = openapi_client.models.freight.Freight(
                                    eta = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    additional_info = '', 
                                    charged_amount = 56, 
                                    cross_docking_time = 56, 
                                    default_amount = 56, 
                                    scheduled_period = '', 
                                    transit_time = 56, 
                                    type = '', ), 
                                gift_wrap = openapi_client.models.order_gift_wrap.OrderGiftWrap(
                                    available = True, 
                                    gift_card = openapi_client.models.gift_card.GiftCard(
                                        from = '', 
                                        message = '', 
                                        to = '', ), 
                                    message_support = True, 
                                    value = 56, ), 
                                id = '', 
                                name = '', 
                                promotions = [
                                    openapi_client.models.promotion.Promotion(
                                        amount = 56, 
                                        id = '', 
                                        name = '', 
                                        type = '', )
                                    ], 
                                sale_price = 56, 
                                sent = True, 
                                sku_seller_id = '', )
                            ], 
                        order_id = '', 
                        order_marketplace_id = '', 
                        seller = openapi_client.models.seller.Seller(
                            id = '', 
                            name = '', ), 
                        shipments = [
                            openapi_client.models.shippment.Shippment(
                                courier = openapi_client.models.courier.Courier(
                                    name = '', 
                                    tax_id = '', ), 
                                cte = '', 
                                description = '', 
                                id = '', 
                                invoice = openapi_client.models.invoice.Invoice(
                                    access_key = '', 
                                    cnpj = '', 
                                    issued_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    link_danfe = '', 
                                    link_xml = '', 
                                    number = '', 
                                    serie = '', ), 
                                items = [
                                    openapi_client.models.order_item_reference.OrderItemReference(
                                        quantity = 56, 
                                        sku_seller_id = '', )
                                    ], 
                                number = '', 
                                occurred_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                seller_shipment_id = '', 
                                status = '', 
                                tracking_url = '', )
                            ], 
                        shipping_address = openapi_client.models.address.Address(
                            address = '', 
                            city = '', 
                            complement = '', 
                            country_id = '', 
                            neighbourhood = '', 
                            number = '', 
                            recipient_name = '', 
                            reference = '', 
                            state = '', 
                            zip_code = '', ), 
                        status = '', 
                        total_amount = 56, 
                        total_discount_amount = 56, 
                        total_items_amount = 56, 
                        total_shipping_amount = 56, 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
        )
        """

    def testGetOrders(self):
        """Test GetOrders"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
