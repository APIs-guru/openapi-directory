# coding: utf-8

"""
    Catalog Inventory

    Catalog Inventory

    The version of the OpenAPI document: 1.0.0
    Contact: support@redhat.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.service_offerings_collection import ServiceOfferingsCollection

class TestServiceOfferingsCollection(unittest.TestCase):
    """ServiceOfferingsCollection unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ServiceOfferingsCollection:
        """Test ServiceOfferingsCollection
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ServiceOfferingsCollection`
        """
        model = ServiceOfferingsCollection()
        if include_optional:
            return ServiceOfferingsCollection(
                data = [
                    openapi_client.models.service_offering.ServiceOffering(
                        archived_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        description = 'This is a short description', 
                        display_name = 'MariaDB (Ephemeral)', 
                        distributor = 'Red Hat, Inc.', 
                        documentation_url = 'https://github.com/sclorg/mariadb-container/blob/master/10.2/root/usr/share/container-scripts/mysql/README.md', 
                        extra = openapi_client.models.extra.extra(), 
                        id = '4', 
                        last_seen_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        long_description = 'This template provides a standalone MariaDB server with a database created...', 
                        name = 'Sample Service Offering', 
                        refresh_state_part_id = '4', 
                        service_inventory_id = '4', 
                        source_created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        source_deleted_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        source_id = '4', 
                        source_ref = 'object-12345_67890', 
                        support_url = 'https://access.redhat.com', 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                links = openapi_client.models.collection_links.CollectionLinks(
                    first = '', 
                    last = '', 
                    next = '', 
                    prev = '', ),
                meta = openapi_client.models.collection_metadata.CollectionMetadata(
                    count = 56, 
                    limit = 56, 
                    offset = 56, )
            )
        else:
            return ServiceOfferingsCollection(
        )
        """

    def testServiceOfferingsCollection(self):
        """Test ServiceOfferingsCollection"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
