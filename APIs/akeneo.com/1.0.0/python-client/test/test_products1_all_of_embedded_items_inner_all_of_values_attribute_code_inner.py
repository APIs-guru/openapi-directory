# coding: utf-8

"""
    Akeneo PIM REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.products1_all_of_embedded_items_inner_all_of_values_attribute_code_inner import Products1AllOfEmbeddedItemsInnerAllOfValuesAttributeCodeInner

class TestProducts1AllOfEmbeddedItemsInnerAllOfValuesAttributeCodeInner(unittest.TestCase):
    """Products1AllOfEmbeddedItemsInnerAllOfValuesAttributeCodeInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Products1AllOfEmbeddedItemsInnerAllOfValuesAttributeCodeInner:
        """Test Products1AllOfEmbeddedItemsInnerAllOfValuesAttributeCodeInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Products1AllOfEmbeddedItemsInnerAllOfValuesAttributeCodeInner`
        """
        model = Products1AllOfEmbeddedItemsInnerAllOfValuesAttributeCodeInner()
        if include_optional:
            return Products1AllOfEmbeddedItemsInnerAllOfValuesAttributeCodeInner(
                data = openapi_client.models.data.data(),
                linked_data = openapi_client.models.products_1_all_of__embedded_items_inner_all_of_values_attribute_code_inner_linked_data.Products_1_allOf__embedded_items_inner_allOf_values_attributeCode_inner_linked_data(
                    attribute = '', 
                    code = '', 
                    labels = openapi_client.models.labels.labels(), ),
                locale = '',
                scope = ''
            )
        else:
            return Products1AllOfEmbeddedItemsInnerAllOfValuesAttributeCodeInner(
        )
        """

    def testProducts1AllOfEmbeddedItemsInnerAllOfValuesAttributeCodeInner(self):
        """Test Products1AllOfEmbeddedItemsInnerAllOfValuesAttributeCodeInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
