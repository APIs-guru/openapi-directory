# coding: utf-8

"""
    Akeneo PIM REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.published_products_all_of_embedded_items_inner import PublishedProductsAllOfEmbeddedItemsInner

class TestPublishedProductsAllOfEmbeddedItemsInner(unittest.TestCase):
    """PublishedProductsAllOfEmbeddedItemsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PublishedProductsAllOfEmbeddedItemsInner:
        """Test PublishedProductsAllOfEmbeddedItemsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PublishedProductsAllOfEmbeddedItemsInner`
        """
        model = PublishedProductsAllOfEmbeddedItemsInner()
        if include_optional:
            return PublishedProductsAllOfEmbeddedItemsInner(
                links = openapi_client.models.pam_asset_categories_all_of__embedded_items_inner_all_of__links.PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links(
                    self = openapi_client.models.pam_asset_categories_all_of__embedded_items_inner_all_of__links_self.PAM_Asset_Categories_allOf__embedded_items_inner_allOf__links_self(
                        href = '', ), ),
                associations = openapi_client.models.published_products_all_of__embedded_items_inner_all_of_associations.Published_products_allOf__embedded_items_inner_allOf_associations(
                    association_type_code = openapi_client.models.published_products_all_of__embedded_items_inner_all_of_associations_association_type_code.Published_products_allOf__embedded_items_inner_allOf_associations_associationTypeCode(
                        groups = [
                            ''
                            ], 
                        product_models = [
                            ''
                            ], 
                        products = [
                            ''
                            ], ), ),
                categories = [
                    ''
                    ],
                created = '',
                enabled = True,
                family = 'null',
                groups = [
                    ''
                    ],
                identifier = '',
                quantified_associations = None,
                updated = '',
                values = openapi_client.models.published_products_all_of__embedded_items_inner_all_of_values.Published_products_allOf__embedded_items_inner_allOf_values(
                    attribute_code = [
                        openapi_client.models.product_models_all_of__embedded_items_inner_all_of_values_attribute_code_inner.Product_Models_allOf__embedded_items_inner_allOf_values_attributeCode_inner(
                            data = openapi_client.models.data.data(), 
                            locale = '', 
                            scope = '', )
                        ], )
            )
        else:
            return PublishedProductsAllOfEmbeddedItemsInner(
                identifier = '',
        )
        """

    def testPublishedProductsAllOfEmbeddedItemsInner(self):
        """Test PublishedProductsAllOfEmbeddedItemsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
