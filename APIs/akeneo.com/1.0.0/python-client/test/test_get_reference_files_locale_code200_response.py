# coding: utf-8

"""
    Akeneo PIM REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_reference_files_locale_code200_response import GetReferenceFilesLocaleCode200Response

class TestGetReferenceFilesLocaleCode200Response(unittest.TestCase):
    """GetReferenceFilesLocaleCode200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetReferenceFilesLocaleCode200Response:
        """Test GetReferenceFilesLocaleCode200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetReferenceFilesLocaleCode200Response`
        """
        model = GetReferenceFilesLocaleCode200Response()
        if include_optional:
            return GetReferenceFilesLocaleCode200Response(
                link = openapi_client.models.get_reference_files__locale_code__200_response__link.get_reference_files__locale_code__200_response__link(
                    download = openapi_client.models.pam_assets_all_of__embedded_items_inner_all_of_reference_files_inner__link_download.PAM_Assets_allOf__embedded_items_inner_allOf_reference_files_inner__link_download(
                        href = '', ), ),
                code = '',
                locale = ''
            )
        else:
            return GetReferenceFilesLocaleCode200Response(
        )
        """

    def testGetReferenceFilesLocaleCode200Response(self):
        """Test GetReferenceFilesLocaleCode200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
