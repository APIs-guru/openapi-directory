# coding: utf-8

"""
    Akeneo PIM REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.several_channels_patch_request import SeveralChannelsPatchRequest

class TestSeveralChannelsPatchRequest(unittest.TestCase):
    """SeveralChannelsPatchRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SeveralChannelsPatchRequest:
        """Test SeveralChannelsPatchRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SeveralChannelsPatchRequest`
        """
        model = SeveralChannelsPatchRequest()
        if include_optional:
            return SeveralChannelsPatchRequest(
                category_tree = '',
                code = '',
                conversion_units = openapi_client.models.channels_all_of__embedded_items_inner_all_of_conversion_units.Channels_allOf__embedded_items_inner_allOf_conversion_units(
                    attribute_code = '', ),
                currencies = [
                    ''
                    ],
                labels = openapi_client.models.channels_all_of__embedded_items_inner_all_of_labels.Channels_allOf__embedded_items_inner_allOf_labels(
                    locale_code = '', ),
                locales = [
                    ''
                    ]
            )
        else:
            return SeveralChannelsPatchRequest(
                category_tree = '',
                code = '',
                currencies = [
                    ''
                    ],
                locales = [
                    ''
                    ],
        )
        """

    def testSeveralChannelsPatchRequest(self):
        """Test SeveralChannelsPatchRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
