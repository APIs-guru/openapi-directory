# coding: utf-8

"""
    Akeneo PIM REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.patch_assets_request_inner import PatchAssetsRequestInner

class TestPatchAssetsRequestInner(unittest.TestCase):
    """PatchAssetsRequestInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PatchAssetsRequestInner:
        """Test PatchAssetsRequestInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PatchAssetsRequestInner`
        """
        model = PatchAssetsRequestInner()
        if include_optional:
            return PatchAssetsRequestInner(
                code = '',
                created = '',
                updated = '',
                values = openapi_client.models.asset_all_of__embedded__items_inner_all_of_values.Asset_allOf__embedded__items_inner_allOf_values(
                    attribute_code = [
                        openapi_client.models.asset_all_of__embedded__items_inner_all_of_values_attribute_code_inner.Asset_allOf__embedded__items_inner_allOf_values_attributeCode_inner(
                            channel = '', 
                            data = openapi_client.models.data.data(), 
                            locale = '', )
                        ], )
            )
        else:
            return PatchAssetsRequestInner(
                code = '',
        )
        """

    def testPatchAssetsRequestInner(self):
        """Test PatchAssetsRequestInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
