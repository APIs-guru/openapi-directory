# coding: utf-8

"""
    Akeneo PIM REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.reference_entity_attribute import ReferenceEntityAttribute

class TestReferenceEntityAttribute(unittest.TestCase):
    """ReferenceEntityAttribute unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ReferenceEntityAttribute:
        """Test ReferenceEntityAttribute
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ReferenceEntityAttribute`
        """
        model = ReferenceEntityAttribute()
        if include_optional:
            return ReferenceEntityAttribute(
                allowed_extensions = [
                    ''
                    ],
                code = '',
                decimals_allowed = True,
                is_required_for_completeness = True,
                is_rich_text_editor = True,
                is_textarea = True,
                labels = openapi_client.models.get_asset_families__code__attributes_200_response_inner_labels.get_asset_families__code__attributes_200_response_inner_labels(
                    locale_code = '', ),
                max_characters = 56,
                max_file_size = '',
                max_value = '',
                min_value = '',
                reference_entity_code = '',
                type = 'text',
                validation_regexp = '',
                validation_rule = 'none',
                value_per_channel = True,
                value_per_locale = True
            )
        else:
            return ReferenceEntityAttribute(
                code = '',
                type = 'text',
        )
        """

    def testReferenceEntityAttribute(self):
        """Test ReferenceEntityAttribute"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
