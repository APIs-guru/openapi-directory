# coding: utf-8

"""
    Telegram Bot API

    Auto-generated OpenAPI schema

    The version of the OpenAPI document: 5.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_chat_member_post200_response import GetChatMemberPost200Response

class TestGetChatMemberPost200Response(unittest.TestCase):
    """GetChatMemberPost200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetChatMemberPost200Response:
        """Test GetChatMemberPost200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetChatMemberPost200Response`
        """
        model = GetChatMemberPost200Response()
        if include_optional:
            return GetChatMemberPost200Response(
                ok = True,
                result = openapi_client.models.chat_member.ChatMember(
                    can_add_web_page_previews = True, 
                    can_be_edited = True, 
                    can_change_info = True, 
                    can_delete_messages = True, 
                    can_edit_messages = True, 
                    can_invite_users = True, 
                    can_pin_messages = True, 
                    can_post_messages = True, 
                    can_promote_members = True, 
                    can_restrict_members = True, 
                    can_send_media_messages = True, 
                    can_send_messages = True, 
                    can_send_other_messages = True, 
                    can_send_polls = True, 
                    custom_title = '', 
                    is_anonymous = True, 
                    is_member = True, 
                    status = 'creator', 
                    until_date = 56, 
                    user = openapi_client.models.user.User(
                        can_join_groups = True, 
                        can_read_all_group_messages = True, 
                        first_name = '', 
                        id = 56, 
                        is_bot = True, 
                        language_code = '', 
                        last_name = '', 
                        supports_inline_queries = True, 
                        username = '', ), )
            )
        else:
            return GetChatMemberPost200Response(
                ok = True,
                result = openapi_client.models.chat_member.ChatMember(
                    can_add_web_page_previews = True, 
                    can_be_edited = True, 
                    can_change_info = True, 
                    can_delete_messages = True, 
                    can_edit_messages = True, 
                    can_invite_users = True, 
                    can_pin_messages = True, 
                    can_post_messages = True, 
                    can_promote_members = True, 
                    can_restrict_members = True, 
                    can_send_media_messages = True, 
                    can_send_messages = True, 
                    can_send_other_messages = True, 
                    can_send_polls = True, 
                    custom_title = '', 
                    is_anonymous = True, 
                    is_member = True, 
                    status = 'creator', 
                    until_date = 56, 
                    user = openapi_client.models.user.User(
                        can_join_groups = True, 
                        can_read_all_group_messages = True, 
                        first_name = '', 
                        id = 56, 
                        is_bot = True, 
                        language_code = '', 
                        last_name = '', 
                        supports_inline_queries = True, 
                        username = '', ), ),
        )
        """

    def testGetChatMemberPost200Response(self):
        """Test GetChatMemberPost200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
