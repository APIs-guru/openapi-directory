# coding: utf-8

"""
    Telegram Bot API

    Auto-generated OpenAPI schema

    The version of the OpenAPI document: 5.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.passport_data import PassportData

class TestPassportData(unittest.TestCase):
    """PassportData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PassportData:
        """Test PassportData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PassportData`
        """
        model = PassportData()
        if include_optional:
            return PassportData(
                credentials = openapi_client.models.encrypted_credentials.EncryptedCredentials(
                    data = '', 
                    hash = '', 
                    secret = '', ),
                data = [
                    openapi_client.models.encrypted_passport_element.EncryptedPassportElement(
                        email = '', 
                        files = [
                            openapi_client.models.passport_file.PassportFile(
                                file_date = 56, 
                                file_id = '', 
                                file_size = 56, 
                                file_unique_id = '', )
                            ], 
                        front_side = openapi_client.models.passport_file.PassportFile(
                            file_date = 56, 
                            file_id = '', 
                            file_size = 56, 
                            file_unique_id = '', ), 
                        hash = '', 
                        phone_number = '', 
                        reverse_side = , 
                        selfie = , 
                        translation = [
                            
                            ], 
                        type = 'personal_details', )
                    ]
            )
        else:
            return PassportData(
                credentials = openapi_client.models.encrypted_credentials.EncryptedCredentials(
                    data = '', 
                    hash = '', 
                    secret = '', ),
                data = [
                    openapi_client.models.encrypted_passport_element.EncryptedPassportElement(
                        email = '', 
                        files = [
                            openapi_client.models.passport_file.PassportFile(
                                file_date = 56, 
                                file_id = '', 
                                file_size = 56, 
                                file_unique_id = '', )
                            ], 
                        front_side = openapi_client.models.passport_file.PassportFile(
                            file_date = 56, 
                            file_id = '', 
                            file_size = 56, 
                            file_unique_id = '', ), 
                        hash = '', 
                        phone_number = '', 
                        reverse_side = , 
                        selfie = , 
                        translation = [
                            
                            ], 
                        type = 'personal_details', )
                    ],
        )
        """

    def testPassportData(self):
        """Test PassportData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
