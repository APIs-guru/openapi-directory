# coding: utf-8

"""
    Telegram Bot API

    Auto-generated OpenAPI schema

    The version of the OpenAPI document: 5.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.inline_query_result_mpeg4_gif import InlineQueryResultMpeg4Gif

class TestInlineQueryResultMpeg4Gif(unittest.TestCase):
    """InlineQueryResultMpeg4Gif unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> InlineQueryResultMpeg4Gif:
        """Test InlineQueryResultMpeg4Gif
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `InlineQueryResultMpeg4Gif`
        """
        model = InlineQueryResultMpeg4Gif()
        if include_optional:
            return InlineQueryResultMpeg4Gif(
                caption = '',
                caption_entities = [
                    openapi_client.models.message_entity.MessageEntity(
                        language = '', 
                        length = 56, 
                        offset = 56, 
                        type = 'mention', 
                        url = '', 
                        user = openapi_client.models.user.User(
                            can_join_groups = True, 
                            can_read_all_group_messages = True, 
                            first_name = '', 
                            id = 56, 
                            is_bot = True, 
                            language_code = '', 
                            last_name = '', 
                            supports_inline_queries = True, 
                            username = '', ), )
                    ],
                id = '',
                input_message_content = None,
                mpeg4_duration = 56,
                mpeg4_height = 56,
                mpeg4_url = '',
                mpeg4_width = 56,
                parse_mode = '',
                reply_markup = openapi_client.models.inline_keyboard_markup.InlineKeyboardMarkup(
                    inline_keyboard = [
                        [
                            openapi_client.models.inline_keyboard_button.InlineKeyboardButton(
                                callback_data = '', 
                                callback_game = null, 
                                login_url = openapi_client.models.login_url.LoginUrl(
                                    bot_username = '', 
                                    forward_text = '', 
                                    request_write_access = True, 
                                    url = '', ), 
                                pay = True, 
                                switch_inline_query = '', 
                                switch_inline_query_current_chat = '', 
                                text = '', 
                                url = '', )
                            ]
                        ], ),
                thumb_mime_type = 'image/jpeg',
                thumb_url = '',
                title = '',
                type = ''
            )
        else:
            return InlineQueryResultMpeg4Gif(
                id = '',
                mpeg4_url = '',
                thumb_url = '',
                type = '',
        )
        """

    def testInlineQueryResultMpeg4Gif(self):
        """Test InlineQueryResultMpeg4Gif"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
