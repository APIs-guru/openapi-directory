# coding: utf-8

"""
    LanguageTool API

    Check texts for style and grammar issues with <a href='https://languagetool.org'>LanguageTool</a>. Please consider the following default limitations:<ul><li>your daily request limit depending on <a href='https://languagetool.org/editor/settings/access-tokens'>your plan</a> <li>maximum number of requests per minute: 20 (free) / 80 (Premium) <li>maximum number of characters per minute: 75,000 (free) / 300,000 (Premium) <li>maximum number of characters per request: 20,000 (free) / 60,000 (Premium) <li>for the free version, also consider the <a href='https://dev.languagetool.org/public-http-api'>limitations documented here</a> <li><b>Note:</b> any parameters or outputs not part of this documentation are internal and must not be relied on</ul> Need more generous limits? Just <a href='https://languagetool.org/proofreading-api'>contact us</a>.

    The version of the OpenAPI document: 1.1.2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.check_post200_response_language import CheckPost200ResponseLanguage

class TestCheckPost200ResponseLanguage(unittest.TestCase):
    """CheckPost200ResponseLanguage unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CheckPost200ResponseLanguage:
        """Test CheckPost200ResponseLanguage
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CheckPost200ResponseLanguage`
        """
        model = CheckPost200ResponseLanguage()
        if include_optional:
            return CheckPost200ResponseLanguage(
                code = '',
                detected_language = openapi_client.models._check_post_200_response_language_detected_language._check_post_200_response_language_detectedLanguage(
                    code = '', 
                    name = '', ),
                name = ''
            )
        else:
            return CheckPost200ResponseLanguage(
                code = '',
                detected_language = openapi_client.models._check_post_200_response_language_detected_language._check_post_200_response_language_detectedLanguage(
                    code = '', 
                    name = '', ),
                name = '',
        )
        """

    def testCheckPost200ResponseLanguage(self):
        """Test CheckPost200ResponseLanguage"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
