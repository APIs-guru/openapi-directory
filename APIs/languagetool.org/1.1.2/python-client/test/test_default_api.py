# coding: utf-8

"""
    LanguageTool API

    Check texts for style and grammar issues with <a href='https://languagetool.org'>LanguageTool</a>. Please consider the following default limitations:<ul><li>your daily request limit depending on <a href='https://languagetool.org/editor/settings/access-tokens'>your plan</a> <li>maximum number of requests per minute: 20 (free) / 80 (Premium) <li>maximum number of characters per minute: 75,000 (free) / 300,000 (Premium) <li>maximum number of characters per request: 20,000 (free) / 60,000 (Premium) <li>for the free version, also consider the <a href='https://dev.languagetool.org/public-http-api'>limitations documented here</a> <li><b>Note:</b> any parameters or outputs not part of this documentation are internal and must not be relied on</ul> Need more generous limits? Just <a href='https://languagetool.org/proofreading-api'>contact us</a>.

    The version of the OpenAPI document: 1.1.2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.default_api import DefaultApi


class TestDefaultApi(unittest.TestCase):
    """DefaultApi unit test stubs"""

    def setUp(self) -> None:
        self.api = DefaultApi()

    def tearDown(self) -> None:
        pass

    def test_check_post(self) -> None:
        """Test case for check_post

        Check a text
        """
        pass

    def test_languages_get(self) -> None:
        """Test case for languages_get

        Get a list of supported languages.
        """
        pass

    def test_words_add_post(self) -> None:
        """Test case for words_add_post

        Add word to a dictionary
        """
        pass

    def test_words_delete_post(self) -> None:
        """Test case for words_delete_post

        Remove word from a dictionary
        """
        pass

    def test_words_get(self) -> None:
        """Test case for words_get

        List words in dictionaries
        """
        pass


if __name__ == '__main__':
    unittest.main()
