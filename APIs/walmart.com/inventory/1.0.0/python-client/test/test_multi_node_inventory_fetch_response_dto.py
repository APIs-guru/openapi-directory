# coding: utf-8

"""
    Inventory Management

    Maintaining up-to-date inventory for your items on Walmart.com ensures a great experience for your customers and greater sales opportunities for you.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.multi_node_inventory_fetch_response_dto import MultiNodeInventoryFetchResponseDTO

class TestMultiNodeInventoryFetchResponseDTO(unittest.TestCase):
    """MultiNodeInventoryFetchResponseDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MultiNodeInventoryFetchResponseDTO:
        """Test MultiNodeInventoryFetchResponseDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MultiNodeInventoryFetchResponseDTO`
        """
        model = MultiNodeInventoryFetchResponseDTO()
        if include_optional:
            return MultiNodeInventoryFetchResponseDTO(
                elements = openapi_client.models.get_multi_node_inventory_for_all_sku_and_all_ship_nodes_200_response_elements.getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements(
                    inventories = [
                        openapi_client.models.get_multi_node_inventory_for_all_sku_and_all_ship_nodes_200_response_elements_inventories_inner.getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner(
                            nodes = [
                                openapi_client.models.get_multi_node_inventory_for_all_sku_and_all_ship_nodes_200_response_elements_inventories_inner_nodes_inner.getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner(
                                    avail_to_sell_qty = openapi_client.models.get_multi_node_inventory_for_all_sku_and_all_ship_nodes_200_response_elements_inventories_inner_nodes_inner_avail_to_sell_qty.getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_availToSellQty(
                                        amount = 1.337, 
                                        unit = 'EACH', ), 
                                    input_qty = openapi_client.models.get_multi_node_inventory_for_all_sku_and_all_ship_nodes_200_response_elements_inventories_inner_nodes_inner_input_qty.getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_inputQty(
                                        amount = 1.337, 
                                        unit = 'EACH', ), 
                                    reserved_qty = openapi_client.models.get_multi_node_inventory_for_all_sku_and_all_ship_nodes_200_response_elements_inventories_inner_nodes_inner_reserved_qty.getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_reservedQty(
                                        amount = 1.337, 
                                        unit = 'EACH', ), 
                                    ship_node = '', )
                                ], 
                            sku = '', )
                        ], ),
                meta = openapi_client.models.get_multi_node_inventory_for_all_sku_and_all_ship_nodes_200_response_meta.getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_meta(
                    next_cursor = '', 
                    total_count = 1.337, )
            )
        else:
            return MultiNodeInventoryFetchResponseDTO(
        )
        """

    def testMultiNodeInventoryFetchResponseDTO(self):
        """Test MultiNodeInventoryFetchResponseDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
