# coding: utf-8

"""
    Price Management

    The price is a fundamental building block for your listing on Walmart.com. You can use the price management APIs to set up and manage the price for a given item

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.repricer_entity_collection_response import RepricerEntityCollectionResponse

class TestRepricerEntityCollectionResponse(unittest.TestCase):
    """RepricerEntityCollectionResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RepricerEntityCollectionResponse:
        """Test RepricerEntityCollectionResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RepricerEntityCollectionResponse`
        """
        model = RepricerEntityCollectionResponse()
        if include_optional:
            return RepricerEntityCollectionResponse(
                strategy_collections = [
                    openapi_client.models.get_strategies_200_response_strategy_collections_inner.getStrategies_200_response_strategyCollections_inner(
                        assigned_count = 1, 
                        enable_repricer_for_promotion = True, 
                        enabled = True, 
                        repricer_strategy = 'Buy Box Strategy For testing', 
                        strategies = [
                            openapi_client.models.get_strategies_200_response_strategy_collections_inner_strategies_inner.getStrategies_200_response_strategyCollections_inner_strategies_inner(
                                adjustment_type = 'UNIT', 
                                adjustment_value = 1.2, 
                                strategy_type = 'Buy Box Price', )
                            ], 
                        strategy_collection_id = '41678999-a088-4fd8-9eb4-55f8d8ed4ac8', )
                    ],
                total_elements = 1
            )
        else:
            return RepricerEntityCollectionResponse(
        )
        """

    def testRepricerEntityCollectionResponse(self):
        """Test RepricerEntityCollectionResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
