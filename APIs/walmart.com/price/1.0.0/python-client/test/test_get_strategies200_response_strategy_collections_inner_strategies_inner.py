# coding: utf-8

"""
    Price Management

    The price is a fundamental building block for your listing on Walmart.com. You can use the price management APIs to set up and manage the price for a given item

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_strategies200_response_strategy_collections_inner_strategies_inner import GetStrategies200ResponseStrategyCollectionsInnerStrategiesInner

class TestGetStrategies200ResponseStrategyCollectionsInnerStrategiesInner(unittest.TestCase):
    """GetStrategies200ResponseStrategyCollectionsInnerStrategiesInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetStrategies200ResponseStrategyCollectionsInnerStrategiesInner:
        """Test GetStrategies200ResponseStrategyCollectionsInnerStrategiesInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetStrategies200ResponseStrategyCollectionsInnerStrategiesInner`
        """
        model = GetStrategies200ResponseStrategyCollectionsInnerStrategiesInner()
        if include_optional:
            return GetStrategies200ResponseStrategyCollectionsInnerStrategiesInner(
                adjustment_type = 'UNIT',
                adjustment_value = 1.2,
                strategy_type = 'Buy Box Price'
            )
        else:
            return GetStrategies200ResponseStrategyCollectionsInnerStrategiesInner(
        )
        """

    def testGetStrategies200ResponseStrategyCollectionsInnerStrategiesInner(self):
        """Test GetStrategies200ResponseStrategyCollectionsInnerStrategiesInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
