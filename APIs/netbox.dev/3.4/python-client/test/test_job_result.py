# coding: utf-8

"""
    NetBox API

    API to access NetBox

    The version of the OpenAPI document: 3.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.job_result import JobResult

class TestJobResult(unittest.TestCase):
    """JobResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> JobResult:
        """Test JobResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `JobResult`
        """
        model = JobResult()
        if include_optional:
            return JobResult(
                completed = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                data = openapi_client.models.data.Data(),
                display = '',
                id = 56,
                interval = 1,
                job_id = '',
                name = '0',
                obj_type = '',
                scheduled = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                started = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                status = openapi_client.models.status.Status(
                    label = 'Pending', 
                    value = 'pending', ),
                url = '',
                user = openapi_client.models.nested_user.NestedUser(
                    display = '', 
                    id = 56, 
                    url = '', 
                    username = 'A0', )
            )
        else:
            return JobResult(
                job_id = '',
                name = '0',
        )
        """

    def testJobResult(self):
        """Test JobResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
