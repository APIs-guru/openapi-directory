# coding: utf-8

"""
    NetBox API

    API to access NetBox

    The version of the OpenAPI document: 3.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.writable_front_port import WritableFrontPort

class TestWritableFrontPort(unittest.TestCase):
    """WritableFrontPort unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WritableFrontPort:
        """Test WritableFrontPort
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WritableFrontPort`
        """
        model = WritableFrontPort()
        if include_optional:
            return WritableFrontPort(
                occupied = True,
                cable = openapi_client.models.nested_cable.NestedCable(
                    display = '', 
                    id = 56, 
                    label = '', 
                    url = '', ),
                cable_end = '0',
                color = 'bf3253',
                created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                custom_fields = openapi_client.models.custom_fields.Custom fields(),
                description = '',
                device = 56,
                display = '',
                id = 56,
                label = '',
                last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                link_peers = [
                    ''
                    ],
                link_peers_type = '',
                mark_connected = True,
                module = 56,
                name = '0',
                rear_port = 56,
                rear_port_position = 1,
                tags = [
                    openapi_client.models.nested_tag.NestedTag(
                        color = 'bf32530', 
                        display = '', 
                        id = 56, 
                        name = '0', 
                        slug = '0', 
                        url = '', )
                    ],
                type = '8p8c',
                url = ''
            )
        else:
            return WritableFrontPort(
                device = 56,
                name = '0',
                rear_port = 56,
                type = '8p8c',
        )
        """

    def testWritableFrontPort(self):
        """Test WritableFrontPort"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
