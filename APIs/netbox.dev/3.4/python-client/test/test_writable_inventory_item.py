# coding: utf-8

"""
    NetBox API

    API to access NetBox

    The version of the OpenAPI document: 3.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.writable_inventory_item import WritableInventoryItem

class TestWritableInventoryItem(unittest.TestCase):
    """WritableInventoryItem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WritableInventoryItem:
        """Test WritableInventoryItem
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WritableInventoryItem`
        """
        model = WritableInventoryItem()
        if include_optional:
            return WritableInventoryItem(
                depth = 56,
                asset_tag = '',
                component = openapi_client.models.component.Component(),
                component_id = 0,
                component_type = '',
                created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                custom_fields = openapi_client.models.custom_fields.Custom fields(),
                description = '',
                device = 56,
                discovered = True,
                display = '',
                id = 56,
                label = '',
                last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                manufacturer = 56,
                name = '0',
                parent = 56,
                part_id = '',
                role = 56,
                serial = '',
                tags = [
                    openapi_client.models.nested_tag.NestedTag(
                        color = 'bf32530', 
                        display = '', 
                        id = 56, 
                        name = '0', 
                        slug = '0', 
                        url = '', )
                    ],
                url = ''
            )
        else:
            return WritableInventoryItem(
                device = 56,
                name = '0',
        )
        """

    def testWritableInventoryItem(self):
        """Test WritableInventoryItem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
