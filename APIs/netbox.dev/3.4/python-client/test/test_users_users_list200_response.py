# coding: utf-8

"""
    NetBox API

    API to access NetBox

    The version of the OpenAPI document: 3.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.users_users_list200_response import UsersUsersList200Response

class TestUsersUsersList200Response(unittest.TestCase):
    """UsersUsersList200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UsersUsersList200Response:
        """Test UsersUsersList200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UsersUsersList200Response`
        """
        model = UsersUsersList200Response()
        if include_optional:
            return UsersUsersList200Response(
                count = 56,
                next = '',
                previous = '',
                results = [
                    openapi_client.models.user.User(
                        date_joined = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        display = '', 
                        email = '', 
                        first_name = '', 
                        groups = [
                            openapi_client.models.nested_group.NestedGroup(
                                display = '', 
                                id = 56, 
                                name = '0', 
                                url = '', )
                            ], 
                        id = 56, 
                        is_active = True, 
                        is_staff = True, 
                        last_name = '', 
                        password = '0', 
                        url = '', 
                        username = 'A0', )
                    ]
            )
        else:
            return UsersUsersList200Response(
                count = 56,
                results = [
                    openapi_client.models.user.User(
                        date_joined = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        display = '', 
                        email = '', 
                        first_name = '', 
                        groups = [
                            openapi_client.models.nested_group.NestedGroup(
                                display = '', 
                                id = 56, 
                                name = '0', 
                                url = '', )
                            ], 
                        id = 56, 
                        is_active = True, 
                        is_staff = True, 
                        last_name = '', 
                        password = '0', 
                        url = '', 
                        username = 'A0', )
                    ],
        )
        """

    def testUsersUsersList200Response(self):
        """Test UsersUsersList200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
