# coding: utf-8

"""
    NetBox API

    API to access NetBox

    The version of the OpenAPI document: 3.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.writable_device_type import WritableDeviceType

class TestWritableDeviceType(unittest.TestCase):
    """WritableDeviceType unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WritableDeviceType:
        """Test WritableDeviceType
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WritableDeviceType`
        """
        model = WritableDeviceType()
        if include_optional:
            return WritableDeviceType(
                airflow = 'front-to-rear',
                comments = '',
                created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                custom_fields = openapi_client.models.custom_fields.Custom fields(),
                description = '',
                device_count = 56,
                display = '',
                front_image = '',
                id = 56,
                is_full_depth = True,
                last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                manufacturer = 56,
                model = '0',
                part_number = '',
                rear_image = '',
                slug = 'z0',
                subdevice_role = 'parent',
                tags = [
                    openapi_client.models.nested_tag.NestedTag(
                        color = 'bf32530', 
                        display = '', 
                        id = 56, 
                        name = '0', 
                        slug = '0', 
                        url = '', )
                    ],
                u_height = 0,
                url = '',
                weight = 1.337,
                weight_unit = 'kg'
            )
        else:
            return WritableDeviceType(
                manufacturer = 56,
                model = '0',
                slug = 'z0',
        )
        """

    def testWritableDeviceType(self):
        """Test WritableDeviceType"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
