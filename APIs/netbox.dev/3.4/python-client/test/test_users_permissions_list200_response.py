# coding: utf-8

"""
    NetBox API

    API to access NetBox

    The version of the OpenAPI document: 3.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.users_permissions_list200_response import UsersPermissionsList200Response

class TestUsersPermissionsList200Response(unittest.TestCase):
    """UsersPermissionsList200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UsersPermissionsList200Response:
        """Test UsersPermissionsList200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UsersPermissionsList200Response`
        """
        model = UsersPermissionsList200Response()
        if include_optional:
            return UsersPermissionsList200Response(
                count = 56,
                next = '',
                previous = '',
                results = [
                    openapi_client.models.object_permission.ObjectPermission(
                        actions = [
                            '0'
                            ], 
                        constraints = openapi_client.models.constraints.Constraints(), 
                        description = '', 
                        display = '', 
                        enabled = True, 
                        groups = [
                            openapi_client.models.nested_group.NestedGroup(
                                display = '', 
                                id = 56, 
                                name = '0', 
                                url = '', )
                            ], 
                        id = 56, 
                        name = '0', 
                        object_types = [
                            ''
                            ], 
                        url = '', 
                        users = [
                            openapi_client.models.nested_user.NestedUser(
                                display = '', 
                                id = 56, 
                                url = '', 
                                username = 'A0', )
                            ], )
                    ]
            )
        else:
            return UsersPermissionsList200Response(
                count = 56,
                results = [
                    openapi_client.models.object_permission.ObjectPermission(
                        actions = [
                            '0'
                            ], 
                        constraints = openapi_client.models.constraints.Constraints(), 
                        description = '', 
                        display = '', 
                        enabled = True, 
                        groups = [
                            openapi_client.models.nested_group.NestedGroup(
                                display = '', 
                                id = 56, 
                                name = '0', 
                                url = '', )
                            ], 
                        id = 56, 
                        name = '0', 
                        object_types = [
                            ''
                            ], 
                        url = '', 
                        users = [
                            openapi_client.models.nested_user.NestedUser(
                                display = '', 
                                id = 56, 
                                url = '', 
                                username = 'A0', )
                            ], )
                    ],
        )
        """

    def testUsersPermissionsList200Response(self):
        """Test UsersPermissionsList200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
