# coding: utf-8

"""
    NetBox API

    API to access NetBox

    The version of the OpenAPI document: 3.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.writable_ip_address import WritableIPAddress

class TestWritableIPAddress(unittest.TestCase):
    """WritableIPAddress unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WritableIPAddress:
        """Test WritableIPAddress
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WritableIPAddress`
        """
        model = WritableIPAddress()
        if include_optional:
            return WritableIPAddress(
                address = '',
                assigned_object = openapi_client.models.assigned_object.Assigned object(),
                assigned_object_id = 0,
                assigned_object_type = '',
                comments = '',
                created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                custom_fields = openapi_client.models.custom_fields.Custom fields(),
                description = '',
                display = '',
                dns_name = '*.AMDTMv2D2ylmgd10Z3UB6UkJSISSB512iz2DiJy.O4IVP7YNsKQHh9BsaMPOiOuo3_QLOpkBmKIPOf2Flbsh.TpRS00PDvgoKGNXgxLHoPJE-_eVrdJNcY9CLxYxBbcfSJX.ZGSCF7dC-lSY-7ZlQJLW1_GNchKk5E.LDz1ctzsIY4oIgcl12VtuaSfj.mymTJfYkic17VJpcq1X6tjkH36lFYtIUw23vATP5cgpgctxW3q4fsZS5Uz-fvg2bA4mI-r1o.bd3s4Kdu4Q19mfvL0A7Rpn3Av26g7OJWsQ0WBkWv3CuuRrMkJf5gzLvv2wYTNPqhvo.bcy8QU60_1u6BhIo-27B5JIFoxlv9-BJxhRRelW6lINX6D1Elv8Z4qYvYNwb3t4awG.-6yh0-gMEzQ8uhi90kNEaHxs5LWBoOt.2fDnfouEM59JJWYHa1Ya1DpwFCTpIA0Gnqa9PQ0lvjCR3UYpt1vrS1pQR1OzxrQfgrgcyvfHmHL.bSaRv9kZ_KaNGkIi19s7KrTB.8qCkWG3n.JgXYUf-2g1bLoF4Q.SDvsQvki_Gvu3.SglBi._kTqWft7LgtQq8DkTxH9-GEgnhdskTUa-JGB99tBTH1m8LyVjqKCRWp6X.1rwkzrnn4h0XoK7cYVKPWx4kXAhG_GEdV9fi1LUY2eBXIK-aaN.-IAoUxtYKQpsS2HM0cvxvy88aJmQRbOi5pM9K4SWNKj0UeVyhnBjVWguY2vNQIw3._aRMF2Tm7SelZBdyPOLRs2IImu0zJ-sEvqrLoPmgi4JrQNmT_4QLVs.oSHjB6pC-1mwGXNIZ-mK8w9K1xfp9OikxJ6eiOUAchnVGrwqvIGWHJ7Z1SeTeQr7h2GhD.ufc8pTDOUcgYQwyEct13aGy9ShDDH49uy_cuS1qD.5br69Zb9J7ztaciXoL3UMxQsS4RhgPVNkMuBNIrWv_vT6kENTnbd0jYevK4Igno2LdfSDI1Cs6huybGb1zEpVJcz_sYPOWoI.540Y2OLcYufJVmh2PNuin04QumvvjetJ2wYXno2W6zwIrDKlbs9CPExuzXJjOmo.9hu5QjJ_xMDMiy-rwLYYugfVA0tbOL0WzdgU9sGpVxk-V0XsgBCaMb6w5WmQk2AHCmB9lVwewmj.04um-gQsMcYoZx6RzkDL1MAzcQRnYq9jshsHLjup_Xq15S5JIFlA8s7VLbfJ8CdU1--K_bbEzgXW5tGc11HJjfP.9aPBMPn9vOOHdKkQ6_InnGXC1663IOeomDvz9sa4XpvFxFUjA2VrtPYqBpPg.YJXJXx50oGq47BDC1bkGeAny7jvrmnVoFMKNnHvQ4AYmlmF-v4iCmrtetgOVivKk30FKcbp2YLd7pVPyS_oco2NX0KaIUr.IkqdrU12DLntCJlzZRgbiwPbeBEaozEh0SiWTzo35ic3_fxCNJJH7Ifx4drCfHNmicDnRnqH2lvbFg3LEqe7.',
                family = '',
                id = 56,
                last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                nat_inside = 56,
                nat_outside = [
                    openapi_client.models.nested_ip_address.NestedIPAddress(
                        address = '', 
                        display = '', 
                        family = 56, 
                        id = 56, 
                        url = '', )
                    ],
                role = 'loopback',
                status = 'active',
                tags = [
                    openapi_client.models.nested_tag.NestedTag(
                        color = 'bf32530', 
                        display = '', 
                        id = 56, 
                        name = '0', 
                        slug = '0', 
                        url = '', )
                    ],
                tenant = 56,
                url = '',
                vrf = 56
            )
        else:
            return WritableIPAddress(
                address = '',
        )
        """

    def testWritableIPAddress(self):
        """Test WritableIPAddress"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
