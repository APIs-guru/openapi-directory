# coding: utf-8

"""
    NetBox API

    API to access NetBox

    The version of the OpenAPI document: 3.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.virtualization_clusters_list200_response import VirtualizationClustersList200Response

class TestVirtualizationClustersList200Response(unittest.TestCase):
    """VirtualizationClustersList200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VirtualizationClustersList200Response:
        """Test VirtualizationClustersList200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VirtualizationClustersList200Response`
        """
        model = VirtualizationClustersList200Response()
        if include_optional:
            return VirtualizationClustersList200Response(
                count = 56,
                next = '',
                previous = '',
                results = [
                    openapi_client.models.cluster.Cluster(
                        comments = '', 
                        created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        custom_fields = openapi_client.models.custom_fields.Custom fields(), 
                        description = '', 
                        device_count = 56, 
                        display = '', 
                        group = openapi_client.models.nested_cluster_group.NestedClusterGroup(
                            cluster_count = 56, 
                            display = '', 
                            id = 56, 
                            name = '0', 
                            slug = 'z0', 
                            url = '', ), 
                        id = 56, 
                        last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        name = '0', 
                        site = openapi_client.models.nested_site.NestedSite(
                            display = '', 
                            id = 56, 
                            name = '0', 
                            slug = 'z0', 
                            url = '', ), 
                        status = openapi_client.models.status.Status(
                            label = 'Planned', 
                            value = 'planned', ), 
                        tags = [
                            openapi_client.models.nested_tag.NestedTag(
                                color = 'bf32530', 
                                display = '', 
                                id = 56, 
                                name = '0', 
                                slug = '0', 
                                url = '', )
                            ], 
                        tenant = openapi_client.models.nested_tenant.NestedTenant(
                            display = '', 
                            id = 56, 
                            name = '0', 
                            slug = 'z0', 
                            url = '', ), 
                        type = openapi_client.models.nested_cluster_type.NestedClusterType(
                            cluster_count = 56, 
                            display = '', 
                            id = 56, 
                            name = '0', 
                            slug = 'z0', 
                            url = '', ), 
                        url = '', 
                        virtualmachine_count = 56, )
                    ]
            )
        else:
            return VirtualizationClustersList200Response(
                count = 56,
                results = [
                    openapi_client.models.cluster.Cluster(
                        comments = '', 
                        created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        custom_fields = openapi_client.models.custom_fields.Custom fields(), 
                        description = '', 
                        device_count = 56, 
                        display = '', 
                        group = openapi_client.models.nested_cluster_group.NestedClusterGroup(
                            cluster_count = 56, 
                            display = '', 
                            id = 56, 
                            name = '0', 
                            slug = 'z0', 
                            url = '', ), 
                        id = 56, 
                        last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        name = '0', 
                        site = openapi_client.models.nested_site.NestedSite(
                            display = '', 
                            id = 56, 
                            name = '0', 
                            slug = 'z0', 
                            url = '', ), 
                        status = openapi_client.models.status.Status(
                            label = 'Planned', 
                            value = 'planned', ), 
                        tags = [
                            openapi_client.models.nested_tag.NestedTag(
                                color = 'bf32530', 
                                display = '', 
                                id = 56, 
                                name = '0', 
                                slug = '0', 
                                url = '', )
                            ], 
                        tenant = openapi_client.models.nested_tenant.NestedTenant(
                            display = '', 
                            id = 56, 
                            name = '0', 
                            slug = 'z0', 
                            url = '', ), 
                        type = openapi_client.models.nested_cluster_type.NestedClusterType(
                            cluster_count = 56, 
                            display = '', 
                            id = 56, 
                            name = '0', 
                            slug = 'z0', 
                            url = '', ), 
                        url = '', 
                        virtualmachine_count = 56, )
                    ],
        )
        """

    def testVirtualizationClustersList200Response(self):
        """Test VirtualizationClustersList200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
