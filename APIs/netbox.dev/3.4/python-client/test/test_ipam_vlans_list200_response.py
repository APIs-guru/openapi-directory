# coding: utf-8

"""
    NetBox API

    API to access NetBox

    The version of the OpenAPI document: 3.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.ipam_vlans_list200_response import IpamVlansList200Response

class TestIpamVlansList200Response(unittest.TestCase):
    """IpamVlansList200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IpamVlansList200Response:
        """Test IpamVlansList200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IpamVlansList200Response`
        """
        model = IpamVlansList200Response()
        if include_optional:
            return IpamVlansList200Response(
                count = 56,
                next = '',
                previous = '',
                results = [
                    openapi_client.models.vlan.VLAN(
                        comments = '', 
                        created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        custom_fields = openapi_client.models.custom_fields.Custom fields(), 
                        description = '', 
                        display = '', 
                        group = openapi_client.models.nested_vlan_group.NestedVLANGroup(
                            display = '', 
                            id = 56, 
                            name = '0', 
                            slug = 'z0', 
                            url = '', 
                            vlan_count = 56, ), 
                        id = 56, 
                        l2vpn_termination = openapi_client.models.nested_l2_vpn_termination.NestedL2VPNTermination(
                            display = '', 
                            id = 56, 
                            l2vpn = openapi_client.models.nested_l2_vpn.NestedL2VPN(
                                display = '', 
                                id = 56, 
                                identifier = -9223372036854776000, 
                                name = '0', 
                                slug = 'z0', 
                                type = 'vpws', 
                                url = '', ), 
                            url = '', ), 
                        last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        name = '0', 
                        prefix_count = 56, 
                        role = openapi_client.models.nested_role.NestedRole(
                            display = '', 
                            id = 56, 
                            name = '0', 
                            prefix_count = 56, 
                            slug = 'z0', 
                            url = '', 
                            vlan_count = 56, ), 
                        site = openapi_client.models.nested_site.NestedSite(
                            display = '', 
                            id = 56, 
                            name = '0', 
                            slug = 'z0', 
                            url = '', ), 
                        status = openapi_client.models.status.Status(
                            label = 'Active', 
                            value = 'active', ), 
                        tags = [
                            openapi_client.models.nested_tag.NestedTag(
                                color = 'bf32530', 
                                display = '', 
                                id = 56, 
                                name = '0', 
                                slug = '0', 
                                url = '', )
                            ], 
                        tenant = openapi_client.models.nested_tenant.NestedTenant(
                            display = '', 
                            id = 56, 
                            name = '0', 
                            slug = 'z0', 
                            url = '', ), 
                        url = '', 
                        vid = 1, )
                    ]
            )
        else:
            return IpamVlansList200Response(
                count = 56,
                results = [
                    openapi_client.models.vlan.VLAN(
                        comments = '', 
                        created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        custom_fields = openapi_client.models.custom_fields.Custom fields(), 
                        description = '', 
                        display = '', 
                        group = openapi_client.models.nested_vlan_group.NestedVLANGroup(
                            display = '', 
                            id = 56, 
                            name = '0', 
                            slug = 'z0', 
                            url = '', 
                            vlan_count = 56, ), 
                        id = 56, 
                        l2vpn_termination = openapi_client.models.nested_l2_vpn_termination.NestedL2VPNTermination(
                            display = '', 
                            id = 56, 
                            l2vpn = openapi_client.models.nested_l2_vpn.NestedL2VPN(
                                display = '', 
                                id = 56, 
                                identifier = -9223372036854776000, 
                                name = '0', 
                                slug = 'z0', 
                                type = 'vpws', 
                                url = '', ), 
                            url = '', ), 
                        last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        name = '0', 
                        prefix_count = 56, 
                        role = openapi_client.models.nested_role.NestedRole(
                            display = '', 
                            id = 56, 
                            name = '0', 
                            prefix_count = 56, 
                            slug = 'z0', 
                            url = '', 
                            vlan_count = 56, ), 
                        site = openapi_client.models.nested_site.NestedSite(
                            display = '', 
                            id = 56, 
                            name = '0', 
                            slug = 'z0', 
                            url = '', ), 
                        status = openapi_client.models.status.Status(
                            label = 'Active', 
                            value = 'active', ), 
                        tags = [
                            openapi_client.models.nested_tag.NestedTag(
                                color = 'bf32530', 
                                display = '', 
                                id = 56, 
                                name = '0', 
                                slug = '0', 
                                url = '', )
                            ], 
                        tenant = openapi_client.models.nested_tenant.NestedTenant(
                            display = '', 
                            id = 56, 
                            name = '0', 
                            slug = 'z0', 
                            url = '', ), 
                        url = '', 
                        vid = 1, )
                    ],
        )
        """

    def testIpamVlansList200Response(self):
        """Test IpamVlansList200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
