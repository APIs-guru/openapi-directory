# coding: utf-8

"""
    NetBox API

    API to access NetBox

    The version of the OpenAPI document: 3.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.writable_cable import WritableCable

class TestWritableCable(unittest.TestCase):
    """WritableCable unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WritableCable:
        """Test WritableCable
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WritableCable`
        """
        model = WritableCable()
        if include_optional:
            return WritableCable(
                a_terminations = [
                    openapi_client.models.generic_object.GenericObject(
                        object = openapi_client.models.object.Object(), 
                        object_id = 56, 
                        object_type = '', )
                    ],
                b_terminations = [
                    openapi_client.models.generic_object.GenericObject(
                        object = openapi_client.models.object.Object(), 
                        object_id = 56, 
                        object_type = '', )
                    ],
                color = 'bf3253',
                comments = '',
                created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                custom_fields = openapi_client.models.custom_fields.Custom fields(),
                description = '',
                display = '',
                id = 56,
                label = '',
                last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                length = 1.337,
                length_unit = 'km',
                status = 'connected',
                tags = [
                    openapi_client.models.nested_tag.NestedTag(
                        color = 'bf32530', 
                        display = '', 
                        id = 56, 
                        name = '0', 
                        slug = '0', 
                        url = '', )
                    ],
                tenant = 56,
                type = 'cat3',
                url = ''
            )
        else:
            return WritableCable(
        )
        """

    def testWritableCable(self):
        """Test WritableCable"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
