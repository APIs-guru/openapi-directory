# coding: utf-8

"""
    NetBox API

    API to access NetBox

    The version of the OpenAPI document: 3.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.wireless_lan import WirelessLAN

class TestWirelessLAN(unittest.TestCase):
    """WirelessLAN unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WirelessLAN:
        """Test WirelessLAN
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WirelessLAN`
        """
        model = WirelessLAN()
        if include_optional:
            return WirelessLAN(
                auth_cipher = openapi_client.models.auth_cipher.Auth cipher(
                    label = 'Auto', 
                    value = 'auto', ),
                auth_psk = '',
                auth_type = openapi_client.models.auth_type.Auth type(
                    label = 'Open', 
                    value = 'open', ),
                comments = '',
                created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                custom_fields = openapi_client.models.custom_fields.Custom fields(),
                description = '',
                display = '',
                group = openapi_client.models.nested_wireless_lan_group.NestedWirelessLANGroup(
                    _depth = 56, 
                    display = '', 
                    id = 56, 
                    name = '0', 
                    slug = 'z0', 
                    url = '', 
                    wirelesslan_count = 56, ),
                id = 56,
                last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                ssid = '0',
                status = openapi_client.models.status.Status(
                    label = 'Active', 
                    value = 'active', ),
                tags = [
                    openapi_client.models.nested_tag.NestedTag(
                        color = 'bf32530', 
                        display = '', 
                        id = 56, 
                        name = '0', 
                        slug = '0', 
                        url = '', )
                    ],
                tenant = openapi_client.models.nested_tenant.NestedTenant(
                    display = '', 
                    id = 56, 
                    name = '0', 
                    slug = 'z0', 
                    url = '', ),
                url = '',
                vlan = openapi_client.models.nested_vlan.NestedVLAN(
                    display = '', 
                    id = 56, 
                    name = '0', 
                    url = '', 
                    vid = 1, )
            )
        else:
            return WirelessLAN(
                ssid = '0',
        )
        """

    def testWirelessLAN(self):
        """Test WirelessLAN"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
