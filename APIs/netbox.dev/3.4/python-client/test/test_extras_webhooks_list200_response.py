# coding: utf-8

"""
    NetBox API

    API to access NetBox

    The version of the OpenAPI document: 3.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.extras_webhooks_list200_response import ExtrasWebhooksList200Response

class TestExtrasWebhooksList200Response(unittest.TestCase):
    """ExtrasWebhooksList200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ExtrasWebhooksList200Response:
        """Test ExtrasWebhooksList200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ExtrasWebhooksList200Response`
        """
        model = ExtrasWebhooksList200Response()
        if include_optional:
            return ExtrasWebhooksList200Response(
                count = 56,
                next = '',
                previous = '',
                results = [
                    openapi_client.models.webhook.Webhook(
                        additional_headers = '', 
                        body_template = '', 
                        ca_file_path = '', 
                        conditions = openapi_client.models.conditions.Conditions(), 
                        content_types = [
                            ''
                            ], 
                        created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        display = '', 
                        enabled = True, 
                        http_content_type = '0', 
                        http_method = 'GET', 
                        id = 56, 
                        last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        name = '0', 
                        payload_url = '0', 
                        secret = '', 
                        ssl_verification = True, 
                        type_create = True, 
                        type_delete = True, 
                        type_update = True, 
                        url = '', )
                    ]
            )
        else:
            return ExtrasWebhooksList200Response(
                count = 56,
                results = [
                    openapi_client.models.webhook.Webhook(
                        additional_headers = '', 
                        body_template = '', 
                        ca_file_path = '', 
                        conditions = openapi_client.models.conditions.Conditions(), 
                        content_types = [
                            ''
                            ], 
                        created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        display = '', 
                        enabled = True, 
                        http_content_type = '0', 
                        http_method = 'GET', 
                        id = 56, 
                        last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        name = '0', 
                        payload_url = '0', 
                        secret = '', 
                        ssl_verification = True, 
                        type_create = True, 
                        type_delete = True, 
                        type_update = True, 
                        url = '', )
                    ],
        )
        """

    def testExtrasWebhooksList200Response(self):
        """Test ExtrasWebhooksList200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
