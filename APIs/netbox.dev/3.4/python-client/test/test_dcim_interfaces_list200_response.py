# coding: utf-8

"""
    NetBox API

    API to access NetBox

    The version of the OpenAPI document: 3.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.dcim_interfaces_list200_response import DcimInterfacesList200Response

class TestDcimInterfacesList200Response(unittest.TestCase):
    """DcimInterfacesList200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DcimInterfacesList200Response:
        """Test DcimInterfacesList200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DcimInterfacesList200Response`
        """
        model = DcimInterfacesList200Response()
        if include_optional:
            return DcimInterfacesList200Response(
                count = 56,
                next = '',
                previous = '',
                results = [
                    openapi_client.models.interface.Interface(
                        _occupied = True, 
                        bridge = openapi_client.models.nested_interface.NestedInterface(
                            _occupied = True, 
                            cable = 56, 
                            device = openapi_client.models.nested_device.NestedDevice(
                                display = '', 
                                id = 56, 
                                name = '', 
                                url = '', ), 
                            display = '', 
                            id = 56, 
                            name = '0', 
                            url = '', ), 
                        cable = openapi_client.models.nested_cable.NestedCable(
                            display = '', 
                            id = 56, 
                            label = '', 
                            url = '', ), 
                        cable_end = '0', 
                        connected_endpoints = [
                            ''
                            ], 
                        connected_endpoints_reachable = True, 
                        connected_endpoints_type = '', 
                        count_fhrp_groups = 56, 
                        count_ipaddresses = 56, 
                        created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        custom_fields = openapi_client.models.custom_fields.Custom fields(), 
                        description = '', 
                        device = openapi_client.models.nested_device.NestedDevice(
                            display = '', 
                            id = 56, 
                            name = '', 
                            url = '', ), 
                        display = '', 
                        duplex = openapi_client.models.duplex.Duplex(
                            label = 'Half', 
                            value = 'half', ), 
                        enabled = True, 
                        id = 56, 
                        l2vpn_termination = openapi_client.models.nested_l2_vpn_termination.NestedL2VPNTermination(
                            display = '', 
                            id = 56, 
                            l2vpn = openapi_client.models.nested_l2_vpn.NestedL2VPN(
                                display = '', 
                                id = 56, 
                                identifier = -9223372036854776000, 
                                name = '0', 
                                slug = 'z0', 
                                type = 'vpws', 
                                url = '', ), 
                            url = '', ), 
                        label = '', 
                        lag = openapi_client.models.nested_interface.NestedInterface(
                            _occupied = True, 
                            display = '', 
                            id = 56, 
                            name = '0', 
                            url = '', ), 
                        last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        link_peers = [
                            ''
                            ], 
                        link_peers_type = '', 
                        mac_address = '', 
                        mark_connected = True, 
                        mgmt_only = True, 
                        mode = openapi_client.models.mode.Mode(
                            label = 'Access', 
                            value = 'access', ), 
                        module = openapi_client.models.component_nested_module.ComponentNestedModule(
                            device = 56, 
                            display = '', 
                            id = 56, 
                            module_bay = openapi_client.models.module_nested_module_bay.ModuleNestedModuleBay(
                                display = '', 
                                id = 56, 
                                name = '0', 
                                url = '', ), 
                            url = '', ), 
                        mtu = 1, 
                        name = '0', 
                        parent = , 
                        poe_mode = openapi_client.models.poe_mode.Poe mode(
                            label = 'PD', 
                            value = 'pd', ), 
                        poe_type = openapi_client.models.poe_type.Poe type(
                            label = '802.3af (Type 1)', 
                            value = 'type1-ieee802.3af', ), 
                        rf_channel = openapi_client.models.rf_channel.Rf channel(
                            label = '1 (2412 MHz)', 
                            value = '2.4g-1-2412-22', ), 
                        rf_channel_frequency = 1.337, 
                        rf_channel_width = 1.337, 
                        rf_role = openapi_client.models.rf_role.Rf role(
                            label = 'Access point', 
                            value = 'ap', ), 
                        speed = 0, 
                        tagged_vlans = [
                            openapi_client.models.nested_vlan.NestedVLAN(
                                display = '', 
                                id = 56, 
                                name = '0', 
                                url = '', 
                                vid = 1, )
                            ], 
                        tags = [
                            openapi_client.models.nested_tag.NestedTag(
                                color = 'bf32530', 
                                display = '', 
                                id = 56, 
                                name = '0', 
                                slug = '0', 
                                url = '', )
                            ], 
                        tx_power = 0, 
                        type = openapi_client.models.type.Type(
                            label = 'Virtual', 
                            value = 'virtual', ), 
                        untagged_vlan = openapi_client.models.nested_vlan.NestedVLAN(
                            display = '', 
                            id = 56, 
                            name = '0', 
                            url = '', 
                            vid = 1, ), 
                        url = '', 
                        vdcs = [
                            openapi_client.models.nested_virtual_device_context.NestedVirtualDeviceContext(
                                device = , 
                                display = '', 
                                id = 56, 
                                identifier = 0, 
                                name = '0', 
                                url = '', )
                            ], 
                        vrf = openapi_client.models.nested_vrf.NestedVRF(
                            display = '', 
                            id = 56, 
                            name = '0', 
                            prefix_count = 56, 
                            rd = '', 
                            url = '', ), 
                        wireless_lans = [
                            openapi_client.models.nested_wireless_lan.NestedWirelessLAN(
                                display = '', 
                                id = 56, 
                                ssid = '0', 
                                url = '', )
                            ], 
                        wireless_link = openapi_client.models.nested_wireless_link.NestedWirelessLink(
                            display = '', 
                            id = 56, 
                            ssid = '', 
                            url = '', ), 
                        wwn = '', )
                    ]
            )
        else:
            return DcimInterfacesList200Response(
                count = 56,
                results = [
                    openapi_client.models.interface.Interface(
                        _occupied = True, 
                        bridge = openapi_client.models.nested_interface.NestedInterface(
                            _occupied = True, 
                            cable = 56, 
                            device = openapi_client.models.nested_device.NestedDevice(
                                display = '', 
                                id = 56, 
                                name = '', 
                                url = '', ), 
                            display = '', 
                            id = 56, 
                            name = '0', 
                            url = '', ), 
                        cable = openapi_client.models.nested_cable.NestedCable(
                            display = '', 
                            id = 56, 
                            label = '', 
                            url = '', ), 
                        cable_end = '0', 
                        connected_endpoints = [
                            ''
                            ], 
                        connected_endpoints_reachable = True, 
                        connected_endpoints_type = '', 
                        count_fhrp_groups = 56, 
                        count_ipaddresses = 56, 
                        created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        custom_fields = openapi_client.models.custom_fields.Custom fields(), 
                        description = '', 
                        device = openapi_client.models.nested_device.NestedDevice(
                            display = '', 
                            id = 56, 
                            name = '', 
                            url = '', ), 
                        display = '', 
                        duplex = openapi_client.models.duplex.Duplex(
                            label = 'Half', 
                            value = 'half', ), 
                        enabled = True, 
                        id = 56, 
                        l2vpn_termination = openapi_client.models.nested_l2_vpn_termination.NestedL2VPNTermination(
                            display = '', 
                            id = 56, 
                            l2vpn = openapi_client.models.nested_l2_vpn.NestedL2VPN(
                                display = '', 
                                id = 56, 
                                identifier = -9223372036854776000, 
                                name = '0', 
                                slug = 'z0', 
                                type = 'vpws', 
                                url = '', ), 
                            url = '', ), 
                        label = '', 
                        lag = openapi_client.models.nested_interface.NestedInterface(
                            _occupied = True, 
                            display = '', 
                            id = 56, 
                            name = '0', 
                            url = '', ), 
                        last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        link_peers = [
                            ''
                            ], 
                        link_peers_type = '', 
                        mac_address = '', 
                        mark_connected = True, 
                        mgmt_only = True, 
                        mode = openapi_client.models.mode.Mode(
                            label = 'Access', 
                            value = 'access', ), 
                        module = openapi_client.models.component_nested_module.ComponentNestedModule(
                            device = 56, 
                            display = '', 
                            id = 56, 
                            module_bay = openapi_client.models.module_nested_module_bay.ModuleNestedModuleBay(
                                display = '', 
                                id = 56, 
                                name = '0', 
                                url = '', ), 
                            url = '', ), 
                        mtu = 1, 
                        name = '0', 
                        parent = , 
                        poe_mode = openapi_client.models.poe_mode.Poe mode(
                            label = 'PD', 
                            value = 'pd', ), 
                        poe_type = openapi_client.models.poe_type.Poe type(
                            label = '802.3af (Type 1)', 
                            value = 'type1-ieee802.3af', ), 
                        rf_channel = openapi_client.models.rf_channel.Rf channel(
                            label = '1 (2412 MHz)', 
                            value = '2.4g-1-2412-22', ), 
                        rf_channel_frequency = 1.337, 
                        rf_channel_width = 1.337, 
                        rf_role = openapi_client.models.rf_role.Rf role(
                            label = 'Access point', 
                            value = 'ap', ), 
                        speed = 0, 
                        tagged_vlans = [
                            openapi_client.models.nested_vlan.NestedVLAN(
                                display = '', 
                                id = 56, 
                                name = '0', 
                                url = '', 
                                vid = 1, )
                            ], 
                        tags = [
                            openapi_client.models.nested_tag.NestedTag(
                                color = 'bf32530', 
                                display = '', 
                                id = 56, 
                                name = '0', 
                                slug = '0', 
                                url = '', )
                            ], 
                        tx_power = 0, 
                        type = openapi_client.models.type.Type(
                            label = 'Virtual', 
                            value = 'virtual', ), 
                        untagged_vlan = openapi_client.models.nested_vlan.NestedVLAN(
                            display = '', 
                            id = 56, 
                            name = '0', 
                            url = '', 
                            vid = 1, ), 
                        url = '', 
                        vdcs = [
                            openapi_client.models.nested_virtual_device_context.NestedVirtualDeviceContext(
                                device = , 
                                display = '', 
                                id = 56, 
                                identifier = 0, 
                                name = '0', 
                                url = '', )
                            ], 
                        vrf = openapi_client.models.nested_vrf.NestedVRF(
                            display = '', 
                            id = 56, 
                            name = '0', 
                            prefix_count = 56, 
                            rd = '', 
                            url = '', ), 
                        wireless_lans = [
                            openapi_client.models.nested_wireless_lan.NestedWirelessLAN(
                                display = '', 
                                id = 56, 
                                ssid = '0', 
                                url = '', )
                            ], 
                        wireless_link = openapi_client.models.nested_wireless_link.NestedWirelessLink(
                            display = '', 
                            id = 56, 
                            ssid = '', 
                            url = '', ), 
                        wwn = '', )
                    ],
        )
        """

    def testDcimInterfacesList200Response(self):
        """Test DcimInterfacesList200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
