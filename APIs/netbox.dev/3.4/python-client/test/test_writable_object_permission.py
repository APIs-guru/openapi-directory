# coding: utf-8

"""
    NetBox API

    API to access NetBox

    The version of the OpenAPI document: 3.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.writable_object_permission import WritableObjectPermission

class TestWritableObjectPermission(unittest.TestCase):
    """WritableObjectPermission unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WritableObjectPermission:
        """Test WritableObjectPermission
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WritableObjectPermission`
        """
        model = WritableObjectPermission()
        if include_optional:
            return WritableObjectPermission(
                actions = [
                    '0'
                    ],
                constraints = openapi_client.models.constraints.Constraints(),
                description = '',
                display = '',
                enabled = True,
                groups = [
                    56
                    ],
                id = 56,
                name = '0',
                object_types = [
                    ''
                    ],
                url = '',
                users = [
                    56
                    ]
            )
        else:
            return WritableObjectPermission(
                actions = [
                    '0'
                    ],
                name = '0',
                object_types = [
                    ''
                    ],
        )
        """

    def testWritableObjectPermission(self):
        """Test WritableObjectPermission"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
