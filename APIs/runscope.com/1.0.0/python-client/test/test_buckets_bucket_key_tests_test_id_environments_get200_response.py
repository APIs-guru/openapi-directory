# coding: utf-8

"""
    Runscope API

    Manage Runscope programmatically.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.buckets_bucket_key_tests_test_id_environments_get200_response import BucketsBucketKeyTestsTestIdEnvironmentsGet200Response

class TestBucketsBucketKeyTestsTestIdEnvironmentsGet200Response(unittest.TestCase):
    """BucketsBucketKeyTestsTestIdEnvironmentsGet200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BucketsBucketKeyTestsTestIdEnvironmentsGet200Response:
        """Test BucketsBucketKeyTestsTestIdEnvironmentsGet200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BucketsBucketKeyTestsTestIdEnvironmentsGet200Response`
        """
        model = BucketsBucketKeyTestsTestIdEnvironmentsGet200Response()
        if include_optional:
            return BucketsBucketKeyTestsTestIdEnvironmentsGet200Response(
                data = [
                    openapi_client.models.environment.Environment(
                        auth = '', 
                        client_certificate = '', 
                        emails = openapi_client.models.emails.emails(), 
                        exported_at = 56, 
                        headers = openapi_client.models.headers.headers(), 
                        id = '', 
                        initial_script_hash = '', 
                        initial_variables = openapi_client.models.initial_variables.initial_variables(), 
                        integrations = [
                            openapi_client.models.integration.Integration(
                                description = '', 
                                id = '', 
                                type = '', 
                                uuid = '', )
                            ], 
                        name = '', 
                        parent_environment_id = '', 
                        preserve_cookies = True, 
                        regions = [
                            ''
                            ], 
                        remote_agents = [
                            openapi_client.models.agent.Agent(
                                agent_id = '', 
                                name = '', 
                                version = '', )
                            ], 
                        retry_on_failure = True, 
                        script = '', 
                        script_library = [
                            ''
                            ], 
                        stop_on_failure = True, 
                        test_id = '', 
                        verify_ssl = True, 
                        version = '', 
                        webhooks = '', )
                    ],
                meta = openapi_client.models.meta.Meta(
                    status = '', )
            )
        else:
            return BucketsBucketKeyTestsTestIdEnvironmentsGet200Response(
        )
        """

    def testBucketsBucketKeyTestsTestIdEnvironmentsGet200Response(self):
        """Test BucketsBucketKeyTestsTestIdEnvironmentsGet200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
