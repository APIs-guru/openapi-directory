# coding: utf-8

"""
    OpenCage Geocoder

    Worldwide forward and reverse geocoding

    The version of the OpenAPI document: 1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.response import Response

class TestResponse(unittest.TestCase):
    """Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Response:
        """Test Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Response`
        """
        model = Response()
        if include_optional:
            return Response(
                documentation = '',
                licenses = [
                    openapi_client.models.response_licenses_inner.Response_licenses_inner(
                        name = '', 
                        url = '', )
                    ],
                rate = openapi_client.models.response_rate.Response_rate(
                    limit = 56, 
                    remaining = 56, 
                    reset = 56, ),
                results = [
                    openapi_client.models.response_results_inner.Response_results_inner(
                        annotations = openapi_client.models.annotations.annotations(), 
                        bounds = openapi_client.models.response_results_inner_bounds.Response_results_inner_bounds(
                            northeast = openapi_client.models.lat_lng.LatLng(
                                lat = 1.337, 
                                lng = 1.337, ), 
                            southwest = openapi_client.models.lat_lng.LatLng(
                                lat = 1.337, 
                                lng = 1.337, ), ), 
                        components = openapi_client.models.components.components(), 
                        confidence = 56, 
                        formatted = '', 
                        geometry = , )
                    ],
                status = openapi_client.models.response_status.Response_status(
                    code = 56, 
                    message = '', ),
                stay_informed = openapi_client.models.response_stay_informed.Response_stay_informed(
                    blog = '', 
                    twitter = '', ),
                thanks = '',
                timestamp = openapi_client.models.response_timestamp.Response_timestamp(
                    created_http = '', 
                    created_unix = 56, ),
                total_results = 56
            )
        else:
            return Response(
        )
        """

    def testResponse(self):
        """Test Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
