# coding: utf-8

"""
    Marketcheck APIs

    One API serving data spanned across multiple verticals

    The version of the OpenAPI document: 2.01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.uk_base_listing import UKBaseListing

class TestUKBaseListing(unittest.TestCase):
    """UKBaseListing unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UKBaseListing:
        """Test UKBaseListing
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UKBaseListing`
        """
        model = UKBaseListing()
        if include_optional:
            return UKBaseListing(
                base_ext_color = '',
                base_int_color = '',
                build = openapi_client.models.build.Build(
                    antibrake_sys = '', 
                    body_subtype = '', 
                    body_type = '', 
                    city_miles = '', 
                    city_mpg = 56, 
                    cylinders = 56, 
                    doors = 56, 
                    drivetrain = '', 
                    engine = '', 
                    engine_aspiration = '', 
                    engine_block = '', 
                    engine_measure = '', 
                    engine_size = 1.337, 
                    fuel_type = '', 
                    highway_miles = '', 
                    highway_mpg = 56, 
                    made_in = '', 
                    make = '', 
                    model = '', 
                    opt_seating = '', 
                    overall_height = '', 
                    overall_length = '', 
                    overall_width = '', 
                    powertrain_type = '', 
                    short_trim = '', 
                    std_seating = '', 
                    steering_type = '', 
                    tank_size = '', 
                    transmission = '', 
                    trim = '', 
                    trim_r = '', 
                    vehicle_type = '', 
                    year = 56, ),
                car_location = openapi_client.models.car_location.CarLocation(
                    city = '', 
                    county = '', 
                    latitude = '', 
                    longitude = '', 
                    seller_name = '', 
                    street = '', 
                    zip = '', ),
                carfax_1_owner = True,
                carfax_clean_title = True,
                co2_emissions = '',
                data_source = '',
                dealer = openapi_client.models.nest_dealer.NestDealer(
                    city = '', 
                    country = '', 
                    county = '', 
                    dealer_type = '', 
                    dealership_group_name = '', 
                    id = 56, 
                    latitude = '', 
                    longitude = '', 
                    msa_code = '', 
                    name = '', 
                    phone = '', 
                    seller_email = '', 
                    state = '', 
                    street = '', 
                    website = '', 
                    zip = '', ),
                dist = 1.337,
                dom = 56,
                dom_180 = 56,
                dom_active = 56,
                exterior_color = '',
                financing_options = [
                    openapi_client.models.listing_finance.ListingFinance(
                        down_payment = 1.337, 
                        down_payment_percentage = 1.337, 
                        estimated_monthly_payment = 1.337, 
                        loan_apr = 1.337, 
                        loan_term = 56, )
                    ],
                first_seen_at = 56,
                first_seen_at_date = '',
                heading = '',
                id = '',
                in_transit = True,
                insurance_group = '',
                interior_color = '',
                inventory_type = '',
                is_certified = 56,
                is_translated = True,
                last_seen_at = 56,
                last_seen_at_date = '',
                leasing_options = [
                    openapi_client.models.listing_lease.ListingLease(
                        down_payment = 1.337, 
                        estimated_monthly_payment = 1.337, 
                        lease_term = 56, )
                    ],
                media = openapi_client.models.listing_nest_media.ListingNestMedia(
                    photo_links = [
                        ''
                        ], 
                    photo_links_cached = [
                        ''
                        ], ),
                miles = 56,
                model_code = '',
                msrp = 56,
                num_owners = '',
                price = 56,
                price_change_percent = 1.337,
                ref_miles = '',
                ref_miles_dt = 56,
                ref_price = '',
                ref_price_dt = 56,
                scraped_at = 1.337,
                scraped_at_date = '',
                seller_type = '',
                source = '',
                stock_no = '',
                title_type = '',
                uvc_id = '',
                vdp_url = '',
                vehicle_registration_mark = ''
            )
        else:
            return UKBaseListing(
        )
        """

    def testUKBaseListing(self):
        """Test UKBaseListing"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
