# coding: utf-8

"""
    Marketcheck APIs

    One API serving data spanned across multiple verticals

    The version of the OpenAPI document: 2.01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.depreciation_point import DepreciationPoint

class TestDepreciationPoint(unittest.TestCase):
    """DepreciationPoint unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DepreciationPoint:
        """Test DepreciationPoint
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DepreciationPoint`
        """
        model = DepreciationPoint()
        if include_optional:
            return DepreciationPoint(
                similar_models = [
                    openapi_client.models.depreciation_stats.DepreciationStats(
                        current_value = 1.337, 
                        five_year_from_now = 1.337, 
                        five_year_from_now_percent = 1.337, 
                        name = '', 
                        one_year_from_now = 1.337, 
                        one_year_from_now_percent = 1.337, 
                        two_year_from_now = 1.337, 
                        two_year_from_now_percent = 1.337, )
                    ]
            )
        else:
            return DepreciationPoint(
        )
        """

    def testDepreciationPoint(self):
        """Test DepreciationPoint"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
