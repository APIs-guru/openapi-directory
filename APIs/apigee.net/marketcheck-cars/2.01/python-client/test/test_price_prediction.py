# coding: utf-8

"""
    Marketcheck APIs

    One API serving data spanned across multiple verticals

    The version of the OpenAPI document: 2.01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.price_prediction import PricePrediction

class TestPricePrediction(unittest.TestCase):
    """PricePrediction unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PricePrediction:
        """Test PricePrediction
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PricePrediction`
        """
        model = PricePrediction()
        if include_optional:
            return PricePrediction(
                predicted_price = 56,
                price_range = openapi_client.models.price_prediction_price_range.PricePrediction_price_range(
                    lower_bound = 56, 
                    upper_bound = 56, ),
                specs = {"base_exterior_color":"Black","base_interior_color":"Brown","carfax_1_owner":false,"carfax_clean_title":false,"city_mpg":18,"cylinders":6,"doors":4,"drivetrain":"4WD","engine_block":"V","engine_size":2.7,"highway_mpg":23,"is_certified":false,"latitude":44.71164,"longitude":-92.851607,"make":"ford","miles":28741,"model":"f-150","transmission":"Automatic","trim":"xlt","year":2018}
            )
        else:
            return PricePrediction(
        )
        """

    def testPricePrediction(self):
        """Test PricePrediction"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
