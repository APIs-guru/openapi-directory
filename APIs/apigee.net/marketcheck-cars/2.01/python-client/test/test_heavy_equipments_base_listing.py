# coding: utf-8

"""
    Marketcheck APIs

    One API serving data spanned across multiple verticals

    The version of the OpenAPI document: 2.01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.heavy_equipments_base_listing import HeavyEquipmentsBaseListing

class TestHeavyEquipmentsBaseListing(unittest.TestCase):
    """HeavyEquipmentsBaseListing unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> HeavyEquipmentsBaseListing:
        """Test HeavyEquipmentsBaseListing
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `HeavyEquipmentsBaseListing`
        """
        model = HeavyEquipmentsBaseListing()
        if include_optional:
            return HeavyEquipmentsBaseListing(
                build = openapi_client.models.heavy_equipments_build.HeavyEquipmentsBuild(
                    body_type = '', 
                    category = '', 
                    condition = '', 
                    drivetrain = '', 
                    engine = '', 
                    fuel_type = '', 
                    make = '', 
                    model = '', 
                    sub_category = '', 
                    transmission = '', 
                    trim = '', 
                    year = 56, ),
                dealer = openapi_client.models.nest_dealer.NestDealer(
                    city = '', 
                    country = '', 
                    county = '', 
                    dealer_type = '', 
                    dealership_group_name = '', 
                    id = 56, 
                    latitude = '', 
                    longitude = '', 
                    msa_code = '', 
                    name = '', 
                    phone = '', 
                    seller_email = '', 
                    state = '', 
                    street = '', 
                    website = '', 
                    zip = '', ),
                dist = 1.337,
                dp_url = '',
                exterior_color = '',
                first_seen_at = 56,
                first_seen_at_date = '',
                heading = '',
                id = '',
                interior_color = '',
                inventory_type = '',
                last_seen_at = 56,
                last_seen_at_date = '',
                media = openapi_client.models.listing_nest_media.ListingNestMedia(
                    photo_links = [
                        ''
                        ], 
                    photo_links_cached = [
                        ''
                        ], ),
                miles = 56,
                msrp = 56,
                price = 56,
                scraped_at = 1.337,
                scraped_at_date = '',
                seller_type = '',
                source = '',
                stock_no = '',
                vin = ''
            )
        else:
            return HeavyEquipmentsBaseListing(
        )
        """

    def testHeavyEquipmentsBaseListing(self):
        """Test HeavyEquipmentsBaseListing"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
