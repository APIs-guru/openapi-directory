# coding: utf-8

"""
    Marketcheck APIs

    One API serving data spanned across multiple verticals

    The version of the OpenAPI document: 2.01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.car_search_api import CarSearchApi


class TestCarSearchApi(unittest.TestCase):
    """CarSearchApi unit test stubs"""

    def setUp(self) -> None:
        self.api = CarSearchApi()

    def tearDown(self) -> None:
        pass

    def test_auto_complete(self) -> None:
        """Test case for auto_complete

        API for auto-completion of inputs
        """
        pass

    def test_car_dealer_inventory_active_get(self) -> None:
        """Test case for car_dealer_inventory_active_get

        Get dealers active inventory
        """
        pass

    def test_get_listing(self) -> None:
        """Test case for get_listing

        Listing by id
        """
        pass

    def test_listing_car_auction_id_extra_get(self) -> None:
        """Test case for listing_car_auction_id_extra_get

        Long text Listings attributes for Listing with the given id
        """
        pass

    def test_listing_car_auction_id_get(self) -> None:
        """Test case for listing_car_auction_id_get

        Listing by id
        """
        pass

    def test_listing_car_auction_id_media_get(self) -> None:
        """Test case for listing_car_auction_id_media_get

        Listing media by id
        """
        pass

    def test_listing_car_fsbo_id_extra_get(self) -> None:
        """Test case for listing_car_fsbo_id_extra_get

        Long text Listings attributes for Listing with the given id
        """
        pass

    def test_listing_car_fsbo_id_get(self) -> None:
        """Test case for listing_car_fsbo_id_get

        Listing by id
        """
        pass

    def test_listing_car_fsbo_id_media_get(self) -> None:
        """Test case for listing_car_fsbo_id_media_get

        Listing media by id
        """
        pass

    def test_listing_car_id_extra_get(self) -> None:
        """Test case for listing_car_id_extra_get

        Long text Listings attributes for Listing with the given id
        """
        pass

    def test_listing_car_id_media_get(self) -> None:
        """Test case for listing_car_id_media_get

        Listing media by id
        """
        pass

    def test_listing_car_uk_id_extra_get(self) -> None:
        """Test case for listing_car_uk_id_extra_get

        Long text Listings attributes for Listing with the given id
        """
        pass

    def test_listing_car_uk_id_get(self) -> None:
        """Test case for listing_car_uk_id_get

        Listing by id
        """
        pass

    def test_listing_car_uk_id_media_get(self) -> None:
        """Test case for listing_car_uk_id_media_get

        Listing media by id
        """
        pass

    def test_search(self) -> None:
        """Test case for search

        Gets active car listings in UK for the given search criteria
        """
        pass

    def test_search_car_active_get(self) -> None:
        """Test case for search_car_active_get

        Gets active car listings for the given search criteria
        """
        pass

    def test_search_car_auction_active_get(self) -> None:
        """Test case for search_car_auction_active_get

        Gets active auction car listings for the given search criteria
        """
        pass

    def test_search_car_fsbo_active_get(self) -> None:
        """Test case for search_car_fsbo_active_get

        Gets active private party car listings for the given search criteria
        """
        pass

    def test_search_car_recents_get(self) -> None:
        """Test case for search_car_recents_get

        Gets Recent car listings for the given search criteria
        """
        pass

    def test_search_car_uk_recents_get(self) -> None:
        """Test case for search_car_uk_recents_get

        Gets Recent UK car listings for the given search criteria
        """
        pass


if __name__ == '__main__':
    unittest.main()
