# coding: utf-8

"""
    Marketcheck APIs

    One API serving data spanned across multiple verticals

    The version of the OpenAPI document: 2.01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.listing_nest_extra_attributes import ListingNestExtraAttributes

class TestListingNestExtraAttributes(unittest.TestCase):
    """ListingNestExtraAttributes unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListingNestExtraAttributes:
        """Test ListingNestExtraAttributes
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListingNestExtraAttributes`
        """
        model = ListingNestExtraAttributes()
        if include_optional:
            return ListingNestExtraAttributes(
                dealer_added_f = [
                    ''
                    ],
                electronics_f = [
                    ''
                    ],
                exterior_f = [
                    ''
                    ],
                features = [
                    ''
                    ],
                interior_f = [
                    ''
                    ],
                options = [
                    ''
                    ],
                safety_f = [
                    ''
                    ],
                seller_comments = '',
                standard_f = [
                    ''
                    ],
                technical_f = [
                    ''
                    ]
            )
        else:
            return ListingNestExtraAttributes(
        )
        """

    def testListingNestExtraAttributes(self):
        """Test ListingNestExtraAttributes"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
