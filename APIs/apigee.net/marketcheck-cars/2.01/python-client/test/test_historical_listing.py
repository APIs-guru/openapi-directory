# coding: utf-8

"""
    Marketcheck APIs

    One API serving data spanned across multiple verticals

    The version of the OpenAPI document: 2.01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.historical_listing import HistoricalListing

class TestHistoricalListing(unittest.TestCase):
    """HistoricalListing unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> HistoricalListing:
        """Test HistoricalListing
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `HistoricalListing`
        """
        model = HistoricalListing()
        if include_optional:
            return HistoricalListing(
                carfax_1_owner = True,
                carfax_clean_title = True,
                city = '',
                data_source = '',
                dealer_id = 56,
                dom = 56,
                dom_180 = 56,
                dom_active = 56,
                exterior_color = '',
                financing_options = [
                    openapi_client.models.listing_finance.ListingFinance(
                        down_payment = 1.337, 
                        down_payment_percentage = 1.337, 
                        estimated_monthly_payment = 1.337, 
                        loan_apr = 1.337, 
                        loan_term = 56, )
                    ],
                first_seen_at = 56,
                first_seen_at_date = '',
                heading = '',
                id = '',
                interior_color = '',
                inventory_type = '',
                is_certified = 56,
                is_searchable = '',
                last_seen_at = 56,
                last_seen_at_date = '',
                latitude = '',
                leasing_options = [
                    openapi_client.models.listing_lease.ListingLease(
                        down_payment = 1.337, 
                        estimated_monthly_payment = 1.337, 
                        lease_term = 56, )
                    ],
                longitude = '',
                miles = 56,
                msrp = 56,
                price = 56,
                ref_miles = '',
                ref_miles_dt = 56,
                ref_price = '',
                ref_price_dt = 56,
                scraped_at = 56,
                scraped_at_date = '',
                seller_name = '',
                seller_name_o = '',
                seller_type = '',
                source = '',
                state = '',
                status_date = 56,
                stock_no = '',
                street = '',
                trim_r = '',
                vdp_url = '',
                vin = '',
                zip = ''
            )
        else:
            return HistoricalListing(
        )
        """

    def testHistoricalListing(self):
        """Test HistoricalListing"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
