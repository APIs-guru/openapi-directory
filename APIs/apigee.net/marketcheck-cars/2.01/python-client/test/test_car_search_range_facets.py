# coding: utf-8

"""
    Marketcheck APIs

    One API serving data spanned across multiple verticals

    The version of the OpenAPI document: 2.01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.car_search_range_facets import CarSearchRangeFacets

class TestCarSearchRangeFacets(unittest.TestCase):
    """CarSearchRangeFacets unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CarSearchRangeFacets:
        """Test CarSearchRangeFacets
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CarSearchRangeFacets`
        """
        model = CarSearchRangeFacets()
        if include_optional:
            return CarSearchRangeFacets(
                dom = [
                    openapi_client.models.range_facet_item.RangeFacetItem(
                        after = 56, 
                        before = 56, 
                        between = 56, 
                        counts = [
                            openapi_client.models.range_facet_item_counts_inner.RangeFacetItem_counts_inner(
                                count = 56, 
                                lower_bound = 56, 
                                upper_bound = 56, )
                            ], 
                        end = 56, 
                        gap = 56, 
                        start = 56, )
                    ],
                dom_180 = [
                    openapi_client.models.range_facet_item.RangeFacetItem(
                        after = 56, 
                        before = 56, 
                        between = 56, 
                        counts = [
                            openapi_client.models.range_facet_item_counts_inner.RangeFacetItem_counts_inner(
                                count = 56, 
                                lower_bound = 56, 
                                upper_bound = 56, )
                            ], 
                        end = 56, 
                        gap = 56, 
                        start = 56, )
                    ],
                dom_active = [
                    openapi_client.models.range_facet_item.RangeFacetItem(
                        after = 56, 
                        before = 56, 
                        between = 56, 
                        counts = [
                            openapi_client.models.range_facet_item_counts_inner.RangeFacetItem_counts_inner(
                                count = 56, 
                                lower_bound = 56, 
                                upper_bound = 56, )
                            ], 
                        end = 56, 
                        gap = 56, 
                        start = 56, )
                    ],
                finance_down_payment = [
                    openapi_client.models.range_facet_item.RangeFacetItem(
                        after = 56, 
                        before = 56, 
                        between = 56, 
                        counts = [
                            openapi_client.models.range_facet_item_counts_inner.RangeFacetItem_counts_inner(
                                count = 56, 
                                lower_bound = 56, 
                                upper_bound = 56, )
                            ], 
                        end = 56, 
                        gap = 56, 
                        start = 56, )
                    ],
                finance_emp = [
                    openapi_client.models.range_facet_item.RangeFacetItem(
                        after = 56, 
                        before = 56, 
                        between = 56, 
                        counts = [
                            openapi_client.models.range_facet_item_counts_inner.RangeFacetItem_counts_inner(
                                count = 56, 
                                lower_bound = 56, 
                                upper_bound = 56, )
                            ], 
                        end = 56, 
                        gap = 56, 
                        start = 56, )
                    ],
                finance_loan_apr = [
                    openapi_client.models.range_facet_item.RangeFacetItem(
                        after = 56, 
                        before = 56, 
                        between = 56, 
                        counts = [
                            openapi_client.models.range_facet_item_counts_inner.RangeFacetItem_counts_inner(
                                count = 56, 
                                lower_bound = 56, 
                                upper_bound = 56, )
                            ], 
                        end = 56, 
                        gap = 56, 
                        start = 56, )
                    ],
                finance_loan_term = [
                    openapi_client.models.range_facet_item.RangeFacetItem(
                        after = 56, 
                        before = 56, 
                        between = 56, 
                        counts = [
                            openapi_client.models.range_facet_item_counts_inner.RangeFacetItem_counts_inner(
                                count = 56, 
                                lower_bound = 56, 
                                upper_bound = 56, )
                            ], 
                        end = 56, 
                        gap = 56, 
                        start = 56, )
                    ],
                lease_down_payment = [
                    openapi_client.models.range_facet_item.RangeFacetItem(
                        after = 56, 
                        before = 56, 
                        between = 56, 
                        counts = [
                            openapi_client.models.range_facet_item_counts_inner.RangeFacetItem_counts_inner(
                                count = 56, 
                                lower_bound = 56, 
                                upper_bound = 56, )
                            ], 
                        end = 56, 
                        gap = 56, 
                        start = 56, )
                    ],
                lease_emp = [
                    openapi_client.models.range_facet_item.RangeFacetItem(
                        after = 56, 
                        before = 56, 
                        between = 56, 
                        counts = [
                            openapi_client.models.range_facet_item_counts_inner.RangeFacetItem_counts_inner(
                                count = 56, 
                                lower_bound = 56, 
                                upper_bound = 56, )
                            ], 
                        end = 56, 
                        gap = 56, 
                        start = 56, )
                    ],
                lease_term = [
                    openapi_client.models.range_facet_item.RangeFacetItem(
                        after = 56, 
                        before = 56, 
                        between = 56, 
                        counts = [
                            openapi_client.models.range_facet_item_counts_inner.RangeFacetItem_counts_inner(
                                count = 56, 
                                lower_bound = 56, 
                                upper_bound = 56, )
                            ], 
                        end = 56, 
                        gap = 56, 
                        start = 56, )
                    ],
                miles = [
                    openapi_client.models.range_facet_item.RangeFacetItem(
                        after = 56, 
                        before = 56, 
                        between = 56, 
                        counts = [
                            openapi_client.models.range_facet_item_counts_inner.RangeFacetItem_counts_inner(
                                count = 56, 
                                lower_bound = 56, 
                                upper_bound = 56, )
                            ], 
                        end = 56, 
                        gap = 56, 
                        start = 56, )
                    ],
                msrp = [
                    openapi_client.models.range_facet_item.RangeFacetItem(
                        after = 56, 
                        before = 56, 
                        between = 56, 
                        counts = [
                            openapi_client.models.range_facet_item_counts_inner.RangeFacetItem_counts_inner(
                                count = 56, 
                                lower_bound = 56, 
                                upper_bound = 56, )
                            ], 
                        end = 56, 
                        gap = 56, 
                        start = 56, )
                    ],
                price = [
                    openapi_client.models.range_facet_item.RangeFacetItem(
                        after = 56, 
                        before = 56, 
                        between = 56, 
                        counts = [
                            openapi_client.models.range_facet_item_counts_inner.RangeFacetItem_counts_inner(
                                count = 56, 
                                lower_bound = 56, 
                                upper_bound = 56, )
                            ], 
                        end = 56, 
                        gap = 56, 
                        start = 56, )
                    ]
            )
        else:
            return CarSearchRangeFacets(
        )
        """

    def testCarSearchRangeFacets(self):
        """Test CarSearchRangeFacets"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
