# coding: utf-8

"""
    Authentiq Connect API

    Authentiq Connect OAuth 2.0 and OpenID Connect API reference. Learn about [Authentiq ID](https://www.authentiq.com/) or check out the [Authentiq Connect](https://developers.authentiq.com) developer documentation. 

    The version of the OpenAPI document: 1.0
    Contact: hello@authentiq.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.session import Session

class TestSession(unittest.TestCase):
    """Session unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Session:
        """Test Session
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Session`
        """
        model = Session()
        if include_optional:
            return Session(
                authenticated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                client_id = '',
                client_name = '',
                client_uri = '',
                concluded_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                connected_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                contacts = [
                    ''
                    ],
                created_at = '',
                deleted_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                logo_uri = '',
                nonce = '',
                policy_uri = '',
                redirect_uri = '',
                response_mode = '',
                response_type = '',
                scopes = [
                    ''
                    ],
                scopes_optional = [
                    ''
                    ],
                scopes_required = [
                    ''
                    ],
                scopes_seen = [
                    ''
                    ],
                scopes_signed = [
                    ''
                    ],
                session_id = '',
                session_state = '',
                session_uri = '',
                sub = '',
                tokens_seen = [
                    ''
                    ],
                tos_uri = '',
                version = 56
            )
        else:
            return Session(
        )
        """

    def testSession(self):
        """Test Session"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
