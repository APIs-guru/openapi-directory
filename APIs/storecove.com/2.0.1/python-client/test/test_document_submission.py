# coding: utf-8

"""
    Storecove API

    Storecove API

    The version of the OpenAPI document: 2.0.1
    Contact: apisupport@storecove.nl
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.document_submission import DocumentSubmission

class TestDocumentSubmission(unittest.TestCase):
    """DocumentSubmission unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DocumentSubmission:
        """Test DocumentSubmission
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DocumentSubmission`
        """
        model = DocumentSubmission()
        if include_optional:
            return DocumentSubmission(
                attachments = [
                    openapi_client.models.invoice_attachment.Invoice Attachment(
                        description = '', 
                        document = '01234', 
                        document_id = '', 
                        filename = 'gbUUGjjNSwg0_bs9ZayIMrKdgNvb6gvxmPb9GcsM61ate1RA89q3w1l4eH4XxEz.5aw7.OpkBmKIPOf2Flbsh1TpRS00PDvgoKGNXgx', 
                        mime_type = 'application/pdf', 
                        primary_image = True, )
                    ],
                create_primary_image = True,
                document = openapi_client.models.sendable_document.Sendable Document(
                    document_type = 'invoice', 
                    invoice = openapi_client.models.invoice.Invoice(
                        accounting_cost = '0', 
                        accounting_currency_tax_amount = 1.337, 
                        accounting_currency_tax_amount_currency = 'AED', 
                        accounting_customer_party = openapi_client.models.customer.Customer(
                            party = openapi_client.models.party.Party(
                                address = openapi_client.models.address.Address(
                                    city = '01', 
                                    country = 'AD', 
                                    county = '', 
                                    street1 = '01', 
                                    street2 = '', 
                                    zip = '01', ), 
                                company_name = '01', 
                                contact = openapi_client.models.contact.Contact(
                                    email = '', 
                                    first_name = '', 
                                    id = '', 
                                    last_name = '', 
                                    phone = '', ), ), 
                            public_identifiers = [
                                openapi_client.models.public_identifier.Public identifier(
                                    id = '0', 
                                    scheme = '012', )
                                ], ), 
                        accounting_supplier_party = openapi_client.models.supplier.Supplier(
                            party = openapi_client.models.sender_party.Sender Party(), ), 
                        allowance_charges = [
                            openapi_client.models.allowance_or_charge.Allowance or Charge(
                                amount_excluding_tax = 1.337, 
                                amount_excluding_vat = 1.337, 
                                amount_including_tax = 1.337, 
                                base_amount_excluding_tax = 1.337, 
                                base_amount_including_tax = 1.337, 
                                reason = 'Agreed settlement', 
                                reason_code = '', 
                                tax = openapi_client.models.tax.Tax(
                                    amount = 1.337, 
                                    category = 'standard', 
                                    country = 'AD', 
                                    percentage = 1.337, ), 
                                taxes_duties_fees = [
                                    openapi_client.models.tax.Tax(
                                        amount = 1.337, 
                                        category = 'standard', 
                                        country = , 
                                        percentage = 1.337, )
                                    ], )
                            ], 
                        amount_including_vat = 1.337, 
                        attachments = [
                            openapi_client.models.invoice_attachment.Invoice Attachment(
                                description = '', 
                                document = '01234', 
                                document_id = '', 
                                filename = 'gbUUGjjNSwg0_bs9ZayIMrKdgNvb6gvxmPb9GcsM61ate1RA89q3w1l4eH4XxEz.5aw7.OpkBmKIPOf2Flbsh1TpRS00PDvgoKGNXgx', 
                                mime_type = 'application/pdf', 
                                primary_image = True, )
                            ], 
                        billing_reference = '', 
                        buyer_reference = '', 
                        consumer_tax_mode = True, 
                        contract_document_reference = '', 
                        delivery = openapi_client.models.delivery.Delivery(
                            actual_date = '0480-72-88', 
                            delivery_location = openapi_client.models.delivery_delivery_location.Delivery_deliveryLocation(
                                id = '01', 
                                location_name = '', 
                                scheme_agency_id = '', 
                                scheme_id = '', ), 
                            delivery_party = openapi_client.models.delivery_party.Delivery Party(
                                party = openapi_client.models.party.Party(
                                    address = openapi_client.models.address.Address(
                                        city = '01', 
                                        country = , 
                                        county = '', 
                                        street1 = '01', 
                                        street2 = '', 
                                        zip = '01', ), 
                                    company_name = '01', ), ), 
                            delivery_party_name = '', 
                            quantity = 1.337, 
                            requested_delivery_period = '0480-72-88 - 8001-52-80', 
                            shipping_marks = '', ), 
                        document_currency_code = 'AED', 
                        due_date = '0480-72-88', 
                        invoice_lines = [
                            openapi_client.models.invoice_line.Invoice line(
                                accounting_cost = '0', 
                                additional_item_properties = [
                                    openapi_client.models.additional_item_property.Additional Item Property(
                                        name = '0', 
                                        value = '', )
                                    ], 
                                allowance_charge = 1.337, 
                                allowance_charges = [
                                    openapi_client.models.allowance_or_charge.Allowance or Charge(
                                        amount_excluding_tax = 1.337, 
                                        base_amount_excluding_tax = 1.337, 
                                        reason = '', 
                                        reason_code = '', )
                                    ], 
                                amount_excluding_tax = 1.337, 
                                amount_excluding_vat = 1.337, 
                                amount_including_tax = 1.337, 
                                buyers_item_identification = '0', 
                                description = '0', 
                                invoice_period = '0480-72-88 - 8001-52-80', 
                                item_price = 1.337, 
                                line_id = '0', 
                                name = '0', 
                                note = '', 
                                order_line_reference_line_id = '0', 
                                quantity = 1.337, 
                                quantity_unit_code = 'C62', 
                                references = [
                                    openapi_client.models.reference.Reference(
                                        document_id = '', 
                                        document_type = 'purchase_order', 
                                        issue_date = '0480-72-88', 
                                        line_id = '', )
                                    ], 
                                sellers_item_identification = '0', 
                                standard_item_identification = '0', 
                                standard_item_identification_scheme_agency_id = '9', 
                                standard_item_identification_scheme_id = 'GTIN', 
                                taxes_duties_fees = [
                                    
                                    ], )
                            ], 
                        invoice_number = '0', 
                        invoice_period = '0480-72-88 - 8001-52-80', 
                        invoice_type = '380', 
                        issue_date = '0480-72-88', 
                        issue_reasons = [
                            ''
                            ], 
                        note = '', 
                        order_reference = '', 
                        payment_means_array = [
                            openapi_client.models.payment_means.PaymentMeans(
                                account = '', 
                                amount = 1.337, 
                                branche_code = '', 
                                code = 'credit_transfer', 
                                holder = '', 
                                mandate = '', 
                                network = '', 
                                payment_id = '', )
                            ], 
                        payment_means_bic = 'AEIOTGEI0L3', 
                        payment_means_code = 'online_payment_service', 
                        payment_means_iban = '', 
                        payment_means_payment_id = '', 
                        payment_terms = openapi_client.models.payment_terms.Payment Terms(
                            note = '', ), 
                        preferred_invoice_type = 'prefer_autodetect', 
                        prepaid_amount = 1.337, 
                        price_mode = 'price_mode_net', 
                        project_reference = '', 
                        references = [
                            openapi_client.models.reference.Reference(
                                document_id = '', 
                                document_type = 'purchase_order', 
                                issue_date = '0480-72-88', 
                                line_id = '', )
                            ], 
                        sales_order_id = '', 
                        self_billing_mode = True, 
                        tax_exempt_reason = 'export', 
                        tax_point_date = '0480-72-88', 
                        tax_subtotals = [
                            openapi_client.models.tax_subtotal.Tax Subtotal(
                                category = 'standard', 
                                country = , 
                                percentage = 1.337, 
                                tax_amount = 1.337, 
                                taxable_amount = 1.337, )
                            ], 
                        tax_system = 'tax_line_amounts', 
                        taxes_duties_fees = [
                            
                            ], 
                        transaction_type = 'b2b', 
                        ubl_extensions = [
                            ''
                            ], 
                        vat_reverse_charge = True, 
                        x2y = 'b2b', ), 
                    invoice_response = openapi_client.models.document_invoice_response.Document Invoice Response(
                        clarifications = [
                            openapi_client.models.invoice_response_clarification.Invoice Response Clarification(
                                clarification = '', 
                                clarification_code = 'NON', 
                                clarification_code_type = 'OPStatusReason', 
                                conditions = [
                                    openapi_client.models.invoice_response_condition.Invoice Response Condition(
                                        field_code = '', 
                                        field_value = '', )
                                    ], )
                            ], 
                        effective_date = '0480-72-88', 
                        note = '', 
                        response_code = 'AB', ), 
                    order = openapi_client.models.order.Order(
                        accounting_cost = '0', 
                        allowance_charges = [
                            openapi_client.models.allowance_or_charge.Allowance or Charge(
                                amount_excluding_tax = 1.337, 
                                amount_excluding_vat = 1.337, 
                                amount_including_tax = 1.337, 
                                base_amount_excluding_tax = 1.337, 
                                base_amount_including_tax = 1.337, 
                                reason = 'Agreed settlement', 
                                reason_code = '', 
                                taxes_duties_fees = [
                                    
                                    ], )
                            ], 
                        amount_including_tax = 1.337, 
                        attachments = [
                            openapi_client.models.invoice_attachment.Invoice Attachment(
                                description = '', 
                                document = '01234', 
                                document_id = '', 
                                filename = 'gbUUGjjNSwg0_bs9ZayIMrKdgNvb6gvxmPb9GcsM61ate1RA89q3w1l4eH4XxEz.5aw7.OpkBmKIPOf2Flbsh1TpRS00PDvgoKGNXgx', 
                                mime_type = 'application/pdf', 
                                primary_image = True, )
                            ], 
                        delivery_terms = openapi_client.models.delivery_terms.DeliveryTerms(
                            delivery_location_id = '', 
                            incoterms = 'EXW', 
                            special_terms = '', ), 
                        document_number = '0', 
                        issue_date = '0480-72-88', 
                        issue_time = '04:80:72', 
                        note = '', 
                        order_lines = [
                            openapi_client.models.order_line.Order line(
                                accounting_cost = '0', 
                                additional_item_properties = [
                                    openapi_client.models.additional_item_property.Additional Item Property(
                                        name = '0', 
                                        value = '', )
                                    ], 
                                allow_partial_delivery = True, 
                                allowance_charges = [
                                    openapi_client.models.allowance_or_charge.Allowance or Charge(
                                        amount_excluding_tax = 1.337, 
                                        base_amount_excluding_tax = 1.337, 
                                        reason = '', 
                                        reason_code = '', )
                                    ], 
                                amount_excluding_tax = 1.337, 
                                base_quantity = 1.337, 
                                description = '0', 
                                item_price = 1.337, 
                                line_id = '0', 
                                lot_number_ids = [
                                    ''
                                    ], 
                                name = '0', 
                                note = '', 
                                quantity = 1.337, 
                                quantity_unit_code = 'C62', 
                                references = [
                                    
                                    ], 
                                taxes_duties_fees = [
                                    
                                    ], )
                            ], 
                        order_type = 'regular', 
                        references = [
                            
                            ], 
                        seller_supplier_party = openapi_client.models.supplier.Supplier(
                            party = openapi_client.models.sender_party.Sender Party(), 
                            public_identifiers = [
                                openapi_client.models.public_identifier.Public identifier(
                                    id = '0', 
                                    scheme = '012', )
                                ], ), 
                        tax_system = 'tax_line_percentages', 
                        time_zone = '-4807', 
                        validity_period = '0480-72-88 - 8001-52-80', ), 
                    raw_document_data = openapi_client.models.raw_document_data.Raw Document Data(
                        document = '01234', 
                        document_type_id = '', 
                        parse = True, 
                        parse_strategy = 'ubl', 
                        process_id = '', ), ),
                idempotency_guid = '01234567891011121314151617181920212223242526272829303132333435',
                legal_entity_id = 56,
                receive_guid = '',
                routing = openapi_client.models.recipient_ids.Recipient ids(
                    clear_without_sending = True, 
                    e_identifiers = [
                        openapi_client.models.routing_identifier.Routing Identifier(
                            id = '0', 
                            scheme = '012', )
                        ], 
                    emails = [
                        ''
                        ], )
            )
        else:
            return DocumentSubmission(
        )
        """

    def testDocumentSubmission(self):
        """Test DocumentSubmission"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
