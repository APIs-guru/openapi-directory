# coding: utf-8

"""
    Storecove API

    Storecove API

    The version of the OpenAPI document: 2.0.1
    Contact: apisupport@storecove.nl
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.purchase_invoice_invoice_line import PurchaseInvoiceInvoiceLine

class TestPurchaseInvoiceInvoiceLine(unittest.TestCase):
    """PurchaseInvoiceInvoiceLine unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PurchaseInvoiceInvoiceLine:
        """Test PurchaseInvoiceInvoiceLine
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PurchaseInvoiceInvoiceLine`
        """
        model = PurchaseInvoiceInvoiceLine()
        if include_optional:
            return PurchaseInvoiceInvoiceLine(
                accounting = openapi_client.models.purchase_invoice_accounting_details.PurchaseInvoiceAccountingDetails(
                    code = '', 
                    list = '', 
                    list_version = '', 
                    name = '', ),
                allowance_charge = 1.337,
                allowance_charge_array = [
                    openapi_client.models.purchase_invoice_invoice_line_allowance_charge.PurchaseInvoiceInvoiceLineAllowanceCharge(
                        amount = 1.337, 
                        reason = '', )
                    ],
                allowance_charges = [
                    1.337
                    ],
                amount_excluding_tax = 1.337,
                amount_excluding_vat = 1.337,
                description = '',
                name = '',
                period_end = '',
                period_start = '',
                price = openapi_client.models.purchase_invoice_invoice_line_price.PurchaseInvoiceInvoiceLinePrice(
                    base_quantity = 1.337, 
                    price_amount = 1.337, ),
                tax = openapi_client.models.purchase_invoice_tax.PurchaseInvoiceTax(),
                units = openapi_client.models.purchase_invoice_invoice_line_item.PurchaseInvoiceInvoiceLineItem(
                    quantity = 1.337, 
                    unit_code = '', ),
                vat = openapi_client.models.vat_details.VAT Details(
                    amount = 1.337, 
                    country = '', 
                    percentage = 1.337, )
            )
        else:
            return PurchaseInvoiceInvoiceLine(
        )
        """

    def testPurchaseInvoiceInvoiceLine(self):
        """Test PurchaseInvoiceInvoiceLine"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
