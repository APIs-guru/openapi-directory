# coding: utf-8

"""
    Storecove API

    Storecove API

    The version of the OpenAPI document: 2.0.1
    Contact: apisupport@storecove.nl
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.legal_entity import LegalEntity

class TestLegalEntity(unittest.TestCase):
    """LegalEntity unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LegalEntity:
        """Test LegalEntity
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LegalEntity`
        """
        model = LegalEntity()
        if include_optional:
            return LegalEntity(
                advertisements = [
                    'invoice'
                    ],
                city = '01',
                country = 'AD',
                county = '',
                id = 56,
                line1 = '01',
                line2 = '',
                party_name = '01',
                public = True,
                rea = openapi_client.models.rea.Rea(
                    capital = 1.337, 
                    identifier = '01', 
                    liquidation_status = 'LN', 
                    partners = 'SU', 
                    province = 'AG', ),
                smart_inbox = '',
                tenant_id = '',
                third_party_password = '01',
                third_party_username = '01',
                zip = '01',
                peppol_identifiers = [
                    openapi_client.models.peppol_identifier.PeppolIdentifier(
                        corppass = openapi_client.models.corp_pass.CorpPass(
                            client_redirect_fail_url = '012345678910', 
                            client_redirect_success_url = '012345678910', 
                            corppass_url = '012345678910', 
                            enabled = True, 
                            flow_type = 'corppass_flow_redirect', 
                            signer_email = '01', 
                            signer_name = '01', 
                            simulate_corppass = True, 
                            status = 'corppass_no_status,', ), 
                        identifier = '01', 
                        scheme = '01', 
                        superscheme = '01', )
                    ],
                additional_tax_identifiers = [
                    openapi_client.models.additional_tax_identifier.AdditionalTaxIdentifier(
                        country = '01', 
                        county = '01', 
                        id = 56, 
                        identifier = '', 
                        scheme = '01', 
                        superscheme = '01', )
                    ],
                api_keys = [
                    ''
                    ]
            )
        else:
            return LegalEntity(
        )
        """

    def testLegalEntity(self):
        """Test LegalEntity"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
