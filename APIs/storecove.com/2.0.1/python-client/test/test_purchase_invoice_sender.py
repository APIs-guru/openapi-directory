# coding: utf-8

"""
    Storecove API

    Storecove API

    The version of the OpenAPI document: 2.0.1
    Contact: apisupport@storecove.nl
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.purchase_invoice_sender import PurchaseInvoiceSender

class TestPurchaseInvoiceSender(unittest.TestCase):
    """PurchaseInvoiceSender unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PurchaseInvoiceSender:
        """Test PurchaseInvoiceSender
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PurchaseInvoiceSender`
        """
        model = PurchaseInvoiceSender()
        if include_optional:
            return PurchaseInvoiceSender(
                billing_contact = openapi_client.models.purchase_invoice_sender_billing_contact.PurchaseInvoiceSenderBillingContact(
                    email = '', 
                    first_name = '', 
                    last_name = '', ),
                building_number = '',
                city = '',
                country = '',
                county = '',
                department = '',
                identifiers = [
                    openapi_client.models.peppol_identifier.PeppolIdentifier(
                        corppass = openapi_client.models.corp_pass.CorpPass(
                            client_redirect_fail_url = '012345678910', 
                            client_redirect_success_url = '012345678910', 
                            corppass_url = '012345678910', 
                            enabled = True, 
                            flow_type = 'corppass_flow_redirect', 
                            signer_email = '01', 
                            signer_name = '01', 
                            simulate_corppass = True, 
                            status = 'corppass_no_status,', ), 
                        identifier = '01', 
                        scheme = '01', 
                        superscheme = '01', )
                    ],
                legal_name = '',
                line1 = '',
                line2 = '',
                neighborhood = '',
                party_name = '',
                peppol_identifiers = openapi_client.models.peppol_identifier.PeppolIdentifier(
                    corppass = openapi_client.models.corp_pass.CorpPass(
                        client_redirect_fail_url = '012345678910', 
                        client_redirect_success_url = '012345678910', 
                        corppass_url = '012345678910', 
                        enabled = True, 
                        flow_type = 'corppass_flow_redirect', 
                        signer_email = '01', 
                        signer_name = '01', 
                        simulate_corppass = True, 
                        status = 'corppass_no_status,', ), 
                    identifier = '01', 
                    scheme = '01', 
                    superscheme = '01', ),
                secondary_number = '',
                zip = ''
            )
        else:
            return PurchaseInvoiceSender(
        )
        """

    def testPurchaseInvoiceSender(self):
        """Test PurchaseInvoiceSender"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
