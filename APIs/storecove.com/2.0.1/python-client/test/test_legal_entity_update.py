# coding: utf-8

"""
    Storecove API

    Storecove API

    The version of the OpenAPI document: 2.0.1
    Contact: apisupport@storecove.nl
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.legal_entity_update import LegalEntityUpdate

class TestLegalEntityUpdate(unittest.TestCase):
    """LegalEntityUpdate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LegalEntityUpdate:
        """Test LegalEntityUpdate
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LegalEntityUpdate`
        """
        model = LegalEntityUpdate()
        if include_optional:
            return LegalEntityUpdate(
                advertisements = [
                    'invoice'
                    ],
                city = '01',
                country = 'AD',
                county = '',
                id = 56,
                line1 = '01',
                line2 = '',
                party_name = '01',
                public = True,
                rea = openapi_client.models.rea.Rea(
                    capital = 1.337, 
                    identifier = '01', 
                    liquidation_status = 'LN', 
                    partners = 'SU', 
                    province = 'AG', ),
                smart_inbox = '',
                tenant_id = '',
                third_party_password = '01',
                third_party_username = '01',
                zip = '01'
            )
        else:
            return LegalEntityUpdate(
        )
        """

    def testLegalEntityUpdate(self):
        """Test LegalEntityUpdate"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
