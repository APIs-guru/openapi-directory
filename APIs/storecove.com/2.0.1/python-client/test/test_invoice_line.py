# coding: utf-8

"""
    Storecove API

    Storecove API

    The version of the OpenAPI document: 2.0.1
    Contact: apisupport@storecove.nl
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.invoice_line import InvoiceLine

class TestInvoiceLine(unittest.TestCase):
    """InvoiceLine unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> InvoiceLine:
        """Test InvoiceLine
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `InvoiceLine`
        """
        model = InvoiceLine()
        if include_optional:
            return InvoiceLine(
                accounting_cost = '0',
                additional_item_properties = [
                    openapi_client.models.additional_item_property.Additional Item Property(
                        name = '0', 
                        value = '', )
                    ],
                allowance_charge = 1.337,
                allowance_charges = [
                    openapi_client.models.allowance_or_charge.Allowance or Charge(
                        amount_excluding_tax = 1.337, 
                        base_amount_excluding_tax = 1.337, 
                        reason = '', 
                        reason_code = '', )
                    ],
                amount_excluding_tax = 1.337,
                amount_excluding_vat = 1.337,
                amount_including_tax = 1.337,
                buyers_item_identification = '0',
                description = '0',
                invoice_period = '0480-72-88 - 8001-52-80',
                item_price = 1.337,
                line_id = '0',
                name = '0',
                note = '',
                order_line_reference_line_id = '0',
                quantity = 1.337,
                quantity_unit_code = 'C62',
                references = [
                    openapi_client.models.reference.Reference(
                        document_id = '', 
                        document_type = 'purchase_order', 
                        issue_date = '0480-72-88', 
                        line_id = '', )
                    ],
                sellers_item_identification = '0',
                standard_item_identification = '0',
                standard_item_identification_scheme_agency_id = '9',
                standard_item_identification_scheme_id = 'GTIN',
                tax = openapi_client.models.tax.Tax(
                    amount = 1.337, 
                    category = 'standard', 
                    country = 'AD', 
                    percentage = 1.337, ),
                taxes_duties_fees = [
                    openapi_client.models.tax.Tax(
                        amount = 1.337, 
                        category = 'standard', 
                        country = 'AD', 
                        percentage = 1.337, )
                    ]
            )
        else:
            return InvoiceLine(
        )
        """

    def testInvoiceLine(self):
        """Test InvoiceLine"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
