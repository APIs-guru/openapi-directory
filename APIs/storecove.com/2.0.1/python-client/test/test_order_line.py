# coding: utf-8

"""
    Storecove API

    Storecove API

    The version of the OpenAPI document: 2.0.1
    Contact: apisupport@storecove.nl
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.order_line import OrderLine

class TestOrderLine(unittest.TestCase):
    """OrderLine unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OrderLine:
        """Test OrderLine
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OrderLine`
        """
        model = OrderLine()
        if include_optional:
            return OrderLine(
                accounting_cost = '0',
                additional_item_properties = [
                    openapi_client.models.additional_item_property.Additional Item Property(
                        name = '0', 
                        value = '', )
                    ],
                allow_partial_delivery = True,
                allowance_charges = [
                    openapi_client.models.allowance_or_charge.Allowance or Charge(
                        amount_excluding_tax = 1.337, 
                        base_amount_excluding_tax = 1.337, 
                        reason = '', 
                        reason_code = '', )
                    ],
                amount_excluding_tax = 1.337,
                base_quantity = 1.337,
                delivery = openapi_client.models.line_delivery.LineDelivery(
                    delivery_location = openapi_client.models.line_delivery_delivery_location.LineDelivery_deliveryLocation(
                        id = '01', 
                        scheme_id = '', ), ),
                description = '0',
                item_price = 1.337,
                line_id = '0',
                lot_number_ids = [
                    ''
                    ],
                name = '0',
                note = '',
                quantity = 1.337,
                quantity_unit_code = 'C62',
                references = [
                    openapi_client.models.reference.Reference(
                        document_id = '', 
                        document_type = 'purchase_order', 
                        issue_date = '0480-72-88', 
                        line_id = '', )
                    ],
                taxes_duties_fees = [
                    openapi_client.models.tax.Tax(
                        amount = 1.337, 
                        category = 'standard', 
                        country = 'AD', 
                        percentage = 1.337, )
                    ]
            )
        else:
            return OrderLine(
                amount_excluding_tax = 1.337,
                line_id = '0',
                quantity = 1.337,
                quantity_unit_code = 'C62',
        )
        """

    def testOrderLine(self):
        """Test OrderLine"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
