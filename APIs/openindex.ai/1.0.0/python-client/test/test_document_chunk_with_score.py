# coding: utf-8

"""
    OpenIndex Retrieval Plugin API

    A retrieval API for querying and filtering documents based on natural language queries and metadata

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.document_chunk_with_score import DocumentChunkWithScore

class TestDocumentChunkWithScore(unittest.TestCase):
    """DocumentChunkWithScore unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DocumentChunkWithScore:
        """Test DocumentChunkWithScore
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DocumentChunkWithScore`
        """
        model = DocumentChunkWithScore()
        if include_optional:
            return DocumentChunkWithScore(
                embedding = [
                    1.337
                    ],
                id = '',
                metadata = openapi_client.models.document_chunk_metadata.DocumentChunkMetadata(
                    author = '', 
                    collection_id = '', 
                    created_at = '', 
                    document_id = '', 
                    keywords = [
                        ''
                        ], 
                    language = '', 
                    source = 'email', 
                    source_id = '', 
                    time_period = '', 
                    updated_at = '', 
                    url = '', 
                    user_id = '', ),
                score = 1.337,
                text = ''
            )
        else:
            return DocumentChunkWithScore(
                metadata = openapi_client.models.document_chunk_metadata.DocumentChunkMetadata(
                    author = '', 
                    collection_id = '', 
                    created_at = '', 
                    document_id = '', 
                    keywords = [
                        ''
                        ], 
                    language = '', 
                    source = 'email', 
                    source_id = '', 
                    time_period = '', 
                    updated_at = '', 
                    url = '', 
                    user_id = '', ),
                score = 1.337,
                text = '',
        )
        """

    def testDocumentChunkWithScore(self):
        """Test DocumentChunkWithScore"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
