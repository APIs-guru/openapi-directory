# coding: utf-8

"""
    Self Service Developer API

    Self Service Developer API documentation and demo.  ##Getting Started  You will need an API access profile user and password in order to access search endpoints. Your access profile user and password is used for authenticating all requests to our search API.  You MUST pass the user and password each time you perform a search request.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.contact_enrich_post_request import ContactEnrichPostRequest

class TestContactEnrichPostRequest(unittest.TestCase):
    """ContactEnrichPostRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ContactEnrichPostRequest:
        """Test ContactEnrichPostRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ContactEnrichPostRequest`
        """
        model = ContactEnrichPostRequest()
        if include_optional:
            return ContactEnrichPostRequest(
                address = openapi_client.models._contact_enrich_post_request_address._contact_enrich_post_request_Address(
                    address_line1 = '', 
                    address_line2 = '', ),
                age = 1.337,
                dob = '',
                email = '',
                first_name = '',
                last_name = '',
                middle_name = '',
                phone_number = ''
            )
        else:
            return ContactEnrichPostRequest(
        )
        """

    def testContactEnrichPostRequest(self):
        """Test ContactEnrichPostRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
