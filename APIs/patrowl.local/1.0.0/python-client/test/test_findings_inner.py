# coding: utf-8

"""
    Swagger API-REST for Patrowl Engines

    This is the API documentation for Patrowl Engines usage.

    The version of the OpenAPI document: 1.0.0
    Contact: getsupport@patrowl.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.findings_inner import FindingsInner

class TestFindingsInner(unittest.TestCase):
    """FindingsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FindingsInner:
        """Test FindingsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FindingsInner`
        """
        model = FindingsInner()
        if include_optional:
            return FindingsInner(
                confidence = '',
                description = '',
                issue_id = 56,
                meta_links = [
                    ''
                    ],
                meta_risk = openapi_client.models.findings_inner_meta_risk.Findings_inner_meta_risk(
                    cvss_base_score = [
                        ''
                        ], 
                    cvss_vector = [
                        ''
                        ], 
                    exploit_available = [
                        ''
                        ], 
                    exploitability_ease = [
                        ''
                        ], 
                    patch_publication_date = [
                        ''
                        ], ),
                meta_tags = [
                    ''
                    ],
                meta_vuln_refs = openapi_client.models.findings_inner_meta_vuln_refs.Findings_inner_meta_vuln_refs(
                    bid = [
                        ''
                        ], 
                    cpe = [
                        ''
                        ], 
                    cve = [
                        ''
                        ], 
                    cwe = [
                        ''
                        ], ),
                raw = '',
                severity = 'info',
                solution = '',
                target_addrs = [
                    ''
                    ],
                target_proto = [
                    ''
                    ],
                timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                title = '',
                type = ''
            )
        else:
            return FindingsInner(
        )
        """

    def testFindingsInner(self):
        """Test FindingsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
