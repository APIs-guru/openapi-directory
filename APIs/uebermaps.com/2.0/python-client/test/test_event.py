# coding: utf-8

"""
    uebermaps API endpoints

    Enable people to store spots on public and private maps

    The version of the OpenAPI document: 2.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.event import Event

class TestEvent(unittest.TestCase):
    """Event unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Event:
        """Test Event
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Event`
        """
        model = Event()
        if include_optional:
            return Event(
                counts = openapi_client.models.event_counts.EventCounts(
                    attachments = 27, 
                    comments = 284, ),
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                description = 'Very special event',
                ends_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                id = 482959,
                lat = 53.293493,
                lon = 12.394328,
                owner_id = 82389429,
                picture_url = 'https://...',
                spot = openapi_client.models.spot.Spot(
                    counts = openapi_client.models.spot_counts.SpotCounts(
                        attachments = 4, 
                        comments = 24, 
                        respot = 34, ), 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    description = 'Landed here by accident but look how wonderful this place is in the photos attached', 
                    id = 5932234, 
                    lat = 53.112385, 
                    lon = 10.58349, 
                    map_id = 394805, 
                    picture_url = 'https://...', 
                    status = 'approved', 
                    time_zone = 'Berlin', 
                    title = 'Beautiful place out in the country', 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    user = openapi_client.models.user.User(
                        about = 'The comedian', 
                        header_picture = 'https://...', 
                        id = 5829035, 
                        location = 'Little Rock, Arkansas', 
                        name = 'Bill Hicks', 
                        picture_url = 'https://...', 
                        screen_name = 'billhicks', 
                        url = 'http://www.billhicks.com', ), ),
                starts_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                time_zone = 'Berlin',
                title = '20th anniversary event',
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                user = openapi_client.models.user.User(
                    about = 'The comedian', 
                    counts = openapi_client.models.user_counts.User_counts(
                        maps = 24, ), 
                    header_picture = 'https://...', 
                    id = 5829035, 
                    location = 'Little Rock, Arkansas', 
                    name = 'Bill Hicks', 
                    picture_url = 'https://...', 
                    screen_name = 'billhicks', 
                    url = 'http://www.billhicks.com', )
            )
        else:
            return Event(
        )
        """

    def testEvent(self):
        """Test Event"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
