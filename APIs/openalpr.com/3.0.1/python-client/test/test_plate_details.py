# coding: utf-8

"""
    OpenALPR CarCheck API

    The OpenALPR CarCheck API allows you to send images to the cloud for processing.  The image will be analyzed for license plates and vehicle make/models.  The results  are returned in JSON format 

    The version of the OpenAPI document: 3.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.plate_details import PlateDetails

class TestPlateDetails(unittest.TestCase):
    """PlateDetails unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PlateDetails:
        """Test PlateDetails
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PlateDetails`
        """
        model = PlateDetails()
        if include_optional:
            return PlateDetails(
                candidates = [
                    openapi_client.models.plate_candidate.plate_candidate(
                        confidence = 1.337, 
                        matches_template = 56, 
                        plate = '', )
                    ],
                confidence = 1.337,
                coordinates = [
                    openapi_client.models.coordinate.coordinate(
                        x = 56, 
                        y = 56, )
                    ],
                matches_template = 56,
                plate = '',
                processing_time_ms = 1.337,
                region = '',
                region_confidence = 1.337,
                requested_topn = 56,
                vehicle = openapi_client.models.vehicle_details.vehicle_details(
                    body_type = [
                        openapi_client.models.vehicle_candidate.vehicle_candidate(
                            confidence = 1.337, 
                            name = '', )
                        ], 
                    color = [
                        openapi_client.models.vehicle_candidate.vehicle_candidate(
                            confidence = 1.337, 
                            name = '', )
                        ], 
                    make = [
                        
                        ], 
                    make_model = [
                        
                        ], 
                    orientation = [
                        
                        ], 
                    year = [
                        
                        ], ),
                vehicle_region = openapi_client.models.region_of_interest.region_of_interest(
                    height = 56, 
                    width = 56, 
                    x = 56, 
                    y = 56, )
            )
        else:
            return PlateDetails(
        )
        """

    def testPlateDetails(self):
        """Test PlateDetails"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
