# coding: utf-8

"""
    OpenALPR CarCheck API

    The OpenALPR CarCheck API allows you to send images to the cloud for processing.  The image will be analyzed for license plates and vehicle make/models.  The results  are returned in JSON format 

    The version of the OpenAPI document: 3.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_config200_response_vehicle_labels import GetConfig200ResponseVehicleLabels

class TestGetConfig200ResponseVehicleLabels(unittest.TestCase):
    """GetConfig200ResponseVehicleLabels unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetConfig200ResponseVehicleLabels:
        """Test GetConfig200ResponseVehicleLabels
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetConfig200ResponseVehicleLabels`
        """
        model = GetConfig200ResponseVehicleLabels()
        if include_optional:
            return GetConfig200ResponseVehicleLabels(
                bodytype = [
                    'sedan-compact'
                    ],
                color = [
                    'blue'
                    ],
                make = [
                    'volvo'
                    ],
                makemodel = [
                    'volvo_v40'
                    ],
                orientation = [
                    '45'
                    ],
                year = [
                    '2000-2004'
                    ]
            )
        else:
            return GetConfig200ResponseVehicleLabels(
        )
        """

    def testGetConfig200ResponseVehicleLabels(self):
        """Test GetConfig200ResponseVehicleLabels"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
