# coding: utf-8

"""
    OpenALPR CarCheck API

    The OpenALPR CarCheck API allows you to send images to the cloud for processing.  The image will be analyzed for license plates and vehicle make/models.  The results  are returned in JSON format 

    The version of the OpenAPI document: 3.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.vehicles import Vehicles

class TestVehicles(unittest.TestCase):
    """Vehicles unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Vehicles:
        """Test Vehicles
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Vehicles`
        """
        model = Vehicles()
        if include_optional:
            return Vehicles(
                details = openapi_client.models.vehicle_details.vehicle_details(
                    body_type = [
                        openapi_client.models.vehicle_candidate.vehicle_candidate(
                            confidence = 1.337, 
                            name = '', )
                        ], 
                    color = [
                        openapi_client.models.vehicle_candidate.vehicle_candidate(
                            confidence = 1.337, 
                            name = '', )
                        ], 
                    make = [
                        
                        ], 
                    make_model = [
                        
                        ], 
                    orientation = [
                        
                        ], 
                    year = [
                        
                        ], ),
                height = 56,
                width = 56,
                x = 56,
                y = 56
            )
        else:
            return Vehicles(
        )
        """

    def testVehicles(self):
        """Test Vehicles"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
