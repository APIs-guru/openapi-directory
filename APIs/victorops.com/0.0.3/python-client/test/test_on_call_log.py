# coding: utf-8

"""
    VictorOps

    This API allows you to interact with the VictorOps platform in various ways. Your account may be limited to a total number of API calls per month. Also, some of these API calls have rate limits.  NOTE: In this documentation when creating a sample curl request (clicking the TRY IT OUT! button), in some API viewing interfaces, the '@' in an email address may be encoded. Please note that the REST endpoints will not process the encoded version. Make sure that the encoded character '%40' is changed to its unencoded form before submitting the curl request. 

    The version of the OpenAPI document: 0.0.3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.on_call_log import OnCallLog

class TestOnCallLog(unittest.TestCase):
    """OnCallLog unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OnCallLog:
        """Test OnCallLog
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OnCallLog`
        """
        model = OnCallLog()
        if include_optional:
            return OnCallLog(
                end = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                team_slug = '',
                user_logs = [
                    openapi_client.models.user_log.UserLog(
                        adjusted_total = openapi_client.models.on_call_interval_duration.OnCallInterval_duration(
                            hours = 1.337, 
                            minutes = 1.337, ), 
                        log = [
                            openapi_client.models.on_call_interval.OnCallInterval(
                                duration = openapi_client.models.on_call_interval_duration.OnCallInterval_duration(
                                    hours = 1.337, 
                                    minutes = 1.337, ), 
                                escalation_policy = openapi_client.models.escalation_policy.EscalationPolicy(
                                    name = '', 
                                    slug = '', ), 
                                false = '', 
                                true = '', )
                            ], 
                        total = , 
                        user_id = '', )
                    ]
            )
        else:
            return OnCallLog(
        )
        """

    def testOnCallLog(self):
        """Test OnCallLog"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
