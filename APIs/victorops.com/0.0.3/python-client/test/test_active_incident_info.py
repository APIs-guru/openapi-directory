# coding: utf-8

"""
    VictorOps

    This API allows you to interact with the VictorOps platform in various ways. Your account may be limited to a total number of API calls per month. Also, some of these API calls have rate limits.  NOTE: In this documentation when creating a sample curl request (clicking the TRY IT OUT! button), in some API viewing interfaces, the '@' in an email address may be encoded. Please note that the REST endpoints will not process the encoded version. Make sure that the encoded character '%40' is changed to its unencoded form before submitting the curl request. 

    The version of the OpenAPI document: 0.0.3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.active_incident_info import ActiveIncidentInfo

class TestActiveIncidentInfo(unittest.TestCase):
    """ActiveIncidentInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ActiveIncidentInfo:
        """Test ActiveIncidentInfo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ActiveIncidentInfo`
        """
        model = ActiveIncidentInfo()
        if include_optional:
            return ActiveIncidentInfo(
                alert_count = 1.337,
                current_phase = '',
                entity_id = '',
                host = '',
                incident_number = '',
                last_alert_id = '',
                last_alert_time = '',
                paged_policies = [
                    openapi_client.models.escalation_policy_info.EscalationPolicyInfo(
                        policy = openapi_client.models.escalation_policy.EscalationPolicy(
                            name = '', 
                            slug = '', ), 
                        team = openapi_client.models.team.Team(
                            name = '', 
                            slug = '', ), )
                    ],
                paged_teams = [
                    ''
                    ],
                paged_users = [
                    ''
                    ],
                service = '',
                start_time = '',
                transitions = [
                    openapi_client.models.incident_transition.IncidentTransition(
                        alert_id = '', 
                        alert_url = '', 
                        at = '', 
                        by = '', 
                        manually = True, 
                        message = '', 
                        name = '', )
                    ]
            )
        else:
            return ActiveIncidentInfo(
        )
        """

    def testActiveIncidentInfo(self):
        """Test ActiveIncidentInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
