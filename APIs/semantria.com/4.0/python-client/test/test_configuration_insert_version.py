# coding: utf-8

"""
    Semantria

    Semantria applies Text and Sentiment Analysis to tweets, facebook posts, surveys, reviews or enterprise content.

    The version of the OpenAPI document: 4.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.configuration_insert_version import ConfigurationInsertVersion

class TestConfigurationInsertVersion(unittest.TestCase):
    """ConfigurationInsertVersion unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ConfigurationInsertVersion:
        """Test ConfigurationInsertVersion
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ConfigurationInsertVersion`
        """
        model = ConfigurationInsertVersion()
        if include_optional:
            return ConfigurationInsertVersion(
                auto_response = True,
                callback = '',
                categories_threshold = 1.337,
                chars_threshold = 0,
                collection = openapi_client.models.configuration_collection_section.ConfigurationCollectionSection(
                    attribute_mentions_limit = 0, 
                    concept_topics_limit = 0, 
                    facet_atts_limit = 0, 
                    facet_mentions_limit = 0, 
                    facets_limit = 0, 
                    named_entities_limit = 0, 
                    named_mentions_limit = 0, 
                    query_topics_limit = 0, 
                    theme_mentions_limit = 0, 
                    themes_limit = 0, 
                    user_entities_limit = 0, 
                    user_mentions_limit = 0, ),
                document = openapi_client.models.configuration_document_section.ConfigurationDocumentSection(
                    auto_categories_limit = 0, 
                    concept_topics_limit = 0, 
                    detect_language = True, 
                    entity_themes_limit = 0, 
                    intentions = True, 
                    model_sentiment = True, 
                    named_entities_limit = 0, 
                    named_mentions_limit = 0, 
                    named_opinions_limit = 0, 
                    named_relations_limit = 0, 
                    phrases_limit = 0, 
                    pos_types = 'All', 
                    possible_phrases_limit = 0, 
                    query_topics_limit = 0, 
                    summary_limit = 0, 
                    theme_mentions_limit = 0, 
                    themes_limit = 0, 
                    user_entities_limit = 0, 
                    user_mentions_limit = 0, 
                    user_opinions_limit = 0, 
                    user_relations_limit = 0, ),
                entities_threshold = 56,
                is_primary = True,
                language = '',
                name = '',
                one_sentence = True,
                process_html = True
            )
        else:
            return ConfigurationInsertVersion(
                auto_response = True,
                callback = '',
                categories_threshold = 1.337,
                chars_threshold = 0,
                collection = openapi_client.models.configuration_collection_section.ConfigurationCollectionSection(
                    attribute_mentions_limit = 0, 
                    concept_topics_limit = 0, 
                    facet_atts_limit = 0, 
                    facet_mentions_limit = 0, 
                    facets_limit = 0, 
                    named_entities_limit = 0, 
                    named_mentions_limit = 0, 
                    query_topics_limit = 0, 
                    theme_mentions_limit = 0, 
                    themes_limit = 0, 
                    user_entities_limit = 0, 
                    user_mentions_limit = 0, ),
                document = openapi_client.models.configuration_document_section.ConfigurationDocumentSection(
                    auto_categories_limit = 0, 
                    concept_topics_limit = 0, 
                    detect_language = True, 
                    entity_themes_limit = 0, 
                    intentions = True, 
                    model_sentiment = True, 
                    named_entities_limit = 0, 
                    named_mentions_limit = 0, 
                    named_opinions_limit = 0, 
                    named_relations_limit = 0, 
                    phrases_limit = 0, 
                    pos_types = 'All', 
                    possible_phrases_limit = 0, 
                    query_topics_limit = 0, 
                    summary_limit = 0, 
                    theme_mentions_limit = 0, 
                    themes_limit = 0, 
                    user_entities_limit = 0, 
                    user_mentions_limit = 0, 
                    user_opinions_limit = 0, 
                    user_relations_limit = 0, ),
                entities_threshold = 56,
                is_primary = True,
                language = '',
                name = '',
                one_sentence = True,
                process_html = True,
        )
        """

    def testConfigurationInsertVersion(self):
        """Test ConfigurationInsertVersion"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
