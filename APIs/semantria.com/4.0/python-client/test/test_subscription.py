# coding: utf-8

"""
    Semantria

    Semantria applies Text and Sentiment Analysis to tweets, facebook posts, surveys, reviews or enterprise content.

    The version of the OpenAPI document: 4.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.subscription import Subscription

class TestSubscription(unittest.TestCase):
    """Subscription unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Subscription:
        """Test Subscription
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Subscription`
        """
        model = Subscription()
        if include_optional:
            return Subscription(
                basic_settings = openapi_client.models.subscription_basic_section.SubscriptionBasicSection(
                    auto_response_limit = 0, 
                    batch_limit = 0, 
                    blacklist_limit = 0, 
                    callback_batch_limit = 0, 
                    categories_limit = 0, 
                    category_samples_limit = 0, 
                    characters_limit = 0, 
                    collection_limit = 0, 
                    configurations_limit = 0, 
                    entities_limit = 0, 
                    output_data_limit = 0, 
                    processed_batch_limit = 0, 
                    queries_limit = 0, 
                    return_source_text = True, 
                    sentiment_limit = 0, ),
                billing_settings = openapi_client.models.subscription_billing_section.SubscriptionBillingSection(
                    app_seats_allocated = 0, 
                    app_seats_permitted = 0, 
                    data_calls_balance = 0, 
                    data_calls_limit = 0, 
                    data_calls_limit_interval = 0, 
                    docs_balance = 0, 
                    docs_limit = 0, 
                    docs_limit_interval = 0, 
                    docs_suggested = 0, 
                    docs_suggested_interval = 0, 
                    expiration_date = '', 
                    limit_type = '', 
                    polling_calls_balance = 0, 
                    polling_calls_limit = 0, 
                    polling_calls_limit_interval = 0, 
                    priority = '', 
                    settings_calls_balance = 0, 
                    settings_calls_limit = 0, 
                    settings_calls_limit_interval = 0, ),
                feature_settings = openapi_client.models.subscription_feature_section.SubscriptionFeatureSection(
                    collection = openapi_client.models.subscription_feature_section_collection.SubscriptionFeatureSectionCollection(
                        concept_topics = True, 
                        facets = True, 
                        mentions = True, 
                        named_entities = True, 
                        query_topics = True, 
                        themes = True, 
                        user_entities = True, ), 
                    document = openapi_client.models.subscription_feature_section_document.SubscriptionFeatureSectionDocument(
                        auto_categories = True, 
                        concept_topics = True, 
                        entity_themes = True, 
                        intentions = True, 
                        language_detection = True, 
                        mentions = True, 
                        model_sentiment = True, 
                        named_entities = True, 
                        named_relations = True, 
                        opinions = True, 
                        phrases_detection = True, 
                        pos_tagging = True, 
                        query_topics = True, 
                        sentiment_phrases = True, 
                        summary = True, 
                        themes = True, 
                        user_entities = True, 
                        user_relations = True, ), 
                    html_processing = True, 
                    supported_languages = '', 
                    templates = openapi_client.models.subscription_feature_section_template.SubscriptionFeatureSectionTemplate(
                        config_id = '', 
                        description = '', 
                        id = '', 
                        is_free = True, 
                        language = '', 
                        name = '', 
                        type = 'language-default', 
                        version = '', ), ),
                name = '',
                status = ''
            )
        else:
            return Subscription(
                basic_settings = openapi_client.models.subscription_basic_section.SubscriptionBasicSection(
                    auto_response_limit = 0, 
                    batch_limit = 0, 
                    blacklist_limit = 0, 
                    callback_batch_limit = 0, 
                    categories_limit = 0, 
                    category_samples_limit = 0, 
                    characters_limit = 0, 
                    collection_limit = 0, 
                    configurations_limit = 0, 
                    entities_limit = 0, 
                    output_data_limit = 0, 
                    processed_batch_limit = 0, 
                    queries_limit = 0, 
                    return_source_text = True, 
                    sentiment_limit = 0, ),
                billing_settings = openapi_client.models.subscription_billing_section.SubscriptionBillingSection(
                    app_seats_allocated = 0, 
                    app_seats_permitted = 0, 
                    data_calls_balance = 0, 
                    data_calls_limit = 0, 
                    data_calls_limit_interval = 0, 
                    docs_balance = 0, 
                    docs_limit = 0, 
                    docs_limit_interval = 0, 
                    docs_suggested = 0, 
                    docs_suggested_interval = 0, 
                    expiration_date = '', 
                    limit_type = '', 
                    polling_calls_balance = 0, 
                    polling_calls_limit = 0, 
                    polling_calls_limit_interval = 0, 
                    priority = '', 
                    settings_calls_balance = 0, 
                    settings_calls_limit = 0, 
                    settings_calls_limit_interval = 0, ),
                feature_settings = openapi_client.models.subscription_feature_section.SubscriptionFeatureSection(
                    collection = openapi_client.models.subscription_feature_section_collection.SubscriptionFeatureSectionCollection(
                        concept_topics = True, 
                        facets = True, 
                        mentions = True, 
                        named_entities = True, 
                        query_topics = True, 
                        themes = True, 
                        user_entities = True, ), 
                    document = openapi_client.models.subscription_feature_section_document.SubscriptionFeatureSectionDocument(
                        auto_categories = True, 
                        concept_topics = True, 
                        entity_themes = True, 
                        intentions = True, 
                        language_detection = True, 
                        mentions = True, 
                        model_sentiment = True, 
                        named_entities = True, 
                        named_relations = True, 
                        opinions = True, 
                        phrases_detection = True, 
                        pos_tagging = True, 
                        query_topics = True, 
                        sentiment_phrases = True, 
                        summary = True, 
                        themes = True, 
                        user_entities = True, 
                        user_relations = True, ), 
                    html_processing = True, 
                    supported_languages = '', 
                    templates = openapi_client.models.subscription_feature_section_template.SubscriptionFeatureSectionTemplate(
                        config_id = '', 
                        description = '', 
                        id = '', 
                        is_free = True, 
                        language = '', 
                        name = '', 
                        type = 'language-default', 
                        version = '', ), ),
                name = '',
                status = '',
        )
        """

    def testSubscription(self):
        """Test Subscription"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
