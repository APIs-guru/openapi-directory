# coding: utf-8

"""
    Semantria

    Semantria applies Text and Sentiment Analysis to tweets, facebook posts, surveys, reviews or enterprise content.

    The version of the OpenAPI document: 4.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.subscription_basic_section import SubscriptionBasicSection

class TestSubscriptionBasicSection(unittest.TestCase):
    """SubscriptionBasicSection unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SubscriptionBasicSection:
        """Test SubscriptionBasicSection
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SubscriptionBasicSection`
        """
        model = SubscriptionBasicSection()
        if include_optional:
            return SubscriptionBasicSection(
                auto_response_limit = 0,
                batch_limit = 0,
                blacklist_limit = 0,
                callback_batch_limit = 0,
                categories_limit = 0,
                category_samples_limit = 0,
                characters_limit = 0,
                collection_limit = 0,
                configurations_limit = 0,
                entities_limit = 0,
                output_data_limit = 0,
                processed_batch_limit = 0,
                queries_limit = 0,
                return_source_text = True,
                sentiment_limit = 0
            )
        else:
            return SubscriptionBasicSection(
                auto_response_limit = 0,
                batch_limit = 0,
                blacklist_limit = 0,
                callback_batch_limit = 0,
                categories_limit = 0,
                category_samples_limit = 0,
                characters_limit = 0,
                collection_limit = 0,
                configurations_limit = 0,
                entities_limit = 0,
                output_data_limit = 0,
                processed_batch_limit = 0,
                queries_limit = 0,
                return_source_text = True,
                sentiment_limit = 0,
        )
        """

    def testSubscriptionBasicSection(self):
        """Test SubscriptionBasicSection"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
