# coding: utf-8

"""
    Semantria

    Semantria applies Text and Sentiment Analysis to tweets, facebook posts, surveys, reviews or enterprise content.

    The version of the OpenAPI document: 4.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.statistic import Statistic

class TestStatistic(unittest.TestCase):
    """Statistic unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Statistic:
        """Test Statistic
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Statistic`
        """
        model = Statistic()
        if include_optional:
            return Statistic(
                calls_data = 0,
                calls_polling = 0,
                calls_settings = 0,
                colls_documents = 0,
                colls_failed = 0,
                colls_processed = 0,
                colls_responded = 0,
                configurations = [
                    openapi_client.models.statistic_configuration.StatisticConfiguration(
                        calls_data = 0, 
                        calls_polling = 0, 
                        calls_settings = 0, 
                        colls_failed = 0, 
                        colls_processed = 0, 
                        colls_responded = 0, 
                        config_id = '', 
                        docs_failed = 0, 
                        docs_processed = 0, 
                        docs_responded = 0, 
                        latest_used_app = '', 
                        name = '', 
                        overall_batches = 0, 
                        overall_calls = 0, 
                        overall_docs = 0, 
                        overall_exceeded = 0, 
                        overall_texts = 0, 
                        overcall_colls = 0, 
                        used_apps = '', )
                    ],
                docs_failed = 0,
                docs_processed = 0,
                docs_responded = 0,
                latest_used_app = '',
                name = '',
                overall_batches = 0,
                overall_calls = 0,
                overall_docs = 0,
                overall_exceeded = 0,
                overall_texts = 0,
                overcall_colls = 0,
                status = '',
                used_apps = ''
            )
        else:
            return Statistic(
                calls_data = 0,
                calls_polling = 0,
                calls_settings = 0,
                colls_documents = 0,
                colls_failed = 0,
                colls_processed = 0,
                colls_responded = 0,
                configurations = [
                    openapi_client.models.statistic_configuration.StatisticConfiguration(
                        calls_data = 0, 
                        calls_polling = 0, 
                        calls_settings = 0, 
                        colls_failed = 0, 
                        colls_processed = 0, 
                        colls_responded = 0, 
                        config_id = '', 
                        docs_failed = 0, 
                        docs_processed = 0, 
                        docs_responded = 0, 
                        latest_used_app = '', 
                        name = '', 
                        overall_batches = 0, 
                        overall_calls = 0, 
                        overall_docs = 0, 
                        overall_exceeded = 0, 
                        overall_texts = 0, 
                        overcall_colls = 0, 
                        used_apps = '', )
                    ],
                docs_failed = 0,
                docs_processed = 0,
                docs_responded = 0,
                latest_used_app = '',
                name = '',
                overall_batches = 0,
                overall_calls = 0,
                overall_docs = 0,
                overall_exceeded = 0,
                overall_texts = 0,
                overcall_colls = 0,
                status = '',
                used_apps = '',
        )
        """

    def testStatistic(self):
        """Test Statistic"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
