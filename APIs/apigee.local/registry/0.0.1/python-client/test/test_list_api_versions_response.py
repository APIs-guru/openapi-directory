# coding: utf-8

"""
    Registry API

    The Registry service allows teams to manage descriptions of APIs.

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_api_versions_response import ListApiVersionsResponse

class TestListApiVersionsResponse(unittest.TestCase):
    """ListApiVersionsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListApiVersionsResponse:
        """Test ListApiVersionsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListApiVersionsResponse`
        """
        model = ListApiVersionsResponse()
        if include_optional:
            return ListApiVersionsResponse(
                api_versions = [
                    openapi_client.models.api_version.ApiVersion(
                        annotations = {
                            'key' : ''
                            }, 
                        create_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        description = '', 
                        display_name = '', 
                        labels = {
                            'key' : ''
                            }, 
                        name = '', 
                        state = '', 
                        update_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                next_page_token = ''
            )
        else:
            return ListApiVersionsResponse(
        )
        """

    def testListApiVersionsResponse(self):
        """Test ListApiVersionsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
