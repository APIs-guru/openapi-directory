# coding: utf-8

"""
    Registry API

    The Registry service allows teams to manage descriptions of APIs.

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_api_specs_response import ListApiSpecsResponse

class TestListApiSpecsResponse(unittest.TestCase):
    """ListApiSpecsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListApiSpecsResponse:
        """Test ListApiSpecsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListApiSpecsResponse`
        """
        model = ListApiSpecsResponse()
        if include_optional:
            return ListApiSpecsResponse(
                api_specs = [
                    openapi_client.models.api_spec.ApiSpec(
                        annotations = {
                            'key' : ''
                            }, 
                        contents = '', 
                        create_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        description = '', 
                        filename = '', 
                        hash = '', 
                        labels = {
                            'key' : ''
                            }, 
                        mime_type = '', 
                        name = '', 
                        revision_create_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        revision_id = '', 
                        revision_update_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        size_bytes = 56, 
                        source_uri = '', )
                    ],
                next_page_token = ''
            )
        else:
            return ListApiSpecsResponse(
        )
        """

    def testListApiSpecsResponse(self):
        """Test ListApiSpecsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
