# coding: utf-8

# flake8: noqa

"""
    Gisgraphy webservices

    Since 2006, [Gisgraphy](http://www.gisgraphy.com) is a free, open source framework that offers the possibility to do geolocalisation and geocoding via Java APIs or REST webservices. Because geocoding is nothing without data, it provides an easy to use importer that will automatically download and import the necessary (free) data to your local database ([OpenStreetMap](http://www.openstreetmap.org/), [Geonames](http://www.geonames.org/) and [Quattroshapes](http://www.quattroshapes.com/): more than 100 million entries). You can also add your own data with the Web interface or the importer connectors provided. Gisgraphy is production ready, and has been designed to be scalable(load balanced), performant and used in other languages than just java : results can be output in XML, JSON, PHP, Python, Ruby, YAML, GeoRSS, and Atom. One of the most popular GPS tracking System (OpenGTS) also includes a Gisgraphy client...Gisgraphy is a framework. As a result it's flexible and powerful enough to be used in a lot of different use cases. [read more](http://www.gisgraphy.com)   if you use the premium servers, you can use the api key to test the webservices 

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


__version__ = "1.0.0"

# import apis into sdk package
from openapi_client.api.addressparser_standardizer_api import AddressparserStandardizerApi
from openapi_client.api.fulltext_autocomplete_api import FulltextAutocompleteApi
from openapi_client.api.geocoding_api import GeocodingApi
from openapi_client.api.geolocalisation_api import GeolocalisationApi
from openapi_client.api.reversegeocoding_api import ReversegeocodingApi
from openapi_client.api.streetservice_api import StreetserviceApi

# import ApiClient
from openapi_client.api_response import ApiResponse
from openapi_client.api_client import ApiClient
from openapi_client.configuration import Configuration
from openapi_client.exceptions import OpenApiException
from openapi_client.exceptions import ApiTypeError
from openapi_client.exceptions import ApiValueError
from openapi_client.exceptions import ApiKeyError
from openapi_client.exceptions import ApiAttributeError
from openapi_client.exceptions import ApiException

# import models into sdk package
from openapi_client.models.address import Address
from openapi_client.models.address_results_dto import AddressResultsDto
from openapi_client.models.fulltext_results_dto import FulltextResultsDto
from openapi_client.models.geoloc_results_dto import GeolocResultsDto
from openapi_client.models.gis_feature_distance import GisFeatureDistance
from openapi_client.models.house_number_dto import HouseNumberDto
from openapi_client.models.solr_response_dto import SolrResponseDto
from openapi_client.models.street_distance import StreetDistance
from openapi_client.models.street_search_results_dto import StreetSearchResultsDto
