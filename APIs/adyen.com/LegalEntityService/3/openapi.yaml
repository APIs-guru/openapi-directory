openapi: 3.1.0
servers:
  - url: https://kyc-test.adyen.com/lem/v3
info:
  contact:
    name: Adyen Developer Experience team
    url: https://github.com/Adyen/adyen-openapi
    x-twitter: Adyen
  description: |+
    The Legal Entity Management API enables you to manage legal entities that contain information required for verification. 
    ## Authentication
    Your Adyen contact will provide your API credential and an API key. To connect to the API, add an `X-API-Key` header with the API key as the value. For example:

    ```
    curl
    -H "X-API-Key: YOUR_API_KEY" \
    -H "Content-Type: application/json" \
    ...
    ```
    Alternatively, you can use the username and password of your API credential to connect to the API using basic authentication. For example:

    ```
    curl
    -U "ws_123456@Scope.Company_YOUR_COMPANY_ACCOUNT":"YourWsPassword" \
    -H "Content-Type: application/json" \
    ...
    ```
    ## Versioning
    The Legal Entity Management API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: "vXX", where XX is the version number.

    For example:
    ```
    https://kyc-test.adyen.com/lem/v3/legalEntities
    ```
    >If you are using hosted onboarding and just beginning your integration, use v3 for your API requests. Otherwise, use v2.

    ## Going live
    When going live, your Adyen contact will provide your API credential for the live environment. You can then use the API key or the username and password to send requests to `https://kyc-live.adyen.com/lem/v3`.

  termsOfService: https://www.adyen.com/legal/terms-and-conditions
  title: Legal Entity Management API
  version: "3"
  x-apisguru-categories:
    - payment
  x-logo:
    url: https://twitter.com/Adyen/profile_image?size=original
  x-origin:
    - format: openapi
      url: https://raw.githubusercontent.com/Adyen/adyen-openapi/main/json/LegalEntityService-v3.json
      version: "3.1"
  x-preferred: true
  x-providerName: adyen.com
  x-publicVersion: true
  x-serviceName: LegalEntityService
tags:
  - name: Legal entities
  - name: Transfer instruments
  - name: Business lines
  - name: Documents
  - name: Terms of Service
  - name: Hosted Onboarding
  - name: PCI questionnaires
paths:
  /businessLines:
    post:
      description: |+
        Creates a business line. 

        This resource contains information about your user's line of business, including their industry and their source of funds. Adyen uses this information to verify your users as required by payment industry regulations. Adyen informs you of the verification results through webhooks or API responses.

        >If you are using hosted onboarding and just beginning your integration, use v3 for your API requests. Otherwise, use v2.

      operationId: post-businessLines
      requestBody:
        content:
          application/json:
            examples:
              createBusinessLines-businessAccounts:
                $ref: "#/components/examples/post-businessLines-createBusinessLines-businessAccounts"
              createBusinessLines-receive:
                $ref: "#/components/examples/post-businessLines-createBusinessLines-receive"
            schema:
              $ref: "#/components/schemas/BusinessLineInfo"
      responses:
        "200":
          content:
            application/json:
              examples:
                createBusinessLines-businessAccounts:
                  $ref: "#/components/examples/post-businessLines-createBusinessLines-businessAccounts-200"
                createBusinessLines-receive:
                  $ref: "#/components/examples/post-businessLines-createBusinessLines-receive-200"
              schema:
                $ref: "#/components/schemas/BusinessLine"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Create a business line
      tags:
        - Business lines
      x-addedInVersion: "1"
      x-methodName: createBusinessLine
      x-sortIndex: 12
  /businessLines/{id}:
    delete:
      description: |-
        Deletes a business line.

         >If you delete a business line linked to a [payment method](https://docs.adyen.com/development-resources/paymentmethodvariant#management-api), it can affect your merchant account's ability to use the [payment method](https://docs.adyen.com/api-explorer/Management/latest/post/merchants/_merchantId_/paymentMethodSettings). The business line is removed from all linked merchant accounts.
      operationId: delete-businessLines-id
      parameters:
        - description: The unique identifier of the business line to be deleted.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: "No Content - look at the actual response code for the status of the request. "
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Delete a business line
      tags:
        - Business lines
      x-addedInVersion: "1"
      x-methodName: deleteBusinessLine
      x-sortIndex: 14
    get:
      description: Returns the detail of a business line.
      operationId: get-businessLines-id
      parameters:
        - description: The unique identifier of the business line.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-businessLines-id-success-200"
              schema:
                $ref: "#/components/schemas/BusinessLine"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a business line
      tags:
        - Business lines
      x-addedInVersion: "1"
      x-methodName: getBusinessLine
      x-sortIndex: 13
    patch:
      description: Updates a business line.
      operationId: patch-businessLines-id
      parameters:
        - description: The unique identifier of the business line.
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              updateBusinessLine:
                $ref: "#/components/examples/patch-businessLines-id-updateBusinessLine"
            schema:
              $ref: "#/components/schemas/BusinessLineInfoUpdate"
      responses:
        "200":
          content:
            application/json:
              examples:
                updateBusinessLine:
                  $ref: "#/components/examples/patch-businessLines-id-updateBusinessLine-200"
              schema:
                $ref: "#/components/schemas/BusinessLine"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Update a business line
      tags:
        - Business lines
      x-addedInVersion: "2"
      x-methodName: updateBusinessLine
      x-sortIndex: 15
  /documents:
    post:
      description: |-
        Uploads a document for verification checks.

         Adyen uses the information from the [legal entity](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/legalEntities) to run automated verification checks. If these checks fail, you will be notified to provide additional documents.

         You should only upload documents when Adyen requests additional information for the legal entity.

         >You can upload a maximum of 15 pages for photo IDs.
      operationId: post-documents
      parameters:
        - description: Use a suberror code as your requested verification code. You can include one code at a time in your request header. Requested verification codes can only be used in your test environment.
          example: 1_3008
          in: header
          name: x-requested-verification-code
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              uploadDocument:
                $ref: "#/components/examples/post-documents-uploadDocument"
            schema:
              $ref: "#/components/schemas/Document"
      responses:
        "200":
          content:
            application/json:
              examples:
                uploadDocument:
                  $ref: "#/components/examples/post-documents-uploadDocument-200"
              schema:
                $ref: "#/components/schemas/Document"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Upload a document for verification checks
      tags:
        - Documents
      x-addedInVersion: "1"
      x-methodName: uploadDocumentForVerificationChecks
      x-sortIndex: 4
  /documents/{id}:
    delete:
      description: Deletes a document.
      operationId: delete-documents-id
      parameters:
        - description: The unique identifier of the document to be deleted.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: "No Content - look at the actual response code for the status of the request. "
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Delete a document
      tags:
        - Documents
      x-addedInVersion: "1"
      x-methodName: deleteDocument
      x-sortIndex: 7
    get:
      description: Returns a document.
      operationId: get-documents-id
      parameters:
        - description: The unique identifier of the document.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: Do not load document content while fetching the document.
          in: query
          name: skipContent
          required: false
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-documents-id-success-200"
              schema:
                $ref: "#/components/schemas/Document"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a document
      tags:
        - Documents
      x-addedInVersion: "1"
      x-methodName: getDocument
      x-sortIndex: 5
    patch:
      description: |-
        Updates a document.

         >You can upload a maximum of 15 pages for photo IDs.
      operationId: patch-documents-id
      parameters:
        - description: The unique identifier of the document to be updated.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: Use the requested verification code 0_0001 to resolve any suberrors associated with the document. Requested verification codes can only be used in your test environment.
          example: 0_0001
          in: header
          name: x-requested-verification-code
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              updateDocument:
                $ref: "#/components/examples/patch-documents-id-updateDocument"
            schema:
              $ref: "#/components/schemas/Document"
      responses:
        "200":
          content:
            application/json:
              examples:
                updateDocument:
                  $ref: "#/components/examples/patch-documents-id-updateDocument-200"
              schema:
                $ref: "#/components/schemas/Document"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Update a document
      tags:
        - Documents
      x-addedInVersion: "1"
      x-methodName: updateDocument
      x-sortIndex: 6
  /legalEntities:
    post:
      description: |+
        Creates a legal entity. 

        This resource contains information about the user that will be onboarded in your platform. Adyen uses this information to perform verification checks as required by payment industry regulations. Adyen informs you of the verification results through webhooks or API responses. 

        >If you are using hosted onboarding and just beginning your integration, use v3 for your API requests. Otherwise, use v2.

      operationId: post-legalEntities
      parameters:
        - description: Use a suberror code as your requested verification code. You can include one code at a time in your request header. Requested verification codes can only be used in your test environment.
          example: 1_3004
          in: header
          name: x-requested-verification-code
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              createLegalEntityIndividualNL:
                $ref: "#/components/examples/post-legalEntities-createLegalEntityIndividualNL"
              createLegalEntityIndividualUS:
                $ref: "#/components/examples/post-legalEntities-createLegalEntityIndividualUS"
              createLegalEntityOrganizationNL:
                $ref: "#/components/examples/post-legalEntities-createLegalEntityOrganizationNL"
              createLegalEntityOrganizationUS:
                $ref: "#/components/examples/post-legalEntities-createLegalEntityOrganizationUS"
              createLegalEntitySolePropNL:
                $ref: "#/components/examples/post-legalEntities-createLegalEntitySolePropNL"
              createLegalEntitySolePropUS:
                $ref: "#/components/examples/post-legalEntities-createLegalEntitySolePropUS"
              createTrustAU:
                $ref: "#/components/examples/post-legalEntities-createTrustAU"
            schema:
              $ref: "#/components/schemas/LegalEntityInfoRequiredType"
      responses:
        "200":
          content:
            application/json:
              examples:
                createLegalEntityIndividualNL:
                  $ref: "#/components/examples/post-legalEntities-createLegalEntityIndividualNL-200"
                createLegalEntityIndividualUS:
                  $ref: "#/components/examples/post-legalEntities-createLegalEntityIndividualUS-200"
                createLegalEntityOrganizationNL:
                  $ref: "#/components/examples/post-legalEntities-createLegalEntityOrganizationNL-200"
                createLegalEntityOrganizationUS:
                  $ref: "#/components/examples/post-legalEntities-createLegalEntityOrganizationUS-200"
                createLegalEntitySolePropNL:
                  $ref: "#/components/examples/post-legalEntities-createLegalEntitySolePropNL-200"
                createLegalEntitySolePropUS:
                  $ref: "#/components/examples/post-legalEntities-createLegalEntitySolePropUS-200"
                createTrustAU:
                  $ref: "#/components/examples/post-legalEntities-createTrustAU-200"
              schema:
                $ref: "#/components/schemas/LegalEntity"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Create a legal entity
      tags:
        - Legal entities
      x-addedInVersion: "1"
      x-methodName: createLegalEntity
      x-sortIndex: 1
  /legalEntities/{id}:
    get:
      description: Returns a legal entity.
      operationId: get-legalEntities-id
      parameters:
        - description: The unique identifier of the legal entity.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-legalEntities-id-success-200"
              schema:
                $ref: "#/components/schemas/LegalEntity"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a legal entity
      tags:
        - Legal entities
      x-addedInVersion: "1"
      x-methodName: getLegalEntity
      x-sortIndex: 2
    patch:
      description: |-
        Updates a legal entity.

         >To change the legal entity type, include only the new `type` in your request. To update the `entityAssociations` array, you need to replace the entire array. For example, if the array has 3 entries and you want to remove 1 entry, you need to PATCH the resource with the remaining 2 entries.
      operationId: patch-legalEntities-id
      parameters:
        - description: The unique identifier of the legal entity.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: Use the requested verification code 0_0001 to resolve any suberrors associated with the legal entity. Requested verification codes can only be used in your test environment.
          example: 0_0001
          in: header
          name: x-requested-verification-code
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              changeLegalEntityType:
                $ref: "#/components/examples/patch-legalEntities-id-changeLegalEntityType"
              updateLegalEntityOrganization:
                $ref: "#/components/examples/patch-legalEntities-id-updateLegalEntityOrganization"
              updateLegalEntitySoleProp:
                $ref: "#/components/examples/patch-legalEntities-id-updateLegalEntitySoleProp"
              updateTrustMember:
                $ref: "#/components/examples/patch-legalEntities-id-updateTrustMember"
              updateTrustMemberExempt:
                $ref: "#/components/examples/patch-legalEntities-id-updateTrustMemberExempt"
            schema:
              $ref: "#/components/schemas/LegalEntityInfo"
      responses:
        "200":
          content:
            application/json:
              examples:
                changeLegalEntityType:
                  $ref: "#/components/examples/patch-legalEntities-id-changeLegalEntityType-200"
                updateLegalEntityOrganization:
                  $ref: "#/components/examples/patch-legalEntities-id-updateLegalEntityOrganization-200"
                updateLegalEntitySoleProp:
                  $ref: "#/components/examples/patch-legalEntities-id-updateLegalEntitySoleProp-200"
                updateTrustMember:
                  $ref: "#/components/examples/patch-legalEntities-id-updateTrustMember-200"
                updateTrustMemberExempt:
                  $ref: "#/components/examples/patch-legalEntities-id-updateTrustMemberExempt-200"
              schema:
                $ref: "#/components/schemas/LegalEntity"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Update a legal entity
      tags:
        - Legal entities
      x-addedInVersion: "1"
      x-methodName: updateLegalEntity
      x-sortIndex: 3
  /legalEntities/{id}/businessLines:
    get:
      description: Returns the business lines owned by a legal entity.
      operationId: get-legalEntities-id-businessLines
      parameters:
        - description: The unique identifier of the legal entity.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-legalEntities-id-businessLines-success-200"
              schema:
                $ref: "#/components/schemas/BusinessLines"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get all business lines under a legal entity
      tags:
        - Legal entities
      x-addedInVersion: "1"
      x-methodName: getAllBusinessLinesUnderLegalEntity
      x-sortIndex: 4
  /legalEntities/{id}/checkVerificationErrors:
    post:
      description: Returns the verification errors for a legal entity and its supporting entities.
      operationId: post-legalEntities-id-checkVerificationErrors
      parameters:
        - description: The unique identifier of the legal entity.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                checkVerificationErrors:
                  $ref: "#/components/examples/post-legalEntities-id-checkVerificationErrors-checkVerificationErrors-200"
              schema:
                $ref: "#/components/schemas/VerificationErrors"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Check a legal entity's verification errors
      tags:
        - Legal entities
      x-addedInVersion: "3"
      x-methodName: checkLegalEntitysVerificationErrors
      x-sortIndex: 2
  /legalEntities/{id}/confirmDataReview:
    post:
      description: Confirms that your user has reviewed the data for the legal entity specified in the path. Call this endpoint to inform Adyen that your user reviewed and verified that the data is up-to-date. The endpoint returns the timestamp of when Adyen received the request.
      operationId: post-legalEntities-id-confirmDataReview
      parameters:
        - description: The unique identifier of the legal entity.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                confirmDataReview:
                  $ref: "#/components/examples/post-legalEntities-id-confirmDataReview-confirmDataReview-200"
              schema:
                $ref: "#/components/schemas/DataReviewConfirmationResponse"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Confirm data review
      tags:
        - Legal entities
      x-addedInVersion: "3"
      x-methodName: confirmDataReview
      x-sortIndex: 22
  /legalEntities/{id}/onboardingLinks:
    post:
      description: |+
        Returns a link to an Adyen-hosted onboarding page where you need to redirect your user.

        >If you are using hosted onboarding and just beginning your integration, use v3 for your API requests. Otherwise, use v2.

      operationId: post-legalEntities-id-onboardingLinks
      parameters:
        - description: The unique identifier of the legal entity
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              createOnboardingLink:
                $ref: "#/components/examples/post-legalEntities-id-onboardingLinks-createOnboardingLink"
            schema:
              $ref: "#/components/schemas/OnboardingLinkInfo"
      responses:
        "200":
          content:
            application/json:
              examples:
                createOnboardingLink:
                  $ref: "#/components/examples/post-legalEntities-id-onboardingLinks-createOnboardingLink-200"
              schema:
                $ref: "#/components/schemas/OnboardingLink"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a link to an Adyen-hosted onboarding page
      tags:
        - Hosted Onboarding
      x-addedInVersion: "1"
      x-methodName: getLinkToAdyenhostedOnboardingPage
      x-sortIndex: 1
  /legalEntities/{id}/pciQuestionnaires:
    get:
      description: Get a list of signed PCI questionnaires.
      operationId: get-legalEntities-id-pciQuestionnaires
      parameters:
        - description: The unique identifier of the legal entity to get PCI questionnaire information.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-legalEntities-id-pciQuestionnaires-success-200"
              schema:
                $ref: "#/components/schemas/GetPciQuestionnaireInfosResponse"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get PCI questionnaire details
      tags:
        - PCI questionnaires
      x-addedInVersion: "1"
      x-methodName: getPciQuestionnaireDetails
      x-sortIndex: 3
  /legalEntities/{id}/pciQuestionnaires/generatePciTemplates:
    post:
      description: Generates the required PCI questionnaires based on the user's [salesChannel](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/businessLines__reqParam_salesChannels).
      operationId: post-legalEntities-id-pciQuestionnaires-generatePciTemplates
      parameters:
        - description: The unique identifier of the legal entity to get PCI questionnaire information.
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              createPciQuestionnaire:
                $ref: "#/components/examples/post-legalEntities-id-pciQuestionnaires-generatePciTemplates-createPciQuestionnaire"
            schema:
              $ref: "#/components/schemas/GeneratePciDescriptionRequest"
      responses:
        "200":
          content:
            application/json:
              examples:
                createPciQuestionnaire:
                  $ref: "#/components/examples/post-legalEntities-id-pciQuestionnaires-generatePciTemplates-createPciQuestionnaire-200"
              schema:
                $ref: "#/components/schemas/GeneratePciDescriptionResponse"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Generate PCI questionnaire
      tags:
        - PCI questionnaires
      x-addedInVersion: "1"
      x-methodName: generatePciQuestionnaire
      x-sortIndex: 1
  /legalEntities/{id}/pciQuestionnaires/signPciTemplates:
    post:
      description: Signs the required PCI questionnaire.
      operationId: post-legalEntities-id-pciQuestionnaires-signPciTemplates
      parameters:
        - description: The legal entity ID of the user that has a contractual relationship with your platform.
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              signPciQuestionnaire:
                $ref: "#/components/examples/post-legalEntities-id-pciQuestionnaires-signPciTemplates-signPciQuestionnaire"
            schema:
              $ref: "#/components/schemas/PciSigningRequest"
      responses:
        "200":
          content:
            application/json:
              examples:
                signPciQuestionnaire:
                  $ref: "#/components/examples/post-legalEntities-id-pciQuestionnaires-signPciTemplates-signPciQuestionnaire-200"
              schema:
                $ref: "#/components/schemas/PciSigningResponse"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Sign PCI questionnaire
      tags:
        - PCI questionnaires
      x-addedInVersion: "1"
      x-methodName: signPciQuestionnaire
      x-sortIndex: 2
  /legalEntities/{id}/pciQuestionnaires/{pciid}:
    get:
      description: Returns the signed PCI questionnaire.
      operationId: get-legalEntities-id-pciQuestionnaires-pciid
      parameters:
        - description: The legal entity ID of the individual who signed the PCI questionnaire.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: The unique identifier of the signed PCI questionnaire.
          in: path
          name: pciid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-legalEntities-id-pciQuestionnaires-pciid-success-200"
              schema:
                $ref: "#/components/schemas/GetPciQuestionnaireResponse"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get PCI questionnaire
      tags:
        - PCI questionnaires
      x-addedInVersion: "1"
      x-methodName: getPciQuestionnaire
      x-sortIndex: 4
  /legalEntities/{id}/termsOfService:
    post:
      description: Returns the Terms of Service document for a legal entity.
      operationId: post-legalEntities-id-termsOfService
      parameters:
        - description: The unique identifier of the legal entity. For sole proprietorships, this is the individual legal entity ID of the owner.
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              createTermsofService:
                $ref: "#/components/examples/post-legalEntities-id-termsOfService-createTermsofService"
            schema:
              $ref: "#/components/schemas/GetTermsOfServiceDocumentRequest"
      responses:
        "200":
          content:
            application/json:
              examples:
                createTermsofService:
                  $ref: "#/components/examples/post-legalEntities-id-termsOfService-createTermsofService-200"
              schema:
                $ref: "#/components/schemas/GetTermsOfServiceDocumentResponse"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get Terms of Service document
      tags:
        - Terms of Service
      x-addedInVersion: "1"
      x-methodName: getTermsOfServiceDocument
      x-sortIndex: 1
  /legalEntities/{id}/termsOfService/{termsofservicedocumentid}:
    patch:
      description: Accepts Terms of Service.
      operationId: patch-legalEntities-id-termsOfService-termsofservicedocumentid
      parameters:
        - description: The unique identifier of the legal entity. For sole proprietorships, this is the individual legal entity ID of the owner.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: The unique identifier of the Terms of Service document.
          in: path
          name: termsofservicedocumentid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              updateTermsofService:
                $ref: "#/components/examples/patch-legalEntities-id-termsOfService-termsofservicedocumentid-updateTermsofService"
            schema:
              $ref: "#/components/schemas/AcceptTermsOfServiceRequest"
      responses:
        "200":
          content:
            application/json:
              examples:
                updateTermsofService:
                  $ref: "#/components/examples/patch-legalEntities-id-termsOfService-termsofservicedocumentid-updateTermsofService-200"
              schema:
                $ref: "#/components/schemas/AcceptTermsOfServiceResponse"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Accept Terms of Service
      tags:
        - Terms of Service
      x-addedInVersion: "1"
      x-methodName: acceptTermsOfService
      x-sortIndex: 2
  /legalEntities/{id}/termsOfServiceAcceptanceInfos:
    get:
      description: Returns Terms of Service information for a legal entity.
      operationId: get-legalEntities-id-termsOfServiceAcceptanceInfos
      parameters:
        - description: The unique identifier of the legal entity. For sole proprietorships, this is the individual legal entity ID of the owner.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-legalEntities-id-termsOfServiceAcceptanceInfos-success-200"
              schema:
                $ref: "#/components/schemas/GetTermsOfServiceAcceptanceInfosResponse"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get Terms of Service information for a legal entity
      tags:
        - Terms of Service
      x-addedInVersion: "1"
      x-methodName: getTermsOfServiceInformationForLegalEntity
      x-sortIndex: 3
  /legalEntities/{id}/termsOfServiceStatus:
    get:
      description: Returns the required types of Terms of Service that need to be accepted by a legal entity.
      operationId: get-legalEntities-id-termsOfServiceStatus
      parameters:
        - description: The unique identifier of the legal entity. For sole proprietorships, this is the individual legal entity ID of the owner.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-legalEntities-id-termsOfServiceStatus-success-200"
              schema:
                $ref: "#/components/schemas/CalculateTermsOfServiceStatusResponse"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get Terms of Service status
      tags:
        - Terms of Service
      x-addedInVersion: "1"
      x-methodName: getTermsOfServiceStatus
      x-sortIndex: 4
  /themes:
    get:
      description: |+
        Returns a list of hosted onboarding page themes.

        >If you are using hosted onboarding and just beginning your integration, use v3 for your API requests. Otherwise, use v2.

      operationId: get-themes
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-themes-success-200"
              schema:
                $ref: "#/components/schemas/OnboardingThemes"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a list of hosted onboarding page themes
      tags:
        - Hosted Onboarding
      x-addedInVersion: "1"
      x-methodName: listHostedOnboardingPageThemes
      x-sortIndex: 2
  /themes/{id}:
    get:
      description: |+
        Returns the details of the theme identified in the path.>If you are using hosted onboarding and just beginning your integration, use v3 for your API requests. Otherwise, use v2.

      operationId: get-themes-id
      parameters:
        - description: The unique identifier of the theme
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-themes-id-success-200"
              schema:
                $ref: "#/components/schemas/OnboardingTheme"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get an onboarding link theme
      tags:
        - Hosted Onboarding
      x-addedInVersion: "1"
      x-methodName: getOnboardingLinkTheme
      x-sortIndex: 4
  /transferInstruments:
    post:
      description: |-
        Creates a transfer instrument. 

        A transfer instrument is a bank account that a legal entity owns. Adyen performs verification checks on the transfer instrument as required by payment industry regulations. We inform you of the verification results through webhooks or API responses.

        When the transfer instrument passes the verification checks, you can start sending funds from the balance platform to the transfer instrument (such as payouts).
      operationId: post-transferInstruments
      parameters:
        - description: Use a suberror code as your requested verification code. You can include one code at a time in your request header. Requested verification codes can only be used in your test environment.
          example: 1_7002
          in: header
          name: x-requested-verification-code
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              createTransferInstrumentEUR:
                $ref: "#/components/examples/post-transferInstruments-createTransferInstrumentEUR"
              createTransferInstrumentUSD:
                $ref: "#/components/examples/post-transferInstruments-createTransferInstrumentUSD"
            schema:
              $ref: "#/components/schemas/TransferInstrumentInfo"
      responses:
        "200":
          content:
            application/json:
              examples:
                createTransferInstrumentEUR:
                  $ref: "#/components/examples/post-transferInstruments-createTransferInstrumentEUR-200"
                createTransferInstrumentUSD:
                  $ref: "#/components/examples/post-transferInstruments-createTransferInstrumentUSD-200"
              schema:
                $ref: "#/components/schemas/TransferInstrument"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Create a transfer instrument
      tags:
        - Transfer instruments
      x-addedInVersion: "1"
      x-methodName: createTransferInstrument
      x-sortIndex: 8
  /transferInstruments/{id}:
    delete:
      description: Deletes a transfer instrument.
      operationId: delete-transferInstruments-id
      parameters:
        - description: The unique identifier of the transfer instrument to be deleted.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: "No Content - look at the actual response code for the status of the request. "
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Delete a transfer instrument
      tags:
        - Transfer instruments
      x-addedInVersion: "1"
      x-methodName: deleteTransferInstrument
      x-sortIndex: 11
    get:
      description: Returns the details of a transfer instrument.
      operationId: get-transferInstruments-id
      parameters:
        - description: The unique identifier of the transfer instrument.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  $ref: "#/components/examples/get-transferInstruments-id-success-200"
              schema:
                $ref: "#/components/schemas/TransferInstrument"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a transfer instrument
      tags:
        - Transfer instruments
      x-addedInVersion: "1"
      x-methodName: getTransferInstrument
      x-sortIndex: 9
    patch:
      description: Updates a transfer instrument.
      operationId: patch-transferInstruments-id
      parameters:
        - description: The unique identifier of the transfer instrument.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: Use the requested verification code 0_0001 to resolve any suberrors associated with the transfer instrument. Requested verification codes can only be used in your test environment.
          example: 0_0001
          in: header
          name: x-requested-verification-code
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              updateTransferInstrument:
                $ref: "#/components/examples/patch-transferInstruments-id-updateTransferInstrument"
            schema:
              $ref: "#/components/schemas/TransferInstrumentInfo"
      responses:
        "200":
          content:
            application/json:
              examples:
                updateTransferInstrument:
                  $ref: "#/components/examples/patch-transferInstruments-id-updateTransferInstrument-200"
              schema:
                $ref: "#/components/schemas/TransferInstrument"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Update a transfer instrument
      tags:
        - Transfer instruments
      x-addedInVersion: "1"
      x-methodName: updateTransferInstrument
      x-sortIndex: 10
components:
  examples:
    get-businessLines-id-success-200:
      description: Example response when getting the business line details
      summary: Details of a business line
      value:
        id: SE322KH223222F5GV2SQ924F6
        industryCode: "4531"
        legalEntityId: LE00000000000000000000001
        service: banking
        sourceOfFunds:
          adyenProcessedFunds: false
          description: Funds from my flower shop business
          type: business
        webData:
          - webAddress: https://www.adyen.com
            webAddressId: SE322JV223222J5H8V87B3DHN
    get-documents-id-success-200:
      description: Example response when getting document details
      summary: Details of a document
      value:
        attachments:
          - content: JVBERi0xLjQKJcOkw7zDtsOfCjIgMCBv+f/ub0j6JPRX+E3EmC==
        description: Registration doc for Example Company
        fileName: Registration doc for Example Company
        id: SE322JV223222F5GV2N9L8GDK
        owner:
          id: LE00000000000000000000001
          type: legalEntity
        type: registrationDocument
    get-legalEntities-id-businessLines-success-200:
      description: Example response when getting the list of business lines for a legal entity
      summary: List of business lines for a legal entity
      value:
        businessLines:
          - id: SE322JV223222F5GVGMLNB83F
            industryCode: "55"
            legalEntityId: LE00000000000000000000001
            service: banking
            sourceOfFunds:
              adyenProcessedFunds: false
              description: Funds from my flower shop business
              type: business
            webData:
              - webAddress: https://www.adyen.com
                webAddressId: SE577HA334222K5H8V87B3BPU
          - id: SE322JV223222F5GVGPNRB9GJ
            industryCode: 339E
            legalEntityId: LE00000000000000000000001
            salesChannels:
              - eCommerce
              - ecomMoto
            service: paymentProcessing
            webData:
              - webAddress: https://yoururl.com
                webAddressId: SE908HJ723222F5GVGPNR55YH
    get-legalEntities-id-pciQuestionnaires-pciid-success-200:
      description: Example response when getting the details of a PCI questionnaire
      summary: Details of a PCI questionnaire
      value:
        content: JVBERi0xLjQKJcOkw7zDtsOfCjIgMCBv+f/ub0j6JPRX+E3EmC==
        createdAt: 2023-03-02T17:54:19.538365Z
        id: PCID422GZ22322565HHMH48CW63CPH
        validUntil: 2024-03-01T17:54:19.538365Z
    get-legalEntities-id-pciQuestionnaires-success-200:
      description: Example response when getting the list of PCI questionnaires
      summary: Details of PCI questionnaires signed by a user
      value:
        data:
          - createdAt: 2023-03-02T17:54:19.538365Z
            id: PCID422GZ22322565HHMH48CW63CPH
            validUntil: 2024-03-01T17:54:19.538365Z
          - createdAt: 2023-03-02T17:54:19.538365Z
            id: PCID422GZ22322565HHMH49CW75Z9H
            validUntil: 2024-03-01T17:54:19.538365Z
    get-legalEntities-id-success-200:
      description: Example response when getting the details of a legal entity
      summary: Details of a legal entity
      value:
        capabilities:
          receiveFromBalanceAccount:
            allowed: false
            requested: true
            verificationStatus: pending
          receiveFromPlatformPayments:
            allowed: false
            requested: true
            verificationStatus: pending
          receivePayments:
            allowed: false
            requested: true
            verificationStatus: pending
          sendToBalanceAccount:
            allowed: false
            requested: true
            verificationStatus: pending
          sendToTransferInstrument:
            allowed: false
            requested: true
            transferInstruments:
              - allowed: false
                id: SE322KH223222F5GXZFNM3BGP
                requested: true
                verificationStatus: pending
            verificationStatus: pending
        id: YOUR_LEGAL_ENTITY
        individual:
          birthData:
            dateOfBirth: 1990-06-21
          email: s.hopper@example.com
          name:
            firstName: Simone
            lastName: Hopper
          residentialAddress:
            city: Amsterdam
            country: NL
            postalCode: 1011DJ
            street: Simon Carmiggeltstraat 6 - 50
            street2: "274"
        transferInstruments:
          - accountIdentifier: NL**ABNA******0123
            id: SE322KH223222F5GXZFNM3BGP
            trustedSource: false
        type: individual
    get-legalEntities-id-termsOfServiceAcceptanceInfos-success-200:
      description: Example response when getting Terms of Service information for a legal entity
      summary: Terms of Service information for a legal entity
      value:
        data:
          - acceptedBy: LE00000000000000000000002
            acceptedFor: LE00000000000000000000001
            createdAt: 2022-12-05T13:36:58.212253Z
            id: TOSA000AB00000000B2AAAB2BA0AA0
            type: adyenIssuing
    get-legalEntities-id-termsOfServiceStatus-success-200:
      description: Example response when getting the type of Terms of Service
      summary: Terms of Service status for a legal entity
      value:
        termsOfServiceTypes:
          - adyenIssuing
    get-themes-id-success-200:
      description: Example response when getting the details of a page theme
      summary: Details of a page theme
      value:
        createdAt: 2022-06-22T00:00:00+02:00
        description: Light colors theme
        id: ONBT422KH223222D5G82M968PB46HR
        properties:
          backgroundColor: "#FFFFFF"
          backgroundImage: ONBA422JV223222D5G82M96F6P2VTV
          faqPage: https://docs.adyen.com/hosted-onboarding-faqs
          logo: ONBA422JV223222D5FWC4TK25S3DQW
          pageLayout: withBackground
          pageTitle: Example onboarding light colors
          privacyStatementPage: https://www.adyen.com/legal/terms-and-conditions
          supportPage: https://www.adyen.com/contact
        updatedAt: 2022-08-25T00:00:00+02:00
    get-themes-success-200:
      description: Example response when getting the list of hosted onboarding themes
      summary: List of hosted onboarding themes for your balance platform
      value:
        themes:
          - createdAt: 2022-01-20T00:00:00+01:00
            description: Dark colors theme
            id: ONBT422JV223222D5FGJ77B9C52WNN
            properties:
              backgroundColor: "#000000"
              backgroundImage: ONBA422KH223222D5G8VG2TG9S5ZBH
              faqPage: https://docs.adyen.com/hosted-onboarding-faqs
              logo: ONBA422JV223222D5G8VG2T8JV39GV
              pageLayout: withBackground
              pageTitle: Example onboarding dark colors
              supportPage: https://www.adyen.com/contact
            updatedAt: 2022-08-25T00:00:00+02:00
          - createdAt: 2022-06-22T00:00:00+02:00
            description: Light colors theme
            id: ONBT422KH223222D5G82M968PB46HR
            properties:
              backgroundColor: "#FFFFFF"
              backgroundImage: ONBA422JV223222D5G82M96F6P2VTV
              faqPage: https://docs.adyen.com/hosted-onboarding-faqs
              logo: ONBA422JV223222D5FWC4TK25S3DQW
              pageLayout: withBackground
              pageTitle: Example onboarding light colors
              privacyStatementPage: https://www.adyen.com/legal/terms-and-conditions
              supportPage: https://www.adyen.com/contact
            updatedAt: 2022-08-25T00:00:00+02:00
    get-transferInstruments-id-success-200:
      description: Example response when getting the details of a new transfer instrument
      summary: Details of a transfer instrument
      value:
        bankAccount:
          accountIdentification:
            iban: NL62ABNA0000000123
            type: iban
          countryCode: NL
          currencyCode: EUR
        capabilities:
          sendToTransferInstrument:
            allowed: false
            requested: true
            verificationStatus: pending
        id: SE322KH223222F5GXZFNM3BGP
        legalEntityId: LE00000000000000000000001
        type: bankAccount
    patch-businessLines-id-updateBusinessLine:
      description: Example request for updating the industry code of a business line
      summary: Update a business line
      value:
        industryCode: "55"
        webData:
          - webAddress: https://www.example.com
    patch-businessLines-id-updateBusinessLine-200:
      description: Example response for updating the industry code of a business line
      summary: Business line updated
      value:
        id: SE322JV223222F5GVGMLNB83F
        industryCode: "55"
        legalEntityId: LE00000000000000000000001
        service: banking
        sourceOfFunds:
          adyenProcessedFunds: false
          description: Funds from my flower shop business
          type: business
        webData:
          - webAddress: https://www.example.com
            webAddressId: SE966LI345672J5H8V87B3FGH
    patch-documents-id-updateDocument:
      description: Example request for updating a document
      summary: Update a document
      value:
        description: Proof of industry doc for Example Company
        type: proofOfIndustry
    patch-documents-id-updateDocument-200:
      description: Example response when a document is updated
      summary: Document updated
      value:
        attachments:
          - content: JVBERi0xLjQKJcOkw7zDtsOfCjIgMCBv+f/ub0j6JPRX+E3EmC==
        description: Proof of industry for Example Company
        fileName: Proof of industry for Example Company
        id: SE322JV223222F5GV2N9L8GDK
        owner:
          id: LE00000000000000000000001
          type: legalEntity
        type: proofOfIndustry
    patch-legalEntities-id-changeLegalEntityType:
      description: Example request when changing the legal entity type
      summary: Change a legal entity from an organization to an individual
      value:
        type: individual
    patch-legalEntities-id-changeLegalEntityType-200:
      description: Example response when changing the legal entity type
      summary: Legal entity type changed
      value:
        id: LE00000000000000000000001
        individual:
          name:
            firstName: Explorer
            lastName: Company based in US
          residentialAddress:
            country: US
        type: individual
    patch-legalEntities-id-termsOfService-termsofservicedocumentid-updateTermsofService:
      description: Example request for accepting the Terms of Service document
      summary: Accept the Terms of Service document
      value:
        acceptedBy: LE00000000000000000000002
    patch-legalEntities-id-termsOfService-termsofservicedocumentid-updateTermsofService-200:
      description: Example response when accepting a Terms of Service document
      summary: Terms of Service document accepted
      value:
        acceptedBy: LE00000000000000000000002
        id: TOSA000AB00000000B2AAAB2BA0AA0
        language: en
        termsOfServiceDocumentId: abc123
        type: adyenIssuing
    patch-legalEntities-id-updateLegalEntityOrganization:
      description: Example request adding entity associations to a legal entity
      summary: Add entity associations to an organization
      value:
        entityAssociations:
          - jobTitle: CEO
            legalEntityId: LE00000000000000000000002
            type: uboThroughControl
    patch-legalEntities-id-updateLegalEntityOrganization-200:
      description: Example response for adding an entity association to an organization
      summary: Entity associations added
      value:
        entityAssociations:
          - associatorId: LE00000000000000000000001
            entityType: individual
            jobTitle: CEO
            legalEntityId: LE00000000000000000000002
            name: Simone Hopper
            type: uboThroughControl
        id: LE00000000000000000000001
        organization:
          description: FinTech
          doingBusinessAs: Adyen BV
          email: john.doe@adyen.com
          legalName: Adyen BV
          phone:
            countryCode: NL
            number: "646467363"
            type: mobile
          registeredAddress:
            city: AMS
            country: NL
            postalCode: 1234EE
            stateOrProvince: NH
            street: Simon Carmiggeltstraat 6 - 50
          registrationNumber: ""
          stockData:
            marketIdentifier: ADYN
            stockNumber: NL012345ABC4
            tickerSymbol: ADYN.M
          type: listedPublicCompany
        type: organization
    patch-legalEntities-id-updateLegalEntitySoleProp:
      description: Example request adding an entity association to a sole proprietorship
      summary: Add entity associations to a sole proprietorship
      value:
        entityAssociations:
          - legalEntityId: LE00000000000000000000002
            type: soleProprietorship
    patch-legalEntities-id-updateLegalEntitySoleProp-200:
      description: Example response for adding an entity association to a sole proprietorship
      summary: Entity association added to a sole proprietorship
      value:
        entityAssociations:
          - associatorId: LE00000000000000000000001
            entityType: soleProprietorship
            legalEntityId: LE00000000000000000000002
            type: soleProprietorship
        id: LE00000000000000000000001
        individual:
          birthData:
            dateOfBirth: 1990-06-21
          email: s.eller@example.com
          name:
            firstName: Shelly
            lastName: Eller
          residentialAddress:
            city: Amsterdam
            country: NL
            postalCode: 1011DJ
            street: Simon Carmiggeltstraat 6 - 50
        type: individual
    patch-legalEntities-id-updateTrustMember:
      description: Example request associating a trust member with a trust
      summary: Associate a trust member with a trust
      value:
        entityAssociations:
          - legalEntityId: LE00000000000000000000002
            type: protector
    patch-legalEntities-id-updateTrustMember-200:
      description: Example response for associating a trust member with a trust
      summary: Trust member associated
      value:
        entityAssociations:
          - associatorId: LE00000000000000000000001
            legalEntityId: LE00000000000000000000002
            name: Simone Hopper
            type: protector
        id: LE00000000000000000000001
        trust:
          countryOfGoverningLaw: AU
          doingBusinessAs: West's Store
          name: Example Trust
          registeredAddress:
            city: Sydney
            country: AU
            postalCode: "1197"
            stateOrProvince: NSW
            street: Winfield Avenue
          taxInformation:
            - country: AU
              number: "12345678901"
              type: ABN
          type: fixedUnitTrust
          undefinedBeneficiaryInfo:
            - description: My future children
        type: trust
    patch-legalEntities-id-updateTrustMemberExempt:
      description: Example request associating an exempt settlor with a trust
      summary: Associate an exempt settlor with a trust
      value:
        entityAssociations:
          - entityType: individual
            legalEntityId: LE00000000000000000000002
            settlorExemptionReason:
              - deceased
              - professionalServiceProvider
            type: settlor
    patch-legalEntities-id-updateTrustMemberExempt-200:
      description: Example response for associating an exempt settlor with a trust
      summary: Exempt settlor associated
      value:
        entityAssociations:
          - associatorId: LE00000000000000000000001
            entityType: individual
            legalEntityId: LE00000000000000000000002
            settlorExemptionReason:
              - deceased
              - professionalServiceProvider
            type: settlor
        id: LE00000000000000000000001
        trust:
          countryOfGoverningLaw: AU
          doingBusinessAs: West's Store
          name: Example Trust
          registeredAddress:
            city: Sydney
            country: AU
            postalCode: "1197"
            stateOrProvince: NSW
            street: Winfield Avenue
          taxInformation:
            - country: AU
              number: "12345678901"
              type: ABN
          type: fixedUnitTrust
          undefinedBeneficiaryInfo:
            - description: My future children
        type: trust
    patch-transferInstruments-id-updateTransferInstrument:
      description: Example request for updating a transfer instrument
      summary: Update a transfer instrument
      value:
        bankAccount:
          accountIdentification:
            iban: NL02ABNA0123456789
            type: iban
        legalEntityId: LE00000000000000000000001
        type: bankAccount
    patch-transferInstruments-id-updateTransferInstrument-200:
      description: Example response for updating a transfer instrument
      summary: Transfer instrument updated
      value:
        bankAccount:
          accountIdentification:
            iban: NL02ABNA0123456789
            type: iban
          countryCode: NL
        id: SE322KH223222F5GXZFNM3BGP
        legalEntityId: LE00000000000000000000001
        type: bankAccount
    post-businessLines-createBusinessLines-businessAccounts:
      description: Example request for creating a business line for a business account
      summary: Create a business line for a business account
      value:
        industryCode: "4531"
        legalEntityId: LE00000000000000000000001
        service: banking
        sourceOfFunds:
          adyenProcessedFunds: false
          description: Funds from my flower shop business
          type: business
        webData:
          - webAddress: https://www.adyen.com
    post-businessLines-createBusinessLines-businessAccounts-200:
      description: Example response for creating a business line for a business account
      summary: Business line created
      value:
        id: SE322KT223222D5FJ7TJN2986
        industryCode: "4531"
        legalEntityId: LE00000000000000000000001
        service: banking
        sourceOfFunds:
          adyenProcessedFunds: false
          description: Funds from my flower shop business
          type: business
        webData:
          - webAddress: https://www.adyen.com
            webAddressId: SE322JV223222F5H4CQGS77V4
    post-businessLines-createBusinessLines-receive:
      description: Example request for receiving payments
      summary: Create a business line for receiving payments
      value:
        industryCode: 339E
        legalEntityId: LE00000000000000000000001
        salesChannels:
          - eCommerce
          - ecomMoto
        service: paymentProcessing
        webData:
          - webAddress: https://yoururl.com
    post-businessLines-createBusinessLines-receive-200:
      description: Example response for creating a business line for receiving payments
      summary: Business line created
      value:
        id: SE322KT223222D5FJ7TJN2986
        industryCode: 339E
        legalEntityId: LE00000000000000000000001
        salesChannels:
          - eCommerce
          - ecomMoto
        service: paymentProcessing
        webData:
          - webAddress: https://yoururl.com
            webAddressId: SE654AC923222F5H4CQGS77V4
    post-documents-uploadDocument:
      description: Example request for uploading a document
      summary: Upload a document
      value:
        attachments:
          - content: JVBERi0xLjQKJcOkw7zDtsOfCjIgMCBv+f/ub0j6JPRX+E3EmC==
        description: Registration doc for Example Company
        owner:
          id: LE00000000000000000000001
          type: legalEntity
        type: registrationDocument
    post-documents-uploadDocument-200:
      description: Example response when a document is uploaded
      summary: Document uploaded
      value:
        attachments:
          - content: JVBERi0xLjQKJcOkw7zDtsOfCjIgMCBv+f/ub0j6JPRX+E3EmC==
        description: Registration doc for Example Company
        fileName: Registration doc for Example Company
        id: SE322JV223222F5GV2N9L8GDK
        owner:
          id: LE00000000000000000000001
          type: legalEntity
        type: registrationDocument
    post-legalEntities-createLegalEntityIndividualNL:
      description: Example request for creating a legal entity for an individual residing in the Netherlands
      summary: Create a legal entity for an individual residing in the Netherlands
      value:
        individual:
          birthData:
            dateOfBirth: 1990-06-21
          email: s.eller@example.com
          name:
            firstName: Shelly
            lastName: Eller
          residentialAddress:
            city: Amsterdam
            country: NL
            postalCode: 1011DJ
            street: Simon Carmiggeltstraat 6 - 50
        type: individual
    post-legalEntities-createLegalEntityIndividualNL-200:
      description: Example response for creating a legal entity for an individual residing in the Netherlands
      summary: Individual legal entity created
      value:
        id: LE00000000000000000000001
        individual:
          birthData:
            dateOfBirth: 1990-06-21
          email: s.eller@example.com
          name:
            firstName: Shelly
            lastName: Eller
          residentialAddress:
            city: Amsterdam
            country: NL
            postalCode: 1011DJ
            street: Simon Carmiggeltstraat 6 - 50
        type: individual
    post-legalEntities-createLegalEntityIndividualUS:
      description: Example request for creating a legal entity for an individual residing in the US
      summary: Create a legal entity for an individual residing in the US
      value:
        individual:
          birthData:
            dateOfBirth: 1990-06-21
          email: s.eller@example.com
          name:
            firstName: Shelly
            lastName: Eller
          phone:
            number: "+14153671502"
            type: mobile
          residentialAddress:
            city: New York
            country: US
            postalCode: "10003"
            stateOrProvince: NY
            street: 71 5th Avenue
            street2: 11th floor
        type: individual
    post-legalEntities-createLegalEntityIndividualUS-200:
      description: Example response for creating a legal entity for an individual residing in the US
      summary: Individual legal entity created
      value:
        id: LE00000000000000000000001
        individual:
          birthData:
            dateOfBirth: 1990-06-21
          email: s.eller@example.com
          name:
            firstName: Shelly
            lastName: Eller
          phone:
            number: "+14153671502"
            type: mobile
          residentialAddress:
            city: New York
            country: US
            postalCode: "10003"
            stateOrProvince: NY
            street: 71 5th Avenue
            street2: 11th floor
        type: individual
    post-legalEntities-createLegalEntityOrganizationNL:
      description: Example request for creating a legal entity for an organization operating in the Netherlands
      summary: Create a legal entity for a Dutch organization
      value:
        entityAssociations:
          - jobTitle: CEO
            legalEntityId: LE00000000000000000000001
            type: signatory
        organization:
          doingBusinessAs: API Company Trading
          email: organization@example.com
          legalName: Explorer Company based in NL
          registeredAddress:
            city: Amsterdam
            country: NL
            postalCode: 1011DJ
            street: Simon Carmiggeltstraat 6 - 50
          registrationNumber: "34179503"
          type: privateCompany
        type: organization
    post-legalEntities-createLegalEntityOrganizationNL-200:
      description: Example response for creating a legal entity for an organization operating in the Netherlands
      summary: Organization legal entity created
      value:
        entityAssociations:
          - associatorId: LE00000000000000000000002
            entityType: individual
            jobTitle: CEO
            legalEntityId: LE00000000000000000000001
            name: Simone Hopper
            type: signatory
        id: LE00000000000000000000002
        organization:
          doingBusinessAs: API Company Trading
          email: organization@example.com
          legalName: Explorer Company based in NL
          registeredAddress:
            city: Amsterdam
            country: NL
            postalCode: 1011DJ
            street: Simon Carmiggeltstraat 6 - 50
          registrationNumber: "34179503"
          type: privateCompany
        type: organization
    post-legalEntities-createLegalEntityOrganizationUS:
      description: Example request for creating a legal entity for an organization operating in the US
      summary: Create a legal entity for an organization in the US
      value:
        organization:
          legalName: Explorer Company based in US
          registeredAddress:
            city: New York
            country: US
            postalCode: "10003"
            stateOrProvince: NY
            street: 71 5th Avenue
            street2: 11th floor
          registrationNumber: "101002749"
          type: privateCompany
        type: organization
    post-legalEntities-createLegalEntityOrganizationUS-200:
      description: Example response for creating a legal entity for an organization operating in the US
      summary: Organization legal entity created
      value:
        id: LE00000000000000000000001
        organization:
          legalName: Explorer Company based in US
          registeredAddress:
            city: New York
            country: US
            postalCode: "10003"
            stateOrProvince: NY
            street: 71 5th Avenue
            street2: 11th floor
          registrationNumber: "101002749"
          type: privateCompany
        type: organization
    post-legalEntities-createLegalEntitySolePropNL:
      description: Example request for creating a legal entity for a sole proprietor operating in the Netherlands
      summary: Create a legal entity for a Dutch sole proprietor
      value:
        soleProprietorship:
          countryOfGoverningLaw: NL
          name: Shelly Seller Sole Trader
          registeredAddress:
            city: Amsterdam
            country: NL
            postalCode: 1011DJ
            street: Simon Carmiggeltstraat 6 - 50
        type: soleProprietorship
    post-legalEntities-createLegalEntitySolePropNL-200:
      description: Example response for creating a legal entity for a sole proprietor operating in the Netherlands
      summary: Sole proprietor legal enity created
      value:
        id: LE00000000000000000000001
        soleProprietorship:
          countryOfGoverningLaw: NL
          name: Shelly Seller Sole Trader
          registeredAddress:
            city: Amsterdam
            country: NL
            postalCode: 1011DJ
            street: Simon Carmiggeltstraat 6 - 50
        type: soleProprietorship
    post-legalEntities-createLegalEntitySolePropUS:
      description: Example request for creating a legal entity for a sole proprietor operating in the US
      summary: Create a legal entity for a sole proprietor in the US
      value:
        soleProprietorship:
          countryOfGoverningLaw: US
          name: Shelly Eller Sole Trader
          registeredAddress:
            city: New York
            country: US
            postalCode: "10003"
            stateOrProvince: NY
            street: 71 5th Avenue
            street2: 11th floor
        type: soleProprietorship
    post-legalEntities-createLegalEntitySolePropUS-200:
      description: Example response for creating a legal entity for a sole proprietor operating in the US
      summary: Sole proprietor legal enity created
      value:
        id: LE00000000000000000000001
        soleProprietorship:
          countryOfGoverningLaw: US
          name: Shelly Eller Sole Trader
          registeredAddress:
            city: New York
            country: US
            postalCode: "10003"
            stateOrProvince: NY
            street: 71 5th Avenue
            street2: 11th floor
        type: soleProprietorship
    post-legalEntities-createTrustAU:
      description: Example request for creating a legal entity for a trust in Australia
      summary: Create a legal entity for a trust in Australia
      value:
        trust:
          countryOfGoverningLaw: AU
          doingBusinessAs: West's Store
          name: Example Trust
          registeredAddress:
            city: Sydney
            country: AU
            postalCode: "1197"
            stateOrProvince: NSW
            street: Winfield Avenue
          taxInformation:
            - country: AU
              number: "12345678123"
              type: ABN
          type: fixedUnitTrust
          undefinedBeneficiaryInfo:
            - description: My future children
        type: trust
    post-legalEntities-createTrustAU-200:
      description: Example response for creating a legal entity for a trust in Australia
      summary: Trust legal entity created
      value:
        id: LE322KH223222J5HJ6JRB75C5
        trust:
          countryOfGoverningLaw: AU
          doingBusinessAs: West's Store
          name: Example Trust
          registeredAddress:
            city: Sydney
            country: AU
            postalCode: "1197"
            stateOrProvince: NSW
            street: Winfield Avenue
          taxInformation:
            - country: AU
              number: "12345678901"
              type: ABN
          type: fixedUnitTrust
          undefinedBeneficiaryInfo:
            - description: My future children
              reference: SE322KH223222J5HJ6JRB75HQ
        type: trust
    post-legalEntities-id-checkVerificationErrors-checkVerificationErrors-200:
      description: Example response when checking the verification errors of a legal entity
      summary: Verification errors for a legal entity
      value:
        problems:
          - entity:
              id: LE00000000000000000000001
              type: LegalEntity
            verificationErrors:
              - capabilities:
                  - receivePayments
                  - sendToTransferInstrument
                code: 2_8179
                message: "'vatNumber' was missing."
                remediatingActions:
                  - code: 2_158
                    message: Add 'organization.vatNumber' to legal entity.
                type: dataMissing
              - capabilities:
                  - receivePayments
                  - sendToTransferInstrument
                code: 2_8067
                message: "'Signatory' was missing."
                remediatingActions:
                  - code: 2_124
                    message: Add 'organization.entityAssociations' of type 'signatory' to legal entity
                type: dataMissing
              - capabilities:
                  - receivePayments
                  - sendToTransferInstrument
                code: 2_8189
                message: "'UBO through control' was missing."
                remediatingActions:
                  - code: 2_151
                    message: Add 'organization.entityAssociations' of type 'uboThroughControl' to legal entity
                type: dataMissing
              - capabilities:
                  - receivePayments
                code: 2_8190
                message: "'businessLine' was missing."
                remediatingActions:
                  - code: 2_136
                    message: Add business line
                type: dataMissing
              - capabilities:
                  - receivePayments
                  - sendToTransferInstrument
                code: 2_8021
                message: "'individual.residentialAddress.postalCode' was missing."
                remediatingActions:
                  - code: 2_108
                    message: Add 'individual.residentialAddress.postalCode' to legal entity
                type: dataMissing
              - capabilities:
                  - receivePayments
                  - sendToTransferInstrument
                code: 2_8064
                message: "'UBO through ownership' was missing."
                remediatingActions:
                  - code: 2_123
                    message: Add 'organization.entityAssociations' of type 'uboThroughOwnership' to legal entity
                type: dataMissing
              - capabilities:
                  - receivePayments
                  - sendToTransferInstrument
                code: 2_8141
                message: "'Registration document' was missing."
                remediatingActions:
                  - code: 1_501
                    message: Upload a registration document
                type: dataMissing
              - capabilities:
                  - receivePayments
                  - sendToTransferInstrument
                code: 2_8019
                message: "'individual.residentialAddress.street' was missing."
                remediatingActions:
                  - code: 2_106
                    message: Add 'individual.residentialAddress.street' to legal entity
                type: dataMissing
              - capabilities:
                  - receivePayments
                  - sendToTransferInstrument
                code: 2_8020
                message: "'individual.residentialAddress.city' was missing."
                remediatingActions:
                  - code: 2_107
                    message: Add 'individual.residentialAddress.city' to legal entity
                type: dataMissing
              - capabilities:
                  - receivePayments
                  - sendToTransferInstrument
                code: 2_8045
                message: "'organization.taxId' was missing."
                remediatingActions:
                  - code: 2_118
                    message: Add 'organization.taxId' to legal entity
                type: dataMissing
              - capabilities:
                  - receivePayments
                  - sendToTransferInstrument
                code: 2_8043
                message: "'organization.registrationNumber' was missing."
                remediatingActions:
                  - code: 2_117
                    message: Add 'organization.registrationNumber' to legal entity
                type: dataMissing
    post-legalEntities-id-confirmDataReview-confirmDataReview-200:
      description: Example response when reviewing the data for a legal entity
      summary: Data review for a legal entity
      value:
        dataReviewedAt: 2023-11-13T15:19:02Z
    post-legalEntities-id-onboardingLinks-createOnboardingLink:
      description: Example request for creating a hosted onboarding link
      summary: Create a hosted onboarding link
      value:
        locale: nl-NL
        redirectUrl: https://your.redirect-url.com/
        themeId: YOUR_THEME_ID
    post-legalEntities-id-onboardingLinks-createOnboardingLink-200:
      description: Example response for a hosted onboarding link
      summary: Hosted onboarding link created
      value:
        url: https://balanceplatform-test.adyen.com/balanceplatform/uo/form/xtl-...?signature=..&cd=..&redirectUrl=https%3A%2F%2Fyour.redirect-url.com%2F&expiry=1667226404807&locale=nl-NL
    post-legalEntities-id-pciQuestionnaires-generatePciTemplates-createPciQuestionnaire:
      description: Example request for generating PCI questionnaires in French
      summary: Generate PCI questionnaires
      value:
        language: fr
    post-legalEntities-id-pciQuestionnaires-generatePciTemplates-createPciQuestionnaire-200:
      description: Example response for getting PCI questionnaires
      summary: PCI questionnaires returned
      value:
        content: JVBERi0xLjQKJcOkw7zDtsOfCjIgMCBv+f/ub0j6JPRX+E3EmC==
        language: fr
        pciTemplateReferences:
          - PCIT-T7KC6VGL
          - PCIT-PKB6DKS4
    post-legalEntities-id-pciQuestionnaires-signPciTemplates-signPciQuestionnaire:
      description: Example request for signing PCI questionnaires
      summary: Sign PCI questionnaires
      value:
        pciTemplateReferences:
          - PCIT-T7KC6VGL
          - PCIT-PKB6DKS4
        signedBy: LE00000000000000000000002
    post-legalEntities-id-pciQuestionnaires-signPciTemplates-signPciQuestionnaire-200:
      description: Example response for signing PCI questionnaires
      summary: PCI questionnaires signed
      value:
        pciQuestionnaireIds:
          - PCID422GZ22322565HHMH48CW63CPH
          - PCID422GZ22322565HHMH49CW75Z9H
    post-legalEntities-id-termsOfService-createTermsofService:
      description: Example request for getting the Terms of Service document
      summary: Get the Terms of Service document
      value:
        language: en
        type: adyenIssuing
    post-legalEntities-id-termsOfService-createTermsofService-200:
      description: Example response for getting a Terms of Service document
      summary: Terms of Service document returned
      value:
        document: JVBERi0xLjQKJcOkw7zDtsOfCjIgMCBv+f/ub0j6JPRX+E3EmC==
        id: LE00000000000000000000001
        language: en
        termsOfServiceDocumentId: abc123
        type: adyenIssuing
    post-transferInstruments-createTransferInstrumentEUR:
      description: Example request for creating a transfer instrument for EUR
      summary: Add a EUR bank account
      value:
        bankAccount:
          accountIdentification:
            iban: NL62ABNA0000000123
            type: iban
        legalEntityId: LE00000000000000000000001
        type: bankAccount
    post-transferInstruments-createTransferInstrumentEUR-200:
      description: Example response for adding a bank account as a transfer instrument of a legal entity
      summary: Bank account added
      value:
        bankAccount:
          accountIdentification:
            iban: NL62ABNA0000000123
            type: iban
          countryCode: NL
          trustedSource: false
        capabilities:
          sendToTransferInstrument:
            allowed: false
            requested: true
            verificationStatus: pending
        id: SE322KH223222F5GXZFNM3BGP
        legalEntityId: LE00000000000000000000001
        type: bankAccount
    post-transferInstruments-createTransferInstrumentUSD:
      description: Example request for creating a transfer instrument for USD
      summary: Add a USD bank account
      value:
        bankAccount:
          accountIdentification:
            accountNumber: "0000000123"
            routingNumber: "121202211"
            type: usLocal
        legalEntityId: LE00000000000000000000001
        type: bankAccount
    post-transferInstruments-createTransferInstrumentUSD-200:
      description: Example response for adding a bank account as a transfer instrument of a legal entity
      summary: Bank account added
      value:
        bankAccount:
          accountIdentification:
            accountNumber: "0000000123"
            accountType: checking
            routingNumber: "121202211"
            type: usLocal
          countryCode: US
          trustedSource: false
        capabilities:
          sendToTransferInstrument:
            allowed: false
            requested: true
            verificationStatus: pending
        id: SE322JV223222F5GJVKHH8DTC
        legalEntityId: LE00000000000000000000001
        type: bankAccount
  schemas:
    AULocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The bank account number, without separators or whitespace.
          maxLength: 9
          minLength: 5
          type: string
        bsbCode:
          description: The 6-digit [Bank State Branch (BSB) code](https://en.wikipedia.org/wiki/Bank_state_branch), without separators or whitespace.
          maxLength: 6
          minLength: 6
          type: string
        formFactor:
          default: physical
          description: |-
            The form factor of the account.

            Possible values: **physical**, **virtual**. Default value: **physical**.
          type:
            - string
            - "null"
        type:
          default: auLocal
          description: "**auLocal**"
          enum:
            - auLocal
          type: string
      required:
        - type
        - accountNumber
        - bsbCode
      type: object
    AcceptTermsOfServiceRequest:
      properties:
        acceptedBy:
          description: |-
            The legal entity ID of the user accepting the Terms of Service.

            For organizations, this must be the individual legal entity ID of an authorized signatory for the organization.

            For sole proprietorships, this must be the individual legal entity ID of the owner.
          type: string
        ipAddress:
          description: The IP address of the user accepting the Terms of Service.
          type: string
      required:
        - acceptedBy
      type: object
    AcceptTermsOfServiceResponse:
      properties:
        acceptedBy:
          description: The unique identifier of the user that accepted the Terms of Service.
          type: string
        id:
          description: The unique identifier of the Terms of Service acceptance.
          type: string
        ipAddress:
          description: The IP address of the user that accepted the Terms of Service.
          type: string
        language:
          description: "The language used for the Terms of Service document, specified by the two-letter [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language code. Possible value: **en** for English."
          type: string
        termsOfServiceDocumentId:
          description: The unique identifier of the Terms of Service document.
          type: string
        type:
          description: |+
            The type of Terms of Service.

            Possible values:
            *  **adyenForPlatformsManage**
            *  **adyenIssuing**
            *  **adyenForPlatformsAdvanced**
            *  **adyenCapital**
            *  **adyenAccount**
            *  **adyenCard**
            *  **adyenFranchisee**
            *  **adyenPccr**

          enum:
            - adyenAccount
            - adyenCapital
            - adyenCard
            - adyenForPlatformsAdvanced
            - adyenForPlatformsManage
            - adyenFranchisee
            - adyenIssuing
            - adyenPccr
          type: string
      type: object
    AdditionalBankIdentification:
      properties:
        code:
          description: The value of the additional bank identification.
          type: string
        type:
          description: |-
            The type of additional bank identification, depending on the country.

            Possible values:

             * **gbSortCode**: The 6-digit [UK sort code](https://en.wikipedia.org/wiki/Sort_code), without separators or spaces
             * **usRoutingNumber**: The 9-digit [routing number](https://en.wikipedia.org/wiki/ABA_routing_transit_number), without separators or spaces.
          enum:
            - gbSortCode
            - usRoutingNumber
          type: string
      type: object
    Address:
      properties:
        city:
          description: |-
            The name of the city. Required if `stateOrProvince` is provided.

            If you specify the city, you must also send `postalCode` and `street`.
          type: string
        country:
          description: The two-letter [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code.
          type: string
        postalCode:
          description: Postal code. Required if `stateOrProvince` and/or `city` is provided.
          type: string
        stateOrProvince:
          description: |-
            The two-letter ISO 3166-2 state or province code. For example, **CA** in the US.

            If you specify the state or province, you must also send `city`, `postalCode`, and `street`.
          type: string
        street:
          description: The name of the street, and the house or building number. Required if `stateOrProvince` and/or `city` is provided.
          type: string
        street2:
          description: The apartment, unit, or suite number.
          type: string
      required:
        - country
      type: object
    Amount:
      properties:
        currency:
          description: The type of currency. Must be EUR (or EUR equivalent)
          type: string
        value:
          description: Total value of amount. Must be >= 0
          format: int64
          type: integer
      type: object
    Attachment:
      properties:
        content:
          contentEncoding: base64
          description: The document in Base64-encoded string format.
          type: string
        contentType:
          deprecated: true
          description: |-
            The file format.

             Possible values: **application/pdf**, **image/jpg**, **image/jpeg**, **image/png**. 
          type: string
          x-deprecatedInVersion: "1"
        filename:
          deprecated: true
          description: The name of the file including the file extension.
          type: string
          x-deprecatedInVersion: "1"
        pageName:
          description: The name of the file including the file extension.
          type: string
          x-addedInVersion: "2"
        pageType:
          description: |-
            Specifies which side of the ID card is uploaded.

            * When `type` is **driversLicense** or **identityCard**, set this to **front** or **back**.

            * When omitted, we infer the page number based on the order of attachments.
          type: string
      required:
        - content
      type: object
    BankAccountInfo:
      properties:
        accountIdentification:
          description: Identification of the bank account.
          oneOf:
            - $ref: "#/components/schemas/AULocalAccountIdentification"
            - $ref: "#/components/schemas/CALocalAccountIdentification"
            - $ref: "#/components/schemas/CZLocalAccountIdentification"
            - $ref: "#/components/schemas/DKLocalAccountIdentification"
            - $ref: "#/components/schemas/HKLocalAccountIdentification"
            - $ref: "#/components/schemas/HULocalAccountIdentification"
            - $ref: "#/components/schemas/IbanAccountIdentification"
            - $ref: "#/components/schemas/NOLocalAccountIdentification"
            - $ref: "#/components/schemas/NZLocalAccountIdentification"
            - $ref: "#/components/schemas/NumberAndBicAccountIdentification"
            - $ref: "#/components/schemas/PLLocalAccountIdentification"
            - $ref: "#/components/schemas/SELocalAccountIdentification"
            - $ref: "#/components/schemas/SGLocalAccountIdentification"
            - $ref: "#/components/schemas/UKLocalAccountIdentification"
            - $ref: "#/components/schemas/USLocalAccountIdentification"
          x-addedInVersion: "3"
        accountType:
          deprecated: true
          description: The type of bank account.
          type: string
          x-deprecatedInVersion: "2"
        bankName:
          description: The name of the banking institution where the bank account is held.
          type: string
        countryCode:
          description: The two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code where the bank account is registered. For example, **NL**.
          type: string
        trustedSource:
          description: Identifies if the bank account was created through [instant bank verification](https://docs.adyen.com/release-notes/platforms-and-financial-products#releaseNote=2023-05-08-hosted-onboarding).
          readOnly: true
          type: boolean
      type: object
    BirthData:
      properties:
        dateOfBirth:
          description: The individual's date of birth, in YYYY-MM-DD format.
          type: string
      type: object
    BusinessLine:
      properties:
        capability:
          deprecated: true
          description: |-
            The capability for which you are creating the business line.

            Possible values: **receivePayments**, **receiveFromPlatformPayments**, **issueBankAccount**
          enum:
            - receivePayments
            - receiveFromPlatformPayments
            - issueBankAccount
          type: string
          x-deprecatedInVersion: "3"
          x-deprecatedMessage: Use `service` instead.
        id:
          description: The unique identifier of the business line.
          readOnly: true
          type: string
        industryCode:
          description: A code that represents the [industry of the legal entity](https://docs.adyen.com/marketplaces-and-platforms/verification-requirements/reference-additional-products/#list-industry-codes). For example, **4431A** for computer software stores.
          type: string
        legalEntityId:
          description: Unique identifier of the [legal entity](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/legalEntities__resParam_id) that owns the business line.
          type: string
        problems:
          description: The verification errors related to capabilities for this supporting entity.
          items:
            $ref: "#/components/schemas/CapabilityProblem"
          type: array
          x-addedInVersion: "3"
        salesChannels:
          description: |-
            A list of channels where goods or services are sold.

            Possible values: **pos**, **posMoto**, **eCommerce**, **ecomMoto**, **payByLink**.

            Required only in combination with the `service` **paymentProcessing**.
          items:
            type: string
          type: array
        service:
          description: |+
            The service for which you are creating the business line.



            Possible values:
            *  **paymentProcessing**
            *  **banking**

          enum:
            - paymentProcessing
            - banking
          type: string
          x-addedInVersion: "3"
        sourceOfFunds:
          $ref: "#/components/schemas/SourceOfFunds"
          description: Contains information about the source of your user's funds. Required only for the `service` **banking**.
        webData:
          description: List of website URLs where your user's goods or services are sold. When this is required for a service but your user does not have an online presence, provide the reason in the `webDataExemption` object.
          items:
            $ref: "#/components/schemas/WebData"
          type: array
        webDataExemption:
          $ref: "#/components/schemas/WebDataExemption"
          description: The reason why the web data is not provided.
      required:
        - service
        - industryCode
        - legalEntityId
        - id
      type: object
    BusinessLineInfo:
      properties:
        capability:
          deprecated: true
          description: |-
            The capability for which you are creating the business line.

            Possible values: **receivePayments**, **receiveFromPlatformPayments**, **issueBankAccount**
          enum:
            - receivePayments
            - receiveFromPlatformPayments
            - issueBankAccount
          type: string
          x-deprecatedInVersion: "3"
          x-deprecatedMessage: Use `service` instead.
        industryCode:
          description: A code that represents the [industry of the legal entity](https://docs.adyen.com/marketplaces-and-platforms/verification-requirements/reference-additional-products/#list-industry-codes). For example, **4431A** for computer software stores.
          type: string
        legalEntityId:
          description: Unique identifier of the [legal entity](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/legalEntities__resParam_id) that owns the business line.
          type: string
        salesChannels:
          description: |-
            A list of channels where goods or services are sold.

            Possible values: **pos**, **posMoto**, **eCommerce**, **ecomMoto**, **payByLink**.

            Required only in combination with the `service` **paymentProcessing**.
          items:
            type: string
          type: array
        service:
          description: |+
            The service for which you are creating the business line.



            Possible values:
            *  **paymentProcessing**
            *  **banking**

          enum:
            - paymentProcessing
            - banking
          type: string
          x-addedInVersion: "3"
        sourceOfFunds:
          $ref: "#/components/schemas/SourceOfFunds"
          description: Contains information about the source of your user's funds. Required only for the `service` **banking**.
        webData:
          description: List of website URLs where your user's goods or services are sold. When this is required for a service but your user does not have an online presence, provide the reason in the `webDataExemption` object.
          items:
            $ref: "#/components/schemas/WebData"
          type: array
        webDataExemption:
          $ref: "#/components/schemas/WebDataExemption"
          description: The reason why the web data is not provided.
      required:
        - service
        - industryCode
        - legalEntityId
      type: object
    BusinessLineInfoUpdate:
      properties:
        capability:
          deprecated: true
          description: The capability for which you are creating the business line. For example, **receivePayments**.
          enum:
            - receivePayments
            - receiveFromPlatformPayments
            - issueBankAccount
          type: string
          x-deprecatedInVersion: "3"
          x-deprecatedMessage: Use `service` instead.
        industryCode:
          description: A code that represents the industry of your legal entity. For example, **4431A** for computer software stores.
          type: string
        legalEntityId:
          description: Unique identifier of the [legal entity](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/legalEntities__resParam_id) that owns the business line.
          type: string
        salesChannels:
          description: |-
            A list of channels where goods or services are sold.

            Possible values: **pos**, **posMoto**, **eCommerce**, **ecomMoto**, **payByLink**.

            Required only in combination with the `service` **paymentProcessing**.
          items:
            type: string
          type: array
        service:
          description: |+
            The service for which you are creating the business line.



            Possible values:
            *  **paymentProcessing**
            *  **banking**

          enum:
            - paymentProcessing
            - banking
          type: string
          x-addedInVersion: "3"
        sourceOfFunds:
          $ref: "#/components/schemas/SourceOfFunds"
          description: Contains information about the source of your user's funds. Required only for the `service` **banking**.
        webData:
          description: List of website URLs where your user's goods or services are sold. When this is required for a service but your user does not have an online presence, provide the reason in the `webDataExemption` object.
          items:
            $ref: "#/components/schemas/WebData"
          type: array
        webDataExemption:
          $ref: "#/components/schemas/WebDataExemption"
          description: The reason why the web data is not provided.
      type: object
    BusinessLines:
      properties:
        businessLines:
          description: List of business lines.
          items:
            $ref: "#/components/schemas/BusinessLine"
          type: array
      required:
        - businessLines
      type: object
    CALocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The 5- to 12-digit bank account number, without separators or whitespace.
          maxLength: 12
          minLength: 5
          type: string
        accountType:
          default: checking
          description: |-
            The bank account type.

            Possible values: **checking** or **savings**. Defaults to **checking**.
          enum:
            - checking
            - savings
          type: string
        formFactor:
          default: physical
          description: |-
            The form factor of the account.

            Possible values: **physical**, **virtual**. Default value: **physical**.
          type:
            - string
            - "null"
        institutionNumber:
          description: The 3-digit institution number, without separators or whitespace.
          maxLength: 3
          minLength: 3
          type: string
        transitNumber:
          description: The 5-digit transit number, without separators or whitespace.
          maxLength: 5
          minLength: 5
          type: string
        type:
          default: caLocal
          description: "**caLocal**"
          enum:
            - caLocal
          type: string
      required:
        - type
        - accountNumber
        - institutionNumber
        - transitNumber
      type: object
    CZLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: |-
            The 2- to 16-digit bank account number (Číslo účtu) in the following format:

            - The optional prefix (předčíslí).

            - The required second part (základní část) which must be at least two non-zero digits.

            Examples:

            - **19-123457** (with prefix)

            - **123457** (without prefix)

            - **000019-0000123457** (with prefix, normalized)

            - **000000-0000123457** (without prefix, normalized)
          maxLength: 17
          minLength: 2
          type: string
        bankCode:
          description: The 4-digit bank code (Kód banky), without separators or whitespace.
          maxLength: 4
          minLength: 4
          type: string
        formFactor:
          default: physical
          description: |-
            The form factor of the account.

            Possible values: **physical**, **virtual**. Default value: **physical**.
          type:
            - string
            - "null"
        type:
          default: czLocal
          description: "**czLocal**"
          enum:
            - czLocal
          type: string
      required:
        - type
        - accountNumber
        - bankCode
      type: object
    CalculateTermsOfServiceStatusResponse:
      properties:
        termsOfServiceTypes:
          description: The type of Terms of Service that the legal entity needs to accept. If empty, no Terms of Service needs to be accepted.
          items:
            enum:
              - adyenAccount
              - adyenCapital
              - adyenCard
              - adyenForPlatformsAdvanced
              - adyenForPlatformsManage
              - adyenFranchisee
              - adyenIssuing
              - adyenPccr
            type: string
          type: array
      type: object
    CapabilityProblem:
      properties:
        entity:
          $ref: "#/components/schemas/CapabilityProblemEntity"
        verificationErrors:
          items:
            $ref: "#/components/schemas/VerificationError"
          type: array
      type: object
    CapabilityProblemEntity:
      properties:
        documents:
          description: List of document IDs corresponding to the verification errors from capabilities.
          items:
            type: string
          type: array
        id:
          type: string
        owner:
          $ref: "#/components/schemas/CapabilityProblemEntity-recursive"
        type:
          enum:
            - BankAccount
            - Document
            - LegalEntity
            - product
          type: string
      type: object
    CapabilityProblemEntity-recursive:
      properties:
        documents:
          description: List of document IDs corresponding to the verification errors from capabilities.
          items:
            type: string
          type: array
        id:
          type: string
        type:
          enum:
            - BankAccount
            - Document
            - LegalEntity
            - product
          type: string
      type: object
    CapabilitySettings:
      properties:
        amountPerIndustry:
          additionalProperties:
            $ref: "#/components/schemas/Amount"
          description: The maximum amount a card holder can spend per industry.
          type: object
        authorizedCardUsers:
          description: The number of card holders who can use the card.
          type: boolean
        fundingSource:
          description: The funding source of the card, for example **debit**.
          items:
            enum:
              - credit
              - debit
              - prepaid
            type: string
          type: array
        interval:
          description: The period when the rule conditions apply.
          enum:
            - daily
            - monthly
            - weekly
          type: string
        maxAmount:
          $ref: "#/components/schemas/Amount"
          description: The maximum amount a card holder can withdraw per day.
      type: object
    DKLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The 4-10 digits bank account number (Kontonummer) (without separators or whitespace).
          maxLength: 10
          minLength: 4
          type: string
        bankCode:
          description: The 4-digit bank code (Registreringsnummer) (without separators or whitespace).
          maxLength: 4
          minLength: 4
          type: string
        formFactor:
          default: physical
          description: |-
            The form factor of the account.

            Possible values: **physical**, **virtual**. Default value: **physical**.
          type:
            - string
            - "null"
        type:
          default: dkLocal
          description: "**dkLocal**"
          enum:
            - dkLocal
          type: string
      required:
        - type
        - accountNumber
        - bankCode
      type: object
    DataReviewConfirmationResponse:
      properties:
        dataReviewedAt:
          description: Date when data review was confirmed.
          type: string
      type: object
    Document:
      properties:
        attachment:
          $ref: "#/components/schemas/Attachment"
          deprecated: true
          description: Object that contains the document.
          x-deprecatedInVersion: "1"
          x-deprecatedMessage: Use the `attachments` array instead.
        attachments:
          description: Array that contains the document. The array supports multiple attachments for uploading different sides or pages of a document.
          items:
            $ref: "#/components/schemas/Attachment"
          type: array
        creationDate:
          description: The creation date of the document.
          format: date-time
          readOnly: true
          type: string
        description:
          description: Your description for the document.
          type: string
        expiryDate:
          deprecated: true
          description: The expiry date of the document, in YYYY-MM-DD format.
          type: string
          x-deprecatedInVersion: "1"
        fileName:
          description: The filename of the document.
          type: string
        id:
          description: The unique identifier of the document.
          readOnly: true
          type: string
        issuerCountry:
          deprecated: true
          description: The two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code where the document was issued. For example, **US**.
          type: string
          x-deprecatedInVersion: "1"
        issuerState:
          deprecated: true
          description: The state or province where the document was issued (AU only).
          type: string
          x-deprecatedInVersion: "1"
        modificationDate:
          description: The modification date of the document.
          format: date-time
          readOnly: true
          type: string
        number:
          description: The number in the document.
          type: string
        owner:
          $ref: "#/components/schemas/OwnerEntity"
          description: Contains information about the resource that owns the document.
        type:
          description: |-
            Type of document, used when providing an ID number or uploading a document. The possible values depend on the legal entity type.

            * For **organization**, the `type` values can be **proofOfAddress**, **registrationDocument**, **vatDocument**, **proofOfOrganizationTaxInfo**, **proofOfOwnership**, **proofOfIndustry**, **proofOfSignatory**, or **proofOfFundingOrWealthSource**.

            * For **individual**, the `type` values can be **identityCard**, **driversLicense**, **passport**, **liveSelfie**, **proofOfNationalIdNumber**, **proofOfResidency**, **proofOfIndustry**, **proofOfIndividualTaxId**, or **proofOfFundingOrWealthSource**.

            * For **soleProprietorship**, the `type` values can be **constitutionalDocument**, **proofOfAddress**, or **proofOfIndustry**.

            * Use **bankStatement** to upload documents for a [transfer instrument](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/transferInstruments__resParam_id).
          enum:
            - bankStatement
            - driversLicense
            - identityCard
            - nationalIdNumber
            - passport
            - proofOfAddress
            - proofOfNationalIdNumber
            - proofOfResidency
            - registrationDocument
            - vatDocument
            - proofOfOrganizationTaxInfo
            - proofOfIndividualTaxId
            - proofOfOwnership
            - proofOfSignatory
            - liveSelfie
            - proofOfIndustry
            - constitutionalDocument
            - proofOfFundingOrWealthSource
          type: string
      required:
        - description
        - type
      type: object
    DocumentPage:
      properties:
        pageName:
          type: string
        pageNumber:
          format: int32
          type: integer
        type:
          enum:
            - BACK
            - FRONT
            - UNDEFINED
          type: string
      type: object
    DocumentReference:
      properties:
        active:
          description: Identifies whether the document is active and used for checks.
          type: boolean
        description:
          description: Your description for the document.
          type: string
        fileName:
          description: Document name.
          type: string
        id:
          description: The unique identifier of the resource.
          type: string
        modificationDate:
          description: The modification date of the document.
          format: date-time
          type: string
        pages:
          description: List of document pages
          items:
            $ref: "#/components/schemas/DocumentPage"
          type: array
        type:
          description: Type of document, used when providing an ID number or uploading a document.
          type: string
      type: object
    EntityReference:
      properties:
        id:
          description: The unique identifier of the resource.
          type: string
      type: object
    GeneratePciDescriptionRequest:
      properties:
        additionalSalesChannels:
          description: |+
            An array of additional sales channels to generate PCI questionnaires. Include the relevant sales channels if you need your user to sign PCI questionnaires. Not required if you [create stores](https://docs.adyen.com/marketplaces-and-platforms/additional-for-platform-setup/create-stores/) and [add payment methods](https://docs.adyen.com/marketplaces-and-platforms/payment-methods/) before you generate the questionnaires.

            Possible values:
            *  **eCommerce**
            *  **pos**
            *  **ecomMoto**
            *  **posMoto**

          items:
            enum:
              - eCommerce
              - ecomMoto
              - pos
              - posMoto
            type: string
          type: array
        language:
          description: Sets the language of the PCI questionnaire. Its value is a two-character [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) language code, for example, **en**.
          type: string
      type: object
    GeneratePciDescriptionResponse:
      properties:
        content:
          contentEncoding: base64
          description: The generated questionnaires in a base64 encoded format.
          type: string
        language:
          description: The two-letter [ISO-639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language code for the questionnaire. For example, **en**.
          type: string
        pciTemplateReferences:
          description: The array of Adyen-generated unique identifiers for the questionnaires.
          items:
            type: string
          type: array
      type: object
    GetPciQuestionnaireInfosResponse:
      properties:
        data:
          description: Information about the signed PCI questionnaires.
          items:
            $ref: "#/components/schemas/PciDocumentInfo"
          type: array
      type: object
    GetPciQuestionnaireResponse:
      properties:
        content:
          contentEncoding: base64
          description: The generated questionnaire in a base64 encoded format.
          type: string
        createdAt:
          description: The date the questionnaire was created, in ISO 8601 extended format. For example, 2022-12-18T10:15:30+01:00
          format: date-time
          type: string
        id:
          description: The unique identifier of the signed questionnaire.
          type: string
        validUntil:
          description: The expiration date of the questionnaire, in ISO 8601 extended format. For example, 2022-12-18T10:15:30+01:00
          format: date-time
          type: string
      type: object
    GetTermsOfServiceAcceptanceInfosResponse:
      properties:
        data:
          description: The Terms of Service acceptance information.
          items:
            $ref: "#/components/schemas/TermsOfServiceAcceptanceInfo"
          type: array
      type: object
    GetTermsOfServiceDocumentRequest:
      properties:
        language:
          description: "The language to be used for the Terms of Service document, specified by the two-letter [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language code. Possible value: **en** for English."
          type: string
        type:
          description: |+
            The type of Terms of Service.

            Possible values:
            *  **adyenForPlatformsManage**
            *  **adyenIssuing**
            *  **adyenForPlatformsAdvanced**
            *  **adyenCapital**
            *  **adyenAccount**
            *  **adyenCard**
            *  **adyenFranchisee**
            *  **adyenPccr**

          enum:
            - adyenAccount
            - adyenCapital
            - adyenCard
            - adyenForPlatformsAdvanced
            - adyenForPlatformsManage
            - adyenFranchisee
            - adyenIssuing
            - adyenPccr
          type: string
      required:
        - type
        - language
      type: object
    GetTermsOfServiceDocumentResponse:
      properties:
        document:
          contentEncoding: base64
          description: The Terms of Service document in Base64-encoded format.
          type: string
        id:
          description: The unique identifier of the legal entity.
          type: string
        language:
          description: "The language used for the Terms of Service document, specified by the two-letter [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language code. Possible value: **en** for English."
          type: string
        termsOfServiceDocumentId:
          description: The unique identifier of the Terms of Service document.
          type: string
        type:
          description: |+
            The type of Terms of Service.

            Possible values:
            *  **adyenForPlatformsManage**
            *  **adyenIssuing**
            *  **adyenForPlatformsAdvanced**
            *  **adyenCapital**
            *  **adyenAccount**
            *  **adyenCard**
            *  **adyenFranchisee**
            *  **adyenPccr**

          enum:
            - adyenAccount
            - adyenCapital
            - adyenCard
            - adyenForPlatformsAdvanced
            - adyenForPlatformsManage
            - adyenFranchisee
            - adyenIssuing
            - adyenPccr
          type: string
      type: object
    HKLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The 9- to 15-character bank account number (alphanumeric), without separators or whitespace. Starts with the 3-digit branch code.
          maxLength: 15
          minLength: 9
          type: string
        clearingCode:
          description: The 3-digit clearing code, without separators or whitespace.
          maxLength: 3
          minLength: 3
          type: string
        formFactor:
          default: physical
          description: |-
            The form factor of the account.

            Possible values: **physical**, **virtual**. Default value: **physical**.
          type:
            - string
            - "null"
        type:
          default: hkLocal
          description: "**hkLocal**"
          enum:
            - hkLocal
          type: string
      required:
        - type
        - accountNumber
        - clearingCode
      type: object
    HULocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The 24-digit bank account number, without separators or whitespace.
          maxLength: 24
          minLength: 24
          type: string
        formFactor:
          default: physical
          description: |-
            The form factor of the account.

            Possible values: **physical**, **virtual**. Default value: **physical**.
          type:
            - string
            - "null"
        type:
          default: huLocal
          description: "**huLocal**"
          enum:
            - huLocal
          type: string
      required:
        - type
        - accountNumber
      type: object
    IbanAccountIdentification:
      additionalProperties: false
      properties:
        formFactor:
          default: physical
          description: |-
            The form factor of the account.

            Possible values: **physical**, **virtual**. Default value: **physical**.
          type:
            - string
            - "null"
        iban:
          description: The international bank account number as defined in the [ISO-13616](https://www.iso.org/standard/81090.html) standard.
          type: string
        type:
          default: iban
          description: "**iban**"
          enum:
            - iban
          type: string
      required:
        - type
        - iban
      type: object
    IdentificationData:
      properties:
        cardNumber:
          description: The card number of the document that was issued (AU only).
          type: string
        expiryDate:
          description: The expiry date of the document, in YYYY-MM-DD format.
          type: string
        issuerCountry:
          deprecated: true
          description: The two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code where the document was issued. For example, **US**.
          type: string
          x-deprecatedInVersion: "1"
        issuerState:
          description: The state or province where the document was issued (AU only).
          type: string
        nationalIdExempt:
          description: Applies only to individuals in the US. Set to **true** if the individual does not have an SSN. To verify their identity, Adyen will require them to upload an ID document.
          type: boolean
        number:
          description: The number in the document.
          type: string
        type:
          description: Type of identity data. For **individual**, the `type` value is **nationalIdNumber**.
          enum:
            - nationalIdNumber
          type: string
      required:
        - type
      type: object
    Individual:
      properties:
        birthData:
          $ref: "#/components/schemas/BirthData"
          description: The individual's birth information.
        email:
          description: The email address of the legal entity.
          type: string
        identificationData:
          $ref: "#/components/schemas/IdentificationData"
          description: Information about the individual's identification document.
        name:
          $ref: "#/components/schemas/Name"
          description: The individual's name.
        nationality:
          description: The individual's nationality.
          type: string
        phone:
          $ref: "#/components/schemas/PhoneNumber"
          description: The phone number of the legal entity.
        residentialAddress:
          $ref: "#/components/schemas/Address"
          description: The residential address of the individual.
        taxInformation:
          description: The tax information of the individual.
          items:
            $ref: "#/components/schemas/TaxInformation"
          type: array
          x-addedInVersion: "2"
        webData:
          $ref: "#/components/schemas/WebData"
          deprecated: true
          description: The website and app URL of the legal entity.
          x-deprecatedInVersion: "1"
      required:
        - name
        - residentialAddress
      type: object
    LegalEntity:
      properties:
        capabilities:
          additionalProperties:
            $ref: "#/components/schemas/LegalEntityCapability"
          description: Contains key-value pairs that specify the actions that the legal entity can do in your platform.The key is a capability required for your integration. For example, **issueCard** for Issuing.The value is an object containing the settings for the capability.
          readOnly: true
          type: object
        documentDetails:
          description: List of documents uploaded for the legal entity.
          items:
            $ref: "#/components/schemas/DocumentReference"
          type: array
          x-addedInVersion: "2"
        documents:
          deprecated: true
          description: List of documents uploaded for the legal entity.
          items:
            $ref: "#/components/schemas/EntityReference"
          type: array
          x-deprecatedInVersion: "1"
          x-deprecatedMessage: Use the `documentDetails` array instead.
        entityAssociations:
          description: |-
            List of legal entities associated with the current legal entity.
            For example, ultimate beneficial owners associated with an organization through ownership or control, or as signatories.
          items:
            $ref: "#/components/schemas/LegalEntityAssociation"
          type: array
        id:
          description: The unique identifier of the legal entity.
          readOnly: true
          type: string
        individual:
          $ref: "#/components/schemas/Individual"
          description: Information about the individual. Required if `type` is **individual**.
        organization:
          $ref: "#/components/schemas/Organization"
          description: Information about the organization. Required if `type` is **organization**.
        problems:
          description: List of verification errors related to capabilities for the legal entity.
          items:
            $ref: "#/components/schemas/CapabilityProblem"
          type: array
          x-addedInVersion: "3"
        reference:
          description: Your reference for the legal entity, maximum 150 characters.
          maxLength: 150
          type: string
        soleProprietorship:
          $ref: "#/components/schemas/SoleProprietorship"
          description: Information about the sole proprietorship. Required if `type` is **soleProprietorship**.
          x-addedInVersion: "2"
        transferInstruments:
          description: List of transfer instruments that the legal entity owns.
          items:
            $ref: "#/components/schemas/TransferInstrumentReference"
          readOnly: true
          type: array
        trust:
          $ref: "#/components/schemas/Trust"
          description: Information about the trust. Required if `type` is **trust**.
        type:
          description: |-
            The type of legal entity.

            Possible values: **individual**, **organization**, **soleProprietorship**, or **trust**.
          enum:
            - individual
            - organization
            - soleProprietorship
            - trust
            - unincorporatedPartnership
          type: string
        unincorporatedPartnership:
          $ref: "#/components/schemas/UnincorporatedPartnership"
          description: Information about the unincorporated partnership. Required if `type` is **unincorporatedPartnership**.
        verificationDeadlines:
          description: List of verification deadlines and the capabilities that will be disallowed if verification errors are not resolved.
          items:
            $ref: "#/components/schemas/VerificationDeadline"
          readOnly: true
          type: array
          x-addedInVersion: "3"
        verificationPlan:
          description: A key-value pair that specifies the [verification process](https://docs.adyen.com/marketplaces-and-platforms/collect-verification-details/) for a legal entity. Set to **upfront** for [upfront verification](https://docs.adyen.com/marketplaces-and-platforms/collect-verification-details#upfront).
          type: string
      required:
        - id
      type: object
    LegalEntityAssociation:
      properties:
        associatorId:
          description: The unique identifier of another legal entity with which the `legalEntityId` is associated. When the `legalEntityId` is associated to legal entities other than the current one, the response returns all the associations.
          readOnly: true
          type: string
        entityType:
          description: |-
            The legal entity type of associated legal entity.

            For example, **organization**, **soleProprietorship** or **individual**.
          readOnly: true
          type: string
        jobTitle:
          description: The individual's job title if the `type` is **uboThroughControl** or **signatory**.
          type: string
        legalEntityId:
          description: The unique identifier of the associated [legal entity](https://docs.adyen.com/api-explorer/legalentity/latest/post/legalEntities#responses-200-id).
          type: string
        name:
          description: |-
            The name of the associated [legal entity](https://docs.adyen.com/api-explorer/legalentity/latest/post/legalEntities#responses-200-id).

            - For **individual**, `name.firstName` and `name.lastName`.
            - For **organization**, `legalName`.
            - For **soleProprietorship**, `name`.
          readOnly: true
          type: string
        settlorExemptionReason:
          description: |-
            Defines the Kyc Exemption Reason for a Settlor associated with a trust.

            For example, **professionalServiceProvider**, **deceased**, or **contributionBelowThreshold**.
          items:
            type: string
          readOnly: true
          type: array
        type:
          description: |-
            Defines the relationship of the legal entity to the current legal entity.

            Possible values for organizations: **uboThroughOwnership**, **uboThroughControl**, **director**, **signatory**, or **ultimateParentCompany**.

            Possible values for sole proprietorships: **soleProprietorship**.

            Possible value for trusts: **trust**

            Possible values for trust members: **definedBeneficiary**, **protector**, **secondaryTrustee**, **settlor**, **uboThroughControl**, or **uboThroughOwnership**.
          enum:
            - definedBeneficiary
            - director
            - pciSignatory
            - protector
            - secondaryTrustee
            - settlor
            - signatory
            - soleProprietorship
            - trust
            - trustOwnership
            - uboThroughControl
            - uboThroughOwnership
            - ultimateParentCompany
            - undefinedBeneficiary
          type: string
      required:
        - legalEntityId
        - type
      type: object
    LegalEntityCapability:
      properties:
        allowed:
          description: Indicates whether the capability is allowed. Adyen sets this to **true** if the verification is successful.
          readOnly: true
          type: boolean
        allowedLevel:
          description: |-
            The capability level that is allowed for the legal entity.

            Possible values: **notApplicable**, **low**, **medium**, **high**.
          enum:
            - high
            - low
            - medium
            - notApplicable
          readOnly: true
          type: string
        allowedSettings:
          $ref: "#/components/schemas/CapabilitySettings"
          description: The settings that are allowed for the legal entity.
          readOnly: true
        requested:
          description: Indicates whether the capability is requested. To check whether the legal entity is permitted to use the capability, refer to the `allowed` field.
          readOnly: true
          type: boolean
        requestedLevel:
          description: |-
            The requested level of the capability. Some capabilities, such as those used in [card issuing](https://docs.adyen.com/issuing/add-capabilities#capability-levels), have different levels. Levels increase the capability, but also require additional checks and increased monitoring.

            Possible values: **notApplicable**, **low**, **medium**, **high**.
          enum:
            - high
            - low
            - medium
            - notApplicable
          readOnly: true
          type: string
        requestedSettings:
          $ref: "#/components/schemas/CapabilitySettings"
          description: The settings that are requested for the legal entity.
          readOnly: true
        transferInstruments:
          description: The capability status of transfer instruments associated with the legal entity.
          items:
            $ref: "#/components/schemas/SupportingEntityCapability"
          readOnly: true
          type: array
          x-addedInVersion: "2"
        verificationStatus:
          description: |
            The status of the verification checks for the capability.

            Possible values:

            * **pending**: Adyen is running the verification.

            * **invalid**: The verification failed. Check if the `errors` array contains more information.

            * **valid**: The verification has been successfully completed.

            * **rejected**: Adyen has verified the information, but found reasons to not allow the capability.
          readOnly: true
          type: string
      type: object
    LegalEntityInfo:
      properties:
        capabilities:
          additionalProperties:
            $ref: "#/components/schemas/LegalEntityCapability"
          description: Contains key-value pairs that specify the actions that the legal entity can do in your platform.The key is a capability required for your integration. For example, **issueCard** for Issuing.The value is an object containing the settings for the capability.
          readOnly: true
          type: object
        entityAssociations:
          description: |-
            List of legal entities associated with the current legal entity.
            For example, ultimate beneficial owners associated with an organization through ownership or control, or as signatories.
          items:
            $ref: "#/components/schemas/LegalEntityAssociation"
          type: array
        individual:
          $ref: "#/components/schemas/Individual"
          description: Information about the individual. Required if `type` is **individual**.
        organization:
          $ref: "#/components/schemas/Organization"
          description: Information about the organization. Required if `type` is **organization**.
        reference:
          description: Your reference for the legal entity, maximum 150 characters.
          maxLength: 150
          type: string
        soleProprietorship:
          $ref: "#/components/schemas/SoleProprietorship"
          description: Information about the sole proprietorship. Required if `type` is **soleProprietorship**.
          x-addedInVersion: "2"
        trust:
          $ref: "#/components/schemas/Trust"
          description: Information about the trust. Required if `type` is **trust**.
        type:
          description: |-
            The type of legal entity.

            Possible values: **individual**, **organization**, **soleProprietorship**, or **trust**.
          enum:
            - individual
            - organization
            - soleProprietorship
            - trust
            - unincorporatedPartnership
          type: string
        unincorporatedPartnership:
          $ref: "#/components/schemas/UnincorporatedPartnership"
          description: Information about the unincorporated partnership. Required if `type` is **unincorporatedPartnership**.
        verificationPlan:
          description: A key-value pair that specifies the [verification process](https://docs.adyen.com/marketplaces-and-platforms/collect-verification-details/) for a legal entity. Set to **upfront** for [upfront verification](https://docs.adyen.com/marketplaces-and-platforms/collect-verification-details#upfront).
          type: string
      type: object
    LegalEntityInfoRequiredType:
      properties:
        capabilities:
          additionalProperties:
            $ref: "#/components/schemas/LegalEntityCapability"
          description: Contains key-value pairs that specify the actions that the legal entity can do in your platform.The key is a capability required for your integration. For example, **issueCard** for Issuing.The value is an object containing the settings for the capability.
          readOnly: true
          type: object
        entityAssociations:
          description: |-
            List of legal entities associated with the current legal entity.
            For example, ultimate beneficial owners associated with an organization through ownership or control, or as signatories.
          items:
            $ref: "#/components/schemas/LegalEntityAssociation"
          type: array
        individual:
          $ref: "#/components/schemas/Individual"
          description: Information about the individual. Required if `type` is **individual**.
        organization:
          $ref: "#/components/schemas/Organization"
          description: Information about the organization. Required if `type` is **organization**.
        reference:
          description: Your reference for the legal entity, maximum 150 characters.
          maxLength: 150
          type: string
        soleProprietorship:
          $ref: "#/components/schemas/SoleProprietorship"
          description: Information about the sole proprietorship. Required if `type` is **soleProprietorship**.
          x-addedInVersion: "2"
        trust:
          $ref: "#/components/schemas/Trust"
          description: Information about the trust. Required if `type` is **trust**.
        type:
          description: |-
            The type of legal entity.

             Possible values: **individual**, **organization**, **soleProprietorship**, or **trust**.
          enum:
            - individual
            - organization
            - soleProprietorship
            - trust
            - unincorporatedPartnership
          type: string
        unincorporatedPartnership:
          $ref: "#/components/schemas/UnincorporatedPartnership"
          description: Information about the unincorporated partnership. Required if `type` is **unincorporatedPartnership**.
        verificationPlan:
          description: A key-value pair that specifies the [verification process](https://docs.adyen.com/marketplaces-and-platforms/collect-verification-details/) for a legal entity. Set to **upfront** for [upfront verification](https://docs.adyen.com/marketplaces-and-platforms/collect-verification-details#upfront).
          type: string
      required:
        - type
      type: object
    NOLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The 11-digit bank account number, without separators or whitespace.
          maxLength: 11
          minLength: 11
          type: string
        formFactor:
          default: physical
          description: |-
            The form factor of the account.

            Possible values: **physical**, **virtual**. Default value: **physical**.
          type:
            - string
            - "null"
        type:
          default: noLocal
          description: "**noLocal**"
          enum:
            - noLocal
          type: string
      required:
        - type
        - accountNumber
      type: object
    NZLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The 15-16 digit bank account number. The first 2 digits are the bank number, the next 4 digits are the branch number, the next 7 digits are the account number, and the final 2-3 digits are the suffix.
          maxLength: 16
          minLength: 15
          type: string
        formFactor:
          default: physical
          description: |-
            The form factor of the account.

            Possible values: **physical**, **virtual**. Default value: **physical**.
          type:
            - string
            - "null"
        type:
          default: nzLocal
          description: "**nzLocal**"
          enum:
            - nzLocal
          type: string
      required:
        - type
        - accountNumber
      type: object
    Name:
      properties:
        firstName:
          description: The individual's first name.
          type: string
        infix:
          description: The infix in the individual's name, if any.
          type: string
        lastName:
          description: The individual's last name.
          type: string
      required:
        - firstName
        - lastName
      type: object
    NumberAndBicAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The bank account number, without separators or whitespace. The length and format depends on the bank or country.
          maxLength: 34
          type: string
        additionalBankIdentification:
          $ref: "#/components/schemas/AdditionalBankIdentification"
          description: Additional identification codes of the bank. Some banks may require these identifiers for cross-border transfers.
        bic:
          description: The bank's 8- or 11-character BIC or SWIFT code.
          maxLength: 11
          minLength: 8
          type: string
        formFactor:
          default: physical
          description: |-
            The form factor of the account.

            Possible values: **physical**, **virtual**. Default value: **physical**.
          type:
            - string
            - "null"
        type:
          default: numberAndBic
          description: "**numberAndBic**"
          enum:
            - numberAndBic
          type: string
      required:
        - type
        - accountNumber
        - bic
      type: object
    OnboardingLink:
      properties:
        url:
          description: |-
            The URL of the hosted onboarding page where you need to redirect your user. This URL expires after 4 minutes and can only be used once.

            If the link expires, you need to create a new link.
          type: string
      type: object
    OnboardingLinkInfo:
      properties:
        locale:
          description: |-
            The language that will be used for the page, specified by a combination of two letter [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language and [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. See [possible values](https://docs.adyen.com/marketplaces-and-platforms/collect-verification-details/hosted#supported-languages). 

            If not specified in the request or if the language is not supported, the page uses the browser language. If the browser language is not supported, the page uses **en-US** by default.
          type: string
        redirectUrl:
          description: The URL where the user is redirected after they complete hosted onboarding.
          type: string
        settings:
          additionalProperties:
            type: boolean
          description: |+
            Boolean key-value pairs indicating the settings for the hosted onboarding page. The keys are the settings.

            Possible keys:

            By default, these values are set to **true**. Set to **false** to not allow the action.

            - **changeLegalEntityType**: The user can change their legal entity type.

            - **editPrefilledCountry**: The user can change the country of their legal entity's address, for example the registered address of an organization.

            By default, these values are set to **false**. Set to **true** to allow the action.

            - **allowBankAccountFormatSelection**: The user can select the format for their payout account if applicable.

            - **allowIntraRegionCrossBorderPayout**: The user can select a payout account in a different EU/EEA country than the country of their legal entity.

            By default, these value are set to **false**. Set the following values to **true** to require the user to sign PCI questionnaires based on their sales channels. The user must sign PCI questionnaires for all relevant sales channels.

            - **requirePciSignEcommerce**

            - **requirePciSignPos**

            - **requirePciSignEcomMoto**

            - **requirePciSignPosMoto**

          type: object
        themeId:
          description: The unique identifier of the hosted onboarding theme.
          type: string
      type: object
    OnboardingTheme:
      properties:
        createdAt:
          description: The creation date of the theme.
          format: date-time
          type: string
        description:
          description: The description of the theme.
          type: string
        id:
          description: The unique identifier of the theme.
          type: string
        properties:
          additionalProperties:
            type: string
          description: The properties of the theme.
          type: object
        updatedAt:
          description: The date when the theme was last updated.
          format: date-time
          type: string
      required:
        - properties
        - id
        - createdAt
      type: object
    OnboardingThemes:
      properties:
        next:
          description: The next page. Only present if there is a next page.
          type: string
        previous:
          description: The previous page. Only present if there is a previous page.
          type: string
        themes:
          description: List of onboarding themes.
          items:
            $ref: "#/components/schemas/OnboardingTheme"
          type: array
      required:
        - themes
      type: object
    Organization:
      properties:
        dateOfIncorporation:
          description: The date when the organization was incorporated in YYYY-MM-DD format.
          type: string
          x-addedInVersion: "2"
        description:
          description: Your description for the organization.
          type: string
        doingBusinessAs:
          description: The organization's trading name, if different from the registered legal name.
          type: string
        email:
          description: The email address of the legal entity.
          type: string
        legalName:
          description: The organization's legal name.
          type: string
        phone:
          $ref: "#/components/schemas/PhoneNumber"
          description: The phone number of the legal entity.
        principalPlaceOfBusiness:
          $ref: "#/components/schemas/Address"
          description: The address where the organization operates from. Provide this if the principal place of business is different from the `registeredAddress`.
        registeredAddress:
          $ref: "#/components/schemas/Address"
          description: The address of the organization registered at their registrar (such as the Chamber of Commerce).
        registrationNumber:
          description: The organization's registration number.
          type: string
        stockData:
          $ref: "#/components/schemas/StockData"
          description: Information about the organization's publicly traded stock. Provide this object only if `type` is **listedPublicCompany**.
        taxInformation:
          description: The tax information of the organization.
          items:
            $ref: "#/components/schemas/TaxInformation"
          type: array
          x-addedInVersion: "2"
        taxReportingClassification:
          $ref: "#/components/schemas/TaxReportingClassification"
          description: The tax reporting classification (FATCA/CRS self-certification) of the organization.
          x-addedInVersion: "2"
        type:
          description: |-
            Type of organization.

            Possible values: **associationIncorporated**, **governmentalOrganization**, **listedPublicCompany**, **nonProfit**, **partnershipIncorporated**, **privateCompany**.
          enum:
            - associationIncorporated
            - governmentalOrganization
            - listedPublicCompany
            - nonProfit
            - partnershipIncorporated
            - privateCompany
          type: string
        vatAbsenceReason:
          description: |-
            The reason the organization has not provided a VAT number.

            Possible values: **industryExemption**, **belowTaxThreshold**.
          enum:
            - industryExemption
            - belowTaxThreshold
          type: string
          x-addedInVersion: "2"
        vatNumber:
          description: The organization's VAT number.
          type: string
          x-addedInVersion: "2"
        webData:
          $ref: "#/components/schemas/WebData"
          deprecated: true
          description: The website and app URL of the legal entity.
          x-deprecatedInVersion: "1"
      required:
        - legalName
        - registeredAddress
      type: object
    OwnerEntity:
      properties:
        id:
          description: Unique identifier of the resource that owns the document. For `type` **legalEntity**, this value is the unique identifier of the [legal entity](https://docs.adyen.com/api-explorer/legalentity/latest/post/legalEntities#responses-200-id). For `type` **bankAccount**, this value is the unique identifier of the [transfer instrument](https://docs.adyen.com/api-explorer/legalentity/latest/post/transferInstruments#responses-200-id).
          type: string
        type:
          description: |-
            Type of resource that owns the document.

            Possible values: **legalEntity**, **bankAccount**.
          type: string
      required:
        - id
        - type
      type: object
    PLLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The 26-digit bank account number ([Numer rachunku](https://pl.wikipedia.org/wiki/Numer_Rachunku_Bankowego)), without separators or whitespace.
          maxLength: 26
          minLength: 26
          type: string
        formFactor:
          default: physical
          description: |-
            The form factor of the account.

            Possible values: **physical**, **virtual**. Default value: **physical**.
          type:
            - string
            - "null"
        type:
          default: plLocal
          description: "**plLocal**"
          enum:
            - plLocal
          type: string
      required:
        - type
        - accountNumber
      type: object
    PciDocumentInfo:
      properties:
        createdAt:
          description: The date the questionnaire was created, in ISO 8601 extended format. For example, 2022-12-18T10:15:30+01:00
          format: date-time
          type: string
        id:
          description: The unique identifier of the signed questionnaire.
          type: string
        validUntil:
          description: The expiration date of the questionnaire, in ISO 8601 extended format. For example, 2022-12-18T10:15:30+01:00
          format: date-time
          type: string
      type: object
    PciSigningRequest:
      properties:
        pciTemplateReferences:
          description: The array of Adyen-generated unique identifiers for the questionnaires.
          items:
            type: string
          type: array
        signedBy:
          description: The [legal entity ID](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/legalEntities__resParam_id) of the individual who signs the PCI questionnaire.
          type: string
      required:
        - signedBy
        - pciTemplateReferences
      type: object
    PciSigningResponse:
      properties:
        pciQuestionnaireIds:
          description: The unique identifiers of the signed PCI documents.
          items:
            type: string
          type: array
        signedBy:
          description: The [legal entity ID](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/legalEntities__resParam_id) of the individual who signed the PCI questionnaire.
          type: string
      type: object
    PhoneNumber:
      properties:
        number:
          description: The full phone number, including the country code. For example, **+3112345678**.
          type: string
        type:
          description: |-
            The type of phone number.
             Possible values: **mobile**, **landline**, **sip**, **fax.** 
          type: string
      required:
        - number
      type: object
    RemediatingAction:
      properties:
        code:
          type: string
        message:
          type: string
      type: object
    SELocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The 7- to 10-digit bank account number ([Bankkontonummer](https://sv.wikipedia.org/wiki/Bankkonto)), without the clearing number, separators, or whitespace.
          maxLength: 10
          minLength: 7
          type: string
        clearingNumber:
          description: The 4- to 5-digit clearing number ([Clearingnummer](https://sv.wikipedia.org/wiki/Clearingnummer)), without separators or whitespace.
          maxLength: 5
          minLength: 4
          type: string
        formFactor:
          default: physical
          description: |-
            The form factor of the account.

            Possible values: **physical**, **virtual**. Default value: **physical**.
          type:
            - string
            - "null"
        type:
          default: seLocal
          description: "**seLocal**"
          enum:
            - seLocal
          type: string
      required:
        - type
        - accountNumber
        - clearingNumber
      type: object
    SGLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The 4- to 19-digit bank account number, without separators or whitespace.
          maxLength: 19
          minLength: 4
          type: string
        bic:
          description: The bank's 8- or 11-character BIC or SWIFT code.
          maxLength: 11
          minLength: 8
          type: string
        formFactor:
          default: physical
          description: |-
            The form factor of the account.

            Possible values: **physical**, **virtual**. Default value: **physical**.
          type:
            - string
            - "null"
        type:
          default: sgLocal
          description: "**sgLocal**"
          enum:
            - sgLocal
          type: string
      required:
        - accountNumber
        - bic
      type: object
    ServiceError:
      properties:
        errorCode:
          description: The error code mapped to the error message.
          type: string
        errorType:
          description: The category of the error.
          type: string
        message:
          description: A short explanation of the issue.
          type: string
        pspReference:
          description: The PSP reference of the payment.
          type: string
        status:
          description: The HTTP response status.
          format: int32
          type: integer
      type: object
    SoleProprietorship:
      properties:
        countryOfGoverningLaw:
          description: The two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the governing country.
          type: string
        dateOfIncorporation:
          description: The date when the legal arrangement was incorporated in YYYY-MM-DD format.
          type: string
          x-addedInVersion: "2"
        description:
          description: Short description about the Legal Arrangement.
          type: string
          x-addedInVersion: "3"
        doingBusinessAs:
          description: The registered name, if different from the `name`.
          type: string
        name:
          description: The legal name.
          type: string
        principalPlaceOfBusiness:
          $ref: "#/components/schemas/Address"
          description: The business address. Required if the principal place of business is different from the `registeredAddress`.
        registeredAddress:
          $ref: "#/components/schemas/Address"
          description: The address registered at the registrar, such as the Chamber of Commerce.
        registrationNumber:
          description: The registration number.
          type: string
        taxInformation:
          description: The tax information of the entity.
          items:
            $ref: "#/components/schemas/TaxInformation"
          type: array
          x-addedInVersion: "2"
        vatAbsenceReason:
          description: |-
            The reason for not providing a VAT number.

            Possible values: **industryExemption**, **belowTaxThreshold**.
          enum:
            - industryExemption
            - belowTaxThreshold
          type: string
        vatNumber:
          description: The VAT number.
          type: string
      required:
        - name
        - countryOfGoverningLaw
        - registeredAddress
      type: object
    SourceOfFunds:
      properties:
        acquiringBusinessLineId:
          deprecated: true
          description: The unique identifier of the business line that will be the source of funds.This must be a business line for a **receivePayments** or **receiveFromPlatformPayments** capability.
          type: string
          x-deprecatedInVersion: "3"
          x-deprecatedMessage: This field will be removed in v4.
        adyenProcessedFunds:
          description: Indicates whether the funds are coming from transactions processed by Adyen. If **false**, a `description` is required.
          type: boolean
        description:
          description: Text describing the source of funds. For example, for `type` **business**, provide a description of where the business transactions come from, such as payments through bank transfer. Required when `adyenProcessedFunds` is **false**.
          type: string
        type:
          description: "The type of the source of funds. Possible value: **business**."
          enum:
            - business
          type: string
      type: object
    StockData:
      properties:
        marketIdentifier:
          description: The four-digit [Market Identifier Code](https://en.wikipedia.org/wiki/Market_Identifier_Code) of the stock market where the organization's stocks are traded.
          type: string
        stockNumber:
          description: The 12-digit International Securities Identification Number (ISIN) of the company, without dashes (-).
          type: string
        tickerSymbol:
          description: The stock ticker symbol.
          type: string
      type: object
    SupportingEntityCapability:
      properties:
        allowed:
          description: |-
            Indicates whether the capability is allowed for the supporting entity.

            If a capability is allowed for a supporting entity but not for the parent legal entity, this means the legal entity has other supporting entities that failed verification.

            **You can use the allowed supporting entity** regardless of the verification status of other supporting entities.
          readOnly: true
          type: boolean
        id:
          description: "Supporting entity reference "
          readOnly: true
          type: string
        requested:
          description: "Indicates whether the supporting entity capability is requested. "
          readOnly: true
          type: boolean
        verificationStatus:
          description: |
            The status of the verification checks for the capability of the supporting entity.

            Possible values:

            * **pending**: Adyen is running the verification.

            * **invalid**: The verification failed. Check if the `errors` array contains more information.

            * **valid**: The verification has been successfully completed.

            * **rejected**: Adyen has verified the information, but found reasons to not allow the capability.
          readOnly: true
          type: string
      type: object
    TaxInformation:
      properties:
        country:
          description: The two-letter [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code.
          maxLength: 2
          minLength: 2
          type: string
        number:
          description: The tax ID number (TIN) of the organization or individual.
          type: string
        type:
          description: The TIN type depending on the country where it was issued. Provide only for countries that have multiple tax IDs, such as Sweden, the UK, or the US. For example, provide **SSN**, **EIN**, or **ITIN** for the US.
          type: string
      type: object
    TaxReportingClassification:
      properties:
        businessType:
          description: |-
            The organization's business type.

            Possible values: **other**, **listedPublicCompany**, **subsidiaryOfListedPublicCompany**, **governmentalOrganization**, **internationalOrganization**, **financialInstitution**.
          enum:
            - other
            - listedPublicCompany
            - subsidiaryOfListedPublicCompany
            - governmentalOrganization
            - internationalOrganization
            - financialInstitution.
          type: string
        financialInstitutionNumber:
          description: The Global Intermediary Identification Number (GIIN) required for FATCA. Only required if the organization is a US financial institution and the `businessType` is **financialInstitution**.
          type: string
        mainSourceOfIncome:
          description: |-
            The organization's main source of income.

            Possible values: **businessOperation**, **realEstateSales**, **investmentInterestOrRoyalty**, **propertyRental**, **other**.
          enum:
            - businessOperation
            - realEstateSales
            - investmentInterestOrRoyalty
            - propertyRental
            - other
          type: string
        type:
          description: |-
            The tax reporting classification type.

            Possible values: **nonFinancialNonReportable**, **financialNonReportable**, **nonFinancialActive**, **nonFinancialPassive**.
          enum:
            - nonFinancialNonReportable
            - financialNonReportable
            - nonFinancialActive
            - nonFinancialPassive
          type: string
      type: object
    TermsOfServiceAcceptanceInfo:
      properties:
        acceptedBy:
          description: The unique identifier of the user that accepted the Terms of Service.
          type: string
        acceptedFor:
          description: The unique identifier of the legal entity for which the Terms of Service are accepted.
          type: string
        createdAt:
          description: The date when the Terms of Service were accepted.
          format: date-time
          type: string
        id:
          description: An Adyen-generated reference for the accepted Terms of Service.
          type: string
        type:
          description: |+
            The type of Terms of Service.

            Possible values:
            *  **adyenForPlatformsManage**
            *  **adyenIssuing**
            *  **adyenForPlatformsAdvanced**
            *  **adyenCapital**
            *  **adyenAccount**
            *  **adyenCard**
            *  **adyenFranchisee**
            *  **adyenPccr**

          enum:
            - adyenAccount
            - adyenCapital
            - adyenCard
            - adyenForPlatformsAdvanced
            - adyenForPlatformsManage
            - adyenFranchisee
            - adyenIssuing
            - adyenPccr
          type: string
      type: object
    TransferInstrument:
      properties:
        bankAccount:
          $ref: "#/components/schemas/BankAccountInfo"
          description: Contains information about the legal entity's bank account.
        capabilities:
          additionalProperties:
            $ref: "#/components/schemas/SupportingEntityCapability"
          description: List of capabilities for this transfer instrument.
          type: object
          x-addedInVersion: "3"
        documentDetails:
          description: List of documents uploaded for the transfer instrument.
          items:
            $ref: "#/components/schemas/DocumentReference"
          type: array
          x-addedInVersion: "2"
        id:
          description: The unique identifier of the transfer instrument.
          readOnly: true
          type: string
        legalEntityId:
          description: The unique identifier of the [legal entity](https://docs.adyen.com/api-explorer/legalentity/latest/post/legalEntities#responses-200-id) that owns the transfer instrument.
          type: string
        problems:
          description: The verification errors related to capabilities for this transfer instrument.
          items:
            $ref: "#/components/schemas/CapabilityProblem"
          type: array
          x-addedInVersion: "3"
        type:
          description: |-
            The type of transfer instrument.

            Possible value: **bankAccount**.
          enum:
            - bankAccount
            - recurringDetail
          type: string
      required:
        - legalEntityId
        - type
        - bankAccount
        - id
      type: object
    TransferInstrumentInfo:
      properties:
        bankAccount:
          $ref: "#/components/schemas/BankAccountInfo"
          description: Contains information about the legal entity's bank account.
        legalEntityId:
          description: The unique identifier of the [legal entity](https://docs.adyen.com/api-explorer/legalentity/latest/post/legalEntities#responses-200-id) that owns the transfer instrument.
          type: string
        type:
          description: |-
            The type of transfer instrument.

            Possible value: **bankAccount**.
          enum:
            - bankAccount
            - recurringDetail
          type: string
      required:
        - legalEntityId
        - type
        - bankAccount
      type: object
    TransferInstrumentReference:
      properties:
        accountIdentifier:
          description: The masked IBAN or bank account number.
          type: string
        id:
          description: The unique identifier of the resource.
          type: string
        realLastFour:
          description: Four last digits of the bank account number. If the transfer instrument is created using [instant bank account verification](https://docs.adyen.com/release-notes/platforms-and-financial-products#releaseNote=2023-05-08-hosted-onboarding), and it is a virtual bank account, these digits may be different from the last four digits of the masked account number.
          type: string
        trustedSource:
          description: Identifies if the bank account was created through [instant bank verification](https://docs.adyen.com/release-notes/platforms-and-financial-products#releaseNote=2023-05-08-hosted-onboarding).
          readOnly: true
          type: boolean
      required:
        - id
        - accountIdentifier
      type: object
    Trust:
      properties:
        countryOfGoverningLaw:
          description: The two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the governing country.
          type: string
        dateOfIncorporation:
          description: The date when the legal arrangement was incorporated in YYYY-MM-DD format.
          type: string
          x-addedInVersion: "2"
        description:
          description: Short description about the trust.
          type: string
          x-addedInVersion: "3"
        doingBusinessAs:
          description: The registered name, if different from the `name`.
          type: string
        name:
          description: The legal name.
          type: string
        principalPlaceOfBusiness:
          $ref: "#/components/schemas/Address"
          description: The business address. Required if the principal place of business is different from the `registeredAddress`.
        registeredAddress:
          $ref: "#/components/schemas/Address"
          description: The address registered at the registrar, such as the Chamber of Commerce.
        registrationNumber:
          description: The registration number.
          type: string
        taxInformation:
          description: The tax information of the entity.
          items:
            $ref: "#/components/schemas/TaxInformation"
          type: array
          x-addedInVersion: "2"
        type:
          description: |-
            Type of trust.

            Possible values for Australian trusts: **cashManagementTrust**, **corporateUnitTrust**, **deceasedEstate**, **discretionaryInvestmentTrust**, **discretionaryServicesManagementTrust**, **discretionaryTradingTrust**, **firstHomeSaverAccountsTrust**, **fixedTrust**, **fixedUnitTrust**, **hybridTrust**, **listedPublicUnitTrust**, **otherTrust**, **pooledSuperannuationTrust**, **publicTradingTrust**, **unlistedPublicUnitTrust**.
          enum:
            - cashManagementTrust
            - corporateUnitTrust
            - deceasedEstate
            - discretionaryInvestmentTrust
            - discretionaryServicesManagementTrust
            - discretionaryTradingTrust
            - firstHomeSaverAccountsTrust
            - fixedTrust
            - fixedUnitTrust
            - hybridTrust
            - listedPublicUnitTrust
            - otherTrust
            - pooledSuperannuationTrust
            - publicTradingTrust
            - unlistedPublicUnitTrust
          type: string
        undefinedBeneficiaryInfo:
          description: The undefined beneficiary information of the entity.
          items:
            $ref: "#/components/schemas/UndefinedBeneficiary"
          type: array
          x-addedInVersion: "2"
        vatAbsenceReason:
          description: |-
            The reason for not providing a VAT number.

            Possible values: **industryExemption**, **belowTaxThreshold**.
          enum:
            - industryExemption
            - belowTaxThreshold
          type: string
        vatNumber:
          description: The VAT number.
          type: string
      required:
        - name
        - countryOfGoverningLaw
        - registeredAddress
        - type
      type: object
    UKLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The 8-digit bank account number, without separators or whitespace.
          maxLength: 8
          minLength: 8
          type: string
        formFactor:
          default: physical
          description: |-
            The form factor of the account.

            Possible values: **physical**, **virtual**. Default value: **physical**.
          type:
            - string
            - "null"
        sortCode:
          description: The 6-digit [sort code](https://en.wikipedia.org/wiki/Sort_code), without separators or whitespace.
          maxLength: 6
          minLength: 6
          type: string
        type:
          default: ukLocal
          description: "**ukLocal**"
          enum:
            - ukLocal
          type: string
      required:
        - type
        - accountNumber
        - sortCode
      type: object
    USLocalAccountIdentification:
      additionalProperties: false
      properties:
        accountNumber:
          description: The bank account number, without separators or whitespace.
          maxLength: 18
          minLength: 2
          type: string
        accountType:
          default: checking
          description: |-
            The bank account type.

            Possible values: **checking** or **savings**. Defaults to **checking**.
          enum:
            - checking
            - savings
          type: string
        formFactor:
          default: physical
          description: |-
            The form factor of the account.

            Possible values: **physical**, **virtual**. Default value: **physical**.
          type:
            - string
            - "null"
        routingNumber:
          description: The 9-digit [routing number](https://en.wikipedia.org/wiki/ABA_routing_transit_number), without separators or whitespace.
          maxLength: 9
          minLength: 9
          type: string
        type:
          default: usLocal
          description: "**usLocal**"
          enum:
            - usLocal
          type: string
      required:
        - type
        - accountNumber
        - routingNumber
      type: object
    UndefinedBeneficiary:
      properties:
        description:
          description: The details of the undefined beneficiary.
          type: string
        reference:
          description: The reference of the undefined beneficiary.
          type: string
      type: object
    UnincorporatedPartnership:
      properties:
        countryOfGoverningLaw:
          description: The two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the governing country.
          type: string
        dateOfIncorporation:
          description: The date when the legal arrangement was incorporated in YYYY-MM-DD format.
          type: string
          x-addedInVersion: "2"
        description:
          description: Short description about the Legal Arrangement.
          type: string
          x-addedInVersion: "3"
        doingBusinessAs:
          description: The registered name, if different from the `name`.
          type: string
        name:
          description: The legal name.
          type: string
        principalPlaceOfBusiness:
          $ref: "#/components/schemas/Address"
          description: The business address. Required if the principal place of business is different from the `registeredAddress`.
        registeredAddress:
          $ref: "#/components/schemas/Address"
          description: The address registered at the registrar, such as the Chamber of Commerce.
        registrationNumber:
          description: The registration number.
          type: string
        taxInformation:
          description: The tax information of the entity.
          items:
            $ref: "#/components/schemas/TaxInformation"
          type: array
          x-addedInVersion: "2"
        type:
          description: |+
            Type of Partnership.

            Possible values:
            *  **limitedPartnership**
            *  **generalPartnership**
            *  **familyPartnership**
            *  **commercialPartnership**
            *  **publicPartnership**
            *  **otherPartnership**
            *  **gbr**
            *  **gmbh**
            *  **kgaa**
            *  **cv**
            *  **vof**
            *  **maatschap**
            *  **privateFundLimitedPartnership**
            *  **businessTrustEntity**
            *  **businessPartnership**
            *  **limitedLiabilityPartnership**
            *  **eg**
            *  **cooperative**
            *  **vos**
            *  **comunidadDeBienes**
            *  **herenciaYacente**
            *  **comunidadDePropietarios**
            *  **sep**
            *  **sca**
            *  **bt**
            *  **kkt**
            *  **scs**
            *  **snc**

          enum:
            - limitedPartnership
            - generalPartnership
            - familyPartnership
            - commercialPartnership
            - publicPartnership
            - otherPartnership
            - gbr
            - gmbh
            - kgaa
            - cv
            - vof
            - maatschap
            - privateFundLimitedPartnership
            - businessTrustEntity
            - businessPartnership
            - limitedLiabilityPartnership
            - eg
            - cooperative
            - vos
            - comunidadDeBienes
            - herenciaYacente
            - comunidadDePropietarios
            - sep
            - sca
            - bt
            - kkt
            - scs
            - snc
          type: string
        vatAbsenceReason:
          description: |-
            The reason for not providing a VAT number.

            Possible values: **industryExemption**, **belowTaxThreshold**.
          enum:
            - industryExemption
            - belowTaxThreshold
          type: string
        vatNumber:
          description: The VAT number.
          type: string
      required:
        - name
        - countryOfGoverningLaw
        - registeredAddress
        - type
      type: object
    VerificationDeadline:
      properties:
        capabilities:
          description: The list of capabilities that will be disallowed if information is not reviewed by the time of the deadline
          items:
            enum:
              - acceptExternalFunding
              - acceptPspFunding
              - acceptTransactionInRestrictedCountries
              - acceptTransactionInRestrictedCountriesCommercial
              - acceptTransactionInRestrictedCountriesConsumer
              - acceptTransactionInRestrictedIndustries
              - acceptTransactionInRestrictedIndustriesCommercial
              - acceptTransactionInRestrictedIndustriesConsumer
              - acquiring
              - atmWithdrawal
              - atmWithdrawalCommercial
              - atmWithdrawalConsumer
              - atmWithdrawalInRestrictedCountries
              - atmWithdrawalInRestrictedCountriesCommercial
              - atmWithdrawalInRestrictedCountriesConsumer
              - authorisedPaymentInstrumentUser
              - getGrantOffers
              - issueBankAccount
              - issueCard
              - issueCardCommercial
              - issueCardConsumer
              - localAcceptance
              - payout
              - payoutToTransferInstrument
              - processing
              - receiveFromBalanceAccount
              - receiveFromPlatformPayments
              - receiveFromThirdParty
              - receiveFromTransferInstrument
              - receiveGrants
              - receivePayments
              - sendToBalanceAccount
              - sendToThirdParty
              - sendToTransferInstrument
              - thirdPartyFunding
              - useCard
              - useCardCommercial
              - useCardConsumer
              - useCardInRestrictedCountries
              - useCardInRestrictedCountriesCommercial
              - useCardInRestrictedCountriesConsumer
              - useCardInRestrictedIndustries
              - useCardInRestrictedIndustriesCommercial
              - useCardInRestrictedIndustriesConsumer
              - withdrawFromAtm
              - withdrawFromAtmCommercial
              - withdrawFromAtmConsumer
              - withdrawFromAtmInRestrictedCountries
              - withdrawFromAtmInRestrictedCountriesCommercial
              - withdrawFromAtmInRestrictedCountriesConsumer
            type: string
          readOnly: true
          type: array
        entityIds:
          description: The unique identifiers of the bank account(s) that the deadline applies to
          items:
            type: string
          readOnly: true
          type: array
        expiresAt:
          description: The date that verification is due by before capabilities are disallowed.
          format: date-time
          readOnly: true
          type: string
      required:
        - expiresAt
        - capabilities
      type: object
    VerificationError:
      properties:
        capabilities:
          description: Contains key-value pairs that specify the actions that the legal entity can do in your platform. The key is a capability required for your integration. For example, **issueCard** for Issuing.The value is an object containing the settings for the capability.
          items:
            enum:
              - acceptExternalFunding
              - acceptPspFunding
              - acceptTransactionInRestrictedCountries
              - acceptTransactionInRestrictedCountriesCommercial
              - acceptTransactionInRestrictedCountriesConsumer
              - acceptTransactionInRestrictedIndustries
              - acceptTransactionInRestrictedIndustriesCommercial
              - acceptTransactionInRestrictedIndustriesConsumer
              - acquiring
              - atmWithdrawal
              - atmWithdrawalCommercial
              - atmWithdrawalConsumer
              - atmWithdrawalInRestrictedCountries
              - atmWithdrawalInRestrictedCountriesCommercial
              - atmWithdrawalInRestrictedCountriesConsumer
              - authorisedPaymentInstrumentUser
              - getGrantOffers
              - issueBankAccount
              - issueCard
              - issueCardCommercial
              - issueCardConsumer
              - localAcceptance
              - payout
              - payoutToTransferInstrument
              - processing
              - receiveFromBalanceAccount
              - receiveFromPlatformPayments
              - receiveFromThirdParty
              - receiveFromTransferInstrument
              - receiveGrants
              - receivePayments
              - sendToBalanceAccount
              - sendToThirdParty
              - sendToTransferInstrument
              - thirdPartyFunding
              - useCard
              - useCardCommercial
              - useCardConsumer
              - useCardInRestrictedCountries
              - useCardInRestrictedCountriesCommercial
              - useCardInRestrictedCountriesConsumer
              - useCardInRestrictedIndustries
              - useCardInRestrictedIndustriesCommercial
              - useCardInRestrictedIndustriesConsumer
              - withdrawFromAtm
              - withdrawFromAtmCommercial
              - withdrawFromAtmConsumer
              - withdrawFromAtmInRestrictedCountries
              - withdrawFromAtmInRestrictedCountriesCommercial
              - withdrawFromAtmInRestrictedCountriesConsumer
            type: string
          type: array
        code:
          description: The general error code.
          type: string
        message:
          description: The general error message.
          type: string
        remediatingActions:
          description: An object containing possible solutions to fix a verification error.
          items:
            $ref: "#/components/schemas/RemediatingAction"
          type: array
        subErrors:
          description: An array containing more granular information about the cause of the verification error.
          items:
            $ref: "#/components/schemas/VerificationError-recursive"
          type: array
        type:
          description: The type of error.
          enum:
            - dataMissing
            - dataReview
            - invalidInput
            - pendingStatus
            - rejected
          type: string
      type: object
    VerificationError-recursive:
      properties:
        capabilities:
          description: Contains key-value pairs that specify the actions that the legal entity can do in your platform. The key is a capability required for your integration. For example, **issueCard** for Issuing.The value is an object containing the settings for the capability.
          items:
            enum:
              - acceptExternalFunding
              - acceptPspFunding
              - acceptTransactionInRestrictedCountries
              - acceptTransactionInRestrictedCountriesCommercial
              - acceptTransactionInRestrictedCountriesConsumer
              - acceptTransactionInRestrictedIndustries
              - acceptTransactionInRestrictedIndustriesCommercial
              - acceptTransactionInRestrictedIndustriesConsumer
              - acquiring
              - atmWithdrawal
              - atmWithdrawalCommercial
              - atmWithdrawalConsumer
              - atmWithdrawalInRestrictedCountries
              - atmWithdrawalInRestrictedCountriesCommercial
              - atmWithdrawalInRestrictedCountriesConsumer
              - authorisedPaymentInstrumentUser
              - getGrantOffers
              - issueBankAccount
              - issueCard
              - issueCardCommercial
              - issueCardConsumer
              - localAcceptance
              - payout
              - payoutToTransferInstrument
              - processing
              - receiveFromBalanceAccount
              - receiveFromPlatformPayments
              - receiveFromThirdParty
              - receiveFromTransferInstrument
              - receiveGrants
              - receivePayments
              - sendToBalanceAccount
              - sendToThirdParty
              - sendToTransferInstrument
              - thirdPartyFunding
              - useCard
              - useCardCommercial
              - useCardConsumer
              - useCardInRestrictedCountries
              - useCardInRestrictedCountriesCommercial
              - useCardInRestrictedCountriesConsumer
              - useCardInRestrictedIndustries
              - useCardInRestrictedIndustriesCommercial
              - useCardInRestrictedIndustriesConsumer
              - withdrawFromAtm
              - withdrawFromAtmCommercial
              - withdrawFromAtmConsumer
              - withdrawFromAtmInRestrictedCountries
              - withdrawFromAtmInRestrictedCountriesCommercial
              - withdrawFromAtmInRestrictedCountriesConsumer
            type: string
          type: array
        code:
          description: The general error code.
          type: string
        message:
          description: The general error message.
          type: string
        remediatingActions:
          description: An object containing possible solutions to fix a verification error.
          items:
            $ref: "#/components/schemas/RemediatingAction"
          type: array
        type:
          description: The type of error.
          enum:
            - dataMissing
            - dataReview
            - invalidInput
            - pendingStatus
            - rejected
          type: string
      type: object
    VerificationErrors:
      properties:
        problems:
          description: List of the verification errors.
          items:
            $ref: "#/components/schemas/CapabilityProblem"
          type: array
          x-addedInVersion: "2"
      type: object
    WebData:
      properties:
        webAddress:
          description: The URL of the website or the app store URL.
          type: string
        webAddressId:
          description: The unique identifier of the web address.
          readOnly: true
          type: string
      type: object
    WebDataExemption:
      properties:
        reason:
          description: "The reason why the web data was not provided. Possible value: **noOnlinePresence**."
          enum:
            - noOnlinePresence
            - notCollectedDuringOnboarding
          type: string
      type: object
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: X-API-Key
      type: apiKey
    BasicAuth:
      scheme: basic
      type: http
