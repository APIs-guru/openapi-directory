openapi: 3.1.0
servers:
  - url: https://checkout-test.adyen.com/v37
info:
  contact:
    name: Adyen Developer Experience team
    url: https://github.com/Adyen/adyen-openapi
    x-twitter: Adyen
  description: |-
    Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).

    This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).

    ## Authentication
    Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:

    ```
    curl
    -H "Content-Type: application/json" \
    -H "X-API-Key: YOUR_API_KEY" \
    ...
    ```
    ## Versioning
    Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: "vXX", where XX is the version number.

    For example:
    ```
    https://checkout-test.adyen.com/v37/payments
    ```

    ## Going live

    To access the live endpoints, you need an API key from your live Customer Area.

    The live endpoint URLs contain a prefix which is unique to your company account, for example:
    ```
    https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v37/payments
    ```

    Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.

    When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.

    ## Release notes
    Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=37) to find out what changed in this version!
  termsOfService: https://www.adyen.com/legal/terms-and-conditions
  title: Adyen Checkout API
  version: "37"
  x-apisguru-categories:
    - payment
  x-logo:
    url: https://adyen.com/.resources/adyen-website/themes/images/apple-icon-180x180.png
  x-origin:
    - format: openapi
      url: https://raw.githubusercontent.com/Adyen/adyen-openapi/main/json/CheckoutService-v37.json
      version: "3.1"
  x-preferred: false
  x-providerName: adyen.com
  x-publicVersion: true
  x-serviceName: CheckoutService
tags:
  - name: Payments
  - name: Donations
  - name: Payment links
  - name: Modifications
  - name: Recurring
  - name: Orders
  - name: Utility
  - name: Classic Checkout SDK
paths:
  /applePay/sessions:
    post:
      description: |-
        You need to use this endpoint if you have an API-only integration with Apple Pay which uses Adyen's Apple Pay certificate.

        The endpoint returns the Apple Pay session data which you need to complete the [Apple Pay session validation](https://docs.adyen.com/payment-methods/apple-pay/api-only?tab=adyen-certificate-validation_1#complete-apple-pay-session-validation).
      operationId: post-applePay-sessions
      parameters:
        - $ref: "#/components/parameters/Idempotency-Key"
      requestBody:
        content:
          application/json:
            examples:
              basic:
                $ref: "#/components/examples/post-applePay-sessions-basic"
            schema:
              $ref: "#/components/schemas/ApplePaySessionRequest"
      responses:
        "200":
          content:
            application/json:
              examples:
                basic:
                  $ref: "#/components/examples/post-applePay-sessions-basic-200"
              schema:
                $ref: "#/components/schemas/ApplePaySessionResponse"
          description: OK - the request has succeeded.
          headers:
            Idempotency-Key:
              $ref: "#/components/headers/Idempotency-Key"
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get an Apple Pay session
      tags:
        - Utility
      x-methodName: getApplePaySession
      x-sortIndex: 2
  /cancels:
    post:
      description: |-
        Cancels the authorisation on a payment that has not yet been [captured](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments/{paymentPspReference}/captures), and returns a unique reference for this request. You get the outcome of the request asynchronously, in a [**TECHNICAL_CANCEL** webhook](https://docs.adyen.com/online-payments/cancel#cancellation-webhook).

        If you want to cancel a payment using the [`pspReference`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__resParam_pspReference), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments/{paymentPspReference}/cancels) endpoint instead.

        If you want to cancel a payment but are not sure whether it has been captured, use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments/{paymentPspReference}/reversals) endpoint instead.

        For more information, refer to [Cancel](https://docs.adyen.com/online-payments/cancel).
      operationId: post-cancels
      parameters:
        - $ref: "#/components/parameters/Idempotency-Key"
      requestBody:
        content:
          application/json:
            examples:
              cancel-with-own-reference:
                $ref: "#/components/examples/post-cancels-cancel-with-own-reference"
            schema:
              $ref: "#/components/schemas/StandalonePaymentCancelRequest"
      responses:
        "201":
          content:
            application/json:
              examples:
                cancel-with-own-reference:
                  $ref: "#/components/examples/post-cancels-cancel-with-own-reference-201"
              schema:
                $ref: "#/components/schemas/StandalonePaymentCancelResponse"
          description: Created - the request has been fulfilled and has resulted in one or more new resources being created.
          headers:
            Idempotency-Key:
              $ref: "#/components/headers/Idempotency-Key"
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
          headers:
            Idempotency-Key:
              $ref: "#/components/headers/Idempotency-Key"
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Cancel an authorised payment
      tags:
        - Modifications
      x-methodName: cancelAuthorisedPayment
      x-sortIndex: 3
  /cardDetails:
    post:
      description: |+
        Send a request with at least the first 6 digits of the card number to get a response with an array of brands on the card. If you include [your supported brands](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/cardDetails__reqParam_supportedBrands) in the request, the response also tells you if you support each [brand that was identified](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/cardDetails__resParam_details).

        If you have an API-only integration and collect card data, use this endpoint to find out if the shopper's card is co-branded. For co-branded cards, you must let the shopper choose the brand to pay with  if you support both brands.

      operationId: post-cardDetails
      parameters:
        - $ref: "#/components/parameters/Idempotency-Key"
      requestBody:
        content:
          application/json:
            examples:
              basic:
                $ref: "#/components/examples/post-cardDetails-basic"
              supported-brands:
                $ref: "#/components/examples/post-cardDetails-supported-brands"
            schema:
              $ref: "#/components/schemas/CardDetailsRequest"
      responses:
        "200":
          content:
            application/json:
              examples:
                basic:
                  $ref: "#/components/examples/post-cardDetails-basic-200"
                supported-brands:
                  $ref: "#/components/examples/post-cardDetails-supported-brands-200"
              schema:
                $ref: "#/components/schemas/CardDetailsResponse"
          description: OK - the request has succeeded.
          headers:
            Idempotency-Key:
              $ref: "#/components/headers/Idempotency-Key"
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get the list of brands on the card
      tags:
        - Payments
      x-methodName: cardDetails
      x-sortIndex: 6
  /donations:
    post:
      description: |-
        Takes in the donation token generated by the `/payments` request and uses it to make the donation for the donation account specified in the request.

        For more information, see [Donations](https://docs.adyen.com/online-payments/donations).
      operationId: post-donations
      parameters:
        - $ref: "#/components/parameters/Idempotency-Key"
      requestBody:
        content:
          application/json:
            examples:
              donations:
                $ref: "#/components/examples/post-donations-donations"
              donations-with-token:
                $ref: "#/components/examples/post-donations-donations-with-token"
            schema:
              $ref: "#/components/schemas/DonationPaymentRequest"
      responses:
        "200":
          content:
            application/json:
              examples:
                donations:
                  $ref: "#/components/examples/post-donations-donations-200"
              schema:
                $ref: "#/components/schemas/DonationPaymentResponse"
          description: OK - the request has succeeded.
          headers:
            Idempotency-Key:
              $ref: "#/components/headers/Idempotency-Key"
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
          headers:
            Idempotency-Key:
              $ref: "#/components/headers/Idempotency-Key"
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Start a transaction for donations
      tags:
        - Donations
      x-methodName: donations
      x-sortIndex: 2
  /orders:
    post:
      description: Creates an order to be used for partial payments. Make a POST `/orders` call before making a `/payments` call when processing payments with different payment methods.
      operationId: post-orders
      parameters:
        - $ref: "#/components/parameters/Idempotency-Key"
      requestBody:
        content:
          application/json:
            examples:
              basic:
                $ref: "#/components/examples/post-orders-basic"
            schema:
              $ref: "#/components/schemas/CreateOrderRequest"
      responses:
        "200":
          content:
            application/json:
              examples:
                basic:
                  $ref: "#/components/examples/post-orders-basic-200"
              schema:
                $ref: "#/components/schemas/CreateOrderResponse"
          description: OK - the request has succeeded.
          headers:
            Idempotency-Key:
              $ref: "#/components/headers/Idempotency-Key"
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
          headers:
            Idempotency-Key:
              $ref: "#/components/headers/Idempotency-Key"
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Create an order
      tags:
        - Orders
      x-methodName: orders
      x-sortIndex: 2
  /orders/cancel:
    post:
      description: Cancels an order. Cancellation of an order results in an automatic rollback of all payments made in the order, either by canceling or refunding the payment, depending on the type of payment method.
      operationId: post-orders-cancel
      parameters:
        - $ref: "#/components/parameters/Idempotency-Key"
      requestBody:
        content:
          application/json:
            examples:
              basic:
                $ref: "#/components/examples/post-orders-cancel-basic"
            schema:
              $ref: "#/components/schemas/CancelOrderRequest"
      responses:
        "200":
          content:
            application/json:
              examples:
                basic:
                  $ref: "#/components/examples/post-orders-cancel-basic-200"
              schema:
                $ref: "#/components/schemas/CancelOrderResponse"
          description: OK - the request has succeeded.
          headers:
            Idempotency-Key:
              $ref: "#/components/headers/Idempotency-Key"
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
          headers:
            Idempotency-Key:
              $ref: "#/components/headers/Idempotency-Key"
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Cancel an order
      tags:
        - Orders
      x-methodName: cancelOrder
      x-sortIndex: 3
  /originKeys:
    post:
      description: |-
        This operation takes the origin domains and returns a JSON object containing the corresponding origin keys for the domains. 
        > If you're still using origin key for your Web Drop-in or Components integration, we recommend [switching to client key](https://docs.adyen.com/development-resources/client-side-authentication/migrate-from-origin-key-to-client-key). This allows you to use a single key for all origins, add or remove origins without generating a new key, and detect the card type from the number entered in your payment form. 
      operationId: post-originKeys
      parameters:
        - $ref: "#/components/parameters/Idempotency-Key"
      requestBody:
        content:
          application/json:
            examples:
              basic:
                $ref: "#/components/examples/post-originKeys-basic"
            schema:
              $ref: "#/components/schemas/UtilityRequest"
      responses:
        "200":
          content:
            application/json:
              examples:
                basic:
                  $ref: "#/components/examples/post-originKeys-basic-200"
              schema:
                $ref: "#/components/schemas/UtilityResponse"
          description: OK - the request has succeeded.
          headers:
            Idempotency-Key:
              $ref: "#/components/headers/Idempotency-Key"
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
          headers:
            Idempotency-Key:
              $ref: "#/components/headers/Idempotency-Key"
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Create originKey values for domains
      tags:
        - Utility
      x-methodName: originKeys
      x-sortIndex: 1
  /paymentLinks:
    post:
      description: |-
        Creates a payment link to our hosted payment form where shoppers can pay. The list of payment methods presented to the shopper depends on the `currency` and `country` parameters sent in the request.

        For more information, refer to [Pay by Link documentation](https://docs.adyen.com/online-payments/pay-by-link#create-payment-links-through-api).
      operationId: post-paymentLinks
      parameters:
        - $ref: "#/components/parameters/Idempotency-Key"
      requestBody:
        content:
          application/json:
            examples:
              basic:
                $ref: "#/components/examples/post-paymentLinks-basic"
            schema:
              $ref: "#/components/schemas/PaymentLinkRequest"
      responses:
        "201":
          content:
            application/json:
              examples:
                basic:
                  $ref: "#/components/examples/post-paymentLinks-basic-201"
              schema:
                $ref: "#/components/schemas/PaymentLinkResponse"
          description: Created - the request has succeeded.
          headers:
            Idempotency-Key:
              $ref: "#/components/headers/Idempotency-Key"
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
          headers:
            Idempotency-Key:
              $ref: "#/components/headers/Idempotency-Key"
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Create a payment link
      tags:
        - Payment links
      x-methodName: paymentLinks
      x-sortIndex: 1
  /paymentLinks/{linkId}:
    get:
      description: Retrieves the payment link details using the payment link `id`.
      operationId: get-paymentLinks-linkId
      parameters:
        - description: Unique identifier of the payment link.
          in: path
          name: linkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                basic:
                  $ref: "#/components/examples/get-paymentLinks-linkId-basic-200"
              schema:
                $ref: "#/components/schemas/PaymentLinkResponse"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a payment link
      tags:
        - Payment links
      x-methodName: getPaymentLink
      x-sortIndex: 2
    patch:
      description: Updates the status of a payment link. Use this endpoint to [force the expiry of a payment link](https://docs.adyen.com/online-payments/pay-by-link#update-payment-link-status).
      operationId: patch-paymentLinks-linkId
      parameters:
        - description: Unique identifier of the payment link.
          in: path
          name: linkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              basic:
                $ref: "#/components/examples/patch-paymentLinks-linkId-basic"
            schema:
              $ref: "#/components/schemas/UpdatePaymentLinkRequest"
      responses:
        "200":
          content:
            application/json:
              examples:
                basic:
                  $ref: "#/components/examples/patch-paymentLinks-linkId-basic-200"
              schema:
                $ref: "#/components/schemas/PaymentLinkResponse"
          description: OK - the request has succeeded.
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Update the status of a payment link
      tags:
        - Payment links
      x-methodName: updatePaymentLink
      x-sortIndex: 3
  /paymentMethods:
    post:
      description: |-
        Queries the available payment methods for a transaction based on the transaction context (like amount, country, and currency). Besides giving back a list of the available payment methods, the response also returns which input details you need to collect from the shopper (to be submitted to `/payments`).

        Although we highly recommend using this endpoint to ensure you are always offering the most up-to-date list of payment methods, its usage is optional. You can, for example, also cache the `/paymentMethods` response and update it once a week.
      operationId: post-paymentMethods
      parameters:
        - $ref: "#/components/parameters/Idempotency-Key"
      requestBody:
        content:
          application/json:
            examples:
              basic:
                $ref: "#/components/examples/post-paymentMethods-basic"
              filtered:
                $ref: "#/components/examples/post-paymentMethods-filtered"
              include-oneclick:
                $ref: "#/components/examples/post-paymentMethods-include-oneclick"
            schema:
              $ref: "#/components/schemas/PaymentMethodsRequest"
      responses:
        "200":
          content:
            application/json:
              examples:
                basic:
                  $ref: "#/components/examples/post-paymentMethods-basic-200"
                filtered:
                  $ref: "#/components/examples/post-paymentMethods-filtered-200"
                include-oneclick:
                  $ref: "#/components/examples/post-paymentMethods-include-oneclick-200"
              schema:
                $ref: "#/components/schemas/PaymentMethodsResponse"
          description: OK - the request has succeeded.
          headers:
            Idempotency-Key:
              $ref: "#/components/headers/Idempotency-Key"
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
          headers:
            Idempotency-Key:
              $ref: "#/components/headers/Idempotency-Key"
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get a list of available payment methods
      tags:
        - Payments
      x-methodName: paymentMethods
      x-sortIndex: 2
  /paymentMethods/balance:
    post:
      description: Retrieves the balance remaining on a shopper's gift card. To check a gift card's balance, make a POST `/paymentMethods/balance` call and include the gift card's details inside a `paymentMethod` object.
      operationId: post-paymentMethods-balance
      parameters:
        - $ref: "#/components/parameters/Idempotency-Key"
      requestBody:
        content:
          application/json:
            examples:
              basic:
                $ref: "#/components/examples/post-paymentMethods-balance-basic"
              not-enough:
                $ref: "#/components/examples/post-paymentMethods-balance-not-enough"
            schema:
              $ref: "#/components/schemas/BalanceCheckRequest"
      responses:
        "200":
          content:
            application/json:
              examples:
                basic:
                  $ref: "#/components/examples/post-paymentMethods-balance-basic-200"
                not-enough:
                  $ref: "#/components/examples/post-paymentMethods-balance-not-enough-200"
              schema:
                $ref: "#/components/schemas/BalanceCheckResponse"
          description: OK - the request has succeeded.
          headers:
            Idempotency-Key:
              $ref: "#/components/headers/Idempotency-Key"
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
          headers:
            Idempotency-Key:
              $ref: "#/components/headers/Idempotency-Key"
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Get the balance of a gift card
      tags:
        - Orders
      x-methodName: getBalanceOfGiftCard
      x-sortIndex: 1
  /paymentSession:
    post:
      deprecated: true
      description: |-
        Provides the data object that can be used to start the Checkout SDK. To set up the payment, pass its amount, currency, and other required parameters. We use this to optimise the payment flow and perform better risk assessment of the transaction.

        For more information, refer to [How it works](https://docs.adyen.com/online-payments#howitworks).
      operationId: post-paymentSession
      parameters:
        - $ref: "#/components/parameters/Idempotency-Key"
      requestBody:
        content:
          application/json:
            examples:
              android:
                $ref: "#/components/examples/post-paymentSession-android"
              ios:
                $ref: "#/components/examples/post-paymentSession-ios"
              split:
                $ref: "#/components/examples/post-paymentSession-split"
              web:
                $ref: "#/components/examples/post-paymentSession-web"
            schema:
              $ref: "#/components/schemas/PaymentSetupRequest"
      responses:
        "200":
          content:
            application/json:
              examples:
                web:
                  $ref: "#/components/examples/post-paymentSession-web-200"
              schema:
                $ref: "#/components/schemas/PaymentSetupResponse"
          description: OK - the request has succeeded.
          headers:
            Idempotency-Key:
              $ref: "#/components/headers/Idempotency-Key"
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
          headers:
            Idempotency-Key:
              $ref: "#/components/headers/Idempotency-Key"
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Create a payment session
      tags:
        - Classic Checkout SDK
      x-deprecatedInVersion: "37"
      x-methodName: paymentSession
      x-sortIndex: 1
  /payments:
    post:
      description: |-
        Sends payment parameters (like amount, country, and currency) together with other required input details collected from the shopper. To know more about required parameters for specific payment methods, refer to our [payment method guides](https://docs.adyen.com/payment-methods). 
        The response depends on the [payment flow](https://docs.adyen.com/payment-methods#payment-flow):
        * For a direct flow, the response includes a `pspReference` and a `resultCode` with the payment result, for example **Authorised** or **Refused**. 
        * For a redirect or additional action, the response contains an `action` object. 
      operationId: post-payments
      parameters:
        - $ref: "#/components/parameters/Idempotency-Key"
      requestBody:
        content:
          application/json:
            examples:
              applepay:
                $ref: "#/components/examples/post-payments-applepay"
              card-3d-secure-direct:
                $ref: "#/components/examples/post-payments-card-3d-secure-direct"
              card-3d-secure-securedfields:
                $ref: "#/components/examples/post-payments-card-3d-secure-securedfields"
              card-direct:
                $ref: "#/components/examples/post-payments-card-direct"
              card-securedfields:
                $ref: "#/components/examples/post-payments-card-securedfields"
              oneclick-direct:
                $ref: "#/components/examples/post-payments-oneclick-direct"
              oneclick-securedfields:
                $ref: "#/components/examples/post-payments-oneclick-securedfields"
              split-balanceplatform:
                $ref: "#/components/examples/post-payments-split-balanceplatform"
              split-classic:
                $ref: "#/components/examples/post-payments-split-classic"
            schema:
              $ref: "#/components/schemas/PaymentRequest"
      responses:
        "200":
          content:
            application/json:
              examples:
                card-3d-secure-direct:
                  $ref: "#/components/examples/post-payments-card-3d-secure-direct-200"
                card-3d-secure-securedfields:
                  $ref: "#/components/examples/post-payments-card-3d-secure-securedfields-200"
                card-direct:
                  $ref: "#/components/examples/post-payments-card-direct-200"
                card-securedfields:
                  $ref: "#/components/examples/post-payments-card-securedfields-200"
                split-balanceplatform:
                  $ref: "#/components/examples/post-payments-split-balanceplatform-200"
              schema:
                $ref: "#/components/schemas/PaymentResponse"
          description: OK - the request has succeeded.
          headers:
            Idempotency-Key:
              $ref: "#/components/headers/Idempotency-Key"
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
          headers:
            Idempotency-Key:
              $ref: "#/components/headers/Idempotency-Key"
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Start a transaction
      tags:
        - Payments
      x-methodName: payments
      x-sortIndex: 3
  /payments/details:
    post:
      description: |+
        Submits details for a payment created using `/payments`. This step is only needed when no final state has been reached on the `/payments` request, for example when the shopper was redirected to another page to complete the payment.

      operationId: post-payments-details
      parameters:
        - $ref: "#/components/parameters/Idempotency-Key"
      requestBody:
        content:
          application/json:
            examples:
              3d-secure:
                $ref: "#/components/examples/post-payments-details-3d-secure"
            schema:
              $ref: "#/components/schemas/PaymentDetailsRequest"
      responses:
        "200":
          content:
            application/json:
              examples:
                3d-secure:
                  $ref: "#/components/examples/post-payments-details-3d-secure-200"
              schema:
                $ref: "#/components/schemas/PaymentDetailsResponse"
          description: OK - the request has succeeded.
          headers:
            Idempotency-Key:
              $ref: "#/components/headers/Idempotency-Key"
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
          headers:
            Idempotency-Key:
              $ref: "#/components/headers/Idempotency-Key"
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Submit details for a payment
      tags:
        - Payments
      x-methodName: paymentsDetails
      x-sortIndex: 4
  /payments/result:
    post:
      deprecated: true
      description: |-
        Verifies the payment result using the payload returned from the Checkout SDK.

        For more information, refer to [How it works](https://docs.adyen.com/online-payments#howitworks).
      operationId: post-payments-result
      parameters:
        - $ref: "#/components/parameters/Idempotency-Key"
      requestBody:
        content:
          application/json:
            examples:
              basic:
                $ref: "#/components/examples/post-payments-result-basic"
            schema:
              $ref: "#/components/schemas/PaymentVerificationRequest"
      responses:
        "200":
          content:
            application/json:
              examples:
                basic:
                  $ref: "#/components/examples/post-payments-result-basic-200"
              schema:
                $ref: "#/components/schemas/PaymentVerificationResponse"
          description: OK - the request has succeeded.
          headers:
            Idempotency-Key:
              $ref: "#/components/headers/Idempotency-Key"
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
          headers:
            Idempotency-Key:
              $ref: "#/components/headers/Idempotency-Key"
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Verify a payment result
      tags:
        - Classic Checkout SDK
      x-deprecatedInVersion: "37"
      x-methodName: verifyPaymentResult
      x-sortIndex: 2
  /payments/{paymentPspReference}/amountUpdates:
    post:
      description: |-
        Increases or decreases the authorised payment amount and returns a unique reference for this request. You get the outcome of the request asynchronously, in an [**AUTHORISATION_ADJUSTMENT** webhook](https://docs.adyen.com/development-resources/webhooks/understand-notifications#event-codes).

        You can only update authorised amounts that have not yet been [captured](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments/{paymentPspReference}/captures).

        The amount you specify in the request is the updated amount, which is larger or smaller than the initial authorised amount.

        For more information, refer to [Authorisation adjustment](https://docs.adyen.com/online-payments/adjust-authorisation#use-cases).
      operationId: post-payments-paymentPspReference-amountUpdates
      parameters:
        - description: The [`pspReference`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__resParam_pspReference) of the payment.
          in: path
          name: paymentPspReference
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/Idempotency-Key"
      requestBody:
        content:
          application/json:
            examples:
              amount-update:
                $ref: "#/components/examples/post-payments-paymentPspReference-amountUpdates-amount-update"
            schema:
              $ref: "#/components/schemas/PaymentAmountUpdateRequest"
      responses:
        "201":
          content:
            application/json:
              examples:
                amount-update:
                  $ref: "#/components/examples/post-payments-paymentPspReference-amountUpdates-amount-update-201"
              schema:
                $ref: "#/components/schemas/PaymentAmountUpdateResponse"
          description: Created - the request has been fulfilled and has resulted in one or more new resources being created.
          headers:
            Idempotency-Key:
              $ref: "#/components/headers/Idempotency-Key"
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
          headers:
            Idempotency-Key:
              $ref: "#/components/headers/Idempotency-Key"
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Update an authorised amount
      tags:
        - Modifications
      x-methodName: updateAuthorisedAmount
      x-sortIndex: 6
  /payments/{paymentPspReference}/cancels:
    post:
      description: |-
        Cancels the authorisation on a payment that has not yet been [captured](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments/paymentPspReference/captures), and returns a unique reference for this request. You get the outcome of the request asynchronously, in a [**CANCELLATION** webhook](https://docs.adyen.com/online-payments/cancel#cancellation-webhook).

        If you want to cancel a payment but don't have the [`pspReference`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__resParam_pspReference), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/cancels) endpoint instead.

        If you want to cancel a payment but are not sure whether it has been captured, use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments/{paymentPspReference}/reversals) endpoint instead.

        For more information, refer to [Cancel](https://docs.adyen.com/online-payments/cancel).
      operationId: post-payments-paymentPspReference-cancels
      parameters:
        - description: "The [`pspReference`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__resParam_pspReference) of the payment that you want to cancel. "
          in: path
          name: paymentPspReference
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/Idempotency-Key"
      requestBody:
        content:
          application/json:
            examples:
              cancel-with-psp-reference:
                $ref: "#/components/examples/post-payments-paymentPspReference-cancels-cancel-with-psp-reference"
            schema:
              $ref: "#/components/schemas/PaymentCancelRequest"
      responses:
        "201":
          content:
            application/json:
              examples:
                cancel-with-psp-reference:
                  $ref: "#/components/examples/post-payments-paymentPspReference-cancels-cancel-with-psp-reference-201"
              schema:
                $ref: "#/components/schemas/PaymentCancelResponse"
          description: Created - the request has been fulfilled and has resulted in one or more new resources being created.
          headers:
            Idempotency-Key:
              $ref: "#/components/headers/Idempotency-Key"
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
          headers:
            Idempotency-Key:
              $ref: "#/components/headers/Idempotency-Key"
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Cancel an authorised payment
      tags:
        - Modifications
      x-methodName: cancelAuthorisedPaymentByPspReference
      x-sortIndex: 2
  /payments/{paymentPspReference}/captures:
    post:
      description: |2-
         Captures an authorised payment and returns a unique reference for this request. You get the outcome of the request asynchronously, in a [**CAPTURE** webhook](https://docs.adyen.com/online-payments/capture#capture-notification).

        You can capture either the full authorised amount or a part of the authorised amount. By default, any unclaimed amount after a partial capture gets cancelled. This does not apply if you enabled multiple partial captures on your account and the payment method supports multiple partial captures. 

        [Automatic capture](https://docs.adyen.com/online-payments/capture#automatic-capture) is the default setting for most payment methods. In these cases, you don't need to make capture requests. However, making capture requests for payments that are captured automatically does not result in double charges.

        For more information, refer to [Capture](https://docs.adyen.com/online-payments/capture).
      operationId: post-payments-paymentPspReference-captures
      parameters:
        - description: The [`pspReference`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__resParam_pspReference) of the payment that you want to capture.
          in: path
          name: paymentPspReference
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/Idempotency-Key"
      requestBody:
        content:
          application/json:
            examples:
              capture:
                $ref: "#/components/examples/post-payments-paymentPspReference-captures-capture"
            schema:
              $ref: "#/components/schemas/PaymentCaptureRequest"
      responses:
        "201":
          content:
            application/json:
              examples:
                capture:
                  $ref: "#/components/examples/post-payments-paymentPspReference-captures-capture-201"
              schema:
                $ref: "#/components/schemas/PaymentCaptureResponse"
          description: Created - the request has been fulfilled and has resulted in one or more new resources being created.
          headers:
            Idempotency-Key:
              $ref: "#/components/headers/Idempotency-Key"
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
          headers:
            Idempotency-Key:
              $ref: "#/components/headers/Idempotency-Key"
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Capture an authorised payment
      tags:
        - Modifications
      x-methodName: captureAuthorisedPayment
      x-sortIndex: 1
  /payments/{paymentPspReference}/refunds:
    post:
      description: |-
        Refunds a payment that has been [captured](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments/{paymentPspReference}/captures), and returns a unique reference for this request. You get the outcome of the request asynchronously, in a [**REFUND** webhook](https://docs.adyen.com/online-payments/refund#refund-webhook).

        You can refund either the full captured amount or a part of the captured amount. You can also perform multiple partial refunds, as long as their sum doesn't exceed the captured amount.

        > Some payment methods do not support partial refunds. To learn if a payment method supports partial refunds, refer to the payment method page such as [cards](https://docs.adyen.com/payment-methods/cards#supported-cards), [iDEAL](https://docs.adyen.com/payment-methods/ideal), or [Klarna](https://docs.adyen.com/payment-methods/klarna). 

        If you want to refund a payment but are not sure whether it has been captured, use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments/{paymentPspReference}/reversals) endpoint instead.

        For more information, refer to [Refund](https://docs.adyen.com/online-payments/refund).
      operationId: post-payments-paymentPspReference-refunds
      parameters:
        - description: The [`pspReference`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__resParam_pspReference) of the payment that you want to refund.
          in: path
          name: paymentPspReference
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/Idempotency-Key"
      requestBody:
        content:
          application/json:
            examples:
              refund:
                $ref: "#/components/examples/post-payments-paymentPspReference-refunds-refund"
            schema:
              $ref: "#/components/schemas/PaymentRefundRequest"
      responses:
        "201":
          content:
            application/json:
              examples:
                refund:
                  $ref: "#/components/examples/post-payments-paymentPspReference-refunds-refund-201"
              schema:
                $ref: "#/components/schemas/PaymentRefundResponse"
          description: Created - the request has been fulfilled and has resulted in one or more new resources being created.
          headers:
            Idempotency-Key:
              $ref: "#/components/headers/Idempotency-Key"
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
          headers:
            Idempotency-Key:
              $ref: "#/components/headers/Idempotency-Key"
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Refund a captured payment
      tags:
        - Modifications
      x-methodName: refundCapturedPayment
      x-sortIndex: 4
  /payments/{paymentPspReference}/reversals:
    post:
      description: |-
        [Refunds](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments/{paymentPspReference}/refunds) a payment if it has already been captured, and [cancels](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments/{paymentPspReference}/cancels) a payment if it has not yet been captured. Returns a unique reference for this request. You get the outcome of the request asynchronously, in a [**CANCEL_OR_REFUND** webhook](https://docs.adyen.com/online-payments/reverse#cancel-or-refund-webhook).

        The reversed amount is always the full payment amount.
        > Do not use this request for payments that involve multiple partial captures.

        For more information, refer to [Reversal](https://docs.adyen.com/online-payments/reversal).
      operationId: post-payments-paymentPspReference-reversals
      parameters:
        - description: "The [`pspReference`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__resParam_pspReference) of the payment that you want to reverse. "
          in: path
          name: paymentPspReference
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/Idempotency-Key"
      requestBody:
        content:
          application/json:
            examples:
              reversal:
                $ref: "#/components/examples/post-payments-paymentPspReference-reversals-reversal"
            schema:
              $ref: "#/components/schemas/PaymentReversalRequest"
      responses:
        "201":
          content:
            application/json:
              examples:
                reversal:
                  $ref: "#/components/examples/post-payments-paymentPspReference-reversals-reversal-201"
              schema:
                $ref: "#/components/schemas/PaymentReversalResponse"
          description: Created - the request has been fulfilled and has resulted in one or more new resources being created.
          headers:
            Idempotency-Key:
              $ref: "#/components/headers/Idempotency-Key"
        "400":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-400"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Bad Request - a problem reading or understanding the request.
        "401":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-401"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unauthorized - authentication required.
        "403":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-403"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Forbidden - insufficient permissions to process the request.
        "422":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-422"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Unprocessable Entity - a request validation error.
          headers:
            Idempotency-Key:
              $ref: "#/components/headers/Idempotency-Key"
        "500":
          content:
            application/json:
              examples:
                generic:
                  $ref: "#/components/examples/generic-500"
              schema:
                $ref: "#/components/schemas/ServiceError"
          description: Internal Server Error - the server could not process the request.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []
      summary: Refund or cancel a payment
      tags:
        - Modifications
      x-methodName: refundOrCancelPayment
      x-sortIndex: 5
components:
  examples:
    generic-400:
      summary: Response code 400. Bad request.
      value:
        errorCode: "702"
        errorType: validation
        message: 'Unexpected input: ", expected: }'
        status: 400
    generic-401:
      summary: Response code 401. Unauthorized.
      value:
        errorCode: "000"
        errorType: security
        message: HTTP Status Response - Unauthorized
        status: 401
    generic-403:
      summary: Response code 403. Forbidden.
      value:
        errorCode: "901"
        errorType: security
        message: Invalid Merchant Account
        status: 403
    generic-422:
      summary: Response code 422. Unprocessable entity.
      value:
        errorCode: 14_030
        errorType: validation
        message: Return URL is missing.
        status: 422
    generic-500:
      summary: Response code 500. Internal server error.
      value:
        errorCode: "905"
        errorType: configuration
        message: Payment details are not supported
        pspReference: "8516091485743033"
        status: 500
    get-paymentLinks-linkId-basic-200:
      summary: Example response for request 'basic'
      value:
        amount:
          currency: EUR
          value: 8700
        countryCode: NL
        expiresAt: 2021-04-08T14:06:39Z
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        reference: shopper-reference-ekvL83
        shopperLocale: hu-HU
        shopperReference: shopper-reference-LZfdWZ
        status: active
        url: https://test.adyen.link/PL61C53A8B97E6915A
    patch-paymentLinks-linkId-basic:
      summary: Update the status of a payment link
      value:
        status: expired
    patch-paymentLinks-linkId-basic-200:
      summary: Example response for request 'basic'
      value:
        amount:
          currency: EUR
          value: 8700
        countryCode: NL
        expiresAt: 2021-04-08T14:06:39Z
        id: PL61C53A8B97E6915A
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        reference: shopper-reference-ekvL83
        shopperLocale: hu-HU
        shopperReference: shopper-reference-LZfdWZ
        status: expired
        url: https://test.adyen.link/PL61C53A8B97E6915A
    post-applePay-sessions-basic:
      summary: Get payment session for Apple Pay
      value:
        displayName: YOUR_MERCHANT_NAME
        domainName: YOUR_DOMAIN_NAME
        merchantIdentifier: YOUR_MERCHANT_ID
    post-applePay-sessions-basic-200:
      summary: Payment session data for Apple Pay
      value:
        data: eyJ2Z...
    post-cancels-cancel-with-own-reference:
      description: Example cancel request with your own reference
      summary: Cancel a payment using your own reference
      value:
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        paymentReference: YOUR_UNIQUE_REFERENCE_FOR_THE_PAYMENT
        reference: YOUR_UNIQUE_REFERENCE_FOR_THE_CANCELLATION
    post-cancels-cancel-with-own-reference-201:
      description: Example response when a payment cancellation was requested
      summary: Payment cancellation requested
      value:
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        paymentReference: YOUR_UNIQUE_REFERENCE_FOR_THE_PAYMENT
        pspReference: 993617894906488A
        reference: YOUR_UNIQUE_REFERENCE_FOR_THE_CANCELLATION
        status: received
    post-cardDetails-basic:
      description: Example request for getting a list of brands on a card using the first 6 digits of the card number.
      summary: Get a list of brands on a card
      value:
        cardNumber: "411111"
        merchantAccount: YOUR_MERCHANT_ACCOUNT
    post-cardDetails-basic-200:
      description: Example response when the card is co-branded.
      summary: List of brands on the card
      value:
        brands:
          - supported: true
            type: visa
          - supported: true
            type: cartebancaire
    post-cardDetails-supported-brands:
      description: Example request for getting a list of brands on a card using the first 6 digits of the card number and including the card brands you support.
      summary: Get a list of brands on a card specifying your supported card brands
      value:
        cardNumber: "411111"
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        supportedBrands:
          - visa
          - mc
          - amex
    post-cardDetails-supported-brands-200:
      description: Example response when the card is co-branded, and you only support Visa.
      summary: List of brands on the card when you specify your supported card brands
      value:
        brands:
          - supported: true
            type: visa
          - supported: false
            type: cartebancaire
    post-donations-donations:
      summary: Start a donation transaction
      value:
        amount:
          currency: EUR
          value: 1000
        donationAccount: CHARITY_ACCOUNT
        donationOriginalPspReference: 991559660454807J
        donationToken: YOUR_DONATION_TOKEN
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        paymentMethod:
          type: scheme
        reference: YOUR_DONATION_REFERENCE
        returnUrl: https://your-company.com/...
        shopperInteraction: ContAuth
    post-donations-donations-200:
      summary: Example response
      value:
        amount:
          currency: EUR
          value: 1000
        donationAccount: CHARITY_ACCOUNT
        id: UNIQUE_RESOURCE_ID
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        payment:
          merchantReference: YOUR_DONATION_REFERENCE
          pspReference: "8535762347980628"
          resultCode: Authorised
        reference: YOUR_DONATION_REFERENCE
        status: completed
    post-donations-donations-with-token:
      summary: Start a donation transaction with a token
      value:
        amount:
          currency: EUR
          value: 1000
        donationAccount: CHARITY_ACCOUNT
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        paymentMethod:
          recurringDetailReference: "7219687191761347"
          type: scheme
        recurringProcessingModel: CardOnFile
        reference: YOUR_DONATION_REFERENCE
        returnUrl: https://your-company.com/...
        shopperInteraction: ContAuth
        shopperReference: YOUR_SHOPPER_REFERENCE
    post-orders-basic:
      summary: Create an order
      value:
        amount:
          currency: EUR
          value: 2500
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        reference: YOUR_ORDER_REFERENCE
    post-orders-basic-200:
      summary: Example response for request 'basic'
      value:
        expiresAt: 2021-04-09T14:16:46Z
        orderData: Ab02b4c0!BQABAgCxXvknCldOcRElkxY8Za7iyym4Wv8aDzyNwmj/3nh4G6YtwnUIJHaK62NlN4oIsACdkn1FEjBwKlheG40jvXcYGBk4KFV5WvOhTVCpv/KXnkrI7xQv/u2lE7U4wA+HPB6K4Zj2L8xO/ogZi+zGZqFs5m16jmkH7ku6FzXygXLNuUCuOlmlXSZhdkHHTNVQSq1MELDK9OL74y532ETRPTCNxx8WlEiZB+LDqYrPvH9GgigtD5kw8Do45jfFfG72kWBEgfYqp4mbUmBB9ebXFYZKfF0qvW1x7A2Y9+/MFlTIdXfKW484bJeDBCTTrmKGXIj+U4r5imr5fXTyNLcrxyUqwrb9jg+5B4qg1XB6Cgj5UPlSI4O62I7v0s5TTj69dzLwUQRxSQbwLrZVGYavXzeVKI54BVLRV3d/+BbPvTqnTo34UhfZbPlOx9F2eyaS0ZXdOKnHw89uGUgxUpLsMqnbRysi/pxpZaulel+0mExb68wVxb/7Teob5eRG4gp7cfZVZs6tLXOYWL+W0TqIlsa3hWsfM0LeaovzkoDtW/pK5JABXwMtLig9tsxoEh9ONYtIzkXC21LZ8ebiuSIMaPizjF8yca+QxrCZalQsu6uKnBz/mm8nnsflaGU2QS5zcoxk1RudL1Bl36LM9UZGPpFEYWiYA4sUsnNLw7peJjWCGhDepnwMv4TlgsEtoDtz1T54AEp7ImtleSI6IkFGMEFBQTEwM0NBNTM3RUFFRDg3QzI0REQ1MzkwOUI4MEE3OEE5MjNFMzgyM0Q2OERBQ0M5NEI5RkY4MzA1REMifRslOdmfgUHTXl66WPD9xoW2whIeRx/jR++2MqNE16x6zQy+KtDN8/h60crZwmqkjVTQYqQlsYSYDHSIyb4wnnay16/5il1yS7vN3UCLaTXjYBIAyyx6Wr9j4P3CI/etB+PpviHoESC4mV6ZN4whMDQyziQ8s230GtboXbh42qND7rk9phySBogowQlXrtF+l2n2F46nyif0owEgik5fGARfvjZtY2w23s30KMLNwU4gWSvX4H6RMVS8TfZH2fKfNrwB3tZUXwYkELs5ntaHysswq5Mn5aq2BKAMHu/Rh/wureMSI73Qi0avjrzWCwzt3JH4wnzErMnOZwSdgA==
        pspReference: "8616178914061985"
        reference: shopper-reference-ekvL83
        remainingAmount:
          currency: EUR
          value: 2500
        resultCode: Success
    post-orders-cancel-basic:
      summary: Cancel an order
      value:
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        order:
          orderData: 823fh892f8f18f4...148f13f9f3f
          pspReference: "8815517812932012"
    post-orders-cancel-basic-200:
      summary: Example response for request 'basic'
      value:
        pspReference: "8816178914079738"
        resultCode: Received
    post-originKeys-basic:
      summary: Get origin keys
      value:
        originDomains:
          - https://www.your-domain1.com
          - https://www.your-domain2.com
          - https://www.your-domain3.com
    post-originKeys-basic-200:
      summary: Example response for request 'basic'
      value:
        originKeys:
          https://www.your-domain1.com: pub.v2.8116178901076090.aHR0cHM6Ly93d3cueW91ci1kb21haW4xLmNvbQ.pvbYlrXz0ICP4kwMJXDGDLVMqALhwXr1MSRjT-fkhvw
          https://www.your-domain2.com: pub.v2.8116178901076090.aHR0cHM6Ly93d3cueW91ci1kb21haW4yLmNvbQ.LdN9kvJ35fYFFiBSJA4idMnwwxJ5_yXpeNS__Ap5wkg
          https://www.your-domain3.com: pub.v2.8116178901076090.aHR0cHM6Ly93d3cueW91ci1kb21haW4zLmNvbQ.FrTpVz7_RzAywKasM0kXCRoMfoMkKIKaxjFymRGORIc
    post-paymentLinks-basic:
      summary: Create a payment link
      value:
        amount:
          currency: BRL
          value: 1250
        billingAddress:
          city: São Paulo
          country: BR
          houseNumberOrName: "999"
          postalCode: "59000060"
          stateOrProvince: SP
          street: Roque Petroni Jr
        countryCode: BR
        deliveryAddress:
          city: São Paulo
          country: BR
          houseNumberOrName: "999"
          postalCode: "59000060"
          stateOrProvince: SP
          street: Roque Petroni Jr
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        reference: YOUR_ORDER_NUMBER
        shopperEmail: test@email.com
        shopperLocale: pt-BR
        shopperReference: YOUR_SHOPPER_REFERENCE
    post-paymentLinks-basic-201:
      summary: Payment link created
      value:
        amount:
          currency: BRL
          value: 1250
        billingAddress:
          city: São Paulo
          country: BR
          houseNumberOrName: "999"
          postalCode: "59000060"
          stateOrProvince: SP
          street: Roque Petroni Jr
        countryCode: BR
        deliveryAddress:
          city: São Paulo
          country: BR
          houseNumberOrName: "999"
          postalCode: "59000060"
          stateOrProvince: SP
          street: Roque Petroni Jr
        expiresAt: 2022-10-28T09:16:22Z
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        reference: YOUR_ORDER_NUMBER
        reusable: false
        shopperEmail: test@email.com
        shopperLocale: pt-BR
        shopperReference: YOUR_SHOPPER_REFERENCE
        status: active
        url: https://test.adyen.link/PLE83C39B0A0DE0C1E
    post-paymentMethods-balance-basic:
      summary: Get gift card balance specifying amount of 10 EUR
      value:
        amount:
          currency: EUR
          value: 1000
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        paymentMethod:
          cvc: "737"
          number: "4126491073027401"
          type: givex
    post-paymentMethods-balance-basic-200:
      summary: Gift card balance greater than amount specified in request
      value:
        balance:
          currency: EUR
          value: 5000
        pspReference: KHQC5N7G84BLNK43
        resultCode: Success
    post-paymentMethods-balance-not-enough:
      summary: Get gift card balance specifying amount of 100 EUR
      value:
        amount:
          currency: EUR
          value: 10000
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        paymentMethod:
          cvc: "737"
          number: "4126491073027401"
          type: givex
    post-paymentMethods-balance-not-enough-200:
      summary: Gift card balance lower than amount specified in request
      value:
        balance:
          currency: EUR
          value: 5000
        pspReference: FKSPNCQ8HXSKGK82
        resultCode: NotEnoughBalance
    post-paymentMethods-basic:
      summary: Get available payment methods
      value:
        merchantAccount: YOUR_MERCHANT_ACCOUNT
    post-paymentMethods-basic-200:
      summary: Example response for request 'basic'
      value:
        paymentMethods:
          - details:
              - details:
                  - key: ownerName
                    type: text
                  - key: bankLocationId
                    type: text
                  - key: bankAccountNumber
                    type: text
                key: bankAccount
                type: bankAccount
            name: ACH Direct Debit
            type: ach
          - name: Adyen Voucher
            type: adyen_test_voucher
          - details:
              - details:
                  - key: firstName
                    type: text
                  - key: lastName
                    type: text
                  - items:
                      - id: M
                        name: male
                      - id: F
                        name: female
                    key: gender
                    type: radio
                  - key: dateOfBirth
                    type: date
                  - key: telephoneNumber
                    type: tel
                  - key: shopperEmail
                    type: emailAddress
                key: personalDetails
                type: fieldSet
              - details:
                  - key: street
                    type: text
                  - key: houseNumberOrName
                    type: text
                  - key: city
                    type: text
                  - key: postalCode
                    type: text
                  - key: stateOrProvince
                    optional: true
                    type: text
                  - items:
                      - id: NL
                        name: Netherlands
                      - id: BE
                        name: Belgium
                    key: country
                    type: select
                key: billingAddress
                type: address
              - key: separateDeliveryAddress
                optional: true
                type: boolean
                value: "false"
              - details:
                  - key: street
                    type: text
                  - key: houseNumberOrName
                    type: text
                  - key: city
                    type: text
                  - key: postalCode
                    type: text
                  - key: stateOrProvince
                    optional: true
                    type: text
                  - items:
                      - id: NL
                        name: Netherlands
                      - id: BE
                        name: Belgium
                    key: country
                    type: select
                key: deliveryAddress
                optional: true
                type: address
            name: AfterPay Invoice
            type: afterpay_default
          - name: AfterPay DirectDebit
            type: afterpay_directdebit
          - name: Afterpay
            type: afterpaytouch
          - details:
              - key: encryptedCardNumber
                type: cardToken
              - key: encryptedSecurityCode
                type: cardToken
              - key: encryptedExpiryMonth
                type: cardToken
              - key: encryptedExpiryYear
                type: cardToken
              - key: holderName
                optional: true
                type: text
            name: Credit Card
            type: scheme
          - name: AliPay
            type: alipay
          - name: AliPay HK
            type: alipay_hk
          - name: AliPay
            type: alipay_wap
          - details:
              - key: additionalData.androidpay.token
                type: androidPayToken
            name: Android Pay
            type: androidpay
          - details:
              - key: additionalData.applepay.token
                type: applePayToken
            name: Apple Pay
            type: applepay
          - name: Credit Card via AsiaPay
            type: asiapay
          - name: China UnionPay
            type: asiapay_unionpay
          - name: Baby Gift Card
            type: babygiftcard
          - name: Baloto
            type: baloto
          - name: BancNet
            type: bancnet
          - name: Bank Transfer (BG)
            type: bankTransfer_BG
          - name: Bank Transfer (CH)
            type: bankTransfer_CH
          - name: Bank Transfer (DE)
            type: bankTransfer_DE
          - name: Bank Transfer (FI)
            type: bankTransfer_FI
          - name: Bank Transfer (GB)
            type: bankTransfer_GB
          - name: Bank Transfer (HU)
            type: bankTransfer_HU
          - name: SEPA Bank Transfer
            type: bankTransfer_IBAN
          - name: Bank Transfer (IE)
            type: bankTransfer_IE
          - name: Electronic Bank Transfer (MX)
            type: bankTransfer_MX_linked
          - name: Bank Transfer (MX)
            type: bankTransfer_MX_offline
          - name: Bank Transfer (NL)
            type: bankTransfer_NL
          - name: Bank Transfer (PL)
            type: bankTransfer_PL
          - name: Bank Transfer (SE)
            type: bankTransfer_SE
          - name: Bank Transfer (US)
            type: bankTransfer_US
          - name: Payconiq by Bancontact
            type: bcmc_mobile
          - name: Bijenkorf Cadeaucard
            type: bijcadeaucard
          - name: 99Bill
            type: bill99
          - details:
              - items:
                  - id: AUB_DIRECT
                    name: AU Small Finance Bank
                  - id: ALB_DIRECT
                    name: "Allahabad Bank "
                  - id: APG_DIRECT
                    name: Andhra Pragathi Grameena Bank
                  - id: BDN_DIRECT
                    name: Bandhan bank
                  - id: BBK_DIRECT
                    name: Bank of Bahrain and Kuwait
                  - id: BBR_DIRECT
                    name: Bank of Baroda - Retail Banking
                  - id: BCB_DIRECT
                    name: "Bassien Catholic Co-Operative Bank "
                  - id: CNB_DIRECT
                    name: Canara Bank
                  - id: SYD_DIRECT
                    name: Canara Bank (e-Syndicate)
                  - id: CSB_DIRECT
                    name: Catholic Syrian Bank
                  - id: CBI_DIRECT
                    name: Central Bank of India
                  - id: CUB_DIRECT
                    name: City Union Bank
                  - id: COB_DIRECT
                    name: Cosmos Bank
                  - id: DEN_DIRECT
                    name: Dena Bank
                  - id: DBK_DIRECT
                    name: Deutsche Bank
                  - id: DCB_DIRECT
                    name: Development Credit Bank
                  - id: DLB_DIRECT
                    name: Dhanlakshmi Bank - Retail Net Banking
                  - id: ESF_DIRECT
                    name: ESAF Small Finance Bank
                  - id: EQB_DIRECT
                    name: Equitas Small Finance Bank
                  - id: FBK_DIRECT
                    name: Federal Bank
                  - id: FNC_DIRECT
                    name: Fincare Bank
                  - id: HDF_DIRECT
                    name: HDFC Bank
                  - id: ICI_DIRECT
                    name: "ICICI Bank "
                  - id: IDB_DIRECT
                    name: IDBI Bank - Retail Net Banking
                  - id: IDN_DIRECT
                    name: IDFC FIRST Bank
                  - id: INB_DIRECT
                    name: Indian Bank
                  - id: IOB_DIRECT
                    name: Indian Overseas Bank
                  - id: IDS_DIRECT
                    name: IndusInd Bank
                  - id: JKB_DIRECT
                    name: Jammu & Kashmir Bank
                  - id: JNB_DIRECT
                    name: Jana Small Finance Bank
                  - id: JSB_DIRECT
                    name: Janata Sahakari Bank Ltd Pune
                  - id: KJB_DIRECT
                    name: Kalyan Janata Sahakari Bank
                  - id: KBL_DIRECT
                    name: Karnataka Bank Ltd
                  - id: KVB_DIRECT
                    name: Karur Vysya Bank
                  - id: 162_DIRECT
                    name: Kotak Bank
                  - id: LVR_DIRECT
                    name: Laxmi Vilas Bank - Retail
                  - id: NKB_DIRECT
                    name: NKGSB Co-op Bank
                  - id: NEB_DIRECT
                    name: North East Small Finance Bank
                  - id: OBC_DIRECT
                    name: PNB (Erstwhile-Oriental Bank of Commerce)
                  - id: UNI_DIRECT
                    name: PNB (Erstwhile-United Bank of India)
                  - id: PMC_DIRECT
                    name: Punjab & Maharastra Co-op Bank
                  - id: PSB_DIRECT
                    name: Punjab & Sind Bank
                  - id: CPN_DIRECT
                    name: "Punjab National Bank - Corporate "
                  - id: PNB_DIRECT
                    name: Punjab National Bank - Retail Banking
                  - id: RBL_DIRECT
                    name: RBL Bank Limited
                  - id: SWB_DIRECT
                    name: Saraswat Bank
                  - id: SHB_DIRECT
                    name: Shivalik Mercantile Cooperative Bank Ltd
                  - id: SIB_DIRECT
                    name: South Indian Bank
                  - id: SCB_DIRECT
                    name: Standard Chartered Bank
                  - id: SBI_DIRECT
                    name: State Bank of India
                  - id: SRB_DIRECT
                    name: Suryoday Small Finance Bank
                  - id: TJB_DIRECT
                    name: TJSB Bank
                  - id: TNC_DIRECT
                    name: Tamil Nadu State Co-operative Bank
                  - id: TMB_DIRECT
                    name: Tamilnad Mercantile Bank Ltd
                  - id: TBB_DIRECT
                    name: Thane Bharat Sahakari Bank Ltd
                  - id: MSB_DIRECT
                    name: The Mehsana Urban Co Op Bank Ltd
                  - id: UCO_DIRECT
                    name: UCO Bank
                  - id: UBI_DIRECT
                    name: Union Bank of India
                  - id: ADB_DIRECT
                    name: Union Bank of India (Erstwhile Andhra Bank)
                  - id: CRP_DIRECT
                    name: Union Bank of India (Erstwhile Corporation Bank)
                  - id: VRB_DIRECT
                    name: Varachha Co-operative Bank Limited
                  - id: VJB_DIRECT
                    name: Vijaya Bank
                  - id: YBK_DIRECT
                    name: Yes Bank
                  - id: ZOB_DIRECT
                    name: Zoroastrian Co-operative Bank Limited
                  - id: DBS_DIRECT
                    name: digibank by DBS
                key: issuer
                type: select
            name: Online Banking India
            type: billdesk_online
          - name: UPI
            type: billdesk_upi
          - details:
              - items:
                  - id: DCW_DIRECT
                    name: DCB Cippy
                  - id: ICC_DIRECT
                    name: ICC Cash Card
                  - id: OXY_DIRECT
                    name: Oxigen Wallet
                  - id: PCH_DIRECT
                    name: Pay World Money
                key: issuer
                type: select
            name: Wallets India
            type: billdesk_wallet
          - name: Blik
            type: blik
          - name: Bloemen Giftcard
            type: bloemengiftcard
          - name: Boekenbon Giftcard
            type: boekenbon
          - name: Boleto
            type: boleto
          - name: Boleto Bancario
            type: boletobancario_santander
          - name: Bradesco
            type: bradesco
          - name: Cash-Ticket
            type: cashticket
          - name: CashU
            type: cashu
          - name: CCAvenue
            type: ccavenue
          - name: Mula Checkout
            type: cellulant
          - name: Chasin Giftcard
            type: chasingiftcard
          - name: Clearpay
            type: clearpay
          - name: ClickandBuy
            type: clickandbuy
          - name: Paiement en 3 fois par Cartes Bancaires
            type: cofinoga_3xcb
          - name: Costes Giftcard
            type: costesgiftcard
          - name: custom_settlement
            type: custom_settlement
          - name: DANA
            type: dana
          - name: DineroMail
            type: dineromail
          - name: Online bank transfer.
            type: directEbanking
          - name: Direct Debit Brazil - Banco do Brazil
            type: directdebit_BR_bancodobrasil
          - name: Direct Debit Brazil - Bradesco
            type: directdebit_BR_bradesco
          - name: Direct Debit Brazil - Caixa Economica Federal
            type: directdebit_BR_caixa
          - name: Direct Debit Brazil - HSBC
            type: directdebit_BR_hsbc
          - name: Direct Debit Brazil - Itau
            type: directdebit_BR_itau
          - name: Direct Debit Brazil - Santander
            type: directdebit_BR_santander
          - name: BACS Direct Debit
            type: directdebit_GB
          - details:
              - key: shopperEmail
                type: emailAddress
              - key: firstName
                type: text
              - key: lastName
                type: text
              - key: infix
                optional: true
                type: text
            name: Alfamart
            type: doku_alfamart
          - details:
              - key: shopperEmail
                type: emailAddress
              - key: firstName
                type: text
              - key: lastName
                type: text
              - key: infix
                optional: true
                type: text
            name: BCA Bank Transfer
            type: doku_bca_va
          - details:
              - key: shopperEmail
                type: emailAddress
              - key: firstName
                type: text
              - key: lastName
                type: text
              - key: infix
                optional: true
                type: text
            name: BNI VA
            type: doku_bni_va
          - details:
              - key: shopperEmail
                type: emailAddress
              - key: firstName
                type: text
              - key: lastName
                type: text
              - key: infix
                optional: true
                type: text
            name: BRI VA
            type: doku_bri_va
          - details:
              - key: shopperEmail
                type: emailAddress
              - key: firstName
                type: text
              - key: lastName
                type: text
              - key: infix
                optional: true
                type: text
            name: CIMB VA
            type: doku_cimb_va
          - details:
              - key: shopperEmail
                type: emailAddress
              - key: firstName
                type: text
              - key: lastName
                type: text
              - key: infix
                optional: true
                type: text
            name: Danamon VA
            type: doku_danamon_va
          - details:
              - key: shopperEmail
                type: emailAddress
              - key: firstName
                type: text
              - key: lastName
                type: text
              - key: infix
                optional: true
                type: text
            name: Indomaret
            type: doku_indomaret
          - details:
              - key: shopperEmail
                type: emailAddress
              - key: firstName
                type: text
              - key: lastName
                type: text
              - key: infix
                optional: true
                type: text
            name: Mandiri VA
            type: doku_mandiri_va
          - details:
              - key: ovoId
                type: text
            name: OVO
            type: doku_ovo
          - details:
              - key: shopperEmail
                type: emailAddress
              - key: firstName
                type: text
              - key: lastName
                type: text
              - key: infix
                optional: true
                type: text
            name: Bank Transfer
            type: doku_permata_lite_atm
          - details:
              - key: shopperEmail
                type: emailAddress
              - key: firstName
                type: text
              - key: lastName
                type: text
              - key: infix
                optional: true
                type: text
            name: DOKU wallet
            type: doku_wallet
          - details:
              - items:
                  - id: "66"
                    name: Bank Nowy BFG S.A.
                  - id: "92"
                    name: Bank Spółdzielczy w Brodnicy
                  - id: "11"
                    name: Bank transfer / postal
                  - id: "74"
                    name: Banki Spółdzielcze
                  - id: "73"
                    name: BLIK
                  - id: "90"
                    name: BNP Paribas - płacę z Pl@net
                  - id: "59"
                    name: CinkciarzPAY
                  - id: "87"
                    name: Credit Agricole PBL
                  - id: "83"
                    name: EnveloBank
                  - id: "76"
                    name: Getin Bank PBL
                  - id: "81"
                    name: Idea Cloud
                  - id: "7"
                    name: ING Corporate customers
                  - id: "93"
                    name: Kasa Stefczyka
                  - id: "44"
                    name: Millennium - Płatności Internetowe
                  - id: "10"
                    name: Millennium Corporate customers
                  - id: "68"
                    name: mRaty
                  - id: "1"
                    name: mTransfer
                  - id: "91"
                    name: Nest Bank
                  - id: "80"
                    name: Noble Pay
                  - id: "50"
                    name: Pay Way Toyota Bank
                  - id: "45"
                    name: Pay with Alior Bank
                  - id: "36"
                    name: Pekao24Przelew
                  - id: "70"
                    name: Pocztowy24
                  - id: "6"
                    name: Przelew24
                  - id: "46"
                    name: Płacę z Citi Handlowy
                  - id: "38"
                    name: Płacę z ING
                  - id: "2"
                    name: Płacę z Inteligo
                  - id: "4"
                    name: Płacę z iPKO
                  - id: "75"
                    name: Płacę z Plus Bank
                  - id: "51"
                    name: Płać z BOŚ
                  - id: "55"
                    name: Raty z Alior Bankiem PLN
                  - id: "89"
                    name: Santander
                  - id: "52"
                    name: SkyCash
                key: issuer
                type: select
            name: Local Polish Payment Methods
            type: dotpay
          - name: Dragonpay Prepaid Credits
            type: dragonpay_credits
          - name: Online Banking
            type: dragonpay_ebanking
          - name: GCash
            type: dragonpay_gcash
          - name: Over The Counter Banks
            type: dragonpay_otc_banking
          - name: OTC non-Bank via Dragonpay
            type: dragonpay_otc_non_banking
          - name: Convenience Stores
            type: dragonpay_otc_philippines
          - name: 7/11
            type: dragonpay_seveneleven
          - name: eagleeye_voucher
            type: eagleeye_voucher
          - name: Finnish E-Banking
            type: ebanking_FI
          - name: Pay-easy ATM
            type: econtext_atm
          - name: Online Banking
            type: econtext_online
          - name: 7-Eleven
            type: econtext_seven_eleven
          - name: Convenience Stores
            type: econtext_stores
          - name: eft_directdebit_CA
            type: eft_directdebit_CA
          - name: Lastschrift (ELV)
            type: elv
          - details:
              - items:
                  - id: "231"
                    name: POP Pankki
                  - id: "551"
                    name: Komerční banka
                  - id: "232"
                    name: Aktia
                  - id: "552"
                    name: Raiffeisen
                  - id: "233"
                    name: Säästöpankki
                  - id: "750"
                    name: Swedbank
                  - id: "211"
                    name: Nordea
                  - id: "553"
                    name: ČSOB
                  - id: "234"
                    name: S-Pankki
                  - id: "751"
                    name: SEB
                  - id: "554"
                    name: Moneta
                  - id: "235"
                    name: OmaSP
                  - id: "752"
                    name: Nordea
                  - id: "213"
                    name: Op-Pohjola
                  - id: "555"
                    name: UniCredit
                  - id: "753"
                    name: LHV
                  - id: "556"
                    name: Fio
                  - id: "557"
                    name: mBank
                  - id: "216"
                    name: Handelsbanken
                  - id: "558"
                    name: Air Bank
                  - id: "260"
                    name: Länsförsäkringar
                  - id: "240"
                    name: BankDeposit
                  - id: "265"
                    name: Sparbanken
                  - id: "640"
                    name: BankDeposit
                  - id: "200"
                    name: Ålandsbanken
                  - id: "940"
                    name: Swedbank
                  - id: "500"
                    name: Česká spořitelna
                  - id: "720"
                    name: Swedbank
                  - id: "941"
                    name: SEB
                  - id: "204"
                    name: Danske Bank
                  - id: "721"
                    name: SEB
                  - id: "942"
                    name: Citadele
                  - id: "205"
                    name: Handelsbanken
                  - id: "722"
                    name: DNB
                  - id: "943"
                    name: DNB
                  - id: "206"
                    name: Nordea
                  - id: "723"
                    name: Šiaulių bankas
                  - id: "207"
                    name: SEB
                  - id: "724"
                    name: Nordea
                  - id: "505"
                    name: Komerční banka
                  - id: "208"
                    name: Skandiabanken
                  - id: "209"
                    name: Swedbank
                key: issuer
                type: select
            name: Bank Payment
            type: entercash
          - name: Nationale Entertainment Card
            type: entertainmentcard
          - details:
              - items:
                  - id: d5d5b133-1c0d-4c08-b2be-3c9b116dc326
                    name: Dolomitenbank
                  - id: ee9fc487-ebe0-486c-8101-17dce5141a67
                    name: Raiffeissen Bankengruppe
                  - id: 6765e225-a0dc-4481-9666-e26303d4f221
                    name: Hypo Tirol Bank AG
                  - id: 8b0bfeea-fbb0-4337-b3a1-0e25c0f060fc
                    name: Sparda Bank Wien
                  - id: 1190c4d1-b37a-487e-9355-e0a067f54a9f
                    name: Schoellerbank AG
                  - id: e2e97aaa-de4c-4e18-9431-d99790773433
                    name: Volksbank Gruppe
                  - id: bb7d223a-17d5-48af-a6ef-8a2bf5a4e5d9
                    name: Immo-Bank
                  - id: e6819e7a-f663-414b-92ec-cf7c82d2f4e5
                    name: Bank Austria
                  - id: eff103e6-843d-48b7-a6e6-fbd88f511b11
                    name: Easybank AG
                  - id: 25942cc9-617d-42a1-89ba-d1ab5a05770a
                    name: VR-BankBraunau
                  - id: 4a0a975b-0594-4b40-9068-39f77b3a91f9
                    name: Volkskreditbank
                  - id: 3fdc41fc-3d3d-4ee3-a1fe-cd79cfd58ea3
                    name: Erste Bank und Sparkassen
                  - id: ba7199cc-f057-42f2-9856-2378abf21638
                    name: BAWAG P.S.K. Gruppe
                key: issuer
                type: select
            name: EPS
            type: eps
          - name: Expert Cadeaukaart
            type: expertgiftcard
          - details:
              - details:
                  - key: firstName
                    type: text
                  - key: lastName
                    type: text
                  - items:
                      - id: M
                        name: male
                      - id: F
                        name: female
                    key: gender
                    type: radio
                  - key: telephoneNumber
                    type: tel
                  - key: shopperEmail
                    type: emailAddress
                key: personalDetails
                type: fieldSet
              - details:
                  - key: street
                    type: text
                  - key: houseNumberOrName
                    type: text
                  - key: city
                    type: text
                  - key: postalCode
                    type: text
                  - key: stateOrProvince
                    optional: true
                    type: text
                  - items:
                      - id: FR
                        name: France
                      - id: ES
                        name: Spain
                    key: country
                    type: select
                key: billingAddress
                type: address
              - key: separateDeliveryAddress
                optional: true
                type: boolean
                value: "false"
              - details:
                  - key: street
                    type: text
                  - key: houseNumberOrName
                    type: text
                  - key: city
                    type: text
                  - key: postalCode
                    type: text
                  - key: stateOrProvince
                    optional: true
                    type: text
                  - items:
                      - id: FR
                        name: France
                      - id: ES
                        name: Spain
                    key: country
                    type: select
                key: deliveryAddress
                optional: true
                type: address
            name: 3x Oney
            type: facilypay_3x
          - details:
              - details:
                  - key: firstName
                    type: text
                  - key: lastName
                    type: text
                  - items:
                      - id: M
                        name: male
                      - id: F
                        name: female
                    key: gender
                    type: radio
                  - key: telephoneNumber
                    type: tel
                  - key: shopperEmail
                    type: emailAddress
                key: personalDetails
                type: fieldSet
              - details:
                  - key: street
                    type: text
                  - key: houseNumberOrName
                    type: text
                  - key: city
                    type: text
                  - key: postalCode
                    type: text
                  - key: stateOrProvince
                    optional: true
                    type: text
                  - items:
                      - id: FR
                        name: France
                      - id: ES
                        name: Spain
                    key: country
                    type: select
                key: billingAddress
                type: address
              - key: separateDeliveryAddress
                optional: true
                type: boolean
                value: "false"
              - details:
                  - key: street
                    type: text
                  - key: houseNumberOrName
                    type: text
                  - key: city
                    type: text
                  - key: postalCode
                    type: text
                  - key: stateOrProvince
                    optional: true
                    type: text
                  - items:
                      - id: FR
                        name: France
                      - id: ES
                        name: Spain
                    key: country
                    type: select
                key: deliveryAddress
                optional: true
                type: address
            name: 4x Oney
            type: facilypay_4x
          - name: Fashioncheque
            type: fashioncheque
          - details:
              - key: shopper.firstName
                type: text
              - key: shopper.lastName
                type: text
              - key: shopper.gender
                type: text
              - key: shopperEmail
                type: emailAddress
              - key: telephoneNumber
                type: tel
              - key: countryCode
                type: text
            name: Fawry
            type: fawry
          - name: FijnCadeau
            type: fijncadeau
          - name: Fleurop Bloemenbon
            type: fleuropbloemenbon
          - name: Fonq Giftcard
            type: fonqgiftcard
          - name: Gall & Gall
            type: gallgall
          - name: GCash
            type: gcash
          - name: Generic GiftCard
            type: genericgiftcard
          - name: GiftFor2
            type: giftfor2card
          - name: Givex
            type: givex
          - name: Globe GCash
            type: globegcash
          - name: Goldsmiths Card
            type: goldsmithscard
          - name: GoPay Wallet
            type: gopay_wallet
          - name: OVO
            type: grabpay_ID
          - name: GrabPay
            type: grabpay_PH
          - name: GrabPay
            type: grabpay_SG
          - name: Hallmark Card
            type: hallmarkcard
          - name: HDFC
            type: hdfc
          - name: Hunkemoller Member Card
            type: hmclub
          - name: Hunkemoller Lingerie Card
            type: hmlingerie
          - details:
              - items:
                  - id: "1121"
                    name: Test Issuer
                  - id: "1154"
                    name: Test Issuer 5
                  - id: "1153"
                    name: Test Issuer 4
                  - id: "1152"
                    name: Test Issuer 3
                  - id: "1151"
                    name: Test Issuer 2
                  - id: "1162"
                    name: Test Issuer Cancelled
                  - id: "1161"
                    name: Test Issuer Pending
                  - id: "1160"
                    name: Test Issuer Refused
                  - id: "1159"
                    name: Test Issuer 10
                  - id: "1158"
                    name: Test Issuer 9
                  - id: "1157"
                    name: Test Issuer 8
                  - id: "1156"
                    name: Test Issuer 7
                  - id: "1155"
                    name: Test Issuer 6
                key: issuer
                type: select
            name: iDEAL
            type: ideal
          - name: igive
            type: igive
          - name: Korean Account Transfer (IniPay)
            type: inicisIniPay_accounttransfer
          - name: Korean Credit Cards (IniPay)
            type: inicisIniPay_creditcard
          - name: Korean Mobile Phone (IniPay)
            type: inicisIniPay_mobilephone
          - name: Korean Virtual Account (IniPay)
            type: inicisIniPay_virtualaccount
          - name: Korean Account Transfer (Mobile)
            type: inicisMobile_accounttransfer
          - name: Korean Credit Cards (Mobile)
            type: inicisMobile_creditcard
          - name: Korean Mobile Phone (Mobile)
            type: inicisMobile_mobilephone
          - name: Korean Virtual Account (Mobile)
            type: inicisMobile_virtualaccount
          - name: Korean Credit Cards
            type: inicis_creditcard
          - name: Interac® Online
            type: interac
          - name: Instant EFT
            type: ipay
          - name: iPay88
            type: ipay88
          - name: isracard
            type: isracard
          - name: Phone Payment
            type: ivr
          - name: Landline phone
            type: ivrLandline
          - name: Mobile phone
            type: ivrMobile
          - name: Kado Wereld
            type: kadowereld
          - name: KakaoPay
            type: kakaopay
          - name: Karen Millen Card
            type: karenmillen
          - name: Karen Millen GiftCard
            type: karenmillengiftcard
          - name: Bank Transfer
            type: kcp_banktransfer
          - name: Korea–issued cards
            type: kcp_creditcard
          - name: PayCo
            type: kcp_payco
          - name: Naver Pay
            type: kcp_naverpay
          - name: Virtual Account via KCP
            type: kcp_va
          - name: Pay later with Klarna.
            type: klarna
          - name: Pay over time with Klarna.
            type: klarna_account
          - name: Buy Now, Pay Later with Billie
            type: klarna_b2b
          - name: Pay now with Klarna.
            type: klarna_paynow
          - name: Leisure Card
            type: leisurecard
          - name: China Credit Card
            type: lianlianpay_creditcard
          - name: China Debit Card
            type: lianlianpay_debitcard
          - details:
              - key: telephoneNumber
                type: tel
            name: China Online Banking - Credit Card
            type: lianlianpay_ebanking_credit
          - details:
              - items:
                  - id: "01030000"
                    name: Agricultural Bank of China
                  - id: "4031000"
                    name: Bank of Beijing
                  - id: "01040000"
                    name: Bank of China
                  - id: "03020000"
                    name: China Citic Bank
                  - id: "01050000"
                    name: China Construction Bank
                  - id: "03030000"
                    name: China Everbright Bank
                  - id: "03080000"
                    name: China Merchants Bank
                  - id: "03050000"
                    name: China Minsheng Banking Group
                  - id: "03040000"
                    name: Hua Xia Bank Co
                  - id: "01020000"
                    name: Industrial and Commercial Bank of China
                  - id: "03070000"
                    name: PingAn Bank
                  - id: "1000000"
                    name: Postal Savings Bank of China
                key: issuer
                type: select
              - key: telephoneNumber
                type: tel
            name: China Online Banking - Debit Card
            type: lianlianpay_ebanking_debit
          - details:
              - items:
                  - id: "01030000"
                    name: Agricultural Bank of China
                  - id: "01050000"
                    name: China Construction Bank
                  - id: "03080000"
                    name: China Merchants Bank
                  - id: "01020000"
                    name: Industrial and Commercial Bank of China
                  - id: "03100000"
                    name: Shanghai Pudong Development Bank
                key: issuer
                type: select
              - key: telephoneNumber
                type: tel
            name: China Online Banking - Enterprise
            type: lianlianpay_ebanking_enterprise
          - name: Loods5 Cadeaukaart
            type: loods5giftcard
          - name: Loods5 Tegoedbon
            type: loods5prepaidcard
          - name: Love2Shop GiftCard
            type: love2shop
          - details:
              - key: shopper.firstName
                type: text
              - key: shopper.lastName
                type: text
              - key: shopper.gender
                type: text
              - key: shopperEmail
                type: emailAddress
              - key: telephoneNumber
                type: tel
              - key: countryCode
                type: text
            name: mada
            type: mada
          - name: Mappin & Webb Card
            type: mappinwebbcard
          - name: MB WAY
            type: mbway
          - details:
              - key: additionalData.amazonPayToken
                type: text
            name: Amazon Pay
            supportsRecurring: true
            type: amazonpay
          - name: Mercado Pago
            type: mercadopago
          - name: MobilePay
            type: mobilepay
          - name: AliPay via Razer Merchant Services
            type: molpay_alipay
          - name: 7-Eleven
            type: molpay_cash
          - name: CIMB Virtual Account
            type: molpay_cimb_va
          - name: Malaysia E-Banking via Razer Merchant Services
            type: molpay_ebanking_MY
          - details:
              - items:
                  - id: vtcpay-vietinbank
                    name: Vietinbank
                  - id: vtcpay-bidv
                    name: BIDV
                  - id: vtcpay-agribank
                    name: Agribank
                  - id: vtcpay-mb
                    name: MB Bank
                  - id: vtcpay-sacombank
                    name: Sacombank
                  - id: vtcpay-dongabank
                    name: DongABank
                  - id: vtcpay-maritimebank
                    name: MaritimeBank
                  - id: vtcpay-vietcombank
                    name: Vietcombank
                  - id: vtcpay-acb
                    name: ACB
                  - id: vtcpay-techcombank
                    name: Techcombank
                key: issuer
                type: select
            name: Vietnam E-Banking
            type: molpay_ebanking_VN
          - details:
              - items:
                  - id: fpx_bimb
                    name: Bank Islam
                  - id: fpx_uob
                    name: UOB Bank
                  - id: fpx_cimbclicks
                    name: CIMB Clicks
                  - id: fpx_kfh
                    name: Kuwait Finance House
                  - id: fpx_rhb
                    name: RHB Now
                  - id: fpx_abmb
                    name: Alliance Bank
                  - id: fpx_amb
                    name: Am Online
                  - id: fpx_hsbc
                    name: HSBC
                  - id: fpx_abb
                    name: Affin Bank
                  - id: fpx_ocbc
                    name: OCBC Bank
                  - id: fpx_pbb
                    name: Public Bank
                  - id: fpx_scb
                    name: Standard Chartered Bank
                  - id: fpx_bsn
                    name: Bank Simpanan Nasional
                  - id: fpx_mb2u
                    name: Maybank2u
                  - id: fpx_hlb
                    name: Hong Leong Connect
                  - id: fpx_bmmb
                    name: Bank Muamalat
                  - id: fpx_bkrm
                    name: Bank Rakyat
                key: issuer
                type: select
            name: Malaysia E-Banking
            type: molpay_ebanking_fpx_MY
          - name: eNETS Debit
            type: molpay_enetsd
          - name: epay
            type: molpay_epay
          - name: Esapay
            type: molpay_esapay
          - name: MyClear FPX
            type: molpay_fpx
          - name: Maybank2u
            type: molpay_maybank2u
          - name: Nganluong
            type: molpay_nganluong
          - name: Convenience Stores Thailand
            type: molpay_paysbuy
          - name: MOLPoints
            type: molpay_points
          - name: RHB Now
            type: molpay_rhb
          - name: SAM by SingPost
            type: molpay_singpost
          - name: MOLWallet
            type: molpay_wallet
          - name: MoMo ATM
            type: momo_atm
          - name: Momo Wallet
            type: momo_wallet
          - name: Moneybookers
            type: moneybookers
          - name: Multibanco
            type: multibanco
          - name: De Nationale Musicalcard
            type: musicalcard
          - name: Nationale Bioscoopbon
            type: nationalebioscoopbon
          - name: Nationale Tuinbon
            type: nationaletuinbon
          - name: Nationale Verwen Cadeaubon
            type: nationaleverwencadeaubon
          - name: BankAxess
            type: netaxept_bankaxess
          - name: NETELLER
            type: neteller
          - name: Onebip
            type: onebip
          - name: One Two Three
            type: onetwothree
          - name: Online Banking PL
            type: onlineBanking_PL
          - details:
              - items:
                  - id: "1"
                    name: Model Bank v2
                key: issuer
                type: select
            name: Online banking
            type: openbanking_UK
          - name: Oxxo
            type: oxxo
          - name: Pathe Giftcard
            type: pathegiftcard
          - name: PayBright
            type: paybright
          - name: Maya Wallet
            type: paymaya_wallet
          - name: PayPal
            type: paypal
          - name: Paysafecard
            type: paysafecard
          - name: Payshop
            type: payshop
          - name: PayD AMT via Paythru
            type: paythru_amt
          - name: EFT via Paythru
            type: paythru_eft
          - name: PayTM
            type: paytm
          - details:
              - key: virtualPaymentAddress
                type: text
            name: PayU UPI
            type: payu_IN_upi
          - name: EFT Pro via PayU
            type: payu_ZA_eftpro
          - details:
              - key: additionalData.paywithgoogle.token
                type: payWithGoogleToken
            name: Google Pay
            type: paywithgoogle
          - name: pix
            type: pix
          - name: Plastix
            type: plastix
          - name: Pluim
            type: pluimgiftcard
          - name: Podium Card
            type: podiumcard
          - name: POLi
            type: poli
          - name: PPS
            type: pps
          - name: Primera Cadeaukaart
            type: primeracadeaucard
          - name: Illicado Gift Card
            type: prosodie_illicado
          - name: PSE
            type: pse
          - details:
              - items:
                  - id: "+7"
                    name: RU
                  - id: "+9955"
                    name: GE
                  - id: "+507"
                    name: PA
                  - id: "+44"
                    name: GB
                  - id: "+992"
                    name: TJ
                  - id: "+370"
                    name: LT
                  - id: "+972"
                    name: IL
                  - id: "+996"
                    name: KG
                  - id: "+380"
                    name: UA
                  - id: "+84"
                    name: VN
                  - id: "+90"
                    name: TR
                  - id: "+994"
                    name: AZ
                  - id: "+374"
                    name: AM
                  - id: "+371"
                    name: LV
                  - id: "+91"
                    name: IN
                  - id: "+66"
                    name: TH
                  - id: "+373"
                    name: MD
                  - id: "+1"
                    name: US
                  - id: "+81"
                    name: JP
                  - id: "+998"
                    name: UZ
                  - id: "+77"
                    name: KZ
                  - id: "+375"
                    name: BY
                  - id: "+372"
                    name: EE
                  - id: "+40"
                    name: RO
                  - id: "+82"
                    name: KR
                key: qiwiwallet.telephoneNumberPrefix
                type: select
              - key: qiwiwallet.telephoneNumber
                type: text
            name: Qiwi Wallet
            type: qiwiwallet
          - name: RatePay Invoice
            type: ratepay
          - name: RatePay Direct Debit
            type: ratepay_directdebit
          - name: Rituals Giftcard
            type: rituals
          - name: Rob Peetoom Giftcard
            type: robpeetoomgiftcard
          - name: SafetyPay
            type: safetypay
          - name: SafetyPay Cash
            type: safetypay_cash
          - name: Shoes&Accessories Cadeau
            type: sagiftcard
          - name: Score Giftcard
            type: scoregiftcard
          - name: SEB Direktbetalning
            type: sebdirectpayment
          - details:
              - key: sepa.ownerName
                type: text
              - key: sepa.ibanNumber
                type: text
            name: SEPA Direct Debit
            type: sepadirectdebit
          - name: 7-Eleven
            type: seveneleven
          - name: Premium SMS
            type: sms
          - name: SVS
            type: svs
          - name: Swish
            type: swish
          - name: TCS Test GiftCard
            type: tcstestgiftcard
          - name: TenPay
            type: tenpay
          - name: The Sting Giftcard
            type: thestinggiftcard
          - name: TrueMoney
            type: truemoney
          - name: Trustly
            type: trustly
          - name: Online Banking by Trustpay
            type: trustpay
          - name: TWINT
            type: twint
          - name: Ukash
            type: ukash
          - name: UnionPay
            type: unionpay
          - details:
              - key: virtualPaymentAddress
                type: text
            name: UPI Collect
            type: upi_collect
          - name: Valuelink
            type: valuelink
          - name: V&D Cadeaukaart
            type: vdcadeaucard
          - details:
              - key: telephoneNumber
                optional: true
                type: tel
            name: Vipps
            type: vipps
          - details:
              - key: additionalData.visacheckout.callId
                type: text
            name: Visa Checkout
            type: visacheckout
          - name: VVV Cadeaubon
            type: vvvcadeaubon
          - name: VVV Giftcard
            type: vvvgiftcard
          - name: Webshop Giftcard
            type: webshopgiftcard
          - name: WeChat Pay
            type: wechatpayMiniProgram
          - name: WeChat Pay
            type: wechatpayQR
          - name: WeChat Pay
            type: wechatpayWeb
          - name: WE Fashion Giftcard
            type: wefashiongiftcard
          - name: Western Union
            type: westernunion
          - name: Winkel Cheque
            type: winkelcheque
          - name: WOS Card
            type: woscard
          - name: Alfa-Click
            type: yandex_alfaclick
          - name: Pay using bank card
            type: yandex_bank_card
          - name: Cash terminals
            type: yandex_cash
          - name: Pay using installments
            type: yandex_installments
          - name: YooMoney
            type: yandex_money
          - name: Promsvyazbank
            type: yandex_promsvyazbank
          - name: SberPay
            type: yandex_sberbank
          - name: WebMoney
            type: yandex_webmoney
          - name: Your Gift
            type: yourgift
          - name: Zip
            type: zip
    post-paymentMethods-filtered:
      summary: Get payment methods based on the country and amount
      value:
        amount:
          currency: EUR
          value: 1000
        countryCode: NL
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        shopperLocale: nl-NL
    post-paymentMethods-filtered-200:
      summary: Example response for request 'filtered'
      value:
        paymentMethods:
          - details:
              - items:
                  - id: "1121"
                    name: Test Issuer
                  - id: "1154"
                    name: Test Issuer 5
                  - id: "1153"
                    name: Test Issuer 4
                  - id: "1152"
                    name: Test Issuer 3
                  - id: "1151"
                    name: Test Issuer 2
                  - id: "1162"
                    name: Test Issuer Cancelled
                  - id: "1161"
                    name: Test Issuer Pending
                  - id: "1160"
                    name: Test Issuer Refused
                  - id: "1159"
                    name: Test Issuer 10
                  - id: "1158"
                    name: Test Issuer 9
                  - id: "1157"
                    name: Test Issuer 8
                  - id: "1156"
                    name: Test Issuer 7
                  - id: "1155"
                    name: Test Issuer 6
                key: issuer
                type: select
            name: iDEAL
            type: ideal
          - details:
              - key: encryptedCardNumber
                type: cardToken
              - key: encryptedSecurityCode
                type: cardToken
              - key: encryptedExpiryMonth
                type: cardToken
              - key: encryptedExpiryYear
                type: cardToken
              - key: holderName
                optional: true
                type: text
            name: Hitelkártya
            type: scheme
          - name: PayPal
            type: paypal
          - details:
              - details:
                  - key: firstName
                    type: text
                  - key: lastName
                    type: text
                  - items:
                      - id: M
                        name: male
                      - id: F
                        name: female
                    key: gender
                    type: radio
                  - key: dateOfBirth
                    type: date
                  - key: telephoneNumber
                    type: tel
                  - key: shopperEmail
                    type: emailAddress
                key: personalDetails
                type: fieldSet
              - details:
                  - key: street
                    type: text
                  - key: houseNumberOrName
                    type: text
                  - key: city
                    type: text
                  - key: postalCode
                    type: text
                  - key: stateOrProvince
                    optional: true
                    type: text
                  - items:
                      - id: NL
                        name: Netherlands
                      - id: BE
                        name: Belgium
                    key: country
                    type: select
                    value: NL
                key: billingAddress
                type: address
              - key: separateDeliveryAddress
                optional: true
                type: boolean
                value: "false"
              - details:
                  - key: street
                    type: text
                  - key: houseNumberOrName
                    type: text
                  - key: city
                    type: text
                  - key: postalCode
                    type: text
                  - key: stateOrProvince
                    optional: true
                    type: text
                  - items:
                      - id: NL
                        name: Netherlands
                      - id: BE
                        name: Belgium
                    key: country
                    type: select
                    value: NL
                key: deliveryAddress
                optional: true
                type: address
            name: AfterPay Invoice
            type: afterpay_default
          - name: Pay later with Klarna.
            type: klarna
          - details:
              - key: sepa.ownerName
                type: text
              - key: sepa.ibanNumber
                type: text
            name: SEPA Direct Debit
            type: sepadirectdebit
          - name: Paysafecard
            type: paysafecard
          - name: Bijenkorf Cadeaucard
            type: bijcadeaucard
          - name: Fonq Giftcard
            type: fonqgiftcard
          - name: Bank Transfer (NL)
            type: bankTransfer_NL
          - name: Pathe Giftcard
            type: pathegiftcard
          - name: VVV Giftcard
            type: vvvgiftcard
          - name: Podium Card
            type: podiumcard
          - name: RatePay Direct Debit
            type: ratepay_directdebit
          - name: Rituals Giftcard
            type: rituals
          - name: Hunkemoller Lingerie Card
            type: hmlingerie
          - name: Primera Cadeaukaart
            type: primeracadeaucard
          - name: Fashioncheque
            type: fashioncheque
          - name: NETELLER
            type: neteller
          - name: Adyen Voucher
            type: adyen_test_voucher
          - name: AfterPay B2B
            type: afterpay_b2b
          - name: AfterPay DirectDebit
            type: afterpay_directdebit
          - name: AliPay
            type: alipay
          - name: AliPay
            type: alipay_wap
          - details:
              - key: additionalData.androidpay.token
                type: androidPayToken
            name: Android Pay
            type: androidpay
          - details:
              - key: additionalData.applepay.token
                type: applePayToken
            name: Apple Pay
            type: applepay
          - name: Baby Gift Card
            type: babygiftcard
          - name: SEPA Bank Transfer
            type: bankTransfer_IBAN
          - name: Bloemen Giftcard
            type: bloemengiftcard
          - name: Boekenbon Giftcard
            type: boekenbon
          - name: Cash-Ticket
            type: cashticket
          - name: Chasin Giftcard
            type: chasingiftcard
          - name: ClickandBuy
            type: clickandbuy
          - name: Costes Giftcard
            type: costesgiftcard
          - name: custom_settlement
            type: custom_settlement
          - name: eft_directdebit_CA
            type: eft_directdebit_CA
          - name: Nationale Entertainment Card
            type: entertainmentcard
          - name: Expert Cadeaukaart
            type: expertgiftcard
          - name: FijnCadeau
            type: fijncadeau
          - name: Fleurop Bloemenbon
            type: fleuropbloemenbon
          - name: Gall & Gall
            type: gallgall
          - name: Generic GiftCard
            type: genericgiftcard
          - name: GiftFor2
            type: giftfor2card
          - name: Givex
            type: givex
          - name: Goldsmiths Card
            type: goldsmithscard
          - name: Hunkemoller Member Card
            type: hmclub
          - name: Phone Payment
            type: ivr
          - name: Landline phone
            type: ivrLandline
          - name: Mobile phone
            type: ivrMobile
          - name: Kado Wereld
            type: kadowereld
          - name: Karen Millen GiftCard
            type: karenmillengiftcard
          - name: Leisure Card
            type: leisurecard
          - name: Loods5 Cadeaukaart
            type: loods5giftcard
          - name: Loods5 Tegoedbon
            type: loods5prepaidcard
          - details:
              - key: additionalData.amazonPayToken
                type: text
            name: Amazon Pay
            supportsRecurring: true
            type: amazonpay
          - name: MOLPoints
            type: molpay_points
          - name: Moneybookers
            type: moneybookers
          - name: De Nationale Musicalcard
            type: musicalcard
          - name: Nationale Bioscoopbon
            type: nationalebioscoopbon
          - name: Nationale Tuinbon
            type: nationaletuinbon
          - name: Nationale Verwen Cadeaubon
            type: nationaleverwencadeaubon
          - name: Onebip
            type: onebip
          - details:
              - key: additionalData.paywithgoogle.token
                type: payWithGoogleToken
            name: Google Pay
            type: paywithgoogle
          - name: Plastix
            type: plastix
          - name: Pluim
            type: pluimgiftcard
          - name: Illicado Gift Card
            type: prosodie_illicado
          - name: RatePay Invoice
            type: ratepay
          - name: Rob Peetoom Giftcard
            type: robpeetoomgiftcard
          - name: Shoes&Accessories Cadeau
            type: sagiftcard
          - name: Score Giftcard
            type: scoregiftcard
          - name: Premium SMS
            type: sms
          - name: SVS
            type: svs
          - name: TCS Test GiftCard
            type: tcstestgiftcard
          - name: The Sting Giftcard
            type: thestinggiftcard
          - name: Ukash
            type: ukash
          - name: UnionPay
            type: unionpay
          - name: Valuelink
            type: valuelink
          - name: V&D Cadeaukaart
            type: vdcadeaucard
          - details:
              - key: additionalData.visacheckout.callId
                type: text
            name: Visa Checkout
            type: visacheckout
          - name: VVV Cadeaubon
            type: vvvcadeaubon
          - name: Webshop Giftcard
            type: webshopgiftcard
          - name: WE Fashion Giftcard
            type: wefashiongiftcard
          - name: Western Union
            type: westernunion
          - name: Winkel Cheque
            type: winkelcheque
          - name: Your Gift
            type: yourgift
    post-paymentMethods-include-oneclick:
      summary: Get payment methods including stored card details
      value:
        amount:
          currency: EUR
          value: 1000
        countryCode: NL
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        shopperReference: YOUR_SHOPPER_REFERENCE
    post-paymentMethods-include-oneclick-200:
      summary: Example response for request 'include-oneclick'
      value:
        paymentMethods:
          - details:
              - items:
                  - id: "1121"
                    name: Test Issuer
                  - id: "1154"
                    name: Test Issuer 5
                  - id: "1153"
                    name: Test Issuer 4
                  - id: "1152"
                    name: Test Issuer 3
                  - id: "1151"
                    name: Test Issuer 2
                  - id: "1162"
                    name: Test Issuer Cancelled
                  - id: "1161"
                    name: Test Issuer Pending
                  - id: "1160"
                    name: Test Issuer Refused
                  - id: "1159"
                    name: Test Issuer 10
                  - id: "1158"
                    name: Test Issuer 9
                  - id: "1157"
                    name: Test Issuer 8
                  - id: "1156"
                    name: Test Issuer 7
                  - id: "1155"
                    name: Test Issuer 6
                key: issuer
                type: select
            name: iDEAL
            type: ideal
          - details:
              - key: encryptedCardNumber
                type: cardToken
              - key: encryptedSecurityCode
                type: cardToken
              - key: encryptedExpiryMonth
                type: cardToken
              - key: encryptedExpiryYear
                type: cardToken
              - key: holderName
                optional: true
                type: text
            name: Credit Card
            type: scheme
          - name: PayPal
            type: paypal
          - details:
              - details:
                  - key: firstName
                    type: text
                  - key: lastName
                    type: text
                  - items:
                      - id: M
                        name: male
                      - id: F
                        name: female
                    key: gender
                    type: radio
                  - key: dateOfBirth
                    type: date
                  - key: telephoneNumber
                    type: tel
                  - key: shopperEmail
                    type: emailAddress
                key: personalDetails
                type: fieldSet
              - details:
                  - key: street
                    type: text
                  - key: houseNumberOrName
                    type: text
                  - key: city
                    type: text
                  - key: postalCode
                    type: text
                  - key: stateOrProvince
                    optional: true
                    type: text
                  - items:
                      - id: NL
                        name: Netherlands
                      - id: BE
                        name: Belgium
                    key: country
                    type: select
                    value: NL
                key: billingAddress
                type: address
              - key: separateDeliveryAddress
                optional: true
                type: boolean
                value: "false"
              - details:
                  - key: street
                    type: text
                  - key: houseNumberOrName
                    type: text
                  - key: city
                    type: text
                  - key: postalCode
                    type: text
                  - key: stateOrProvince
                    optional: true
                    type: text
                  - items:
                      - id: NL
                        name: Netherlands
                      - id: BE
                        name: Belgium
                    key: country
                    type: select
                    value: NL
                key: deliveryAddress
                optional: true
                type: address
            name: AfterPay Invoice
            type: afterpay_default
          - name: Pay later with Klarna.
            type: klarna
          - details:
              - key: sepa.ownerName
                type: text
              - key: sepa.ibanNumber
                type: text
            name: SEPA Direct Debit
            type: sepadirectdebit
          - name: Paysafecard
            type: paysafecard
          - name: Bijenkorf Cadeaucard
            type: bijcadeaucard
          - name: Fonq Giftcard
            type: fonqgiftcard
          - name: Bank Transfer (NL)
            type: bankTransfer_NL
          - name: Pathe Giftcard
            type: pathegiftcard
          - name: VVV Giftcard
            type: vvvgiftcard
          - name: Podium Card
            type: podiumcard
          - name: RatePay Direct Debit
            type: ratepay_directdebit
          - name: Rituals Giftcard
            type: rituals
          - name: Hunkemoller Lingerie Card
            type: hmlingerie
          - name: Primera Cadeaukaart
            type: primeracadeaucard
          - name: Fashioncheque
            type: fashioncheque
          - name: NETELLER
            type: neteller
          - name: Adyen Voucher
            type: adyen_test_voucher
          - name: AfterPay B2B
            type: afterpay_b2b
          - name: AfterPay DirectDebit
            type: afterpay_directdebit
          - name: AliPay
            type: alipay
          - name: AliPay
            type: alipay_wap
          - details:
              - key: additionalData.androidpay.token
                type: androidPayToken
            name: Android Pay
            type: androidpay
          - details:
              - key: additionalData.applepay.token
                type: applePayToken
            name: Apple Pay
            type: applepay
          - name: Baby Gift Card
            type: babygiftcard
          - name: SEPA Bank Transfer
            type: bankTransfer_IBAN
          - name: Bloemen Giftcard
            type: bloemengiftcard
          - name: Boekenbon Giftcard
            type: boekenbon
          - name: Cash-Ticket
            type: cashticket
          - name: Chasin Giftcard
            type: chasingiftcard
          - name: ClickandBuy
            type: clickandbuy
          - name: Costes Giftcard
            type: costesgiftcard
          - name: custom_settlement
            type: custom_settlement
          - name: eft_directdebit_CA
            type: eft_directdebit_CA
          - name: Nationale Entertainment Card
            type: entertainmentcard
          - name: Expert Cadeaukaart
            type: expertgiftcard
          - name: FijnCadeau
            type: fijncadeau
          - name: Fleurop Bloemenbon
            type: fleuropbloemenbon
          - name: Gall & Gall
            type: gallgall
          - name: Generic GiftCard
            type: genericgiftcard
          - name: GiftFor2
            type: giftfor2card
          - name: Givex
            type: givex
          - name: Goldsmiths Card
            type: goldsmithscard
          - name: Hunkemoller Member Card
            type: hmclub
          - name: Phone Payment
            type: ivr
          - name: Landline phone
            type: ivrLandline
          - name: Mobile phone
            type: ivrMobile
          - name: Kado Wereld
            type: kadowereld
          - name: Karen Millen GiftCard
            type: karenmillengiftcard
          - name: Leisure Card
            type: leisurecard
          - name: Loods5 Cadeaukaart
            type: loods5giftcard
          - name: Loods5 Tegoedbon
            type: loods5prepaidcard
          - details:
              - key: additionalData.amazonPayToken
                type: text
            name: Amazon Pay
            supportsRecurring: true
            type: amazonpay
          - name: MOLPoints
            type: molpay_points
          - name: Moneybookers
            type: moneybookers
          - name: De Nationale Musicalcard
            type: musicalcard
          - name: Nationale Bioscoopbon
            type: nationalebioscoopbon
          - name: Nationale Tuinbon
            type: nationaletuinbon
          - name: Nationale Verwen Cadeaubon
            type: nationaleverwencadeaubon
          - name: Onebip
            type: onebip
          - details:
              - key: additionalData.paywithgoogle.token
                type: payWithGoogleToken
            name: Google Pay
            type: paywithgoogle
          - name: Plastix
            type: plastix
          - name: Pluim
            type: pluimgiftcard
          - name: Illicado Gift Card
            type: prosodie_illicado
          - name: RatePay Invoice
            type: ratepay
          - name: Rob Peetoom Giftcard
            type: robpeetoomgiftcard
          - name: Shoes&Accessories Cadeau
            type: sagiftcard
          - name: Score Giftcard
            type: scoregiftcard
          - name: Premium SMS
            type: sms
          - name: SVS
            type: svs
          - name: TCS Test GiftCard
            type: tcstestgiftcard
          - name: The Sting Giftcard
            type: thestinggiftcard
          - name: Ukash
            type: ukash
          - name: UnionPay
            type: unionpay
          - name: Valuelink
            type: valuelink
          - name: V&D Cadeaukaart
            type: vdcadeaucard
          - details:
              - key: additionalData.visacheckout.callId
                type: text
            name: Visa Checkout
            type: visacheckout
          - name: VVV Cadeaubon
            type: vvvcadeaubon
          - name: Webshop Giftcard
            type: webshopgiftcard
          - name: WE Fashion Giftcard
            type: wefashiongiftcard
          - name: Western Union
            type: westernunion
          - name: Winkel Cheque
            type: winkelcheque
          - name: Your Gift
            type: yourgift
    post-paymentSession-android:
      summary: Set up a payment session (Android)
      value:
        amount:
          currency: EUR
          value: 17408
        channel: Android
        countryCode: NL
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        reference: Your order number
        returnUrl: app://
        sessionValidity: 2017-04-06T13:09:13Z
        shopperLocale: nl_NL
        shopperReference: YOUR_SHOPPER_REFERENCE
        token: TOKEN_YOU_GET_FROM_CHECKOUT_SDK
    post-paymentSession-ios:
      summary: Set up a payment session (iOS)
      value:
        amount:
          currency: EUR
          value: 17408
        channel: iOS
        countryCode: NL
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        reference: Your order number
        returnUrl: app://
        sessionValidity: 2017-04-06T13:09:13Z
        shopperLocale: nl_NL
        shopperReference: YOUR_SHOPPER_REFERENCE
        token: TOKEN_YOU_GET_FROM_CHECKOUT_SDK
    post-paymentSession-split:
      summary: Split a payment between a sub-merchant and a platform account
      value:
        additionalData:
          split.api: "1"
          split.currencyCode: EUR
          split.item1.account: "151272963"
          split.item1.amount: "6000"
          split.item1.description: "Porcelain Doll: Eliza (20cm)"
          split.item1.reference: "6124145"
          split.item1.type: MarketPlace
          split.item2.amount: "200"
          split.item2.reference: "6124146"
          split.item2.type: Commission
          split.nrOfItems: "2"
          split.totalAmount: "6200"
        amount:
          currency: EUR
          value: 6200
        channel: Android
        countryCode: NL
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        reference: Your order number
        returnUrl: app://
        sessionValidity: 2017-04-06T13:09:13Z
        shopperLocale: nl_NL
        shopperReference: YOUR_SHOPPER_REFERENCE
        token: TOKEN_YOU_GET_FROM_CHECKOUT_SDK
    post-paymentSession-web:
      summary: Set up a payment session (Web)
      value:
        amount:
          currency: EUR
          value: 17408
        channel: Web
        countryCode: NL
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        origin: https://www.yourwebsite.com
        reference: Your order number
        returnUrl: https://www.yourshop.com/checkout/result
        sdkVersion: 1.3.0
        shopperLocale: nl_NL
        shopperReference: YOUR_SHOPPER_REFERENCE
    post-paymentSession-web-200:
      summary: Example response for request 'web'
      value:
        paymentSession: 
    post-payments-applepay:
      summary: Make an Apple Pay payment
      value:
        amount:
          currency: USD
          value: 1000
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        paymentMethod:
          applePayToken: VNRWtuNlNEWkRCSm1xWndjMDFFbktkQU...
          type: applepay
        reference: Your order number
        returnUrl: https://your-company.com/...
    post-payments-card-3d-secure-direct:
      summary: Make a card payment with 3D Secure redirect authentication
      value:
        amount:
          currency: USD
          value: 1000
        browserInfo:
          acceptHeader: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
          userAgent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9) Gecko/2008052912 Firefox/3.0
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        paymentMethod:
          cvc: "737"
          expiryMonth: "03"
          expiryYear: "2030"
          holderName: John Smith
          number: "4212345678901237"
          type: scheme
        reference: Your order number
        returnUrl: https://your-company.com/...
    post-payments-card-3d-secure-direct-200:
      summary: Successful card payment with 3D Secure redirect authentication
      value:
        additionalData:
          acquirerCode: TestPmmAcquirer
          acquirerReference: 8PQMP9SJ7DN
          authCode: "074516"
          avsResult: 4 AVS not supported for this card type
          avsResultRaw: "4"
          cvcResult: 1 Matches
          cvcResultRaw: M
          refusalReasonRaw: AUTHORISED
        pspReference: 993617894903480A
        resultCode: Authorised
    post-payments-card-3d-secure-securedfields:
      summary: Make a payment with 3D Secure 2 native authentication, using encrypted card details
      value:
        amount:
          currency: USD
          value: 1000
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        paymentMethod:
          encryptedCardNumber: test_4212345678901237
          encryptedExpiryMonth: test_03
          encryptedExpiryYear: test_2030
          encryptedSecurityCode: test_737
          holderName: John Smith
          type: scheme
        reference: Your order number
        returnUrl: https://your-company.com/...
    post-payments-card-3d-secure-securedfields-200:
      summary: Successful payment with 3D Secure 2 native authentication, using encrypted card details
      value:
        additionalData:
          acquirerCode: TestPmmAcquirer
          acquirerReference: 8PQMP9SJH66
          authCode: "083996"
          avsResult: 4 AVS not supported for this card type
          avsResultRaw: "4"
          cvcResult: 1 Matches
          cvcResultRaw: M
          refusalReasonRaw: AUTHORISED
        pspReference: 993617894905481G
        resultCode: Authorised
    post-payments-card-direct:
      summary: Make a card payment
      value:
        amount:
          currency: USD
          value: 1000
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        paymentMethod:
          cvc: "737"
          expiryMonth: "03"
          expiryYear: "2030"
          holderName: John Smith
          number: "4111111111111111"
          type: scheme
        reference: Your order number
        returnUrl: https://your-company.com/...
    post-payments-card-direct-200:
      summary: Successful card payment
      value:
        additionalData:
          acquirerCode: TestPmmAcquirer
          acquirerReference: 8PQMP9SJQUL
          authCode: "036240"
          avsResult: 4 AVS not supported for this card type
          avsResultRaw: "4"
          cvcResult: 1 Matches
          cvcResultRaw: M
          refusalReasonRaw: AUTHORISED
        pspReference: 993617894906488A
        resultCode: Authorised
    post-payments-card-securedfields:
      summary: Make a card payment using encrypted card details
      value:
        amount:
          currency: USD
          value: 1000
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        paymentMethod:
          encryptedCardNumber: test_4111111111111111
          encryptedExpiryMonth: test_03
          encryptedExpiryYear: test_2030
          encryptedSecurityCode: test_737
          type: scheme
        reference: Your order number
        returnUrl: https://your-company.com/...
    post-payments-card-securedfields-200:
      summary: Successful card payment using encrypted card details
      value:
        additionalData:
          acquirerCode: TestPmmAcquirer
          acquirerReference: 8PQMP9SM92L
          authCode: "064649"
          avsResult: 4 AVS not supported for this card type
          avsResultRaw: "4"
          cvcResult: 1 Matches
          cvcResultRaw: M
          refusalReasonRaw: AUTHORISED
        pspReference: 993617894914488A
        resultCode: Authorised
    post-payments-details-3d-secure:
      description: Example request when submitting a 3D Secure payment
      summary: Submit details for the 3D Secure payment
      value:
        details:
          MD: Ab02b4c0!BQABAgCW5sxB4e/==...
          PaRes: eNrNV0mTo7gS...
        paymentData: Hee57361f99....
    post-payments-details-3d-secure-200:
      description: Example response when submitting a 3D Secure result
      summary: Payment authorised
      value:
        pspReference: V4HZ4RBFJGXXGN82
        resultCode: Authorised
    post-payments-oneclick-direct:
      summary: Make a one-off payment with a token and CVV
      value:
        amount:
          currency: USD
          value: 1000
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        paymentMethod:
          cvc: "737"
          recurringDetailReference: "8416038790273850"
          type: scheme
        reference: Your order number
        returnUrl: https://your-company.com/...
        shopperReference: YOUR_UNIQUE_SHOPPER_ID_6738oneoff
    post-payments-oneclick-securedfields:
      summary: Make a one-off payment with a token and CVV, using encrypted card details
      value:
        amount:
          currency: USD
          value: 1000
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        paymentMethod:
          encryptedSecurityCode: adyenjs_0_1_18$MT6ppy0FAMVMLH...
          recurringDetailReference: "8416038790273850"
          type: scheme
        reference: Your order number
        returnUrl: https://your-company.com/...
        shopperReference: YOUR_UNIQUE_SHOPPER_ID_6738oneoff
    post-payments-paymentPspReference-amountUpdates-amount-update:
      description: Example request to update the amount of a payment
      summary: Update the amount of an authorised payment
      value:
        amount:
          currency: EUR
          value: 2500
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        reference: YOUR_UNIQUE_REFERENCE
    post-payments-paymentPspReference-amountUpdates-amount-update-201:
      description: Example response when an amount update was requested
      summary: Amount update requested
      value:
        amount:
          currency: EUR
          value: 2500
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        paymentPspReference: 993617894903480A
        pspReference: 993617894906488A
        reference: YOUR_UNIQUE_REFERENCE
        status: received
    post-payments-paymentPspReference-cancels-cancel-with-psp-reference:
      description: Example cancel request with a PSP reference
      summary: Cancel payment using a PSP reference
      value:
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        reference: YOUR_UNIQUE_REFERENCE
    post-payments-paymentPspReference-cancels-cancel-with-psp-reference-201:
      description: Example response when a refund was requested
      summary: Refund requested
      value:
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        paymentPspReference: 993617894903480A
        pspReference: 993617894906488A
        reference: YOUR_UNIQUE_REFERENCE
        status: received
    post-payments-paymentPspReference-captures-capture:
      description: Example capture request
      summary: Capture an authorised payment
      value:
        amount:
          currency: EUR
          value: 2000
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        reference: YOUR_UNIQUE_REFERENCE
    post-payments-paymentPspReference-captures-capture-201:
      description: Example response when a capture was requested
      summary: Capture requested
      value:
        amount:
          currency: EUR
          value: 2000
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        paymentPspReference: 993617894903480A
        pspReference: 993617894906488A
        reference: YOUR_UNIQUE_REFERENCE
        status: received
    post-payments-paymentPspReference-refunds-refund:
      description: Example refund request
      summary: Refund a payment
      value:
        amount:
          currency: EUR
          value: 2500
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        reference: YOUR_UNIQUE_REFERENCE
    post-payments-paymentPspReference-refunds-refund-201:
      description: Example response when a refund was requested
      summary: Refund requested
      value:
        amount:
          currency: EUR
          value: 2500
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        paymentPspReference: 993617894903480A
        pspReference: 993617894906488A
        reference: YOUR_UNIQUE_REFERENCE
        status: received
    post-payments-paymentPspReference-reversals-reversal:
      description: Example request to reverse a payment
      summary: Reverse (cancel or refund) a payment
      value:
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        reference: YOUR_UNIQUE_REFERENCE
    post-payments-paymentPspReference-reversals-reversal-201:
      description: Example response when a payment reversal was requested
      summary: Payment reversal requested
      value:
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        paymentPspReference: 993617894903480A
        pspReference: 993617894906488A
        reference: YOUR_UNIQUE_REFERENCE
        status: received
    post-payments-result-basic:
      summary: Verify payment results
      value:
        payload: VALUE_YOU_GET_FROM_CHECKOUT_SDK
    post-payments-result-basic-200:
      summary: Payment authorised
      value:
        authResponse: Authorised
        merchantReference: Your order number
        paymentMethod: ideal
        pspReference: V4HZ4RBFJGXXGN82
        shopperLocale: nl_NL
    post-payments-split-balanceplatform:
      summary: Split a payment between balance accounts
      value:
        amount:
          currency: USD
          value: 40000
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        paymentMethod:
          cvc: "737"
          expiryMonth: "03"
          expiryYear: "2030"
          holderName: John Smith
          number: "4111111111111111"
          type: scheme
        reference: YOUR_ORDER_NUMBER
        returnUrl: https://your-company.com/...
        splits:
          - account: BA00000000000000000000001
            amount:
              value: 39600
            description: Your description for the sale amount
            reference: Your reference for the sale amount
            type: BalanceAccount
          - amount:
              value: 400
            description: Your description for the commission
            reference: Your reference for the commission
            type: Commission
          - account: BA00000000000000000000001
            description: Your description for the fees
            reference: Your reference for the fees
            type: PaymentFee
    post-payments-split-balanceplatform-200:
      summary: Payment split between balance accounts
      value:
        additionalData:
          PaymentAccountReference: 6006491286999921374...
          acquirerAccountCode: YOUR_ACQUIRER_ACCOUNT
          acquirerCode: YOUR_ACQUIRER_CODE
          acquirerReference: YOUR_ACQUIRER_REFERENCE
          alias: "8915844059375211"
          aliasType: Default
          authCode: "035450"
          authorisationMid: "50"
          authorisedAmountCurrency: USD
          authorisedAmountValue: "40000"
          avsResult: 5 No AVS data provided
          avsResultRaw: "5"
          cardBin: "411111"
          cardHolderName: John Smith
          cardIssuingBank: ISSUING_BANK_CUSTOMER
          cardIssuingCountry: NL
          cardPaymentMethod: visa
          cardSummary: "1111"
          cavvAlgorithm: N/A
          cvcResult: 1 Matches
          cvcResultRaw: M
          donationToken: 81234567890123456...
          eci: N/A
          expiryDate: 3/2030
          fraudManualReview: "false"
          fraudResultType: GREEN
          fundsAvailability: I
          isCardCommercial: unknown
          issuerBin: "41111111"
          issuerCountry: NL
          liabilityShift: "false"
          merchantReference: YOUR_ORDER_NUMBER
          networkTxReference: "777718270854480"
          paymentMethod: visa
          paymentMethodVariant: visa
          payoutEligible: Y
          refusalReasonRaw: AUTHORISED
          retry.attempt1.acquirer: YOUR_ACQUIRER_CODE
          retry.attempt1.acquirerAccount: YOUR_ACQUIRER_ACCOUNT
          retry.attempt1.avsResultRaw: "5"
          retry.attempt1.rawResponse: AUTHORISED
          retry.attempt1.responseCode: Approved
          retry.attempt1.shopperInteraction: Ecommerce
          threeDAuthenticated: "false"
          threeDAuthenticatedResponse: N/A
          threeDOffered: "false"
          threeDOfferedResponse: N/A
          xid: N/A
        pspReference: PPKFQ89R6QRXGN82
        resultCode: Authorised
    post-payments-split-classic:
      summary: Split a payment in a Classic Platforms integration
      value:
        amount:
          currency: EUR
          value: 6200
        merchantAccount: YOUR_MERCHANT_ACCOUNT
        paymentMethod:
          cvc: "737"
          expiryMonth: "03"
          expiryYear: "2030"
          holderName: John Smith
          number: "4111111111111111"
          type: scheme
        reference: YOUR_ORDER_NUMBER
        returnUrl: https://your-company.com/...
        splits:
          - account: "151272963"
            amount:
              value: 6000
            description: "Porcelain Doll: Eliza (20cm)"
            reference: "6124145"
            type: MarketPlace
          - amount:
              value: 200
            reference: "6124146"
            type: Commission
  headers:
    Idempotency-Key:
      description: The idempotency key used for processing the request. Present if the key was provided in the request.
      schema:
        type: string
  parameters:
    Idempotency-Key:
      description: A unique identifier for the message with a maximum of 64 characters (we recommend a UUID).
      example: 37ca9c97-d1d1-4c62-89e8-706891a563ed
      in: header
      name: Idempotency-Key
      schema:
        type: string
  schemas:
    AchDetails:
      additionalProperties: false
      properties:
        bankAccountNumber:
          description: The bank account number (without separators).
          type: string
        bankAccountType:
          description: The bank account type (checking, savings...).
          enum:
            - balance
            - checking
            - deposit
            - general
            - other
            - payment
            - savings
          type: string
        bankLocationId:
          description: The bank routing number of the account. The field value is `nil` in most cases.
          type: string
        encryptedBankAccountNumber:
          description: Encrypted bank account number. The bank account number (without separators).
          type: string
        encryptedBankLocationId:
          description: Encrypted location id. The bank routing number of the account. The field value is `nil` in most cases.
          type: string
        ownerName:
          description: |-
            The name of the bank account holder.
            If you submit a name with non-Latin characters, we automatically replace some of them with corresponding Latin characters to meet the FATF recommendations. For example:
            * χ12 is converted to ch12.
            * üA is converted to euA.
            * Peter Møller is converted to Peter Mller, because banks don't accept 'ø'.
            After replacement, the ownerName must have at least three alphanumeric characters (A-Z, a-z, 0-9), and at least one of them must be a valid Latin character (A-Z, a-z). For example:
            * John17 - allowed.
            * J17 - allowed.
            * 171 - not allowed.
            * John-7 - allowed.
            > If provided details don't match the required format, the response returns the error message: 203 'Invalid bank account holder name'.
          type: string
        recurringDetailReference:
          description: This is the `recurringDetailReference` returned in the response when you created the token.
          type: string
        type:
          default: ach
          description: "**ach**"
          enum:
            - ach
            - ach_plaid
          type: string
      required:
        - bankAccountNumber
      title: ACH Direct Debit
      type: object
    AdditionalData3DSecure:
      properties:
        allow3DS2:
          description: |
            Indicates if you are able to process 3D Secure 2 transactions natively on your payment page. Send this parameter when you are using `/payments` endpoint with any of our [native 3D Secure 2 solutions](https://docs.adyen.com/online-payments/3d-secure/native-3ds2).

             > This parameter only indicates readiness to support native 3D Secure 2 authentication. To specify if you _want_ to perform 3D Secure, use [Dynamic 3D Secure](/risk-management/dynamic-3d-secure) or send the `executeThreeD` parameter.

            Possible values:
            * **true** - Ready to support native 3D Secure 2 authentication. Setting this to true does not mean always applying 3D Secure 2. Adyen still selects the version of 3D Secure based on configuration to optimize authorisation rates and improve the shopper's experience.
            * **false** – Not ready to support native 3D Secure 2 authentication. Adyen will not offer 3D Secure 2 to your shopper regardless of your configuration.
          type: string
        challengeWindowSize:
          description: |-
            Dimensions of the 3DS2 challenge window to be displayed to the cardholder.

            Possible values:

            * **01** - size of 250x400 
            * **02** - size of 390x400
            * **03** - size of 500x600
            * **04** - size of 600x400
            * **05** - Fullscreen
          enum:
            - "01"
            - "02"
            - "03"
            - "04"
            - "05"
          type: string
        executeThreeD:
          description: |
            Indicates if you want to perform 3D Secure authentication on a transaction.

             > Alternatively, you can use [Dynamic 3D Secure](/risk-management/dynamic-3d-secure) to configure rules for applying 3D Secure.

            Possible values:
            * **true** – Perform 3D Secure authentication.
            * **false** – Don't perform 3D Secure authentication. Note that this setting results in refusals if the issuer mandates 3D Secure because of the PSD2 directive  or other, national regulations. 
          type: string
        mpiImplementationType:
          description: In case of Secure+, this field must be set to **CUPSecurePlus**.
          type: string
        scaExemption:
          description: |-
            Indicates the [exemption type](https://docs.adyen.com/payments-fundamentals/psd2-sca-compliance-and-implementation-guide#specifypreferenceinyourapirequest) that you want to request for the transaction.

             Possible values:
            * **lowValue** 
            * **secureCorporate** 
            * **trustedBeneficiary** 
            * **transactionRiskAnalysis** 
          type: string
        threeDSVersion:
          description: |+
            Indicates your preference for the 3D Secure version. 
            > If you use this parameter, you override the checks from Adyen's Authentication Engine. We recommend to use this field only if you have an extensive knowledge of 3D Secure.

            Possible values:
            * **1.0.2**: Apply 3D Secure version 1.0.2. 
            * **2.1.0**: Apply 3D Secure version 2.1.0. 
            * **2.2.0**: Apply 3D Secure version 2.2.0. If the issuer does not support version 2.2.0, we will fall back to 2.1.0.

            The following rules apply:
            * If you prefer 2.1.0 or 2.2.0 but we receive a negative `transStatus` in the `ARes`, we will apply the fallback policy configured in your account. For example, if the configuration is to fall back to 3D Secure 1, we will apply version 1.0.2.
            * If you prefer 2.1.0 or 2.2.0 but the BIN is not enrolled, you will receive an error.

          type: string
      type: object
    AdditionalDataAirline:
      properties:
        airline.agency_invoice_number:
          description: |-
            The reference number for the invoice, issued by the agency.
            * Encoding: ASCII
            * minLength: 1 character
            * maxLength: 6 characters
          type: string
        airline.agency_plan_name:
          description: |-
            The two-letter agency plan identifier.
            * Encoding: ASCII
            * minLength: 2 characters
            * maxLength: 2 characters
          type: string
        airline.airline_code:
          description: |-
            The [IATA](https://www.iata.org/services/pages/codes.aspx) 3-digit accounting code (PAX) that identifies the carrier.
            * Format: IATA 3-digit accounting code (PAX)
            * Example: KLM = 074
            * minLength: 3 characters
            * maxLength: 3 characters
            * Must not be all spaces
            *Must not be all zeros.
          type: string
        airline.airline_designator_code:
          description: |-
            The [IATA](https://www.iata.org/services/pages/codes.aspx) 2-letter accounting code (PAX) that identifies the carrier.
            * Encoding: ASCII
            * Example: KLM = KL
            * minLength: 2 characters
            * maxLength: 2 characters
            * Must not be all spaces
            *Must not be all zeros.
          type: string
        airline.boarding_fee:
          description: |-
            The amount charged for boarding the plane, in [minor units](https://docs.adyen.com/development-resources/currency-codes).
            * Encoding: Numeric
            * minLength: 1 character
            * maxLength: 18 characters
          type: string
        airline.computerized_reservation_system:
          description: |-
            The [CRS](https://en.wikipedia.org/wiki/Computer_reservation_system) used to make the reservation and purchase the ticket.
            * Encoding: ASCII
            * minLength: 4 characters
            * maxLength: 4 characters
          type: string
        airline.customer_reference_number:
          description: |-
            The alphanumeric customer reference number.
            * Encoding: ASCII
            * maxLength: 20 characters
            * If you send more than 20 characters, the customer reference number is truncated
            * Must not be all spaces
          type: string
        airline.document_type:
          description: |-
            A code that identifies the type of item bought. The description of the code can appear on credit card statements.
            * Encoding: ASCII
            * Example: Passenger ticket = 01
            * minLength: 2 characters
            * maxLength: 2 characters
          type: string
        airline.flight_date:
          description: |-
            The flight departure date. Local time `(HH:mm)` is optional.
            * Date format: `yyyy-MM-dd`
            * Date and time format: `yyyy-MM-dd HH:mm`
            * minLength: 10 characters
            * maxLength: 16 characters
          type: string
        airline.leg.carrier_code:
          description: |-
            The [IATA](https://www.iata.org/services/pages/codes.aspx) 2-letter accounting code (PAX) that identifies the carrier.
            This field is required if the airline data includes leg details.
            * Example: KLM = KL
            * minLength: 2 characters
            * maxLength: 2 characters
            * Must not be all spaces
            *Must not be all zeros.
          type: string
        airline.leg.class_of_travel:
          description: |-
            A one-letter travel class identifier.
             The following are common:
             * F: first class
            * J: business class
            * Y: economy class
            * W: premium economy

            * Encoding: ASCII
            * minLength: 1 character
            * maxLength: 1 character
            * Must not be all spaces
            *Must not be all zeros.
          type: string
        airline.leg.date_of_travel:
          description: |-
            	
            Date and time of travel in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format `yyyy-MM-dd HH:mm`.
            * Encoding: ASCII
            * minLength: 16 characters
            * maxLength: 16 characters
          type: string
        airline.leg.depart_airport:
          description: |-
            The [IATA](https://www.iata.org/services/pages/codes.aspx) three-letter airport code of the departure airport.
            This field is required if the airline data includes leg details.

            * Encoding: ASCII
            * Example: Amsterdam = AMS
            * minLength: 3 characters
            * maxLength: 3 characters
            * Must not be all spaces
            *Must not be all zeros.
          type: string
        airline.leg.depart_tax:
          description: |-
            The amount of [departure tax](https://en.wikipedia.org/wiki/Departure_tax) charged, in [minor units](https://docs.adyen.com/development-resources/currency-codes).
            * Encoding: Numeric
            * minLength: 1
            * maxLength: 12
            *Must not be all zeros.
          type: string
        airline.leg.destination_code:
          description: |-
            The [IATA](https://www.iata.org/services/pages/codes.aspx) 3-letter airport code of the destination airport.
            This field is required if the airline data includes leg details.
            * Example: Amsterdam = AMS
            * Encoding: ASCII
            * minLength: 3 characters
            * maxLength: 3 characters
            * Must not be all spaces
            *Must not be all zeros.
          type: string
        airline.leg.fare_base_code:
          description: |-
            The [fare basis code](https://en.wikipedia.org/wiki/Fare_basis_code), alphanumeric.
            * minLength: 1 character
            * maxLength: 6 characters
            * Must not be all spaces
            *Must not be all zeros.
          type: string
        airline.leg.flight_number:
          description: |-
            The flight identifier.
            * minLength: 1 character
            * maxLength: 5 characters
            * Must not be all spaces
            *Must not be all zeros.
          type: string
        airline.leg.stop_over_code:
          description: |-
            A one-letter code that indicates whether the passenger is entitled to make a stopover. Can be a space, O if the passenger is entitled to make a stopover, or X if they are not.
            * Encoding: ASCII
            * minLength: 1 character
            * maxLength: 1 character
          type: string
        airline.passenger.date_of_birth:
          description: |-
            The passenger's date of birth.

            Date format: `yyyy-MM-dd`
            * minLength: 10
            * maxLength: 10
          type: string
        airline.passenger.first_name:
          description: |-
            The passenger's first name.
            > This field is required if the airline data includes passenger details or leg details.
            * Encoding: ASCII
          type: string
        airline.passenger.last_name:
          description: |-
            The passenger's last name.
            > This field is required if the airline data includes passenger details or leg details.
            * Encoding: ASCII
          type: string
        airline.passenger.telephone_number:
          description: |-
            The passenger's telephone number, including country code. This is an alphanumeric field that can include the '+' and '-' signs.
            * Encoding: ASCII
            * minLength: 3 characters
            * maxLength: 30 characters
          type: string
        airline.passenger.traveller_type:
          description: |-
            The IATA passenger type code (PTC).
            * Encoding: ASCII
            * minLength: 3 characters
            * maxLength: 6 characters
          type: string
        airline.passenger_name:
          description: |-
            The passenger's name, initials, and title.
            * Format: last name + first name or initials + title
            * Example: *FLYER / MARY MS*
            * minLength: 1 character
            * maxLength: 20 characters
            * If you send more than 20 characters, the name is truncated
            * Must not be all spaces 
            *Must not be all zeros.
          type: string
        airline.ticket_issue_address:
          description: |-
            The address of the organization that issued the ticket.
            * minLength: 0 characters
            * maxLength: 16 characters
          type: string
        airline.ticket_number:
          description: |-
            The ticket's unique identifier.
            * minLength: 1 character
            * maxLength: 15 characters
            * Must not be all spaces
            *Must not be all zeros.
          type: string
        airline.travel_agency_code:
          description: |-
            The unique identifier from IATA or ARC for the travel agency that issues the ticket.
            * Encoding: ASCII
            * minLength: 1 character
            * maxLength: 8 characters
            * Must not be all spaces
            *Must not be all zeros.
          type: string
        airline.travel_agency_name:
          description: |-
            The name of the travel agency.

            * Encoding: ASCII
            * minLength: 1 character
            * maxLength: 25 characters
            * Must not be all spaces
            *Must not be all zeros.
          type: string
      required:
        - airline.passenger_name
      type: object
    AdditionalDataCarRental:
      properties:
        carRental.checkOutDate:
          description: |-
            The pick-up date.
            * Date format: `yyyyMMdd`
          type: string
        carRental.customerServiceTollFreeNumber:
          description: |-
            The customer service phone number of the car rental company.
            * Format: Alphanumeric
            * maxLength: 17
            * For US and CA numbers must be 10 characters in length
            * Must not start with a space
            * Must not contain any special characters such as + or -
            *Must not be all zeros.
          type: string
        carRental.daysRented:
          description: |-
            Number of days for which the car is being rented.
            * Format: Numeric
            * maxLength: 4
            * Must not be all spaces
          type: string
        carRental.fuelCharges:
          description: |-
            Any fuel charges associated with the rental, in [minor units](https://docs.adyen.com/development-resources/currency-codes).
            * Format: Numeric
            * maxLength: 12
          type: string
        carRental.insuranceCharges:
          description: |-
            Any insurance charges associated with the rental, in [minor units](https://docs.adyen.com/development-resources/currency-codes).
            * Format: Numeric
            * maxLength: 12
            * Must not be all spaces
            *Must not be all zeros.
          type: string
        carRental.locationCity:
          description: |-
            The city where the car is rented.
            * Format: Alphanumeric
            * maxLength: 18
            * Must not start with a space or be all spaces
            *Must not be all zeros.
          type: string
        carRental.locationCountry:
          description: |-
            The country where the car is rented, in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format.
            * Format: Alphanumeric
            * maxLength: 2
          type: string
        carRental.locationStateProvince:
          description: |-
            The state or province where the car is rented.
            * Format: Alphanumeric
            * maxLength: 2
            * Must not start with a space or be all spaces
            *Must not be all zeros.
          type: string
        carRental.noShowIndicator:
          description: |-
            Indicates if the customer didn't pick up their rental car.
            * Y - Customer did not pick up their car
            * N - Not applicable
          type: string
        carRental.oneWayDropOffCharges:
          description: |-
            The charge for not returning a car to the original rental location, in [minor units](https://docs.adyen.com/development-resources/currency-codes).
            * maxLength: 12
          type: string
        carRental.rate:
          description: |-
            The daily rental rate, in [minor units](https://docs.adyen.com/development-resources/currency-codes).
            * Format: Alphanumeric
            * maxLength: 12
          type: string
        carRental.rateIndicator:
          description: |-
            Specifies whether the given rate is applied daily or weekly.
            * D - Daily rate
            * W - Weekly rate
          type: string
        carRental.rentalAgreementNumber:
          description: |-
            The rental agreement number for the car rental.
            * Format: Alphanumeric
            * maxLength: 9
            * Must not start with a space or be all spaces
            *Must not be all zeros.
          type: string
        carRental.rentalClassId:
          description: |-
            The classification of the rental car.
            * Format: Alphanumeric
            * maxLength: 4
            * Must not start with a space or be all spaces
            *Must not be all zeros.
          type: string
        carRental.renterName:
          description: |-
            The name of the person renting the car.
            * Format: Alphanumeric
            * maxLength: 26
            * If you send more than 26 characters, the name is truncated
            * Must not start with a space or be all spaces
            *Must not be all zeros.
          type: string
        carRental.returnCity:
          description: |-
            The city where the car must be returned.
            * Format: Alphanumeric
            * maxLength: 18
            * Must not start with a space or be all spaces
            *Must not be all zeros.
          type: string
        carRental.returnCountry:
          description: |-
            The country where the car must be returned, in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format.
            * Format: Alphanumeric
            * maxLength: 2
          type: string
        carRental.returnDate:
          description: |-
            The last date to return the car by.
            * Date format: `yyyyMMdd`
            * maxLength: 8
          type: string
        carRental.returnLocationId:
          description: |-
            The agency code, phone number, or address abbreviation
            * Format: Alphanumeric
            * maxLength: 10
            * Must not start with a space or be all spaces
            *Must not be all zeros.
          type: string
        carRental.returnStateProvince:
          description: |-
            The state or province where the car must be returned.
            * Format: Alphanumeric
            * maxLength: 3
            * Must not start with a space or be all spaces
            *Must not be all zeros.
          type: string
        carRental.taxExemptIndicator:
          description: |-
            Indicates if the goods or services were tax-exempt, or if tax was not paid on them.

            Values:
            * Y - Goods or services were tax exempt
            * N - Tax was not collected
          type: string
        travelEntertainmentAuthData.duration:
          description: |-
            Number of days the car is rented for. This should be included in the auth message.
            * Format: Numeric
            * maxLength: 4
          type: string
        travelEntertainmentAuthData.market:
          description: |-
            Indicates what market-specific dataset will be submitted or is being submitted. Value should be 'A' for car rental. This should be included in the auth message.
            * Format: Alphanumeric
            * maxLength: 1
          type: string
      type: object
    AdditionalDataCommon:
      properties:
        RequestedTestErrorResponseCode:
          description: |-
            Triggers test scenarios that allow to replicate certain communication errors.

            Allowed values:
            * **NO_CONNECTION_AVAILABLE** – There wasn't a connection available to service the outgoing communication.
            This is a transient, retriable error since no messaging could be initiated to an issuing system (or third-party acquiring system). Therefore, the header Transient-Error: true is returned in the response. A subsequent request using the same idempotency key will be processed as if it was the first request.
            * **IOEXCEPTION_RECEIVED** – Something went wrong during transmission of the message or receiving the response.
            This is a classified as non-transient because the message could have been received by the issuing party and been acted upon. No transient error header is returned. If using idempotency, the (error) response is stored as the final result for the idempotency key. Subsequent messages with the same idempotency key not be processed beyond returning the stored response.
          type: string
        allowPartialAuth:
          description: |-
            Set to true to authorise a part of the requested amount in case the cardholder does not have enough funds on their account. 
            If a payment was partially authorised, the response includes resultCode: PartiallyAuthorised and the authorised amount in additionalData.authorisedAmountValue.
            To enable this functionality, contact our Support Team.
          type: string
        authorisationType:
          description: |-
            Flags a card payment request for either pre-authorisation or final authorisation. For more information, refer to [Authorisation types](https://docs.adyen.com/online-payments/adjust-authorisation#authorisation-types).

            Allowed values:
            * **PreAuth** – flags the payment request to be handled as a pre-authorisation.
            * **FinalAuth** – flags the payment request to be handled as a final authorisation.
          type: string
        customRoutingFlag:
          description: |-
            Allows you to determine or override the acquirer account that should be used for the transaction.

            If you need to process a payment with an acquirer different from a default one, you can set up a corresponding configuration on the Adyen payments platform. Then you can pass a custom routing flag in a payment request's additional data to target a specific acquirer.

            To enable this functionality, contact [Support](https://www.adyen.help/hc/en-us/requests/new).
          type: string
        industryUsage:
          description: |-
            In case of [asynchronous authorisation adjustment](https://docs.adyen.com/online-payments/adjust-authorisation#adjust-authorisation), this field denotes why the additional payment is made.

            Possible values:

             * **NoShow**: An incremental charge is carried out because of a no-show for a guaranteed reservation.

             * **DelayedCharge**: An incremental charge is carried out to process an additional payment after the original services have been rendered and the respective payment has been processed.
          enum:
            - NoShow
            - DelayedCharge
          type: string
        manualCapture:
          description: Set to **true** to require [manual capture](https://docs.adyen.com/online-payments/capture) for the transaction.
          type: string
        networkTxReference:
          description: |-
            Allows you to link the transaction to the original or previous one in a subscription/card-on-file chain. This field is required for token-based transactions where Adyen does not tokenize the card.

            Transaction identifier from card schemes, for example, Mastercard Trace ID or the Visa Transaction ID.

            Submit the original transaction ID of the contract in your payment request if you are not tokenizing card details with Adyen and are making a merchant-initiated transaction (MIT) for subsequent charges.

            Make sure you are sending `shopperInteraction` **ContAuth** and `recurringProcessingModel` **Subscription** or **UnscheduledCardOnFile** to ensure that the transaction is classified as MIT.
          type: string
        overwriteBrand:
          description: Boolean indicator that can be optionally used for performing debit transactions on combo cards (for example, combo cards in Brazil). This is not mandatory but we recommend that you set this to true if you want to use the `selectedBrand` value to specify how to process the transaction.
          type: string
        subMerchantCity:
          description: |-
            This field is required if the transaction is performed by a registered payment facilitator. This field must contain the city of the actual merchant's address.
            * Format: alpha-numeric.
            * Maximum length: 13 characters.
          type: string
        subMerchantCountry:
          description: |-
            This field is required if the transaction is performed by a registered payment facilitator. This field must contain the three-letter country code of the actual merchant's address.
            * Format: alpha-numeric.
            * Fixed length: 3 characters.
          type: string
        subMerchantID:
          description: |-
            This field contains an identifier of the actual merchant when a transaction is submitted via a payment facilitator. The payment facilitator must send in this unique ID.

            A unique identifier per submerchant that is required if the transaction is performed by a registered payment facilitator.
            * Format: alpha-numeric.
            * Fixed length: 15 characters.
          type: string
        subMerchantName:
          description: |-
            This field is required if the transaction is performed by a registered payment facilitator. This field must contain the name of the actual merchant.
            * Format: alpha-numeric.
            * Maximum length: 22 characters.
          type: string
        subMerchantPostalCode:
          description: |-
            This field is required if the transaction is performed by a registered payment facilitator. This field must contain the postal code of the actual merchant's address.
            * Format: alpha-numeric.
            * Maximum length: 10 characters.
          type: string
        subMerchantState:
          description: |-
            This field is required if the transaction is performed by a registered payment facilitator, and if applicable to the country. This field must contain the state code of the actual merchant's address.
            * Format: alpha-numeric.
            * Maximum length: 3 characters.
          type: string
        subMerchantStreet:
          description: |-
            This field is required if the transaction is performed by a registered payment facilitator. This field must contain the street of the actual merchant's address.
            * Format: alpha-numeric.
            * Maximum length: 60 characters.
          type: string
        subMerchantTaxId:
          description: |-
            This field is required if the transaction is performed by a registered payment facilitator. This field must contain the tax ID of the actual merchant.
            * Format: alpha-numeric.
            * Fixed length: 11 or 14 characters.
          type: string
      type: object
    AdditionalDataLevel23:
      properties:
        enhancedSchemeData.customerReference:
          description: |-
            The customer code.
            * Encoding: ASCII
            * Max length: 25 characters
            * Must not start with a space or be all spaces
            * Must not be all zeros.
          type: string
        enhancedSchemeData.destinationCountryCode:
          description: |-
            The three-letter [ISO 3166-1 alpha-3 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) for the destination address.
            * Encoding: ASCII
            * Fixed length: 3 characters
          type: string
        enhancedSchemeData.destinationPostalCode:
          description: |-
            The postal code of the destination address.
            * Encoding: ASCII
            * Max length: 10 characters
            * Must not start with a space
          type: string
        enhancedSchemeData.destinationStateProvinceCode:
          description: |-
            Destination state or province code.
            * Encoding: ASCII
            * Max length: 3 characters
            * Must not start with a space
          type: string
        enhancedSchemeData.dutyAmount:
          description: |-
            The duty amount, in [minor units](https://docs.adyen.com/development-resources/currency-codes).
            * For example, 2000 means USD 20.00.
            * Encoding: Numeric
            * Max length: 12 characters
          type: string
        enhancedSchemeData.freightAmount:
          description: |-
            The shipping amount, in [minor units](https://docs.adyen.com/development-resources/currency-codes).
            * For example, 2000 means USD 20.00.
            * Encoding: Numeric
            *Max length: 12 characters
          type: string
        enhancedSchemeData.itemDetailLine[itemNr].commodityCode:
          description: |-
            The [UNSPC commodity code](https://www.unspsc.org/) of the item.
            * Encoding: ASCII
            * Max length: 12 characters
            * Must not start with a space or be all spaces
            * Must not be all zeros.
          type: string
        enhancedSchemeData.itemDetailLine[itemNr].description:
          description: |-
            A description of the item.
            * Encoding: ASCII
            * Max length: 26 characters
            * Must not start with a space or be all spaces
            * Must not be all zeros.
          type: string
        enhancedSchemeData.itemDetailLine[itemNr].discountAmount:
          description: |-
            The discount amount, in [minor units](https://docs.adyen.com/development-resources/currency-codes).
            * For example, 2000 means USD 20.00.
            * Encoding: Numeric
            * Max length: 12 characters
          type: string
        enhancedSchemeData.itemDetailLine[itemNr].productCode:
          description: |-
            The product code.
            * Encoding: ASCII.
            * Max length: 12 characters
            * Must not start with a space or be all spaces
            * Must not be all zeros.
          type: string
        enhancedSchemeData.itemDetailLine[itemNr].quantity:
          description: |+
            The number of items. Must be an integer greater than zero.
            * Encoding: Numeric
            * Max length: 12 characters
            * Must not start with a space or be all spaces

          type: string
        enhancedSchemeData.itemDetailLine[itemNr].totalAmount:
          description: |-
            The total amount, in [minor units](https://docs.adyen.com/development-resources/currency-codes).
            * For example, 2000 means USD 20.00.
            * Max length: 12 characters
            * Must not start with a space or be all spaces
            * Must not be all zeros.
          type: string
        enhancedSchemeData.itemDetailLine[itemNr].unitOfMeasure:
          description: |-
            The unit of measurement for an item.
            * Encoding: ASCII

            Max length: 3 characters
            * Must not start with a space or be all spaces
            * Must not be all zeros.
          type: string
        enhancedSchemeData.itemDetailLine[itemNr].unitPrice:
          description: |-
            The unit price in [minor units](https://docs.adyen.com/development-resources/currency-codes).
            * For example, 2000 means USD 20.00.
            * Encoding: Numeric
            * Max length: 12 characters
            * Must not be all zeros.
          type: string
        enhancedSchemeData.orderDate:
          description: |-
            The order date.
            * Format: `ddMMyy`
            * Encoding: ASCII
            * Max length: 6 characters
          type: string
        enhancedSchemeData.shipFromPostalCode:
          description: |-
            The postal code of the address the item is shipped from.
            * Encoding: ASCII
            * Max length: 10 characters
            * Must not start with a space or be all spaces
            * Must not be all zeros.
          type: string
        enhancedSchemeData.totalTaxAmount:
          description: |-
            The total tax amount, in [minor units](https://docs.adyen.com/development-resources/currency-codes).
            * For example, 2000 means USD 20.00.
            *Encoding: Numeric
            *Max length: 12 characters
            * Must not be all zeros.
          type: string
      type: object
    AdditionalDataLodging:
      properties:
        lodging.checkInDate:
          description: |-
            The arrival date.
            * Date format: **yyyyMmDd**. For example, for 2023 April 22, **20230422**.
          type: string
        lodging.checkOutDate:
          description: |-
            The departure date.
            * Date format: **yyyyMmDd**. For example, for 2023 April 22, **20230422**.
          type: string
        lodging.customerServiceTollFreeNumber:
          description: |-
            The toll-free phone number for the lodging.
            * Format: numeric
            * Max length: 17 characters.
            * For US and CA numbers must be 10 characters in length
            * Must not start with a space
            * Must not contain any special characters such as + or -
            *Must not be all zeros.
          type: string
        lodging.fireSafetyActIndicator:
          description: |-
            Identifies that the facility complies with the Hotel and Motel Fire Safety Act of 1990. Must be 'Y' or 'N'.
            * Format: alphabetic
            * Max length: 1 character
          type: string
        lodging.folioCashAdvances:
          description: |-
            The folio cash advances, in [minor units](https://docs.adyen.com/development-resources/currency-codes).
            * Format: numeric
            * Max length: 12 characters
          type: string
        lodging.folioNumber:
          description: |-
            The card acceptor’s internal invoice or billing ID reference number.
            * Max length: 25 characters.
            * Must not start with a space
            *Must not be all zeros.
          type: string
        lodging.foodBeverageCharges:
          description: |-
            Any charges for food and beverages associated with the booking, in [minor units](https://docs.adyen.com/development-resources/currency-codes).
            * Format: numeric
            * Max length: 12 characters
          type: string
        lodging.noShowIndicator:
          description: |-
            Indicates if the customer didn't check in for their booking.
             Possible values: 
            * **Y**: the customer didn't check in 
            * **N**: the customer checked in
          type: string
        lodging.prepaidExpenses:
          description: |-
            The prepaid expenses for the booking.
            * Format: numeric
            * Max length: 12 characters
          type: string
        lodging.propertyPhoneNumber:
          description: |-
            The lodging property location's phone number.
            * Format: numeric.
            * Min length: 10 characters
            * Max length: 17 characters
            * For US and CA numbers must be 10 characters in length
            * Must not start with a space
            * Must not contain any special characters such as + or -
            *Must not be all zeros.
          type: string
        lodging.room1.numberOfNights:
          description: |-
            The total number of nights the room is booked for.
            * Format: numeric
            * Must be a number between 0 and 99
            * Max length: 4 characters
          type: string
        lodging.room1.rate:
          description: |-
            The rate for the room, in [minor units](https://docs.adyen.com/development-resources/currency-codes).
            * Format: numeric
            * Max length: 12 characters
            * Must not be a negative number
          type: string
        lodging.totalRoomTax:
          description: |-
            The total room tax amount, in [minor units](https://docs.adyen.com/development-resources/currency-codes).
            * Format: numeric
            * Max length: 12 characters
            * Must not be a negative number
          type: string
        lodging.totalTax:
          description: |-
            The total tax amount, in [minor units](https://docs.adyen.com/development-resources/currency-codes).
            * Format: numeric
            * Max length: 12 characters
            * Must not be a negative number
          type: string
        travelEntertainmentAuthData.duration:
          description: |-
            The number of nights. This should be included in the auth message.
            * Format: numeric
            * Max length: 4 characters
          type: string
        travelEntertainmentAuthData.market:
          description: |-
            Indicates what market-specific dataset will be submitted. Must be 'H' for Hotel. This should be included in the auth message.

            * Format: alphanumeric
            * Max length: 1 character
          type: string
      type: object
    AdditionalDataOpenInvoice:
      properties:
        openinvoicedata.merchantData:
          description: |-
            Holds different merchant data points like product, purchase, customer, and so on. It takes data in a Base64 encoded string.

            The `merchantData` parameter needs to be added to the `openinvoicedata` signature at the end.

            Since the field is optional, if it's not included it does not impact computing the merchant signature.

            Applies only to Klarna.

            You can contact Klarna for the format and structure of the string.
          type: string
        openinvoicedata.numberOfLines:
          description: |-
            The number of invoice lines included in `openinvoicedata`.

            There needs to be at least one line, so `numberOfLines` needs to be at least 1.
          type: string
        openinvoicedata.recipientFirstName:
          description: First name of the recipient. If the delivery address and the billing address are different, specify the `recipientFirstName` and `recipientLastName` to share the delivery address with Klarna. Otherwise, only the billing address is shared with Klarna.
          type: string
        openinvoicedata.recipientLastName:
          description: Last name of the recipient. If the delivery address and the billing address are different, specify the `recipientFirstName` and `recipientLastName` to share the delivery address with Klarna. Otherwise, only the billing address is shared with Klarna.
          type: string
        openinvoicedataLine[itemNr].currencyCode:
          description: The three-character ISO currency code.
          type: string
        openinvoicedataLine[itemNr].description:
          description: A text description of the product the invoice line refers to.
          type: string
        openinvoicedataLine[itemNr].itemAmount:
          description: |-
            The price for one item in the invoice line, represented in minor units.

            The due amount for the item, VAT excluded.
          type: string
        openinvoicedataLine[itemNr].itemId:
          description: A unique id for this item. Required for RatePay if the description of each item is not unique.
          type: string
        openinvoicedataLine[itemNr].itemVatAmount:
          description: The VAT due for one item in the invoice line, represented in minor units.
          type: string
        openinvoicedataLine[itemNr].itemVatPercentage:
          description: |-
            The VAT percentage for one item in the invoice line, represented in minor units.

            For example, 19% VAT is specified as 1900.
          type: string
        openinvoicedataLine[itemNr].numberOfItems:
          description: The number of units purchased of a specific product.
          type: string
        openinvoicedataLine[itemNr].returnShippingCompany:
          description: Name of the shipping company handling the the return shipment.
          type: string
        openinvoicedataLine[itemNr].returnTrackingNumber:
          description: The tracking number for the return of the shipment.
          type: string
        openinvoicedataLine[itemNr].returnTrackingUri:
          description: URI where the customer can track the return of their shipment.
          type: string
        openinvoicedataLine[itemNr].shippingCompany:
          description: Name of the shipping company handling the delivery.
          type: string
        openinvoicedataLine[itemNr].shippingMethod:
          description: Shipping method.
          type: string
        openinvoicedataLine[itemNr].trackingNumber:
          description: The tracking number for the shipment.
          type: string
        openinvoicedataLine[itemNr].trackingUri:
          description: URI where the customer can track their shipment.
          type: string
      type: object
    AdditionalDataOpi:
      properties:
        opi.includeTransToken:
          description: |-
            Optional boolean indicator. Set to **true** if you want an ecommerce transaction to return an `opi.transToken` as additional data in the response.

            You can store this Oracle Payment Interface token in your Oracle Opera database. For more information and required settings, see [Oracle Opera](https://docs.adyen.com/plugins/oracle-opera#opi-token-ecommerce).
          type: string
      type: object
    AdditionalDataRatepay:
      properties:
        ratepay.installmentAmount:
          description: Amount the customer has to pay each month.
          type: string
        ratepay.interestRate:
          description: Interest rate of this installment.
          type: string
        ratepay.lastInstallmentAmount:
          description: Amount of the last installment.
          type: string
        ratepay.paymentFirstday:
          description: Calendar day of the first payment.
          type: string
        ratepaydata.deliveryDate:
          description: Date the merchant delivered the goods to the customer.
          type: string
        ratepaydata.dueDate:
          description: Date by which the customer must settle the payment.
          type: string
        ratepaydata.invoiceDate:
          description: Invoice date, defined by the merchant. If not included, the invoice date is set to the delivery date.
          type: string
        ratepaydata.invoiceId:
          description: Identification name or number for the invoice, defined by the merchant.
          type: string
      type: object
    AdditionalDataRetry:
      properties:
        retry.chainAttemptNumber:
          description: |-
            The number of times the transaction (not order) has been retried between different payment service providers. For instance, the `chainAttemptNumber` set to 2 means that this transaction has been recently tried on another provider before being sent to Adyen.

            > If you submit `retry.chainAttemptNumber`, `retry.orderAttemptNumber`, and `retry.skipRetry` values, we also recommend you provide the `merchantOrderReference` to facilitate linking payment attempts together.
          type: string
        retry.orderAttemptNumber:
          description: |-
            The index of the attempt to bill a particular order, which is identified by the `merchantOrderReference` field. For example, if a recurring transaction fails and is retried one day later, then the order number for these attempts would be 1 and 2, respectively.

            > If you submit `retry.chainAttemptNumber`, `retry.orderAttemptNumber`, and `retry.skipRetry` values, we also recommend you provide the `merchantOrderReference` to facilitate linking payment attempts together.
          type: string
        retry.skipRetry:
          description: |-
            The Boolean value indicating whether Adyen should skip or retry this transaction, if possible.

            > If you submit `retry.chainAttemptNumber`, `retry.orderAttemptNumber`, and `retry.skipRetry` values, we also recommend you provide the `merchantOrderReference` to facilitate linking payment attempts together.
          type: string
      type: object
    AdditionalDataRisk:
      properties:
        riskdata.[customFieldName]:
          description: The data for your custom risk field. For more information, refer to [Create custom risk fields](https://docs.adyen.com/risk-management/configure-custom-risk-rules#step-1-create-custom-risk-fields).
          type: string
        riskdata.basket.item[itemNr].amountPerItem:
          description: The price of item in the basket, represented in [minor units](https://docs.adyen.com/development-resources/currency-codes).
          type: string
        riskdata.basket.item[itemNr].brand:
          description: Brand of the item.
          type: string
        riskdata.basket.item[itemNr].category:
          description: Category of the item.
          type: string
        riskdata.basket.item[itemNr].color:
          description: Color of the item.
          type: string
        riskdata.basket.item[itemNr].currency:
          description: The three-character [ISO currency code](https://en.wikipedia.org/wiki/ISO_4217).
          type: string
        riskdata.basket.item[itemNr].itemID:
          description: ID of the item.
          type: string
        riskdata.basket.item[itemNr].manufacturer:
          description: Manufacturer of the item.
          type: string
        riskdata.basket.item[itemNr].productTitle:
          description: A text description of the product the invoice line refers to.
          type: string
        riskdata.basket.item[itemNr].quantity:
          description: Quantity of the item purchased.
          type: string
        riskdata.basket.item[itemNr].receiverEmail:
          description: Email associated with the given product in the basket (usually in electronic gift cards).
          type: string
        riskdata.basket.item[itemNr].size:
          description: Size of the item.
          type: string
        riskdata.basket.item[itemNr].sku:
          description: "[Stock keeping unit](https://en.wikipedia.org/wiki/Stock_keeping_unit)."
          type: string
        riskdata.basket.item[itemNr].upc:
          description: "[Universal Product Code](https://en.wikipedia.org/wiki/Universal_Product_Code)."
          type: string
        riskdata.promotions.promotion[itemNr].promotionCode:
          description: Code of the promotion.
          type: string
        riskdata.promotions.promotion[itemNr].promotionDiscountAmount:
          description: The discount amount of the promotion, represented in [minor units](https://docs.adyen.com/development-resources/currency-codes).
          type: string
        riskdata.promotions.promotion[itemNr].promotionDiscountCurrency:
          description: The three-character [ISO currency code](https://en.wikipedia.org/wiki/ISO_4217).
          type: string
        riskdata.promotions.promotion[itemNr].promotionDiscountPercentage:
          description: |-
            Promotion's percentage discount. It is represented in percentage value and there is no need to include the '%' sign.

            e.g. for a promotion discount of 30%, the value of the field should be 30.
          type: string
        riskdata.promotions.promotion[itemNr].promotionName:
          description: Name of the promotion.
          type: string
        riskdata.riskProfileReference:
          description: Reference number of the risk profile that you want to apply to the payment. If not provided or left blank, the merchant-level account's default risk profile will be applied to the payment. For more information, see [dynamically assign a risk profile to a payment](https://docs.adyen.com/risk-management/create-and-use-risk-profiles#dynamically-assign-a-risk-profile-to-a-payment).
          type: string
        riskdata.skipRisk:
          description: If this parameter is provided with the value **true**, risk checks for the payment request are skipped and the transaction will not get a risk score.
          type: string
      type: object
    AdditionalDataRiskStandalone:
      properties:
        PayPal.CountryCode:
          description: Shopper's country of residence in the form of ISO standard 3166 2-character country codes.
          type: string
        PayPal.EmailId:
          description: Shopper's email.
          type: string
        PayPal.FirstName:
          description: Shopper's first name.
          type: string
        PayPal.LastName:
          description: Shopper's last name.
          type: string
        PayPal.PayerId:
          description: "Unique PayPal Customer Account identification number. Character length and limitations: 13 single-byte alphanumeric characters."
          type: string
        PayPal.Phone:
          description: Shopper's phone number.
          type: string
        PayPal.ProtectionEligibility:
          description: |-
            Allowed values:
            * **Eligible** — Merchant is protected by PayPal's Seller Protection Policy for Unauthorized Payments and Item Not Received.

            * **PartiallyEligible** — Merchant is protected by PayPal's Seller Protection Policy for Item Not Received.

            * **Ineligible** — Merchant is not protected under the Seller Protection Policy.
          type: string
        PayPal.TransactionId:
          description: Unique transaction ID of the payment.
          type: string
        avsResultRaw:
          description: "Raw AVS result received from the acquirer, where available. Example: D"
          type: string
        bin:
          description: The Bank Identification Number of a credit card, which is the first six digits of a card number. Required for [tokenized card request](https://docs.adyen.com/risk-management/standalone-risk#tokenised-pan-request).
          type: string
        cvcResultRaw:
          description: "Raw CVC result received from the acquirer, where available. Example: 1"
          type: string
        riskToken:
          description: Unique identifier or token for the shopper's card details.
          type: string
        threeDAuthenticated:
          description: "A Boolean value indicating whether 3DS authentication was completed on this payment. Example: true"
          type: string
        threeDOffered:
          description: "A Boolean value indicating whether 3DS was offered for this payment. Example: true"
          type: string
        tokenDataType:
          description: "Required for PayPal payments only. The only supported value is: **paypal**."
          type: string
      type: object
    AdditionalDataSubMerchant:
      properties:
        subMerchant.numberOfSubSellers:
          description: Required for transactions performed by registered payment facilitators. Indicates the number of sub-merchants contained in the request. For example, **3**.
          type: string
        subMerchant.subSeller[subSellerNr].city:
          description: |-
            Required for transactions performed by registered payment facilitators. The city of the sub-merchant's address.
            * Format: Alphanumeric
            * Maximum length: 13 characters
          type: string
        subMerchant.subSeller[subSellerNr].country:
          description: |-
            Required for transactions performed by registered payment facilitators. The three-letter country code of the sub-merchant's address. For example, **BRA** for Brazil. 
            * Format: [ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3)
            * Fixed length: 3 characters
          type: string
        subMerchant.subSeller[subSellerNr].id:
          description: |-
            Required for transactions performed by registered payment facilitators. A unique identifier that you create for the sub-merchant, used by schemes to identify the sub-merchant. 
            * Format: Alphanumeric
            * Maximum length: 15 characters
          type: string
        subMerchant.subSeller[subSellerNr].mcc:
          description: |-
            Required for transactions performed by registered payment facilitators. The sub-merchant's 4-digit Merchant Category Code (MCC). 
            * Format: Numeric
            * Fixed length: 4 digits
          type: string
        subMerchant.subSeller[subSellerNr].name:
          description: |-
            Required for transactions performed by registered payment facilitators. The name of the sub-merchant. Based on scheme specifications, this value will overwrite the shopper statement  that will appear in the card statement.
            * Format: Alphanumeric
            * Maximum length: 22 characters
          type: string
        subMerchant.subSeller[subSellerNr].postalCode:
          description: |-
            Required for transactions performed by registered payment facilitators. The postal code of the sub-merchant's address, without dashes.
            * Format: Numeric
            * Fixed length: 8 digits
          type: string
        subMerchant.subSeller[subSellerNr].state:
          description: |-
            Required for transactions performed by registered payment facilitators. The state code of the sub-merchant's address, if applicable to the country.
            * Format: Alphanumeric
            * Maximum length: 2 characters
          type: string
        subMerchant.subSeller[subSellerNr].street:
          description: |-
            Required for transactions performed by registered payment facilitators. The street name and house number of the sub-merchant's address.
            * Format: Alphanumeric
            * Maximum length: 60 characters
          type: string
        subMerchant.subSeller[subSellerNr].taxId:
          description: |-
            Required for transactions performed by registered payment facilitators. The tax ID of the sub-merchant.
            * Format: Numeric
            * Fixed length: 11 digits for the CPF or 14 digits for the CNPJ
          type: string
      type: object
    AdditionalDataTemporaryServices:
      properties:
        enhancedSchemeData.customerReference:
          description: |-
            The customer code, if supplied by a customer.
            * Encoding: ASCII
            * maxLength: 25
          type: string
        enhancedSchemeData.employeeName:
          description: |-
            The name or ID of the person working in a temporary capacity.
            * maxLength: 40.  
            * Must not be all spaces. 
            *Must not be all zeros.
          type: string
        enhancedSchemeData.jobDescription:
          description: |-
            The job description of the person working in a temporary capacity.
            * maxLength: 40 
            * Must not be all spaces. 
            *Must not be all zeros.
          type: string
        enhancedSchemeData.regularHoursRate:
          description: |-
            The amount paid for regular hours worked, [minor units](https://docs.adyen.com/development-resources/currency-codes).
            * maxLength: 7
            * Must not be empty
            * Can be all zeros
          type: string
        enhancedSchemeData.regularHoursWorked:
          description: |-
            The hours worked.
            * maxLength: 7
            * Must not be empty
            * Can be all zeros
          type: string
        enhancedSchemeData.requestName:
          description: |-
            The name of the person requesting temporary services.
            * maxLength: 40
            * Must not be all zeros
            * Must not be all spaces
          type: string
        enhancedSchemeData.tempStartDate:
          description: |-
            The billing period start date.
            * Format: ddMMyy
            * maxLength: 6
          type: string
        enhancedSchemeData.tempWeekEnding:
          description: |-
            The billing period end date.
            * Format: ddMMyy
            * maxLength: 6
          type: string
        enhancedSchemeData.totalTaxAmount:
          description: |-
            The total tax amount, in [minor units](https://docs.adyen.com/development-resources/currency-codes). For example, 2000 means USD 20.00
            * maxLength: 12
          type: string
      type: object
    AdditionalDataWallets:
      properties:
        androidpay.token:
          description: The Android Pay token retrieved from the SDK.
          type: string
        masterpass.transactionId:
          description: The Mastercard Masterpass Transaction ID retrieved from the SDK.
          type: string
        payment.token:
          description: The Apple Pay token retrieved from the SDK.
          type: string
        paywithgoogle.token:
          description: The Google Pay token retrieved from the SDK.
          type: string
        samsungpay.token:
          description: The Samsung Pay token retrieved from the SDK.
          type: string
        visacheckout.callId:
          description: The Visa Checkout Call ID retrieved from the SDK.
          type: string
      type: object
    Address:
      properties:
        city:
          description: "The name of the city. Maximum length: 3000 characters."
          maxLength: 3000
          type: string
        country:
          description: |-
            The two-character ISO-3166-1 alpha-2 country code. For example, **US**.
            > If you don't know the country or are not collecting the country from the shopper, provide `country` as `ZZ`.
          type: string
        houseNumberOrName:
          description: "The number or name of the house. Maximum length: 3000 characters."
          maxLength: 3000
          type: string
        postalCode:
          description: A maximum of five digits for an address in the US, or a maximum of ten characters for an address in all other countries.
          type: string
        stateOrProvince:
          description: |-
            The two-character ISO 3166-2 state or province code. For example, **CA** in the US or **ON** in Canada.
            > Required for the US and Canada.
          type: string
        street:
          description: |-
            The name of the street. Maximum length: 3000 characters.
            > The house number should not be included in this field; it should be separately provided via `houseNumberOrName`.
          maxLength: 3000
          type: string
      required:
        - street
        - houseNumberOrName
        - city
        - postalCode
        - country
      type: object
    AfterpayDetails:
      additionalProperties: false
      properties:
        billingAddress:
          description: The address where to send the invoice.
          type: string
        deliveryAddress:
          description: The address where the goods should be delivered.
          type: string
        personalDetails:
          description: Shopper name, date of birth, phone number, and email address.
          type: string
        recurringDetailReference:
          description: This is the `recurringDetailReference` returned in the response when you created the token.
          type: string
        type:
          default: afterpay_default
          description: "**afterpay_default**"
          enum:
            - afterpay_default
            - afterpaytouch
            - afterpay_b2b
            - clearpay
          type: string
      required:
        - type
      title: Afterpay
      type: object
    AmazonPayDetails:
      additionalProperties: false
      properties:
        amazonPayToken:
          description: This is the `amazonPayToken` that you obtained from the [Get Checkout Session](https://amazon-pay-acquirer-guide.s3-eu-west-1.amazonaws.com/v1/amazon-pay-api-v2/checkout-session.html#get-checkout-session) response. This token is used for API only integration specifically.
          type: string
        checkoutSessionId:
          description: The `checkoutSessionId` is used to identify the checkout session at the Amazon Pay side. This field is required only for drop-in and components integration, where it replaces the amazonPayToken.
          type: string
        type:
          default: amazonpay
          description: "**amazonpay**"
          enum:
            - amazonpay
          type: string
      title: Amazon Pay
      type: object
    Amount:
      properties:
        currency:
          description: The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).
          maxLength: 3
          minLength: 3
          type: string
        value:
          description: The amount of the transaction, in [minor units](https://docs.adyen.com/development-resources/currency-codes).
          format: int64
          type: integer
      required:
        - value
        - currency
      type: object
    AndroidPayDetails:
      additionalProperties: false
      properties:
        type:
          default: androidpay
          description: "**androidpay**"
          enum:
            - androidpay
          type: string
      title: Android Pay
      type: object
    ApplePayDetails:
      additionalProperties: false
      properties:
        applePayToken:
          description: The stringified and base64 encoded `paymentData` you retrieved from the Apple framework.
          maxLength: 10000
          type: string
        fundingSource:
          description: The funding source that should be used when multiple sources are available. For Brazilian combo cards, by default the funding source is credit. To use debit, set this value to **debit**.
          enum:
            - credit
            - debit
          type: string
        recurringDetailReference:
          description: This is the `recurringDetailReference` returned in the response when you created the token.
          type: string
        type:
          default: applepay
          description: "**applepay**"
          enum:
            - applepay
          type: string
      required:
        - applePayToken
      title: Apple Pay
      type: object
    ApplePayDonations:
      additionalProperties: false
      properties:
        applePayToken:
          description: The stringified and base64 encoded `paymentData` you retrieved from the Apple framework.
          maxLength: 10000
          type: string
        fundingSource:
          description: The funding source that should be used when multiple sources are available. For Brazilian combo cards, by default the funding source is credit. To use debit, set this value to **debit**.
          enum:
            - credit
            - debit
          type: string
        recurringDetailReference:
          description: This is the `recurringDetailReference` returned in the response when you created the token.
          type: string
        type:
          default: applepay
          description: "**applepay**"
          enum:
            - applepay
          type: string
      required:
        - applePayToken
      title: Apple Pay
      type: object
    ApplePaySessionRequest:
      properties:
        displayName:
          description: |-
            This is the name that your shoppers will see in the Apple Pay interface.

            The value returned as `configuration.merchantName` field from the [`/paymentMethods`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/paymentMethods) response.
          type: string
        domainName:
          description: |-
            The domain name you provided when you added Apple Pay in your Customer Area.

            This must match the `window.location.hostname` of the web shop.
          type: string
        merchantIdentifier:
          description: |-
            Your merchant identifier registered with Apple Pay.

            Use the value of the `configuration.merchantId` field from the [`/paymentMethods`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/paymentMethods) response.
          type: string
      required:
        - domainName
        - merchantIdentifier
        - displayName
      type: object
    ApplePaySessionResponse:
      properties:
        data:
          description: Base64 encoded data you need to [complete the Apple Pay merchant validation](https://docs.adyen.com/payment-methods/apple-pay/api-only?tab=adyen-certificate-validation_1#complete-apple-pay-session-validation).
          type: string
      required:
        - data
      type: object
    ApplicationInfo:
      properties:
        adyenLibrary:
          $ref: "#/components/schemas/CommonField"
          description: Adyen-developed software, such as libraries and plugins, used to interact with the Adyen API. For example, Magento plugin, Java API library, etc.
        adyenPaymentSource:
          $ref: "#/components/schemas/CommonField"
          description: Adyen-developed software to get payment details. For example, Checkout SDK, Secured Fields SDK, etc.
        externalPlatform:
          $ref: "#/components/schemas/ExternalPlatform"
          description: Third-party developed platform used to initiate payment requests. For example, Magento, Zuora, etc.
        merchantApplication:
          $ref: "#/components/schemas/CommonField"
          description: Merchant developed software, such as cashier application, used to interact with the Adyen API.
        merchantDevice:
          $ref: "#/components/schemas/MerchantDevice"
          description: Merchant device information.
        shopperInteractionDevice:
          $ref: "#/components/schemas/ShopperInteractionDevice"
          description: Shopper interaction device, such as terminal, mobile device or web browser, to initiate payment requests.
      type: object
    Avs:
      properties:
        addressEditable:
          description: Indicates whether the shopper is allowed to modify the billing address for the current payment request.
          type: boolean
        enabled:
          description: |-
            Specifies whether the shopper should enter their billing address during checkout.

            Allowed values:
            * yes — Perform AVS checks for every card payment.
            * automatic — Perform AVS checks only when required to optimize the conversion rate.
            * no — Do not perform AVS checks.
          enum:
            - yes
            - no
            - automatic
          type: string
      type: object
    BacsDirectDebitDetails:
      additionalProperties: false
      properties:
        recurringDetailReference:
          description: This is the `recurringDetailReference` returned in the response when you created the token.
          type: string
        type:
          default: directdebit_GB
          description: "**directdebit_GB**"
          enum:
            - directdebit_GB
          type: string
      title: BACS Direct Debit
      type: object
    BalanceCheckRequest:
      properties:
        additionalAmount:
          $ref: "#/components/schemas/Amount"
          description: |-
            If you want a [BIN or card verification](https://docs.adyen.com/payment-methods/cards/bin-data-and-card-verification) request to use a non-zero value, assign this value to `additionalAmount` (while the amount must be still set to 0 to trigger BIN or card verification).
            Required to be in the same currency as the `amount`. 
        additionalData:
          additionalProperties:
            type: string
          anyOf:
            - $ref: "#/components/schemas/AdditionalData3DSecure"
            - $ref: "#/components/schemas/AdditionalDataAirline"
            - $ref: "#/components/schemas/AdditionalDataCarRental"
            - $ref: "#/components/schemas/AdditionalDataCommon"
            - $ref: "#/components/schemas/AdditionalDataLevel23"
            - $ref: "#/components/schemas/AdditionalDataLodging"
            - $ref: "#/components/schemas/AdditionalDataOpenInvoice"
            - $ref: "#/components/schemas/AdditionalDataOpi"
            - $ref: "#/components/schemas/AdditionalDataRatepay"
            - $ref: "#/components/schemas/AdditionalDataRetry"
            - $ref: "#/components/schemas/AdditionalDataRisk"
            - $ref: "#/components/schemas/AdditionalDataRiskStandalone"
            - $ref: "#/components/schemas/AdditionalDataSubMerchant"
            - $ref: "#/components/schemas/AdditionalDataTemporaryServices"
            - $ref: "#/components/schemas/AdditionalDataWallets"
          description: |-
            This field contains additional data, which may be required for a particular payment request.

            The `additionalData` object consists of entries, each of which includes the key and value.
          type: object
        amount:
          $ref: "#/components/schemas/Amount"
          description: The amount information for the transaction (in [minor units](https://docs.adyen.com/development-resources/currency-codes)). For [BIN or card verification](https://docs.adyen.com/payment-methods/cards/bin-data-and-card-verification) requests, set amount to 0 (zero).
        billingAddress:
          $ref: "#/components/schemas/Address"
          description: |-
            The address where to send the invoice.
            > The `billingAddress` object is required in the following scenarios. Include all of the fields within this object.
            >* For 3D Secure 2 transactions in all browser-based and mobile implementations.
            >* For cross-border payouts to and from Canada.
          x-addedInVersion: "4"
        browserInfo:
          $ref: "#/components/schemas/BrowserInfo"
          description: |-
            The shopper's browser information.
            > For 3D Secure, the full object is required for web integrations. For mobile app integrations, include the `userAgent` and `acceptHeader` fields to indicate  that your integration can support a redirect in case a payment is routed to 3D Secure 1.
        captureDelayHours:
          description: The delay between the authorisation and scheduled auto-capture, specified in hours.
          format: int32
          type: integer
          x-addedInVersion: "2"
        dateOfBirth:
          description: |-
            The shopper's date of birth.

            Format [ISO-8601](https://www.w3.org/TR/NOTE-datetime): YYYY-MM-DD
          format: date
          type: string
          x-addedInVersion: "7"
        dccQuote:
          $ref: "#/components/schemas/ForexQuote"
          description: The forex quote as returned in the response of the forex service.
        deliveryAddress:
          $ref: "#/components/schemas/Address"
          description: The address where the purchased goods should be delivered.
        deliveryDate:
          description: |-
            The date and time the purchased goods should be delivered.

            Format [ISO 8601](https://www.w3.org/TR/NOTE-datetime): YYYY-MM-DDThh:mm:ss.sssTZD

            Example: 2017-07-17T13:42:40.428+01:00
          format: date-time
          type: string
          x-addedInVersion: "8"
        deviceFingerprint:
          description: A string containing the shopper's device fingerprint. For more information, refer to [Device fingerprinting](https://docs.adyen.com/risk-management/device-fingerprinting).
          maxLength: 5000
          type: string
          x-addedInVersion: "2"
        fraudOffset:
          description: An integer value that is added to the normal fraud score. The value can be either positive or negative.
          format: int32
          type: integer
        installments:
          $ref: "#/components/schemas/Installments"
          description: Contains installment settings. For more information, refer to [Installments](https://docs.adyen.com/payment-methods/cards/credit-card-installments).
          x-addedInVersion: "4"
        mcc:
          description: The [merchant category code](https://en.wikipedia.org/wiki/Merchant_category_code) (MCC) is a four-digit number, which relates to a particular market segment. This code reflects the predominant activity that is conducted by the merchant.
          type: string
          x-addedInVersion: "12"
        merchantAccount:
          description: The merchant account identifier, with which you want to process the transaction.
          type: string
        merchantOrderReference:
          description: |-
            This reference allows linking multiple transactions to each other for reporting purposes (i.e. order auth-rate). The reference should be unique per billing cycle.
            The same merchant order reference should never be reused after the first authorised attempt. If used, this field should be supplied for all incoming authorisations.
            > We strongly recommend you send the `merchantOrderReference` value to benefit from linking payment requests when authorisation retries take place. In addition, we recommend you provide `retry.orderAttemptNumber`, `retry.chainAttemptNumber`, and `retry.skipRetry` values in `PaymentRequest.additionalData`.
          type: string
          x-addedInVersion: "9"
        metadata:
          additionalProperties:
            type: string
          description: |-
            Metadata consists of entries, each of which includes a key and a value.
            Limits:
            * Maximum 20 key-value pairs per request. When exceeding, the "177" error occurs: "Metadata size exceeds limit".
            * Maximum 20 characters per key.
            * Maximum 80 characters per value. 
          type: object
          x-addedInVersion: "17"
        orderReference:
          description: When you are doing multiple partial (gift card) payments, this is the `pspReference` of the first payment. We use this to link the multiple payments to each other. As your own reference for linking multiple payments, use the `merchantOrderReference`instead.
          type: string
        paymentMethod:
          additionalProperties:
            type: string
          description: The collection that contains the type of the payment method and its specific information.
          type: object
        recurring:
          $ref: "#/components/schemas/Recurring"
          description: The recurring settings for the payment. Use this property when you want to enable [recurring payments](https://docs.adyen.com/classic-integration/recurring-payments).
        recurringProcessingModel:
          description: |
            Defines a recurring payment type. Required when creating a token to store payment details or using stored payment details.
            Allowed values:
            * `Subscription` – A transaction for a fixed or variable amount, which follows a fixed schedule.
            * `CardOnFile` – With a card-on-file (CoF) transaction, card details are stored to enable one-click or omnichannel journeys, or simply to streamline the checkout process. Any subscription not following a fixed schedule is also considered a card-on-file transaction.
            * `UnscheduledCardOnFile` – An unscheduled card-on-file (UCoF) transaction is a transaction that occurs on a non-fixed schedule and/or have variable amounts. For example, automatic top-ups when a cardholder's balance drops below a certain amount.
          enum:
            - CardOnFile
            - Subscription
            - UnscheduledCardOnFile
          type: string
          x-addedInVersion: "30"
        reference:
          description: |-
            The reference to uniquely identify a payment. This reference is used in all communication with you about the payment status. We recommend using a unique value per payment; however, it is not a requirement.
            If you need to provide multiple references for a transaction, separate them with hyphens ("-").
            Maximum length: 80 characters.
          type: string
        selectedBrand:
          description: |-
            Some payment methods require defining a value for this field to specify how to process the transaction.

            For the Bancontact payment method, it can be set to:
            * `maestro` (default), to be processed like a Maestro card, or
            * `bcmc`, to be processed like a Bancontact card.
          type: string
        selectedRecurringDetailReference:
          description: The `recurringDetailReference` you want to use for this payment. The value `LATEST` can be used to select the most recently stored recurring detail.
          type: string
        sessionId:
          description: A session ID used to identify a payment session.
          type: string
        shopperEmail:
          description: |-
            The shopper's email address. We recommend that you provide this data, as it is used in velocity fraud checks.
            > For 3D Secure 2 transactions, schemes require `shopperEmail` for all browser-based and mobile implementations.
          type: string
        shopperIP:
          description: |-
            The shopper's IP address. In general, we recommend that you provide this data, as it is used in a number of risk checks (for instance, number of payment attempts or location-based checks).
            > For 3D Secure 2 transactions, schemes require `shopperIP` for all browser-based implementations.
            This field is also mandatory for some merchants depending on your business model. For more information, [contact Support](https://www.adyen.help/hc/en-us/requests/new).
          type: string
        shopperInteraction:
          description: |-
            Specifies the sales channel, through which the shopper gives their card details, and whether the shopper is a returning customer.
            For the web service API, Adyen assumes Ecommerce shopper interaction by default.

            This field has the following possible values:
            * `Ecommerce` - Online transactions where the cardholder is present (online). For better authorisation rates, we recommend sending the card security code (CSC) along with the request.
            * `ContAuth` - Card on file and/or subscription transactions, where the cardholder is known to the merchant (returning customer). If the shopper is present (online), you can supply also the CSC to improve authorisation (one-click payment).
            * `Moto` - Mail-order and telephone-order transactions where the shopper is in contact with the merchant via email or telephone.
            * `POS` - Point-of-sale transactions where the shopper is physically present to make a payment using a secure payment terminal.
          enum:
            - Ecommerce
            - ContAuth
            - Moto
            - POS
          type: string
        shopperLocale:
          description: The combination of a language code and a country code to specify the language to be used in the payment.
          type: string
          x-addedInVersion: "7"
        shopperName:
          $ref: "#/components/schemas/Name"
          description: The shopper's full name.
          x-addedInVersion: "7"
        shopperReference:
          description: |-
            Required for recurring payments. 
            Your reference to uniquely identify this shopper, for example user ID or account ID. Minimum length: 3 characters.
            > Your reference must not include personally identifiable information (PII), for example name or email address.
          type: string
        shopperStatement:
          description: |-
            The text to be shown on the shopper's bank statement.
             We recommend sending a maximum of 22 characters, otherwise banks might truncate the string.
             Allowed characters: **a-z**, **A-Z**, **0-9**, spaces, and special characters **. , ' _ - ? + * /**.
          type: string
        socialSecurityNumber:
          description: The shopper's social security number.
          type: string
          x-addedInVersion: "4"
        splits:
          description: An array of objects specifying how the payment should be split when using [Adyen for Platforms](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) or [Issuing](https://docs.adyen.com/issuing/add-manage-funds#split).
          items:
            $ref: "#/components/schemas/Split"
          type: array
          x-addedInVersion: "37"
        store:
          description: Required for Adyen for Platforms integrations if you have a platform setup. This is your [reference](https://docs.adyen.com/api-explorer/Management/3/post/merchants/(merchantId)/stores#request-reference) (on [balance platform](https://docs.adyen.com/marketplaces-and-platforms/classic/platforms-for-partners#route-payments)) or the [storeReference](https://docs.adyen.com/api-explorer/Account/latest/post/updateAccountHolder#request-accountHolderDetails-storeDetails-storeReference) (in the [classic integration](https://docs.adyen.com/marketplaces-and-platforms/processing-payments/route-payment-to-store/#route-a-payment-to-a-store)) for the ecommerce or point-of-sale store that is processing the payment.
          maxLength: 16
          minLength: 1
          type: string
          x-addedInVersion: "23"
        telephoneNumber:
          description: The shopper's telephone number.
          type: string
          x-addedInVersion: "7"
        totalsGroup:
          description: The reference value to aggregate sales totals in reporting. When not specified, the store field is used (if available).
          maxLength: 16
          minLength: 1
          type: string
          x-addedInVersion: "23"
        trustedShopper:
          description: Set to true if the payment should be routed to a trusted MID.
          type: boolean
          x-addedInVersion: "37"
      required:
        - merchantAccount
        - amount
        - paymentMethod
      type: object
    BalanceCheckResponse:
      properties:
        additionalData:
          additionalProperties:
            type: string
          anyOf:
            - $ref: "#/components/schemas/ResponseAdditionalData3DSecure"
            - $ref: "#/components/schemas/ResponseAdditionalDataBillingAddress"
            - $ref: "#/components/schemas/ResponseAdditionalDataCard"
            - $ref: "#/components/schemas/ResponseAdditionalDataCommon"
            - $ref: "#/components/schemas/ResponseAdditionalDataDomesticError"
            - $ref: "#/components/schemas/ResponseAdditionalDataInstallments"
            - $ref: "#/components/schemas/ResponseAdditionalDataNetworkTokens"
            - $ref: "#/components/schemas/ResponseAdditionalDataOpi"
            - $ref: "#/components/schemas/ResponseAdditionalDataSepa"
          description: "Contains additional information about the payment. Some data fields are included only if you select them first: Go to **Customer Area** > **Developers** > **Additional data**."
          type: object
        balance:
          $ref: "#/components/schemas/Amount"
          description: The balance for the payment method.
        fraudResult:
          $ref: "#/components/schemas/FraudResult"
          description: The fraud result properties of the payment.
        pspReference:
          description: Adyen's 16-character reference associated with the transaction/request. This value is globally unique; quote it when communicating with us about this request.
          type: string
        refusalReason:
          description: |-
            If the payment's authorisation is refused or an error occurs during authorisation, this field holds Adyen's mapped reason for the refusal or a description of the error. When a transaction fails, the authorisation response includes `resultCode` and `refusalReason` values.

            For more information, see [Refusal reasons](https://docs.adyen.com/development-resources/refusal-reasons).
          type: string
        resultCode:
          description: |-
            The result of the cancellation request.

            Possible values:

            * **Success** – Indicates that the balance check was successful.
            * **NotEnoughBalance** – Commonly indicates that the card did not have enough balance to pay the amount in the request, or that the currency of the balance on the card did not match the currency of the requested amount.
            * **Failed** – Indicates that the balance check failed.
          enum:
            - Success
            - NotEnoughBalance
            - Failed
          type: string
      required:
        - balance
        - resultCode
      type: object
    BankAccount:
      properties:
        bankAccountNumber:
          description: The bank account number (without separators).
          type: string
        bankCity:
          description: The bank city.
          type: string
          x-addedInVersion: "18"
        bankLocationId:
          description: The location id of the bank. The field value is `nil` in most cases.
          type: string
        bankName:
          description: The name of the bank.
          type: string
        bic:
          description: The [Business Identifier Code](https://en.wikipedia.org/wiki/ISO_9362) (BIC) is the SWIFT address assigned to a bank. The field value is `nil` in most cases.
          type: string
        countryCode:
          description: |-
            Country code where the bank is located.

            A valid value is an ISO two-character country code (e.g. 'NL').
          type: string
        iban:
          description: The [International Bank Account Number](https://en.wikipedia.org/wiki/International_Bank_Account_Number) (IBAN).
          type: string
        ownerName:
          description: |-
            The name of the bank account holder.
            If you submit a name with non-Latin characters, we automatically replace some of them with corresponding Latin characters to meet the FATF recommendations. For example:
            * χ12 is converted to ch12.
            * üA is converted to euA.
            * Peter Møller is converted to Peter Mller, because banks don't accept 'ø'.
            After replacement, the ownerName must have at least three alphanumeric characters (A-Z, a-z, 0-9), and at least one of them must be a valid Latin character (A-Z, a-z). For example:
            * John17 - allowed.
            * J17 - allowed.
            * 171 - not allowed.
            * John-7 - allowed.
            > If provided details don't match the required format, the response returns the error message: 203 'Invalid bank account holder name'.
          type: string
        taxId:
          description: The bank account holder's tax ID.
          type: string
          x-addedInVersion: "18"
      type: object
    BillDeskDetails:
      additionalProperties: false
      properties:
        issuer:
          description: The issuer id of the shopper's selected bank.
          type: string
        type:
          description: "**billdesk**"
          enum:
            - billdesk_online
            - billdesk_wallet
          type: string
      required:
        - type
        - issuer
      title: BillDesk
      type: object
    BillingAddress:
      properties:
        city:
          description: "The name of the city. Maximum length: 3000 characters."
          maxLength: 3000
          type: string
        country:
          description: |-
            The two-character ISO-3166-1 alpha-2 country code. For example, **US**.
            > If you don't know the country or are not collecting the country from the shopper, provide `country` as `ZZ`.
          type: string
        houseNumberOrName:
          description: "The number or name of the house. Maximum length: 3000 characters."
          maxLength: 3000
          type: string
        postalCode:
          description: A maximum of five digits for an address in the US, or a maximum of ten characters for an address in all other countries.
          type: string
        stateOrProvince:
          description: |-
            The two-character ISO 3166-2 state or province code. For example, **CA** in the US or **ON** in Canada.
            > Required for the US and Canada.
          type: string
        street:
          description: |-
            The name of the street. Maximum length: 3000 characters.
            > The house number should not be included in this field; it should be separately provided via `houseNumberOrName`.
          maxLength: 3000
          type: string
      required:
        - street
        - houseNumberOrName
        - city
        - postalCode
        - country
      type: object
    BlikDetails:
      additionalProperties: false
      properties:
        blikCode:
          description: BLIK code consisting of 6 digits.
          type: string
        recurringDetailReference:
          description: This is the `recurringDetailReference` returned in the response when you created the token.
          type: string
        type:
          description: "**blik**"
          enum:
            - blik
          type: string
      title: BLIK
      type: object
    BrowserInfo:
      properties:
        acceptHeader:
          description: The accept header value of the shopper's browser.
          type: string
        userAgent:
          description: The user agent value of the shopper's browser.
          type: string
      required:
        - userAgent
        - acceptHeader
      type: object
    CancelOrderRequest:
      properties:
        merchantAccount:
          description: The merchant account identifier that orderData belongs to.
          type: string
        order:
          $ref: "#/components/schemas/EncryptedOrderData"
          description: The order request object that contains a pspReference that represents the order and the matching encrypted order data.
      required:
        - order
        - merchantAccount
      type: object
    CancelOrderResponse:
      properties:
        pspReference:
          description: A unique reference of the cancellation request.
          type: string
        resultCode:
          description: |-
            The result of the cancellation request.

            Possible values:

            * **Received** – Indicates the cancellation has successfully been received by Adyen, and will be processed.
          enum:
            - Received
          type: string
      required:
        - pspReference
        - resultCode
      type: object
    Card:
      properties:
        cvc:
          description: |-
            The [card verification code](https://docs.adyen.com/payments-fundamentals/payment-glossary#card-security-code-cvc-cvv-cid) (1-20 characters). Depending on the card brand, it is known also as:
            * CVV2/CVC2 – length: 3 digits
            * CID – length: 4 digits
            > If you are using [Client-Side Encryption](https://docs.adyen.com/classic-integration/cse-integration-ecommerce), the CVC code is present in the encrypted data. You must never post the card details to the server.
            > This field must be always present in a [one-click payment request](https://docs.adyen.com/classic-integration/recurring-payments).
            > When this value is returned in a response, it is always empty because it is not stored.
          maxLength: 20
          minLength: 1
          type: string
        expiryMonth:
          description: |-
            The card expiry month.
            Format: 2 digits, zero-padded for single digits. For example:
            * 03 = March
            * 11 = November
          maxLength: 2
          minLength: 1
          type: string
        expiryYear:
          description: |-
            The card expiry year.
            Format: 4 digits. For example: 2020
          maxLength: 4
          minLength: 4
          type: string
        holderName:
          description: The name of the cardholder, as printed on the card.
          maxLength: 50
          minLength: 1
          type: string
        issueNumber:
          description: The issue number of the card (for some UK debit cards only).
          maxLength: 2
          minLength: 1
          type: string
        number:
          description: |-
            The card number (4-19 characters). Do not use any separators.
            When this value is returned in a response, only the last 4 digits of the card number are returned.
          maxLength: 19
          minLength: 4
          type: string
        startMonth:
          description: The month component of the start date (for some UK debit cards only).
          maxLength: 2
          minLength: 1
          type: string
        startYear:
          description: The year component of the start date (for some UK debit cards only).
          maxLength: 4
          minLength: 4
          type: string
      type: object
    CardBrandDetails:
      properties:
        supported:
          description: Indicates if you support the card brand.
          type: boolean
        type:
          description: The name of the card brand.
          type: string
      type: object
    CardDetails:
      additionalProperties: false
      properties:
        brand:
          description: "Secondary brand of the card. For example: **plastix**, **hmclub**."
          type: string
        cupsecureplus.smscode:
          deprecated: true
          type: string
        cvc:
          description: The card verification code. Only collect raw card data if you are [fully PCI compliant](https://docs.adyen.com/development-resources/pci-dss-compliance-guide).
          type: string
        encryptedCardNumber:
          description: The encrypted card number.
          maxLength: 15000
          type: string
        encryptedExpiryMonth:
          description: The encrypted card expiry month.
          maxLength: 15000
          type: string
        encryptedExpiryYear:
          description: The encrypted card expiry year.
          maxLength: 15000
          type: string
        encryptedSecurityCode:
          description: The encrypted card verification code.
          maxLength: 15000
          type: string
        expiryMonth:
          description: The card expiry month. Only collect raw card data if you are [fully PCI compliant](https://docs.adyen.com/development-resources/pci-dss-compliance-guide).
          type: string
        expiryYear:
          description: The card expiry year. Only collect raw card data if you are [fully PCI compliant](https://docs.adyen.com/development-resources/pci-dss-compliance-guide).
          type: string
        fundingSource:
          description: The funding source that should be used when multiple sources are available. For Brazilian combo cards, by default the funding source is credit. To use debit, set this value to **debit**.
          enum:
            - credit
            - debit
          type: string
        holderName:
          description: The name of the card holder.
          type: string
        networkPaymentReference:
          description: The network token reference. This is the [`networkTxReference`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__resParam_additionalData-ResponseAdditionalDataCommon-networkTxReference) from the response to the first payment.
          type: string
        number:
          description: The card number. Only collect raw card data if you are [fully PCI compliant](https://docs.adyen.com/development-resources/pci-dss-compliance-guide).
          type: string
        recurringDetailReference:
          description: This is the `recurringDetailReference` returned in the response when you created the token.
          type: string
        shopperNotificationReference:
          description: The `shopperNotificationReference` returned in the response when you requested to notify the shopper. Used only for recurring payments in India.
          type: string
        threeDS2SdkVersion:
          description: Required for mobile integrations. Version of the 3D Secure 2 mobile SDK.
          maxLength: 12
          type: string
        type:
          default: scheme
          description: Default payment method details. Common for scheme payment methods, and for simple payment method details.
          enum:
            - bcmc
            - scheme
            - networkToken
            - giftcard
            - card
          type: string
      title: Card
      type: object
    CardDetailsRequest:
      properties:
        cardNumber:
          description: |-
            A minimum of the first 8 digits of the card number and a maximum of the full card number. 11 digits gives the best result. 

            You must be [fully PCI compliant](https://docs.adyen.com/development-resources/pci-dss-compliance-guide) to collect raw card data.
          type: string
        countryCode:
          description: |-
            The shopper country.

            Format: [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
            Example: NL or DE
          type: string
        encryptedCardNumber:
          description: The encrypted card number.
          type: string
        merchantAccount:
          description: The merchant account identifier, with which you want to process the transaction.
          type: string
        supportedBrands:
          description: |-
            The card brands you support. This is the [`brands`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/paymentMethods__resParam_paymentMethods-brands) array from your [`/paymentMethods`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/paymentMethods) response. 

            If not included, our API uses the ones configured for your merchant account and, if provided, the country code.
          items:
            type: string
          type: array
      required:
        - cardNumber
        - merchantAccount
      type: object
    CardDetailsResponse:
      properties:
        brands:
          description: The list of brands identified for the card.
          items:
            $ref: "#/components/schemas/CardBrandDetails"
          type: array
      type: object
    CardDonations:
      additionalProperties: false
      properties:
        brand:
          description: "Secondary brand of the card. For example: **plastix**, **hmclub**."
          type: string
        cupsecureplus.smscode:
          deprecated: true
          type: string
        cvc:
          description: The card verification code. Only collect raw card data if you are [fully PCI compliant](https://docs.adyen.com/development-resources/pci-dss-compliance-guide).
          type: string
        encryptedCardNumber:
          description: The encrypted card number.
          maxLength: 15000
          type: string
        encryptedExpiryMonth:
          description: The encrypted card expiry month.
          maxLength: 15000
          type: string
        encryptedExpiryYear:
          description: The encrypted card expiry year.
          maxLength: 15000
          type: string
        encryptedSecurityCode:
          description: The encrypted card verification code.
          maxLength: 15000
          type: string
        expiryMonth:
          description: The card expiry month. Only collect raw card data if you are [fully PCI compliant](https://docs.adyen.com/development-resources/pci-dss-compliance-guide).
          type: string
        expiryYear:
          description: The card expiry year. Only collect raw card data if you are [fully PCI compliant](https://docs.adyen.com/development-resources/pci-dss-compliance-guide).
          type: string
        fundingSource:
          description: The funding source that should be used when multiple sources are available. For Brazilian combo cards, by default the funding source is credit. To use debit, set this value to **debit**.
          enum:
            - credit
            - debit
          type: string
        holderName:
          description: The name of the card holder.
          type: string
        networkPaymentReference:
          description: The network token reference. This is the [`networkTxReference`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__resParam_additionalData-ResponseAdditionalDataCommon-networkTxReference) from the response to the first payment.
          type: string
        number:
          description: The card number. Only collect raw card data if you are [fully PCI compliant](https://docs.adyen.com/development-resources/pci-dss-compliance-guide).
          type: string
        recurringDetailReference:
          description: This is the `recurringDetailReference` returned in the response when you created the token.
          type: string
        shopperNotificationReference:
          description: The `shopperNotificationReference` returned in the response when you requested to notify the shopper. Used only for recurring payments in India.
          type: string
        threeDS2SdkVersion:
          description: Required for mobile integrations. Version of the 3D Secure 2 mobile SDK.
          maxLength: 12
          type: string
        type:
          default: scheme
          description: Default payment method details. Common for scheme payment methods, and for simple payment method details.
          enum:
            - bcmc
            - scheme
            - networkToken
            - giftcard
            - card
          type: string
      title: Card
      type: object
    CellulantDetails:
      additionalProperties: false
      properties:
        issuer:
          description: The Cellulant issuer.
          type: string
        type:
          default: cellulant
          description: "**Cellulant**"
          enum:
            - cellulant
          type: string
      title: Cellulant
      type: object
    CheckoutOrderResponse:
      properties:
        amount:
          $ref: "#/components/schemas/Amount"
          description: The initial amount of the order.
        expiresAt:
          description: The expiry date for the order.
          type: string
        orderData:
          description: The encrypted order data.
          type: string
        pspReference:
          description: The `pspReference` that belongs to the order.
          type: string
        reference:
          description: The merchant reference for the order.
          type: string
        remainingAmount:
          $ref: "#/components/schemas/Amount"
          description: The updated remaining amount.
      required:
        - pspReference
      type: object
    CommonField:
      properties:
        name:
          description: Name of the field. For example, Name of External Platform.
          type: string
        version:
          description: Version of the field. For example, Version of External Platform.
          type: string
      type: object
    Company:
      properties:
        homepage:
          description: The company website's home page.
          type: string
        name:
          description: The company name.
          type: string
        registrationNumber:
          description: Registration number of the company.
          type: string
        registryLocation:
          description: Registry location of the company.
          type: string
        taxId:
          description: Tax ID of the company.
          type: string
        type:
          description: The company type.
          type: string
      type: object
    Configuration:
      properties:
        avs:
          $ref: "#/components/schemas/Avs"
          description: Describes the configuration for AVS ([Address Verification System](https://en.wikipedia.org/wiki/Address_Verification_System)).
        cardHolderName:
          description: |-
            Determines whether the cardholder name should be provided or not.

            Permitted values:
            * NONE
            * OPTIONAL
            * REQUIRED
          enum:
            - NONE
            - OPTIONAL
            - REQUIRED
          type: string
          x-addedInVersion: "37"
        installments:
          $ref: "#/components/schemas/InstallmentsNumber"
          description: Describes the configuration for [installment payments](https://docs.adyen.com/payment-methods/cards/credit-card-installments).
        shopperInput:
          $ref: "#/components/schemas/ShopperInput"
          description: Determines how to display the details fields.
          x-addedInVersion: "37"
      type: object
    CreateOrderRequest:
      properties:
        amount:
          $ref: "#/components/schemas/Amount"
          description: The total amount of the order.
        expiresAt:
          description: The date that order expires; e.g. 2019-03-23T12:25:28Z. If not provided, the default expiry duration is 1 day.
          type: string
        merchantAccount:
          description: The merchant account identifier, with which you want to process the order.
          type: string
        reference:
          description: A custom reference identifying the order.
          type: string
      required:
        - merchantAccount
        - reference
        - amount
      type: object
    CreateOrderResponse:
      properties:
        additionalData:
          additionalProperties:
            type: string
          anyOf:
            - $ref: "#/components/schemas/ResponseAdditionalData3DSecure"
            - $ref: "#/components/schemas/ResponseAdditionalDataBillingAddress"
            - $ref: "#/components/schemas/ResponseAdditionalDataCard"
            - $ref: "#/components/schemas/ResponseAdditionalDataCommon"
            - $ref: "#/components/schemas/ResponseAdditionalDataDomesticError"
            - $ref: "#/components/schemas/ResponseAdditionalDataInstallments"
            - $ref: "#/components/schemas/ResponseAdditionalDataNetworkTokens"
            - $ref: "#/components/schemas/ResponseAdditionalDataOpi"
            - $ref: "#/components/schemas/ResponseAdditionalDataSepa"
          description: "Contains additional information about the payment. Some data fields are included only if you select them first: Go to **Customer Area** > **Developers** > **Additional data**."
          type: object
        expiresAt:
          description: The date that the order will expire.
          type: string
        fraudResult:
          $ref: "#/components/schemas/FraudResult"
          description: The fraud result properties of the payment.
        orderData:
          description: The encrypted data that will be used by merchant for adding payments to the order.
          type: string
        pspReference:
          description: Adyen's 16-character reference associated with the transaction/request. This value is globally unique; quote it when communicating with us about this request.
          type: string
        reference:
          description: The reference provided by merchant for creating the order.
          type: string
        refusalReason:
          description: |-
            If the payment's authorisation is refused or an error occurs during authorisation, this field holds Adyen's mapped reason for the refusal or a description of the error. When a transaction fails, the authorisation response includes `resultCode` and `refusalReason` values.

            For more information, see [Refusal reasons](https://docs.adyen.com/development-resources/refusal-reasons).
          type: string
        remainingAmount:
          $ref: "#/components/schemas/Amount"
          description: The remaining amount in the order.
        resultCode:
          description: |-
            The result of the order creation request.
             The value is always **Success**.
          enum:
            - Success
          type: string
      required:
        - remainingAmount
        - expiresAt
        - orderData
        - resultCode
      type: object
    DeliveryAddress:
      properties:
        city:
          description: "The name of the city. Maximum length: 3000 characters."
          maxLength: 3000
          type: string
        country:
          description: |-
            The two-character ISO-3166-1 alpha-2 country code. For example, **US**.
            > If you don't know the country or are not collecting the country from the shopper, provide `country` as `ZZ`.
          type: string
        firstName:
          type: string
        houseNumberOrName:
          description: "The number or name of the house. Maximum length: 3000 characters."
          maxLength: 3000
          type: string
        lastName:
          type: string
        postalCode:
          description: A maximum of five digits for an address in the US, or a maximum of ten characters for an address in all other countries.
          type: string
        stateOrProvince:
          description: |-
            The two-character ISO 3166-2 state or province code. For example, **CA** in the US or **ON** in Canada.
            > Required for the US and Canada.
          type: string
        street:
          description: |-
            The name of the street. Maximum length: 3000 characters.
            > The house number should not be included in this field; it should be separately provided via `houseNumberOrName`.
          maxLength: 3000
          type: string
      required:
        - street
        - houseNumberOrName
        - city
        - postalCode
        - country
      type: object
    DokuDetails:
      additionalProperties: false
      properties:
        firstName:
          description: The shopper's first name.
          type: string
        lastName:
          description: The shopper's last name.
          type: string
        shopperEmail:
          description: The shopper's email.
          type: string
        type:
          description: "**doku**"
          enum:
            - doku_mandiri_va
            - doku_cimb_va
            - doku_danamon_va
            - doku_bni_va
            - doku_permata_lite_atm
            - doku_bri_va
            - doku_bca_va
            - doku_alfamart
            - doku_indomaret
            - doku_wallet
            - doku_ovo
          type: string
      required:
        - type
        - firstName
        - lastName
        - shopperEmail
      title: Doku
      type: object
    DonationPaymentRequest:
      properties:
        additionalAmount:
          $ref: "#/components/schemas/Amount"
          description: |-
            If you want a [BIN or card verification](https://docs.adyen.com/payment-methods/cards/bin-data-and-card-verification) request to use a non-zero value, assign this value to `additionalAmount` (while the amount must be still set to 0 to trigger BIN or card verification).
            Required to be in the same currency as the `amount`. 
        additionalData:
          additionalProperties:
            type: string
          anyOf:
            - $ref: "#/components/schemas/AdditionalData3DSecure"
            - $ref: "#/components/schemas/AdditionalDataAirline"
            - $ref: "#/components/schemas/AdditionalDataCarRental"
            - $ref: "#/components/schemas/AdditionalDataCommon"
            - $ref: "#/components/schemas/AdditionalDataLevel23"
            - $ref: "#/components/schemas/AdditionalDataLodging"
            - $ref: "#/components/schemas/AdditionalDataOpenInvoice"
            - $ref: "#/components/schemas/AdditionalDataOpi"
            - $ref: "#/components/schemas/AdditionalDataRatepay"
            - $ref: "#/components/schemas/AdditionalDataRetry"
            - $ref: "#/components/schemas/AdditionalDataRisk"
            - $ref: "#/components/schemas/AdditionalDataRiskStandalone"
            - $ref: "#/components/schemas/AdditionalDataSubMerchant"
            - $ref: "#/components/schemas/AdditionalDataTemporaryServices"
            - $ref: "#/components/schemas/AdditionalDataWallets"
          description: |-
            This field contains additional data, which may be required for a particular payment request.

            The `additionalData` object consists of entries, each of which includes the key and value.
          type: object
        allowedPaymentMethods:
          description: |-
            List of payment methods to be presented to the shopper. To refer to payment methods, use their [payment method type](https://docs.adyen.com/payment-methods/payment-method-types).

            Example: `"allowedPaymentMethods":["ideal","giropay"]`
          items:
            type: string
          type: array
          x-addedInVersion: "33"
        amount:
          $ref: "#/components/schemas/Amount"
          description: The amount information for the transaction (in [minor units](https://docs.adyen.com/development-resources/currency-codes)). For [BIN or card verification](https://docs.adyen.com/payment-methods/cards/bin-data-and-card-verification) requests, set amount to 0 (zero).
        billingAddress:
          $ref: "#/components/schemas/BillingAddress"
          description: |-
            The address where to send the invoice.
            > The `billingAddress` object is required in the following scenarios. Include all of the fields within this object.
            >* For 3D Secure 2 transactions in all browser-based and mobile implementations.
            >* For cross-border payouts to and from Canada.
        blockedPaymentMethods:
          description: |-
            List of payment methods to be hidden from the shopper. To refer to payment methods, use their [payment method type](https://docs.adyen.com/payment-methods/payment-method-types).

            Example: `"blockedPaymentMethods":["ideal","giropay"]`
          items:
            type: string
          type: array
          x-addedInVersion: "33"
        browserInfo:
          $ref: "#/components/schemas/BrowserInfo"
          description: |-
            The shopper's browser information.
            > For 3D Secure, the full object is required for web integrations. For mobile app integrations, include the `userAgent` and `acceptHeader` fields to indicate  that your integration can support a redirect in case a payment is routed to 3D Secure 1.
        captureDelayHours:
          description: The delay between the authorisation and scheduled auto-capture, specified in hours.
          format: int32
          type: integer
        channel:
          description: |-
            The platform where a payment transaction takes place. This field is optional for filtering out payment methods that are only available on specific platforms. If this value is not set, then we will try to infer it from the `sdkVersion` or `token`.

            Possible values:
            * iOS
            * Android
            * Web
          enum:
            - iOS
            - Android
            - Web
          type: string
        company:
          $ref: "#/components/schemas/Company"
          description: Information regarding the company.
          x-addedInVersion: "32"
        countryCode:
          description: |-
            The shopper country.

            Format: [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
            Example: NL or DE
          type: string
        dateOfBirth:
          description: |-
            The shopper's date of birth.

            Format [ISO-8601](https://www.w3.org/TR/NOTE-datetime): YYYY-MM-DD
          format: date-time
          type: string
        dccQuote:
          $ref: "#/components/schemas/ForexQuote"
          description: The forex quote as returned in the response of the forex service.
        deliveryAddress:
          $ref: "#/components/schemas/DeliveryAddress"
          description: The address where the purchased goods should be delivered.
        deliveryDate:
          description: |-
            The date and time the purchased goods should be delivered.

            Format [ISO 8601](https://www.w3.org/TR/NOTE-datetime): YYYY-MM-DDThh:mm:ss.sssTZD

            Example: 2017-07-17T13:42:40.428+01:00
          format: date-time
          type: string
        deviceFingerprint:
          description: A string containing the shopper's device fingerprint. For more information, refer to [Device fingerprinting](https://docs.adyen.com/risk-management/device-fingerprinting).
          maxLength: 5000
          type: string
        donationAccount:
          description: Donation account to which the transaction is credited.
          type: string
        donationOriginalPspReference:
          description: PSP reference of the transaction from which the donation token is generated. Required when `donationToken` is provided.
          type: string
        donationToken:
          description: Donation token received in the `/payments` call.
          type: string
        enableOneClick:
          description: When true and `shopperReference` is provided, the shopper will be asked if the payment details should be stored for future one-click payments.
          type: boolean
          x-addedInVersion: "32"
        enablePayOut:
          description: When true and `shopperReference` is provided, the payment details will be tokenized for payouts.
          type: boolean
          x-addedInVersion: "32"
        enableRecurring:
          description: When true and `shopperReference` is provided, the payment details will be tokenized for recurring payments.
          type: boolean
          x-addedInVersion: "32"
        entityType:
          description: The type of the entity the payment is processed for.
          enum:
            - NaturalPerson
            - CompanyName
          type: string
        fraudOffset:
          description: An integer value that is added to the normal fraud score. The value can be either positive or negative.
          format: int32
          type: integer
        fundOrigin:
          $ref: "#/components/schemas/FundOrigin"
          description: The person or entity funding the money.
        fundRecipient:
          $ref: "#/components/schemas/FundRecipient"
          description: the person or entity receiving the money
        installments:
          $ref: "#/components/schemas/Installments"
          description: Contains installment settings. For more information, refer to [Installments](https://docs.adyen.com/payment-methods/cards/credit-card-installments).
        lineItems:
          description: |-
            Price and product information about the purchased items, to be included on the invoice sent to the shopper.
            > This field is required for 3x 4x Oney, Affirm, Afterpay, Clearpay, Klarna, Ratepay, and Zip.
          items:
            $ref: "#/components/schemas/LineItem"
          type: array
          x-addedInVersion: "32"
        mandate:
          $ref: "#/components/schemas/Mandate"
          description: The mandate details to initiate recurring transaction.
        mcc:
          description: The [merchant category code](https://en.wikipedia.org/wiki/Merchant_category_code) (MCC) is a four-digit number, which relates to a particular market segment. This code reflects the predominant activity that is conducted by the merchant.
          type: string
        merchantAccount:
          description: The merchant account identifier, with which you want to process the transaction.
          type: string
        merchantOrderReference:
          description: |-
            This reference allows linking multiple transactions to each other for reporting purposes (i.e. order auth-rate). The reference should be unique per billing cycle.
            The same merchant order reference should never be reused after the first authorised attempt. If used, this field should be supplied for all incoming authorisations.
            > We strongly recommend you send the `merchantOrderReference` value to benefit from linking payment requests when authorisation retries take place. In addition, we recommend you provide `retry.orderAttemptNumber`, `retry.chainAttemptNumber`, and `retry.skipRetry` values in `PaymentRequest.additionalData`.
          type: string
        metadata:
          additionalProperties:
            type: string
          description: |-
            Metadata consists of entries, each of which includes a key and a value.
            Limits:
            * Maximum 20 key-value pairs per request. When exceeding, the "177" error occurs: "Metadata size exceeds limit".
            * Maximum 20 characters per key.
            * Maximum 80 characters per value. 
          type: object
        mpiData:
          $ref: "#/components/schemas/ThreeDSecureData"
          description: Authentication data produced by an MPI (Mastercard SecureCode, Visa Secure, or Cartes Bancaires).
        order:
          $ref: "#/components/schemas/EncryptedOrderData"
          description: The order information required for partial payments.
        orderReference:
          description: When you are doing multiple partial (gift card) payments, this is the `pspReference` of the first payment. We use this to link the multiple payments to each other. As your own reference for linking multiple payments, use the `merchantOrderReference`instead.
          type: string
        paymentMethod:
          description: The type and required details of a payment method to use.
          oneOf:
            - $ref: "#/components/schemas/ApplePayDonations"
            - $ref: "#/components/schemas/CardDonations"
            - $ref: "#/components/schemas/GooglePayDonations"
            - $ref: "#/components/schemas/IdealDonations"
            - $ref: "#/components/schemas/PayWithGoogleDonations"
        recurringExpiry:
          description: Date after which no further authorisations shall be performed. Only for 3D Secure 2.
          type: string
        recurringFrequency:
          description: Minimum number of days between authorisations. Only for 3D Secure 2.
          type: string
        recurringProcessingModel:
          description: |
            Defines a recurring payment type. Required when creating a token to store payment details or using stored payment details.
            Allowed values:
            * `Subscription` – A transaction for a fixed or variable amount, which follows a fixed schedule.
            * `CardOnFile` – With a card-on-file (CoF) transaction, card details are stored to enable one-click or omnichannel journeys, or simply to streamline the checkout process. Any subscription not following a fixed schedule is also considered a card-on-file transaction.
            * `UnscheduledCardOnFile` – An unscheduled card-on-file (UCoF) transaction is a transaction that occurs on a non-fixed schedule and/or have variable amounts. For example, automatic top-ups when a cardholder's balance drops below a certain amount.
          enum:
            - CardOnFile
            - Subscription
            - UnscheduledCardOnFile
          type: string
          x-addedInVersion: "30"
        redirectFromIssuerMethod:
          description: Specifies the redirect method (GET or POST) when redirecting back from the issuer.
          type: string
          x-addedInVersion: "32"
        redirectToIssuerMethod:
          description: Specifies the redirect method (GET or POST) when redirecting to the issuer.
          type: string
          x-addedInVersion: "32"
        reference:
          description: |-
            The reference to uniquely identify a payment. This reference is used in all communication with you about the payment status. We recommend using a unique value per payment; however, it is not a requirement.
            If you need to provide multiple references for a transaction, separate them with hyphens ("-").
            Maximum length: 80 characters.
          type: string
        returnUrl:
          description: |-
            The URL to return to in case of a redirection.
            The format depends on the channel. This URL can have a maximum of 1024 characters.
            * For web, include the protocol `http://` or `https://`. You can also include your own additional query parameters, for example, shopper ID or order reference number.
            Example: `https://your-company.com/checkout?shopperOrder=12xy`
            * For iOS, use the custom URL for your app. To know more about setting custom URL schemes, refer to the [Apple Developer documentation](https://developer.apple.com/documentation/uikit/inter-process_communication/allowing_apps_and_websites_to_link_to_your_content/defining_a_custom_url_scheme_for_your_app).
            Example: `my-app://`
            * For Android, use a custom URL handled by an Activity on your app. You can configure it with an [intent filter](https://developer.android.com/guide/components/intents-filters).
            Example: `my-app://your.package.name`
          maxLength: 8000
          type: string
        riskData:
          $ref: "#/components/schemas/RiskData"
          description: Contains risk data, such as client-side data, used to identify risk for a transaction.
        selectedRecurringDetailReference:
          description: The `recurringDetailReference` you want to use for this payment. The value `LATEST` can be used to select the most recently stored recurring detail.
          type: string
        sessionValidity:
          description: |-
            The date and time until when the session remains valid, in [ISO 8601](https://www.w3.org/TR/NOTE-datetime) format.

            For example: 2020-07-18T15:42:40.428+01:00
          type: string
        shopperEmail:
          description: |-
            The shopper's email address. We recommend that you provide this data, as it is used in velocity fraud checks.
            > For 3D Secure 2 transactions, schemes require `shopperEmail` for all browser-based and mobile implementations.
          type: string
        shopperIP:
          description: |-
            The shopper's IP address. In general, we recommend that you provide this data, as it is used in a number of risk checks (for instance, number of payment attempts or location-based checks).
            > For 3D Secure 2 transactions, schemes require `shopperIP` for all browser-based implementations.
            This field is also mandatory for some merchants depending on your business model. For more information, [contact Support](https://www.adyen.help/hc/en-us/requests/new).
          type: string
        shopperInteraction:
          description: |-
            Specifies the sales channel, through which the shopper gives their card details, and whether the shopper is a returning customer.
            For the web service API, Adyen assumes Ecommerce shopper interaction by default.

            This field has the following possible values:
            * `Ecommerce` - Online transactions where the cardholder is present (online). For better authorisation rates, we recommend sending the card security code (CSC) along with the request.
            * `ContAuth` - Card on file and/or subscription transactions, where the cardholder is known to the merchant (returning customer). If the shopper is present (online), you can supply also the CSC to improve authorisation (one-click payment).
            * `Moto` - Mail-order and telephone-order transactions where the shopper is in contact with the merchant via email or telephone.
            * `POS` - Point-of-sale transactions where the shopper is physically present to make a payment using a secure payment terminal.
          enum:
            - Ecommerce
            - ContAuth
            - Moto
            - POS
          type: string
        shopperLocale:
          description: The combination of a language code and a country code to specify the language to be used in the payment.
          type: string
        shopperName:
          $ref: "#/components/schemas/Name"
          description: The shopper's full name.
        shopperReference:
          description: |-
            Required for recurring payments. 
            Your reference to uniquely identify this shopper, for example user ID or account ID. Minimum length: 3 characters.
            > Your reference must not include personally identifiable information (PII), for example name or email address.
          maxLength: 256
          minLength: 3
          type: string
        shopperStatement:
          description: |-
            The text to be shown on the shopper's bank statement.
             We recommend sending a maximum of 22 characters, otherwise banks might truncate the string.
             Allowed characters: **a-z**, **A-Z**, **0-9**, spaces, and special characters **. , ' _ - ? + * /**.
          type: string
        socialSecurityNumber:
          description: The shopper's social security number.
          type: string
        splits:
          description: An array of objects specifying how to split a payment when using [Adyen for Platforms](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information), [Classic Platforms integration](https://docs.adyen.com/marketplaces-and-platforms/classic/processing-payments#providing-split-information), or [Issuing](https://docs.adyen.com/issuing/manage-funds#split).
          items:
            $ref: "#/components/schemas/Split"
          type: array
          x-addedInVersion: "37"
        store:
          description: Required for Adyen for Platforms integrations if you have a platform setup. This is your [reference](https://docs.adyen.com/api-explorer/Management/3/post/merchants/(merchantId)/stores#request-reference) (on [balance platform](https://docs.adyen.com/marketplaces-and-platforms/classic/platforms-for-partners#route-payments)) or the [storeReference](https://docs.adyen.com/api-explorer/Account/latest/post/updateAccountHolder#request-accountHolderDetails-storeDetails-storeReference) (in the [classic integration](https://docs.adyen.com/marketplaces-and-platforms/processing-payments/route-payment-to-store/#route-a-payment-to-a-store)) for the ecommerce or point-of-sale store that is processing the payment.
          maxLength: 16
          minLength: 1
          type: string
        telephoneNumber:
          description: The shopper's telephone number.
          type: string
        trustedShopper:
          description: Set to true if the payment should be routed to a trusted MID.
          type: boolean
          x-addedInVersion: "37"
      required:
        - paymentMethod
        - returnUrl
        - merchantAccount
        - reference
        - amount
      type: object
    DonationPaymentResponse:
      properties:
        amount:
          $ref: "#/components/schemas/Amount"
          description: Authorised amount in the transaction.
        donationAccount:
          description: The Adyen account name of your charity. We will provide you with this account name once your chosen charity has been [onboarded](https://docs.adyen.com/online-payments/donations#onboarding).
          type: string
        id:
          description: Your unique resource identifier.
          type: string
        merchantAccount:
          description: The merchant account identifier, with which you want to process the transaction.
          type: string
        payment:
          $ref: "#/components/schemas/PaymentResponse"
          description: Action to be taken for completing the payment.
        reference:
          description: 'The reference to uniquely identify a payment. This reference is used in all communication with you about the payment status. We recommend using a unique value per payment; however, it is not a requirement. If you need to provide multiple references for a transaction, separate them with hyphens ("-"). Maximum length: 80 characters.'
          type: string
        status:
          description: |-
            The status of the donation transaction.

            Possible values:
            * **completed**
            * **pending**
            * **refused**
          enum:
            - completed
            - pending
            - refused
          type: string
      type: object
    DotpayDetails:
      additionalProperties: false
      properties:
        issuer:
          description: The Dotpay issuer value of the shopper's selected bank. Set this to an **id** of a Dotpay issuer to preselect it.
          type: string
        type:
          default: dotpay
          description: "**dotpay**"
          enum:
            - dotpay
          type: string
      required:
        - issuer
      title: Dotpay
      type: object
    DragonpayDetails:
      additionalProperties: false
      properties:
        issuer:
          description: The Dragonpay issuer value of the shopper's selected bank. Set this to an **id** of a Dragonpay issuer to preselect it.
          type: string
        shopperEmail:
          description: The shopper’s email address.
          type: string
        type:
          description: "**dragonpay**"
          enum:
            - dragonpay_ebanking
            - dragonpay_otc_banking
            - dragonpay_otc_non_banking
            - dragonpay_otc_philippines
          type: string
      required:
        - type
        - issuer
      title: Dragonpay
      type: object
    EcontextVoucherDetails:
      additionalProperties: false
      properties:
        firstName:
          description: The shopper's first name.
          type: string
        lastName:
          description: The shopper's last name.
          type: string
        shopperEmail:
          description: The shopper's email.
          type: string
        telephoneNumber:
          description: The shopper's contact number. It must have an international number format, for example **+31 20 779 1846**. Formats like **+31 (0)20 779 1846** or **0031 20 779 1846** are not accepted.
          type: string
        type:
          description: "**econtextvoucher**"
          enum:
            - econtext_seveneleven
            - econtext_stores
          type: string
      required:
        - type
        - firstName
        - lastName
        - shopperEmail
        - telephoneNumber
      title: Voucher
      type: object
    EncryptedOrderData:
      properties:
        orderData:
          description: The encrypted order data.
          type: string
        pspReference:
          description: The `pspReference` that belongs to the order.
          type: string
      required:
        - pspReference
        - orderData
      type: object
    ExternalPlatform:
      properties:
        integrator:
          description: External platform integrator.
          type: string
        name:
          description: Name of the field. For example, Name of External Platform.
          type: string
        version:
          description: Version of the field. For example, Version of External Platform.
          type: string
      type: object
    ForexQuote:
      properties:
        account:
          description: The account name.
          type: string
        accountType:
          description: The account type.
          type: string
        baseAmount:
          $ref: "#/components/schemas/Amount"
          description: The base amount.
        basePoints:
          description: The base points.
          format: int32
          type: integer
        buy:
          $ref: "#/components/schemas/Amount"
          description: The buy rate.
        interbank:
          $ref: "#/components/schemas/Amount"
          description: The interbank amount.
        reference:
          description: The reference assigned to the forex quote request.
          type: string
        sell:
          $ref: "#/components/schemas/Amount"
          description: The sell rate.
        signature:
          description: The signature to validate the integrity.
          type: string
        source:
          description: The source of the forex quote.
          type: string
        type:
          description: The type of forex.
          type: string
        validTill:
          description: The date until which the forex quote is valid.
          format: date-time
          type: string
      required:
        - validTill
        - basePoints
      type: object
    FraudCheckResult:
      properties:
        accountScore:
          description: The fraud score generated by the risk check.
          format: int32
          type: integer
        checkId:
          description: The ID of the risk check.
          format: int32
          type: integer
        name:
          description: The name of the risk check.
          type: string
      required:
        - checkId
        - name
        - accountScore
      type: object
    FraudCheckResultWrapper:
      properties:
        FraudCheckResult:
          $ref: "#/components/schemas/FraudCheckResult"
    FraudResult:
      properties:
        accountScore:
          description: The total fraud score generated by the risk checks.
          format: int32
          type: integer
        results:
          description: The result of the individual risk checks.
          items:
            $ref: "#/components/schemas/FraudCheckResultWrapper"
          type: array
      required:
        - accountScore
      type: object
    FundOrigin:
      properties:
        billingAddress:
          $ref: "#/components/schemas/Address"
          description: The address where to send the invoice.
        shopperEmail:
          description: Email address of the person.
          type: string
        shopperName:
          $ref: "#/components/schemas/Name"
          description: The name of the person
        telephoneNumber:
          description: Phone number of the person
          type: string
        walletIdentifier:
          type: string
      type: object
    FundRecipient:
      properties:
        billingAddress:
          $ref: "#/components/schemas/Address"
          description: The address where to send the invoice.
        paymentMethod:
          $ref: "#/components/schemas/CardDetails"
          description: the used paymentMetohd
        shopperEmail:
          description: the email address of the person
          type: string
        shopperName:
          $ref: "#/components/schemas/Name"
          description: the name of the person
        shopperReference:
          description: |-
            Required for recurring payments. 
            Your reference to uniquely identify this shopper, for example user ID or account ID. Minimum length: 3 characters.
            > Your reference must not include personally identifiable information (PII), for example name or email address.
          maxLength: 256
          minLength: 3
          type: string
        storedPaymentMethodId:
          description: This is the `recurringDetailReference` returned in the response when you created the token.
          maxLength: 64
          type: string
        subMerchant:
          $ref: "#/components/schemas/SubMerchant"
          description: |-
            Required for Back-to-Back/ purchase driven load in Wallet transactions.
            Contains the final merchant who will be receiving the money, also known as subMerchant, information.
        telephoneNumber:
          description: the telephone number of the person
          type: string
        walletIdentifier:
          description: indicates where the money is going
          type: string
        walletOwnerTaxId:
          description: indicates the tax identifier of the fund recepient
          type: string
      type: object
    GenericIssuerPaymentMethodDetails:
      additionalProperties: false
      properties:
        issuer:
          description: The issuer id of the shopper's selected bank.
          type: string
        recurringDetailReference:
          description: This is the `recurringDetailReference` returned in the response when you created the token.
          type: string
        type:
          description: "**genericissuer**"
          enum:
            - onlineBanking_PL
            - eps
            - onlineBanking_SK
            - onlineBanking_CZ
          type: string
      required:
        - type
        - issuer
      title: Stored Payment Method
      type: object
    GiropayDetails:
      additionalProperties: false
      properties:
        recurringDetailReference:
          description: This is the `recurringDetailReference` returned in the response when you created the token.
          type: string
        type:
          default: giropay
          description: "**giropay**"
          enum:
            - giropay
          type: string
      title: Giropay
      type: object
    GooglePayDetails:
      additionalProperties: false
      properties:
        fundingSource:
          description: The funding source that should be used when multiple sources are available. For Brazilian combo cards, by default the funding source is credit. To use debit, set this value to **debit**.
          enum:
            - credit
            - debit
          type: string
        googlePayCardNetwork:
          description: "The selected payment card network. "
          type: string
        googlePayToken:
          description: The `token` that you obtained from the [Google Pay API](https://developers.google.com/pay/api/web/reference/response-objects#PaymentData) `PaymentData` response.
          type: string
        recurringDetailReference:
          description: This is the `recurringDetailReference` returned in the response when you created the token.
          type: string
        type:
          default: googlepay
          description: "**googlepay**, **paywithgoogle**"
          enum:
            - googlepay
          type: string
      required:
        - googlePayToken
      title: Google Pay
      type: object
    GooglePayDonations:
      additionalProperties: false
      properties:
        fundingSource:
          description: The funding source that should be used when multiple sources are available. For Brazilian combo cards, by default the funding source is credit. To use debit, set this value to **debit**.
          enum:
            - credit
            - debit
          type: string
        googlePayCardNetwork:
          description: "The selected payment card network. "
          type: string
        googlePayToken:
          description: The `token` that you obtained from the [Google Pay API](https://developers.google.com/pay/api/web/reference/response-objects#PaymentData) `PaymentData` response.
          type: string
        recurringDetailReference:
          description: This is the `recurringDetailReference` returned in the response when you created the token.
          type: string
        type:
          default: googlepay
          description: "**googlepay**, **paywithgoogle**"
          enum:
            - googlepay
          type: string
      required:
        - googlePayToken
      title: Google Pay
      type: object
    IdealDetails:
      additionalProperties: false
      properties:
        issuer:
          description: The iDEAL issuer value of the shopper's selected bank. Set this to an **id** of an iDEAL issuer to preselect it.
          type: string
        recurringDetailReference:
          description: This is the `recurringDetailReference` returned in the response when you created the token.
          type: string
        type:
          default: ideal
          description: "**ideal**"
          enum:
            - ideal
          type: string
      required:
        - issuer
      title: iDEAL
      type: object
    IdealDonations:
      additionalProperties: false
      properties:
        issuer:
          description: The iDEAL issuer value of the shopper's selected bank. Set this to an **id** of an iDEAL issuer to preselect it.
          type: string
        recurringDetailReference:
          description: This is the `recurringDetailReference` returned in the response when you created the token.
          type: string
        type:
          default: ideal
          description: "**ideal**"
          enum:
            - ideal
          type: string
      required:
        - issuer
      title: iDEAL
      type: object
    InputDetail:
      properties:
        configuration:
          additionalProperties:
            type: string
          description: Configuration parameters for the required input.
          type: object
        details:
          description: Input details can also be provided recursively.
          items:
            $ref: "#/components/schemas/SubInputDetail"
          type: array
        inputDetails:
          deprecated: true
          description: Input details can also be provided recursively (deprecated).
          items:
            $ref: "#/components/schemas/SubInputDetail"
          type: array
        itemSearchUrl:
          description: In case of a select, the URL from which to query the items.
          type: string
        items:
          description: In case of a select, the items to choose from.
          items:
            $ref: "#/components/schemas/Item"
          type: array
        key:
          description: The value to provide in the result.
          type: string
        optional:
          description: True if this input value is optional.
          type: boolean
        type:
          description: The type of the required input.
          type: string
        value:
          description: The value can be pre-filled, if available.
          type: string
      type: object
    InstallmentOption:
      properties:
        maxValue:
          description: The maximum number of installments offered for this payment method.
          format: int32
          type: integer
      type: object
    Installments:
      properties:
        value:
          description: |-
            Defines the number of installments. Its value needs to be greater than zero.

            Usually, the maximum allowed number of installments is capped. For example, it may not be possible to split a payment in more than 24 installments. The acquirer sets this upper limit, so its value may vary.
          format: int32
          type: integer
      required:
        - value
      type: object
    InstallmentsNumber:
      properties:
        maxNumberOfInstallments:
          description: Maximum number of installments
          format: int32
          type: integer
      required:
        - maxNumberOfInstallments
      type: object
    Item:
      properties:
        id:
          description: The value to provide in the result.
          type: string
        name:
          description: The display name.
          type: string
      type: object
    KlarnaDetails:
      additionalProperties: false
      properties:
        billingAddress:
          description: The address where to send the invoice.
          type: string
        deliveryAddress:
          description: The address where the goods should be delivered.
          type: string
        personalDetails:
          description: Shopper name, date of birth, phone number, and email address.
          type: string
        recurringDetailReference:
          description: This is the `recurringDetailReference` returned in the response when you created the token.
          type: string
        subtype:
          description: The type of flow to initiate.
          type: string
        type:
          default: klarna
          description: "**klarna**"
          enum:
            - klarna
            - klarnapayments
            - klarnapayments_account
            - klarnapayments_b2b
            - klarna_paynow
            - klarna_account
            - klarna_b2b
          type: string
      required:
        - type
      title: Klarna
      type: object
    LineItem:
      properties:
        amountExcludingTax:
          description: Item amount excluding the tax, in minor units.
          format: int64
          type: integer
        amountIncludingTax:
          description: Item amount including the tax, in minor units.
          format: int64
          type: integer
        description:
          description: Description of the line item.
          type: string
        id:
          description: ID of the line item.
          type: string
        imageUrl:
          description: Link to the picture of the purchased item.
          type: string
        itemCategory:
          description: Item category, used by the payment methods PayPal and Ratepay.
          type: string
        productUrl:
          description: Link to the purchased item.
          type: string
        quantity:
          description: Number of items.
          format: int64
          type: integer
        taxAmount:
          description: Tax amount, in minor units.
          format: int64
          type: integer
        taxPercentage:
          description: Tax percentage, in minor units.
          format: int64
          type: integer
      type: object
    Mandate:
      properties:
        amount:
          description: The billing amount (in minor units) of the recurring transactions.
          type: string
        amountRule:
          description: |+
            The limitation rule of the billing amount.

            Possible values:
             * **max**: The transaction amount can not exceed the `amount`.

             * **exact**: The transaction amount should be the same as the `amount`.

          enum:
            - max
            - exact
          type: string
        billingAttemptsRule:
          description: |+
            The rule to specify the period, within which the recurring debit can happen, relative to the mandate recurring date.

            Possible values:

             * **on**: On a specific date.

             * **before**:  Before and on a specific date.

             * **after**: On and after a specific date.

          enum:
            - on
            - before
            - after
          type: string
        billingDay:
          description: |-
            The number of the day, on which the recurring debit can happen. Should be within the same calendar month as the mandate recurring date.

            Possible values: 1-31 based on the `frequency`.
          type: string
        endsAt:
          description: End date of the billing plan, in YYYY-MM-DD format.
          type: string
        frequency:
          description: |-
            The frequency with which a shopper should be charged.

            Possible values: **daily**, **weekly**, **biWeekly**, **monthly**, **quarterly**, **halfYearly**, **yearly**.
          enum:
            - adhoc
            - daily
            - weekly
            - biWeekly
            - monthly
            - quarterly
            - halfYearly
            - yearly
          type: string
        remarks:
          description: The message shown by UPI to the shopper on the approval screen.
          type: string
        startsAt:
          description: Start date of the billing plan, in YYYY-MM-DD format. By default, the transaction date.
          type: string
      required:
        - frequency
        - amount
        - endsAt
      type: object
    MasterpassDetails:
      additionalProperties: false
      properties:
        fundingSource:
          description: The funding source that should be used when multiple sources are available. For Brazilian combo cards, by default the funding source is credit. To use debit, set this value to **debit**.
          enum:
            - credit
            - debit
          type: string
        masterpassTransactionId:
          description: The Masterpass transaction ID.
          type: string
        type:
          default: masterpass
          description: "**masterpass**"
          enum:
            - masterpass
          type: string
      required:
        - masterpassTransactionId
      title: Masterpass
      type: object
    MbwayDetails:
      additionalProperties: false
      properties:
        shopperEmail:
          description: ""
          type: string
        telephoneNumber:
          description: ""
          type: string
        type:
          default: mbway
          description: "**mbway**"
          enum:
            - mbway
          type: string
      required:
        - telephoneNumber
        - shopperEmail
      title: MBWay
      type: object
    MerchantDevice:
      properties:
        os:
          description: Operating system running on the merchant device.
          type: string
        osVersion:
          description: Version of the operating system on the merchant device.
          type: string
        reference:
          description: Merchant device reference.
          type: string
      type: object
    MobilePayDetails:
      additionalProperties: false
      properties:
        type:
          default: mobilepay
          description: "**mobilepay**"
          enum:
            - mobilepay
          type: string
      title: MobilePay
      type: object
    MolPayDetails:
      additionalProperties: false
      properties:
        issuer:
          description: The shopper's bank. Specify this with the issuer value that corresponds to this bank.
          type: string
        type:
          description: "**molpay**"
          enum:
            - molpay_ebanking_fpx_MY
            - molpay_ebanking_TH
          type: string
      required:
        - type
        - issuer
      title: MOLPay
      type: object
    Name:
      properties:
        firstName:
          description: The first name.
          type: string
        lastName:
          description: The last name.
          type: string
      required:
        - firstName
        - lastName
      type: object
    OpenInvoiceDetails:
      additionalProperties: false
      properties:
        billingAddress:
          description: The address where to send the invoice.
          type: string
        deliveryAddress:
          description: The address where the goods should be delivered.
          type: string
        personalDetails:
          description: Shopper name, date of birth, phone number, and email address.
          type: string
        recurringDetailReference:
          description: This is the `recurringDetailReference` returned in the response when you created the token.
          type: string
        type:
          default: openinvoice
          description: "**openinvoice**"
          enum:
            - openinvoice
            - afterpay_directdebit
            - atome_pos
          type: string
      title: Open Invoice
      type: object
    PayPalDetails:
      additionalProperties: false
      properties:
        orderID:
          description: The unique ID associated with the order.
          type: string
        payeePreferred:
          description: IMMEDIATE_PAYMENT_REQUIRED or UNRESTRICTED
          type: string
        payerID:
          description: The unique ID associated with the payer.
          type: string
        payerSelected:
          description: PAYPAL or PAYPAL_CREDIT
          type: string
        recurringDetailReference:
          description: This is the `recurringDetailReference` returned in the response when you created the token.
          type: string
        subtype:
          description: The type of flow to initiate.
          enum:
            - redirect
            - sdk
          type: string
        type:
          default: paypal
          description: "**paypal**"
          enum:
            - paypal
          type: string
      required:
        - type
      title: PayPal
      type: object
    PayUUpiDetails:
      additionalProperties: false
      properties:
        recurringDetailReference:
          description: This is the `recurringDetailReference` returned in the response when you created the token.
          type: string
        shopperNotificationReference:
          description: The `shopperNotificationReference` returned in the response when you requested to notify the shopper. Used for recurring payment only.
          type: string
        type:
          default: payu_IN_upi
          description: "**payu_IN_upi**"
          enum:
            - payu_IN_upi
          type: string
        virtualPaymentAddress:
          description: The virtual payment address for UPI.
          type: string
      required:
        - type
      title: PayU
      type: object
    PayWithGoogleDetails:
      additionalProperties: false
      properties:
        fundingSource:
          description: The funding source that should be used when multiple sources are available. For Brazilian combo cards, by default the funding source is credit. To use debit, set this value to **debit**.
          enum:
            - credit
            - debit
          type: string
        googlePayToken:
          description: The `token` that you obtained from the [Google Pay API](https://developers.google.com/pay/api/web/reference/response-objects#PaymentData) `PaymentData` response.
          type: string
        recurringDetailReference:
          description: This is the `recurringDetailReference` returned in the response when you created the token.
          type: string
        type:
          default: paywithgoogle
          description: "**paywithgoogle**"
          enum:
            - paywithgoogle
          type: string
      required:
        - googlePayToken
      title: Google Pay
      type: object
    PayWithGoogleDonations:
      additionalProperties: false
      properties:
        fundingSource:
          description: The funding source that should be used when multiple sources are available. For Brazilian combo cards, by default the funding source is credit. To use debit, set this value to **debit**.
          enum:
            - credit
            - debit
          type: string
        googlePayToken:
          description: The `token` that you obtained from the [Google Pay API](https://developers.google.com/pay/api/web/reference/response-objects#PaymentData) `PaymentData` response.
          type: string
        recurringDetailReference:
          description: This is the `recurringDetailReference` returned in the response when you created the token.
          type: string
        type:
          default: paywithgoogle
          description: "**paywithgoogle**"
          enum:
            - paywithgoogle
          type: string
      required:
        - googlePayToken
      title: Google Pay
      type: object
    PaymentAmountUpdateRequest:
      properties:
        amount:
          $ref: "#/components/schemas/Amount"
          description: The updated amount. The `currency` must match the currency used in authorisation.
        applicationInfo:
          $ref: "#/components/schemas/ApplicationInfo"
          description: Information about your application. For more details, see [Building Adyen solutions](https://docs.adyen.com/development-resources/building-adyen-solutions).
        merchantAccount:
          description: The merchant account that is used to process the payment.
          type: string
        reason:
          description: |-
            The reason for the amount update. Possible values: 
            * **delayedCharge** 
            * **noShow**
          enum:
            - delayedCharge
            - noShow
          type: string
        reference:
          description: "Your reference for the amount update request. Maximum length: 80 characters."
          type: string
        splits:
          description: An array of objects specifying how the amount should be split between accounts when using Adyen for Platforms. For details, refer to [Providing split information](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information).
          items:
            $ref: "#/components/schemas/Split"
          type: array
      required:
        - merchantAccount
        - amount
      type: object
    PaymentAmountUpdateResponse:
      properties:
        amount:
          $ref: "#/components/schemas/Amount"
          description: The updated amount.
        merchantAccount:
          description: The merchant account that is used to process the payment.
          type: string
        paymentPspReference:
          description: "The [`pspReference`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__resParam_pspReference) of the payment to update. "
          type: string
        pspReference:
          description: Adyen's 16-character reference associated with the amount update request.
          type: string
        reason:
          description: |-
            The reason for the amount update. Possible values: 
            * **DelayedCharge** 
            * **NoShow**
          enum:
            - delayedCharge
            - noShow
          type: string
        reference:
          description: "Your reference for the amount update request. Maximum length: 80 characters."
          type: string
        splits:
          description: An array of objects specifying how the amount should be split between accounts when using Adyen for Platforms. For details, refer to [Providing split information](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information).
          items:
            $ref: "#/components/schemas/Split"
          type: array
        status:
          description: The status of your request. This will always have the value **received**.
          enum:
            - received
          type: string
      required:
        - status
        - merchantAccount
        - amount
        - reference
        - pspReference
        - paymentPspReference
      type: object
    PaymentCancelRequest:
      properties:
        applicationInfo:
          $ref: "#/components/schemas/ApplicationInfo"
          description: Information about your application. For more details, see [Building Adyen solutions](https://docs.adyen.com/development-resources/building-adyen-solutions).
        merchantAccount:
          description: The merchant account that is used to process the payment.
          type: string
        reference:
          description: "Your reference for the cancel request. Maximum length: 80 characters."
          type: string
      required:
        - merchantAccount
      type: object
    PaymentCancelResponse:
      properties:
        merchantAccount:
          description: The merchant account that is used to process the payment.
          type: string
        paymentPspReference:
          description: "The [`pspReference`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__resParam_pspReference) of the payment to cancel. "
          type: string
        pspReference:
          description: Adyen's 16-character reference associated with the cancel request.
          type: string
        reference:
          description: Your reference for the cancel request.
          type: string
        status:
          description: The status of your request. This will always have the value **received**.
          enum:
            - received
          type: string
      required:
        - status
        - merchantAccount
        - paymentPspReference
        - pspReference
      type: object
    PaymentCaptureRequest:
      properties:
        amount:
          $ref: "#/components/schemas/Amount"
          description: The amount that you want to capture. The `currency` must match the currency used in authorisation, the `value` must be smaller than or equal to the authorised amount.
        applicationInfo:
          $ref: "#/components/schemas/ApplicationInfo"
          description: Information about your application. For more details, see [Building Adyen solutions](https://docs.adyen.com/development-resources/building-adyen-solutions).
        lineItems:
          description: |-
            Price and product information of the refunded items, required for [partial refunds](https://docs.adyen.com/online-payments/refund#refund-a-payment).
            > This field is required for partial refunds with 3x 4x Oney, Affirm, Afterpay, Atome, Clearpay, Klarna, Ratepay, and Zip.
          items:
            $ref: "#/components/schemas/LineItem"
          type: array
        merchantAccount:
          description: The merchant account that is used to process the payment.
          type: string
        reference:
          description: "Your reference for the capture request. Maximum length: 80 characters."
          type: string
        splits:
          description: An array of objects specifying how the amount should be split between accounts when using Adyen for Platforms. For details, refer to [Providing split information](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information).
          items:
            $ref: "#/components/schemas/Split"
          type: array
      required:
        - merchantAccount
        - amount
      type: object
    PaymentCaptureResponse:
      properties:
        amount:
          $ref: "#/components/schemas/Amount"
          description: The captured amount.
        lineItems:
          description: |-
            Price and product information of the refunded items, required for [partial refunds](https://docs.adyen.com/online-payments/refund#refund-a-payment).
            > This field is required for partial refunds with 3x 4x Oney, Affirm, Afterpay, Atome, Clearpay, Klarna, Ratepay, and Zip.
          items:
            $ref: "#/components/schemas/LineItem"
          type: array
        merchantAccount:
          description: The merchant account that is used to process the payment.
          type: string
        paymentPspReference:
          description: "The [`pspReference`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__resParam_pspReference) of the payment to capture. "
          type: string
        pspReference:
          description: Adyen's 16-character reference associated with the capture request.
          type: string
        reference:
          description: Your reference for the capture request.
          type: string
        splits:
          description: An array of objects specifying how the amount should be split between accounts when using Adyen for Platforms. For details, refer to [Providing split information](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information).
          items:
            $ref: "#/components/schemas/Split"
          type: array
        status:
          description: The status of your request. This will always have the value **received**.
          enum:
            - received
          type: string
      required:
        - status
        - merchantAccount
        - amount
        - pspReference
        - paymentPspReference
      type: object
    PaymentCompletionDetails:
      properties:
        MD:
          description: A payment session identifier returned by the card issuer.
          maxLength: 20000
          type: string
        PaReq:
          description: (3D) Payment Authentication Request data for the card issuer.
          type: string
        PaRes:
          description: (3D) Payment Authentication Response data by the card issuer.
          maxLength: 20000
          type: string
        authorization_token:
          type: string
        billingToken:
          description: PayPal-generated token for recurring payments.
          type: string
        cupsecureplus.smscode:
          description: The SMS verification code collected from the shopper.
          type: string
        facilitatorAccessToken:
          description: PayPal-generated third party access token.
          type: string
        oneTimePasscode:
          description: A random number sent to the mobile phone number of the shopper to verify the payment.
          type: string
        orderID:
          description: PayPal-assigned ID for the order.
          type: string
        payerID:
          description: PayPal-assigned ID for the payer (shopper).
          type: string
        payload:
          description: Payload appended to the `returnURL` as a result of the redirect.
          maxLength: 20000
          type: string
        paymentID:
          description: PayPal-generated ID for the payment.
          type: string
        paymentStatus:
          description: "Value passed from the WeChat MiniProgram `wx.requestPayment` **complete** callback. Possible values: any value starting with `requestPayment:`."
          type: string
        redirectResult:
          description: The result of the redirect as appended to the `returnURL`.
          maxLength: 20000
          type: string
        resultCode:
          description: Value you received from the WeChat Pay SDK.
          type: string
        threeDSResult:
          description: "Base64-encoded string returned by the Component after the challenge flow. It contains the following parameters: `transStatus`, `authorisationToken`."
          maxLength: 50000
          type: string
        threeds2.challengeResult:
          description: "Base64-encoded string returned by the Component after the challenge flow. It contains the following parameter: `transStatus`."
          maxLength: 50000
          type: string
        threeds2.fingerprint:
          description: "Base64-encoded string returned by the Component after the challenge flow. It contains the following parameter: `threeDSCompInd`."
          maxLength: 100000
          type: string
      type: object
    PaymentDetails:
      additionalProperties: false
      properties:
        type:
          description: The payment method type.
          enum:
            - alipay
            - multibanco
            - bankTransfer_IBAN
            - paybright
            - paynow
            - affirm
            - affirm_pos
            - trustly
            - trustlyvector
            - oney
            - facilypay
            - facilypay_3x
            - facilypay_4x
            - facilypay_6x
            - facilypay_10x
            - facilypay_12x
            - unionpay
            - kcp_banktransfer
            - kcp_payco
            - kcp_creditcard
            - wechatpaySDK
            - wechatpayQR
            - wechatpayWeb
            - molpay_boost
            - wallet_IN
            - payu_IN_cashcard
            - payu_IN_nb
            - upi_qr
            - paytm
            - molpay_ebanking_VN
            - paybybank
            - ebanking_FI
            - molpay_ebanking_MY
            - molpay_ebanking_direct_MY
            - swish
            - pix
            - walley
            - walley_b2b
            - alma
            - paypo
            - molpay_fpx
            - konbini
            - directEbanking
            - boletobancario
            - neteller
            - paysafecard
            - cashticket
            - ikano
            - karenmillen
            - oasis
            - warehouse
            - primeiropay_boleto
            - mada
            - benefit
            - knet
            - omannet
            - gopay_wallet
            - kcp_naverpay
            - onlinebanking_IN
            - fawry
            - atome
            - moneybookers
            - naps
            - nordea
            - boletobancario_bradesco
            - boletobancario_itau
            - boletobancario_santander
            - boletobancario_bancodobrasil
            - boletobancario_hsbc
            - molpay_maybank2u
            - molpay_cimb
            - molpay_rhb
            - molpay_amb
            - molpay_hlb
            - molpay_affin_epg
            - molpay_bankislam
            - molpay_publicbank
            - fpx_agrobank
            - touchngo
            - maybank2u_mae
            - duitnow
            - promptpay
            - twint_pos
            - alipay_hk
            - alipay_hk_web
            - alipay_hk_wap
            - alipay_wap
            - balanceplatform
          type: string
      title: Payment Details
      type: object
    PaymentDetailsRequest:
      properties:
        details:
          $ref: "#/components/schemas/PaymentCompletionDetails"
          description: Use this collection to submit the details that were returned as a result of the `/payments` call.
        paymentData:
          description: "The `paymentData` value from the `/payments` response. Required if the `/payments` response contained `paymentData`. "
          maxLength: 200000
          type: string
      required:
        - details
      type: object
    PaymentDetailsResponse:
      properties:
        additionalData:
          additionalProperties:
            type: string
          anyOf:
            - $ref: "#/components/schemas/ResponseAdditionalData3DSecure"
            - $ref: "#/components/schemas/ResponseAdditionalDataBillingAddress"
            - $ref: "#/components/schemas/ResponseAdditionalDataCard"
            - $ref: "#/components/schemas/ResponseAdditionalDataCommon"
            - $ref: "#/components/schemas/ResponseAdditionalDataDomesticError"
            - $ref: "#/components/schemas/ResponseAdditionalDataInstallments"
            - $ref: "#/components/schemas/ResponseAdditionalDataNetworkTokens"
            - $ref: "#/components/schemas/ResponseAdditionalDataOpi"
            - $ref: "#/components/schemas/ResponseAdditionalDataSepa"
          description: "Contains additional information about the payment. Some data fields are included only if you select them first: Go to **Customer Area** > **Developers** > **Additional data**."
          type: object
        authResponse:
          description: The authorisation code representing the authentication result.
          type: string
        details:
          description: When non-empty, contains all the fields that you must submit to the `/payments/details` endpoint.
          items:
            $ref: "#/components/schemas/InputDetail"
          type: array
        fraudResult:
          $ref: "#/components/schemas/FraudResult"
          description: The fraud result properties of the payment.
        merchantReference:
          description: The reference used during the /payments request.
          type: string
          x-addedInVersion: "49"
        order:
          $ref: "#/components/schemas/CheckoutOrderResponse"
          description: Contains updated information regarding the order in case order information was provided in the request.
        outputDetails:
          additionalProperties:
            type: string
          description: Contains the details that will be presented to the shopper.
          type: object
        paymentData:
          description: When non-empty, contains a value that you must submit to the `/payments/details` endpoint.
          type: string
        pspReference:
          description: Adyen's 16-character string reference associated with the transaction/request. This value is globally unique; quote it when communicating with us about this request.
          type: string
        redirect:
          $ref: "#/components/schemas/Redirect"
          description: When the payment flow requires a redirect, this object contains information about the redirect URL.
        refusalReason:
          description: |-
            If the payment's authorisation is refused or an error occurs during authorisation, this field holds Adyen's mapped reason for the refusal or a description of the error. When a transaction fails, the authorisation response includes `resultCode` and `refusalReason` values.

            For more information, see [Refusal reasons](https://docs.adyen.com/development-resources/refusal-reasons).
          type: string
        refusalReasonCode:
          description: Code that specifies the refusal reason. For more information, see [Authorisation refusal reasons](https://docs.adyen.com/development-resources/refusal-reasons).
          type: string
          x-addedInVersion: "37"
        resultCode:
          description: |-
            The result of the payment. For more information, see [Result codes](https://docs.adyen.com/online-payments/payment-result-codes).

            Possible values:

            * **AuthenticationFinished** – The payment has been successfully authenticated with 3D Secure 2. Returned for 3D Secure 2 authentication-only transactions.
            * **AuthenticationNotRequired** – The transaction does not require 3D Secure authentication. Returned for [standalone authentication-only integrations](https://docs.adyen.com/online-payments/3d-secure/other-3ds-flows/authentication-only).
            * **Authorised** – The payment was successfully authorised. This state serves as an indicator to proceed with the delivery of goods and services. This is a final state.
            * **Cancelled** – Indicates the payment has been cancelled (either by the shopper or the merchant) before processing was completed. This is a final state.
            * **ChallengeShopper** – The issuer requires further shopper interaction before the payment can be authenticated. Returned for 3D Secure 2 transactions.
            * **Error** – There was an error when the payment was being processed. The reason is given in the `refusalReason` field. This is a final state.
            * **IdentifyShopper** – The issuer requires the shopper's device fingerprint before the payment can be authenticated. Returned for 3D Secure 2 transactions.
            * **PartiallyAuthorised** – The payment has been authorised for a partial amount.
            This happens for card payments when the merchant supports Partial Authorisations and the cardholder has insufficient funds.
            * **Pending** – Indicates that it is not possible to obtain the final status of the payment. This can happen if the systems providing final status information for the payment are unavailable, or if the shopper needs to take further action to complete the payment.
            * **PresentToShopper** – Indicates that the response contains additional information that you need to present to a shopper, so that they can use it to complete a payment.
            * **Received** – Indicates the payment has successfully been received by Adyen, and will be processed. This is the initial state for all payments.
            * **RedirectShopper** – Indicates the shopper should be redirected to an external web page or app to complete the authorisation.
            * **Refused** – Indicates the payment was refused. The reason is given in the `refusalReason` field. This is a final state.
          enum:
            - AuthenticationFinished
            - AuthenticationNotRequired
            - Authorised
            - Cancelled
            - ChallengeShopper
            - Error
            - IdentifyShopper
            - PartiallyAuthorised
            - Pending
            - PresentToShopper
            - Received
            - RedirectShopper
            - Refused
            - Success
          type: string
        shopperLocale:
          description: The shopperLocale.
          type: string
      type: object
    PaymentLinkRequest:
      properties:
        allowedPaymentMethods:
          description: |-
            List of payment methods to be presented to the shopper. To refer to payment methods, use their [payment method type](https://docs.adyen.com/payment-methods/payment-method-types).

            Example: `"allowedPaymentMethods":["ideal","giropay"]`
          items:
            type: string
          type: array
        amount:
          $ref: "#/components/schemas/Amount"
          description: The payment amount and currency.
        applicationInfo:
          $ref: "#/components/schemas/ApplicationInfo"
          description: Information about your application. For more details, see [Building Adyen solutions](https://docs.adyen.com/development-resources/building-adyen-solutions).
        billingAddress:
          $ref: "#/components/schemas/Address"
          description: The address where to send the invoice.
        blockedPaymentMethods:
          description: |-
            List of payment methods to be hidden from the shopper. To refer to payment methods, use their [payment method type](https://docs.adyen.com/payment-methods/payment-method-types).

            Example: `"blockedPaymentMethods":["ideal","giropay"]`
          items:
            type: string
          type: array
        countryCode:
          description: The shopper's two-letter country code.
          type: string
        deliverAt:
          description: |-
            The date and time when the purchased goods should be delivered.

            [ISO 8601](https://www.w3.org/TR/NOTE-datetime) format: YYYY-MM-DDThh:mm:ss+TZD, for example, **2020-12-18T10:15:30+01:00**.
          format: date-time
          type: string
        deliveryAddress:
          $ref: "#/components/schemas/Address"
          description: The address where the purchased goods should be delivered.
        description:
          description: |-
            A short description visible on the payment page.
            Maximum length: 280 characters.
          type: string
        expiresAt:
          description: |-
            The date when the payment link expires.

            [ISO 8601](https://www.w3.org/TR/NOTE-datetime) format with time zone designator **Z**: YYYY-MM-DDThh:mm:ss+TZD, for example, **2020-12-18T10:15:30Z**.

            The maximum expiry date is 70 days after the payment link is created.

            If not provided, the payment link expires 24 hours after it was created.
          type: string
        installmentOptions:
          additionalProperties:
            $ref: "#/components/schemas/InstallmentOption"
          description: A set of key-value pairs that specifies the installment options available per payment method. The key must be a payment method name in lowercase. For example, **card** to specify installment options for all cards, or **visa** or **mc**. The value must be an object containing the installment options.
          type: object
        lineItems:
          description: |-
            Price and product information about the purchased items, to be included on the invoice sent to the shopper.
            This parameter is required for open invoice (_buy now, pay later_) payment methods such Afterpay, Clearpay, Klarna, RatePay, and Zip.
          items:
            $ref: "#/components/schemas/LineItem"
          type: array
        manualCapture:
          description: Indicates if the payment must be [captured manually](https://docs.adyen.com/online-payments/capture).
          type: boolean
        merchantAccount:
          description: The merchant account identifier for which the payment link is created.
          type: string
        merchantOrderReference:
          description: This reference allows linking multiple transactions to each other for reporting purposes (for example, order auth-rate). The reference should be unique per billing cycle.
          type: string
        metadata:
          additionalProperties:
            type: string
          description: |-
            Metadata consists of entries, each of which includes a key and a value.
            Limitations:
            * Maximum 20 key-value pairs per request. Otherwise, error "177" occurs: "Metadata size exceeds limit"
            * Maximum 20 characters per key. Otherwise, error "178" occurs: "Metadata key size exceeds limit"
            * A key cannot have the name `checkout.linkId`. Any value that you provide with this key is going to be replaced by the real payment link ID.
          maxLength: 80
          type: object
        recurringProcessingModel:
          description: |
            Defines a recurring payment type. Required when `storePaymentMethodMode` is set to **askForConsent** or **enabled**.
            Possible values:
            * **Subscription** – A transaction for a fixed or variable amount, which follows a fixed schedule.
            * **CardOnFile** – With a card-on-file (CoF) transaction, card details are stored to enable one-click or omnichannel journeys, or simply to streamline the checkout process. Any subscription not following a fixed schedule is also considered a card-on-file transaction.
            * **UnscheduledCardOnFile** – An unscheduled card-on-file (UCoF) transaction is a transaction that occurs on a non-fixed schedule and/or has variable amounts. For example, automatic top-ups when a cardholder's balance drops below a certain amount.
          enum:
            - CardOnFile
            - Subscription
            - UnscheduledCardOnFile
          type: string
        reference:
          description: A reference that is used to uniquely identify the payment in future communications about the payment status.
          type: string
        returnUrl:
          description: |-
            Website URL used for redirection after payment is completed.
            If provided, a **Continue** button will be shown on the payment page. If shoppers select the button, they are redirected to the specified URL.
          type: string
        reusable:
          description: Indicates whether the payment link can be reused for multiple payments. If not provided, this defaults to **false** which means the link can be used for one successful payment only.
          type: boolean
        shopperEmail:
          description: The shopper's email address.
          type: string
        shopperLocale:
          description: |-
            The language to be used in the payment page, specified by a combination of a language and country code. For example, `en-US`.

            For a list of shopper locales that Pay by Link supports, refer to [Language and localization](https://docs.adyen.com/unified-commerce/pay-by-link/payment-links/api#language).
          type: string
        shopperName:
          $ref: "#/components/schemas/Name"
          description: The shopper's full name. This object is required for some payment methods such as AfterPay, Klarna, or if you're enrolled in the PayPal Seller Protection program.
        shopperReference:
          description: |-
            Your reference to uniquely identify this shopper, for example user ID or account ID. Minimum length: 3 characters.
            > Your reference must not include personally identifiable information (PII), for example name or email address.
          maxLength: 256
          minLength: 3
          type: string
        showRemovePaymentMethodButton:
          default: true
          description: Set to **false** to hide the button that lets the shopper remove a stored payment method.
          type: boolean
        splits:
          description: An array of objects specifying how to split a payment when using [Adyen for Platforms](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information), [Classic Platforms integration](https://docs.adyen.com/marketplaces-and-platforms/classic/processing-payments#providing-split-information), or [Issuing](https://docs.adyen.com/issuing/manage-funds#split).
          items:
            $ref: "#/components/schemas/Split"
          type: array
        store:
          description: The physical store, for which this payment is processed.
          type: string
      required:
        - amount
        - reference
        - merchantAccount
      type: object
    PaymentLinkResponse:
      properties:
        allowedPaymentMethods:
          description: |-
            List of payment methods to be presented to the shopper. To refer to payment methods, use their [payment method type](https://docs.adyen.com/payment-methods/payment-method-types).

            Example: `"allowedPaymentMethods":["ideal","giropay"]`
          items:
            type: string
          type: array
        amount:
          $ref: "#/components/schemas/Amount"
          description: The payment amount and currency.
        applicationInfo:
          $ref: "#/components/schemas/ApplicationInfo"
          description: Information about your application. For more details, see [Building Adyen solutions](https://docs.adyen.com/development-resources/building-adyen-solutions).
        billingAddress:
          $ref: "#/components/schemas/Address"
          description: The address where to send the invoice.
        blockedPaymentMethods:
          description: |-
            List of payment methods to be hidden from the shopper. To refer to payment methods, use their [payment method type](https://docs.adyen.com/payment-methods/payment-method-types).

            Example: `"blockedPaymentMethods":["ideal","giropay"]`
          items:
            type: string
          type: array
        countryCode:
          description: The shopper's two-letter country code.
          type: string
        deliverAt:
          description: |-
            The date and time when the purchased goods should be delivered.

            [ISO 8601](https://www.w3.org/TR/NOTE-datetime) format: YYYY-MM-DDThh:mm:ss+TZD, for example, **2020-12-18T10:15:30+01:00**.
          format: date-time
          type: string
        deliveryAddress:
          $ref: "#/components/schemas/Address"
          description: The address where the purchased goods should be delivered.
        description:
          description: |-
            A short description visible on the payment page.
            Maximum length: 280 characters.
          type: string
        expiresAt:
          description: |-
            The date when the payment link expires.

            [ISO 8601](https://www.w3.org/TR/NOTE-datetime) format with time zone designator **Z**: YYYY-MM-DDThh:mm:ss+TZD, for example, **2020-12-18T10:15:30Z**.

            The maximum expiry date is 70 days after the payment link is created.

            If not provided, the payment link expires 24 hours after it was created.
          type: string
        installmentOptions:
          additionalProperties:
            $ref: "#/components/schemas/InstallmentOption"
          description: A set of key-value pairs that specifies the installment options available per payment method. The key must be a payment method name in lowercase. For example, **card** to specify installment options for all cards, or **visa** or **mc**. The value must be an object containing the installment options.
          type: object
        lineItems:
          description: |-
            Price and product information about the purchased items, to be included on the invoice sent to the shopper.
            This parameter is required for open invoice (_buy now, pay later_) payment methods such Afterpay, Clearpay, Klarna, RatePay, and Zip.
          items:
            $ref: "#/components/schemas/LineItem"
          type: array
        manualCapture:
          description: Indicates if the payment must be [captured manually](https://docs.adyen.com/online-payments/capture).
          type: boolean
        merchantAccount:
          description: The merchant account identifier for which the payment link is created.
          type: string
        merchantOrderReference:
          description: This reference allows linking multiple transactions to each other for reporting purposes (for example, order auth-rate). The reference should be unique per billing cycle.
          type: string
        metadata:
          additionalProperties:
            type: string
          description: |-
            Metadata consists of entries, each of which includes a key and a value.
            Limitations:
            * Maximum 20 key-value pairs per request. Otherwise, error "177" occurs: "Metadata size exceeds limit"
            * Maximum 20 characters per key. Otherwise, error "178" occurs: "Metadata key size exceeds limit"
            * A key cannot have the name `checkout.linkId`. Any value that you provide with this key is going to be replaced by the real payment link ID.
          maxLength: 80
          type: object
        recurringProcessingModel:
          description: |
            Defines a recurring payment type. Required when `storePaymentMethodMode` is set to **askForConsent** or **enabled**.
            Possible values:
            * **Subscription** – A transaction for a fixed or variable amount, which follows a fixed schedule.
            * **CardOnFile** – With a card-on-file (CoF) transaction, card details are stored to enable one-click or omnichannel journeys, or simply to streamline the checkout process. Any subscription not following a fixed schedule is also considered a card-on-file transaction.
            * **UnscheduledCardOnFile** – An unscheduled card-on-file (UCoF) transaction is a transaction that occurs on a non-fixed schedule and/or has variable amounts. For example, automatic top-ups when a cardholder's balance drops below a certain amount.
          enum:
            - CardOnFile
            - Subscription
            - UnscheduledCardOnFile
          type: string
        reference:
          description: A reference that is used to uniquely identify the payment in future communications about the payment status.
          type: string
        returnUrl:
          description: |-
            Website URL used for redirection after payment is completed.
            If provided, a **Continue** button will be shown on the payment page. If shoppers select the button, they are redirected to the specified URL.
          type: string
        reusable:
          description: Indicates whether the payment link can be reused for multiple payments. If not provided, this defaults to **false** which means the link can be used for one successful payment only.
          type: boolean
        shopperEmail:
          description: The shopper's email address.
          type: string
        shopperLocale:
          description: |-
            The language to be used in the payment page, specified by a combination of a language and country code. For example, `en-US`.

            For a list of shopper locales that Pay by Link supports, refer to [Language and localization](https://docs.adyen.com/unified-commerce/pay-by-link/payment-links/api#language).
          type: string
        shopperName:
          $ref: "#/components/schemas/Name"
          description: The shopper's full name. This object is required for some payment methods such as AfterPay, Klarna, or if you're enrolled in the PayPal Seller Protection program.
        shopperReference:
          description: |-
            Your reference to uniquely identify this shopper, for example user ID or account ID. Minimum length: 3 characters.
            > Your reference must not include personally identifiable information (PII), for example name or email address.
          maxLength: 256
          minLength: 3
          type: string
        showRemovePaymentMethodButton:
          default: true
          description: Set to **false** to hide the button that lets the shopper remove a stored payment method.
          type: boolean
        splits:
          description: An array of objects specifying how to split a payment when using [Adyen for Platforms](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information), [Classic Platforms integration](https://docs.adyen.com/marketplaces-and-platforms/classic/processing-payments#providing-split-information), or [Issuing](https://docs.adyen.com/issuing/manage-funds#split).
          items:
            $ref: "#/components/schemas/Split"
          type: array
        status:
          description: |-
            Status of the payment link. Possible values:
            * **active**: The link can be used to make payments.
            * **expired**: The expiry date for the payment link has passed. Shoppers can no longer use the link to make payments.
            * **paid**: The shopper completed the payment.
          enum:
            - active
            - completed
            - expired
            - paid
            - paymentPending
          type: string
        store:
          description: The physical store, for which this payment is processed.
          type: string
        updatedAt:
          description: |-
            The date when the payment link status was updated.

            [ISO 8601](https://www.w3.org/TR/NOTE-datetime) format: YYYY-MM-DDThh:mm:ss+TZD, for example, **2020-12-18T10:15:30+01:00**.
          format: date-time
          type: string
        url:
          description: The URL at which the shopper can complete the payment.
          readOnly: true
          type: string
      required:
        - amount
        - reference
        - merchantAccount
        - url
        - status
      type: object
    PaymentMethod:
      properties:
        configuration:
          additionalProperties:
            type: string
          description: The configuration of the payment method.
          type: object
        details:
          description: All input details to be provided to complete the payment with this payment method.
          items:
            $ref: "#/components/schemas/InputDetail"
          type: array
        group:
          $ref: "#/components/schemas/PaymentMethodGroup"
          description: The group where this payment method belongs to.
        inputDetails:
          deprecated: true
          description: All input details to be provided to complete the payment with this payment method.
          items:
            $ref: "#/components/schemas/InputDetail"
          type: array
        name:
          description: The displayable name of this payment method.
          type: string
        supportsRecurring:
          description: Indicates whether this payment method supports tokenization or not.
          type: boolean
        type:
          description: The unique payment method code.
          type: string
      type: object
    PaymentMethodGroup:
      properties:
        name:
          description: The name of the group.
          type: string
        paymentMethodData:
          description: Echo data to be used if the payment method is displayed as part of this group.
          type: string
        type:
          description: The unique code of the group.
          type: string
      type: object
    PaymentMethodsGroup:
      properties:
        groupType:
          description: The type to submit for any payment method in this group.
          type: string
        name:
          description: The human-readable name of this group.
          type: string
        types:
          description: The types of payment methods that belong in this group.
          items:
            type: string
          type: array
      type: object
    PaymentMethodsRequest:
      properties:
        additionalData:
          additionalProperties:
            type: string
          anyOf:
            - $ref: "#/components/schemas/AdditionalData3DSecure"
            - $ref: "#/components/schemas/AdditionalDataAirline"
            - $ref: "#/components/schemas/AdditionalDataCarRental"
            - $ref: "#/components/schemas/AdditionalDataCommon"
            - $ref: "#/components/schemas/AdditionalDataLevel23"
            - $ref: "#/components/schemas/AdditionalDataLodging"
            - $ref: "#/components/schemas/AdditionalDataOpenInvoice"
            - $ref: "#/components/schemas/AdditionalDataOpi"
            - $ref: "#/components/schemas/AdditionalDataRatepay"
            - $ref: "#/components/schemas/AdditionalDataRetry"
            - $ref: "#/components/schemas/AdditionalDataRisk"
            - $ref: "#/components/schemas/AdditionalDataRiskStandalone"
            - $ref: "#/components/schemas/AdditionalDataSubMerchant"
            - $ref: "#/components/schemas/AdditionalDataTemporaryServices"
            - $ref: "#/components/schemas/AdditionalDataWallets"
          description: |-
            This field contains additional data, which may be required for a particular payment request.

            The `additionalData` object consists of entries, each of which includes the key and value.
          type: object
        allowedPaymentMethods:
          description: |-
            List of payment methods to be presented to the shopper. To refer to payment methods, use their [payment method type](https://docs.adyen.com/payment-methods/payment-method-types).

            Example: `"allowedPaymentMethods":["ideal","giropay"]`
          items:
            type: string
          type: array
          x-addedInVersion: "33"
        amount:
          $ref: "#/components/schemas/Amount"
          description: The amount information for the transaction (in [minor units](https://docs.adyen.com/development-resources/currency-codes)). For [BIN or card verification](https://docs.adyen.com/payment-methods/cards/bin-data-and-card-verification) requests, set amount to 0 (zero).
        blockedPaymentMethods:
          description: |-
            List of payment methods to be hidden from the shopper. To refer to payment methods, use their [payment method type](https://docs.adyen.com/payment-methods/payment-method-types).

            Example: `"blockedPaymentMethods":["ideal","giropay"]`
          items:
            type: string
          type: array
          x-addedInVersion: "33"
        channel:
          description: |-
            The platform where a payment transaction takes place. This field can be used for filtering out payment methods that are only available on specific platforms. Possible values:
            * iOS
            * Android
            * Web
          enum:
            - iOS
            - Android
            - Web
          type: string
        countryCode:
          description: The shopper's country code.
          type: string
        merchantAccount:
          description: The merchant account identifier, with which you want to process the transaction.
          type: string
        shopperLocale:
          description: The combination of a language code and a country code to specify the language to be used in the payment.
          type: string
          x-addedInVersion: "7"
        shopperReference:
          description: |-
            Required for recurring payments. 
            Your reference to uniquely identify this shopper, for example user ID or account ID. Minimum length: 3 characters.
            > Your reference must not include personally identifiable information (PII), for example name or email address.
          type: string
        store:
          description: Required for Adyen for Platforms integrations if you have a platform setup. This is your [reference](https://docs.adyen.com/api-explorer/Management/3/post/merchants/(merchantId)/stores#request-reference) (on [balance platform](https://docs.adyen.com/marketplaces-and-platforms/classic/platforms-for-partners#route-payments)) or the [storeReference](https://docs.adyen.com/api-explorer/Account/latest/post/updateAccountHolder#request-accountHolderDetails-storeDetails-storeReference) (in the [classic integration](https://docs.adyen.com/marketplaces-and-platforms/processing-payments/route-payment-to-store/#route-a-payment-to-a-store)) for the ecommerce or point-of-sale store that is processing the payment.
          maxLength: 16
          minLength: 1
          type: string
          x-addedInVersion: "23"
      required:
        - merchantAccount
      type: object
    PaymentMethodsResponse:
      properties:
        groups:
          description: Groups of payment methods.
          items:
            $ref: "#/components/schemas/PaymentMethodsGroup"
          type: array
        oneClickPaymentMethods:
          description: Detailed list of one-click payment methods.
          items:
            $ref: "#/components/schemas/RecurringDetail"
          type: array
        paymentMethods:
          description: Detailed list of payment methods required to generate payment forms.
          items:
            $ref: "#/components/schemas/PaymentMethod"
          type: array
      type: object
    PaymentRefundRequest:
      properties:
        amount:
          $ref: "#/components/schemas/Amount"
          description: The amount that you want to refund. The `currency` must match the currency used in authorisation, the `value` must be smaller than or equal to the authorised amount.
        applicationInfo:
          $ref: "#/components/schemas/ApplicationInfo"
          description: Information about your application. For more details, see [Building Adyen solutions](https://docs.adyen.com/development-resources/building-adyen-solutions).
        lineItems:
          description: |-
            Price and product information of the refunded items, required for [partial refunds](https://docs.adyen.com/online-payments/refund#refund-a-payment).
            > This field is required for partial refunds with 3x 4x Oney, Affirm, Afterpay, Atome, Clearpay, Klarna, Ratepay, and Zip.
          items:
            $ref: "#/components/schemas/LineItem"
          type: array
        merchantAccount:
          description: The merchant account that is used to process the payment.
          type: string
        merchantRefundReason:
          description: Your reason for the refund request
          enum:
            - FRAUD
            - CUSTOMER REQUEST
            - RETURN
            - DUPLICATE
            - OTHER
          type: string
        reference:
          description: "Your reference for the refund request. Maximum length: 80 characters."
          type: string
        splits:
          description: An array of objects specifying how the amount should be split between accounts when using Adyen for Platforms. For details, refer to [Providing split information](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information).
          items:
            $ref: "#/components/schemas/Split"
          type: array
        store:
          description: The online store or [physical store](https://docs.adyen.com/point-of-sale/design-your-integration/determine-account-structure/#create-stores) that is processing the refund. This must be the same as the store name configured in your Customer Area.  Otherwise, you get an error and the refund fails.
          type: string
      required:
        - merchantAccount
        - amount
      type: object
    PaymentRefundResponse:
      properties:
        amount:
          $ref: "#/components/schemas/Amount"
          description: The refund amount.
        lineItems:
          description: |-
            Price and product information of the refunded items, required for [partial refunds](https://docs.adyen.com/online-payments/refund#refund-a-payment).
            > This field is required for partial refunds with 3x 4x Oney, Affirm, Afterpay, Atome, Clearpay, Klarna, Ratepay, and Zip.
          items:
            $ref: "#/components/schemas/LineItem"
          type: array
        merchantAccount:
          description: The merchant account that is used to process the payment.
          type: string
        merchantRefundReason:
          description: Your reason for the refund request.
          enum:
            - FRAUD
            - CUSTOMER REQUEST
            - RETURN
            - DUPLICATE
            - OTHER
          type: string
        paymentPspReference:
          description: "The [`pspReference`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__resParam_pspReference) of the payment to refund. "
          type: string
        pspReference:
          description: Adyen's 16-character reference associated with the refund request.
          type: string
        reference:
          description: Your reference for the refund request.
          type: string
        splits:
          description: An array of objects specifying how the amount should be split between accounts when using Adyen for Platforms. For details, refer to [Providing split information](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information).
          items:
            $ref: "#/components/schemas/Split"
          type: array
        status:
          description: The status of your request. This will always have the value **received**.
          enum:
            - received
          type: string
        store:
          description: The online store or [physical store](https://docs.adyen.com/point-of-sale/design-your-integration/determine-account-structure/#create-stores) that is processing the refund. This must be the same as the store name configured in your Customer Area.  Otherwise, you get an error and the refund fails.
          type: string
      required:
        - status
        - merchantAccount
        - amount
        - pspReference
        - paymentPspReference
      type: object
    PaymentRequest:
      properties:
        additionalAmount:
          $ref: "#/components/schemas/Amount"
          description: |-
            If you want a [BIN or card verification](https://docs.adyen.com/payment-methods/cards/bin-data-and-card-verification) request to use a non-zero value, assign this value to `additionalAmount` (while the amount must be still set to 0 to trigger BIN or card verification).
            Required to be in the same currency as the `amount`. 
        additionalData:
          additionalProperties:
            type: string
          anyOf:
            - $ref: "#/components/schemas/AdditionalData3DSecure"
            - $ref: "#/components/schemas/AdditionalDataAirline"
            - $ref: "#/components/schemas/AdditionalDataCarRental"
            - $ref: "#/components/schemas/AdditionalDataCommon"
            - $ref: "#/components/schemas/AdditionalDataLevel23"
            - $ref: "#/components/schemas/AdditionalDataLodging"
            - $ref: "#/components/schemas/AdditionalDataOpenInvoice"
            - $ref: "#/components/schemas/AdditionalDataOpi"
            - $ref: "#/components/schemas/AdditionalDataRatepay"
            - $ref: "#/components/schemas/AdditionalDataRetry"
            - $ref: "#/components/schemas/AdditionalDataRisk"
            - $ref: "#/components/schemas/AdditionalDataRiskStandalone"
            - $ref: "#/components/schemas/AdditionalDataSubMerchant"
            - $ref: "#/components/schemas/AdditionalDataTemporaryServices"
            - $ref: "#/components/schemas/AdditionalDataWallets"
          description: |-
            This field contains additional data, which may be required for a particular payment request.

            The `additionalData` object consists of entries, each of which includes the key and value.
          type: object
        amount:
          $ref: "#/components/schemas/Amount"
          description: The amount information for the transaction (in [minor units](https://docs.adyen.com/development-resources/currency-codes)). For [BIN or card verification](https://docs.adyen.com/payment-methods/cards/bin-data-and-card-verification) requests, set amount to 0 (zero).
        billingAddress:
          $ref: "#/components/schemas/BillingAddress"
          description: |-
            The address where to send the invoice.
            > The `billingAddress` object is required in the following scenarios. Include all of the fields within this object.
            >* For 3D Secure 2 transactions in all browser-based and mobile implementations.
            >* For cross-border payouts to and from Canada.
        browserInfo:
          $ref: "#/components/schemas/BrowserInfo"
          description: |-
            The shopper's browser information.
            > For 3D Secure, the full object is required for web integrations. For mobile app integrations, include the `userAgent` and `acceptHeader` fields to indicate  that your integration can support a redirect in case a payment is routed to 3D Secure 1.
        captureDelayHours:
          description: The delay between the authorisation and scheduled auto-capture, specified in hours.
          format: int32
          type: integer
        channel:
          description: |-
            The platform where a payment transaction takes place. This field is optional for filtering out payment methods that are only available on specific platforms. If this value is not set, then we will try to infer it from the `sdkVersion` or `token`.

            Possible values:
            * iOS
            * Android
            * Web
          enum:
            - iOS
            - Android
            - Web
          type: string
        company:
          $ref: "#/components/schemas/Company"
          description: Information regarding the company.
          x-addedInVersion: "32"
        countryCode:
          description: |-
            The shopper country.

            Format: [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
            Example: NL or DE
          type: string
        dateOfBirth:
          description: |-
            The shopper's date of birth.

            Format [ISO-8601](https://www.w3.org/TR/NOTE-datetime): YYYY-MM-DD
          format: date-time
          type: string
        dccQuote:
          $ref: "#/components/schemas/ForexQuote"
          description: The forex quote as returned in the response of the forex service.
        deliveryAddress:
          $ref: "#/components/schemas/DeliveryAddress"
          description: The address where the purchased goods should be delivered.
        deliveryDate:
          description: |-
            The date and time the purchased goods should be delivered.

            Format [ISO 8601](https://www.w3.org/TR/NOTE-datetime): YYYY-MM-DDThh:mm:ss.sssTZD

            Example: 2017-07-17T13:42:40.428+01:00
          format: date-time
          type: string
        deviceFingerprint:
          description: A string containing the shopper's device fingerprint. For more information, refer to [Device fingerprinting](https://docs.adyen.com/risk-management/device-fingerprinting).
          maxLength: 5000
          type: string
        enableOneClick:
          description: When true and `shopperReference` is provided, the shopper will be asked if the payment details should be stored for future one-click payments.
          type: boolean
          x-addedInVersion: "32"
        enablePayOut:
          description: When true and `shopperReference` is provided, the payment details will be tokenized for payouts.
          type: boolean
          x-addedInVersion: "32"
        enableRecurring:
          description: When true and `shopperReference` is provided, the payment details will be tokenized for recurring payments.
          type: boolean
          x-addedInVersion: "32"
        entityType:
          description: The type of the entity the payment is processed for.
          enum:
            - NaturalPerson
            - CompanyName
          type: string
        fraudOffset:
          description: An integer value that is added to the normal fraud score. The value can be either positive or negative.
          format: int32
          type: integer
        fundOrigin:
          $ref: "#/components/schemas/FundOrigin"
          description: The person or entity funding the money.
        fundRecipient:
          $ref: "#/components/schemas/FundRecipient"
          description: the person or entity receiving the money
        installments:
          $ref: "#/components/schemas/Installments"
          description: Contains installment settings. For more information, refer to [Installments](https://docs.adyen.com/payment-methods/cards/credit-card-installments).
        lineItems:
          description: |-
            Price and product information about the purchased items, to be included on the invoice sent to the shopper.
            > This field is required for 3x 4x Oney, Affirm, Afterpay, Clearpay, Klarna, Ratepay, and Zip.
          items:
            $ref: "#/components/schemas/LineItem"
          type: array
          x-addedInVersion: "32"
        mandate:
          $ref: "#/components/schemas/Mandate"
          description: The mandate details to initiate recurring transaction.
        mcc:
          description: The [merchant category code](https://en.wikipedia.org/wiki/Merchant_category_code) (MCC) is a four-digit number, which relates to a particular market segment. This code reflects the predominant activity that is conducted by the merchant.
          type: string
        merchantAccount:
          description: The merchant account identifier, with which you want to process the transaction.
          type: string
        merchantOrderReference:
          description: |-
            This reference allows linking multiple transactions to each other for reporting purposes (i.e. order auth-rate). The reference should be unique per billing cycle.
            The same merchant order reference should never be reused after the first authorised attempt. If used, this field should be supplied for all incoming authorisations.
            > We strongly recommend you send the `merchantOrderReference` value to benefit from linking payment requests when authorisation retries take place. In addition, we recommend you provide `retry.orderAttemptNumber`, `retry.chainAttemptNumber`, and `retry.skipRetry` values in `PaymentRequest.additionalData`.
          type: string
        metadata:
          additionalProperties:
            type: string
          description: |-
            Metadata consists of entries, each of which includes a key and a value.
            Limits:
            * Maximum 20 key-value pairs per request. When exceeding, the "177" error occurs: "Metadata size exceeds limit".
            * Maximum 20 characters per key.
            * Maximum 80 characters per value. 
          type: object
        mpiData:
          $ref: "#/components/schemas/ThreeDSecureData"
          description: Authentication data produced by an MPI (Mastercard SecureCode, Visa Secure, or Cartes Bancaires).
        order:
          $ref: "#/components/schemas/EncryptedOrderData"
          description: The order information required for partial payments.
        orderReference:
          description: When you are doing multiple partial (gift card) payments, this is the `pspReference` of the first payment. We use this to link the multiple payments to each other. As your own reference for linking multiple payments, use the `merchantOrderReference`instead.
          type: string
        paymentMethod:
          description: The type and required details of a payment method to use.
          oneOf:
            - $ref: "#/components/schemas/AchDetails"
            - $ref: "#/components/schemas/AfterpayDetails"
            - $ref: "#/components/schemas/AmazonPayDetails"
            - $ref: "#/components/schemas/AndroidPayDetails"
            - $ref: "#/components/schemas/ApplePayDetails"
            - $ref: "#/components/schemas/BacsDirectDebitDetails"
            - $ref: "#/components/schemas/BillDeskDetails"
            - $ref: "#/components/schemas/BlikDetails"
            - $ref: "#/components/schemas/CardDetails"
            - $ref: "#/components/schemas/CellulantDetails"
            - $ref: "#/components/schemas/DokuDetails"
            - $ref: "#/components/schemas/DotpayDetails"
            - $ref: "#/components/schemas/DragonpayDetails"
            - $ref: "#/components/schemas/EcontextVoucherDetails"
            - $ref: "#/components/schemas/GenericIssuerPaymentMethodDetails"
            - $ref: "#/components/schemas/GiropayDetails"
            - $ref: "#/components/schemas/GooglePayDetails"
            - $ref: "#/components/schemas/IdealDetails"
            - $ref: "#/components/schemas/KlarnaDetails"
            - $ref: "#/components/schemas/MasterpassDetails"
            - $ref: "#/components/schemas/MbwayDetails"
            - $ref: "#/components/schemas/MobilePayDetails"
            - $ref: "#/components/schemas/MolPayDetails"
            - $ref: "#/components/schemas/OpenInvoiceDetails"
            - $ref: "#/components/schemas/PayPalDetails"
            - $ref: "#/components/schemas/PayUUpiDetails"
            - $ref: "#/components/schemas/PayWithGoogleDetails"
            - $ref: "#/components/schemas/PaymentDetails"
            - $ref: "#/components/schemas/RatepayDetails"
            - $ref: "#/components/schemas/SamsungPayDetails"
            - $ref: "#/components/schemas/SepaDirectDebitDetails"
            - $ref: "#/components/schemas/StoredPaymentMethodDetails"
            - $ref: "#/components/schemas/UpiCollectDetails"
            - $ref: "#/components/schemas/UpiIntentDetails"
            - $ref: "#/components/schemas/VippsDetails"
            - $ref: "#/components/schemas/VisaCheckoutDetails"
            - $ref: "#/components/schemas/WeChatPayDetails"
            - $ref: "#/components/schemas/WeChatPayMiniProgramDetails"
            - $ref: "#/components/schemas/ZipDetails"
        recurringExpiry:
          description: Date after which no further authorisations shall be performed. Only for 3D Secure 2.
          type: string
        recurringFrequency:
          description: Minimum number of days between authorisations. Only for 3D Secure 2.
          type: string
        recurringProcessingModel:
          description: |
            Defines a recurring payment type. Required when creating a token to store payment details or using stored payment details.
            Allowed values:
            * `Subscription` – A transaction for a fixed or variable amount, which follows a fixed schedule.
            * `CardOnFile` – With a card-on-file (CoF) transaction, card details are stored to enable one-click or omnichannel journeys, or simply to streamline the checkout process. Any subscription not following a fixed schedule is also considered a card-on-file transaction.
            * `UnscheduledCardOnFile` – An unscheduled card-on-file (UCoF) transaction is a transaction that occurs on a non-fixed schedule and/or have variable amounts. For example, automatic top-ups when a cardholder's balance drops below a certain amount.
          enum:
            - CardOnFile
            - Subscription
            - UnscheduledCardOnFile
          type: string
          x-addedInVersion: "30"
        redirectFromIssuerMethod:
          description: Specifies the redirect method (GET or POST) when redirecting back from the issuer.
          type: string
          x-addedInVersion: "32"
        redirectToIssuerMethod:
          description: Specifies the redirect method (GET or POST) when redirecting to the issuer.
          type: string
          x-addedInVersion: "32"
        reference:
          description: |-
            The reference to uniquely identify a payment. This reference is used in all communication with you about the payment status. We recommend using a unique value per payment; however, it is not a requirement.
            If you need to provide multiple references for a transaction, separate them with hyphens ("-").
            Maximum length: 80 characters.
          type: string
        returnUrl:
          description: |-
            The URL to return to in case of a redirection.
            The format depends on the channel. 
            * For web, include the protocol `http://` or `https://`. You can also include your own additional query parameters, for example, shopper ID or order reference number.
            Example: `https://your-company.com/checkout?shopperOrder=12xy`
            * For iOS, use the custom URL for your app. To know more about setting custom URL schemes, refer to the [Apple Developer documentation](https://developer.apple.com/documentation/uikit/inter-process_communication/allowing_apps_and_websites_to_link_to_your_content/defining_a_custom_url_scheme_for_your_app).
            Example: `my-app://`
            * For Android, use a custom URL handled by an Activity on your app. You can configure it with an [intent filter](https://developer.android.com/guide/components/intents-filters).
            Example: `my-app://your.package.name`
          type: string
        riskData:
          $ref: "#/components/schemas/RiskData"
          description: Contains risk data, such as client-side data, used to identify risk for a transaction.
        sessionValidity:
          description: |-
            The date and time until when the session remains valid, in [ISO 8601](https://www.w3.org/TR/NOTE-datetime) format.

            For example: 2020-07-18T15:42:40.428+01:00
          type: string
        shopperEmail:
          description: |-
            The shopper's email address. We recommend that you provide this data, as it is used in velocity fraud checks.
            > For 3D Secure 2 transactions, schemes require `shopperEmail` for all browser-based and mobile implementations.
          type: string
        shopperIP:
          description: |-
            The shopper's IP address. In general, we recommend that you provide this data, as it is used in a number of risk checks (for instance, number of payment attempts or location-based checks).
            > For 3D Secure 2 transactions, schemes require `shopperIP` for all browser-based implementations.
            This field is also mandatory for some merchants depending on your business model. For more information, [contact Support](https://www.adyen.help/hc/en-us/requests/new).
          type: string
        shopperInteraction:
          description: |-
            Specifies the sales channel, through which the shopper gives their card details, and whether the shopper is a returning customer.
            For the web service API, Adyen assumes Ecommerce shopper interaction by default.

            This field has the following possible values:
            * `Ecommerce` - Online transactions where the cardholder is present (online). For better authorisation rates, we recommend sending the card security code (CSC) along with the request.
            * `ContAuth` - Card on file and/or subscription transactions, where the cardholder is known to the merchant (returning customer). If the shopper is present (online), you can supply also the CSC to improve authorisation (one-click payment).
            * `Moto` - Mail-order and telephone-order transactions where the shopper is in contact with the merchant via email or telephone.
            * `POS` - Point-of-sale transactions where the shopper is physically present to make a payment using a secure payment terminal.
          enum:
            - Ecommerce
            - ContAuth
            - Moto
            - POS
          type: string
        shopperLocale:
          description: The combination of a language code and a country code to specify the language to be used in the payment.
          type: string
        shopperName:
          $ref: "#/components/schemas/Name"
          description: The shopper's full name.
        shopperReference:
          description: |-
            Required for recurring payments. 
            Your reference to uniquely identify this shopper, for example user ID or account ID. Minimum length: 3 characters.
            > Your reference must not include personally identifiable information (PII), for example name or email address.
          maxLength: 256
          minLength: 3
          type: string
        shopperStatement:
          description: |-
            The text to be shown on the shopper's bank statement.
             We recommend sending a maximum of 22 characters, otherwise banks might truncate the string.
             Allowed characters: **a-z**, **A-Z**, **0-9**, spaces, and special characters **. , ' _ - ? + * /**.
          type: string
        socialSecurityNumber:
          description: The shopper's social security number.
          type: string
        splits:
          description: An array of objects specifying how to split a payment when using [Adyen for Platforms](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information), [Classic Platforms integration](https://docs.adyen.com/marketplaces-and-platforms/classic/processing-payments#providing-split-information), or [Issuing](https://docs.adyen.com/issuing/manage-funds#split).
          items:
            $ref: "#/components/schemas/Split"
          type: array
          x-addedInVersion: "37"
        store:
          description: Required for Adyen for Platforms integrations if you have a platform setup. This is your [reference](https://docs.adyen.com/api-explorer/Management/3/post/merchants/(merchantId)/stores#request-reference) (on [balance platform](https://docs.adyen.com/marketplaces-and-platforms/classic/platforms-for-partners#route-payments)) or the [storeReference](https://docs.adyen.com/api-explorer/Account/latest/post/updateAccountHolder#request-accountHolderDetails-storeDetails-storeReference) (in the [classic integration](https://docs.adyen.com/marketplaces-and-platforms/processing-payments/route-payment-to-store/#route-a-payment-to-a-store)) for the ecommerce or point-of-sale store that is processing the payment.
          maxLength: 64
          minLength: 1
          type: string
        telephoneNumber:
          description: The shopper's telephone number.
          type: string
        trustedShopper:
          description: Set to true if the payment should be routed to a trusted MID.
          type: boolean
          x-addedInVersion: "37"
      required:
        - merchantAccount
        - reference
        - amount
        - paymentMethod
        - returnUrl
      type: object
    PaymentResponse:
      properties:
        additionalData:
          additionalProperties:
            type: string
          anyOf:
            - $ref: "#/components/schemas/ResponseAdditionalData3DSecure"
            - $ref: "#/components/schemas/ResponseAdditionalDataBillingAddress"
            - $ref: "#/components/schemas/ResponseAdditionalDataCard"
            - $ref: "#/components/schemas/ResponseAdditionalDataCommon"
            - $ref: "#/components/schemas/ResponseAdditionalDataDomesticError"
            - $ref: "#/components/schemas/ResponseAdditionalDataInstallments"
            - $ref: "#/components/schemas/ResponseAdditionalDataNetworkTokens"
            - $ref: "#/components/schemas/ResponseAdditionalDataOpi"
            - $ref: "#/components/schemas/ResponseAdditionalDataSepa"
          description: "Contains additional information about the payment. Some data fields are included only if you select them first: Go to **Customer Area** > **Developers** > **Additional data**."
          type: object
        details:
          description: When non-empty, contains all the fields that you must submit to the `/payments/details` endpoint.
          items:
            $ref: "#/components/schemas/InputDetail"
          type: array
        fraudResult:
          $ref: "#/components/schemas/FraudResult"
          description: The fraud result properties of the payment.
        order:
          $ref: "#/components/schemas/CheckoutOrderResponse"
          description: Contains updated information regarding the order in case order information was provided in the request.
        outputDetails:
          additionalProperties:
            type: string
          description: Contains the details that will be presented to the shopper.
          type: object
        paymentData:
          description: When non-empty, contains a value that you must submit to the `/payments/details` endpoint.
          type: string
        pspReference:
          description: |-
            Adyen's 16-character string reference associated with the transaction/request. This value is globally unique; quote it when communicating with us about this request.

            > For payment methods that require a redirect or additional action, you will get this value in the `/payments/details` response.
          type: string
        redirect:
          $ref: "#/components/schemas/Redirect"
          description: When the payment flow requires a redirect, this object contains information about the redirect URL.
        refusalReason:
          description: |-
            If the payment's authorisation is refused or an error occurs during authorisation, this field holds Adyen's mapped reason for the refusal or a description of the error. When a transaction fails, the authorisation response includes `resultCode` and `refusalReason` values.

            For more information, see [Refusal reasons](https://docs.adyen.com/development-resources/refusal-reasons).
          type: string
        refusalReasonCode:
          description: Code that specifies the refusal reason. For more information, see [Authorisation refusal reasons](https://docs.adyen.com/development-resources/refusal-reasons).
          type: string
          x-addedInVersion: "37"
        resultCode:
          description: |-
            The result of the payment. For more information, see [Result codes](https://docs.adyen.com/online-payments/payment-result-codes).

            Possible values:

            * **AuthenticationFinished** – The payment has been successfully authenticated with 3D Secure 2. Returned for 3D Secure 2 authentication-only transactions.
            * **AuthenticationNotRequired** – The transaction does not require 3D Secure authentication. Returned for [standalone authentication-only integrations](https://docs.adyen.com/online-payments/3d-secure/other-3ds-flows/authentication-only).
            * **Authorised** – The payment was successfully authorised. This state serves as an indicator to proceed with the delivery of goods and services. This is a final state.
            * **Cancelled** – Indicates the payment has been cancelled (either by the shopper or the merchant) before processing was completed. This is a final state.
            * **ChallengeShopper** – The issuer requires further shopper interaction before the payment can be authenticated. Returned for 3D Secure 2 transactions.
            * **Error** – There was an error when the payment was being processed. The reason is given in the `refusalReason` field. This is a final state.
            * **IdentifyShopper** – The issuer requires the shopper's device fingerprint before the payment can be authenticated. Returned for 3D Secure 2 transactions.
            * **PartiallyAuthorised** – The payment has been authorised for a partial amount.
            This happens for card payments when the merchant supports Partial Authorisations and the cardholder has insufficient funds.
            * **Pending** – Indicates that it is not possible to obtain the final status of the payment. This can happen if the systems providing final status information for the payment are unavailable, or if the shopper needs to take further action to complete the payment.
            * **PresentToShopper** – Indicates that the response contains additional information that you need to present to a shopper, so that they can use it to complete a payment.
            * **Received** – Indicates the payment has successfully been received by Adyen, and will be processed. This is the initial state for all payments.
            * **RedirectShopper** – Indicates the shopper should be redirected to an external web page or app to complete the authorisation.
            * **Refused** – Indicates the payment was refused. The reason is given in the `refusalReason` field. This is a final state.
          enum:
            - AuthenticationFinished
            - AuthenticationNotRequired
            - Authorised
            - Cancelled
            - ChallengeShopper
            - Error
            - IdentifyShopper
            - PartiallyAuthorised
            - Pending
            - PresentToShopper
            - Received
            - RedirectShopper
            - Refused
            - Success
          type: string
      type: object
    PaymentReversalRequest:
      properties:
        applicationInfo:
          $ref: "#/components/schemas/ApplicationInfo"
          description: Information about your application. For more details, see [Building Adyen solutions](https://docs.adyen.com/development-resources/building-adyen-solutions).
        merchantAccount:
          description: The merchant account that is used to process the payment.
          type: string
        reference:
          description: "Your reference for the reversal request. Maximum length: 80 characters."
          type: string
      required:
        - merchantAccount
      type: object
    PaymentReversalResponse:
      properties:
        merchantAccount:
          description: The merchant account that is used to process the payment.
          type: string
        paymentPspReference:
          description: "The [`pspReference`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__resParam_pspReference) of the payment to reverse. "
          type: string
        pspReference:
          description: Adyen's 16-character reference associated with the reversal request.
          type: string
        reference:
          description: Your reference for the reversal request.
          type: string
        status:
          description: The status of your request. This will always have the value **received**.
          enum:
            - received
          type: string
      required:
        - status
        - merchantAccount
        - pspReference
        - paymentPspReference
      type: object
    PaymentSetupRequest:
      properties:
        additionalAmount:
          $ref: "#/components/schemas/Amount"
          description: |-
            If you want a [BIN or card verification](https://docs.adyen.com/payment-methods/cards/bin-data-and-card-verification) request to use a non-zero value, assign this value to `additionalAmount` (while the amount must be still set to 0 to trigger BIN or card verification).
            Required to be in the same currency as the `amount`. 
        additionalData:
          additionalProperties:
            type: string
          anyOf:
            - $ref: "#/components/schemas/AdditionalData3DSecure"
            - $ref: "#/components/schemas/AdditionalDataAirline"
            - $ref: "#/components/schemas/AdditionalDataCarRental"
            - $ref: "#/components/schemas/AdditionalDataCommon"
            - $ref: "#/components/schemas/AdditionalDataLevel23"
            - $ref: "#/components/schemas/AdditionalDataLodging"
            - $ref: "#/components/schemas/AdditionalDataOpenInvoice"
            - $ref: "#/components/schemas/AdditionalDataOpi"
            - $ref: "#/components/schemas/AdditionalDataRatepay"
            - $ref: "#/components/schemas/AdditionalDataRetry"
            - $ref: "#/components/schemas/AdditionalDataRisk"
            - $ref: "#/components/schemas/AdditionalDataRiskStandalone"
            - $ref: "#/components/schemas/AdditionalDataSubMerchant"
            - $ref: "#/components/schemas/AdditionalDataTemporaryServices"
            - $ref: "#/components/schemas/AdditionalDataWallets"
          description: |-
            This field contains additional data, which may be required for a particular payment request.

            The `additionalData` object consists of entries, each of which includes the key and value.
          type: object
        allowedPaymentMethods:
          description: |-
            List of payment methods to be presented to the shopper. To refer to payment methods, use their [payment method type](https://docs.adyen.com/payment-methods/payment-method-types).

            Example: `"allowedPaymentMethods":["ideal","giropay"]`
          items:
            type: string
          type: array
          x-addedInVersion: "33"
        amount:
          $ref: "#/components/schemas/Amount"
          description: The amount information for the transaction (in [minor units](https://docs.adyen.com/development-resources/currency-codes)). For [BIN or card verification](https://docs.adyen.com/payment-methods/cards/bin-data-and-card-verification) requests, set amount to 0 (zero).
        billingAddress:
          $ref: "#/components/schemas/Address"
          description: |-
            The address where to send the invoice.
            > The `billingAddress` object is required in the following scenarios. Include all of the fields within this object.
            >* For 3D Secure 2 transactions in all browser-based and mobile implementations.
            >* For cross-border payouts to and from Canada.
          x-addedInVersion: "4"
        blockedPaymentMethods:
          description: |-
            List of payment methods to be hidden from the shopper. To refer to payment methods, use their [payment method type](https://docs.adyen.com/payment-methods/payment-method-types).

            Example: `"blockedPaymentMethods":["ideal","giropay"]`
          items:
            type: string
          type: array
          x-addedInVersion: "33"
        captureDelayHours:
          description: The delay between the authorisation and scheduled auto-capture, specified in hours.
          format: int32
          type: integer
          x-addedInVersion: "2"
        channel:
          description: |-
            The platform where a payment transaction takes place. This field is optional for filtering out payment methods that are only available on specific platforms. If this value is not set, then we will try to infer it from the `sdkVersion` or `token`.

            Possible values:
            * iOS
            * Android
            * Web
          enum:
            - iOS
            - Android
            - Web
          type: string
        company:
          $ref: "#/components/schemas/Company"
          description: Information regarding the company.
          x-addedInVersion: "32"
        configuration:
          $ref: "#/components/schemas/Configuration"
          description: Specify configurations to enable additional features.
        countryCode:
          description: |-
            The shopper country.

            Format: [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
            Example: NL or DE
          type: string
        dateOfBirth:
          description: |-
            The shopper's date of birth.

            Format [ISO-8601](https://www.w3.org/TR/NOTE-datetime): YYYY-MM-DD
          format: date
          type: string
          x-addedInVersion: "7"
        dccQuote:
          $ref: "#/components/schemas/ForexQuote"
          description: The forex quote as returned in the response of the forex service.
        deliveryAddress:
          $ref: "#/components/schemas/Address"
          description: The address where the purchased goods should be delivered.
        deliveryDate:
          description: |-
            The date and time the purchased goods should be delivered.

            Format [ISO 8601](https://www.w3.org/TR/NOTE-datetime): YYYY-MM-DDThh:mm:ss.sssTZD

            Example: 2017-07-17T13:42:40.428+01:00
          format: date-time
          type: string
          x-addedInVersion: "8"
        enableOneClick:
          description: When true and `shopperReference` is provided, the shopper will be asked if the payment details should be stored for future one-click payments.
          type: boolean
          x-addedInVersion: "32"
        enablePayOut:
          description: When true and `shopperReference` is provided, the payment details will be tokenized for payouts.
          type: boolean
          x-addedInVersion: "32"
        enableRecurring:
          description: When true and `shopperReference` is provided, the payment details will be tokenized for recurring payments.
          type: boolean
          x-addedInVersion: "32"
        entityType:
          description: The type of the entity the payment is processed for.
          enum:
            - NaturalPerson
            - CompanyName
          type: string
          x-addedInVersion: "24"
        fraudOffset:
          description: An integer value that is added to the normal fraud score. The value can be either positive or negative.
          format: int32
          type: integer
        installments:
          $ref: "#/components/schemas/Installments"
          description: Contains installment settings. For more information, refer to [Installments](https://docs.adyen.com/payment-methods/cards/credit-card-installments).
          x-addedInVersion: "4"
        lineItems:
          description: |-
            Price and product information of the refunded items, required for [partial refunds](https://docs.adyen.com/online-payments/refund#refund-a-payment).
            > This field is required for partial refunds with 3x 4x Oney, Affirm, Afterpay, Atome, Clearpay, Klarna, Ratepay, and Zip.
          items:
            $ref: "#/components/schemas/LineItem"
          type: array
          x-addedInVersion: "32"
        mandate:
          $ref: "#/components/schemas/Mandate"
          description: The mandate details to initiate recurring transaction.
        mcc:
          description: The [merchant category code](https://en.wikipedia.org/wiki/Merchant_category_code) (MCC) is a four-digit number, which relates to a particular market segment. This code reflects the predominant activity that is conducted by the merchant.
          type: string
          x-addedInVersion: "12"
        merchantAccount:
          description: The merchant account identifier, with which you want to process the transaction.
          type: string
        merchantOrderReference:
          description: |-
            This reference allows linking multiple transactions to each other for reporting purposes (i.e. order auth-rate). The reference should be unique per billing cycle.
            The same merchant order reference should never be reused after the first authorised attempt. If used, this field should be supplied for all incoming authorisations.
            > We strongly recommend you send the `merchantOrderReference` value to benefit from linking payment requests when authorisation retries take place. In addition, we recommend you provide `retry.orderAttemptNumber`, `retry.chainAttemptNumber`, and `retry.skipRetry` values in `PaymentRequest.additionalData`.
          type: string
          x-addedInVersion: "9"
        metadata:
          additionalProperties:
            type: string
          description: |-
            Metadata consists of entries, each of which includes a key and a value.
            Limits:
            * Maximum 20 key-value pairs per request. When exceeding, the "177" error occurs: "Metadata size exceeds limit".
            * Maximum 20 characters per key.
            * Maximum 80 characters per value. 
          type: object
          x-addedInVersion: "17"
        orderReference:
          description: When you are doing multiple partial (gift card) payments, this is the `pspReference` of the first payment. We use this to link the multiple payments to each other. As your own reference for linking multiple payments, use the `merchantOrderReference`instead.
          type: string
        origin:
          description: |-
            Required for the Web integration.

            Set this parameter to the origin URL of the page that you are loading the SDK from.
          type: string
        recurringExpiry:
          description: Date after which no further authorisations shall be performed. Only for 3D Secure 2.
          type: string
        recurringFrequency:
          description: Minimum number of days between authorisations. Only for 3D Secure 2.
          type: string
        reference:
          description: |-
            The reference to uniquely identify a payment. This reference is used in all communication with you about the payment status. We recommend using a unique value per payment; however, it is not a requirement.
            If you need to provide multiple references for a transaction, separate them with hyphens ("-").
            Maximum length: 80 characters.
          type: string
        returnUrl:
          description: |-
            The URL to return to in case of a redirection.
            The format depends on the channel. This URL can have a maximum of 1024 characters.
            * For web, include the protocol `http://` or `https://`. You can also include your own additional query parameters, for example, shopper ID or order reference number.
            Example: `https://your-company.com/checkout?shopperOrder=12xy`
            * For iOS, use the custom URL for your app. To know more about setting custom URL schemes, refer to the [Apple Developer documentation](https://developer.apple.com/documentation/uikit/inter-process_communication/allowing_apps_and_websites_to_link_to_your_content/defining_a_custom_url_scheme_for_your_app).
            Example: `my-app://`
            * For Android, use a custom URL handled by an Activity on your app. You can configure it with an [intent filter](https://developer.android.com/guide/components/intents-filters).
            Example: `my-app://your.package.name`
          maxLength: 8000
          type: string
        riskData:
          $ref: "#/components/schemas/RiskData"
          description: Contains risk data, such as client-side data, used to identify risk for a transaction.
        sdkVersion:
          description: The version of the SDK you are using (for Web SDK integrations only).
          type: string
          x-addedInVersion: "32"
        sessionValidity:
          description: |-
            The date and time until when the session remains valid, in [ISO 8601](https://www.w3.org/TR/NOTE-datetime) format.

            For example: 2020-07-18T15:42:40.428+01:00
          type: string
        shopperEmail:
          description: |-
            The shopper's email address. We recommend that you provide this data, as it is used in velocity fraud checks.
            > For 3D Secure 2 transactions, schemes require `shopperEmail` for all browser-based and mobile implementations.
          type: string
        shopperIP:
          description: |-
            The shopper's IP address. In general, we recommend that you provide this data, as it is used in a number of risk checks (for instance, number of payment attempts or location-based checks).
            > For 3D Secure 2 transactions, schemes require `shopperIP` for all browser-based implementations.
            This field is also mandatory for some merchants depending on your business model. For more information, [contact Support](https://www.adyen.help/hc/en-us/requests/new).
          type: string
        shopperInteraction:
          description: |-
            Specifies the sales channel, through which the shopper gives their card details, and whether the shopper is a returning customer.
            For the web service API, Adyen assumes Ecommerce shopper interaction by default.

            This field has the following possible values:
            * `Ecommerce` - Online transactions where the cardholder is present (online). For better authorisation rates, we recommend sending the card security code (CSC) along with the request.
            * `ContAuth` - Card on file and/or subscription transactions, where the cardholder is known to the merchant (returning customer). If the shopper is present (online), you can supply also the CSC to improve authorisation (one-click payment).
            * `Moto` - Mail-order and telephone-order transactions where the shopper is in contact with the merchant via email or telephone.
            * `POS` - Point-of-sale transactions where the shopper is physically present to make a payment using a secure payment terminal.
          enum:
            - Ecommerce
            - ContAuth
            - Moto
            - POS
          type: string
        shopperLocale:
          description: The combination of a language code and a country code to specify the language to be used in the payment.
          type: string
          x-addedInVersion: "7"
        shopperName:
          $ref: "#/components/schemas/Name"
          description: The shopper's full name.
          x-addedInVersion: "7"
        shopperReference:
          description: |-
            Required for recurring payments. 
            Your reference to uniquely identify this shopper, for example user ID or account ID. Minimum length: 3 characters.
            > Your reference must not include personally identifiable information (PII), for example name or email address.
          type: string
        shopperStatement:
          description: |-
            The text to be shown on the shopper's bank statement.
             We recommend sending a maximum of 22 characters, otherwise banks might truncate the string.
             Allowed characters: **a-z**, **A-Z**, **0-9**, spaces, and special characters **. , ' _ - ? + * /**.
          type: string
        socialSecurityNumber:
          description: The shopper's social security number.
          type: string
          x-addedInVersion: "4"
        splits:
          description: An array of objects specifying how the payment should be split when using [Adyen for Platforms](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) or [Issuing](https://docs.adyen.com/issuing/add-manage-funds#split).
          items:
            $ref: "#/components/schemas/Split"
          type: array
          x-addedInVersion: "37"
        store:
          description: Required for Adyen for Platforms integrations if you have a platform setup. This is your [reference](https://docs.adyen.com/api-explorer/Management/3/post/merchants/(merchantId)/stores#request-reference) (on [balance platform](https://docs.adyen.com/marketplaces-and-platforms/classic/platforms-for-partners#route-payments)) or the [storeReference](https://docs.adyen.com/api-explorer/Account/latest/post/updateAccountHolder#request-accountHolderDetails-storeDetails-storeReference) (in the [classic integration](https://docs.adyen.com/marketplaces-and-platforms/processing-payments/route-payment-to-store/#route-a-payment-to-a-store)) for the ecommerce or point-of-sale store that is processing the payment.
          maxLength: 16
          minLength: 1
          type: string
          x-addedInVersion: "23"
        telephoneNumber:
          description: The shopper's telephone number.
          type: string
          x-addedInVersion: "7"
        token:
          description: |-
            The token obtained when initializing the SDK.

            > This parameter is required for iOS and Android; not required for Web.
          type: string
        trustedShopper:
          description: Set to true if the payment should be routed to a trusted MID.
          type: boolean
          x-addedInVersion: "37"
      required:
        - merchantAccount
        - reference
        - amount
        - returnUrl
        - countryCode
      type: object
    PaymentSetupResponse:
      properties:
        paymentSession:
          description: The encoded payment session that you need to pass to the SDK.
          type: string
        recurringDetails:
          deprecated: true
          description: The detailed list of stored payment details required to generate payment forms. Will be empty if oneClick is set to false in the request.
          items:
            $ref: "#/components/schemas/RecurringDetail"
          type: array
      type: object
    PaymentVerificationRequest:
      properties:
        payload:
          description: Encrypted and signed payment result data. You should receive this value from the Checkout SDK after the shopper completes the payment.
          maxLength: 40000
          type: string
      required:
        - payload
      type: object
    PaymentVerificationResponse:
      properties:
        additionalData:
          additionalProperties:
            type: string
          anyOf:
            - $ref: "#/components/schemas/ResponseAdditionalData3DSecure"
            - $ref: "#/components/schemas/ResponseAdditionalDataBillingAddress"
            - $ref: "#/components/schemas/ResponseAdditionalDataCard"
            - $ref: "#/components/schemas/ResponseAdditionalDataCommon"
            - $ref: "#/components/schemas/ResponseAdditionalDataDomesticError"
            - $ref: "#/components/schemas/ResponseAdditionalDataInstallments"
            - $ref: "#/components/schemas/ResponseAdditionalDataNetworkTokens"
            - $ref: "#/components/schemas/ResponseAdditionalDataOpi"
            - $ref: "#/components/schemas/ResponseAdditionalDataSepa"
          description: "Contains additional information about the payment. Some data fields are included only if you select them first: Go to **Customer Area** > **Developers** > **Additional data**."
          type: object
        authResponse:
          description: |-
            The authorisation code representing the authentication result.

            Possible values:
            * Received
            * Authorised
            * Error
            * Refused
            * Cancelled
            * Unknown
          type: string
        fraudResult:
          $ref: "#/components/schemas/FraudResult"
          description: The fraud result properties of the payment.
        merchantReference:
          description: A unique value that you provided in the initial `/paymentSession` request as a `reference` field.
          type: string
        order:
          $ref: "#/components/schemas/CheckoutOrderResponse"
          description: Contains updated information regarding the order in case order information was provided in the request.
        paymentMethod:
          description: The payment method used in the transaction.
          type: string
        pspReference:
          description: Adyen's 16-character reference associated with the transaction/request. This value is globally unique; quote it when communicating with us about this request.
          type: string
        refusalReason:
          description: |-
            If the payment's authorisation is refused or an error occurs during authorisation, this field holds Adyen's mapped reason for the refusal or a description of the error. When a transaction fails, the authorisation response includes `resultCode` and `refusalReason` values.

            For more information, see [Refusal reasons](https://docs.adyen.com/development-resources/refusal-reasons).
          type: string
        refusalReasonCode:
          description: Code that specifies the refusal reason. For more information, see [Authorisation refusal reasons](https://docs.adyen.com/development-resources/refusal-reasons).
          type: string
          x-addedInVersion: "37"
        resultCode:
          description: |-
            The result of the payment. For more information, see [Result codes](https://docs.adyen.com/online-payments/payment-result-codes).

            Possible values:

            * **AuthenticationFinished** – The payment has been successfully authenticated with 3D Secure 2. Returned for 3D Secure 2 authentication-only transactions.
            * **AuthenticationNotRequired** – The transaction does not require 3D Secure authentication. Returned for [standalone authentication-only integrations](https://docs.adyen.com/online-payments/3d-secure/other-3ds-flows/authentication-only).
            * **Authorised** – The payment was successfully authorised. This state serves as an indicator to proceed with the delivery of goods and services. This is a final state.
            * **Cancelled** – Indicates the payment has been cancelled (either by the shopper or the merchant) before processing was completed. This is a final state.
            * **ChallengeShopper** – The issuer requires further shopper interaction before the payment can be authenticated. Returned for 3D Secure 2 transactions.
            * **Error** – There was an error when the payment was being processed. The reason is given in the `refusalReason` field. This is a final state.
            * **IdentifyShopper** – The issuer requires the shopper's device fingerprint before the payment can be authenticated. Returned for 3D Secure 2 transactions.
            * **PartiallyAuthorised** – The payment has been authorised for a partial amount.
            This happens for card payments when the merchant supports Partial Authorisations and the cardholder has insufficient funds.
            * **Pending** – Indicates that it is not possible to obtain the final status of the payment. This can happen if the systems providing final status information for the payment are unavailable, or if the shopper needs to take further action to complete the payment.
            * **PresentToShopper** – Indicates that the response contains additional information that you need to present to a shopper, so that they can use it to complete a payment.
            * **Received** – Indicates the payment has successfully been received by Adyen, and will be processed. This is the initial state for all payments.
            * **RedirectShopper** – Indicates the shopper should be redirected to an external web page or app to complete the authorisation.
            * **Refused** – Indicates the payment was refused. The reason is given in the `refusalReason` field. This is a final state.
          enum:
            - AuthenticationFinished
            - AuthenticationNotRequired
            - Authorised
            - Cancelled
            - ChallengeShopper
            - Error
            - IdentifyShopper
            - PartiallyAuthorised
            - Pending
            - PresentToShopper
            - Received
            - RedirectShopper
            - Refused
            - Success
          type: string
        serviceError:
          $ref: "#/components/schemas/ServiceErrorDetails"
          description: The type of the error.
        shopperLocale:
          description: The shopperLocale value provided in the payment request.
          type: string
      required:
        - authResponse
        - merchantReference
        - paymentMethod
        - shopperLocale
      type: object
    RatepayDetails:
      additionalProperties: false
      properties:
        billingAddress:
          description: The address where to send the invoice.
          type: string
        deliveryAddress:
          description: The address where the goods should be delivered.
          type: string
        personalDetails:
          description: Shopper name, date of birth, phone number, and email address.
          type: string
        recurringDetailReference:
          description: This is the `recurringDetailReference` returned in the response when you created the token.
          type: string
        type:
          default: ratepay
          description: "**ratepay**"
          enum:
            - ratepay
            - ratepay_directdebit
          type: string
      required:
        - type
      title: Ratepay
      type: object
    Recurring:
      properties:
        contract:
          description: |-
            The type of recurring contract to be used.
            Possible values:
            * `ONECLICK` – Payment details can be used to initiate a one-click payment, where the shopper enters the [card security code (CVC/CVV)](https://docs.adyen.com/payments-fundamentals/payment-glossary#card-security-code-cvc-cvv-cid).
            * `RECURRING` – Payment details can be used without the card security code to initiate [card-not-present transactions](https://docs.adyen.com/payments-fundamentals/payment-glossary#card-not-present-cnp).
            * `ONECLICK,RECURRING` – Payment details can be used regardless of whether the shopper is on your site or not.
            * `PAYOUT` – Payment details can be used to [make a payout](https://docs.adyen.com/online-payments/online-payouts).
          enum:
            - ONECLICK
            - RECURRING
            - PAYOUT
          type: string
        recurringDetailName:
          description: A descriptive name for this detail.
          type: string
        tokenService:
          description: The name of the token service.
          enum:
            - VISATOKENSERVICE
            - MCTOKENSERVICE
            - AMEXTOKENSERVICE
            - TOKEN_SHARING
          type: string
          x-addedInVersion: "25"
      type: object
    RecurringDetail:
      properties:
        configuration:
          additionalProperties:
            type: string
          description: The configuration of the payment method.
          type: object
        details:
          description: All input details to be provided to complete the payment with this payment method.
          items:
            $ref: "#/components/schemas/InputDetail"
          type: array
        group:
          $ref: "#/components/schemas/PaymentMethodGroup"
          description: The group where this payment method belongs to.
        inputDetails:
          deprecated: true
          description: All input details to be provided to complete the payment with this payment method.
          items:
            $ref: "#/components/schemas/InputDetail"
          type: array
        name:
          description: The displayable name of this payment method.
          type: string
        recurringDetailReference:
          description: The reference that uniquely identifies the recurring detail.
          type: string
        storedDetails:
          $ref: "#/components/schemas/StoredDetails"
          description: Contains information on previously stored payment details.
        supportsRecurring:
          description: Indicates whether this payment method supports tokenization or not.
          type: boolean
        type:
          description: The unique payment method code.
          type: string
      type: object
    Redirect:
      properties:
        data:
          additionalProperties:
            type: string
          description: When the redirect URL must be accessed via POST, use this data to post to the redirect URL.
          type: object
        method:
          description: |-
            The web method that you must use to access the redirect URL.

            Possible values: GET, POST.
          enum:
            - GET
            - POST
          type: string
        url:
          description: The URL, to which you must redirect a shopper to complete a payment.
          type: string
      type: object
    ResponseAdditionalData3DSecure:
      properties:
        cardHolderInfo:
          description: "Information provided by the issuer to the cardholder. If this field is present, you need to display this information to the cardholder. "
          type: string
        cavv:
          description: The Cardholder Authentication Verification Value (CAVV) for the 3D Secure authentication session, as a Base64-encoded 20-byte array.
          type: string
        cavvAlgorithm:
          description: The CAVV algorithm used.
          type: string
        scaExemptionRequested:
          description: |-
            Shows the [exemption type](https://docs.adyen.com/payments-fundamentals/psd2-sca-compliance-and-implementation-guide#specifypreferenceinyourapirequest) that Adyen requested for the payment.

             Possible values:
            * **lowValue** 
            * **secureCorporate** 
            * **trustedBeneficiary** 
            * **transactionRiskAnalysis** 
          type: string
        threeds2.cardEnrolled:
          description: Indicates whether a card is enrolled for 3D Secure 2.
          type: boolean
      type: object
    ResponseAdditionalDataBillingAddress:
      properties:
        billingAddress.city:
          description: The billing address city passed in the payment request.
          type: string
        billingAddress.country:
          description: |-
            The billing address country passed in the payment request.

            Example: NL
          type: string
        billingAddress.houseNumberOrName:
          description: The billing address house number or name passed in the payment request.
          type: string
        billingAddress.postalCode:
          description: |-
            The billing address postal code passed in the payment request.

            Example: 1011 DJ
          type: string
        billingAddress.stateOrProvince:
          description: |-
            The billing address state or province passed in the payment request.

            Example: NH
          type: string
        billingAddress.street:
          description: The billing address street passed in the payment request.
          type: string
      type: object
    ResponseAdditionalDataCard:
      properties:
        cardBin:
          description: |-
            The first six digits of the card number.

            This is the [Bank Identification Number (BIN)](https://docs.adyen.com/get-started-with-adyen/payment-glossary#bank-identification-number-bin) for card numbers with a six-digit BIN.

            Example: 521234
          type: string
        cardHolderName:
          description: The cardholder name passed in the payment request.
          type: string
        cardIssuingBank:
          description: The bank or the financial institution granting lines of credit through card association branded payment cards. This information can be included when available.
          type: string
        cardIssuingCountry:
          description: |-
            The country where the card was issued.

            Example: US
          type: string
        cardIssuingCurrency:
          description: |-
            The currency in which the card is issued, if this information is available. Provided as the currency code or currency number from the ISO-4217 standard. 

            Example: USD
          type: string
        cardPaymentMethod:
          description: |-
            The card payment method used for the transaction.

            Example: amex
          type: string
        cardSummary:
          description: |-
            The last four digits of a card number.

            > Returned only in case of a card payment.
          type: string
        issuerBin:
          description: |-
            The first eight digits of the card number. Only returned if the card number is 16 digits or more.

            This is the [Bank Identification Number (BIN)](https://docs.adyen.com/get-started-with-adyen/payment-glossary#bank-identification-number-bin) for card numbers with an eight-digit BIN.

            Example: 52123423
          type: string
      type: object
    ResponseAdditionalDataCommon:
      properties:
        acquirerAccountCode:
          description: |-
            The name of the Adyen acquirer account.

            Example: PayPalSandbox_TestAcquirer

            > Only relevant for PayPal transactions.
          type: string
        acquirerCode:
          description: |-
            The name of the acquirer processing the payment request.

            Example: TestPmmAcquirer
          type: string
        acquirerReference:
          description: |-
            The reference number that can be used for reconciliation in case a non-Adyen acquirer is used for settlement.

            Example: 7C9N3FNBKT9
          type: string
        alias:
          description: |-
            The Adyen alias of the card.

            Example: H167852639363479
          type: string
        aliasType:
          description: |-
            The type of the card alias.

            Example: Default
          type: string
        authCode:
          description: |-
            Authorisation code:
            * When the payment is authorised successfully, this field holds the authorisation code for the payment.
            * When the payment is not authorised, this field is empty.

            Example: 58747
          type: string
        authorisationMid:
          description: Merchant ID known by the acquirer.
          type: string
        authorisedAmountCurrency:
          description: The currency of the authorised amount, as a three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).
          type: string
        authorisedAmountValue:
          description: |-
            Value of the amount authorised.

            This amount is represented in minor units according to the [following table](https://docs.adyen.com/development-resources/currency-codes).
          type: string
        avsResult:
          description: |-
            The AVS result code of the payment, which provides information about the outcome of the AVS check.

            For possible values, see [AVS](https://docs.adyen.com/risk-management/configure-standard-risk-rules/consistency-rules#billing-address-does-not-match-cardholder-address-avs).
          type: string
        avsResultRaw:
          description: |-
            Raw AVS result received from the acquirer, where available.

            Example: D
          type: string
        bic:
          description: |-
            BIC of a bank account.

            Example: TESTNL01

            > Only relevant for SEPA Direct Debit transactions.
          type: string
        coBrandedWith:
          description: Includes the co-branded card information.
          type: string
        cvcResult:
          description: The result of CVC verification.
          examples:
            - 1 Matches
          type: string
        cvcResultRaw:
          description: The raw result of CVC verification.
          examples:
            - M
          type: string
        dsTransID:
          description: Supported for 3D Secure 2. The unique transaction identifier assigned by the DS to identify a single transaction.
          type: string
        eci:
          description: |-
            The Electronic Commerce Indicator returned from the schemes for the 3DS payment session.

            Example: 02
          type: string
        expiryDate:
          description: |-
            The expiry date on the card.

            Example: 6/2016

            > Returned only in case of a card payment.
          type: string
        extraCostsCurrency:
          description: |-
            The currency of the extra amount charged due to additional amounts set in the skin used in the HPP payment request.

            Example: EUR
          type: string
        extraCostsValue:
          description: The value of the extra amount charged due to additional amounts set in the skin used in the HPP payment request. The amount is in minor units.
          type: string
        fraudCheck-[itemNr]-[FraudCheckname]:
          description: The fraud score due to a particular fraud check. The fraud check name is found in the key of the key-value pair.
          type: string
        fraudManualReview:
          description: Indicates if the payment is sent to manual review.
          type: string
        fraudResultType:
          description: The fraud result properties of the payment.
          enum:
            - GREEN
            - FRAUD
          type: string
        fundingSource:
          description: |-
            Information regarding the funding type of the card. The possible return values are:
            * CHARGE
            * CREDIT
            * DEBIT
            * PREPAID
            * PREPAID_RELOADABLE

            * PREPAID_NONRELOADABLE
            * DEFFERED_DEBIT

            > This functionality requires additional configuration on Adyen's end. To enable it, contact the Support Team.

            For receiving this field in the notification, enable **Include Funding Source** in **Notifications** > **Additional settings**.
          type: string
        fundsAvailability:
          description: |-
            Indicates availability of funds.

            Visa:
            * "I" (fast funds are supported)
            * "N" (otherwise)

            Mastercard:
            * "I" (product type is Prepaid or Debit, or issuing country is in CEE/HGEM list)
            * "N" (otherwise)

            > Returned when you verify a card BIN or estimate costs, and only if payoutEligible is "Y" or "D".
          type: string
        inferredRefusalReason:
          description: |-
            Provides the more granular indication of why a transaction was refused. When a transaction fails with either "Refused", "Restricted Card", "Transaction Not Permitted", "Not supported" or "DeclinedNon Generic" refusalReason from the issuer, Adyen cross references its PSP-wide data for extra insight into the refusal reason. If an inferred refusal reason is available, the `inferredRefusalReason`, field is populated and the `refusalReason`, is set to "Not Supported".

            Possible values:

            * 3D Secure Mandated
            * Closed Account
            * ContAuth Not Supported
            * CVC Mandated
            * Ecommerce Not Allowed
            * Crossborder Not Supported
            * Card Updated

            * Low Authrate Bin
            * Non-reloadable prepaid card
          type: string
        isCardCommercial:
          description: Indicates if the card is used for business purposes only.
          type: string
        issuerCountry:
          description: |-
            The issuing country of the card based on the BIN list that Adyen maintains.

            Example: JP
          type: string
        liabilityShift:
          description: A Boolean value indicating whether a liability shift was offered for this payment.
          type: string
        mcBankNetReferenceNumber:
          description: |-
            The `mcBankNetReferenceNumber`, is a minimum of six characters and a maximum of nine characters long.

            > Contact Support Team to enable this field.
          type: string
        merchantAdviceCode:
          description: |-
            The Merchant Advice Code (MAC) can be returned by Mastercard issuers for refused payments. If present, the MAC contains information about why the payment failed, and whether it can be retried.

            For more information see [Mastercard Merchant Advice Codes](https://docs.adyen.com/development-resources/raw-acquirer-responses#mastercard-merchant-advice-codes).
          type: string
        merchantReference:
          description: The reference provided for the transaction.
          type: string
        networkTxReference:
          description: |-
            Returned in the response if you are not tokenizing with Adyen and are using the Merchant-initiated transactions (MIT) framework from Mastercard or Visa.

            This contains either the Mastercard Trace ID or the Visa Transaction ID.
          type: string
        nonScheme.transactionLimit:
          description: The maximum spendable value for a single transaction. Applicable to some gift cards.
          type: string
        nonScheme.transactionLimitCcy:
          description: The currency of the transaction limit.
          type: string
        ownerName:
          description: |-
            The owner name of a bank account.

            Only relevant for SEPA Direct Debit transactions.
          type: string
        paymentAccountReference:
          description: The Payment Account Reference (PAR) value links a network token with the underlying primary account number (PAN). The PAR value consists of 29 uppercase alphanumeric characters.
          type: string
        paymentMethod:
          description: The payment method used in the transaction.
          type: string
        paymentMethodVariant:
          description: |-
            The Adyen sub-variant of the payment method used for the payment request.

            For more information, refer to [PaymentMethodVariant](https://docs.adyen.com/development-resources/paymentmethodvariant).

            Example: mcpro
          type: string
        payoutEligible:
          description: |-
            Indicates whether a payout is eligible or not for this card.

            Visa:
            * "Y"
            * "N"

            Mastercard:
            * "Y" (domestic and cross-border)

            * "D" (only domestic)
            * "N" (no MoneySend)
            * "U" (unknown)
          type: string
        realtimeAccountUpdaterStatus:
          description: |-
            The response code from the Real Time Account Updater service.

            Possible return values are:
            * CardChanged
            * CardExpiryChanged
            * CloseAccount

            * ContactCardAccountHolder
          type: string
        receiptFreeText:
          description: Message to be displayed on the terminal.
          type: string
        recurring.firstPspReference:
          description: |-
            The `pspReference`, of the first recurring payment that created the recurring detail.

            This functionality requires additional configuration on Adyen's end. To enable it, contact the Support Team.
          type: string
        recurring.recurringDetailReference:
          description: The reference that uniquely identifies the recurring transaction.
          type: string
        referred:
          description: |-
            If the payment is referred, this field is set to true.

            This field is unavailable if the payment is referred and is usually not returned with ecommerce transactions.

            Example: true
          type: string
        refusalReasonRaw:
          description: |-
            Raw refusal reason received from the acquirer, where available.

            Example: AUTHORISED
          type: string
        requestAmount:
          description: The amount of the payment request.
          type: string
        requestCurrencyCode:
          description: The currency of the payment request.
          type: string
        shopperInteraction:
          description: |-
            The shopper interaction type of the payment request.

            Example: Ecommerce
          type: string
        shopperReference:
          description: |-
            The shopperReference passed in the payment request.

            Example: AdyenTestShopperXX
          type: string
        terminalId:
          description: |-
            The terminal ID used in a point-of-sale payment.

            Example: 06022622
          type: string
        threeDAuthenticated:
          description: |-
            A Boolean value indicating whether 3DS authentication was completed on this payment.

            Example: true
          type: string
        threeDAuthenticatedResponse:
          description: |-
            The raw 3DS authentication result from the card issuer.

            Example: N
          type: string
        threeDOffered:
          description: |-
            A Boolean value indicating whether 3DS was offered for this payment.

            Example: true
          type: string
        threeDOfferedResponse:
          description: |-
            The raw enrollment result from the 3DS directory services of the card schemes.

            Example: Y
          type: string
        threeDSVersion:
          description: The 3D Secure 2 version.
          type: string
        visaTransactionId:
          description: |-
            The `visaTransactionId`, has a fixed length of 15 numeric characters.

            > Contact Support Team to enable this field.
          type: string
        xid:
          description: |-
            The 3DS transaction ID of the 3DS session sent in notifications. The value is Base64-encoded and is returned for transactions with directoryResponse 'N' or 'Y'. If you want to submit the xid in your 3D Secure 1 request, use the `mpiData.xid`, field.

            Example: ODgxNDc2MDg2MDExODk5MAAAAAA=
          type: string
      type: object
    ResponseAdditionalDataDomesticError:
      properties:
        domesticRefusalReasonRaw:
          description: |-
            The reason the transaction was declined, given by the local issuer. 
            Currently available for merchants in Japan.
          type: string
        domesticShopperAdvice:
          description: |-
            The action the shopper should take, in a local language. 
            Currently available in Japanese, for merchants in Japan.
          type: string
      type: object
    ResponseAdditionalDataInstallments:
      properties:
        installmentPaymentData.installmentType:
          description: Type of installment. The value of `installmentType` should be **IssuerFinanced**.
          type: string
        installmentPaymentData.option[itemNr].annualPercentageRate:
          description: Annual interest rate.
          type: string
        installmentPaymentData.option[itemNr].firstInstallmentAmount:
          description: First Installment Amount in minor units.
          type: string
        installmentPaymentData.option[itemNr].installmentFee:
          description: Installment fee amount in minor units.
          type: string
        installmentPaymentData.option[itemNr].interestRate:
          description: Interest rate for the installment period.
          type: string
        installmentPaymentData.option[itemNr].maximumNumberOfInstallments:
          description: Maximum number of installments possible for this payment.
          type: string
        installmentPaymentData.option[itemNr].minimumNumberOfInstallments:
          description: Minimum number of installments possible for this payment.
          type: string
        installmentPaymentData.option[itemNr].numberOfInstallments:
          description: Total number of installments possible for this payment.
          type: string
        installmentPaymentData.option[itemNr].subsequentInstallmentAmount:
          description: Subsequent Installment Amount in minor units.
          type: string
        installmentPaymentData.option[itemNr].totalAmountDue:
          description: Total amount in minor units.
          type: string
        installmentPaymentData.paymentOptions:
          description: |-
            Possible values:
            * PayInInstallmentsOnly
            * PayInFullOnly
            * PayInFullOrInstallments
          type: string
        installments.value:
          description: |-
            The number of installments that the payment amount should be charged with.

            Example: 5
            > Only relevant for card payments in countries that support installments.
          type: string
      type: object
    ResponseAdditionalDataNetworkTokens:
      properties:
        networkToken.available:
          description: Indicates whether a network token is available for the specified card.
          type: string
        networkToken.bin:
          description: The Bank Identification Number of a tokenized card, which is the first six digits of a card number.
          type: string
        networkToken.tokenSummary:
          description: The last four digits of a network token.
          type: string
      type: object
    ResponseAdditionalDataOpi:
      properties:
        opi.transToken:
          description: "Returned in the response if you included `opi.includeTransToken: true` in an ecommerce payment request. This contains an Oracle Payment Interface token that you can store in your Oracle Opera database to identify tokenized ecommerce transactions. For more information and required settings, see [Oracle Opera](https://docs.adyen.com/plugins/oracle-opera#opi-token-ecommerce)."
          type: string
      type: object
    ResponseAdditionalDataSepa:
      properties:
        sepadirectdebit.dateOfSignature:
          description: |-
            The transaction signature date.

            Format: yyyy-MM-dd
          type: string
        sepadirectdebit.mandateId:
          description: Its value corresponds to the pspReference value of the transaction.
          type: string
        sepadirectdebit.sequenceType:
          description: |-
            This field can take one of the following values:
            * OneOff: (OOFF) Direct debit instruction to initiate exactly one direct debit transaction.

            * First: (FRST) Initial/first collection in a series of direct debit instructions.
            * Recurring: (RCUR) Direct debit instruction to carry out regular direct debit transactions initiated by the creditor.
            * Final: (FNAL) Last/final collection in a series of direct debit instructions.

            Example: OOFF
          type: string
      type: object
    RiskData:
      properties:
        clientData:
          description: Contains client-side data, like the device fingerprint, cookies, and specific browser settings.
          type: string
      type: object
    SamsungPayDetails:
      additionalProperties: false
      properties:
        fundingSource:
          description: The funding source that should be used when multiple sources are available. For Brazilian combo cards, by default the funding source is credit. To use debit, set this value to **debit**.
          enum:
            - credit
            - debit
          type: string
        recurringDetailReference:
          description: This is the `recurringDetailReference` returned in the response when you created the token.
          type: string
        samsungPayToken:
          description: The payload you received from the Samsung Pay SDK response.
          type: string
        type:
          default: samsungpay
          description: "**samsungpay**"
          enum:
            - samsungpay
          type: string
      required:
        - samsungPayToken
      title: Samsung Pay
      type: object
    SepaDirectDebitDetails:
      additionalProperties: false
      properties:
        iban:
          description: The International Bank Account Number (IBAN).
          type: string
        ownerName:
          description: The name of the bank account holder.
          type: string
        recurringDetailReference:
          description: This is the `recurringDetailReference` returned in the response when you created the token.
          type: string
        type:
          default: sepadirectdebit
          description: "**sepadirectdebit**"
          enum:
            - sepadirectdebit
            - sepadirectdebit_amazonpay
          type: string
      required:
        - iban
        - ownerName
      title: SEPA Direct Debit
      type: object
    ServiceError:
      properties:
        errorCode:
          description: The error code mapped to the error message.
          type: string
        errorType:
          description: The category of the error.
          type: string
        message:
          description: A short explanation of the issue.
          type: string
        pspReference:
          description: The PSP reference of the payment.
          type: string
        status:
          description: The HTTP response status.
          format: int32
          type: integer
      type: object
    ServiceErrorDetails:
      properties:
        errorCode:
          type: string
        errorType:
          type: string
        message:
          type: string
        pspReference:
          type: string
      type: object
    ShopperInput:
      properties:
        billingAddress:
          description: |-
            Specifies visibility of billing address fields.

            Permitted values:
            * editable
            * hidden
            * readOnly
          enum:
            - editable
            - hidden
            - readOnly
          type: string
        deliveryAddress:
          description: |-
            Specifies visibility of delivery address fields.

            Permitted values:
            * editable
            * hidden
            * readOnly
          enum:
            - editable
            - hidden
            - readOnly
          type: string
        personalDetails:
          description: |-
            Specifies visibility of personal details.

            Permitted values:
            * editable
            * hidden
            * readOnly
          enum:
            - editable
            - hidden
            - readOnly
          type: string
      type: object
    ShopperInteractionDevice:
      properties:
        locale:
          description: Locale on the shopper interaction device.
          type: string
        os:
          description: Operating system running on the shopper interaction device.
          type: string
        osVersion:
          description: Version of the operating system on the shopper interaction device.
          type: string
      type: object
    Split:
      properties:
        account:
          description: |-
            The unique identifier of the account to which the split amount is booked. Required if `type` is **MarketPlace** or **BalanceAccount**.

            * [Classic Platforms integration](https://docs.adyen.com/marketplaces-and-platforms/classic): The [`accountCode`](https://docs.adyen.com/api-explorer/Account/latest/post/updateAccount#request-accountCode) of the account to which the split amount is booked.
            * [Balance Platform](https://docs.adyen.com/marketplaces-and-platforms): The [`balanceAccountId`](https://docs.adyen.com/api-explorer/balanceplatform/latest/get/balanceAccounts/_id_#path-id) of the account to which the split amount is booked.
          type: string
        amount:
          $ref: "#/components/schemas/SplitAmount"
          description: |-
            The amount of the split item.

            * Required for all split types in the [Classic Platforms integration](https://docs.adyen.com/marketplaces-and-platforms/classic).
            * Required if `type` is **BalanceAccount**, **Commission**, **Default**, or **VAT** in your [Balance Platform](https://docs.adyen.com/marketplaces-and-platforms) integration.
        description:
          description: Your description for the split item.
          type: string
        reference:
          description: |-
            Your unique reference for the split item.

            This is required if `type` is **MarketPlace** ([Classic Platforms integration](https://docs.adyen.com/marketplaces-and-platforms/classic)) or **BalanceAccount** ([Balance Platform](https://docs.adyen.com/marketplaces-and-platforms)).

            For the other types, we also recommend providing a **unique** reference so you can reconcile the split and the associated payment in the transaction overview and in the reports.
          type: string
        type:
          description: |-
            The type of the split item.

            Possible values:

            * [Classic Platforms integration](https://docs.adyen.com/marketplaces-and-platforms/classic): **Commission**, **Default**, **Marketplace**, **PaymentFee**, **VAT**.
            * [Balance Platform](https://docs.adyen.com/marketplaces-and-platforms): **BalanceAccount**, **Commission**, **Default**, **PaymentFee**, **Remainder**, **Surcharge**, **Tip**, **VAT**.
          enum:
            - AcquiringFees
            - AdyenCommission
            - AdyenFees
            - AdyenMarkup
            - BalanceAccount
            - Commission
            - Default
            - Interchange
            - MarketPlace
            - PaymentFee
            - Remainder
            - SchemeFee
            - Surcharge
            - Tip
            - VAT
          type: string
      required:
        - type
      type: object
    SplitAmount:
      properties:
        currency:
          description: The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes). By default, this is the original payment currency.
          maxLength: 3
          minLength: 3
          type: string
        value:
          description: The value of the split amount, in [minor units](https://docs.adyen.com/development-resources/currency-codes).
          format: int64
          type: integer
      required:
        - value
      type: object
    StandalonePaymentCancelRequest:
      properties:
        applicationInfo:
          $ref: "#/components/schemas/ApplicationInfo"
          description: Information about your application. For more details, see [Building Adyen solutions](https://docs.adyen.com/development-resources/building-adyen-solutions).
        merchantAccount:
          description: The merchant account that is used to process the payment.
          type: string
        paymentReference:
          description: The [`reference`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__reqParam_reference) of the payment that you want to cancel.
          type: string
        reference:
          description: "Your reference for the cancel request. Maximum length: 80 characters."
          type: string
      required:
        - merchantAccount
        - paymentReference
      type: object
    StandalonePaymentCancelResponse:
      properties:
        merchantAccount:
          description: The merchant account that is used to process the payment.
          type: string
        paymentReference:
          description: The [`reference`](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__reqParam_reference) of the payment to cancel.
          type: string
        pspReference:
          description: Adyen's 16-character reference associated with the cancel request.
          type: string
        reference:
          description: Your reference for the cancel request.
          type: string
        status:
          description: The status of your request. This will always have the value **received**.
          enum:
            - received
          type: string
      required:
        - status
        - merchantAccount
        - pspReference
        - paymentReference
      type: object
    StoredDetails:
      properties:
        bank:
          $ref: "#/components/schemas/BankAccount"
          description: The stored bank account.
        card:
          $ref: "#/components/schemas/Card"
          description: The stored card information.
        emailAddress:
          description: The email associated with stored payment details.
          type: string
      type: object
    StoredPaymentMethodDetails:
      additionalProperties: false
      properties:
        recurringDetailReference:
          description: This is the `recurringDetailReference` returned in the response when you created the token.
          type: string
        type:
          description: The payment method type.
          enum:
            - bcmc_mobile
            - bcmc_mobile_QR
            - bcmc_mobile_app
            - momo_wallet
            - momo_wallet_app
            - twint
            - paymaya_wallet
            - grabpay_SG
            - grabpay_MY
            - grabpay_TH
            - grabpay_ID
            - grabpay_VN
            - grabpay_PH
            - oxxo
            - gcash
            - dana
            - kakaopay
            - truemoney
          type: string
      title: Stored Payment Method
      type: object
    SubInputDetail:
      properties:
        configuration:
          additionalProperties:
            type: string
          description: Configuration parameters for the required input.
          type: object
        items:
          description: In case of a select, the items to choose from.
          items:
            $ref: "#/components/schemas/Item"
          type: array
        key:
          description: The value to provide in the result.
          type: string
        optional:
          description: True if this input is optional to provide.
          type: boolean
        type:
          description: The type of the required input.
          type: string
        value:
          description: The value can be pre-filled, if available.
          type: string
      type: object
    SubMerchant:
      properties:
        city:
          description: |-
            The city of the sub-merchant's address.
            * Format: Alphanumeric
            * Maximum length: 13 characters
          type: string
        country:
          description: |-
            The three-letter country code of the sub-merchant's address. For example, **BRA** for Brazil. 
            * Format: [ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3)
            * Fixed length: 3 characters
          type: string
        mcc:
          description: |-
            The sub-merchant's 4-digit Merchant Category Code (MCC). 
            * Format: Numeric
            * Fixed length: 4 digits
          type: string
        name:
          description: |-
            The name of the sub-merchant. Based on scheme specifications, this value will overwrite the shopper statement  that will appear in the card statement.
            * Format: Alphanumeric
            * Maximum length: 22 characters
          type: string
        taxId:
          description: |-
            The tax ID of the sub-merchant.
            * Format: Numeric
            * Fixed length: 11 digits for the CPF or 14 digits for the CNPJ
          type: string
      type: object
    ThreeDSecureData:
      properties:
        authenticationResponse:
          description: |-
            In 3D Secure 1, the authentication response if the shopper was redirected.

            In 3D Secure 2, this is the `transStatus` from the challenge result. If the transaction was frictionless, omit this parameter.
          enum:
            - Y
            - N
            - U
            - A
          type: string
        cavv:
          contentEncoding: base64
          description: The cardholder authentication value (base64 encoded, 20 bytes in a decoded form).
          type: string
        cavvAlgorithm:
          description: The CAVV algorithm used. Include this only for 3D Secure 1.
          type: string
        directoryResponse:
          description: |-
            In 3D Secure 1, this is the enrollment response from the 3D directory server.

            In 3D Secure 2, this is the `transStatus` from the `ARes`.
          enum:
            - A
            - C
            - D
            - I
            - N
            - R
            - U
            - Y
          type: string
        eci:
          description: The electronic commerce indicator.
          type: string
        xid:
          contentEncoding: base64
          description: Supported for 3D Secure 1. The transaction identifier (Base64-encoded, 20 bytes in a decoded form).
          type: string
      type: object
    UpdatePaymentLinkRequest:
      properties:
        status:
          description: |-
            Status of the payment link. Possible values:
            * **expired**
          enum:
            - expired
          type: string
      required:
        - status
      type: object
    UpiCollectDetails:
      additionalProperties: false
      properties:
        billingSequenceNumber:
          description: The sequence number for the debit. For example, send **2** if this is the second debit for the subscription. The sequence number is included in the notification sent to the shopper.
          type: string
        recurringDetailReference:
          description: This is the `recurringDetailReference` returned in the response when you created the token.
          type: string
        shopperNotificationReference:
          description: The `shopperNotificationReference` returned in the response when you requested to notify the shopper. Used for recurring payment only.
          type: string
        type:
          default: upi_collect
          description: "**upi_collect**"
          enum:
            - upi_collect
          type: string
        virtualPaymentAddress:
          description: The virtual payment address for UPI.
          type: string
      required:
        - type
        - billingSequenceNumber
      title: UPI Collect
      type: object
    UpiIntentDetails:
      additionalProperties: false
      properties:
        recurringDetailReference:
          description: This is the `recurringDetailReference` returned in the response when you created the token.
          type: string
        shopperNotificationReference:
          description: The `shopperNotificationReference` returned in the response when you requested to notify the shopper. Used for recurring payment only.
          type: string
        type:
          default: upi_intent
          description: "**upi_intent**"
          enum:
            - upi_intent
          type: string
      required:
        - type
      title: UPI Intent
      type: object
    UtilityRequest:
      properties:
        originDomains:
          description: The list of origin domains, for which origin keys are requested.
          items:
            type: string
          type: array
      required:
        - originDomains
      type: object
    UtilityResponse:
      properties:
        originKeys:
          additionalProperties:
            type: string
          description: The list of origin keys for all requested domains. For each list item, the key is the domain and the value is the origin key.
          type: object
          x-addedInVersion: "1"
      type: object
    VippsDetails:
      additionalProperties: false
      properties:
        recurringDetailReference:
          description: This is the `recurringDetailReference` returned in the response when you created the token.
          type: string
        telephoneNumber:
          description: ""
          type: string
        type:
          default: vipps
          description: "**vipps**"
          enum:
            - vipps
          type: string
      required:
        - telephoneNumber
      title: Vipps
      type: object
    VisaCheckoutDetails:
      additionalProperties: false
      properties:
        fundingSource:
          description: The funding source that should be used when multiple sources are available. For Brazilian combo cards, by default the funding source is credit. To use debit, set this value to **debit**.
          enum:
            - credit
            - debit
          type: string
        type:
          default: visacheckout
          description: "**visacheckout**"
          enum:
            - visacheckout
          type: string
        visaCheckoutCallId:
          description: The Visa Click to Pay Call ID value. When your shopper selects a payment and/or a shipping address from Visa Click to Pay, you will receive a Visa Click to Pay Call ID.
          type: string
      required:
        - visaCheckoutCallId
      title: Visa Checkout
      type: object
    WeChatPayDetails:
      additionalProperties: false
      properties:
        type:
          default: wechatpay
          description: "**wechatpay**"
          enum:
            - wechatpay
            - wechatpay_pos
          type: string
      title: WeChat Pay
      type: object
    WeChatPayMiniProgramDetails:
      additionalProperties: false
      properties:
        appId:
          type: string
        openid:
          type: string
        type:
          default: wechatpayMiniProgram
          description: "**wechatpayMiniProgram**"
          enum:
            - wechatpayMiniProgram
          type: string
      title: WeChat Pay - Mini Program
      type: object
    ZipDetails:
      additionalProperties: false
      properties:
        clickAndCollect:
          description: Set this to **true** if the shopper would like to pick up and collect their order, instead of having the goods delivered to them.
          type: string
        recurringDetailReference:
          description: This is the `recurringDetailReference` returned in the response when you created the token.
          type: string
        type:
          default: zip
          description: "**zip**"
          enum:
            - zip
            - zip_pos
          type: string
      title: Zip
      type: object
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: X-API-Key
      type: apiKey
    BasicAuth:
      scheme: basic
      type: http
