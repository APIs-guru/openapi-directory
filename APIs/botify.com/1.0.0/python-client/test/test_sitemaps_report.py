# coding: utf-8

"""
    Botify API

    Botify Saas API

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.sitemaps_report import SitemapsReport

class TestSitemapsReport(unittest.TestCase):
    """SitemapsReport unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SitemapsReport:
        """Test SitemapsReport
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SitemapsReport`
        """
        model = SitemapsReport()
        if include_optional:
            return SitemapsReport(
                count = 56,
                errors = [
                    openapi_client.models.sitemaps_report_sitemap.SitemapsReportSitemap(
                        error = openapi_client.models.sitemaps_report_sitemap_error.SitemapsReportSitemapError(
                            message = '', 
                            type = '', ), 
                        file_type = '', 
                        invalid_urls = 56, 
                        sitemap_indexes = [
                            ''
                            ], 
                        url = '', 
                        valid_urls = 56, )
                    ],
                sitemap_indexes = [
                    openapi_client.models.sitemaps_report_sitemap.SitemapsReportSitemap(
                        error = openapi_client.models.sitemaps_report_sitemap_error.SitemapsReportSitemapError(
                            message = '', 
                            type = '', ), 
                        file_type = '', 
                        invalid_urls = 56, 
                        sitemap_indexes = [
                            ''
                            ], 
                        url = '', 
                        valid_urls = 56, )
                    ],
                sitemap_only = openapi_client.models.sitemaps_report_only.SitemapsReportOnly(
                    in_configuration = 56, 
                    out_of_configuration = 56, ),
                sitemaps = [
                    openapi_client.models.sitemaps_report_sitemap.SitemapsReportSitemap(
                        error = openapi_client.models.sitemaps_report_sitemap_error.SitemapsReportSitemapError(
                            message = '', 
                            type = '', ), 
                        file_type = '', 
                        invalid_urls = 56, 
                        sitemap_indexes = [
                            ''
                            ], 
                        url = '', 
                        valid_urls = 56, )
                    ]
            )
        else:
            return SitemapsReport(
                count = 56,
                errors = [
                    openapi_client.models.sitemaps_report_sitemap.SitemapsReportSitemap(
                        error = openapi_client.models.sitemaps_report_sitemap_error.SitemapsReportSitemapError(
                            message = '', 
                            type = '', ), 
                        file_type = '', 
                        invalid_urls = 56, 
                        sitemap_indexes = [
                            ''
                            ], 
                        url = '', 
                        valid_urls = 56, )
                    ],
                sitemap_indexes = [
                    openapi_client.models.sitemaps_report_sitemap.SitemapsReportSitemap(
                        error = openapi_client.models.sitemaps_report_sitemap_error.SitemapsReportSitemapError(
                            message = '', 
                            type = '', ), 
                        file_type = '', 
                        invalid_urls = 56, 
                        sitemap_indexes = [
                            ''
                            ], 
                        url = '', 
                        valid_urls = 56, )
                    ],
                sitemap_only = openapi_client.models.sitemaps_report_only.SitemapsReportOnly(
                    in_configuration = 56, 
                    out_of_configuration = 56, ),
                sitemaps = [
                    openapi_client.models.sitemaps_report_sitemap.SitemapsReportSitemap(
                        error = openapi_client.models.sitemaps_report_sitemap_error.SitemapsReportSitemapError(
                            message = '', 
                            type = '', ), 
                        file_type = '', 
                        invalid_urls = 56, 
                        sitemap_indexes = [
                            ''
                            ], 
                        url = '', 
                        valid_urls = 56, )
                    ],
        )
        """

    def testSitemapsReport(self):
        """Test SitemapsReport"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
