# coding: utf-8

"""
    Alerter System API

    <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>

    The version of the OpenAPI document: 1.7.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from datetime import datetime
from pydantic import BaseModel, ConfigDict, Field, StrictInt, StrictStr
from typing import Any, ClassVar, Dict, List, Optional
from typing_extensions import Annotated
from typing import Optional, Set
from typing_extensions import Self

class AlertServiceGet(BaseModel):
    """
    The AlertService resource is a collection of services that can be used to dispatch an alert. Each alert service uses a distinct message transport.
    """ # noqa: E501
    alert_service_name: Optional[Annotated[str, Field(strict=True, max_length=255)]] = Field(description="The name of the alert service. Max 255 characters.", alias="alertServiceName")
    alert_service_notes: Optional[Annotated[str, Field(strict=True, max_length=10000)]] = Field(default=None, description="Notes about the alert service. Max 10,000 characters. Formatting using Markdown is allowed. HTML will be removed.", alias="alertServiceNotes")
    alert_service_transport_code: Optional[StrictStr] = Field(description="The transport of the alert service.", alias="alertServiceTransportCode")
    created_at: Optional[datetime] = Field(default=None, description="When the resource instance was created. This date-time is in the UTC timezone.", alias="createdAt")
    credits_per_transport_alert: Optional[StrictInt] = Field(default=1, description="The phone number where alerts will be sent. Ensure that the number format complies with the external transport service that will send the alert.", alias="creditsPerTransportAlert")
    data_segment_code: Optional[Annotated[str, Field(strict=True, max_length=50)]] = Field(default=None, description="User-provided string on which to segment and filter data. Max 50 characters.", alias="dataSegmentCode")
    id: Optional[StrictStr] = Field(default=None, description="The unique identifier of the resource instance.")
    media_objects: Optional[List[StrictStr]] = Field(default=None, description="Media objects that must be sent with each alert. Only applicable when you use your own email alert services.", alias="mediaObjects")
    partition: StrictStr = Field(description="The partition that contains this resource instance. The resource cannot be moved to another partition.")
    recipient_email_address: Optional[Annotated[str, Field(strict=True, max_length=255)]] = Field(description="The email address where alerts will be sent.", alias="recipientEmailAddress")
    recipient_phone_number: Optional[Annotated[str, Field(strict=True, max_length=255)]] = Field(description="The phone number where alerts will be sent. Ensure that the number format complies with the external transport service that will send the alert.", alias="recipientPhoneNumber")
    resource_owner: Optional[StrictStr] = Field(default=None, description="The name of the person who owns this resource.", alias="resourceOwner")
    transport_alerta: Optional[StrictStr] = Field(default=None, alias="transportAlerta")
    transport_all_my_sms: Optional[StrictStr] = Field(default=None, alias="transportAllMySms")
    transport_amazon_sns: Optional[StrictStr] = Field(default=None, alias="transportAmazonSns")
    transport_bandwidth: Optional[StrictStr] = Field(default=None, alias="transportBandwidth")
    transport_chatwork: Optional[StrictStr] = Field(default=None, alias="transportChatwork")
    transport_click_send: Optional[StrictStr] = Field(default=None, alias="transportClickSend")
    transport_clickatell: Optional[StrictStr] = Field(default=None, alias="transportClickatell")
    transport_contact_everyone: Optional[StrictStr] = Field(default=None, alias="transportContactEveryone")
    transport_discord: Optional[StrictStr] = Field(default=None, alias="transportDiscord")
    transport_email: Optional[StrictStr] = Field(default=None, alias="transportEmail")
    transport_engagespot: Optional[StrictStr] = Field(default=None, alias="transportEngagespot")
    transport_esendex: Optional[StrictStr] = Field(default=None, alias="transportEsendex")
    transport_expo: Optional[StrictStr] = Field(default=None, alias="transportExpo")
    transport_firebase: Optional[StrictStr] = Field(default=None, alias="transportFirebase")
    transport_forty_six_elks: Optional[StrictStr] = Field(default=None, alias="transportFortySixElks")
    transport_free_mobile: Optional[StrictStr] = Field(default=None, alias="transportFreeMobile")
    transport_freshdesk: Optional[StrictStr] = Field(default=None, alias="transportFreshdesk")
    transport_gateway_api: Optional[StrictStr] = Field(default=None, alias="transportGatewayApi")
    transport_gitter: Optional[StrictStr] = Field(default=None, alias="transportGitter")
    transport_google_chat: Optional[StrictStr] = Field(default=None, alias="transportGoogleChat")
    transport_gotify: Optional[StrictStr] = Field(default=None, alias="transportGotify")
    transport_help_scout: Optional[StrictStr] = Field(default=None, alias="transportHelpScout")
    transport_infobip: Optional[StrictStr] = Field(default=None, alias="transportInfobip")
    transport_iqsms: Optional[StrictStr] = Field(default=None, alias="transportIqsms")
    transport_kaz_info_teh: Optional[StrictStr] = Field(default=None, alias="transportKazInfoTeh")
    transport_light_sms: Optional[StrictStr] = Field(default=None, alias="transportLightSms")
    transport_line_notify: Optional[StrictStr] = Field(default=None, alias="transportLineNotify")
    transport_linked_in: Optional[StrictStr] = Field(default=None, alias="transportLinkedIn")
    transport_mailjet: Optional[StrictStr] = Field(default=None, alias="transportMailjet")
    transport_mastodon: Optional[StrictStr] = Field(default=None, alias="transportMastodon")
    transport_mattermost: Optional[StrictStr] = Field(default=None, alias="transportMattermost")
    transport_mercure: Optional[StrictStr] = Field(default=None, alias="transportMercure")
    transport_message_bird: Optional[StrictStr] = Field(default=None, alias="transportMessageBird")
    transport_message_media: Optional[StrictStr] = Field(default=None, alias="transportMessageMedia")
    transport_microsoft_teams: Optional[StrictStr] = Field(default=None, alias="transportMicrosoftTeams")
    transport_mobyt: Optional[StrictStr] = Field(default=None, alias="transportMobyt")
    transport_octopush: Optional[StrictStr] = Field(default=None, alias="transportOctopush")
    transport_one_signal: Optional[StrictStr] = Field(default=None, alias="transportOneSignal")
    transport_opsgenie: Optional[StrictStr] = Field(default=None, alias="transportOpsgenie")
    transport_orange_sms: Optional[StrictStr] = Field(default=None, alias="transportOrangeSms")
    transport_ovh_cloud: Optional[StrictStr] = Field(default=None, alias="transportOvhCloud")
    transport_pager_duty: Optional[StrictStr] = Field(default=None, alias="transportPagerDuty")
    transport_pager_tree: Optional[StrictStr] = Field(default=None, alias="transportPagerTree")
    transport_plivo: Optional[StrictStr] = Field(default=None, alias="transportPlivo")
    transport_pushbullet: Optional[StrictStr] = Field(default=None, alias="transportPushbullet")
    transport_pushover: Optional[StrictStr] = Field(default=None, alias="transportPushover")
    transport_pushy: Optional[StrictStr] = Field(default=None, alias="transportPushy")
    transport_ring_central: Optional[StrictStr] = Field(default=None, alias="transportRingCentral")
    transport_rocket_chat: Optional[StrictStr] = Field(default=None, alias="transportRocketChat")
    transport_sendberry: Optional[StrictStr] = Field(default=None, alias="transportSendberry")
    transport_sendinblue: Optional[StrictStr] = Field(default=None, alias="transportSendinblue")
    transport_simple_textin: Optional[StrictStr] = Field(default=None, alias="transportSimpleTextin")
    transport_sinch: Optional[StrictStr] = Field(default=None, alias="transportSinch")
    transport_slack: Optional[StrictStr] = Field(default=None, alias="transportSlack")
    transport_sms77: Optional[StrictStr] = Field(default=None, alias="transportSms77")
    transport_sms_biuras: Optional[StrictStr] = Field(default=None, alias="transportSmsBiuras")
    transport_sms_factor: Optional[StrictStr] = Field(default=None, alias="transportSmsFactor")
    transport_smsapi: Optional[StrictStr] = Field(default=None, alias="transportSmsapi")
    transport_smsc: Optional[StrictStr] = Field(default=None, alias="transportSmsc")
    transport_smsmode: Optional[StrictStr] = Field(default=None, alias="transportSmsmode")
    transport_spot_hit: Optional[StrictStr] = Field(default=None, alias="transportSpotHit")
    transport_telegram: Optional[StrictStr] = Field(default=None, alias="transportTelegram")
    transport_telnyx: Optional[StrictStr] = Field(default=None, alias="transportTelnyx")
    transport_termii: Optional[StrictStr] = Field(default=None, alias="transportTermii")
    transport_trello: Optional[StrictStr] = Field(default=None, alias="transportTrello")
    transport_turbo_sms: Optional[StrictStr] = Field(default=None, alias="transportTurboSms")
    transport_twilio: Optional[StrictStr] = Field(default=None, alias="transportTwilio")
    transport_twitter: Optional[StrictStr] = Field(default=None, alias="transportTwitter")
    transport_vonage: Optional[StrictStr] = Field(default=None, alias="transportVonage")
    transport_webhook: Optional[StrictStr] = Field(default=None, alias="transportWebhook")
    transport_yunpian: Optional[StrictStr] = Field(default=None, alias="transportYunpian")
    transport_zendesk: Optional[StrictStr] = Field(default=None, alias="transportZendesk")
    transport_zulip: Optional[StrictStr] = Field(default=None, alias="transportZulip")
    __properties: ClassVar[List[str]] = ["alertServiceName", "alertServiceNotes", "alertServiceTransportCode", "createdAt", "creditsPerTransportAlert", "dataSegmentCode", "id", "mediaObjects", "partition", "recipientEmailAddress", "recipientPhoneNumber", "resourceOwner", "transportAlerta", "transportAllMySms", "transportAmazonSns", "transportBandwidth", "transportChatwork", "transportClickSend", "transportClickatell", "transportContactEveryone", "transportDiscord", "transportEmail", "transportEngagespot", "transportEsendex", "transportExpo", "transportFirebase", "transportFortySixElks", "transportFreeMobile", "transportFreshdesk", "transportGatewayApi", "transportGitter", "transportGoogleChat", "transportGotify", "transportHelpScout", "transportInfobip", "transportIqsms", "transportKazInfoTeh", "transportLightSms", "transportLineNotify", "transportLinkedIn", "transportMailjet", "transportMastodon", "transportMattermost", "transportMercure", "transportMessageBird", "transportMessageMedia", "transportMicrosoftTeams", "transportMobyt", "transportOctopush", "transportOneSignal", "transportOpsgenie", "transportOrangeSms", "transportOvhCloud", "transportPagerDuty", "transportPagerTree", "transportPlivo", "transportPushbullet", "transportPushover", "transportPushy", "transportRingCentral", "transportRocketChat", "transportSendberry", "transportSendinblue", "transportSimpleTextin", "transportSinch", "transportSlack", "transportSms77", "transportSmsBiuras", "transportSmsFactor", "transportSmsapi", "transportSmsc", "transportSmsmode", "transportSpotHit", "transportTelegram", "transportTelnyx", "transportTermii", "transportTrello", "transportTurboSms", "transportTwilio", "transportTwitter", "transportVonage", "transportWebhook", "transportYunpian", "transportZendesk", "transportZulip"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of AlertServiceGet from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        * OpenAPI `readOnly` fields are excluded.
        """
        excluded_fields: Set[str] = set([
            "id",
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # set to None if alert_service_name (nullable) is None
        # and model_fields_set contains the field
        if self.alert_service_name is None and "alert_service_name" in self.model_fields_set:
            _dict['alertServiceName'] = None

        # set to None if alert_service_notes (nullable) is None
        # and model_fields_set contains the field
        if self.alert_service_notes is None and "alert_service_notes" in self.model_fields_set:
            _dict['alertServiceNotes'] = None

        # set to None if alert_service_transport_code (nullable) is None
        # and model_fields_set contains the field
        if self.alert_service_transport_code is None and "alert_service_transport_code" in self.model_fields_set:
            _dict['alertServiceTransportCode'] = None

        # set to None if data_segment_code (nullable) is None
        # and model_fields_set contains the field
        if self.data_segment_code is None and "data_segment_code" in self.model_fields_set:
            _dict['dataSegmentCode'] = None

        # set to None if id (nullable) is None
        # and model_fields_set contains the field
        if self.id is None and "id" in self.model_fields_set:
            _dict['id'] = None

        # set to None if recipient_email_address (nullable) is None
        # and model_fields_set contains the field
        if self.recipient_email_address is None and "recipient_email_address" in self.model_fields_set:
            _dict['recipientEmailAddress'] = None

        # set to None if recipient_phone_number (nullable) is None
        # and model_fields_set contains the field
        if self.recipient_phone_number is None and "recipient_phone_number" in self.model_fields_set:
            _dict['recipientPhoneNumber'] = None

        # set to None if resource_owner (nullable) is None
        # and model_fields_set contains the field
        if self.resource_owner is None and "resource_owner" in self.model_fields_set:
            _dict['resourceOwner'] = None

        # set to None if transport_alerta (nullable) is None
        # and model_fields_set contains the field
        if self.transport_alerta is None and "transport_alerta" in self.model_fields_set:
            _dict['transportAlerta'] = None

        # set to None if transport_all_my_sms (nullable) is None
        # and model_fields_set contains the field
        if self.transport_all_my_sms is None and "transport_all_my_sms" in self.model_fields_set:
            _dict['transportAllMySms'] = None

        # set to None if transport_amazon_sns (nullable) is None
        # and model_fields_set contains the field
        if self.transport_amazon_sns is None and "transport_amazon_sns" in self.model_fields_set:
            _dict['transportAmazonSns'] = None

        # set to None if transport_bandwidth (nullable) is None
        # and model_fields_set contains the field
        if self.transport_bandwidth is None and "transport_bandwidth" in self.model_fields_set:
            _dict['transportBandwidth'] = None

        # set to None if transport_chatwork (nullable) is None
        # and model_fields_set contains the field
        if self.transport_chatwork is None and "transport_chatwork" in self.model_fields_set:
            _dict['transportChatwork'] = None

        # set to None if transport_click_send (nullable) is None
        # and model_fields_set contains the field
        if self.transport_click_send is None and "transport_click_send" in self.model_fields_set:
            _dict['transportClickSend'] = None

        # set to None if transport_clickatell (nullable) is None
        # and model_fields_set contains the field
        if self.transport_clickatell is None and "transport_clickatell" in self.model_fields_set:
            _dict['transportClickatell'] = None

        # set to None if transport_contact_everyone (nullable) is None
        # and model_fields_set contains the field
        if self.transport_contact_everyone is None and "transport_contact_everyone" in self.model_fields_set:
            _dict['transportContactEveryone'] = None

        # set to None if transport_discord (nullable) is None
        # and model_fields_set contains the field
        if self.transport_discord is None and "transport_discord" in self.model_fields_set:
            _dict['transportDiscord'] = None

        # set to None if transport_email (nullable) is None
        # and model_fields_set contains the field
        if self.transport_email is None and "transport_email" in self.model_fields_set:
            _dict['transportEmail'] = None

        # set to None if transport_engagespot (nullable) is None
        # and model_fields_set contains the field
        if self.transport_engagespot is None and "transport_engagespot" in self.model_fields_set:
            _dict['transportEngagespot'] = None

        # set to None if transport_esendex (nullable) is None
        # and model_fields_set contains the field
        if self.transport_esendex is None and "transport_esendex" in self.model_fields_set:
            _dict['transportEsendex'] = None

        # set to None if transport_expo (nullable) is None
        # and model_fields_set contains the field
        if self.transport_expo is None and "transport_expo" in self.model_fields_set:
            _dict['transportExpo'] = None

        # set to None if transport_firebase (nullable) is None
        # and model_fields_set contains the field
        if self.transport_firebase is None and "transport_firebase" in self.model_fields_set:
            _dict['transportFirebase'] = None

        # set to None if transport_forty_six_elks (nullable) is None
        # and model_fields_set contains the field
        if self.transport_forty_six_elks is None and "transport_forty_six_elks" in self.model_fields_set:
            _dict['transportFortySixElks'] = None

        # set to None if transport_free_mobile (nullable) is None
        # and model_fields_set contains the field
        if self.transport_free_mobile is None and "transport_free_mobile" in self.model_fields_set:
            _dict['transportFreeMobile'] = None

        # set to None if transport_freshdesk (nullable) is None
        # and model_fields_set contains the field
        if self.transport_freshdesk is None and "transport_freshdesk" in self.model_fields_set:
            _dict['transportFreshdesk'] = None

        # set to None if transport_gateway_api (nullable) is None
        # and model_fields_set contains the field
        if self.transport_gateway_api is None and "transport_gateway_api" in self.model_fields_set:
            _dict['transportGatewayApi'] = None

        # set to None if transport_gitter (nullable) is None
        # and model_fields_set contains the field
        if self.transport_gitter is None and "transport_gitter" in self.model_fields_set:
            _dict['transportGitter'] = None

        # set to None if transport_google_chat (nullable) is None
        # and model_fields_set contains the field
        if self.transport_google_chat is None and "transport_google_chat" in self.model_fields_set:
            _dict['transportGoogleChat'] = None

        # set to None if transport_gotify (nullable) is None
        # and model_fields_set contains the field
        if self.transport_gotify is None and "transport_gotify" in self.model_fields_set:
            _dict['transportGotify'] = None

        # set to None if transport_help_scout (nullable) is None
        # and model_fields_set contains the field
        if self.transport_help_scout is None and "transport_help_scout" in self.model_fields_set:
            _dict['transportHelpScout'] = None

        # set to None if transport_infobip (nullable) is None
        # and model_fields_set contains the field
        if self.transport_infobip is None and "transport_infobip" in self.model_fields_set:
            _dict['transportInfobip'] = None

        # set to None if transport_iqsms (nullable) is None
        # and model_fields_set contains the field
        if self.transport_iqsms is None and "transport_iqsms" in self.model_fields_set:
            _dict['transportIqsms'] = None

        # set to None if transport_kaz_info_teh (nullable) is None
        # and model_fields_set contains the field
        if self.transport_kaz_info_teh is None and "transport_kaz_info_teh" in self.model_fields_set:
            _dict['transportKazInfoTeh'] = None

        # set to None if transport_light_sms (nullable) is None
        # and model_fields_set contains the field
        if self.transport_light_sms is None and "transport_light_sms" in self.model_fields_set:
            _dict['transportLightSms'] = None

        # set to None if transport_line_notify (nullable) is None
        # and model_fields_set contains the field
        if self.transport_line_notify is None and "transport_line_notify" in self.model_fields_set:
            _dict['transportLineNotify'] = None

        # set to None if transport_linked_in (nullable) is None
        # and model_fields_set contains the field
        if self.transport_linked_in is None and "transport_linked_in" in self.model_fields_set:
            _dict['transportLinkedIn'] = None

        # set to None if transport_mailjet (nullable) is None
        # and model_fields_set contains the field
        if self.transport_mailjet is None and "transport_mailjet" in self.model_fields_set:
            _dict['transportMailjet'] = None

        # set to None if transport_mastodon (nullable) is None
        # and model_fields_set contains the field
        if self.transport_mastodon is None and "transport_mastodon" in self.model_fields_set:
            _dict['transportMastodon'] = None

        # set to None if transport_mattermost (nullable) is None
        # and model_fields_set contains the field
        if self.transport_mattermost is None and "transport_mattermost" in self.model_fields_set:
            _dict['transportMattermost'] = None

        # set to None if transport_mercure (nullable) is None
        # and model_fields_set contains the field
        if self.transport_mercure is None and "transport_mercure" in self.model_fields_set:
            _dict['transportMercure'] = None

        # set to None if transport_message_bird (nullable) is None
        # and model_fields_set contains the field
        if self.transport_message_bird is None and "transport_message_bird" in self.model_fields_set:
            _dict['transportMessageBird'] = None

        # set to None if transport_message_media (nullable) is None
        # and model_fields_set contains the field
        if self.transport_message_media is None and "transport_message_media" in self.model_fields_set:
            _dict['transportMessageMedia'] = None

        # set to None if transport_microsoft_teams (nullable) is None
        # and model_fields_set contains the field
        if self.transport_microsoft_teams is None and "transport_microsoft_teams" in self.model_fields_set:
            _dict['transportMicrosoftTeams'] = None

        # set to None if transport_mobyt (nullable) is None
        # and model_fields_set contains the field
        if self.transport_mobyt is None and "transport_mobyt" in self.model_fields_set:
            _dict['transportMobyt'] = None

        # set to None if transport_octopush (nullable) is None
        # and model_fields_set contains the field
        if self.transport_octopush is None and "transport_octopush" in self.model_fields_set:
            _dict['transportOctopush'] = None

        # set to None if transport_one_signal (nullable) is None
        # and model_fields_set contains the field
        if self.transport_one_signal is None and "transport_one_signal" in self.model_fields_set:
            _dict['transportOneSignal'] = None

        # set to None if transport_opsgenie (nullable) is None
        # and model_fields_set contains the field
        if self.transport_opsgenie is None and "transport_opsgenie" in self.model_fields_set:
            _dict['transportOpsgenie'] = None

        # set to None if transport_orange_sms (nullable) is None
        # and model_fields_set contains the field
        if self.transport_orange_sms is None and "transport_orange_sms" in self.model_fields_set:
            _dict['transportOrangeSms'] = None

        # set to None if transport_ovh_cloud (nullable) is None
        # and model_fields_set contains the field
        if self.transport_ovh_cloud is None and "transport_ovh_cloud" in self.model_fields_set:
            _dict['transportOvhCloud'] = None

        # set to None if transport_pager_duty (nullable) is None
        # and model_fields_set contains the field
        if self.transport_pager_duty is None and "transport_pager_duty" in self.model_fields_set:
            _dict['transportPagerDuty'] = None

        # set to None if transport_pager_tree (nullable) is None
        # and model_fields_set contains the field
        if self.transport_pager_tree is None and "transport_pager_tree" in self.model_fields_set:
            _dict['transportPagerTree'] = None

        # set to None if transport_plivo (nullable) is None
        # and model_fields_set contains the field
        if self.transport_plivo is None and "transport_plivo" in self.model_fields_set:
            _dict['transportPlivo'] = None

        # set to None if transport_pushbullet (nullable) is None
        # and model_fields_set contains the field
        if self.transport_pushbullet is None and "transport_pushbullet" in self.model_fields_set:
            _dict['transportPushbullet'] = None

        # set to None if transport_pushover (nullable) is None
        # and model_fields_set contains the field
        if self.transport_pushover is None and "transport_pushover" in self.model_fields_set:
            _dict['transportPushover'] = None

        # set to None if transport_pushy (nullable) is None
        # and model_fields_set contains the field
        if self.transport_pushy is None and "transport_pushy" in self.model_fields_set:
            _dict['transportPushy'] = None

        # set to None if transport_ring_central (nullable) is None
        # and model_fields_set contains the field
        if self.transport_ring_central is None and "transport_ring_central" in self.model_fields_set:
            _dict['transportRingCentral'] = None

        # set to None if transport_rocket_chat (nullable) is None
        # and model_fields_set contains the field
        if self.transport_rocket_chat is None and "transport_rocket_chat" in self.model_fields_set:
            _dict['transportRocketChat'] = None

        # set to None if transport_sendberry (nullable) is None
        # and model_fields_set contains the field
        if self.transport_sendberry is None and "transport_sendberry" in self.model_fields_set:
            _dict['transportSendberry'] = None

        # set to None if transport_sendinblue (nullable) is None
        # and model_fields_set contains the field
        if self.transport_sendinblue is None and "transport_sendinblue" in self.model_fields_set:
            _dict['transportSendinblue'] = None

        # set to None if transport_simple_textin (nullable) is None
        # and model_fields_set contains the field
        if self.transport_simple_textin is None and "transport_simple_textin" in self.model_fields_set:
            _dict['transportSimpleTextin'] = None

        # set to None if transport_sinch (nullable) is None
        # and model_fields_set contains the field
        if self.transport_sinch is None and "transport_sinch" in self.model_fields_set:
            _dict['transportSinch'] = None

        # set to None if transport_slack (nullable) is None
        # and model_fields_set contains the field
        if self.transport_slack is None and "transport_slack" in self.model_fields_set:
            _dict['transportSlack'] = None

        # set to None if transport_sms77 (nullable) is None
        # and model_fields_set contains the field
        if self.transport_sms77 is None and "transport_sms77" in self.model_fields_set:
            _dict['transportSms77'] = None

        # set to None if transport_sms_biuras (nullable) is None
        # and model_fields_set contains the field
        if self.transport_sms_biuras is None and "transport_sms_biuras" in self.model_fields_set:
            _dict['transportSmsBiuras'] = None

        # set to None if transport_sms_factor (nullable) is None
        # and model_fields_set contains the field
        if self.transport_sms_factor is None and "transport_sms_factor" in self.model_fields_set:
            _dict['transportSmsFactor'] = None

        # set to None if transport_smsapi (nullable) is None
        # and model_fields_set contains the field
        if self.transport_smsapi is None and "transport_smsapi" in self.model_fields_set:
            _dict['transportSmsapi'] = None

        # set to None if transport_smsc (nullable) is None
        # and model_fields_set contains the field
        if self.transport_smsc is None and "transport_smsc" in self.model_fields_set:
            _dict['transportSmsc'] = None

        # set to None if transport_smsmode (nullable) is None
        # and model_fields_set contains the field
        if self.transport_smsmode is None and "transport_smsmode" in self.model_fields_set:
            _dict['transportSmsmode'] = None

        # set to None if transport_spot_hit (nullable) is None
        # and model_fields_set contains the field
        if self.transport_spot_hit is None and "transport_spot_hit" in self.model_fields_set:
            _dict['transportSpotHit'] = None

        # set to None if transport_telegram (nullable) is None
        # and model_fields_set contains the field
        if self.transport_telegram is None and "transport_telegram" in self.model_fields_set:
            _dict['transportTelegram'] = None

        # set to None if transport_telnyx (nullable) is None
        # and model_fields_set contains the field
        if self.transport_telnyx is None and "transport_telnyx" in self.model_fields_set:
            _dict['transportTelnyx'] = None

        # set to None if transport_termii (nullable) is None
        # and model_fields_set contains the field
        if self.transport_termii is None and "transport_termii" in self.model_fields_set:
            _dict['transportTermii'] = None

        # set to None if transport_trello (nullable) is None
        # and model_fields_set contains the field
        if self.transport_trello is None and "transport_trello" in self.model_fields_set:
            _dict['transportTrello'] = None

        # set to None if transport_turbo_sms (nullable) is None
        # and model_fields_set contains the field
        if self.transport_turbo_sms is None and "transport_turbo_sms" in self.model_fields_set:
            _dict['transportTurboSms'] = None

        # set to None if transport_twilio (nullable) is None
        # and model_fields_set contains the field
        if self.transport_twilio is None and "transport_twilio" in self.model_fields_set:
            _dict['transportTwilio'] = None

        # set to None if transport_twitter (nullable) is None
        # and model_fields_set contains the field
        if self.transport_twitter is None and "transport_twitter" in self.model_fields_set:
            _dict['transportTwitter'] = None

        # set to None if transport_vonage (nullable) is None
        # and model_fields_set contains the field
        if self.transport_vonage is None and "transport_vonage" in self.model_fields_set:
            _dict['transportVonage'] = None

        # set to None if transport_webhook (nullable) is None
        # and model_fields_set contains the field
        if self.transport_webhook is None and "transport_webhook" in self.model_fields_set:
            _dict['transportWebhook'] = None

        # set to None if transport_yunpian (nullable) is None
        # and model_fields_set contains the field
        if self.transport_yunpian is None and "transport_yunpian" in self.model_fields_set:
            _dict['transportYunpian'] = None

        # set to None if transport_zendesk (nullable) is None
        # and model_fields_set contains the field
        if self.transport_zendesk is None and "transport_zendesk" in self.model_fields_set:
            _dict['transportZendesk'] = None

        # set to None if transport_zulip (nullable) is None
        # and model_fields_set contains the field
        if self.transport_zulip is None and "transport_zulip" in self.model_fields_set:
            _dict['transportZulip'] = None

        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of AlertServiceGet from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "alertServiceName": obj.get("alertServiceName"),
            "alertServiceNotes": obj.get("alertServiceNotes"),
            "alertServiceTransportCode": obj.get("alertServiceTransportCode"),
            "createdAt": obj.get("createdAt"),
            "creditsPerTransportAlert": obj.get("creditsPerTransportAlert") if obj.get("creditsPerTransportAlert") is not None else 1,
            "dataSegmentCode": obj.get("dataSegmentCode"),
            "id": obj.get("id"),
            "mediaObjects": obj.get("mediaObjects"),
            "partition": obj.get("partition"),
            "recipientEmailAddress": obj.get("recipientEmailAddress"),
            "recipientPhoneNumber": obj.get("recipientPhoneNumber"),
            "resourceOwner": obj.get("resourceOwner"),
            "transportAlerta": obj.get("transportAlerta"),
            "transportAllMySms": obj.get("transportAllMySms"),
            "transportAmazonSns": obj.get("transportAmazonSns"),
            "transportBandwidth": obj.get("transportBandwidth"),
            "transportChatwork": obj.get("transportChatwork"),
            "transportClickSend": obj.get("transportClickSend"),
            "transportClickatell": obj.get("transportClickatell"),
            "transportContactEveryone": obj.get("transportContactEveryone"),
            "transportDiscord": obj.get("transportDiscord"),
            "transportEmail": obj.get("transportEmail"),
            "transportEngagespot": obj.get("transportEngagespot"),
            "transportEsendex": obj.get("transportEsendex"),
            "transportExpo": obj.get("transportExpo"),
            "transportFirebase": obj.get("transportFirebase"),
            "transportFortySixElks": obj.get("transportFortySixElks"),
            "transportFreeMobile": obj.get("transportFreeMobile"),
            "transportFreshdesk": obj.get("transportFreshdesk"),
            "transportGatewayApi": obj.get("transportGatewayApi"),
            "transportGitter": obj.get("transportGitter"),
            "transportGoogleChat": obj.get("transportGoogleChat"),
            "transportGotify": obj.get("transportGotify"),
            "transportHelpScout": obj.get("transportHelpScout"),
            "transportInfobip": obj.get("transportInfobip"),
            "transportIqsms": obj.get("transportIqsms"),
            "transportKazInfoTeh": obj.get("transportKazInfoTeh"),
            "transportLightSms": obj.get("transportLightSms"),
            "transportLineNotify": obj.get("transportLineNotify"),
            "transportLinkedIn": obj.get("transportLinkedIn"),
            "transportMailjet": obj.get("transportMailjet"),
            "transportMastodon": obj.get("transportMastodon"),
            "transportMattermost": obj.get("transportMattermost"),
            "transportMercure": obj.get("transportMercure"),
            "transportMessageBird": obj.get("transportMessageBird"),
            "transportMessageMedia": obj.get("transportMessageMedia"),
            "transportMicrosoftTeams": obj.get("transportMicrosoftTeams"),
            "transportMobyt": obj.get("transportMobyt"),
            "transportOctopush": obj.get("transportOctopush"),
            "transportOneSignal": obj.get("transportOneSignal"),
            "transportOpsgenie": obj.get("transportOpsgenie"),
            "transportOrangeSms": obj.get("transportOrangeSms"),
            "transportOvhCloud": obj.get("transportOvhCloud"),
            "transportPagerDuty": obj.get("transportPagerDuty"),
            "transportPagerTree": obj.get("transportPagerTree"),
            "transportPlivo": obj.get("transportPlivo"),
            "transportPushbullet": obj.get("transportPushbullet"),
            "transportPushover": obj.get("transportPushover"),
            "transportPushy": obj.get("transportPushy"),
            "transportRingCentral": obj.get("transportRingCentral"),
            "transportRocketChat": obj.get("transportRocketChat"),
            "transportSendberry": obj.get("transportSendberry"),
            "transportSendinblue": obj.get("transportSendinblue"),
            "transportSimpleTextin": obj.get("transportSimpleTextin"),
            "transportSinch": obj.get("transportSinch"),
            "transportSlack": obj.get("transportSlack"),
            "transportSms77": obj.get("transportSms77"),
            "transportSmsBiuras": obj.get("transportSmsBiuras"),
            "transportSmsFactor": obj.get("transportSmsFactor"),
            "transportSmsapi": obj.get("transportSmsapi"),
            "transportSmsc": obj.get("transportSmsc"),
            "transportSmsmode": obj.get("transportSmsmode"),
            "transportSpotHit": obj.get("transportSpotHit"),
            "transportTelegram": obj.get("transportTelegram"),
            "transportTelnyx": obj.get("transportTelnyx"),
            "transportTermii": obj.get("transportTermii"),
            "transportTrello": obj.get("transportTrello"),
            "transportTurboSms": obj.get("transportTurboSms"),
            "transportTwilio": obj.get("transportTwilio"),
            "transportTwitter": obj.get("transportTwitter"),
            "transportVonage": obj.get("transportVonage"),
            "transportWebhook": obj.get("transportWebhook"),
            "transportYunpian": obj.get("transportYunpian"),
            "transportZendesk": obj.get("transportZendesk"),
            "transportZulip": obj.get("transportZulip")
        })
        return _obj


