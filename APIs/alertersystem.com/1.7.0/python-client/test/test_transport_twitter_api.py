# coding: utf-8

"""
    Alerter System API

    <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>

    The version of the OpenAPI document: 1.7.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.transport_twitter_api import TransportTwitterApi


class TestTransportTwitterApi(unittest.TestCase):
    """TransportTwitterApi unit test stubs"""

    def setUp(self) -> None:
        self.api = TransportTwitterApi()

    def tearDown(self) -> None:
        pass

    def test_api_transport_twitter_get_collection(self) -> None:
        """Test case for api_transport_twitter_get_collection

        Retrieves the collection of TransportTwitter resources.
        """
        pass

    def test_api_transport_twitter_id_delete(self) -> None:
        """Test case for api_transport_twitter_id_delete

        Removes the TransportTwitter resource.
        """
        pass

    def test_api_transport_twitter_id_get(self) -> None:
        """Test case for api_transport_twitter_id_get

        Retrieves a TransportTwitter resource.
        """
        pass

    def test_api_transport_twitter_id_patch(self) -> None:
        """Test case for api_transport_twitter_id_patch

        Updates the TransportTwitter resource.
        """
        pass

    def test_api_transport_twitter_id_put(self) -> None:
        """Test case for api_transport_twitter_id_put

        Replaces the TransportTwitter resource.
        """
        pass

    def test_api_transport_twitter_post(self) -> None:
        """Test case for api_transport_twitter_post

        Creates a TransportTwitter resource.
        """
        pass


if __name__ == '__main__':
    unittest.main()
