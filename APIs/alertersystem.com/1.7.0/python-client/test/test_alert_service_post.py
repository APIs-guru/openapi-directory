# coding: utf-8

"""
    Alerter System API

    <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>

    The version of the OpenAPI document: 1.7.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.alert_service_post import AlertServicePost

class TestAlertServicePost(unittest.TestCase):
    """AlertServicePost unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AlertServicePost:
        """Test AlertServicePost
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AlertServicePost`
        """
        model = AlertServicePost()
        if include_optional:
            return AlertServicePost(
                alert_service_name = '',
                alert_service_notes = '',
                alert_service_transport_code = '',
                data_segment_code = '',
                media_objects = [
                    ''
                    ],
                partition = '',
                recipient_email_address = '',
                recipient_phone_number = '',
                transport_alerta = '',
                transport_all_my_sms = '',
                transport_amazon_sns = '',
                transport_bandwidth = '',
                transport_chatwork = '',
                transport_click_send = '',
                transport_clickatell = '',
                transport_contact_everyone = '',
                transport_discord = '',
                transport_email = '',
                transport_engagespot = '',
                transport_esendex = '',
                transport_expo = '',
                transport_firebase = '',
                transport_forty_six_elks = '',
                transport_free_mobile = '',
                transport_freshdesk = '',
                transport_gateway_api = '',
                transport_gitter = '',
                transport_google_chat = '',
                transport_gotify = '',
                transport_help_scout = '',
                transport_infobip = '',
                transport_iqsms = '',
                transport_kaz_info_teh = '',
                transport_light_sms = '',
                transport_line_notify = '',
                transport_linked_in = '',
                transport_mailjet = '',
                transport_mastodon = '',
                transport_mattermost = '',
                transport_mercure = '',
                transport_message_bird = '',
                transport_message_media = '',
                transport_microsoft_teams = '',
                transport_mobyt = '',
                transport_octopush = '',
                transport_one_signal = '',
                transport_opsgenie = '',
                transport_orange_sms = '',
                transport_ovh_cloud = '',
                transport_pager_duty = '',
                transport_pager_tree = '',
                transport_plivo = '',
                transport_pushbullet = '',
                transport_pushover = '',
                transport_pushy = '',
                transport_ring_central = '',
                transport_rocket_chat = '',
                transport_sendberry = '',
                transport_sendinblue = '',
                transport_simple_textin = '',
                transport_sinch = '',
                transport_slack = '',
                transport_sms77 = '',
                transport_sms_biuras = '',
                transport_sms_factor = '',
                transport_smsapi = '',
                transport_smsc = '',
                transport_smsmode = '',
                transport_spot_hit = '',
                transport_telegram = '',
                transport_telnyx = '',
                transport_termii = '',
                transport_trello = '',
                transport_turbo_sms = '',
                transport_twilio = '',
                transport_twitter = '',
                transport_vonage = '',
                transport_webhook = '',
                transport_yunpian = '',
                transport_zendesk = '',
                transport_zulip = ''
            )
        else:
            return AlertServicePost(
                alert_service_name = '',
                alert_service_transport_code = '',
                partition = '',
                recipient_email_address = '',
                recipient_phone_number = '',
        )
        """

    def testAlertServicePost(self):
        """Test AlertServicePost"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
