# coding: utf-8

"""
    Alerter System API

    <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>

    The version of the OpenAPI document: 1.7.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.api_transport_alerta_get_collection200_response import ApiTransportAlertaGetCollection200Response

class TestApiTransportAlertaGetCollection200Response(unittest.TestCase):
    """ApiTransportAlertaGetCollection200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiTransportAlertaGetCollection200Response:
        """Test ApiTransportAlertaGetCollection200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiTransportAlertaGetCollection200Response`
        """
        model = ApiTransportAlertaGetCollection200Response()
        if include_optional:
            return ApiTransportAlertaGetCollection200Response(
                hydramember = [
                    openapi_client.models.transport_alerta/jsonld_get.TransportAlerta.jsonld-get(
                        @context = null, 
                        @id = '', 
                        @type = '', 
                        alerta_api_key = '', 
                        alerta_correlate = '', 
                        alerta_environment = '', 
                        alerta_event = '', 
                        alerta_group = '', 
                        alerta_host = '', 
                        alerta_origin = '', 
                        alerta_resource = '', 
                        alerta_service = '', 
                        alerta_severity = '', 
                        alerta_status = '', 
                        alerta_tags = '', 
                        alerta_type = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        data_segment_code = '', 
                        id = '', 
                        partition = '', 
                        resource_owner = '', 
                        transport_name = '', )
                    ],
                hydrasearch = openapi_client.models.api_alert_log_get_collection_200_response_hydra_search.api_alert_log_get_collection_200_response_hydra_search(
                    @type = '', 
                    hydra:mapping = [
                        openapi_client.models.api_alert_log_get_collection_200_response_hydra_search_hydra_mapping_inner.api_alert_log_get_collection_200_response_hydra_search_hydra_mapping_inner(
                            @type = '', 
                            property = '', 
                            required = True, 
                            variable = '', )
                        ], 
                    hydra:template = '', 
                    hydra:variable_representation = '', ),
                hydratotal_items = 0,
                hydraview = {"@id":"string","hydra:first":"string","hydra:last":"string","hydra:next":"string","hydra:previous":"string","type":"string"}
            )
        else:
            return ApiTransportAlertaGetCollection200Response(
                hydramember = [
                    openapi_client.models.transport_alerta/jsonld_get.TransportAlerta.jsonld-get(
                        @context = null, 
                        @id = '', 
                        @type = '', 
                        alerta_api_key = '', 
                        alerta_correlate = '', 
                        alerta_environment = '', 
                        alerta_event = '', 
                        alerta_group = '', 
                        alerta_host = '', 
                        alerta_origin = '', 
                        alerta_resource = '', 
                        alerta_service = '', 
                        alerta_severity = '', 
                        alerta_status = '', 
                        alerta_tags = '', 
                        alerta_type = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        data_segment_code = '', 
                        id = '', 
                        partition = '', 
                        resource_owner = '', 
                        transport_name = '', )
                    ],
        )
        """

    def testApiTransportAlertaGetCollection200Response(self):
        """Test ApiTransportAlertaGetCollection200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
