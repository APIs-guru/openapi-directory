openapi: 3.0.0
info:
  version: '2017-07-25'
  x-release: v4
  title: AWS Data Exchange
  description: '<p>AWS Data Exchange is a service that makes it easy for AWS customers to exchange data in the cloud. You can use the AWS Data Exchange APIs to create, update, manage, and access file-based data set in the AWS Cloud.</p><p>As a subscriber, you can view and access the data sets that you have an entitlement to through a subscription. You can use the APIS to download or copy your entitled data sets to Amazon S3 for use across a variety of AWS analytics and machine learning services.</p><p>As a provider, you can create and manage your data sets that you would like to publish to a product. Being able to package and provide your data sets into products requires a few steps to determine eligibility. For more information, visit the AWS Data Exchange User Guide.</p><p>A data set is a collection of data that can be changed or updated over time. Data sets can be updated using revisions, which represent a new version or incremental change to a data set.  A revision contains one or more assets. An asset in AWS Data Exchange is a piece of data that can be stored as an Amazon S3 object. The asset can be a structured data file, an image file, or some other data file. Jobs are asynchronous import or export operations used to create or copy assets.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: dataexchange
  x-aws-signingName: dataexchange
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/dataexchange-2017-07-25.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/dataexchange/'
servers:
  - url: 'http://dataexchange.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS Data Exchange multi-region endpoint
  - url: 'https://dataexchange.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS Data Exchange multi-region endpoint
  - url: 'http://dataexchange.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Data Exchange endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://dataexchange.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Data Exchange endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  '/v1/jobs/{JobId}':
    delete:
      operationId: CancelJob
      description: This operation cancels a job. Jobs can be cancelled only when they are in the WAITING state.
      responses:
        '204':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: JobId
          in: path
          required: true
          description: The unique identifier for a job.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetJob
      description: This operation returns information about a job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJobResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: JobId
          in: path
          required: true
          description: The unique identifier for a job.
          schema:
            type: string
    patch:
      operationId: StartJob
      description: This operation starts a job.
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartJobResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: JobId
          in: path
          required: true
          description: The unique identifier for a job.
          schema:
            type: string
  /v1/data-sets:
    post:
      operationId: CreateDataSet
      description: This operation creates a data set.
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDataSetResponse'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ServiceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLimitExceededException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - AssetType
                - Description
                - Name
              properties:
                AssetType:
                  description: 'The type of file your data is stored in. Currently, the supported asset type is S3_SNAPSHOT.'
                  type: string
                  enum:
                    - S3_SNAPSHOT
                Description:
                  description: A description of a resource.
                  type: string
                Name:
                  description: The name of the model.
                  type: string
                Tags:
                  description: 'A data set tag is an optional label that you can assign to a data set when you create it. Each tag consists of a key and an optional value, both of which you define. When you use tagging, you can also use tag-based access control in IAM policies to control access to these data sets and revisions.'
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/__string'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListDataSets
      description: 'This operation lists your data sets. When listing by origin OWNED, results are sorted by CreatedAt in descending order. When listing by origin ENTITLED, there is no order and the maxResults parameter is ignored.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDataSetsResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results returned by a single call.
          schema:
            type: integer
            minimum: 1
            maximum: 25
        - name: nextToken
          in: query
          required: false
          description: The token value retrieved from a previous call to access the next page of results.
          schema:
            type: string
        - name: origin
          in: query
          required: false
          description: A property that defines the data set as OWNED by the account (for providers) or ENTITLED to the account (for subscribers).
          schema:
            type: string
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /v1/jobs:
    post:
      operationId: CreateJob
      description: This operation creates a job.
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateJobResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Details
                - Type
              properties:
                Details:
                  description: The details for the request.
                  type: object
                  properties:
                    ExportAssetToSignedUrl:
                      $ref: '#/components/schemas/ExportAssetToSignedUrlRequestDetails'
                      description: Details about the export to signed URL request.
                    ExportAssetsToS3:
                      $ref: '#/components/schemas/ExportAssetsToS3RequestDetails'
                      description: Details about the export to Amazon S3 request.
                    ExportRevisionsToS3:
                      $ref: '#/components/schemas/ExportRevisionsToS3RequestDetails'
                      description: Details about the export to Amazon S3 request.
                    ImportAssetFromSignedUrl:
                      $ref: '#/components/schemas/ImportAssetFromSignedUrlRequestDetails'
                      description: Details about the import from signed URL request.
                    ImportAssetsFromS3:
                      $ref: '#/components/schemas/ImportAssetsFromS3RequestDetails'
                      description: Details about the import from Amazon S3 request.
                Type:
                  description: The type of job to be created.
                  type: string
                  enum:
                    - IMPORT_ASSETS_FROM_S3
                    - IMPORT_ASSET_FROM_SIGNED_URL
                    - EXPORT_ASSETS_TO_S3
                    - EXPORT_ASSET_TO_SIGNED_URL
                    - EXPORT_REVISIONS_TO_S3
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListJobs
      description: This operation lists your jobs sorted by CreatedAt in descending order.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobsResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: dataSetId
          in: query
          required: false
          description: The unique identifier for a data set.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results returned by a single call.
          schema:
            type: integer
            minimum: 1
            maximum: 25
        - name: nextToken
          in: query
          required: false
          description: The token value retrieved from a previous call to access the next page of results.
          schema:
            type: string
        - name: revisionId
          in: query
          required: false
          description: The unique identifier for a revision.
          schema:
            type: string
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  '/v1/data-sets/{DataSetId}/revisions':
    post:
      operationId: CreateRevision
      description: This operation creates a revision for a data set.
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRevisionResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: DataSetId
          in: path
          required: true
          description: The unique identifier for a data set.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Comment:
                  description: An optional comment about the revision.
                  type: string
                  minLength: 0
                  maxLength: 16384
                Tags:
                  description: 'A revision tag is an optional label that you can assign to a revision when you create it. Each tag consists of a key and an optional value, both of which you define. When you use tagging, you can also use tag-based access control in IAM policies to control access to these data sets and revisions.'
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/__string'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListDataSetRevisions
      description: This operation lists a data set's revisions sorted by CreatedAt in descending order.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDataSetRevisionsResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: DataSetId
          in: path
          required: true
          description: The unique identifier for a data set.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results returned by a single call.
          schema:
            type: integer
            minimum: 1
            maximum: 25
        - name: nextToken
          in: query
          required: false
          description: The token value retrieved from a previous call to access the next page of results.
          schema:
            type: string
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  '/v1/data-sets/{DataSetId}/revisions/{RevisionId}/assets/{AssetId}':
    delete:
      operationId: DeleteAsset
      description: This operation deletes an asset.
      responses:
        '204':
          description: Success
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: AssetId
          in: path
          required: true
          description: The unique identifier for an asset.
          schema:
            type: string
        - name: DataSetId
          in: path
          required: true
          description: The unique identifier for a data set.
          schema:
            type: string
        - name: RevisionId
          in: path
          required: true
          description: The unique identifier for a revision.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetAsset
      description: This operation returns information about an asset.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAssetResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: AssetId
          in: path
          required: true
          description: The unique identifier for an asset.
          schema:
            type: string
        - name: DataSetId
          in: path
          required: true
          description: The unique identifier for a data set.
          schema:
            type: string
        - name: RevisionId
          in: path
          required: true
          description: The unique identifier for a revision.
          schema:
            type: string
    patch:
      operationId: UpdateAsset
      description: This operation updates an asset.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAssetResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: AssetId
          in: path
          required: true
          description: The unique identifier for an asset.
          schema:
            type: string
        - name: DataSetId
          in: path
          required: true
          description: The unique identifier for a data set.
          schema:
            type: string
        - name: RevisionId
          in: path
          required: true
          description: The unique identifier for a revision.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
              properties:
                Name:
                  description: 'The name of the asset. When importing from Amazon S3, the S3 object key is used as the asset name. When exporting to Amazon S3, the asset name is used as default target S3 object key.'
                  type: string
  '/v1/data-sets/{DataSetId}':
    delete:
      operationId: DeleteDataSet
      description: This operation deletes a data set.
      responses:
        '204':
          description: Success
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: DataSetId
          in: path
          required: true
          description: The unique identifier for a data set.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetDataSet
      description: This operation returns information about a data set.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDataSetResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: DataSetId
          in: path
          required: true
          description: The unique identifier for a data set.
          schema:
            type: string
    patch:
      operationId: UpdateDataSet
      description: This operation updates a data set.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDataSetResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: DataSetId
          in: path
          required: true
          description: The unique identifier for a data set.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  description: A description of a resource.
                  type: string
                Name:
                  description: The name of the model.
                  type: string
  '/v1/data-sets/{DataSetId}/revisions/{RevisionId}':
    delete:
      operationId: DeleteRevision
      description: This operation deletes a revision.
      responses:
        '204':
          description: Success
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: DataSetId
          in: path
          required: true
          description: The unique identifier for a data set.
          schema:
            type: string
        - name: RevisionId
          in: path
          required: true
          description: The unique identifier for a revision.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetRevision
      description: This operation returns information about a revision.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRevisionResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: DataSetId
          in: path
          required: true
          description: The unique identifier for a data set.
          schema:
            type: string
        - name: RevisionId
          in: path
          required: true
          description: The unique identifier for a revision.
          schema:
            type: string
    patch:
      operationId: UpdateRevision
      description: This operation updates a revision.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRevisionResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: DataSetId
          in: path
          required: true
          description: The unique identifier for a data set.
          schema:
            type: string
        - name: RevisionId
          in: path
          required: true
          description: The unique identifier for a revision.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Comment:
                  description: An optional comment about the revision.
                  type: string
                  minLength: 0
                  maxLength: 16384
                Finalized:
                  description: 'Finalizing a revision tells AWS Data Exchange that your changes to the assets in the revision are complete. After it''s in this read-only state, you can publish the revision to your products.'
                  type: boolean
  '/v1/data-sets/{DataSetId}/revisions/{RevisionId}/assets':
    get:
      operationId: ListRevisionAssets
      description: This operation lists a revision's assets sorted alphabetically in descending order.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRevisionAssetsResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: DataSetId
          in: path
          required: true
          description: The unique identifier for a data set.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results returned by a single call.
          schema:
            type: integer
            minimum: 1
            maximum: 25
        - name: nextToken
          in: query
          required: false
          description: The token value retrieved from a previous call to access the next page of results.
          schema:
            type: string
        - name: RevisionId
          in: path
          required: true
          description: The unique identifier for a revision.
          schema:
            type: string
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{resource-arn}':
    get:
      operationId: ListTagsForResource
      description: This operation lists the tags on the resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
      parameters:
        - name: resource-arn
          in: path
          required: true
          description: An Amazon Resource Name (ARN) that uniquely identifies an AWS resource.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: TagResource
      description: This operation tags a resource.
      responses:
        '204':
          description: Success
      parameters:
        - name: resource-arn
          in: path
          required: true
          description: An Amazon Resource Name (ARN) that uniquely identifies an AWS resource.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tags
              properties:
                tags:
                  description: A label that consists of a customer-defined key and an optional value.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/__string'
  '/tags/{resource-arn}#tagKeys':
    delete:
      operationId: UntagResource
      description: This operation removes one or more tags from a resource.
      responses:
        '204':
          description: Success
      parameters:
        - name: resource-arn
          in: path
          required: true
          description: An Amazon Resource Name (ARN) that uniquely identifies an AWS resource.
          schema:
            type: string
        - name: tagKeys
          in: query
          required: true
          description: The key tags.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/__string'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    ResourceNotFoundException: {}
    ThrottlingException: {}
    ValidationException: {}
    InternalServerException: {}
    ConflictException: {}
    CreateDataSetResponse:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The ARN for the data set.
        AssetType:
          $ref: '#/components/schemas/AssetType'
          description: 'The type of file your data is stored in. Currently, the supported asset type is S3_SNAPSHOT.'
        CreatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time that the data set was created, in ISO 8601 format.'
        Description:
          $ref: '#/components/schemas/Description'
          description: The description for the data set.
        Id:
          $ref: '#/components/schemas/Id'
          description: The unique identifier for the data set.
        Name:
          $ref: '#/components/schemas/Name'
          description: The name of the data set.
        Origin:
          $ref: '#/components/schemas/Origin'
          description: A property that defines the data set as OWNED by the account (for providers) or ENTITLED to the account (for subscribers).
        OriginDetails:
          $ref: '#/components/schemas/OriginDetails'
          description: 'If the origin of this data set is ENTITLED, includes the details for the product on AWS Marketplace.'
        SourceId:
          $ref: '#/components/schemas/Id'
          description: The data set ID of the owned data set corresponding to the entitled data set being viewed. This parameter is returned when a data set owner is viewing the entitled copy of its owned data set.
        Tags:
          $ref: '#/components/schemas/MapOf__string'
          description: The tags for the data set.
        UpdatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time that the data set was last updated, in ISO 8601 format.'
    __string:
      type: string
    ServiceLimitExceededException: {}
    AccessDeniedException: {}
    CreateJobResponse:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The ARN for the job.
        CreatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time that the job was created, in ISO 8601 format.'
        Details:
          $ref: '#/components/schemas/ResponseDetails'
          description: Details about the job.
        Errors:
          $ref: '#/components/schemas/ListOfJobError'
          description: The errors associated with jobs.
        Id:
          $ref: '#/components/schemas/Id'
          description: The unique identifier for the job.
        State:
          $ref: '#/components/schemas/State'
          description: The state of the job.
        Type:
          $ref: '#/components/schemas/Type'
          description: The job type.
        UpdatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time that the job was last updated, in ISO 8601 format.'
    ExportAssetToSignedUrlRequestDetails:
      type: object
      required:
        - DataSetId
        - AssetId
        - RevisionId
      properties:
        AssetId:
          $ref: '#/components/schemas/Id'
          description: The unique identifier for the asset that is exported to a signed URL.
        DataSetId:
          $ref: '#/components/schemas/Id'
          description: The unique identifier for the data set associated with this export job.
        RevisionId:
          $ref: '#/components/schemas/Id'
          description: The unique identifier for the revision associated with this export request.
      description: Details of the operation to be performed by the job.
    ExportAssetsToS3RequestDetails:
      type: object
      required:
        - AssetDestinations
        - DataSetId
        - RevisionId
      properties:
        AssetDestinations:
          $ref: '#/components/schemas/ListOfAssetDestinationEntry'
          description: The destination for the asset.
        DataSetId:
          $ref: '#/components/schemas/Id'
          description: The unique identifier for the data set associated with this export job.
        Encryption:
          $ref: '#/components/schemas/ExportServerSideEncryption'
          description: Encryption configuration for the export job.
        RevisionId:
          $ref: '#/components/schemas/Id'
          description: The unique identifier for the revision associated with this export request.
      description: Details of the operation to be performed by the job.
    ExportRevisionsToS3RequestDetails:
      type: object
      required:
        - RevisionDestinations
        - DataSetId
      properties:
        DataSetId:
          $ref: '#/components/schemas/Id'
          description: The unique identifier for the data set associated with this export job.
        Encryption:
          $ref: '#/components/schemas/ExportServerSideEncryption'
          description: Encryption configuration for the export job.
        RevisionDestinations:
          $ref: '#/components/schemas/ListOfRevisionDestinationEntry'
          description: The destination for the revision.
      description: Details of the operation to be performed by the job.
    ImportAssetFromSignedUrlRequestDetails:
      type: object
      required:
        - DataSetId
        - Md5Hash
        - RevisionId
        - AssetName
      properties:
        AssetName:
          $ref: '#/components/schemas/AssetName'
          description: 'The name of the asset. When importing from Amazon S3, the S3 object key is used as the asset name.'
        DataSetId:
          $ref: '#/components/schemas/Id'
          description: The unique identifier for the data set associated with this import job.
        Md5Hash:
          $ref: '#/components/schemas/__stringMin24Max24PatternAZaZ094AZaZ092AZaZ093'
          description: 'The Base64-encoded Md5 hash for the asset, used to ensure the integrity of the file at that location.'
        RevisionId:
          $ref: '#/components/schemas/Id'
          description: The unique identifier for the revision associated with this import request.
      description: Details of the operation to be performed by the job.
    ImportAssetsFromS3RequestDetails:
      type: object
      required:
        - DataSetId
        - AssetSources
        - RevisionId
      properties:
        AssetSources:
          $ref: '#/components/schemas/ListOfAssetSourceEntry'
          description: Is a list of S3 bucket and object key pairs.
        DataSetId:
          $ref: '#/components/schemas/Id'
          description: The unique identifier for the data set associated with this import job.
        RevisionId:
          $ref: '#/components/schemas/Id'
          description: The unique identifier for the revision associated with this import request.
      description: Details of the operation to be performed by the job.
    CreateRevisionResponse:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The ARN for the revision
        Comment:
          $ref: '#/components/schemas/__stringMin0Max16384'
          description: An optional comment about the revision.
        CreatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time that the revision was created, in ISO 8601 format.'
        DataSetId:
          $ref: '#/components/schemas/Id'
          description: The unique identifier for the data set associated with this revision.
        Finalized:
          $ref: '#/components/schemas/__boolean'
          description: '<p>To publish a revision to a data set in a product, the revision must first be finalized. Finalizing a revision tells AWS Data Exchange that your changes to the assets in the revision are complete. After it''s in this read-only state, you can publish the revision to your products.</p> <p>Finalized revisions can be published through the AWS Data Exchange console or the AWS Marketplace Catalog API, using the StartChangeSet AWS Marketplace Catalog API action. When using the API, revisions are uniquely identified by their ARN.</p>'
        Id:
          $ref: '#/components/schemas/Id'
          description: The unique identifier for the revision.
        SourceId:
          $ref: '#/components/schemas/Id'
          description: The revision ID of the owned revision corresponding to the entitled revision being viewed. This parameter is returned when a revision owner is viewing the entitled copy of its owned revision.
        Tags:
          $ref: '#/components/schemas/MapOf__string'
          description: The tags for the revision.
        UpdatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time that the revision was last updated, in ISO 8601 format.'
    GetAssetResponse:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The ARN for the asset.
        AssetDetails:
          $ref: '#/components/schemas/AssetDetails'
          description: 'Information about the asset, including its size.'
        AssetType:
          $ref: '#/components/schemas/AssetType'
          description: 'The type of file your data is stored in. Currently, the supported asset type is S3_SNAPSHOT.'
        CreatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time that the asset was created, in ISO 8601 format.'
        DataSetId:
          $ref: '#/components/schemas/Id'
          description: The unique identifier for the data set associated with this asset.
        Id:
          $ref: '#/components/schemas/Id'
          description: The unique identifier for the asset.
        Name:
          $ref: '#/components/schemas/AssetName'
          description: 'The name of the asset When importing from Amazon S3, the S3 object key is used as the asset name. When exporting to Amazon S3, the asset name is used as default target S3 object key.'
        RevisionId:
          $ref: '#/components/schemas/Id'
          description: The unique identifier for the revision associated with this asset.
        SourceId:
          $ref: '#/components/schemas/Id'
          description: The asset ID of the owned asset corresponding to the entitled asset being viewed. This parameter is returned when an asset owner is viewing the entitled copy of its owned asset.
        UpdatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time that the asset was last updated, in ISO 8601 format.'
    GetDataSetResponse:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The ARN for the data set.
        AssetType:
          $ref: '#/components/schemas/AssetType'
          description: 'The type of file your data is stored in. Currently, the supported asset type is S3_SNAPSHOT.'
        CreatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time that the data set was created, in ISO 8601 format.'
        Description:
          $ref: '#/components/schemas/Description'
          description: The description for the data set.
        Id:
          $ref: '#/components/schemas/Id'
          description: The unique identifier for the data set.
        Name:
          $ref: '#/components/schemas/Name'
          description: The name of the data set.
        Origin:
          $ref: '#/components/schemas/Origin'
          description: A property that defines the data set as OWNED by the account (for providers) or ENTITLED to the account (for subscribers).
        OriginDetails:
          $ref: '#/components/schemas/OriginDetails'
          description: 'If the origin of this data set is ENTITLED, includes the details for the product on AWS Marketplace.'
        SourceId:
          $ref: '#/components/schemas/Id'
          description: The data set ID of the owned data set corresponding to the entitled data set being viewed. This parameter is returned when a data set owner is viewing the entitled copy of its owned data set.
        Tags:
          $ref: '#/components/schemas/MapOf__string'
          description: The tags for the data set.
        UpdatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time that the data set was last updated, in ISO 8601 format.'
    GetJobResponse:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The ARN for the job.
        CreatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time that the job was created, in ISO 8601 format.'
        Details:
          $ref: '#/components/schemas/ResponseDetails'
          description: Details about the job.
        Errors:
          $ref: '#/components/schemas/ListOfJobError'
          description: The errors associated with jobs.
        Id:
          $ref: '#/components/schemas/Id'
          description: The unique identifier for the job.
        State:
          $ref: '#/components/schemas/State'
          description: The state of the job.
        Type:
          $ref: '#/components/schemas/Type'
          description: The job type.
        UpdatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time that the job was last updated, in ISO 8601 format.'
    GetRevisionResponse:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The ARN for the revision
        Comment:
          $ref: '#/components/schemas/__stringMin0Max16384'
          description: An optional comment about the revision.
        CreatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time that the revision was created, in ISO 8601 format.'
        DataSetId:
          $ref: '#/components/schemas/Id'
          description: The unique identifier for the data set associated with this revision.
        Finalized:
          $ref: '#/components/schemas/__boolean'
          description: '<p>To publish a revision to a data set in a product, the revision must first be finalized. Finalizing a revision tells AWS Data Exchange that your changes to the assets in the revision are complete. After it''s in this read-only state, you can publish the revision to your products.</p> <p>Finalized revisions can be published through the AWS Data Exchange console or the AWS Marketplace Catalog API, using the StartChangeSet AWS Marketplace Catalog API action. When using the API, revisions are uniquely identified by their ARN.</p>'
        Id:
          $ref: '#/components/schemas/Id'
          description: The unique identifier for the revision.
        SourceId:
          $ref: '#/components/schemas/Id'
          description: The revision ID of the owned revision corresponding to the entitled revision being viewed. This parameter is returned when a revision owner is viewing the entitled copy of its owned revision.
        Tags:
          $ref: '#/components/schemas/MapOf__string'
          description: The tags for the revision.
        UpdatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time that the revision was last updated, in ISO 8601 format.'
    ListDataSetRevisionsResponse:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token value retrieved from a previous call to access the next page of results.
        Revisions:
          $ref: '#/components/schemas/ListOfRevisionEntry'
          description: The asset objects listed by the request.
    ListDataSetsResponse:
      type: object
      properties:
        DataSets:
          $ref: '#/components/schemas/ListOfDataSetEntry'
          description: The data set objects listed by the request.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token value retrieved from a previous call to access the next page of results.
    ListJobsResponse:
      type: object
      properties:
        Jobs:
          $ref: '#/components/schemas/ListOfJobEntry'
          description: The jobs listed by the request.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token value retrieved from a previous call to access the next page of results.
    ListRevisionAssetsResponse:
      type: object
      properties:
        Assets:
          $ref: '#/components/schemas/ListOfAssetEntry'
          description: The asset objects listed by the request.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token value retrieved from a previous call to access the next page of results.
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          allOf:
            - $ref: '#/components/schemas/MapOf__string'
            - xml:
                name: tags
              description: A label that consists of a customer-defined key and an optional value.
    StartJobResponse:
      type: object
      properties: {}
    UpdateAssetResponse:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The ARN for the asset.
        AssetDetails:
          $ref: '#/components/schemas/AssetDetails'
          description: 'Information about the asset, including its size.'
        AssetType:
          $ref: '#/components/schemas/AssetType'
          description: 'The type of file your data is stored in. Currently, the supported asset type is S3_SNAPSHOT.'
        CreatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time that the asset was created, in ISO 8601 format.'
        DataSetId:
          $ref: '#/components/schemas/Id'
          description: The unique identifier for the data set associated with this asset.
        Id:
          $ref: '#/components/schemas/Id'
          description: The unique identifier for the asset.
        Name:
          $ref: '#/components/schemas/AssetName'
          description: 'The name of the asset When importing from Amazon S3, the S3 object key is used as the asset name. When exporting to Amazon S3, the asset name is used as default target S3 object key.'
        RevisionId:
          $ref: '#/components/schemas/Id'
          description: The unique identifier for the revision associated with this asset.
        SourceId:
          $ref: '#/components/schemas/Id'
          description: The asset ID of the owned asset corresponding to the entitled asset being viewed. This parameter is returned when an asset owner is viewing the entitled copy of its owned asset.
        UpdatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time that the asset was last updated, in ISO 8601 format.'
    UpdateDataSetResponse:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The ARN for the data set.
        AssetType:
          $ref: '#/components/schemas/AssetType'
          description: 'The type of file your data is stored in. Currently, the supported asset type is S3_SNAPSHOT.'
        CreatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time that the data set was created, in ISO 8601 format.'
        Description:
          $ref: '#/components/schemas/Description'
          description: The description for the data set.
        Id:
          $ref: '#/components/schemas/Id'
          description: The unique identifier for the data set.
        Name:
          $ref: '#/components/schemas/Name'
          description: The name of the data set.
        Origin:
          $ref: '#/components/schemas/Origin'
          description: A property that defines the data set as OWNED by the account (for providers) or ENTITLED to the account (for subscribers).
        OriginDetails:
          $ref: '#/components/schemas/OriginDetails'
          description: 'If the origin of this data set is ENTITLED, includes the details for the product on AWS Marketplace.'
        SourceId:
          $ref: '#/components/schemas/Id'
          description: The data set ID of the owned data set corresponding to the entitled data set being viewed. This parameter is returned when a data set owner is viewing the entitled copy of its owned data set.
        UpdatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time that the data set was last updated, in ISO 8601 format.'
    UpdateRevisionResponse:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The ARN for the revision.
        Comment:
          $ref: '#/components/schemas/__stringMin0Max16384'
          description: An optional comment about the revision.
        CreatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time that the revision was created, in ISO 8601 format.'
        DataSetId:
          $ref: '#/components/schemas/Id'
          description: The unique identifier for the data set associated with this revision.
        Finalized:
          $ref: '#/components/schemas/__boolean'
          description: '<p>To publish a revision to a data set in a product, the revision must first be finalized. Finalizing a revision tells AWS Data Exchange that changes to the assets in the revision are complete. After it''s in this read-only state, you can publish the revision to your products.</p> <p>Finalized revisions can be published through the AWS Data Exchange console or the AWS Marketplace Catalog API, using the StartChangeSet AWS Marketplace Catalog API action. When using the API, revisions are uniquely identified by their ARN.</p>'
        Id:
          $ref: '#/components/schemas/Id'
          description: The unique identifier for the revision.
        SourceId:
          $ref: '#/components/schemas/Id'
          description: The revision ID of the owned revision corresponding to the entitled revision being viewed. This parameter is returned when a revision owner is viewing the entitled copy of its owned revision.
        UpdatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time that the revision was last updated, in ISO 8601 format.'
    Arn:
      type: string
      description: An Amazon Resource Name (ARN) that uniquely identifies an AWS resource.
    Id:
      type: string
      description: A unique identifier.
    AssetDestinationEntry:
      type: object
      required:
        - Bucket
        - AssetId
      properties:
        AssetId:
          $ref: '#/components/schemas/Id'
          description: The unique identifier for the asset.
        Bucket:
          $ref: '#/components/schemas/__string'
          description: The S3 bucket that is the destination for the asset.
        Key:
          $ref: '#/components/schemas/__string'
          description: The name of the object in Amazon S3 for the asset.
      description: The destination for the asset.
    S3SnapshotAsset:
      type: object
      required:
        - Size
      properties:
        Size:
          $ref: '#/components/schemas/__doubleMin0'
          description: The size of the S3 object that is the object.
      description: The S3 object that is the asset.
    AssetDetails:
      type: object
      properties:
        S3SnapshotAsset:
          $ref: '#/components/schemas/S3SnapshotAsset'
    AssetType:
      type: string
      enum:
        - S3_SNAPSHOT
      description: 'The type of file your data is stored in. Currently, the supported asset type is S3_SNAPSHOT.'
    Timestamp:
      type: string
      description: Dates and times in AWS Data Exchange are recorded in ISO 8601 format.
      format: date-time
    AssetName:
      type: string
      description: 'The name of the asset. When importing from Amazon S3, the S3 object key is used as the asset name. When exporting to Amazon S3, the asset name is used as default target S3 object key.'
    AssetEntry:
      type: object
      required:
        - AssetType
        - CreatedAt
        - DataSetId
        - Id
        - Arn
        - AssetDetails
        - UpdatedAt
        - RevisionId
        - Name
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The ARN for the asset.
        AssetDetails:
          $ref: '#/components/schemas/AssetDetails'
          description: 'Information about the asset, including its size.'
        AssetType:
          $ref: '#/components/schemas/AssetType'
          description: 'The type of file your data is stored in. Currently, the supported asset type is S3_SNAPSHOT.'
        CreatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time that the asset was created, in ISO 8601 format.'
        DataSetId:
          $ref: '#/components/schemas/Id'
          description: The unique identifier for the data set associated with this asset.
        Id:
          $ref: '#/components/schemas/Id'
          description: The unique identifier for the asset.
        Name:
          $ref: '#/components/schemas/AssetName'
          description: 'The name of the asset. When importing from Amazon S3, the S3 object key is used as the asset name. When exporting to Amazon S3, the asset name is used as default target S3 object key.'
        RevisionId:
          $ref: '#/components/schemas/Id'
          description: The unique identifier for the revision associated with this asset.
        SourceId:
          $ref: '#/components/schemas/Id'
          description: The asset ID of the owned asset corresponding to the entitled asset being viewed. This parameter is returned when an asset owner is viewing the entitled copy of its owned asset.
        UpdatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time that the asset was last updated, in ISO 8601 format.'
      description: 'An asset in AWS Data Exchange is a piece of data that can be stored as an S3 object. The asset can be a structured data file, an image file, or some other data file. When you create an import job for your files, you create an asset in AWS Data Exchange for each of those files.'
    AssetSourceEntry:
      type: object
      required:
        - Bucket
        - Key
      properties:
        Bucket:
          $ref: '#/components/schemas/__string'
          description: The S3 bucket that's part of the source of the asset.
        Key:
          $ref: '#/components/schemas/__string'
          description: The name of the object in Amazon S3 for the asset.
      description: The source of the assets.
    CancelJobRequest:
      type: object
      title: CancelJobRequest
      properties: {}
    Code:
      type: string
      enum:
        - ACCESS_DENIED_EXCEPTION
        - INTERNAL_SERVER_EXCEPTION
        - MALWARE_DETECTED
        - RESOURCE_NOT_FOUND_EXCEPTION
        - SERVICE_QUOTA_EXCEEDED_EXCEPTION
        - VALIDATION_EXCEPTION
        - MALWARE_SCAN_ENCRYPTED_FILE
    Description:
      type: string
      description: A description of a resource.
    Name:
      type: string
      description: The name of the model.
    MapOf__string:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/__string'
    CreateDataSetRequest:
      type: object
      required:
        - AssetType
        - Description
        - Name
      title: CreateDataSetRequest
      properties:
        AssetType:
          $ref: '#/components/schemas/AssetType'
          description: 'The type of file your data is stored in. Currently, the supported asset type is S3_SNAPSHOT.'
        Description:
          $ref: '#/components/schemas/Description'
          description: 'A description for the data set. This value can be up to 16,348 characters long.'
        Name:
          $ref: '#/components/schemas/Name'
          description: The name of the data set.
        Tags:
          $ref: '#/components/schemas/MapOf__string'
          description: 'A data set tag is an optional label that you can assign to a data set when you create it. Each tag consists of a key and an optional value, both of which you define. When you use tagging, you can also use tag-based access control in IAM policies to control access to these data sets and revisions.'
      description: The request body for CreateDataSet.
    Origin:
      type: string
      enum:
        - OWNED
        - ENTITLED
      description: 'A property that defines the data set as OWNED by the account (for providers) or ENTITLED to the account (for subscribers). When an owned data set is published in a product, AWS Data Exchange creates a copy of the data set. Subscribers can access that copy of the data set as an entitled data set.'
    OriginDetails:
      type: object
      required:
        - ProductId
      properties:
        ProductId:
          $ref: '#/components/schemas/__string'
    RequestDetails:
      type: object
      properties:
        ExportAssetToSignedUrl:
          $ref: '#/components/schemas/ExportAssetToSignedUrlRequestDetails'
          description: Details about the export to signed URL request.
        ExportAssetsToS3:
          $ref: '#/components/schemas/ExportAssetsToS3RequestDetails'
          description: Details about the export to Amazon S3 request.
        ExportRevisionsToS3:
          $ref: '#/components/schemas/ExportRevisionsToS3RequestDetails'
          description: Details about the export to Amazon S3 request.
        ImportAssetFromSignedUrl:
          $ref: '#/components/schemas/ImportAssetFromSignedUrlRequestDetails'
          description: Details about the import from signed URL request.
        ImportAssetsFromS3:
          $ref: '#/components/schemas/ImportAssetsFromS3RequestDetails'
          description: Details about the import from Amazon S3 request.
      description: The details for the request.
    Type:
      type: string
      enum:
        - IMPORT_ASSETS_FROM_S3
        - IMPORT_ASSET_FROM_SIGNED_URL
        - EXPORT_ASSETS_TO_S3
        - EXPORT_ASSET_TO_SIGNED_URL
        - EXPORT_REVISIONS_TO_S3
    CreateJobRequest:
      type: object
      required:
        - Type
        - Details
      title: CreateJobRequest
      properties:
        Details:
          $ref: '#/components/schemas/RequestDetails'
          description: The details for the CreateJob request.
        Type:
          $ref: '#/components/schemas/Type'
          description: The type of job to be created.
      description: The request body for CreateJob.
    ResponseDetails:
      type: object
      properties:
        ExportAssetToSignedUrl:
          $ref: '#/components/schemas/ExportAssetToSignedUrlResponseDetails'
          description: Details for the export to signed URL response.
        ExportAssetsToS3:
          $ref: '#/components/schemas/ExportAssetsToS3ResponseDetails'
          description: Details for the export to Amazon S3 response.
        ExportRevisionsToS3:
          $ref: '#/components/schemas/ExportRevisionsToS3ResponseDetails'
          description: Details for the export revisions to Amazon S3 response.
        ImportAssetFromSignedUrl:
          $ref: '#/components/schemas/ImportAssetFromSignedUrlResponseDetails'
          description: Details for the import from signed URL response.
        ImportAssetsFromS3:
          $ref: '#/components/schemas/ImportAssetsFromS3ResponseDetails'
          description: Details for the import from Amazon S3 response.
      description: Details for the response.
    ListOfJobError:
      type: array
      items:
        $ref: '#/components/schemas/JobError'
    State:
      type: string
      enum:
        - WAITING
        - IN_PROGRESS
        - ERROR
        - COMPLETED
        - CANCELLED
        - TIMED_OUT
    __stringMin0Max16384:
      type: string
      minLength: 0
      maxLength: 16384
    CreateRevisionRequest:
      type: object
      title: CreateRevisionRequest
      properties:
        Comment:
          $ref: '#/components/schemas/__stringMin0Max16384'
          description: An optional comment about the revision.
        Tags:
          $ref: '#/components/schemas/MapOf__string'
          description: 'A revision tag is an optional label that you can assign to a revision when you create it. Each tag consists of a key and an optional value, both of which you define. When you use tagging, you can also use tag-based access control in IAM policies to control access to these data sets and revisions.'
      description: The request body for CreateRevision.
    __boolean:
      type: boolean
    DataSetEntry:
      type: object
      required:
        - Origin
        - AssetType
        - Description
        - CreatedAt
        - Id
        - Arn
        - UpdatedAt
        - Name
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The ARN for the data set.
        AssetType:
          $ref: '#/components/schemas/AssetType'
          description: 'The type of file your data is stored in. Currently, the supported asset type is S3_SNAPSHOT.'
        CreatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time that the data set was created, in ISO 8601 format.'
        Description:
          $ref: '#/components/schemas/Description'
          description: The description for the data set.
        Id:
          $ref: '#/components/schemas/Id'
          description: The unique identifier for the data set.
        Name:
          $ref: '#/components/schemas/Name'
          description: The name of the data set.
        Origin:
          $ref: '#/components/schemas/Origin'
          description: A property that defines the data set as OWNED by the account (for providers) or ENTITLED to the account (for subscribers).
        OriginDetails:
          $ref: '#/components/schemas/OriginDetails'
          description: 'If the origin of this data set is ENTITLED, includes the details for the product on AWS Marketplace.'
        SourceId:
          $ref: '#/components/schemas/Id'
          description: The data set ID of the owned data set corresponding to the entitled data set being viewed. This parameter is returned when a data set owner is viewing the entitled copy of its owned data set.
        UpdatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time that the data set was last updated, in ISO 8601 format.'
      description: A data set is an AWS resource with one or more revisions.
    DeleteAssetRequest:
      type: object
      title: DeleteAssetRequest
      properties: {}
    DeleteDataSetRequest:
      type: object
      title: DeleteDataSetRequest
      properties: {}
    DeleteRevisionRequest:
      type: object
      title: DeleteRevisionRequest
      properties: {}
    ImportAssetFromSignedUrlJobErrorDetails:
      type: object
      required:
        - AssetName
      properties:
        AssetName:
          $ref: '#/components/schemas/AssetName'
    ListOfAssetSourceEntry:
      type: array
      description: The list of sources for the assets.
      items:
        $ref: '#/components/schemas/AssetSourceEntry'
    Details:
      type: object
      properties:
        ImportAssetFromSignedUrlJobErrorDetails:
          $ref: '#/components/schemas/ImportAssetFromSignedUrlJobErrorDetails'
        ImportAssetsFromS3JobErrorDetails:
          $ref: '#/components/schemas/ListOfAssetSourceEntry'
    ExportAssetToSignedUrlResponseDetails:
      type: object
      required:
        - DataSetId
        - AssetId
        - RevisionId
      properties:
        AssetId:
          $ref: '#/components/schemas/Id'
          description: The unique identifier for the asset associated with this export job.
        DataSetId:
          $ref: '#/components/schemas/Id'
          description: The unique identifier for the data set associated with this export job.
        RevisionId:
          $ref: '#/components/schemas/Id'
          description: The unique identifier for the revision associated with this export response.
        SignedUrl:
          $ref: '#/components/schemas/__string'
          description: The signed URL for the export request.
        SignedUrlExpiresAt:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time that the signed URL expires, in ISO 8601 format.'
      description: The details of the export to signed URL response.
    ListOfAssetDestinationEntry:
      type: array
      description: The destination where the assets will be exported.
      items:
        $ref: '#/components/schemas/AssetDestinationEntry'
    ExportServerSideEncryption:
      type: object
      required:
        - Type
      properties:
        KmsKeyArn:
          $ref: '#/components/schemas/__string'
          description: 'The Amazon Resource Name (ARN) of the the AWS KMS key you want to use to encrypt the Amazon S3 objects. This parameter is required if you choose aws:kms as an encryption type.'
        Type:
          $ref: '#/components/schemas/ServerSideEncryptionTypes'
          description: The type of server side encryption used for encrypting the objects in Amazon S3.
      description: Encryption configuration of the export job. Includes the encryption type as well as the AWS KMS key. The KMS key is only necessary if you chose the KMS encryption type.
    ExportAssetsToS3ResponseDetails:
      type: object
      required:
        - AssetDestinations
        - DataSetId
        - RevisionId
      properties:
        AssetDestinations:
          $ref: '#/components/schemas/ListOfAssetDestinationEntry'
          description: The destination in Amazon S3 where the asset is exported.
        DataSetId:
          $ref: '#/components/schemas/Id'
          description: The unique identifier for the data set associated with this export job.
        Encryption:
          $ref: '#/components/schemas/ExportServerSideEncryption'
          description: Encryption configuration of the export job.
        RevisionId:
          $ref: '#/components/schemas/Id'
          description: The unique identifier for the revision associated with this export response.
      description: Details about the export to Amazon S3 response.
    ListOfRevisionDestinationEntry:
      type: array
      description: The destination where the assets in the revision will be exported.
      items:
        $ref: '#/components/schemas/RevisionDestinationEntry'
    ExportRevisionsToS3ResponseDetails:
      type: object
      required:
        - RevisionDestinations
        - DataSetId
      properties:
        DataSetId:
          $ref: '#/components/schemas/Id'
          description: The unique identifier for the data set associated with this export job.
        Encryption:
          $ref: '#/components/schemas/ExportServerSideEncryption'
          description: Encryption configuration of the export job.
        RevisionDestinations:
          $ref: '#/components/schemas/ListOfRevisionDestinationEntry'
          description: The destination in Amazon S3 where the revision is exported.
      description: Details about the export revisions to Amazon S3 response.
    ServerSideEncryptionTypes:
      type: string
      enum:
        - 'aws:kms'
        - AES256
      description: The types of encryption supported in export jobs to Amazon S3.
    GetAssetRequest:
      type: object
      title: GetAssetRequest
      properties: {}
    GetDataSetRequest:
      type: object
      title: GetDataSetRequest
      properties: {}
    GetJobRequest:
      type: object
      title: GetJobRequest
      properties: {}
    GetRevisionRequest:
      type: object
      title: GetRevisionRequest
      properties: {}
    __stringMin24Max24PatternAZaZ094AZaZ092AZaZ093:
      type: string
      pattern: '^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$'
      minLength: 24
      maxLength: 24
    ImportAssetFromSignedUrlResponseDetails:
      type: object
      required:
        - DataSetId
        - AssetName
        - RevisionId
      properties:
        AssetName:
          $ref: '#/components/schemas/AssetName'
          description: The name for the asset associated with this import response.
        DataSetId:
          $ref: '#/components/schemas/Id'
          description: The unique identifier for the data set associated with this import job.
        Md5Hash:
          $ref: '#/components/schemas/__stringMin24Max24PatternAZaZ094AZaZ092AZaZ093'
          description: 'The Base64-encoded Md5 hash for the asset, used to ensure the integrity of the file at that location.'
        RevisionId:
          $ref: '#/components/schemas/Id'
          description: The unique identifier for the revision associated with this import response.
        SignedUrl:
          $ref: '#/components/schemas/__string'
          description: The signed URL.
        SignedUrlExpiresAt:
          $ref: '#/components/schemas/Timestamp'
          description: 'The time and date at which the signed URL expires, in ISO 8601 format.'
      description: 'The details in the response for an import request, including the signed URL and other information.'
    ImportAssetsFromS3ResponseDetails:
      type: object
      required:
        - DataSetId
        - AssetSources
        - RevisionId
      properties:
        AssetSources:
          $ref: '#/components/schemas/ListOfAssetSourceEntry'
          description: Is a list of Amazon S3 bucket and object key pairs.
        DataSetId:
          $ref: '#/components/schemas/Id'
          description: The unique identifier for the data set associated with this import job.
        RevisionId:
          $ref: '#/components/schemas/Id'
          description: The unique identifier for the revision associated with this import response.
      description: Details from an import from Amazon S3 response.
    JobEntry:
      type: object
      required:
        - Type
        - Details
        - State
        - CreatedAt
        - Id
        - Arn
        - UpdatedAt
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The ARN for the job.
        CreatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time that the job was created, in ISO 8601 format.'
        Details:
          $ref: '#/components/schemas/ResponseDetails'
          description: 'Details of the operation to be performed by the job, such as export destination details or import source details.'
        Errors:
          $ref: '#/components/schemas/ListOfJobError'
          description: Errors for jobs.
        Id:
          $ref: '#/components/schemas/Id'
          description: The unique identifier for the job.
        State:
          $ref: '#/components/schemas/State'
          description: The state of the job.
        Type:
          $ref: '#/components/schemas/Type'
          description: The job type.
        UpdatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time that the job was last updated, in ISO 8601 format.'
      description: AWS Data Exchange Jobs are asynchronous import or export operations used to create or copy assets. A data set owner can both import and export as they see fit. Someone with an entitlement to a data set can only export. Jobs are deleted 90 days after they are created.
    JobErrorLimitName:
      type: string
      enum:
        - Assets per revision
        - Asset size in GB
      description: The name of the limit that was reached.
    __double:
      type: number
      format: double
    JobErrorResourceTypes:
      type: string
      enum:
        - REVISION
        - ASSET
      description: The types of resource which the job error can apply to.
    JobError:
      type: object
      required:
        - Message
        - Code
      properties:
        Code:
          $ref: '#/components/schemas/Code'
          description: The code for the job error.
        Details:
          $ref: '#/components/schemas/Details'
        LimitName:
          $ref: '#/components/schemas/JobErrorLimitName'
          description: The name of the limit that was reached.
        LimitValue:
          $ref: '#/components/schemas/__double'
          description: The value of the exceeded limit.
        Message:
          $ref: '#/components/schemas/__string'
          description: The message related to the job error.
        ResourceId:
          $ref: '#/components/schemas/__string'
          description: The unique identifier for the resource related to the error.
        ResourceType:
          $ref: '#/components/schemas/JobErrorResourceTypes'
          description: The type of resource related to the error.
      description: An error that occurred with the job request.
    MaxResults:
      type: integer
      minimum: 1
      maximum: 25
    ListDataSetRevisionsRequest:
      type: object
      title: ListDataSetRevisionsRequest
      properties: {}
    NextToken:
      type: string
      description: The token value retrieved from a previous call to access the next page of results.
    ListOfRevisionEntry:
      type: array
      items:
        $ref: '#/components/schemas/RevisionEntry'
    ListDataSetsRequest:
      type: object
      title: ListDataSetsRequest
      properties: {}
    ListOfDataSetEntry:
      type: array
      items:
        $ref: '#/components/schemas/DataSetEntry'
    ListJobsRequest:
      type: object
      title: ListJobsRequest
      properties: {}
    ListOfJobEntry:
      type: array
      items:
        $ref: '#/components/schemas/JobEntry'
    RevisionDestinationEntry:
      type: object
      required:
        - Bucket
        - RevisionId
      properties:
        Bucket:
          $ref: '#/components/schemas/__string'
          description: The S3 bucket that is the destination for the assets in the revision.
        KeyPattern:
          $ref: '#/components/schemas/__string'
          description: 'A string representing the pattern for generated names of the individual assets in the revision. For more information about key patterns, see <a href="https://docs.aws.amazon.com/data-exchange/latest/userguide/jobs.html#revision-export-keypatterns">Key patterns when exporting revisions</a>.'
        RevisionId:
          $ref: '#/components/schemas/Id'
          description: The unique identifier for the revision.
      description: The destination where the assets in the revision will be exported.
    ListRevisionAssetsRequest:
      type: object
      title: ListRevisionAssetsRequest
      properties: {}
    ListOfAssetEntry:
      type: array
      items:
        $ref: '#/components/schemas/AssetEntry'
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
    RevisionEntry:
      type: object
      required:
        - CreatedAt
        - DataSetId
        - Id
        - Arn
        - UpdatedAt
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The ARN for the revision.
        Comment:
          $ref: '#/components/schemas/__stringMin0Max16384'
          description: An optional comment about the revision.
        CreatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time that the revision was created, in ISO 8601 format.'
        DataSetId:
          $ref: '#/components/schemas/Id'
          description: The unique identifier for the data set associated with this revision.
        Finalized:
          $ref: '#/components/schemas/__boolean'
          description: '<p>To publish a revision to a data set in a product, the revision must first be finalized. Finalizing a revision tells AWS Data Exchange that your changes to the assets in the revision are complete. After it''s in this read-only state, you can publish the revision to your products.</p> <p>Finalized revisions can be published through the AWS Data Exchange console or the AWS Marketplace Catalog API, using the StartChangeSet AWS Marketplace Catalog API action. When using the API, revisions are uniquely identified by their ARN.</p>'
        Id:
          $ref: '#/components/schemas/Id'
          description: The unique identifier for the revision.
        SourceId:
          $ref: '#/components/schemas/Id'
          description: The revision ID of the owned revision corresponding to the entitled revision being viewed. This parameter is returned when a revision owner is viewing the entitled copy of its owned revision.
        UpdatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time that the revision was last updated, in ISO 8601 format.'
      description: A revision is a container for one or more assets.
    __doubleMin0:
      type: number
      format: double
    StartJobRequest:
      type: object
      title: StartJobRequest
      properties: {}
    TagResourceRequest:
      type: object
      required:
        - Tags
      title: TagResourceRequest
      properties:
        Tags:
          allOf:
            - $ref: '#/components/schemas/MapOf__string'
            - xml:
                name: tags
              description: A label that consists of a customer-defined key and an optional value.
      description: The request body for TagResource.
    ListOf__string:
      type: array
      items:
        $ref: '#/components/schemas/__string'
    UntagResourceRequest:
      type: object
      title: UntagResourceRequest
      properties: {}
    UpdateAssetRequest:
      type: object
      required:
        - Name
      title: UpdateAssetRequest
      properties:
        Name:
          $ref: '#/components/schemas/AssetName'
          description: 'The name of the asset. When importing from Amazon S3, the S3 object key is used as the asset name. When exporting to Amazon S3, the asset name is used as default target S3 object key.'
      description: The request body for UpdateAsset.
    UpdateDataSetRequest:
      type: object
      title: UpdateDataSetRequest
      properties:
        Description:
          $ref: '#/components/schemas/Description'
          description: The description for the data set.
        Name:
          $ref: '#/components/schemas/Name'
          description: The name of the data set.
      description: The request body for UpdateDataSet.
    UpdateRevisionRequest:
      type: object
      title: UpdateRevisionRequest
      properties:
        Comment:
          $ref: '#/components/schemas/__stringMin0Max16384'
          description: An optional comment about the revision.
        Finalized:
          $ref: '#/components/schemas/__boolean'
          description: 'Finalizing a revision tells AWS Data Exchange that your changes to the assets in the revision are complete. After it''s in this read-only state, you can publish the revision to your products.'
      description: The request body for UpdateRevision.
security:
  - hmac: []
