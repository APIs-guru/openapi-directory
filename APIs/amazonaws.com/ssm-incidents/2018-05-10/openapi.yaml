openapi: 3.0.0
info:
  version: '2018-05-10'
  x-release: v4
  title: AWS Systems Manager Incident Manager
  description: '<p>AWS Systems Manager Incident Manager is an incident management console designed to help users mitigate and recover from incidents affecting their AWS-hosted applications. An incident is any unplanned interruption or reduction in quality of services. </p> <p>Incident Manager increases incident resolution by notifying responders of impact, highlighting relevant troubleshooting data, and providing collaboration tools to get services back up and running. To achieve the primary goal of reducing the time-to-resolution of critical incidents, Incident Manager automates response plans and enables responder team escalation. </p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: ssm-incidents
  x-aws-signingName: ssm-incidents
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/ssm-incidents-2018-05-10.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/ssm-incidents/'
servers:
  - url: 'http://ssm-incidents.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The SSM Incidents multi-region endpoint
  - url: 'https://ssm-incidents.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The SSM Incidents multi-region endpoint
  - url: 'http://ssm-incidents.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The SSM Incidents endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://ssm-incidents.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The SSM Incidents endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /createReplicationSet:
    post:
      operationId: CreateReplicationSet
      description: 'A replication set replicates and encrypts your data to the provided Regions with the provided KMS key. '
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateReplicationSetOutput'
        '480':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - regions
              properties:
                clientToken:
                  description: A token ensuring that the action is called only once with the specified details.
                  type: string
                  minLength: 0
                  maxLength: 128
                regions:
                  description: The Regions that Incident Manager replicates your data to. You can have up to three Regions in your replication set.
                  type: object
                  minProperties: 1
                  maxProperties: 3
                  additionalProperties:
                    $ref: '#/components/schemas/RegionMapInputValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /createResponsePlan:
    post:
      operationId: CreateResponsePlan
      description: 'Creates a response plan that automates the initial response to incidents. A response plan engages contacts, starts chat channel collaboration, and initiates runbooks at the beginning of an incident.'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateResponsePlanOutput'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - incidentTemplate
                - name
              properties:
                actions:
                  description: The actions that the response plan starts at the beginning of an incident.
                  type: array
                  items:
                    $ref: '#/components/schemas/Action'
                  minItems: 0
                  maxItems: 1
                chatChannel:
                  description: The AWS Chatbot chat channel used for collaboration during an incident.
                  type: object
                  properties:
                    chatbotSns:
                      $ref: '#/components/schemas/ChatbotSnsConfigurationSet'
                      description: 'The SNS targets that AWS Chatbot uses to notify the chat channel of updates to an incident. You can also make updates to the incident through the chat channel by using the SNS topics. '
                    empty:
                      $ref: '#/components/schemas/EmptyChatChannel'
                      description: Used to remove the chat channel from an incident record or response plan.
                clientToken:
                  description: A token ensuring that the action is called only once with the specified details.
                  type: string
                  minLength: 0
                  maxLength: 128
                displayName:
                  description: The long format of the response plan name. This field can contain spaces.
                  type: string
                  minLength: 0
                  maxLength: 200
                engagements:
                  description: The contacts and escalation plans that the response plan engages during an incident.
                  type: array
                  items:
                    $ref: '#/components/schemas/SsmContactsArn'
                  minItems: 0
                  maxItems: 5
                incidentTemplate:
                  description: Basic details used in creating a response plan. The response plan is then used to create an incident record.
                  type: object
                  properties:
                    dedupeString:
                      $ref: '#/components/schemas/DedupeString'
                      description: 'Used to stop Incident Manager from creating multiple incident records for the same incident. '
                    impact:
                      $ref: '#/components/schemas/Impact'
                      description: 'The impact of the incident on your customers and applications. '
                    notificationTargets:
                      $ref: '#/components/schemas/NotificationTargetSet'
                      description: The SNS targets that are notified when updates are made to an incident.
                    summary:
                      $ref: '#/components/schemas/IncidentSummary'
                      description: 'The summary of the incident. The summary is a brief synopsis of what occurred, what''s currently happening, and context.'
                    title:
                      $ref: '#/components/schemas/IncidentTitle'
                      description: 'The title of the incident. '
                name:
                  description: The short format name of the response plan. Can't include spaces.
                  type: string
                  pattern: '^[a-zA-Z0-9-_]*$'
                  minLength: 1
                  maxLength: 200
                tags:
                  description: A list of tags that you are adding to the response plan.
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /createTimelineEvent:
    post:
      operationId: CreateTimelineEvent
      description: 'Creates a custom timeline event on the incident details page of an incident record. Timeline events are automatically created by Incident Manager, marking key moment during an incident. You can create custom timeline events to mark important events that are automatically detected by Incident Manager.'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTimelineEventOutput'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - eventData
                - eventTime
                - eventType
                - incidentRecordArn
              properties:
                clientToken:
                  description: A token ensuring that the action is called only once with the specified details.
                  type: string
                  minLength: 0
                  maxLength: 128
                eventData:
                  description: A valid JSON string. There is no other schema imposed. A short description of the event.
                  type: string
                  minLength: 0
                  maxLength: 6000
                eventTime:
                  description: The time that the event occurred.
                  type: string
                  format: date-time
                eventType:
                  description: The type of the event. You can create timeline events of type <code>Custom Event</code>.
                  type: string
                  minLength: 0
                  maxLength: 100
                incidentRecordArn:
                  description: The Amazon Resource Name (ARN) of the incident record you are adding the event to.
                  type: string
                  pattern: '^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$'
                  minLength: 0
                  maxLength: 1000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /deleteIncidentRecord:
    post:
      operationId: DeleteIncidentRecord
      description: 'Delete an incident record from Incident Manager. '
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteIncidentRecordOutput'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - arn
              properties:
                arn:
                  description: The Amazon Resource Name (ARN) of the incident record you are deleting.
                  type: string
                  pattern: '^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$'
                  minLength: 0
                  maxLength: 1000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /deleteReplicationSet#arn:
    post:
      operationId: DeleteReplicationSet
      description: Deletes all Regions in your replication set. Deleting the replication set deletes all Incident Manager data.
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteReplicationSetOutput'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: arn
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the replication set you're deleting.
          schema:
            type: string
            pattern: '^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$'
            minLength: 0
            maxLength: 1000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /deleteResourcePolicy:
    post:
      operationId: DeleteResourcePolicy
      description: Deletes the resource policy that AWS Resource Access Manager uses to share your Incident Manager resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResourcePolicyOutput'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - policyId
                - resourceArn
              properties:
                policyId:
                  description: The ID of the resource policy you're deleting.
                  type: string
                  minLength: 0
                  maxLength: 256
                resourceArn:
                  description: The Amazon Resource Name (ARN) of the resource you're deleting the policy from.
                  type: string
                  pattern: '^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$'
                  minLength: 0
                  maxLength: 1000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /deleteResponsePlan:
    post:
      operationId: DeleteResponsePlan
      description: Deletes the specified response plan. Deleting a response plan stops all linked CloudWatch alarms and EventBridge events from creating an incident with this response plan.
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResponsePlanOutput'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - arn
              properties:
                arn:
                  description: The Amazon Resource Name (ARN) of the response plan.
                  type: string
                  pattern: '^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$'
                  minLength: 0
                  maxLength: 1000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /deleteTimelineEvent:
    post:
      operationId: DeleteTimelineEvent
      description: Deletes a timeline event from an incident.
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTimelineEventOutput'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - eventId
                - incidentRecordArn
              properties:
                eventId:
                  description: The ID of the event you are updating. You can find this by using <code>ListTimelineEvents</code>.
                  type: string
                  minLength: 0
                  maxLength: 50
                incidentRecordArn:
                  description: The Amazon Resource Name (ARN) of the incident that the event is part of.
                  type: string
                  pattern: '^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$'
                  minLength: 0
                  maxLength: 1000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /getIncidentRecord#arn:
    get:
      operationId: GetIncidentRecord
      description: Returns the details of the specified incident record.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetIncidentRecordOutput'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: arn
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the incident record.
          schema:
            type: string
            pattern: '^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$'
            minLength: 0
            maxLength: 1000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /getReplicationSet#arn:
    get:
      operationId: GetReplicationSet
      description: Retrieve your Incident Manager replication set.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReplicationSetOutput'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: arn
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the replication set you want to retrieve.
          schema:
            type: string
            pattern: '^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$'
            minLength: 0
            maxLength: 1000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /getResourcePolicies#resourceArn:
    post:
      operationId: GetResourcePolicies
      description: Retrieves the resource policies attached to the specified response plan.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResourcePoliciesOutput'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: resourceArn
          in: query
          required: true
          description: 'The Amazon Resource Name (ARN) of the response plan with the attached resource policy. '
          schema:
            type: string
            pattern: '^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$'
            minLength: 0
            maxLength: 1000
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                maxResults:
                  description: The maximum number of resource policies to display per page of results.
                  type: integer
                  minimum: 1
                  maximum: 100
                nextToken:
                  description: The pagination token to continue to the next page of results.
                  type: string
                  minLength: 0
                  maxLength: 1000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /getResponsePlan#arn:
    get:
      operationId: GetResponsePlan
      description: Retrieves the details of the specified response plan.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResponsePlanOutput'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: arn
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the response plan.
          schema:
            type: string
            pattern: '^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$'
            minLength: 0
            maxLength: 1000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /getTimelineEvent#eventId&incidentRecordArn:
    get:
      operationId: GetTimelineEvent
      description: Retrieves a timeline event based on its ID and incident record.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTimelineEventOutput'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: eventId
          in: query
          required: true
          description: The ID of the event. You can get an event's ID when you create it or by using <code>ListTimelineEvents</code>.
          schema:
            type: string
            minLength: 0
            maxLength: 50
        - name: incidentRecordArn
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the incident that the timeline event is part of.
          schema:
            type: string
            pattern: '^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$'
            minLength: 0
            maxLength: 1000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /listIncidentRecords:
    post:
      operationId: ListIncidentRecords
      description: 'Lists all incident records in your account. Use this command to retrieve the Amazon Resource Name (ARN) of the incident record you want to update. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListIncidentRecordsOutput'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filters:
                  description: '<p>Filter the list of incident records you are searching through. You can filter on the following keys:</p> <ul> <li> <p> <code>creationTime</code> </p> </li> <li> <p> <code>impact</code> </p> </li> <li> <p> <code>status</code> </p> </li> <li> <p> <code>createdBy</code> </p> </li> </ul>'
                  type: array
                  items:
                    $ref: '#/components/schemas/Filter'
                  minItems: 0
                  maxItems: 5
                maxResults:
                  description: The maximum number of results per page.
                  type: integer
                  minimum: 1
                  maximum: 100
                nextToken:
                  description: The pagination token to continue to the next page of results.
                  type: string
                  minLength: 0
                  maxLength: 1000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /listRelatedItems:
    post:
      operationId: ListRelatedItems
      description: List all related items for an incident record.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRelatedItemsOutput'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - incidentRecordArn
              properties:
                incidentRecordArn:
                  description: The Amazon Resource Name (ARN) of the incident record that you are listing related items for.
                  type: string
                  pattern: '^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$'
                  minLength: 0
                  maxLength: 1000
                maxResults:
                  description: The maximum number of related items per page.
                  type: integer
                  minimum: 1
                  maximum: 100
                nextToken:
                  description: The pagination token to continue to the next page of results.
                  type: string
                  minLength: 0
                  maxLength: 1000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /listReplicationSets:
    post:
      operationId: ListReplicationSets
      description: 'Lists details about the replication set configured in your account. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReplicationSetsOutput'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                maxResults:
                  description: 'The maximum number of results per page. '
                  type: integer
                  minimum: 1
                  maximum: 100
                nextToken:
                  description: The pagination token to continue to the next page of results.
                  type: string
                  minLength: 0
                  maxLength: 1000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /listResponsePlans:
    post:
      operationId: ListResponsePlans
      description: Lists all response plans in your account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponsePlansOutput'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                maxResults:
                  description: The maximum number of response plans per page.
                  type: integer
                  minimum: 1
                  maximum: 100
                nextToken:
                  description: The pagination token to continue to the next page of results.
                  type: string
                  minLength: 0
                  maxLength: 1000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{resourceArn}':
    get:
      operationId: ListTagsForResource
      description: Lists the tags that are attached to the specified response plan.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the response plan.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: TagResource
      description: Adds a tag to a response plan.
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
        '480':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '486':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the response plan you're adding the tags to.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tags
              properties:
                tags:
                  description: A list of tags that you are adding to the response plan.
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
  /listTimelineEvents:
    post:
      operationId: ListTimelineEvents
      description: Lists timeline events of the specified incident record.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTimelineEventsOutput'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - incidentRecordArn
              properties:
                filters:
                  description: '<p>Filters the timeline events based on the provided conditional values. You can filter timeline events using the following keys:</p> <ul> <li> <p> <code>eventTime</code> </p> </li> <li> <p> <code>eventType</code> </p> </li> </ul>'
                  type: array
                  items:
                    $ref: '#/components/schemas/Filter'
                  minItems: 0
                  maxItems: 5
                incidentRecordArn:
                  description: The Amazon Resource Name (ARN) of the incident that the event is part of.
                  type: string
                  pattern: '^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$'
                  minLength: 0
                  maxLength: 1000
                maxResults:
                  description: The maximum number of results per page.
                  type: integer
                  minimum: 1
                  maximum: 100
                nextToken:
                  description: The pagination token to continue to the next page of results.
                  type: string
                  minLength: 0
                  maxLength: 1000
                sortBy:
                  description: Sort by the specified key value pair.
                  type: string
                  enum:
                    - EVENT_TIME
                sortOrder:
                  description: Sorts the order of timeline events by the value specified in the <code>sortBy</code> field.
                  type: string
                  enum:
                    - ASCENDING
                    - DESCENDING
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /putResourcePolicy:
    post:
      operationId: PutResourcePolicy
      description: Adds a resource policy to the specified response plan.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutResourcePolicyOutput'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - policy
                - resourceArn
              properties:
                policy:
                  description: Details of the resource policy.
                  type: string
                  minLength: 0
                  maxLength: 4000
                resourceArn:
                  description: The Amazon Resource Name (ARN) of the response plan you're adding the resource policy to.
                  type: string
                  pattern: '^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$'
                  minLength: 0
                  maxLength: 1000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /startIncident:
    post:
      operationId: StartIncident
      description: 'Used to start an incident from CloudWatch alarms, EventBridge events, or manually. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartIncidentOutput'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - responsePlanArn
              properties:
                clientToken:
                  description: A token ensuring that the action is called only once with the specified details.
                  type: string
                  minLength: 0
                  maxLength: 128
                impact:
                  description: '<p>Defines the impact to the customers. Providing an impact overwrites the impact provided by a response plan.</p> <p class="title"> <b>Possible impacts:</b> </p> <ul> <li> <p> <code>1</code> - Critical impact, this typically relates to full application failure that impacts many to all customers. </p> </li> <li> <p> <code>2</code> - High impact, partial application failure with impact to many customers.</p> </li> <li> <p> <code>3</code> - Medium impact, the application is providing reduced service to customers.</p> </li> <li> <p> <code>4</code> - Low impact, customer might aren''t impacted by the problem yet.</p> </li> <li> <p> <code>5</code> - No impact, customers aren''t currently impacted but urgent action is needed to avoid impact.</p> </li> </ul>'
                  type: integer
                  minimum: 1
                  maximum: 5
                relatedItems:
                  description: 'Add related items to the incident for other responders to use. Related items are AWS resources, external links, or files uploaded to an S3 bucket. '
                  type: array
                  items:
                    $ref: '#/components/schemas/RelatedItem'
                  minItems: 0
                  maxItems: 100
                responsePlanArn:
                  description: 'The Amazon Resource Name (ARN) of the response plan that pre-defines summary, chat channels, SNS topics, runbooks, title, and impact of the incident. '
                  type: string
                  pattern: '^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$'
                  minLength: 0
                  maxLength: 1000
                title:
                  description: 'Provide a title for the incident. Providing a title overwrites the title provided by the response plan. '
                  type: string
                  minLength: 0
                  maxLength: 200
                triggerDetails:
                  description: Details about what caused the incident to be created in Incident Manager.
                  type: object
                  properties:
                    rawData:
                      $ref: '#/components/schemas/RawData'
                      description: 'Raw data passed from either EventBridge, CloudWatch, or Incident Manager when an incident is created.'
                    source:
                      $ref: '#/components/schemas/IncidentSource'
                      description: 'Identifies the service that sourced the event. All events sourced from within AWS begin with "aws." Customer-generated events can have any value here, as long as it doesn''t begin with "aws." We recommend the use of Java package-name style reverse domain-name strings. '
                    timestamp:
                      $ref: '#/components/schemas/Timestamp'
                      description: The time that the incident was detected.
                    triggerArn:
                      $ref: '#/components/schemas/Arn'
                      description: The ARN of the source that detected the incident.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{resourceArn}#tagKeys':
    delete:
      operationId: UntagResource
      description: Removes a tag from a resource.
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the response plan you're removing a tag from.
          schema:
            type: string
        - name: tagKeys
          in: query
          required: true
          description: The name of the tag you're removing from the response plan.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TagKey'
            minItems: 1
            maxItems: 50
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /updateDeletionProtection:
    post:
      operationId: UpdateDeletionProtection
      description: Update deletion protection to either allow or deny deletion of the final Region in a replication set.
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDeletionProtectionOutput'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - arn
                - deletionProtected
              properties:
                arn:
                  description: The Amazon Resource Name (ARN) of the replication set you're updating.
                  type: string
                  pattern: '^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$'
                  minLength: 0
                  maxLength: 1000
                clientToken:
                  description: A token ensuring that the action is called only once with the specified details.
                  type: string
                  minLength: 0
                  maxLength: 128
                deletionProtected:
                  description: Details if deletion protection is enabled or disabled in your account.
                  type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /updateIncidentRecord:
    post:
      operationId: UpdateIncidentRecord
      description: 'Update the details of an incident record. You can use this action to update an incident record from the defined chat channel. For more information about using actions in chat channels, see <a href="https://docs.aws.amazon.com/incident-manager/latest/userguide/chat.html#chat-interact">Interacting through chat</a>.'
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateIncidentRecordOutput'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - arn
              properties:
                arn:
                  description: The Amazon Resource Name (ARN) of the incident record you are updating.
                  type: string
                  pattern: '^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$'
                  minLength: 0
                  maxLength: 1000
                chatChannel:
                  description: The AWS Chatbot chat channel used for collaboration during an incident.
                  type: object
                  properties:
                    chatbotSns:
                      $ref: '#/components/schemas/ChatbotSnsConfigurationSet'
                      description: 'The SNS targets that AWS Chatbot uses to notify the chat channel of updates to an incident. You can also make updates to the incident through the chat channel by using the SNS topics. '
                    empty:
                      $ref: '#/components/schemas/EmptyChatChannel'
                      description: Used to remove the chat channel from an incident record or response plan.
                clientToken:
                  description: A token ensuring that the action is called only once with the specified details.
                  type: string
                  minLength: 0
                  maxLength: 128
                impact:
                  description: '<p>Defines the impact to customers and applications. Providing an impact overwrites the impact provided by the response plan.</p> <p class="title"> <b>Possible impacts:</b> </p> <ul> <li> <p> <code>1</code> - Critical impact, this typically relates to full application failure that impacts many to all customers. </p> </li> <li> <p> <code>2</code> - High impact, partial application failure with impact to many customers.</p> </li> <li> <p> <code>3</code> - Medium impact, the application is providing reduced service to customers.</p> </li> <li> <p> <code>4</code> - Low impact, customer might aren''t impacted by the problem yet.</p> </li> <li> <p> <code>5</code> - No impact, customers aren''t currently impacted but urgent action is needed to avoid impact.</p> </li> </ul>'
                  type: integer
                  minimum: 1
                  maximum: 5
                notificationTargets:
                  description: <p>The SNS targets that are notified when updates are made to an incident.</p> <p>Using multiple SNS topics creates redundancy in the case that a Region is down during the incident.</p>
                  type: array
                  items:
                    $ref: '#/components/schemas/NotificationTargetItem'
                  minItems: 0
                  maxItems: 10
                status:
                  description: The status of the incident. An incident can be <code>Open</code> or <code>Resolved</code>.
                  type: string
                  enum:
                    - OPEN
                    - RESOLVED
                summary:
                  description: The summary describes what has happened during the incident.
                  type: string
                  minLength: 0
                  maxLength: 4000
                title:
                  description: The title of the incident is a brief and easily recognizable.
                  type: string
                  minLength: 0
                  maxLength: 200
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /updateRelatedItems:
    post:
      operationId: UpdateRelatedItems
      description: Add or remove related items from the related items tab of an incident record.
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRelatedItemsOutput'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - incidentRecordArn
                - relatedItemsUpdate
              properties:
                clientToken:
                  description: A token ensuring that the action is called only once with the specified details.
                  type: string
                  minLength: 0
                  maxLength: 128
                incidentRecordArn:
                  description: The Amazon Resource Name (ARN) of the incident record you are updating related items in.
                  type: string
                  pattern: '^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$'
                  minLength: 0
                  maxLength: 1000
                relatedItemsUpdate:
                  description: Details about the related item you're adding.
                  type: object
                  properties:
                    itemToAdd:
                      $ref: '#/components/schemas/RelatedItem'
                      description: Details about the related item you're adding.
                    itemToRemove:
                      $ref: '#/components/schemas/ItemIdentifier'
                      description: Details about the related item you're deleting.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /updateReplicationSet:
    post:
      operationId: UpdateReplicationSet
      description: Add or delete Regions from your replication set.
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateReplicationSetOutput'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - actions
                - arn
              properties:
                actions:
                  description: An action to add or delete a Region.
                  type: array
                  items:
                    $ref: '#/components/schemas/UpdateReplicationSetAction'
                  minItems: 1
                  maxItems: 1
                arn:
                  description: The Amazon Resource Name (ARN) of the replication set you're updating.
                  type: string
                  pattern: '^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$'
                  minLength: 0
                  maxLength: 1000
                clientToken:
                  description: A token ensuring that the action is called only once with the specified details.
                  type: string
                  minLength: 0
                  maxLength: 128
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /updateResponsePlan:
    post:
      operationId: UpdateResponsePlan
      description: Updates the specified response plan.
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateResponsePlanOutput'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - arn
              properties:
                actions:
                  description: The actions that this response plan takes at the beginning of an incident.
                  type: array
                  items:
                    $ref: '#/components/schemas/Action'
                  minItems: 0
                  maxItems: 1
                arn:
                  description: The Amazon Resource Name (ARN) of the response plan.
                  type: string
                  pattern: '^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$'
                  minLength: 0
                  maxLength: 1000
                chatChannel:
                  description: The AWS Chatbot chat channel used for collaboration during an incident.
                  type: object
                  properties:
                    chatbotSns:
                      $ref: '#/components/schemas/ChatbotSnsConfigurationSet'
                      description: 'The SNS targets that AWS Chatbot uses to notify the chat channel of updates to an incident. You can also make updates to the incident through the chat channel by using the SNS topics. '
                    empty:
                      $ref: '#/components/schemas/EmptyChatChannel'
                      description: Used to remove the chat channel from an incident record or response plan.
                clientToken:
                  description: A token ensuring that the action is called only once with the specified details.
                  type: string
                  minLength: 0
                  maxLength: 128
                displayName:
                  description: The long format name of the response plan. Can't contain spaces.
                  type: string
                  minLength: 0
                  maxLength: 200
                engagements:
                  description: The contacts and escalation plans that Incident Manager engages at the start of the incident.
                  type: array
                  items:
                    $ref: '#/components/schemas/SsmContactsArn'
                  minItems: 0
                  maxItems: 5
                incidentTemplateDedupeString:
                  description: Used to create only one incident record for an incident.
                  type: string
                  minLength: 0
                  maxLength: 1000
                incidentTemplateImpact:
                  description: '<p>Defines the impact to the customers. Providing an impact overwrites the impact provided by a response plan.</p> <p class="title"> <b>Possible impacts:</b> </p> <ul> <li> <p> <code>5</code> - Severe impact</p> </li> <li> <p> <code>4</code> - High impact</p> </li> <li> <p> <code>3</code> - Medium impact</p> </li> <li> <p> <code>2</code> - Low impact</p> </li> <li> <p> <code>1</code> - No impact</p> </li> </ul>'
                  type: integer
                  minimum: 1
                  maximum: 5
                incidentTemplateNotificationTargets:
                  description: The SNS targets that are notified when updates are made to an incident.
                  type: array
                  items:
                    $ref: '#/components/schemas/NotificationTargetItem'
                  minItems: 0
                  maxItems: 10
                incidentTemplateSummary:
                  description: 'A brief summary of the incident. This typically contains what has happened, what''s currently happening, and next steps.'
                  type: string
                  minLength: 0
                  maxLength: 4000
                incidentTemplateTitle:
                  description: The short format name of the incident. Can't contain spaces.
                  type: string
                  minLength: 0
                  maxLength: 200
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /updateTimelineEvent:
    post:
      operationId: UpdateTimelineEvent
      description: Updates a timeline event. You can update events of type <code>Custom Event</code>.
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTimelineEventOutput'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - eventId
                - incidentRecordArn
              properties:
                clientToken:
                  description: A token ensuring that the action is called only once with the specified details.
                  type: string
                  minLength: 0
                  maxLength: 128
                eventData:
                  description: A short description of the event.
                  type: string
                  minLength: 0
                  maxLength: 6000
                eventId:
                  description: The ID of the event you are updating. You can find this by using <code>ListTimelineEvents</code>.
                  type: string
                  minLength: 0
                  maxLength: 50
                eventTime:
                  description: The time that the event occurred.
                  type: string
                  format: date-time
                eventType:
                  description: The type of the event. You can update events of type <code>Custom Event</code>.
                  type: string
                  minLength: 0
                  maxLength: 100
                incidentRecordArn:
                  description: The Amazon Resource Name (ARN) of the incident that the timeline event is part of.
                  type: string
                  pattern: '^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$'
                  minLength: 0
                  maxLength: 1000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CreateReplicationSetOutput:
      type: object
      required:
        - arn
      properties:
        arn:
          $ref: '#/components/schemas/Arn'
          description: 'The Amazon Resource Name (ARN) of the replication set. '
    RegionMapInputValue:
      type: object
      properties:
        sseKmsKeyId:
          $ref: '#/components/schemas/SseKmsKey'
          description: The KMS key used to encrypt the data in your replication set.
      description: The mapping between a Region and the key that's used to encrypt the data.
    ServiceQuotaExceededException: {}
    ThrottlingException: {}
    AccessDeniedException: {}
    ValidationException: {}
    ConflictException: {}
    InternalServerException: {}
    CreateResponsePlanOutput:
      type: object
      required:
        - arn
      properties:
        arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the response plan.
    Action:
      type: object
      properties:
        ssmAutomation:
          $ref: '#/components/schemas/SsmAutomation'
          description: The Systems Manager automation document to start as the runbook at the beginning of the incident.
      description: The action that starts at the beginning of an incident. The response plan defines the action.
    ChatbotSnsConfigurationSet:
      type: array
      items:
        $ref: '#/components/schemas/SnsArn'
      minItems: 1
      maxItems: 5
    EmptyChatChannel:
      type: object
      properties: {}
      description: Used to remove the chat channel from an incident record or response plan.
    SsmContactsArn:
      type: string
      pattern: '^arn:[-\w+=/,.@]+:ssm-contacts:[-\w+=/,.@]*:[0-9]+:([\w+=/,.@:-]+)*$'
      minLength: 0
      maxLength: 2048
    DedupeString:
      type: string
      minLength: 0
      maxLength: 1000
    Impact:
      type: integer
      minimum: 1
      maximum: 5
    NotificationTargetSet:
      type: array
      items:
        $ref: '#/components/schemas/NotificationTargetItem'
      minItems: 0
      maxItems: 10
    IncidentSummary:
      type: string
      minLength: 0
      maxLength: 4000
    IncidentTitle:
      type: string
      minLength: 0
      maxLength: 200
    TagValue:
      type: string
      pattern: '^[A-Za-z0-9 _=@:.+-/]*$'
      minLength: 0
      maxLength: 256
    ResourceNotFoundException: {}
    CreateTimelineEventOutput:
      type: object
      required:
        - eventId
        - incidentRecordArn
      properties:
        eventId:
          $ref: '#/components/schemas/UUID'
          description: 'The ID of the event for easy reference later. '
        incidentRecordArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the incident record that you added the event to.
    DeleteIncidentRecordOutput:
      type: object
      properties: {}
    DeleteReplicationSetOutput:
      type: object
      properties: {}
    DeleteResourcePolicyOutput:
      type: object
      properties: {}
    DeleteResponsePlanOutput:
      type: object
      properties: {}
    DeleteTimelineEventOutput:
      type: object
      properties: {}
    GetIncidentRecordOutput:
      type: object
      required:
        - incidentRecord
      properties:
        incidentRecord:
          $ref: '#/components/schemas/IncidentRecord'
          description: Details structure of the incident record.
    GetReplicationSetOutput:
      type: object
      required:
        - replicationSet
      properties:
        replicationSet:
          $ref: '#/components/schemas/ReplicationSet'
          description: Details of the replication set.
    GetResourcePoliciesOutput:
      type: object
      required:
        - resourcePolicies
      properties:
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token to continue to the next page of results.
        resourcePolicies:
          $ref: '#/components/schemas/ResourcePolicyList'
          description: Details about the resource policy attached to the response plan.
    GetResponsePlanOutput:
      type: object
      required:
        - arn
        - incidentTemplate
        - name
      properties:
        actions:
          $ref: '#/components/schemas/ActionsList'
          description: The actions that this response plan takes at the beginning of the incident.
        arn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the response plan.
        chatChannel:
          $ref: '#/components/schemas/ChatChannel'
          description: The AWS Chatbot chat channel used for collaboration during an incident.
        displayName:
          $ref: '#/components/schemas/ResponsePlanDisplayName'
          description: The long format name of the response plan. Can contain spaces.
        engagements:
          $ref: '#/components/schemas/EngagementSet'
          description: The contacts and escalation plans that the response plan engages during an incident.
        incidentTemplate:
          $ref: '#/components/schemas/IncidentTemplate'
          description: Details used to create the incident when using this response plan.
        name:
          $ref: '#/components/schemas/ResponsePlanName'
          description: The short format name of the response plan. Can't contain spaces.
    GetTimelineEventOutput:
      type: object
      required:
        - event
      properties:
        event:
          $ref: '#/components/schemas/TimelineEvent'
          description: Details about the timeline event.
    ListIncidentRecordsOutput:
      type: object
      required:
        - incidentRecordSummaries
      properties:
        incidentRecordSummaries:
          $ref: '#/components/schemas/IncidentRecordSummaryList'
          description: The details of each listed incident record.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token to continue to the next page of results.
    Filter:
      type: object
      required:
        - condition
        - key
      properties:
        condition:
          $ref: '#/components/schemas/Condition'
          description: 'The condition accepts before or after a specified time, equal to a string, or equal to an integer.'
        key:
          $ref: '#/components/schemas/FilterKeyString'
          description: The key that you're filtering on.
      description: Filter the selection by using a condition.
    ListRelatedItemsOutput:
      type: object
      required:
        - relatedItems
      properties:
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token to continue to the next page of results.
        relatedItems:
          $ref: '#/components/schemas/RelatedItemList'
          description: Details about each related item.
    ListReplicationSetsOutput:
      type: object
      required:
        - replicationSetArns
      properties:
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token to continue to the next page of results.
        replicationSetArns:
          $ref: '#/components/schemas/ReplicationSetArnList'
          description: The Amazon Resource Name (ARN) of the list replication set.
    ListResponsePlansOutput:
      type: object
      required:
        - responsePlanSummaries
      properties:
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token to continue to the next page of results.
        responsePlanSummaries:
          $ref: '#/components/schemas/ResponsePlanSummaryList'
          description: Details of each response plan.
    ListTagsForResourceResponse:
      type: object
      required:
        - tags
      properties:
        tags:
          $ref: '#/components/schemas/TagMap'
          description: A list of tags for the response plan.
    ListTimelineEventsOutput:
      type: object
      required:
        - eventSummaries
      properties:
        eventSummaries:
          $ref: '#/components/schemas/EventSummaryList'
          description: Details about each event that occurred during the incident.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token to continue to the next page of results.
    PutResourcePolicyOutput:
      type: object
      required:
        - policyId
      properties:
        policyId:
          $ref: '#/components/schemas/PolicyId'
          description: The ID of the resource policy.
    StartIncidentOutput:
      type: object
      required:
        - incidentRecordArn
      properties:
        incidentRecordArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the newly created incident record.
    RelatedItem:
      type: object
      required:
        - identifier
      properties:
        identifier:
          $ref: '#/components/schemas/ItemIdentifier'
          description: Details about the related item.
        title:
          $ref: '#/components/schemas/RelatedItemTitleString'
          description: The title of the related item.
      description: Resources that responders use to triage and mitigate the incident.
    RawData:
      type: string
      minLength: 0
      maxLength: 4000
    IncidentSource:
      type: string
      minLength: 0
      maxLength: 50
    Timestamp:
      type: string
      format: date-time
    Arn:
      type: string
      pattern: '^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$'
      minLength: 0
      maxLength: 1000
    TagResourceResponse:
      type: object
      properties: {}
    UntagResourceResponse:
      type: object
      properties: {}
    TagKey:
      type: string
      pattern: '^(?!aws:)[A-Za-z0-9 _=@:.+-/]+$'
      minLength: 1
      maxLength: 128
    UpdateDeletionProtectionOutput:
      type: object
      properties: {}
    UpdateIncidentRecordOutput:
      type: object
      properties: {}
    NotificationTargetItem:
      type: object
      properties:
        snsTopicArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the SNS topic.
      description: The SNS targets that are notified when updates are made to an incident.
    UpdateRelatedItemsOutput:
      type: object
      properties: {}
    ItemIdentifier:
      type: object
      required:
        - type
        - value
      properties:
        type:
          $ref: '#/components/schemas/ItemType'
          description: '<p>The type of related item. Incident Manager supports the following types:</p> <ul> <li> <p> <code>ANALYSIS</code> </p> </li> <li> <p> <code>INCIDENT</code> </p> </li> <li> <p> <code>METRIC</code> </p> </li> <li> <p> <code>PARENT</code> </p> </li> <li> <p> <code>ATTACHMENT</code> </p> </li> <li> <p> <code>OTHER</code> </p> </li> </ul>'
        value:
          $ref: '#/components/schemas/ItemValue'
          description: Details about the related item.
      description: Details and type of a related item.
    UpdateReplicationSetOutput:
      type: object
      properties: {}
    UpdateReplicationSetAction:
      type: object
      properties:
        addRegionAction:
          $ref: '#/components/schemas/AddRegionAction'
          description: Details about the Region that you're adding to the replication set.
        deleteRegionAction:
          $ref: '#/components/schemas/DeleteRegionAction'
          description: Details about the Region that you're deleting to the replication set.
      description: Details used when updating the replication set.
    UpdateResponsePlanOutput:
      type: object
      properties: {}
    UpdateTimelineEventOutput:
      type: object
      properties: {}
    SsmAutomation:
      type: object
      required:
        - documentName
        - roleArn
      properties:
        documentName:
          $ref: '#/components/schemas/SsmAutomationDocumentNameString'
          description: The automation document's name.
        documentVersion:
          $ref: '#/components/schemas/SsmAutomationDocumentVersionString'
          description: The automation document's version to use when running.
        parameters:
          $ref: '#/components/schemas/SsmParameters'
          description: The key-value pair parameters to use when running the automation document.
        roleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of the role that the automation document will assume when running commands.
        targetAccount:
          $ref: '#/components/schemas/SsmTargetAccount'
          description: The account that the automation document will be run in. This can be in either the management account or an application account.
      description: Details about the Systems Manager automation document that will be used as a runbook during an incident.
    ActionsList:
      type: array
      items:
        $ref: '#/components/schemas/Action'
      minItems: 0
      maxItems: 1
    RegionName:
      type: string
      minLength: 0
      maxLength: 20
    SseKmsKey:
      type: string
      minLength: 0
      maxLength: 2048
    AddRegionAction:
      type: object
      required:
        - regionName
      properties:
        regionName:
          $ref: '#/components/schemas/RegionName'
          description: The Region name to add to the replication set.
        sseKmsKeyId:
          $ref: '#/components/schemas/SseKmsKey'
          description: The KMS key ID to use to encrypt your replication set.
      description: 'Defines the Region and KMS key to add to the replication set. '
    IntegerList:
      type: array
      items:
        $ref: '#/components/schemas/Integer'
      minItems: 0
      maxItems: 100
    StringList:
      type: array
      items:
        $ref: '#/components/schemas/StringListMemberString'
      minItems: 0
      maxItems: 100
    AttributeValueList:
      type: object
      properties:
        integerValues:
          $ref: '#/components/schemas/IntegerList'
          description: The list of integer values that the filter matches.
        stringValues:
          $ref: '#/components/schemas/StringList'
          description: The list of string values that the filter matches.
      description: Use the AttributeValueList to filter by string or integer values.
    AutomationExecution:
      type: object
      properties:
        ssmExecutionArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the automation process.
      description: The Systems Manager automation document process to start as the runbook at the beginning of the incident.
    AutomationExecutionSet:
      type: array
      items:
        $ref: '#/components/schemas/AutomationExecution'
      minItems: 0
      maxItems: 100
    Boolean:
      type: boolean
    ChatChannel:
      type: object
      properties:
        chatbotSns:
          $ref: '#/components/schemas/ChatbotSnsConfigurationSet'
          description: 'The SNS targets that AWS Chatbot uses to notify the chat channel of updates to an incident. You can also make updates to the incident through the chat channel by using the SNS topics. '
        empty:
          $ref: '#/components/schemas/EmptyChatChannel'
          description: Used to remove the chat channel from an incident record or response plan.
      description: The AWS Chatbot chat channel used for collaboration during an incident.
    SnsArn:
      type: string
      minLength: 0
      maxLength: 1000
    ClientToken:
      type: string
      minLength: 0
      maxLength: 128
    Condition:
      type: object
      properties:
        after:
          $ref: '#/components/schemas/Timestamp'
          description: After the specified timestamp.
        before:
          $ref: '#/components/schemas/Timestamp'
          description: Before the specified timestamp
        equals:
          $ref: '#/components/schemas/AttributeValueList'
          description: 'The value is equal to the provided string or integer. '
      description: 'A conditional statement with which to compare a value, after a timestamp, before a timestamp, or equal to a string or integer. If multiple conditions are specified, the conditionals become an <code>AND</code>ed statement. If multiple values are specified for a conditional, the values are <code>OR</code>d.'
    RegionMapInput:
      type: object
      minProperties: 1
      maxProperties: 3
      additionalProperties:
        $ref: '#/components/schemas/RegionMapInputValue'
    CreateReplicationSetInput:
      type: object
      required:
        - regions
      title: CreateReplicationSetInput
      properties:
        clientToken:
          $ref: '#/components/schemas/ClientToken'
          description: A token ensuring that the action is called only once with the specified details.
        regions:
          $ref: '#/components/schemas/RegionMapInput'
          description: The Regions that Incident Manager replicates your data to. You can have up to three Regions in your replication set.
    ResponsePlanDisplayName:
      type: string
      minLength: 0
      maxLength: 200
    EngagementSet:
      type: array
      items:
        $ref: '#/components/schemas/SsmContactsArn'
      minItems: 0
      maxItems: 5
    IncidentTemplate:
      type: object
      required:
        - impact
        - title
      properties:
        dedupeString:
          $ref: '#/components/schemas/DedupeString'
          description: 'Used to stop Incident Manager from creating multiple incident records for the same incident. '
        impact:
          $ref: '#/components/schemas/Impact'
          description: 'The impact of the incident on your customers and applications. '
        notificationTargets:
          $ref: '#/components/schemas/NotificationTargetSet'
          description: The SNS targets that are notified when updates are made to an incident.
        summary:
          $ref: '#/components/schemas/IncidentSummary'
          description: 'The summary of the incident. The summary is a brief synopsis of what occurred, what''s currently happening, and context.'
        title:
          $ref: '#/components/schemas/IncidentTitle'
          description: 'The title of the incident. '
      description: Basic details used in creating a response plan. The response plan is then used to create an incident record.
    ResponsePlanName:
      type: string
      pattern: '^[a-zA-Z0-9-_]*$'
      minLength: 1
      maxLength: 200
    TagMap:
      type: object
      minProperties: 1
      maxProperties: 50
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    CreateResponsePlanInput:
      type: object
      required:
        - incidentTemplate
        - name
      title: CreateResponsePlanInput
      properties:
        actions:
          $ref: '#/components/schemas/ActionsList'
          description: The actions that the response plan starts at the beginning of an incident.
        chatChannel:
          $ref: '#/components/schemas/ChatChannel'
          description: The AWS Chatbot chat channel used for collaboration during an incident.
        clientToken:
          $ref: '#/components/schemas/ClientToken'
          description: A token ensuring that the action is called only once with the specified details.
        displayName:
          $ref: '#/components/schemas/ResponsePlanDisplayName'
          description: The long format of the response plan name. This field can contain spaces.
        engagements:
          $ref: '#/components/schemas/EngagementSet'
          description: The contacts and escalation plans that the response plan engages during an incident.
        incidentTemplate:
          $ref: '#/components/schemas/IncidentTemplate'
          description: Details used to create an incident when using this response plan.
        name:
          $ref: '#/components/schemas/ResponsePlanName'
          description: The short format name of the response plan. Can't include spaces.
        tags:
          $ref: '#/components/schemas/TagMap'
          description: A list of tags that you are adding to the response plan.
    EventData:
      type: string
      minLength: 0
      maxLength: 6000
    TimelineEventType:
      type: string
      minLength: 0
      maxLength: 100
    CreateTimelineEventInput:
      type: object
      required:
        - eventData
        - eventTime
        - eventType
        - incidentRecordArn
      title: CreateTimelineEventInput
      properties:
        clientToken:
          $ref: '#/components/schemas/ClientToken'
          description: A token ensuring that the action is called only once with the specified details.
        eventData:
          $ref: '#/components/schemas/EventData'
          description: A valid JSON string. There is no other schema imposed. A short description of the event.
        eventTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the event occurred.
        eventType:
          $ref: '#/components/schemas/TimelineEventType'
          description: The type of the event. You can create timeline events of type <code>Custom Event</code>.
        incidentRecordArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the incident record you are adding the event to.
    UUID:
      type: string
      minLength: 0
      maxLength: 50
    DeleteIncidentRecordInput:
      type: object
      required:
        - arn
      title: DeleteIncidentRecordInput
      properties:
        arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the incident record you are deleting.
    DeleteRegionAction:
      type: object
      required:
        - regionName
      properties:
        regionName:
          $ref: '#/components/schemas/RegionName'
          description: The name of the Region you're deleting from the replication set.
      description: Defines the information about the Region you're deleting from your replication set.
    DeleteReplicationSetInput:
      type: object
      title: DeleteReplicationSetInput
      properties: {}
    PolicyId:
      type: string
      minLength: 0
      maxLength: 256
    DeleteResourcePolicyInput:
      type: object
      required:
        - policyId
        - resourceArn
      title: DeleteResourcePolicyInput
      properties:
        policyId:
          $ref: '#/components/schemas/PolicyId'
          description: The ID of the resource policy you're deleting.
        resourceArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource you're deleting the policy from.
    DeleteResponsePlanInput:
      type: object
      required:
        - arn
      title: DeleteResponsePlanInput
      properties:
        arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the response plan.
    DeleteTimelineEventInput:
      type: object
      required:
        - eventId
        - incidentRecordArn
      title: DeleteTimelineEventInput
      properties:
        eventId:
          $ref: '#/components/schemas/UUID'
          description: The ID of the event you are updating. You can find this by using <code>ListTimelineEvents</code>.
        incidentRecordArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the incident that the event is part of.
    EventSummary:
      type: object
      required:
        - eventId
        - eventTime
        - eventType
        - eventUpdatedTime
        - incidentRecordArn
      properties:
        eventId:
          $ref: '#/components/schemas/UUID'
          description: The timeline event ID.
        eventTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the event occurred.
        eventType:
          $ref: '#/components/schemas/TimelineEventType'
          description: The type of event. The timeline event must be <code>Custom Event</code>.
        eventUpdatedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the timeline event was last updated.
        incidentRecordArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the incident that the event happened during.
      description: Details about a timeline event during an incident.
    EventSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/EventSummary'
      minItems: 0
      maxItems: 100
    FilterKeyString:
      type: string
      minLength: 0
      maxLength: 50
    FilterList:
      type: array
      items:
        $ref: '#/components/schemas/Filter'
      minItems: 0
      maxItems: 5
    GetIncidentRecordInput:
      type: object
      title: GetIncidentRecordInput
      properties: {}
    IncidentRecord:
      type: object
      required:
        - arn
        - creationTime
        - dedupeString
        - impact
        - incidentRecordSource
        - lastModifiedBy
        - lastModifiedTime
        - status
        - title
      properties:
        arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the incident record.
        automationExecutions:
          $ref: '#/components/schemas/AutomationExecutionSet'
          description: 'The runbook, or automation document, that''s run at the beginning of the incident.'
        chatChannel:
          $ref: '#/components/schemas/ChatChannel'
          description: The chat channel used for collaboration during an incident.
        creationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that Incident Manager created the incident record.
        dedupeString:
          $ref: '#/components/schemas/DedupeString'
          description: The string Incident Manager uses to prevent duplicate incidents from being created by the same incident.
        impact:
          $ref: '#/components/schemas/Impact'
          description: The impact of the incident on customers and applications.
        incidentRecordSource:
          $ref: '#/components/schemas/IncidentRecordSource'
          description: Details about the action that started the incident.
        lastModifiedBy:
          $ref: '#/components/schemas/Arn'
          description: Who modified the incident most recently.
        lastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the incident was most recently modified.
        notificationTargets:
          $ref: '#/components/schemas/NotificationTargetSet'
          description: The SNS targets that are notified when updates are made to an incident.
        resolvedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the incident was resolved. This appears as a timeline event.
        status:
          $ref: '#/components/schemas/IncidentRecordStatus'
          description: The current status of the incident.
        summary:
          $ref: '#/components/schemas/IncidentSummary'
          description: 'The summary of the incident. The summary is a brief synopsis of what occurred, what is currently happening, and context.'
        title:
          $ref: '#/components/schemas/IncidentTitle'
          description: The title of the incident.
      description: The record of the incident that's created when an incident occurs.
    GetReplicationSetInput:
      type: object
      title: GetReplicationSetInput
      properties: {}
    ReplicationSet:
      type: object
      required:
        - createdBy
        - createdTime
        - deletionProtected
        - lastModifiedBy
        - lastModifiedTime
        - regionMap
        - status
      properties:
        arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the replication set.
        createdBy:
          $ref: '#/components/schemas/Arn'
          description: Details about who created the replication set.
        createdTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the replication set was created.
        deletionProtected:
          $ref: '#/components/schemas/Boolean'
          description: 'Determines if the replication set deletion protection is enabled or not. If deletion protection is enabled, you can''t delete the last Region in the replication set. '
        lastModifiedBy:
          $ref: '#/components/schemas/Arn'
          description: Who last modified the replication set.
        lastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the replication set was last updated.
        regionMap:
          $ref: '#/components/schemas/RegionInfoMap'
          description: The map between each Region in your replication set and the KMS key that is used to encrypt the data in that Region.
        status:
          $ref: '#/components/schemas/ReplicationSetStatus'
          description: 'The status of the replication set. If the replication set is still pending, you can''t use Incident Manager functionality.'
      description: 'The set of Regions that your Incident Manager data will be replicated to and the KMS key used to encrypt the data. '
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    NextToken:
      type: string
      minLength: 0
      maxLength: 1000
    GetResourcePoliciesInput:
      type: object
      title: GetResourcePoliciesInput
      properties:
        maxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of resource policies to display per page of results.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token to continue to the next page of results.
    ResourcePolicyList:
      type: array
      items:
        $ref: '#/components/schemas/ResourcePolicy'
      minItems: 0
      maxItems: 100
    GetResponsePlanInput:
      type: object
      title: GetResponsePlanInput
      properties: {}
    GetTimelineEventInput:
      type: object
      title: GetTimelineEventInput
      properties: {}
    TimelineEvent:
      type: object
      required:
        - eventData
        - eventId
        - eventTime
        - eventType
        - eventUpdatedTime
        - incidentRecordArn
      properties:
        eventData:
          $ref: '#/components/schemas/EventData'
          description: A short description of the event.
        eventId:
          $ref: '#/components/schemas/UUID'
          description: The ID of the timeline event.
        eventTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the event occurred.
        eventType:
          $ref: '#/components/schemas/TimelineEventType'
          description: The type of event that occurred. Currently Incident Manager supports only the <code>Custom Event</code> type.
        eventUpdatedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the timeline event was last updated.
        incidentRecordArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the incident that the event occurred during.
      description: 'A significant event that happened during the incident. '
    IncidentRecordSource:
      type: object
      required:
        - createdBy
        - source
      properties:
        createdBy:
          $ref: '#/components/schemas/Arn'
          description: The principal that started the incident.
        invokedBy:
          $ref: '#/components/schemas/Arn'
          description: The principal the assumed the role specified of the <code>createdBy</code>.
        resourceArn:
          $ref: '#/components/schemas/Arn'
          description: The resource that caused the incident to be created.
        source:
          $ref: '#/components/schemas/IncidentSource'
          description: 'The service that started the incident. This can be manually created from Incident Manager, automatically created using an AWS CloudWatch alarm, or Amazon EventBridge event.'
      description: Details about how the incident record was created and when.
    IncidentRecordStatus:
      type: string
      enum:
        - OPEN
        - RESOLVED
    IncidentRecordSummary:
      type: object
      required:
        - arn
        - creationTime
        - impact
        - incidentRecordSource
        - status
        - title
      properties:
        arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the incident.
        creationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time the incident was created.
        impact:
          $ref: '#/components/schemas/Impact'
          description: Defines the impact to customers and applications.
        incidentRecordSource:
          $ref: '#/components/schemas/IncidentRecordSource'
          description: What caused Incident Manager to create the incident.
        resolvedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time the incident was resolved.
        status:
          $ref: '#/components/schemas/IncidentRecordStatus'
          description: The current status of the incident.
        title:
          $ref: '#/components/schemas/IncidentTitle'
          description: The title of the incident. This value is either provided by the response plan or overwritten on creation.
      description: Details describing an incident record.
    IncidentRecordSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/IncidentRecordSummary'
      minItems: 0
      maxItems: 100
    Integer:
      type: integer
    ItemType:
      type: string
      enum:
        - ANALYSIS
        - INCIDENT
        - METRIC
        - PARENT
        - ATTACHMENT
        - OTHER
    ItemValue:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/Arn'
          description: 'The Amazon Resource Name (ARN) of the related item, if the related item is an Amazon resource.'
        metricDefinition:
          $ref: '#/components/schemas/MetricDefinition'
          description: 'The metric definition, if the related item is a metric in CloudWatch.'
        url:
          $ref: '#/components/schemas/Url'
          description: 'The URL, if the related item is a non-AWS resource.'
      description: Describes a related item.
    MetricDefinition:
      type: string
      minLength: 0
      maxLength: 4000
    Url:
      type: string
      minLength: 0
      maxLength: 1000
    ListIncidentRecordsInput:
      type: object
      title: ListIncidentRecordsInput
      properties:
        filters:
          $ref: '#/components/schemas/FilterList'
          description: '<p>Filter the list of incident records you are searching through. You can filter on the following keys:</p> <ul> <li> <p> <code>creationTime</code> </p> </li> <li> <p> <code>impact</code> </p> </li> <li> <p> <code>status</code> </p> </li> <li> <p> <code>createdBy</code> </p> </li> </ul>'
        maxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results per page.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token to continue to the next page of results.
    ListRelatedItemsInput:
      type: object
      required:
        - incidentRecordArn
      title: ListRelatedItemsInput
      properties:
        incidentRecordArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the incident record that you are listing related items for.
        maxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of related items per page.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token to continue to the next page of results.
    RelatedItemList:
      type: array
      items:
        $ref: '#/components/schemas/RelatedItem'
      minItems: 0
      maxItems: 100
    ListReplicationSetsInput:
      type: object
      title: ListReplicationSetsInput
      properties:
        maxResults:
          $ref: '#/components/schemas/MaxResults'
          description: 'The maximum number of results per page. '
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token to continue to the next page of results.
    ReplicationSetArnList:
      type: array
      items:
        $ref: '#/components/schemas/Arn'
    ListResponsePlansInput:
      type: object
      title: ListResponsePlansInput
      properties:
        maxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of response plans per page.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token to continue to the next page of results.
    ResponsePlanSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ResponsePlanSummary'
      minItems: 0
      maxItems: 100
    String:
      type: string
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
    TimelineEventSort:
      type: string
      enum:
        - EVENT_TIME
    SortOrder:
      type: string
      enum:
        - ASCENDING
        - DESCENDING
    ListTimelineEventsInput:
      type: object
      required:
        - incidentRecordArn
      title: ListTimelineEventsInput
      properties:
        filters:
          $ref: '#/components/schemas/FilterList'
          description: '<p>Filters the timeline events based on the provided conditional values. You can filter timeline events using the following keys:</p> <ul> <li> <p> <code>eventTime</code> </p> </li> <li> <p> <code>eventType</code> </p> </li> </ul>'
        incidentRecordArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the incident that the event is part of.
        maxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results per page.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token to continue to the next page of results.
        sortBy:
          $ref: '#/components/schemas/TimelineEventSort'
          description: Sort by the specified key value pair.
        sortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: Sorts the order of timeline events by the value specified in the <code>sortBy</code> field.
    Policy:
      type: string
      minLength: 0
      maxLength: 4000
    PutResourcePolicyInput:
      type: object
      required:
        - policy
        - resourceArn
      title: PutResourcePolicyInput
      properties:
        policy:
          $ref: '#/components/schemas/Policy'
          description: Details of the resource policy.
        resourceArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the response plan you're adding the resource policy to.
    RegionStatus:
      type: string
      enum:
        - ACTIVE
        - CREATING
        - DELETING
        - FAILED
    RegionInfo:
      type: object
      required:
        - status
        - statusUpdateDateTime
      properties:
        sseKmsKeyId:
          $ref: '#/components/schemas/SseKmsKey'
          description: The ID of the KMS key used to encrypt the data in this Region.
        status:
          $ref: '#/components/schemas/RegionStatus'
          description: The status of the Region in the replication set.
        statusMessage:
          $ref: '#/components/schemas/String'
          description: Information displayed about the status of the Region.
        statusUpdateDateTime:
          $ref: '#/components/schemas/Timestamp'
          description: The most recent date and time that the Region's status was updated.
      description: Information about a Region in your replication set.
    RegionInfoMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/RegionInfo'
    RelatedItemTitleString:
      type: string
      minLength: 0
      maxLength: 200
    RelatedItemsUpdate:
      type: object
      properties:
        itemToAdd:
          $ref: '#/components/schemas/RelatedItem'
          description: Details about the related item you're adding.
        itemToRemove:
          $ref: '#/components/schemas/ItemIdentifier'
          description: Details about the related item you're deleting.
      description: Details about the related item you're adding.
    ReplicationSetStatus:
      type: string
      enum:
        - ACTIVE
        - CREATING
        - UPDATING
        - DELETING
        - FAILED
    ResourcePolicy:
      type: object
      required:
        - policyDocument
        - policyId
        - ramResourceShareRegion
      properties:
        policyDocument:
          $ref: '#/components/schemas/Policy'
          description: The JSON blob that describes the policy.
        policyId:
          $ref: '#/components/schemas/PolicyId'
          description: The ID of the resource policy.
        ramResourceShareRegion:
          $ref: '#/components/schemas/String'
          description: The Region that policy allows resources to be used in.
      description: The resource policy that allows Incident Manager to perform actions on resources on your behalf.
    ResponsePlanSummary:
      type: object
      required:
        - arn
        - name
      properties:
        arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the response plan.
        displayName:
          $ref: '#/components/schemas/ResponsePlanDisplayName'
          description: The human readable name of the response plan. This can include spaces.
        name:
          $ref: '#/components/schemas/ResponsePlanName'
          description: The name of the response plan. This can't include spaces.
      description: Details of the response plan that are used when creating an incident.
    RoleArn:
      type: string
      pattern: '^arn:aws(-cn|-us-gov)?:iam::([0-9]{12})?:role/.+$'
      minLength: 0
      maxLength: 1000
    SsmAutomationDocumentNameString:
      type: string
      pattern: '^[a-zA-Z0-9_\-.:/]{3,128}$'
    SsmAutomationDocumentVersionString:
      type: string
      minLength: 0
      maxLength: 128
    SsmParameters:
      type: object
      minProperties: 1
      maxProperties: 200
      additionalProperties:
        $ref: '#/components/schemas/SsmParameterValues'
    SsmTargetAccount:
      type: string
      enum:
        - RESPONSE_PLAN_OWNER_ACCOUNT
        - IMPACTED_ACCOUNT
    SsmParameterValuesMemberString:
      type: string
      minLength: 0
      maxLength: 512
    SsmParameterValues:
      type: array
      items:
        $ref: '#/components/schemas/SsmParameterValuesMemberString'
      minItems: 0
      maxItems: 100
    SsmParametersKeyString:
      type: string
      minLength: 1
      maxLength: 50
    TriggerDetails:
      type: object
      required:
        - source
        - timestamp
      properties:
        rawData:
          $ref: '#/components/schemas/RawData'
          description: 'Raw data passed from either EventBridge, CloudWatch, or Incident Manager when an incident is created.'
        source:
          $ref: '#/components/schemas/IncidentSource'
          description: 'Identifies the service that sourced the event. All events sourced from within AWS begin with "aws." Customer-generated events can have any value here, as long as it doesn''t begin with "aws." We recommend the use of Java package-name style reverse domain-name strings. '
        timestamp:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the incident was detected.
        triggerArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the source that detected the incident.
      description: Details about what caused the incident to be created in Incident Manager.
    StartIncidentInput:
      type: object
      required:
        - responsePlanArn
      title: StartIncidentInput
      properties:
        clientToken:
          $ref: '#/components/schemas/ClientToken'
          description: A token ensuring that the action is called only once with the specified details.
        impact:
          $ref: '#/components/schemas/Impact'
          description: '<p>Defines the impact to the customers. Providing an impact overwrites the impact provided by a response plan.</p> <p class="title"> <b>Possible impacts:</b> </p> <ul> <li> <p> <code>1</code> - Critical impact, this typically relates to full application failure that impacts many to all customers. </p> </li> <li> <p> <code>2</code> - High impact, partial application failure with impact to many customers.</p> </li> <li> <p> <code>3</code> - Medium impact, the application is providing reduced service to customers.</p> </li> <li> <p> <code>4</code> - Low impact, customer might aren''t impacted by the problem yet.</p> </li> <li> <p> <code>5</code> - No impact, customers aren''t currently impacted but urgent action is needed to avoid impact.</p> </li> </ul>'
        relatedItems:
          $ref: '#/components/schemas/RelatedItemList'
          description: 'Add related items to the incident for other responders to use. Related items are AWS resources, external links, or files uploaded to an S3 bucket. '
        responsePlanArn:
          $ref: '#/components/schemas/Arn'
          description: 'The Amazon Resource Name (ARN) of the response plan that pre-defines summary, chat channels, SNS topics, runbooks, title, and impact of the incident. '
        title:
          $ref: '#/components/schemas/IncidentTitle'
          description: 'Provide a title for the incident. Providing a title overwrites the title provided by the response plan. '
        triggerDetails:
          $ref: '#/components/schemas/TriggerDetails'
          description: Details of what created the incident record in Incident Manager.
    StringListMemberString:
      type: string
      minLength: 0
      maxLength: 1000
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      minItems: 1
      maxItems: 50
    TagResourceRequest:
      type: object
      required:
        - tags
      title: TagResourceRequest
      properties:
        tags:
          $ref: '#/components/schemas/TagMap'
          description: A list of tags that you are adding to the response plan.
    UntagResourceRequest:
      type: object
      title: UntagResourceRequest
      properties: {}
    UpdateDeletionProtectionInput:
      type: object
      required:
        - arn
        - deletionProtected
      title: UpdateDeletionProtectionInput
      properties:
        arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the replication set you're updating.
        clientToken:
          $ref: '#/components/schemas/ClientToken'
          description: A token ensuring that the action is called only once with the specified details.
        deletionProtected:
          $ref: '#/components/schemas/Boolean'
          description: Details if deletion protection is enabled or disabled in your account.
    UpdateIncidentRecordInput:
      type: object
      required:
        - arn
      title: UpdateIncidentRecordInput
      properties:
        arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the incident record you are updating.
        chatChannel:
          $ref: '#/components/schemas/ChatChannel'
          description: The AWS Chatbot chat channel for responders to collaborate in.
        clientToken:
          $ref: '#/components/schemas/ClientToken'
          description: A token ensuring that the action is called only once with the specified details.
        impact:
          $ref: '#/components/schemas/Impact'
          description: '<p>Defines the impact to customers and applications. Providing an impact overwrites the impact provided by the response plan.</p> <p class="title"> <b>Possible impacts:</b> </p> <ul> <li> <p> <code>1</code> - Critical impact, this typically relates to full application failure that impacts many to all customers. </p> </li> <li> <p> <code>2</code> - High impact, partial application failure with impact to many customers.</p> </li> <li> <p> <code>3</code> - Medium impact, the application is providing reduced service to customers.</p> </li> <li> <p> <code>4</code> - Low impact, customer might aren''t impacted by the problem yet.</p> </li> <li> <p> <code>5</code> - No impact, customers aren''t currently impacted but urgent action is needed to avoid impact.</p> </li> </ul>'
        notificationTargets:
          $ref: '#/components/schemas/NotificationTargetSet'
          description: <p>The SNS targets that are notified when updates are made to an incident.</p> <p>Using multiple SNS topics creates redundancy in the case that a Region is down during the incident.</p>
        status:
          $ref: '#/components/schemas/IncidentRecordStatus'
          description: The status of the incident. An incident can be <code>Open</code> or <code>Resolved</code>.
        summary:
          $ref: '#/components/schemas/IncidentSummary'
          description: The summary describes what has happened during the incident.
        title:
          $ref: '#/components/schemas/IncidentTitle'
          description: The title of the incident is a brief and easily recognizable.
    UpdateRelatedItemsInput:
      type: object
      required:
        - incidentRecordArn
        - relatedItemsUpdate
      title: UpdateRelatedItemsInput
      properties:
        clientToken:
          $ref: '#/components/schemas/ClientToken'
          description: A token ensuring that the action is called only once with the specified details.
        incidentRecordArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the incident record you are updating related items in.
        relatedItemsUpdate:
          $ref: '#/components/schemas/RelatedItemsUpdate'
          description: Details about the item you are adding or deleting.
    UpdateReplicationSetInputActionsList:
      type: array
      items:
        $ref: '#/components/schemas/UpdateReplicationSetAction'
      minItems: 1
      maxItems: 1
    UpdateReplicationSetInput:
      type: object
      required:
        - actions
        - arn
      title: UpdateReplicationSetInput
      properties:
        actions:
          $ref: '#/components/schemas/UpdateReplicationSetInputActionsList'
          description: An action to add or delete a Region.
        arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the replication set you're updating.
        clientToken:
          $ref: '#/components/schemas/ClientToken'
          description: A token ensuring that the action is called only once with the specified details.
    UpdateResponsePlanInput:
      type: object
      required:
        - arn
      title: UpdateResponsePlanInput
      properties:
        actions:
          $ref: '#/components/schemas/ActionsList'
          description: The actions that this response plan takes at the beginning of an incident.
        arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the response plan.
        chatChannel:
          $ref: '#/components/schemas/ChatChannel'
          description: <p>The AWS Chatbot chat channel used for collaboration during an incident.</p> <p>Use the empty structure to remove the chat channel from the response plan.</p>
        clientToken:
          $ref: '#/components/schemas/ClientToken'
          description: A token ensuring that the action is called only once with the specified details.
        displayName:
          $ref: '#/components/schemas/ResponsePlanDisplayName'
          description: The long format name of the response plan. Can't contain spaces.
        engagements:
          $ref: '#/components/schemas/EngagementSet'
          description: The contacts and escalation plans that Incident Manager engages at the start of the incident.
        incidentTemplateDedupeString:
          $ref: '#/components/schemas/DedupeString'
          description: Used to create only one incident record for an incident.
        incidentTemplateImpact:
          $ref: '#/components/schemas/Impact'
          description: '<p>Defines the impact to the customers. Providing an impact overwrites the impact provided by a response plan.</p> <p class="title"> <b>Possible impacts:</b> </p> <ul> <li> <p> <code>5</code> - Severe impact</p> </li> <li> <p> <code>4</code> - High impact</p> </li> <li> <p> <code>3</code> - Medium impact</p> </li> <li> <p> <code>2</code> - Low impact</p> </li> <li> <p> <code>1</code> - No impact</p> </li> </ul>'
        incidentTemplateNotificationTargets:
          $ref: '#/components/schemas/NotificationTargetSet'
          description: The SNS targets that are notified when updates are made to an incident.
        incidentTemplateSummary:
          $ref: '#/components/schemas/IncidentSummary'
          description: 'A brief summary of the incident. This typically contains what has happened, what''s currently happening, and next steps.'
        incidentTemplateTitle:
          $ref: '#/components/schemas/IncidentTitle'
          description: The short format name of the incident. Can't contain spaces.
    UpdateTimelineEventInput:
      type: object
      required:
        - eventId
        - incidentRecordArn
      title: UpdateTimelineEventInput
      properties:
        clientToken:
          $ref: '#/components/schemas/ClientToken'
          description: A token ensuring that the action is called only once with the specified details.
        eventData:
          $ref: '#/components/schemas/EventData'
          description: A short description of the event.
        eventId:
          $ref: '#/components/schemas/UUID'
          description: The ID of the event you are updating. You can find this by using <code>ListTimelineEvents</code>.
        eventTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the event occurred.
        eventType:
          $ref: '#/components/schemas/TimelineEventType'
          description: The type of the event. You can update events of type <code>Custom Event</code>.
        incidentRecordArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the incident that the timeline event is part of.
security:
  - hmac: []
