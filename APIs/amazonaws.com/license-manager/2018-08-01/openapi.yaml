openapi: 3.0.0
info:
  version: '2018-08-01'
  x-release: v4
  title: AWS License Manager
  description: <fullname> AWS License Manager </fullname> <p>AWS License Manager makes it easier to manage licenses from software vendors across multiple AWS accounts and on-premises servers.</p>
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: license-manager
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/license-manager-2018-08-01.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/license-manager/'
servers:
  - url: 'http://license-manager.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS License Manager multi-region endpoint
  - url: 'https://license-manager.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS License Manager multi-region endpoint
  - url: 'http://license-manager.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS License Manager endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://license-manager.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS License Manager endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /#X-Amz-Target=AWSLicenseManager.AcceptGrant:
    post:
      operationId: AcceptGrant
      description: Accepts the specified grant.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptGrantResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
        '485':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '486':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptGrantRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.AcceptGrant
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSLicenseManager.CheckInLicense:
    post:
      operationId: CheckInLicense
      description: Checks in the specified license. Check in a license when it is no longer in use.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckInLicenseResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
        '487':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckInLicenseRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.CheckInLicense
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSLicenseManager.CheckoutBorrowLicense:
    post:
      operationId: CheckoutBorrowLicense
      description: Checks out the specified license for offline use.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckoutBorrowLicenseResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: NoEntitlementsAllowedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoEntitlementsAllowedException'
        '484':
          description: EntitlementNotAllowedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitlementNotAllowedException'
        '485':
          description: UnsupportedDigitalSignatureMethodException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedDigitalSignatureMethodException'
        '486':
          description: RedirectException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedirectException'
        '487':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '488':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '489':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
        '490':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckoutBorrowLicenseRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.CheckoutBorrowLicense
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSLicenseManager.CheckoutLicense:
    post:
      operationId: CheckoutLicense
      description: Checks out the specified license.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckoutLicenseResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: NoEntitlementsAllowedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoEntitlementsAllowedException'
        '484':
          description: UnsupportedDigitalSignatureMethodException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedDigitalSignatureMethodException'
        '485':
          description: RedirectException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedirectException'
        '486':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '487':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '488':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
        '489':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckoutLicenseRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.CheckoutLicense
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSLicenseManager.CreateGrant:
    post:
      operationId: CreateGrant
      description: Creates a grant for the specified license. A grant shares the use of license entitlements with specific AWS accounts.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGrantResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '483':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '484':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '485':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
        '486':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGrantRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.CreateGrant
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSLicenseManager.CreateGrantVersion:
    post:
      operationId: CreateGrantVersion
      description: Creates a new version of the specified grant.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGrantVersionResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '483':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '484':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGrantVersionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.CreateGrantVersion
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSLicenseManager.CreateLicense:
    post:
      operationId: CreateLicense
      description: Creates a license.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLicenseResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: RedirectException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedirectException'
        '483':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
        '486':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLicenseRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.CreateLicense
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSLicenseManager.CreateLicenseConfiguration:
    post:
      operationId: CreateLicenseConfiguration
      description: '<p>Creates a license configuration.</p> <p>A license configuration is an abstraction of a customer license agreement that can be consumed and enforced by License Manager. Components include specifications for the license type (licensing by instance, socket, CPU, or vCPU), allowed tenancy (shared tenancy, Dedicated Instance, Dedicated Host, or all of these), license affinity to host (how long a license must be associated with a host), and the number of licenses purchased and used.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLicenseConfigurationResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '482':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '483':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLicenseConfigurationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.CreateLicenseConfiguration
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSLicenseManager.CreateLicenseManagerReportGenerator:
    post:
      operationId: CreateLicenseManagerReportGenerator
      description: Creates a new report generator.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLicenseManagerReportGeneratorResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '483':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '484':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '485':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
        '486':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '487':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLicenseManagerReportGeneratorRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.CreateLicenseManagerReportGenerator
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSLicenseManager.CreateLicenseVersion:
    post:
      operationId: CreateLicenseVersion
      description: Creates a new version of the specified license.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLicenseVersionResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: RedirectException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedirectException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '486':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '487':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLicenseVersionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.CreateLicenseVersion
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSLicenseManager.CreateToken:
    post:
      operationId: CreateToken
      description: '<p>Creates a long-lived token.</p> <p>A refresh token is a JWT token used to get an access token. With an access token, you can call AssumeRoleWithWebIdentity to get role credentials that you can use to call License Manager to manage the specified license.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTokenResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
        '484':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '485':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: RedirectException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedirectException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTokenRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.CreateToken
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSLicenseManager.DeleteGrant:
    post:
      operationId: DeleteGrant
      description: Deletes the specified grant.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteGrantResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
        '485':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '486':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteGrantRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.DeleteGrant
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSLicenseManager.DeleteLicense:
    post:
      operationId: DeleteLicense
      description: Deletes the specified license.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteLicenseResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: RedirectException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedirectException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '485':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '486':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '487':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteLicenseRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.DeleteLicense
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSLicenseManager.DeleteLicenseConfiguration:
    post:
      operationId: DeleteLicenseConfiguration
      description: <p>Deletes the specified license configuration.</p> <p>You cannot delete a license configuration that is in use.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteLicenseConfigurationResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '482':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteLicenseConfigurationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.DeleteLicenseConfiguration
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSLicenseManager.DeleteLicenseManagerReportGenerator:
    post:
      operationId: DeleteLicenseManagerReportGenerator
      description: '<p>Delete an existing report generator.</p> <p>This action deletes the report generator, which stops it from generating future reports and cannot be reversed. However, the previous reports from this generator will remain in your S3 bucket.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteLicenseManagerReportGeneratorResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '483':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '484':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '485':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
        '486':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '487':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteLicenseManagerReportGeneratorRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.DeleteLicenseManagerReportGenerator
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSLicenseManager.DeleteToken:
    post:
      operationId: DeleteToken
      description: Deletes the specified token. Must be called in the license home Region.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTokenResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
        '484':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '485':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '486':
          description: RedirectException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedirectException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTokenRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.DeleteToken
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSLicenseManager.ExtendLicenseConsumption:
    post:
      operationId: ExtendLicenseConsumption
      description: Extends the expiration date for license consumption.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendLicenseConsumptionResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
        '485':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtendLicenseConsumptionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.ExtendLicenseConsumption
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSLicenseManager.GetAccessToken:
    post:
      operationId: GetAccessToken
      description: Gets a temporary access token to use with AssumeRoleWithWebIdentity. Access tokens are valid for one hour.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccessTokenResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
        '484':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAccessTokenRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.GetAccessToken
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSLicenseManager.GetGrant:
    post:
      operationId: GetGrant
      description: Gets detailed information about the specified grant.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGrantResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '483':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '484':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetGrantRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.GetGrant
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSLicenseManager.GetLicense:
    post:
      operationId: GetLicense
      description: Gets detailed information about the specified license.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLicenseResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
        '485':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetLicenseRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.GetLicense
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSLicenseManager.GetLicenseConfiguration:
    post:
      operationId: GetLicenseConfiguration
      description: Gets detailed information about the specified license configuration.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLicenseConfigurationResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '482':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetLicenseConfigurationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.GetLicenseConfiguration
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSLicenseManager.GetLicenseManagerReportGenerator:
    post:
      operationId: GetLicenseManagerReportGenerator
      description: Gets information on the specified report generator.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLicenseManagerReportGeneratorResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '483':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '484':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '485':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
        '486':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '487':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetLicenseManagerReportGeneratorRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.GetLicenseManagerReportGenerator
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSLicenseManager.GetLicenseUsage:
    post:
      operationId: GetLicenseUsage
      description: Gets detailed information about the usage of the specified license.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLicenseUsageResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
        '485':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetLicenseUsageRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.GetLicenseUsage
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSLicenseManager.GetServiceSettings:
    post:
      operationId: GetServiceSettings
      description: Gets the License Manager settings for the current Region.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServiceSettingsResponse'
        '480':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '481':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetServiceSettingsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.GetServiceSettings
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSLicenseManager.ListAssociationsForLicenseConfiguration:
    post:
      operationId: ListAssociationsForLicenseConfiguration
      description: '<p>Lists the resource associations for the specified license configuration.</p> <p>Resource associations need not consume licenses from a license configuration. For example, an AMI or a stopped instance might not consume a license (depending on the license rules).</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAssociationsForLicenseConfigurationResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: FilterLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterLimitExceededException'
        '482':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '483':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAssociationsForLicenseConfigurationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.ListAssociationsForLicenseConfiguration
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSLicenseManager.ListDistributedGrants:
    post:
      operationId: ListDistributedGrants
      description: Lists the grants distributed for the specified license.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDistributedGrantsResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '483':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '484':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDistributedGrantsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.ListDistributedGrants
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSLicenseManager.ListFailuresForLicenseConfigurationOperations:
    post:
      operationId: ListFailuresForLicenseConfigurationOperations
      description: Lists the license configuration operations that failed.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFailuresForLicenseConfigurationOperationsResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '482':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFailuresForLicenseConfigurationOperationsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.ListFailuresForLicenseConfigurationOperations
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSLicenseManager.ListLicenseConfigurations:
    post:
      operationId: ListLicenseConfigurations
      description: Lists the license configurations for your account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLicenseConfigurationsResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '482':
          description: FilterLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterLimitExceededException'
        '483':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListLicenseConfigurationsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.ListLicenseConfigurations
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSLicenseManager.ListLicenseManagerReportGenerators:
    post:
      operationId: ListLicenseManagerReportGenerators
      description: Lists the report generators for your account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLicenseManagerReportGeneratorsResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '483':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '484':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '485':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
        '486':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '487':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListLicenseManagerReportGeneratorsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.ListLicenseManagerReportGenerators
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSLicenseManager.ListLicenseSpecificationsForResource:
    post:
      operationId: ListLicenseSpecificationsForResource
      description: Describes the license configurations for the specified resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLicenseSpecificationsForResourceResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '482':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListLicenseSpecificationsForResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.ListLicenseSpecificationsForResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSLicenseManager.ListLicenseVersions:
    post:
      operationId: ListLicenseVersions
      description: Lists all versions of the specified license.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLicenseVersionsResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
        '484':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListLicenseVersionsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.ListLicenseVersions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSLicenseManager.ListLicenses:
    post:
      operationId: ListLicenses
      description: Lists the licenses for your account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLicensesResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
        '485':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListLicensesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.ListLicenses
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSLicenseManager.ListReceivedGrants:
    post:
      operationId: ListReceivedGrants
      description: Lists grants that are received but not accepted.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReceivedGrantsResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '483':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '484':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListReceivedGrantsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.ListReceivedGrants
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSLicenseManager.ListReceivedLicenses:
    post:
      operationId: ListReceivedLicenses
      description: Lists received licenses.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReceivedLicensesResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '483':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '484':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListReceivedLicensesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.ListReceivedLicenses
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSLicenseManager.ListResourceInventory:
    post:
      operationId: ListResourceInventory
      description: Lists resources managed using Systems Manager inventory.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResourceInventoryResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '482':
          description: FilterLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterLimitExceededException'
        '483':
          description: FailedDependencyException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedDependencyException'
        '484':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListResourceInventoryRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.ListResourceInventory
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSLicenseManager.ListTagsForResource:
    post:
      operationId: ListTagsForResource
      description: Lists the tags for the specified license configuration.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '482':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.ListTagsForResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSLicenseManager.ListTokens:
    post:
      operationId: ListTokens
      description: Lists your tokens.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTokensResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
        '484':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTokensRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.ListTokens
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSLicenseManager.ListUsageForLicenseConfiguration:
    post:
      operationId: ListUsageForLicenseConfiguration
      description: 'Lists all license usage records for a license configuration, displaying license consumption details by resource at a selected point in time. Use this action to audit the current license consumption for any license inventory and configuration.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsageForLicenseConfigurationResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: FilterLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterLimitExceededException'
        '482':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '483':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListUsageForLicenseConfigurationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.ListUsageForLicenseConfiguration
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSLicenseManager.RejectGrant:
    post:
      operationId: RejectGrant
      description: Rejects the specified grant.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RejectGrantResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
        '485':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '486':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RejectGrantRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.RejectGrant
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSLicenseManager.TagResource:
    post:
      operationId: TagResource
      description: Adds the specified tags to the specified license configuration.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '482':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.TagResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSLicenseManager.UntagResource:
    post:
      operationId: UntagResource
      description: Removes the specified tags from the specified license configuration.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '482':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.UntagResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSLicenseManager.UpdateLicenseConfiguration:
    post:
      operationId: UpdateLicenseConfiguration
      description: Modifies the attributes of an existing license configuration.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateLicenseConfigurationResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '482':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
        '485':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLicenseConfigurationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.UpdateLicenseConfiguration
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSLicenseManager.UpdateLicenseManagerReportGenerator:
    post:
      operationId: UpdateLicenseManagerReportGenerator
      description: '<p>Updates a report generator.</p> <p>After you make changes to a report generator, it will start generating new reports within 60 minutes of being updated.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateLicenseManagerReportGeneratorResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
        '483':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '484':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLicenseManagerReportGeneratorRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.UpdateLicenseManagerReportGenerator
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSLicenseManager.UpdateLicenseSpecificationsForResource:
    post:
      operationId: UpdateLicenseSpecificationsForResource
      description: '<p>Adds or removes the specified license configurations for the specified AWS resource.</p> <p>You can update the license specifications of AMIs, instances, and hosts. You cannot update the license specifications for launch templates and AWS CloudFormation templates, as they send license configurations to the operation that creates the resource.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateLicenseSpecificationsForResourceResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: InvalidResourceStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceStateException'
        '482':
          description: LicenseUsageException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseUsageException'
        '483':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '484':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLicenseSpecificationsForResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.UpdateLicenseSpecificationsForResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AWSLicenseManager.UpdateServiceSettings:
    post:
      operationId: UpdateServiceSettings
      description: Updates License Manager settings for the current Region.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateServiceSettingsResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '482':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServiceSettingsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.UpdateServiceSettings
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AcceptGrantResponse:
      type: object
      properties:
        GrantArn:
          $ref: '#/components/schemas/Arn'
          description: Grant ARN.
        Status:
          $ref: '#/components/schemas/GrantStatus'
          description: Grant status.
        Version:
          $ref: '#/components/schemas/String'
          description: Grant version.
    AcceptGrantRequest:
      type: object
      required:
        - GrantArn
      title: AcceptGrantRequest
      properties:
        GrantArn:
          $ref: '#/components/schemas/Arn'
          description: Amazon Resource Name (ARN) of the grant.
    ValidationException: {}
    InvalidParameterValueException: {}
    AuthorizationException: {}
    AccessDeniedException: {}
    RateLimitExceededException: {}
    ResourceLimitExceededException: {}
    ServerInternalException: {}
    CheckInLicenseResponse:
      type: object
      properties: {}
    CheckInLicenseRequest:
      type: object
      required:
        - LicenseConsumptionToken
      title: CheckInLicenseRequest
      properties:
        LicenseConsumptionToken:
          $ref: '#/components/schemas/String'
          description: License consumption token.
        Beneficiary:
          $ref: '#/components/schemas/String'
          description: License beneficiary.
    ResourceNotFoundException: {}
    ConflictException: {}
    CheckoutBorrowLicenseResponse:
      type: object
      properties:
        LicenseArn:
          $ref: '#/components/schemas/Arn'
          description: Amazon Resource Name (ARN) of the license.
        LicenseConsumptionToken:
          $ref: '#/components/schemas/String'
          description: License consumption token.
        EntitlementsAllowed:
          $ref: '#/components/schemas/EntitlementDataList'
          description: Allowed license entitlements.
        NodeId:
          $ref: '#/components/schemas/String'
          description: Node ID.
        SignedToken:
          $ref: '#/components/schemas/SignedToken'
          description: Signed token.
        IssuedAt:
          $ref: '#/components/schemas/ISO8601DateTime'
          description: Date and time at which the license checkout is issued.
        Expiration:
          $ref: '#/components/schemas/ISO8601DateTime'
          description: Date and time at which the license checkout expires.
        CheckoutMetadata:
          $ref: '#/components/schemas/MetadataList'
          description: Information about constraints.
    CheckoutBorrowLicenseRequest:
      type: object
      required:
        - LicenseArn
        - Entitlements
        - DigitalSignatureMethod
        - ClientToken
      title: CheckoutBorrowLicenseRequest
      properties:
        LicenseArn:
          $ref: '#/components/schemas/Arn'
          description: Amazon Resource Name (ARN) of the license. The license must use the borrow consumption configuration.
        Entitlements:
          $ref: '#/components/schemas/EntitlementDataList'
          description: License entitlements. Partial checkouts are not supported.
        DigitalSignatureMethod:
          $ref: '#/components/schemas/DigitalSignatureMethod'
          description: 'Digital signature method. The possible value is JSON Web Signature (JWS) algorithm PS384. For more information, see <a href="https://tools.ietf.org/html/rfc7518#section-3.5">RFC 7518 Digital Signature with RSASSA-PSS</a>.'
        NodeId:
          $ref: '#/components/schemas/String'
          description: Node ID.
        CheckoutMetadata:
          $ref: '#/components/schemas/MetadataList'
          description: Information about constraints.
        ClientToken:
          $ref: '#/components/schemas/ClientToken'
          description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'
    NoEntitlementsAllowedException: {}
    EntitlementNotAllowedException: {}
    UnsupportedDigitalSignatureMethodException: {}
    RedirectException: {}
    CheckoutLicenseResponse:
      type: object
      properties:
        CheckoutType:
          $ref: '#/components/schemas/CheckoutType'
          description: Checkout type.
        LicenseConsumptionToken:
          $ref: '#/components/schemas/String'
          description: License consumption token.
        EntitlementsAllowed:
          $ref: '#/components/schemas/EntitlementDataList'
          description: Allowed license entitlements.
        SignedToken:
          $ref: '#/components/schemas/SignedToken'
          description: Signed token.
        NodeId:
          $ref: '#/components/schemas/String'
          description: Node ID.
        IssuedAt:
          $ref: '#/components/schemas/ISO8601DateTime'
          description: Date and time at which the license checkout is issued.
        Expiration:
          $ref: '#/components/schemas/ISO8601DateTime'
          description: Date and time at which the license checkout expires.
    CheckoutLicenseRequest:
      type: object
      required:
        - ProductSKU
        - CheckoutType
        - KeyFingerprint
        - Entitlements
        - ClientToken
      title: CheckoutLicenseRequest
      properties:
        ProductSKU:
          $ref: '#/components/schemas/String'
          description: Product SKU.
        CheckoutType:
          $ref: '#/components/schemas/CheckoutType'
          description: Checkout type.
        KeyFingerprint:
          $ref: '#/components/schemas/String'
          description: Key fingerprint identifying the license.
        Entitlements:
          $ref: '#/components/schemas/EntitlementDataList'
          description: License entitlements.
        ClientToken:
          $ref: '#/components/schemas/ClientToken'
          description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'
        Beneficiary:
          $ref: '#/components/schemas/String'
          description: License beneficiary.
        NodeId:
          $ref: '#/components/schemas/String'
          description: Node ID.
    CreateGrantResponse:
      type: object
      properties:
        GrantArn:
          $ref: '#/components/schemas/Arn'
          description: Grant ARN.
        Status:
          $ref: '#/components/schemas/GrantStatus'
          description: Grant status.
        Version:
          $ref: '#/components/schemas/String'
          description: Grant version.
    CreateGrantRequest:
      type: object
      required:
        - ClientToken
        - GrantName
        - LicenseArn
        - Principals
        - HomeRegion
        - AllowedOperations
      title: CreateGrantRequest
      properties:
        ClientToken:
          $ref: '#/components/schemas/ClientToken'
          description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'
        GrantName:
          $ref: '#/components/schemas/String'
          description: Grant name.
        LicenseArn:
          $ref: '#/components/schemas/Arn'
          description: Amazon Resource Name (ARN) of the license.
        Principals:
          $ref: '#/components/schemas/PrincipalArnList'
          description: The grant principals.
        HomeRegion:
          $ref: '#/components/schemas/String'
          description: Home Region of the grant.
        AllowedOperations:
          $ref: '#/components/schemas/AllowedOperationList'
          description: Allowed operations for the grant.
    CreateGrantVersionResponse:
      type: object
      properties:
        GrantArn:
          $ref: '#/components/schemas/Arn'
          description: Grant ARN.
        Status:
          $ref: '#/components/schemas/GrantStatus'
          description: Grant status.
        Version:
          $ref: '#/components/schemas/String'
          description: New version of the grant.
    CreateGrantVersionRequest:
      type: object
      required:
        - ClientToken
        - GrantArn
      title: CreateGrantVersionRequest
      properties:
        ClientToken:
          $ref: '#/components/schemas/ClientToken'
          description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'
        GrantArn:
          $ref: '#/components/schemas/Arn'
          description: Amazon Resource Name (ARN) of the grant.
        GrantName:
          $ref: '#/components/schemas/String'
          description: Grant name.
        AllowedOperations:
          $ref: '#/components/schemas/AllowedOperationList'
          description: Allowed operations for the grant.
        Status:
          $ref: '#/components/schemas/GrantStatus'
          description: Grant status.
        StatusReason:
          $ref: '#/components/schemas/StatusReasonMessage'
        SourceVersion:
          $ref: '#/components/schemas/String'
          description: Current version of the grant.
    CreateLicenseResponse:
      type: object
      properties:
        LicenseArn:
          $ref: '#/components/schemas/Arn'
          description: Amazon Resource Name (ARN) of the license.
        Status:
          $ref: '#/components/schemas/LicenseStatus'
          description: License status.
        Version:
          $ref: '#/components/schemas/String'
          description: License version.
    CreateLicenseRequest:
      type: object
      required:
        - LicenseName
        - ProductName
        - ProductSKU
        - Issuer
        - HomeRegion
        - Validity
        - Entitlements
        - Beneficiary
        - ConsumptionConfiguration
        - ClientToken
      title: CreateLicenseRequest
      properties:
        LicenseName:
          $ref: '#/components/schemas/String'
          description: License name.
        ProductName:
          $ref: '#/components/schemas/String'
          description: Product name.
        ProductSKU:
          $ref: '#/components/schemas/String'
          description: Product SKU.
        Issuer:
          $ref: '#/components/schemas/Issuer'
          description: License issuer.
        HomeRegion:
          $ref: '#/components/schemas/String'
          description: Home Region for the license.
        Validity:
          $ref: '#/components/schemas/DatetimeRange'
          description: 'Date and time range during which the license is valid, in ISO8601-UTC format.'
        Entitlements:
          $ref: '#/components/schemas/EntitlementList'
          description: License entitlements.
        Beneficiary:
          $ref: '#/components/schemas/String'
          description: License beneficiary.
        ConsumptionConfiguration:
          $ref: '#/components/schemas/ConsumptionConfiguration'
          description: Configuration for consumption of the license. Choose a provisional configuration for workloads running with continuous connectivity. Choose a borrow configuration for workloads with offline usage.
        LicenseMetadata:
          $ref: '#/components/schemas/MetadataList'
          description: Information about the license.
        ClientToken:
          $ref: '#/components/schemas/ClientToken'
          description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'
    CreateLicenseConfigurationResponse:
      type: object
      properties:
        LicenseConfigurationArn:
          $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) of the license configuration.
    CreateLicenseConfigurationRequest:
      type: object
      required:
        - Name
        - LicenseCountingType
      title: CreateLicenseConfigurationRequest
      properties:
        Name:
          $ref: '#/components/schemas/String'
          description: Name of the license configuration.
        Description:
          $ref: '#/components/schemas/String'
          description: Description of the license configuration.
        LicenseCountingType:
          $ref: '#/components/schemas/LicenseCountingType'
          description: Dimension used to track the license inventory.
        LicenseCount:
          $ref: '#/components/schemas/BoxLong'
          description: Number of licenses managed by the license configuration.
        LicenseCountHardLimit:
          $ref: '#/components/schemas/BoxBoolean'
          description: Indicates whether hard or soft license enforcement is used. Exceeding a hard limit blocks the launch of new instances.
        LicenseRules:
          $ref: '#/components/schemas/StringList'
          description: '<p>License rules. The syntax is #name=value (for example, #allowedTenancy=EC2-DedicatedHost). The available rules vary by dimension, as follows.</p> <ul> <li> <p> <code>Cores</code> dimension: <code>allowedTenancy</code> | <code>licenseAffinityToHost</code> | <code>maximumCores</code> | <code>minimumCores</code> </p> </li> <li> <p> <code>Instances</code> dimension: <code>allowedTenancy</code> | <code>maximumCores</code> | <code>minimumCores</code> | <code>maximumSockets</code> | <code>minimumSockets</code> | <code>maximumVcpus</code> | <code>minimumVcpus</code> </p> </li> <li> <p> <code>Sockets</code> dimension: <code>allowedTenancy</code> | <code>licenseAffinityToHost</code> | <code>maximumSockets</code> | <code>minimumSockets</code> </p> </li> <li> <p> <code>vCPUs</code> dimension: <code>allowedTenancy</code> | <code>honorVcpuOptimization</code> | <code>maximumVcpus</code> | <code>minimumVcpus</code> </p> </li> </ul> <p>The unit for <code>licenseAffinityToHost</code> is days and the range is 1 to 180. The possible values for <code>allowedTenancy</code> are <code>EC2-Default</code>, <code>EC2-DedicatedHost</code>, and <code>EC2-DedicatedInstance</code>. The possible values for <code>honorVcpuOptimization</code> are <code>True</code> and <code>False</code>.</p>'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: Tags to add to the license configuration.
        DisassociateWhenNotFound:
          $ref: '#/components/schemas/BoxBoolean'
          description: 'When true, disassociates a resource when software is uninstalled.'
        ProductInformationList:
          $ref: '#/components/schemas/ProductInformationList'
          description: Product information.
    CreateLicenseManagerReportGeneratorResponse:
      type: object
      properties:
        LicenseManagerReportGeneratorArn:
          $ref: '#/components/schemas/String'
          description: The Amazon Resource Number (ARN) of the new report generator.
    CreateLicenseManagerReportGeneratorRequest:
      type: object
      required:
        - ReportGeneratorName
        - Type
        - ReportContext
        - ReportFrequency
        - ClientToken
      title: CreateLicenseManagerReportGeneratorRequest
      properties:
        ReportGeneratorName:
          $ref: '#/components/schemas/ReportGeneratorName'
          description: Name of the report generator.
        Type:
          $ref: '#/components/schemas/ReportTypeList'
          description: '<p>Type of reports to generate. The following report types an be generated:</p> <ul> <li> <p>License configuration report - Reports on the number and details of consumed licenses for a license configuration.</p> </li> <li> <p>Resource report - Reports on the tracked licenses and resource consumption for a license configuration.</p> </li> </ul>'
        ReportContext:
          $ref: '#/components/schemas/ReportContext'
          description: Defines the type of license configuration the report generator tracks.
        ReportFrequency:
          $ref: '#/components/schemas/ReportFrequency'
          description: 'Frequency by which reports are generated. Reports can be generated daily, monthly, or weekly.'
        ClientToken:
          $ref: '#/components/schemas/ClientRequestToken'
          description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'
        Description:
          $ref: '#/components/schemas/String'
          description: Description of the report generator.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: Tags to add to the report generator.
    CreateLicenseVersionResponse:
      type: object
      properties:
        LicenseArn:
          $ref: '#/components/schemas/Arn'
          description: License ARN.
        Version:
          $ref: '#/components/schemas/String'
          description: New version of the license.
        Status:
          $ref: '#/components/schemas/LicenseStatus'
          description: License status.
    CreateLicenseVersionRequest:
      type: object
      required:
        - LicenseArn
        - LicenseName
        - ProductName
        - Issuer
        - HomeRegion
        - Validity
        - Entitlements
        - ConsumptionConfiguration
        - Status
        - ClientToken
      title: CreateLicenseVersionRequest
      properties:
        LicenseArn:
          $ref: '#/components/schemas/Arn'
          description: Amazon Resource Name (ARN) of the license.
        LicenseName:
          $ref: '#/components/schemas/String'
          description: License name.
        ProductName:
          $ref: '#/components/schemas/String'
          description: Product name.
        Issuer:
          $ref: '#/components/schemas/Issuer'
          description: License issuer.
        HomeRegion:
          $ref: '#/components/schemas/String'
          description: Home Region of the license.
        Validity:
          $ref: '#/components/schemas/DatetimeRange'
          description: 'Date and time range during which the license is valid, in ISO8601-UTC format.'
        LicenseMetadata:
          $ref: '#/components/schemas/MetadataList'
          description: Information about the license.
        Entitlements:
          $ref: '#/components/schemas/EntitlementList'
          description: License entitlements.
        ConsumptionConfiguration:
          $ref: '#/components/schemas/ConsumptionConfiguration'
          description: Configuration for consumption of the license. Choose a provisional configuration for workloads running with continuous connectivity. Choose a borrow configuration for workloads with offline usage.
        Status:
          $ref: '#/components/schemas/LicenseStatus'
          description: License status.
        ClientToken:
          $ref: '#/components/schemas/ClientToken'
          description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'
        SourceVersion:
          $ref: '#/components/schemas/String'
          description: Current version of the license.
    CreateTokenResponse:
      type: object
      properties:
        TokenId:
          $ref: '#/components/schemas/String'
          description: Token ID.
        TokenType:
          $ref: '#/components/schemas/TokenType'
          description: Token type.
        Token:
          $ref: '#/components/schemas/TokenString'
          description: 'Refresh token, encoded as a JWT token.'
    CreateTokenRequest:
      type: object
      required:
        - LicenseArn
        - ClientToken
      title: CreateTokenRequest
      properties:
        LicenseArn:
          $ref: '#/components/schemas/Arn'
          description: Amazon Resource Name (ARN) of the license. The ARN is mapped to the aud claim of the JWT token.
        RoleArns:
          $ref: '#/components/schemas/ArnList'
          description: Amazon Resource Name (ARN) of the IAM roles to embed in the token. License Manager does not check whether the roles are in use.
        ExpirationInDays:
          $ref: '#/components/schemas/Integer'
          description: 'Token expiration, in days, counted from token creation. The default is 365 days.'
        TokenProperties:
          $ref: '#/components/schemas/MaxSize3StringList'
          description: Data specified by the caller to be included in the JWT token. The data is mapped to the amr claim of the JWT token.
        ClientToken:
          $ref: '#/components/schemas/ClientToken'
          description: 'Idempotency token, valid for 10 minutes.'
    DeleteGrantResponse:
      type: object
      properties:
        GrantArn:
          $ref: '#/components/schemas/Arn'
          description: Grant ARN.
        Status:
          $ref: '#/components/schemas/GrantStatus'
          description: Grant status.
        Version:
          $ref: '#/components/schemas/String'
          description: Grant version.
    DeleteGrantRequest:
      type: object
      required:
        - GrantArn
        - Version
      title: DeleteGrantRequest
      properties:
        GrantArn:
          $ref: '#/components/schemas/Arn'
          description: Amazon Resource Name (ARN) of the grant.
        StatusReason:
          $ref: '#/components/schemas/StatusReasonMessage'
        Version:
          $ref: '#/components/schemas/String'
          description: Current version of the grant.
    DeleteLicenseResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/LicenseDeletionStatus'
          description: License status.
        DeletionDate:
          $ref: '#/components/schemas/ISO8601DateTime'
          description: Date on which the license is deleted.
    DeleteLicenseRequest:
      type: object
      required:
        - LicenseArn
        - SourceVersion
      title: DeleteLicenseRequest
      properties:
        LicenseArn:
          $ref: '#/components/schemas/Arn'
          description: Amazon Resource Name (ARN) of the license.
        SourceVersion:
          $ref: '#/components/schemas/String'
          description: Current version of the license.
    DeleteLicenseConfigurationResponse:
      type: object
      properties: {}
    DeleteLicenseConfigurationRequest:
      type: object
      required:
        - LicenseConfigurationArn
      title: DeleteLicenseConfigurationRequest
      properties:
        LicenseConfigurationArn:
          $ref: '#/components/schemas/String'
          description: ID of the license configuration.
    DeleteLicenseManagerReportGeneratorResponse:
      type: object
      properties: {}
    DeleteLicenseManagerReportGeneratorRequest:
      type: object
      required:
        - LicenseManagerReportGeneratorArn
      title: DeleteLicenseManagerReportGeneratorRequest
      properties:
        LicenseManagerReportGeneratorArn:
          $ref: '#/components/schemas/String'
          description: Amazon Resource Number (ARN) of the report generator that will be deleted.
    DeleteTokenResponse:
      type: object
      properties: {}
    DeleteTokenRequest:
      type: object
      required:
        - TokenId
      title: DeleteTokenRequest
      properties:
        TokenId:
          $ref: '#/components/schemas/String'
          description: Token ID.
    ExtendLicenseConsumptionResponse:
      type: object
      properties:
        LicenseConsumptionToken:
          $ref: '#/components/schemas/String'
          description: License consumption token.
        Expiration:
          $ref: '#/components/schemas/ISO8601DateTime'
          description: Date and time at which the license consumption expires.
    ExtendLicenseConsumptionRequest:
      type: object
      required:
        - LicenseConsumptionToken
      title: ExtendLicenseConsumptionRequest
      properties:
        LicenseConsumptionToken:
          $ref: '#/components/schemas/String'
          description: License consumption token.
        DryRun:
          $ref: '#/components/schemas/Boolean'
          description: 'Checks whether you have the required permissions for the action, without actually making the request. Provides an error response if you do not have the required permissions.'
    GetAccessTokenResponse:
      type: object
      properties:
        AccessToken:
          $ref: '#/components/schemas/TokenString'
          description: Temporary access token.
    GetAccessTokenRequest:
      type: object
      required:
        - Token
      title: GetAccessTokenRequest
      properties:
        Token:
          $ref: '#/components/schemas/TokenString'
          description: 'Refresh token, encoded as a JWT token.'
        TokenProperties:
          $ref: '#/components/schemas/MaxSize3StringList'
          description: Token properties to validate against those present in the JWT token.
    GetGrantResponse:
      type: object
      properties:
        Grant:
          $ref: '#/components/schemas/Grant'
          description: Grant details.
    GetGrantRequest:
      type: object
      required:
        - GrantArn
      title: GetGrantRequest
      properties:
        GrantArn:
          $ref: '#/components/schemas/Arn'
          description: Amazon Resource Name (ARN) of the grant.
        Version:
          $ref: '#/components/schemas/String'
          description: Grant version.
    GetLicenseResponse:
      type: object
      properties:
        License:
          $ref: '#/components/schemas/License'
          description: License details.
    GetLicenseRequest:
      type: object
      required:
        - LicenseArn
      title: GetLicenseRequest
      properties:
        LicenseArn:
          $ref: '#/components/schemas/Arn'
          description: Amazon Resource Name (ARN) of the license.
        Version:
          $ref: '#/components/schemas/String'
          description: License version.
    GetLicenseConfigurationResponse:
      type: object
      properties:
        LicenseConfigurationId:
          $ref: '#/components/schemas/String'
          description: Unique ID for the license configuration.
        LicenseConfigurationArn:
          $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) of the license configuration.
        Name:
          $ref: '#/components/schemas/String'
          description: Name of the license configuration.
        Description:
          $ref: '#/components/schemas/String'
          description: Description of the license configuration.
        LicenseCountingType:
          $ref: '#/components/schemas/LicenseCountingType'
          description: Dimension on which the licenses are counted.
        LicenseRules:
          $ref: '#/components/schemas/StringList'
          description: License rules.
        LicenseCount:
          $ref: '#/components/schemas/BoxLong'
          description: Number of available licenses.
        LicenseCountHardLimit:
          $ref: '#/components/schemas/BoxBoolean'
          description: Sets the number of available licenses as a hard limit.
        ConsumedLicenses:
          $ref: '#/components/schemas/BoxLong'
          description: Number of licenses assigned to resources.
        Status:
          $ref: '#/components/schemas/String'
          description: License configuration status.
        OwnerAccountId:
          $ref: '#/components/schemas/String'
          description: Account ID of the owner of the license configuration.
        ConsumedLicenseSummaryList:
          $ref: '#/components/schemas/ConsumedLicenseSummaryList'
          description: Summaries of the licenses consumed by resources.
        ManagedResourceSummaryList:
          $ref: '#/components/schemas/ManagedResourceSummaryList'
          description: Summaries of the managed resources.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: Tags for the license configuration.
        ProductInformationList:
          $ref: '#/components/schemas/ProductInformationList'
          description: Product information.
        AutomatedDiscoveryInformation:
          $ref: '#/components/schemas/AutomatedDiscoveryInformation'
          description: Automated discovery information.
        DisassociateWhenNotFound:
          $ref: '#/components/schemas/BoxBoolean'
          description: 'When true, disassociates a resource when software is uninstalled.'
    GetLicenseConfigurationRequest:
      type: object
      required:
        - LicenseConfigurationArn
      title: GetLicenseConfigurationRequest
      properties:
        LicenseConfigurationArn:
          $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) of the license configuration.
    GetLicenseManagerReportGeneratorResponse:
      type: object
      properties:
        ReportGenerator:
          $ref: '#/components/schemas/ReportGenerator'
          description: A report generator that creates periodic reports on your license configurations.
    GetLicenseManagerReportGeneratorRequest:
      type: object
      required:
        - LicenseManagerReportGeneratorArn
      title: GetLicenseManagerReportGeneratorRequest
      properties:
        LicenseManagerReportGeneratorArn:
          $ref: '#/components/schemas/String'
          description: mazon Resource Number (ARN) of the report generator to retrieve information on.
    GetLicenseUsageResponse:
      type: object
      properties:
        LicenseUsage:
          $ref: '#/components/schemas/LicenseUsage'
          description: License usage details.
    GetLicenseUsageRequest:
      type: object
      required:
        - LicenseArn
      title: GetLicenseUsageRequest
      properties:
        LicenseArn:
          $ref: '#/components/schemas/Arn'
          description: Amazon Resource Name (ARN) of the license.
    GetServiceSettingsResponse:
      type: object
      properties:
        S3BucketArn:
          $ref: '#/components/schemas/String'
          description: 'Regional S3 bucket path for storing reports, license trail event data, discovery data, and so on.'
        SnsTopicArn:
          $ref: '#/components/schemas/String'
          description: SNS topic configured to receive notifications from License Manager.
        OrganizationConfiguration:
          $ref: '#/components/schemas/OrganizationConfiguration'
          description: Indicates whether AWS Organizations is integrated with License Manager for cross-account discovery.
        EnableCrossAccountsDiscovery:
          $ref: '#/components/schemas/BoxBoolean'
          description: Indicates whether cross-account discovery is enabled.
        LicenseManagerResourceShareArn:
          $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) of the AWS resource share. The License Manager management account provides member accounts with access to this share.
    GetServiceSettingsRequest:
      type: object
      title: GetServiceSettingsRequest
      properties: {}
    ListAssociationsForLicenseConfigurationResponse:
      type: object
      properties:
        LicenseConfigurationAssociations:
          $ref: '#/components/schemas/LicenseConfigurationAssociations'
          description: Information about the associations for the license configuration.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Token for the next set of results.
    ListAssociationsForLicenseConfigurationRequest:
      type: object
      required:
        - LicenseConfigurationArn
      title: ListAssociationsForLicenseConfigurationRequest
      properties:
        LicenseConfigurationArn:
          $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) of a license configuration.
        MaxResults:
          $ref: '#/components/schemas/BoxInteger'
          description: Maximum number of results to return in a single call.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Token for the next set of results.
    FilterLimitExceededException: {}
    ListDistributedGrantsResponse:
      type: object
      properties:
        Grants:
          $ref: '#/components/schemas/GrantList'
          description: Distributed grant details.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Token for the next set of results.
    ListDistributedGrantsRequest:
      type: object
      title: ListDistributedGrantsRequest
      properties:
        GrantArns:
          $ref: '#/components/schemas/ArnList'
          description: Amazon Resource Names (ARNs) of the grants.
        Filters:
          $ref: '#/components/schemas/FilterList'
          description: '<p>Filters to scope the results. The following filters are supported:</p> <ul> <li> <p> <code>LicenseArn</code> </p> </li> <li> <p> <code>GrantStatus</code> </p> </li> <li> <p> <code>GranteePrincipalARN</code> </p> </li> <li> <p> <code>ProductSKU</code> </p> </li> <li> <p> <code>LicenseIssuerName</code> </p> </li> </ul>'
        NextToken:
          $ref: '#/components/schemas/String'
          description: Token for the next set of results.
        MaxResults:
          $ref: '#/components/schemas/MaxSize100'
          description: Maximum number of results to return in a single call.
    ListFailuresForLicenseConfigurationOperationsResponse:
      type: object
      properties:
        LicenseOperationFailureList:
          $ref: '#/components/schemas/LicenseOperationFailureList'
          description: License configuration operations that failed.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Token for the next set of results.
    ListFailuresForLicenseConfigurationOperationsRequest:
      type: object
      required:
        - LicenseConfigurationArn
      title: ListFailuresForLicenseConfigurationOperationsRequest
      properties:
        LicenseConfigurationArn:
          $ref: '#/components/schemas/String'
          description: Amazon Resource Name of the license configuration.
        MaxResults:
          $ref: '#/components/schemas/BoxInteger'
          description: Maximum number of results to return in a single call.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Token for the next set of results.
    ListLicenseConfigurationsResponse:
      type: object
      properties:
        LicenseConfigurations:
          $ref: '#/components/schemas/LicenseConfigurations'
          description: Information about the license configurations.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Token for the next set of results.
    ListLicenseConfigurationsRequest:
      type: object
      title: ListLicenseConfigurationsRequest
      properties:
        LicenseConfigurationArns:
          $ref: '#/components/schemas/StringList'
          description: Amazon Resource Names (ARN) of the license configurations.
        MaxResults:
          $ref: '#/components/schemas/BoxInteger'
          description: Maximum number of results to return in a single call.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Token for the next set of results.
        Filters:
          $ref: '#/components/schemas/Filters'
          description: '<p>Filters to scope the results. The following filters and logical operators are supported:</p> <ul> <li> <p> <code>licenseCountingType</code> - The dimension on which licenses are counted. Possible values are <code>vCPU</code> | <code>Instance</code> | <code>Core</code> | <code>Socket</code>. Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.</p> </li> <li> <p> <code>enforceLicenseCount</code> - A Boolean value that indicates whether hard license enforcement is used. Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.</p> </li> <li> <p> <code>usagelimitExceeded</code> - A Boolean value that indicates whether the available licenses have been exceeded. Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.</p> </li> </ul>'
    ListLicenseManagerReportGeneratorsResponse:
      type: object
      properties:
        ReportGenerators:
          $ref: '#/components/schemas/ReportGeneratorList'
          description: A report generator that creates periodic reports on your license configurations.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Token for the next set of results.
    ListLicenseManagerReportGeneratorsRequest:
      type: object
      title: ListLicenseManagerReportGeneratorsRequest
      properties:
        Filters:
          $ref: '#/components/schemas/FilterList'
          description: '<p>Filters to scope the results. The following filters are supported: </p> <ul> <li> <p> <code>LicenseConfigurationArn</code> </p> </li> </ul>'
        NextToken:
          $ref: '#/components/schemas/String'
          description: Token for the next set of results.
        MaxResults:
          $ref: '#/components/schemas/MaxSize100'
          description: Maximum number of results to return in a single call.
    ListLicenseSpecificationsForResourceResponse:
      type: object
      properties:
        LicenseSpecifications:
          $ref: '#/components/schemas/LicenseSpecifications'
          description: License configurations associated with a resource.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Token for the next set of results.
    ListLicenseSpecificationsForResourceRequest:
      type: object
      required:
        - ResourceArn
      title: ListLicenseSpecificationsForResourceRequest
      properties:
        ResourceArn:
          $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) of a resource that has an associated license configuration.
        MaxResults:
          $ref: '#/components/schemas/BoxInteger'
          description: Maximum number of results to return in a single call.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Token for the next set of results.
    ListLicenseVersionsResponse:
      type: object
      properties:
        Licenses:
          $ref: '#/components/schemas/LicenseList'
          description: License details.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Token for the next set of results.
    ListLicenseVersionsRequest:
      type: object
      required:
        - LicenseArn
      title: ListLicenseVersionsRequest
      properties:
        LicenseArn:
          $ref: '#/components/schemas/Arn'
          description: Amazon Resource Name (ARN) of the license.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Token for the next set of results.
        MaxResults:
          $ref: '#/components/schemas/MaxSize100'
          description: Maximum number of results to return in a single call.
    ListLicensesResponse:
      type: object
      properties:
        Licenses:
          $ref: '#/components/schemas/LicenseList'
          description: License details.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Token for the next set of results.
    ListLicensesRequest:
      type: object
      title: ListLicensesRequest
      properties:
        LicenseArns:
          $ref: '#/components/schemas/ArnList'
          description: Amazon Resource Names (ARNs) of the licenses.
        Filters:
          $ref: '#/components/schemas/FilterList'
          description: '<p>Filters to scope the results. The following filters are supported:</p> <ul> <li> <p> <code>Beneficiary</code> </p> </li> <li> <p> <code>ProductSKU</code> </p> </li> <li> <p> <code>Fingerprint</code> </p> </li> <li> <p> <code>Status</code> </p> </li> </ul>'
        NextToken:
          $ref: '#/components/schemas/String'
          description: Token for the next set of results.
        MaxResults:
          $ref: '#/components/schemas/MaxSize100'
          description: Maximum number of results to return in a single call.
    ListReceivedGrantsResponse:
      type: object
      properties:
        Grants:
          $ref: '#/components/schemas/GrantList'
          description: Received grant details.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Token for the next set of results.
    ListReceivedGrantsRequest:
      type: object
      title: ListReceivedGrantsRequest
      properties:
        GrantArns:
          $ref: '#/components/schemas/ArnList'
          description: Amazon Resource Names (ARNs) of the grants.
        Filters:
          $ref: '#/components/schemas/FilterList'
          description: '<p>Filters to scope the results. The following filters are supported:</p> <ul> <li> <p> <code>ProductSKU</code> </p> </li> <li> <p> <code>LicenseIssuerName</code> </p> </li> <li> <p> <code>LicenseArn</code> </p> </li> <li> <p> <code>GrantStatus</code> </p> </li> <li> <p> <code>GranterAccountId</code> </p> </li> </ul>'
        NextToken:
          $ref: '#/components/schemas/String'
          description: Token for the next set of results.
        MaxResults:
          $ref: '#/components/schemas/MaxSize100'
          description: Maximum number of results to return in a single call.
    ListReceivedLicensesResponse:
      type: object
      properties:
        Licenses:
          $ref: '#/components/schemas/GrantedLicenseList'
          description: Received license details.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Token for the next set of results.
    ListReceivedLicensesRequest:
      type: object
      title: ListReceivedLicensesRequest
      properties:
        LicenseArns:
          $ref: '#/components/schemas/ArnList'
          description: Amazon Resource Names (ARNs) of the licenses.
        Filters:
          $ref: '#/components/schemas/FilterList'
          description: '<p>Filters to scope the results. The following filters are supported:</p> <ul> <li> <p> <code>ProductSKU</code> </p> </li> <li> <p> <code>Status</code> </p> </li> <li> <p> <code>Fingerprint</code> </p> </li> <li> <p> <code>IssuerName</code> </p> </li> <li> <p> <code>Beneficiary</code> </p> </li> </ul>'
        NextToken:
          $ref: '#/components/schemas/String'
          description: Token for the next set of results.
        MaxResults:
          $ref: '#/components/schemas/MaxSize100'
          description: Maximum number of results to return in a single call.
    ListResourceInventoryResponse:
      type: object
      properties:
        ResourceInventoryList:
          $ref: '#/components/schemas/ResourceInventoryList'
          description: Information about the resources.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Token for the next set of results.
    ListResourceInventoryRequest:
      type: object
      title: ListResourceInventoryRequest
      properties:
        MaxResults:
          $ref: '#/components/schemas/BoxInteger'
          description: Maximum number of results to return in a single call.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Token for the next set of results.
        Filters:
          $ref: '#/components/schemas/InventoryFilterList'
          description: '<p>Filters to scope the results. The following filters and logical operators are supported:</p> <ul> <li> <p> <code>account_id</code> - The ID of the AWS account that owns the resource. Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.</p> </li> <li> <p> <code>application_name</code> - The name of the application. Logical operators are <code>EQUALS</code> | <code>BEGINS_WITH</code>.</p> </li> <li> <p> <code>license_included</code> - The type of license included. Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>. Possible values are <code>sql-server-enterprise</code> | <code>sql-server-standard</code> | <code>sql-server-web</code> | <code>windows-server-datacenter</code>.</p> </li> <li> <p> <code>platform</code> - The platform of the resource. Logical operators are <code>EQUALS</code> | <code>BEGINS_WITH</code>.</p> </li> <li> <p> <code>resource_id</code> - The ID of the resource. Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.</p> </li> <li> <p> <code>tag:&lt;key&gt;</code> - The key/value combination of a tag assigned to the resource. Logical operators are <code>EQUALS</code> (single account) or <code>EQUALS</code> | <code>NOT_EQUALS</code> (cross account).</p> </li> </ul>'
    FailedDependencyException: {}
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          $ref: '#/components/schemas/TagList'
          description: Information about the tags.
    ListTagsForResourceRequest:
      type: object
      required:
        - ResourceArn
      title: ListTagsForResourceRequest
      properties:
        ResourceArn:
          $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) of the license configuration.
    ListTokensResponse:
      type: object
      properties:
        Tokens:
          $ref: '#/components/schemas/TokenList'
          description: Received token details.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Token for the next set of results.
    ListTokensRequest:
      type: object
      title: ListTokensRequest
      properties:
        TokenIds:
          $ref: '#/components/schemas/StringList'
          description: Token IDs.
        Filters:
          $ref: '#/components/schemas/FilterList'
          description: '<p>Filters to scope the results. The following filter is supported:</p> <ul> <li> <p> <code>LicenseArns</code> </p> </li> </ul>'
        NextToken:
          $ref: '#/components/schemas/String'
          description: Token for the next set of results.
        MaxResults:
          $ref: '#/components/schemas/MaxSize100'
          description: Maximum number of results to return in a single call.
    ListUsageForLicenseConfigurationResponse:
      type: object
      properties:
        LicenseConfigurationUsageList:
          $ref: '#/components/schemas/LicenseConfigurationUsageList'
          description: Information about the license configurations.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Token for the next set of results.
    ListUsageForLicenseConfigurationRequest:
      type: object
      required:
        - LicenseConfigurationArn
      title: ListUsageForLicenseConfigurationRequest
      properties:
        LicenseConfigurationArn:
          $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) of the license configuration.
        MaxResults:
          $ref: '#/components/schemas/BoxInteger'
          description: Maximum number of results to return in a single call.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Token for the next set of results.
        Filters:
          $ref: '#/components/schemas/Filters'
          description: '<p>Filters to scope the results. The following filters and logical operators are supported:</p> <ul> <li> <p> <code>resourceArn</code> - The ARN of the license configuration resource. Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.</p> </li> <li> <p> <code>resourceType</code> - The resource type (<code>EC2_INSTANCE</code> | <code>EC2_HOST</code> | <code>EC2_AMI</code> | <code>SYSTEMS_MANAGER_MANAGED_INSTANCE</code>). Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.</p> </li> <li> <p> <code>resourceAccount</code> - The ID of the account that owns the resource. Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.</p> </li> </ul>'
    RejectGrantResponse:
      type: object
      properties:
        GrantArn:
          $ref: '#/components/schemas/Arn'
          description: Grant ARN.
        Status:
          $ref: '#/components/schemas/GrantStatus'
          description: Grant status.
        Version:
          $ref: '#/components/schemas/String'
          description: Grant version.
    RejectGrantRequest:
      type: object
      required:
        - GrantArn
      title: RejectGrantRequest
      properties:
        GrantArn:
          $ref: '#/components/schemas/Arn'
          description: Amazon Resource Name (ARN) of the grant.
    TagResourceResponse:
      type: object
      properties: {}
    TagResourceRequest:
      type: object
      required:
        - ResourceArn
        - Tags
      title: TagResourceRequest
      properties:
        ResourceArn:
          $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) of the license configuration.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: One or more tags.
    UntagResourceResponse:
      type: object
      properties: {}
    UntagResourceRequest:
      type: object
      required:
        - ResourceArn
        - TagKeys
      title: UntagResourceRequest
      properties:
        ResourceArn:
          $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) of the license configuration.
        TagKeys:
          $ref: '#/components/schemas/TagKeyList'
          description: Keys identifying the tags to remove.
    UpdateLicenseConfigurationResponse:
      type: object
      properties: {}
    UpdateLicenseConfigurationRequest:
      type: object
      required:
        - LicenseConfigurationArn
      title: UpdateLicenseConfigurationRequest
      properties:
        LicenseConfigurationArn:
          $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) of the license configuration.
        LicenseConfigurationStatus:
          $ref: '#/components/schemas/LicenseConfigurationStatus'
          description: New status of the license configuration.
        LicenseRules:
          $ref: '#/components/schemas/StringList'
          description: New license rule. The only rule that you can add after you create a license configuration is licenseAffinityToHost.
        LicenseCount:
          $ref: '#/components/schemas/BoxLong'
          description: New number of licenses managed by the license configuration.
        LicenseCountHardLimit:
          $ref: '#/components/schemas/BoxBoolean'
          description: New hard limit of the number of available licenses.
        Name:
          $ref: '#/components/schemas/String'
          description: New name of the license configuration.
        Description:
          $ref: '#/components/schemas/String'
          description: New description of the license configuration.
        ProductInformationList:
          $ref: '#/components/schemas/ProductInformationList'
          description: New product information.
        DisassociateWhenNotFound:
          $ref: '#/components/schemas/BoxBoolean'
          description: 'When true, disassociates a resource when software is uninstalled.'
    UpdateLicenseManagerReportGeneratorResponse:
      type: object
      properties: {}
    UpdateLicenseManagerReportGeneratorRequest:
      type: object
      required:
        - LicenseManagerReportGeneratorArn
        - ReportGeneratorName
        - Type
        - ReportContext
        - ReportFrequency
        - ClientToken
      title: UpdateLicenseManagerReportGeneratorRequest
      properties:
        LicenseManagerReportGeneratorArn:
          $ref: '#/components/schemas/String'
          description: Amazon Resource Number (ARN) of the report generator to update.
        ReportGeneratorName:
          $ref: '#/components/schemas/ReportGeneratorName'
          description: Name of the report generator.
        Type:
          $ref: '#/components/schemas/ReportTypeList'
          description: '<p>Type of reports to generate. The following report types an be generated:</p> <ul> <li> <p>License configuration report - Reports on the number and details of consumed licenses for a license configuration.</p> </li> <li> <p>Resource report - Reports on the tracked licenses and resource consumption for a license configuration.</p> </li> </ul>'
        ReportContext:
          $ref: '#/components/schemas/ReportContext'
          description: '?'
        ReportFrequency:
          $ref: '#/components/schemas/ReportFrequency'
          description: '<p>Frequency by which reports are generated. The following options are avaiable:</p> <p>??? What are the APi value options?</p>'
        ClientToken:
          $ref: '#/components/schemas/ClientRequestToken'
          description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'
        Description:
          $ref: '#/components/schemas/String'
          description: Description of the report generator.
    UpdateLicenseSpecificationsForResourceResponse:
      type: object
      properties: {}
    UpdateLicenseSpecificationsForResourceRequest:
      type: object
      required:
        - ResourceArn
      title: UpdateLicenseSpecificationsForResourceRequest
      properties:
        ResourceArn:
          $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) of the AWS resource.
        AddLicenseSpecifications:
          $ref: '#/components/schemas/LicenseSpecifications'
          description: ARNs of the license configurations to add.
        RemoveLicenseSpecifications:
          $ref: '#/components/schemas/LicenseSpecifications'
          description: ARNs of the license configurations to remove.
    InvalidResourceStateException: {}
    LicenseUsageException: {}
    UpdateServiceSettingsResponse:
      type: object
      properties: {}
    UpdateServiceSettingsRequest:
      type: object
      title: UpdateServiceSettingsRequest
      properties:
        S3BucketArn:
          $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) of the Amazon S3 bucket where the License Manager information is stored.
        SnsTopicArn:
          $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) of the Amazon SNS topic used for License Manager alerts.
        OrganizationConfiguration:
          $ref: '#/components/schemas/OrganizationConfiguration'
          description: Enables integration with AWS Organizations for cross-account discovery.
        EnableCrossAccountsDiscovery:
          $ref: '#/components/schemas/BoxBoolean'
          description: Activates cross-account discovery.
    Arn:
      type: string
      pattern: '^arn:aws(-(cn|us-gov|iso-b|iso-c|iso-d))?:[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}$'
      maxLength: 2048
    GrantStatus:
      type: string
      enum:
        - PENDING_WORKFLOW
        - PENDING_ACCEPT
        - REJECTED
        - ACTIVE
        - FAILED_WORKFLOW
        - DELETED
        - PENDING_DELETE
        - DISABLED
        - WORKFLOW_COMPLETED
    String:
      type: string
    AllowedOperation:
      type: string
      enum:
        - CreateGrant
        - CheckoutLicense
        - CheckoutBorrowLicense
        - CheckInLicense
        - ExtendConsumptionLicense
        - ListPurchasedLicenses
        - CreateToken
    AllowedOperationList:
      type: array
      items:
        $ref: '#/components/schemas/AllowedOperation'
      minItems: 1
      maxItems: 7
    ArnList:
      type: array
      items:
        $ref: '#/components/schemas/Arn'
    DateTime:
      type: string
      format: date-time
    AutomatedDiscoveryInformation:
      type: object
      properties:
        LastRunTime:
          $ref: '#/components/schemas/DateTime'
          description: Time that automated discovery last ran.
      description: Describes automated discovery.
    Boolean:
      type: boolean
    BoxBoolean:
      type: boolean
    BoxInteger:
      type: integer
    BorrowConfiguration:
      type: object
      required:
        - AllowEarlyCheckIn
        - MaxTimeToLiveInMinutes
      properties:
        AllowEarlyCheckIn:
          $ref: '#/components/schemas/BoxBoolean'
          description: Indicates whether early check-ins are allowed.
        MaxTimeToLiveInMinutes:
          $ref: '#/components/schemas/BoxInteger'
          description: 'Maximum time for the borrow configuration, in minutes.'
      description: Details about a borrow configuration.
    BoxLong:
      type: integer
    EntitlementDataList:
      type: array
      items:
        $ref: '#/components/schemas/EntitlementData'
    DigitalSignatureMethod:
      type: string
      enum:
        - JWT_PS384
    MetadataList:
      type: array
      items:
        $ref: '#/components/schemas/Metadata'
    ClientToken:
      type: string
      pattern: \S+
      maxLength: 2048
    SignedToken:
      type: string
      minLength: 4096
    ISO8601DateTime:
      type: string
      pattern: '^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[0-1]|0[1-9]|[1-2][0-9])T(2[0-3]|[0-1][0-9]):([0-5][0-9]):([0-5][0-9])(\.[0-9]+)?(Z|[+-](?:2[ 0-3]|[0-1][0-9]):[0-5][0-9])+$'
      maxLength: 50
    CheckoutType:
      type: string
      enum:
        - PROVISIONAL
        - PERPETUAL
    ClientRequestToken:
      type: string
      minLength: 1
      maxLength: 36
    ResourceType:
      type: string
      enum:
        - EC2_INSTANCE
        - EC2_HOST
        - EC2_AMI
        - RDS
        - SYSTEMS_MANAGER_MANAGED_INSTANCE
    ConsumedLicenseSummary:
      type: object
      properties:
        ResourceType:
          $ref: '#/components/schemas/ResourceType'
          description: Resource type of the resource consuming a license.
        ConsumedLicenses:
          $ref: '#/components/schemas/BoxLong'
          description: Number of licenses consumed by the resource.
      description: Details about license consumption.
    ConsumedLicenseSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ConsumedLicenseSummary'
    RenewType:
      type: string
      enum:
        - None
        - Weekly
        - Monthly
    ProvisionalConfiguration:
      type: object
      required:
        - MaxTimeToLiveInMinutes
      properties:
        MaxTimeToLiveInMinutes:
          $ref: '#/components/schemas/BoxInteger'
          description: 'Maximum time for the provisional configuration, in minutes.'
      description: Details about a provisional configuration.
    ConsumptionConfiguration:
      type: object
      properties:
        RenewType:
          $ref: '#/components/schemas/RenewType'
          description: Renewal frequency.
        ProvisionalConfiguration:
          $ref: '#/components/schemas/ProvisionalConfiguration'
          description: Details about a provisional configuration.
        BorrowConfiguration:
          $ref: '#/components/schemas/BorrowConfiguration'
          description: Details about a borrow configuration.
      description: Details about a consumption configuration.
    PrincipalArnList:
      type: array
      items:
        $ref: '#/components/schemas/Arn'
      minItems: 1
      maxItems: 1
    StatusReasonMessage:
      type: string
      pattern: '[\s\S]+'
      maxLength: 400
    LicenseCountingType:
      type: string
      enum:
        - vCPU
        - Instance
        - Core
        - Socket
    StringList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    ProductInformationList:
      type: array
      items:
        $ref: '#/components/schemas/ProductInformation'
    ReportGeneratorName:
      type: string
      minLength: 1
      maxLength: 100
    ReportTypeList:
      type: array
      items:
        $ref: '#/components/schemas/ReportType'
    ReportContext:
      type: object
      required:
        - licenseConfigurationArns
      properties:
        licenseConfigurationArns:
          $ref: '#/components/schemas/ArnList'
          description: Amazon Resource Number (ARN) of the license configuration that this generator reports on.
      description: Details of the license configuration that this generator reports on.
    ReportFrequency:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/Integer'
          description: Number of times within the frequency period that a report will be generated. Currently only <code>1</code> is supported.
        period:
          $ref: '#/components/schemas/ReportFrequencyType'
          description: 'Time period between each report. The period can be daily, weekly, or monthly.'
      description: Details on how frequently reports are generated.
    Issuer:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/String'
          description: Issuer name.
        SignKey:
          $ref: '#/components/schemas/String'
          description: 'Asymmetric CMK from AWS Key Management Service. The CMK must have a key usage of sign and verify, and support the RSASSA-PSS SHA-256 signing algorithm.'
      description: Details about the issuer of a license.
    DatetimeRange:
      type: object
      required:
        - Begin
      properties:
        Begin:
          $ref: '#/components/schemas/ISO8601DateTime'
          description: Start of the time range.
        End:
          $ref: '#/components/schemas/ISO8601DateTime'
          description: End of the time range.
      description: 'Describes a time range, in ISO8601-UTC format.'
    EntitlementList:
      type: array
      items:
        $ref: '#/components/schemas/Entitlement'
    LicenseStatus:
      type: string
      enum:
        - AVAILABLE
        - PENDING_AVAILABLE
        - DEACTIVATED
        - SUSPENDED
        - EXPIRED
        - PENDING_DELETE
        - DELETED
    Integer:
      type: integer
    MaxSize3StringList:
      type: array
      items:
        $ref: '#/components/schemas/String'
      maxItems: 3
    TokenType:
      type: string
      enum:
        - REFRESH_TOKEN
    TokenString:
      type: string
      pattern: \S+
      maxLength: 4096
    LicenseDeletionStatus:
      type: string
      enum:
        - PENDING_DELETE
        - DELETED
    Long:
      type: integer
    EntitlementUnit:
      type: string
      enum:
        - Count
        - None
        - Seconds
        - Microseconds
        - Milliseconds
        - Bytes
        - Kilobytes
        - Megabytes
        - Gigabytes
        - Terabytes
        - Bits
        - Kilobits
        - Megabits
        - Gigabits
        - Terabits
        - Percent
        - Bytes/Second
        - Kilobytes/Second
        - Megabytes/Second
        - Gigabytes/Second
        - Terabytes/Second
        - Bits/Second
        - Kilobits/Second
        - Megabits/Second
        - Gigabits/Second
        - Terabits/Second
        - Count/Second
    Entitlement:
      type: object
      required:
        - Name
        - Unit
      properties:
        Name:
          $ref: '#/components/schemas/String'
          description: Entitlement name.
        Value:
          $ref: '#/components/schemas/String'
          description: Entitlement resource. Use only if the unit is None.
        MaxCount:
          $ref: '#/components/schemas/Long'
          description: Maximum entitlement count. Use if the unit is not None.
        Overage:
          $ref: '#/components/schemas/BoxBoolean'
          description: Indicates whether overages are allowed.
        Unit:
          $ref: '#/components/schemas/EntitlementUnit'
          description: Entitlement unit.
        AllowCheckIn:
          $ref: '#/components/schemas/BoxBoolean'
          description: Indicates whether check-ins are allowed.
      description: Describes a resource entitled for use with a license.
    EntitlementDataUnit:
      type: string
      enum:
        - Count
        - None
        - Seconds
        - Microseconds
        - Milliseconds
        - Bytes
        - Kilobytes
        - Megabytes
        - Gigabytes
        - Terabytes
        - Bits
        - Kilobits
        - Megabits
        - Gigabits
        - Terabits
        - Percent
        - Bytes/Second
        - Kilobytes/Second
        - Megabytes/Second
        - Gigabytes/Second
        - Terabytes/Second
        - Bits/Second
        - Kilobits/Second
        - Megabits/Second
        - Gigabits/Second
        - Terabits/Second
        - Count/Second
    EntitlementData:
      type: object
      required:
        - Name
        - Unit
      properties:
        Name:
          $ref: '#/components/schemas/String'
          description: Entitlement data name.
        Value:
          $ref: '#/components/schemas/String'
          description: Entitlement data value.
        Unit:
          $ref: '#/components/schemas/EntitlementDataUnit'
          description: Entitlement data unit.
      description: Data associated with an entitlement resource.
    EntitlementUsage:
      type: object
      required:
        - Name
        - ConsumedValue
        - Unit
      properties:
        Name:
          $ref: '#/components/schemas/String'
          description: Entitlement usage name.
        ConsumedValue:
          $ref: '#/components/schemas/String'
          description: Resource usage consumed.
        MaxCount:
          $ref: '#/components/schemas/String'
          description: Maximum entitlement usage count.
        Unit:
          $ref: '#/components/schemas/EntitlementDataUnit'
          description: Entitlement usage unit.
      description: Usage associated with an entitlement resource.
    EntitlementUsageList:
      type: array
      items:
        $ref: '#/components/schemas/EntitlementUsage'
    FilterName:
      type: string
    FilterValues:
      type: array
      items:
        $ref: '#/components/schemas/FilterValue'
    Filter:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/FilterName'
          description: Name of the filter. Filter names are case-sensitive.
        Values:
          $ref: '#/components/schemas/FilterValues'
          description: Filter values. Filter values are case-sensitive.
      description: 'A filter name and value pair that is used to return more specific results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs.'
    FilterList:
      type: array
      items:
        $ref: '#/components/schemas/Filter'
    FilterValue:
      type: string
    Filters:
      type: array
      items:
        $ref: '#/components/schemas/Filter'
    Grant:
      type: object
      required:
        - GrantArn
        - GrantName
        - ParentArn
        - LicenseArn
        - GranteePrincipalArn
        - HomeRegion
        - GrantStatus
        - Version
        - GrantedOperations
      properties:
        GrantArn:
          $ref: '#/components/schemas/Arn'
          description: Amazon Resource Name (ARN) of the grant.
        GrantName:
          $ref: '#/components/schemas/String'
          description: Grant name.
        ParentArn:
          $ref: '#/components/schemas/Arn'
          description: Parent ARN.
        LicenseArn:
          $ref: '#/components/schemas/Arn'
          description: License ARN.
        GranteePrincipalArn:
          $ref: '#/components/schemas/Arn'
          description: The grantee principal ARN.
        HomeRegion:
          $ref: '#/components/schemas/String'
          description: Home Region of the grant.
        GrantStatus:
          $ref: '#/components/schemas/GrantStatus'
          description: Grant status.
        StatusReason:
          $ref: '#/components/schemas/StatusReasonMessage'
          description: Grant status reason.
        Version:
          $ref: '#/components/schemas/String'
          description: Grant version.
        GrantedOperations:
          $ref: '#/components/schemas/AllowedOperationList'
          description: Granted operations.
      description: Describes a grant.
    ManagedResourceSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ManagedResourceSummary'
    ReportGenerator:
      type: object
      properties:
        ReportGeneratorName:
          $ref: '#/components/schemas/String'
          description: Name of the report generator.
        ReportType:
          $ref: '#/components/schemas/ReportTypeList'
          description: Type of reports that are generated.
        ReportContext:
          $ref: '#/components/schemas/ReportContext'
          description: License configuration type this generator reports on.
        ReportFrequency:
          $ref: '#/components/schemas/ReportFrequency'
          description: Details on how frequently reports are generated.
        LicenseManagerReportGeneratorArn:
          $ref: '#/components/schemas/String'
          description: Amazon Resource Number (ARN) of the report generator.
        LastRunStatus:
          $ref: '#/components/schemas/String'
          description: Status of the last report generation attempt.
        LastRunFailureReason:
          $ref: '#/components/schemas/String'
          description: Failure message for the last report generation attempt.
        LastReportGenerationTime:
          $ref: '#/components/schemas/String'
          description: Time the last report was generated at.
        ReportCreatorAccount:
          $ref: '#/components/schemas/String'
          description: The AWS account ID used to create the report generator.
        Description:
          $ref: '#/components/schemas/String'
          description: Description of the report generator.
        S3Location:
          $ref: '#/components/schemas/S3Location'
          description: Details of the S3 bucket that report generator reports are published to.
        CreateTime:
          $ref: '#/components/schemas/String'
          description: Time the report was created.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: Tags associated with the report generator.
      description: Describe the details of a report generator.
    License:
      type: object
      properties:
        LicenseArn:
          $ref: '#/components/schemas/Arn'
          description: Amazon Resource Name (ARN) of the license.
        LicenseName:
          $ref: '#/components/schemas/String'
          description: License name.
        ProductName:
          $ref: '#/components/schemas/String'
          description: Product name.
        ProductSKU:
          $ref: '#/components/schemas/String'
          description: Product SKU.
        Issuer:
          $ref: '#/components/schemas/IssuerDetails'
          description: License issuer.
        HomeRegion:
          $ref: '#/components/schemas/String'
          description: Home Region of the license.
        Status:
          $ref: '#/components/schemas/LicenseStatus'
          description: License status.
        Validity:
          $ref: '#/components/schemas/DatetimeRange'
          description: 'Date and time range during which the license is valid, in ISO8601-UTC format.'
        Beneficiary:
          $ref: '#/components/schemas/String'
          description: License beneficiary.
        Entitlements:
          $ref: '#/components/schemas/EntitlementList'
          description: License entitlements.
        ConsumptionConfiguration:
          $ref: '#/components/schemas/ConsumptionConfiguration'
          description: Configuration for consumption of the license.
        LicenseMetadata:
          $ref: '#/components/schemas/MetadataList'
          description: License metadata.
        CreateTime:
          $ref: '#/components/schemas/ISO8601DateTime'
          description: License creation time.
        Version:
          $ref: '#/components/schemas/String'
          description: License version.
      description: Software license that is managed in AWS License Manager.
    LicenseUsage:
      type: object
      properties:
        EntitlementUsages:
          $ref: '#/components/schemas/EntitlementUsageList'
          description: License entitlement usages.
      description: Describes the entitlement usage associated with a license.
    OrganizationConfiguration:
      type: object
      required:
        - EnableIntegration
      properties:
        EnableIntegration:
          $ref: '#/components/schemas/Boolean'
          description: Enables AWS Organization integration.
      description: Configuration information for AWS Organizations.
    GrantList:
      type: array
      items:
        $ref: '#/components/schemas/Grant'
    IssuerDetails:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/String'
          description: Issuer name.
        SignKey:
          $ref: '#/components/schemas/String'
          description: 'Asymmetric CMK from AWS Key Management Service. The CMK must have a key usage of sign and verify, and support the RSASSA-PSS SHA-256 signing algorithm.'
        KeyFingerprint:
          $ref: '#/components/schemas/String'
          description: Issuer key fingerprint.
      description: Details associated with the issuer of a license.
    ReceivedMetadata:
      type: object
      properties:
        ReceivedStatus:
          $ref: '#/components/schemas/ReceivedStatus'
          description: Received status.
        ReceivedStatusReason:
          $ref: '#/components/schemas/StatusReasonMessage'
        AllowedOperations:
          $ref: '#/components/schemas/AllowedOperationList'
          description: Allowed operations.
      description: Metadata associated with received licenses and grants.
    GrantedLicense:
      type: object
      properties:
        LicenseArn:
          $ref: '#/components/schemas/Arn'
          description: Amazon Resource Name (ARN) of the license.
        LicenseName:
          $ref: '#/components/schemas/String'
          description: License name.
        ProductName:
          $ref: '#/components/schemas/String'
          description: Product name.
        ProductSKU:
          $ref: '#/components/schemas/String'
          description: Product SKU.
        Issuer:
          $ref: '#/components/schemas/IssuerDetails'
          description: Granted license issuer.
        HomeRegion:
          $ref: '#/components/schemas/String'
          description: Home Region of the granted license.
        Status:
          $ref: '#/components/schemas/LicenseStatus'
          description: Granted license status.
        Validity:
          $ref: '#/components/schemas/DatetimeRange'
          description: 'Date and time range during which the granted license is valid, in ISO8601-UTC format.'
        Beneficiary:
          $ref: '#/components/schemas/String'
          description: Granted license beneficiary.
        Entitlements:
          $ref: '#/components/schemas/EntitlementList'
          description: License entitlements.
        ConsumptionConfiguration:
          $ref: '#/components/schemas/ConsumptionConfiguration'
          description: Configuration for consumption of the license.
        LicenseMetadata:
          $ref: '#/components/schemas/MetadataList'
          description: Granted license metadata.
        CreateTime:
          $ref: '#/components/schemas/ISO8601DateTime'
          description: Creation time of the granted license.
        Version:
          $ref: '#/components/schemas/String'
          description: Version of the granted license.
        ReceivedMetadata:
          $ref: '#/components/schemas/ReceivedMetadata'
          description: Granted license received metadata.
      description: Describes a license that is granted to a grantee.
    GrantedLicenseList:
      type: array
      items:
        $ref: '#/components/schemas/GrantedLicense'
    InventoryFilterCondition:
      type: string
      enum:
        - EQUALS
        - NOT_EQUALS
        - BEGINS_WITH
        - CONTAINS
    InventoryFilter:
      type: object
      required:
        - Name
        - Condition
      properties:
        Name:
          $ref: '#/components/schemas/String'
          description: Name of the filter.
        Condition:
          $ref: '#/components/schemas/InventoryFilterCondition'
          description: Condition of the filter.
        Value:
          $ref: '#/components/schemas/String'
          description: Value of the filter.
      description: An inventory filter.
    InventoryFilterList:
      type: array
      items:
        $ref: '#/components/schemas/InventoryFilter'
    LicenseConfiguration:
      type: object
      properties:
        LicenseConfigurationId:
          $ref: '#/components/schemas/String'
          description: Unique ID of the license configuration.
        LicenseConfigurationArn:
          $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) of the license configuration.
        Name:
          $ref: '#/components/schemas/String'
          description: Name of the license configuration.
        Description:
          $ref: '#/components/schemas/String'
          description: Description of the license configuration.
        LicenseCountingType:
          $ref: '#/components/schemas/LicenseCountingType'
          description: Dimension to use to track the license inventory.
        LicenseRules:
          $ref: '#/components/schemas/StringList'
          description: License rules.
        LicenseCount:
          $ref: '#/components/schemas/BoxLong'
          description: Number of licenses managed by the license configuration.
        LicenseCountHardLimit:
          $ref: '#/components/schemas/BoxBoolean'
          description: Number of available licenses as a hard limit.
        DisassociateWhenNotFound:
          $ref: '#/components/schemas/BoxBoolean'
          description: 'When true, disassociates a resource when software is uninstalled.'
        ConsumedLicenses:
          $ref: '#/components/schemas/BoxLong'
          description: 'Number of licenses consumed. '
        Status:
          $ref: '#/components/schemas/String'
          description: Status of the license configuration.
        OwnerAccountId:
          $ref: '#/components/schemas/String'
          description: Account ID of the license configuration's owner.
        ConsumedLicenseSummaryList:
          $ref: '#/components/schemas/ConsumedLicenseSummaryList'
          description: Summaries for licenses consumed by various resources.
        ManagedResourceSummaryList:
          $ref: '#/components/schemas/ManagedResourceSummaryList'
          description: Summaries for managed resources.
        ProductInformationList:
          $ref: '#/components/schemas/ProductInformationList'
          description: Product information.
        AutomatedDiscoveryInformation:
          $ref: '#/components/schemas/AutomatedDiscoveryInformation'
          description: Automated discovery information.
      description: 'A license configuration is an abstraction of a customer license agreement that can be consumed and enforced by License Manager. Components include specifications for the license type (licensing by instance, socket, CPU, or vCPU), allowed tenancy (shared tenancy, Dedicated Instance, Dedicated Host, or all of these), host affinity (how long a VM must be associated with a host), and the number of licenses purchased and used.'
    LicenseConfigurationAssociation:
      type: object
      properties:
        ResourceArn:
          $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) of the resource.
        ResourceType:
          $ref: '#/components/schemas/ResourceType'
          description: Type of server resource.
        ResourceOwnerId:
          $ref: '#/components/schemas/String'
          description: ID of the AWS account that owns the resource consuming licenses.
        AssociationTime:
          $ref: '#/components/schemas/DateTime'
          description: Time when the license configuration was associated with the resource.
        AmiAssociationScope:
          $ref: '#/components/schemas/String'
          description: Scope of AMI associations. The possible value is <code>cross-account</code>.
      description: Describes an association with a license configuration.
    LicenseConfigurationAssociations:
      type: array
      items:
        $ref: '#/components/schemas/LicenseConfigurationAssociation'
    LicenseConfigurationStatus:
      type: string
      enum:
        - AVAILABLE
        - DISABLED
    LicenseConfigurationUsage:
      type: object
      properties:
        ResourceArn:
          $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) of the resource.
        ResourceType:
          $ref: '#/components/schemas/ResourceType'
          description: Type of resource.
        ResourceStatus:
          $ref: '#/components/schemas/String'
          description: Status of the resource.
        ResourceOwnerId:
          $ref: '#/components/schemas/String'
          description: ID of the account that owns the resource.
        AssociationTime:
          $ref: '#/components/schemas/DateTime'
          description: Time when the license configuration was initially associated with the resource.
        ConsumedLicenses:
          $ref: '#/components/schemas/BoxLong'
          description: Number of licenses consumed by the resource.
      description: Details about the usage of a resource associated with a license configuration.
    LicenseConfigurationUsageList:
      type: array
      items:
        $ref: '#/components/schemas/LicenseConfigurationUsage'
    LicenseConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/LicenseConfiguration'
    LicenseList:
      type: array
      items:
        $ref: '#/components/schemas/License'
    LicenseOperationFailure:
      type: object
      properties:
        ResourceArn:
          $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) of the resource.
        ResourceType:
          $ref: '#/components/schemas/ResourceType'
          description: Resource type.
        ErrorMessage:
          $ref: '#/components/schemas/String'
          description: Error message.
        FailureTime:
          $ref: '#/components/schemas/DateTime'
          description: Failure time.
        OperationName:
          $ref: '#/components/schemas/String'
          description: Name of the operation.
        ResourceOwnerId:
          $ref: '#/components/schemas/String'
          description: ID of the AWS account that owns the resource.
        OperationRequestedBy:
          $ref: '#/components/schemas/String'
          description: The requester is "License Manager Automated Discovery".
        MetadataList:
          $ref: '#/components/schemas/MetadataList'
          description: Reserved.
      description: Describes the failure of a license operation.
    LicenseOperationFailureList:
      type: array
      items:
        $ref: '#/components/schemas/LicenseOperationFailure'
    LicenseSpecification:
      type: object
      required:
        - LicenseConfigurationArn
      properties:
        LicenseConfigurationArn:
          $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) of the license configuration.
        AmiAssociationScope:
          $ref: '#/components/schemas/String'
          description: Scope of AMI associations. The possible value is <code>cross-account</code>.
      description: Details for associating a license configuration with a resource.
    LicenseSpecifications:
      type: array
      items:
        $ref: '#/components/schemas/LicenseSpecification'
    MaxSize100:
      type: integer
      minimum: 1
      maximum: 100
    ReportGeneratorList:
      type: array
      items:
        $ref: '#/components/schemas/ReportGenerator'
    ResourceInventoryList:
      type: array
      items:
        $ref: '#/components/schemas/ResourceInventory'
    TokenList:
      type: array
      items:
        $ref: '#/components/schemas/TokenData'
    ManagedResourceSummary:
      type: object
      properties:
        ResourceType:
          $ref: '#/components/schemas/ResourceType'
          description: Type of resource associated with a license.
        AssociationCount:
          $ref: '#/components/schemas/BoxLong'
          description: Number of resources associated with licenses.
      description: Summary information about a managed resource.
    Metadata:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/String'
          description: The key name.
        Value:
          $ref: '#/components/schemas/String'
          description: The value.
      description: Describes key/value pairs.
    ProductInformationFilterList:
      type: array
      items:
        $ref: '#/components/schemas/ProductInformationFilter'
    ProductInformation:
      type: object
      required:
        - ResourceType
        - ProductInformationFilterList
      properties:
        ResourceType:
          $ref: '#/components/schemas/String'
          description: Resource type. The possible values are <code>SSM_MANAGED</code> | <code>RDS</code>.
        ProductInformationFilterList:
          $ref: '#/components/schemas/ProductInformationFilterList'
          description: '<p>A Product information filter consists of a <code>ProductInformationFilterComparator</code> which is a logical operator, a <code>ProductInformationFilterName</code> which specifies the type of filter being declared, and a <code>ProductInformationFilterValue</code> that specifies the value to filter on. </p> <p>Accepted values for <code>ProductInformationFilterName</code> are listed here along with descriptions and valid options for <code>ProductInformationFilterComparator</code>. </p> <p>The following filters and are supported when the resource type is <code>SSM_MANAGED</code>:</p> <ul> <li> <p> <code>Application Name</code> - The name of the application. Logical operator is <code>EQUALS</code>.</p> </li> <li> <p> <code>Application Publisher</code> - The publisher of the application. Logical operator is <code>EQUALS</code>.</p> </li> <li> <p> <code>Application Version</code> - The version of the application. Logical operator is <code>EQUALS</code>.</p> </li> <li> <p> <code>Platform Name</code> - The name of the platform. Logical operator is <code>EQUALS</code>.</p> </li> <li> <p> <code>Platform Type</code> - The platform type. Logical operator is <code>EQUALS</code>.</p> </li> <li> <p> <code>Tag:key</code> - The key of a tag attached to an AWS resource you wish to exclude from automated discovery. Logical operator is <code>NOT_EQUALS</code>. The key for your tag must be appended to <code>Tag:</code> following the example: <code>Tag:name-of-your-key</code>. <code>ProductInformationFilterValue</code> is optional if you are not using values for the key. </p> </li> <li> <p> <code>AccountId</code> - The 12-digit ID of an AWS account you wish to exclude from automated discovery. Logical operator is <code>NOT_EQUALS</code>.</p> </li> <li> <p> <code>License Included</code> - The type of license included. Logical operators are <code>EQUALS</code> and <code>NOT_EQUALS</code>. Possible values are: <code>sql-server-enterprise</code> | <code>sql-server-standard</code> | <code>sql-server-web</code> | <code>windows-server-datacenter</code>.</p> </li> </ul> <p>The following filters and logical operators are supported when the resource type is <code>RDS</code>:</p> <ul> <li> <p> <code>Engine Edition</code> - The edition of the database engine. Logical operator is <code>EQUALS</code>. Possible values are: <code>oracle-ee</code> | <code>oracle-se</code> | <code>oracle-se1</code> | <code>oracle-se2</code>.</p> </li> <li> <p> <code>License Pack</code> - The license pack. Logical operator is <code>EQUALS</code>. Possible values are: <code>data guard</code> | <code>diagnostic pack sqlt</code> | <code>tuning pack sqlt</code> | <code>ols</code> | <code>olap</code>.</p> </li> </ul>'
      description: Describes product information for a license configuration.
    ProductInformationFilter:
      type: object
      required:
        - ProductInformationFilterName
        - ProductInformationFilterComparator
      properties:
        ProductInformationFilterName:
          $ref: '#/components/schemas/String'
          description: Filter name.
        ProductInformationFilterValue:
          $ref: '#/components/schemas/StringList'
          description: Filter value.
        ProductInformationFilterComparator:
          $ref: '#/components/schemas/String'
          description: Logical operator.
      description: Describes product information filters.
    ReceivedStatus:
      type: string
      enum:
        - PENDING_WORKFLOW
        - PENDING_ACCEPT
        - REJECTED
        - ACTIVE
        - FAILED_WORKFLOW
        - DELETED
        - DISABLED
        - WORKFLOW_COMPLETED
    ReportFrequencyType:
      type: string
      enum:
        - DAY
        - WEEK
        - MONTH
    S3Location:
      type: object
      properties:
        bucket:
          $ref: '#/components/schemas/String'
          description: Name of the S3 bucket reports are published to.
        keyPrefix:
          $ref: '#/components/schemas/String'
          description: Prefix of the S3 bucket reports are published to.
      description: Details of the S3 bucket that report generator reports are published to.
    ReportType:
      type: string
      enum:
        - LicenseConfigurationSummaryReport
        - LicenseConfigurationUsageReport
    ResourceInventory:
      type: object
      properties:
        ResourceId:
          $ref: '#/components/schemas/String'
          description: ID of the resource.
        ResourceType:
          $ref: '#/components/schemas/ResourceType'
          description: Type of resource.
        ResourceArn:
          $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) of the resource.
        Platform:
          $ref: '#/components/schemas/String'
          description: Platform of the resource.
        PlatformVersion:
          $ref: '#/components/schemas/String'
          description: Platform version of the resource in the inventory.
        ResourceOwningAccountId:
          $ref: '#/components/schemas/String'
          description: ID of the account that owns the resource.
      description: Details about a resource.
    Tag:
      type: object
      properties:
        Key:
          $ref: '#/components/schemas/String'
          description: Tag key.
        Value:
          $ref: '#/components/schemas/String'
          description: Tag value.
      description: Details about a tag for a license configuration.
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    TokenData:
      type: object
      properties:
        TokenId:
          $ref: '#/components/schemas/String'
          description: Token ID.
        TokenType:
          $ref: '#/components/schemas/String'
          description: Type of token generated. The supported value is <code>REFRESH_TOKEN</code>.
        LicenseArn:
          $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) of the license.
        ExpirationTime:
          $ref: '#/components/schemas/ISO8601DateTime'
          description: 'Token expiration time, in ISO8601-UTC format.'
        TokenProperties:
          $ref: '#/components/schemas/MaxSize3StringList'
          description: Data specified by the caller.
        RoleArns:
          $ref: '#/components/schemas/ArnList'
          description: Amazon Resource Names (ARN) of the roles included in the token.
        Status:
          $ref: '#/components/schemas/String'
          description: Token status. The possible values are <code>AVAILABLE</code> and <code>DELETED</code>.
      description: Describes a token.
security:
  - hmac: []
