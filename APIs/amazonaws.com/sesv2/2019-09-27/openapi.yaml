openapi: 3.0.0
info:
  version: '2019-09-27'
  x-release: v4
  title: Amazon Simple Email Service
  description: '<fullname>Amazon SES API v2</fullname> <p>Welcome to the Amazon SES API v2 Reference. This guide provides information about the Amazon SES API v2, including supported operations, data types, parameters, and schemas.</p> <p> <a href="https://aws.amazon.com/pinpoint">Amazon SES</a> is an AWS service that you can use to send email messages to your customers.</p> <p>If you''re new to Amazon SES API v2, you might find it helpful to also review the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/">Amazon Simple Email Service Developer Guide</a>. The <i>Amazon SES Developer Guide</i> provides information and code samples that demonstrate how to use Amazon SES API v2 features programmatically.</p> <p>The Amazon SES API v2 is available in several AWS Regions and it provides an endpoint for each of these Regions. For a list of all the Regions and endpoints where the API is currently available, see <a href="https://docs.aws.amazon.com/general/latest/gr/rande.html#ses_region">AWS Service Endpoints</a> in the <i>Amazon Web Services General Reference</i>. To learn more about AWS Regions, see <a href="https://docs.aws.amazon.com/general/latest/gr/rande-manage.html">Managing AWS Regions</a> in the <i>Amazon Web Services General Reference</i>.</p> <p>In each Region, AWS maintains multiple Availability Zones. These Availability Zones are physically isolated from each other, but are united by private, low-latency, high-throughput, and highly redundant network connections. These Availability Zones enable us to provide very high levels of availability and redundancy, while also minimizing latency. To learn more about the number of Availability Zones that are available in each Region, see <a href="http://aws.amazon.com/about-aws/global-infrastructure/">AWS Global Infrastructure</a>.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: sesv2
  x-aws-signingName: ses
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/sesv2-2019-09-27.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/email/'
servers:
  - url: 'http://email.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon SES V2 multi-region endpoint
  - url: 'https://email.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon SES V2 multi-region endpoint
  - url: 'http://email.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon SES V2 endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://email.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon SES V2 endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /v2/email/configuration-sets:
    post:
      operationId: CreateConfigurationSet
      description: 'Create a configuration set. <i>Configuration sets</i> are groups of rules that you can apply to the emails that you send. You apply a configuration set to an email by specifying the name of the configuration set when you call the Amazon SES API v2. When you apply a configuration set to an email, all of the rules in that configuration set are applied to the email. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateConfigurationSetResponse'
        '480':
          description: AlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '485':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ConfigurationSetName
              properties:
                ConfigurationSetName:
                  description: '<p>The name of a configuration set.</p> <p> <i>Configuration sets</i> are groups of rules that you can apply to the emails you send. You apply a configuration set to an email by including a reference to the configuration set in the headers of the email. When you apply a configuration set to an email, all of the rules in that configuration set are applied to the email.</p>'
                  type: string
                TrackingOptions:
                  description: '<p>An object that defines the tracking options for a configuration set. When you use the Amazon SES API v2 to send an email, it contains an invisible image that''s used to track when recipients open your email. If your email contains links, those links are changed slightly in order to track when recipients click them.</p> <p>These images and links include references to a domain operated by AWS. You can optionally configure the Amazon SES to use a domain that you operate for these images and links.</p>'
                  type: object
                  properties:
                    CustomRedirectDomain:
                      $ref: '#/components/schemas/CustomRedirectDomain'
                      description: The domain that you want to use for tracking open and click events.
                DeliveryOptions:
                  description: Used to associate a configuration set with a dedicated IP pool.
                  type: object
                  properties:
                    TlsPolicy:
                      $ref: '#/components/schemas/TlsPolicy'
                      description: 'Specifies whether messages that use the configuration set are required to use Transport Layer Security (TLS). If the value is <code>Require</code>, messages are only delivered if a TLS connection can be established. If the value is <code>Optional</code>, messages can be delivered in plain text if a TLS connection can''t be established.'
                    SendingPoolName:
                      $ref: '#/components/schemas/PoolName'
                      description: The name of the dedicated IP pool that you want to associate with the configuration set.
                ReputationOptions:
                  description: 'Enable or disable collection of reputation metrics for emails that you send using this configuration set in the current AWS Region. '
                  type: object
                  properties:
                    ReputationMetricsEnabled:
                      $ref: '#/components/schemas/Enabled'
                      description: 'If <code>true</code>, tracking of reputation metrics is enabled for the configuration set. If <code>false</code>, tracking of reputation metrics is disabled for the configuration set.'
                    LastFreshStart:
                      $ref: '#/components/schemas/LastFreshStart'
                      description: 'The date and time (in Unix time) when the reputation metrics were last given a fresh start. When your account is given a fresh start, your reputation metrics are calculated starting from the date of the fresh start.'
                SendingOptions:
                  description: Used to enable or disable email sending for messages that use this configuration set in the current AWS Region.
                  type: object
                  properties:
                    SendingEnabled:
                      $ref: '#/components/schemas/Enabled'
                      description: 'If <code>true</code>, email sending is enabled for the configuration set. If <code>false</code>, email sending is disabled for the configuration set.'
                Tags:
                  description: An array of objects that define the tags (keys and values) that you want to associate with the configuration set.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                SuppressionOptions:
                  description: An object that contains information about the suppression list preferences for your account.
                  type: object
                  properties:
                    SuppressedReasons:
                      $ref: '#/components/schemas/SuppressionListReasons'
                      description: '<p>A list that contains the reasons that email addresses are automatically added to the suppression list for your account. This list can contain any or all of the following:</p> <ul> <li> <p> <code>COMPLAINT</code> – Amazon SES adds an email address to the suppression list for your account when a message sent to that address results in a complaint.</p> </li> <li> <p> <code>BOUNCE</code> – Amazon SES adds an email address to the suppression list for your account when a message sent to that address results in a hard bounce.</p> </li> </ul>'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListConfigurationSets
      description: '<p>List all of the configuration sets associated with your account in the current region.</p> <p> <i>Configuration sets</i> are groups of rules that you can apply to the emails you send. You apply a configuration set to an email by including a reference to the configuration set in the headers of the email. When you apply a configuration set to an email, all of the rules in that configuration set are applied to the email.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConfigurationSetsResponse'
        '480':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '481':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters:
        - name: NextToken
          in: query
          required: false
          description: A token returned from a previous call to <code>ListConfigurationSets</code> to indicate the position in the list of configuration sets.
          schema:
            type: string
        - name: PageSize
          in: query
          required: false
          description: 'The number of results to show in a single call to <code>ListConfigurationSets</code>. If the number of results is larger than the number you specified in this parameter, then the response includes a <code>NextToken</code> element, which you can use to obtain additional results.'
          schema:
            type: integer
  '/v2/email/configuration-sets/{ConfigurationSetName}/event-destinations':
    post:
      operationId: CreateConfigurationSetEventDestination
      description: '<p>Create an event destination. <i>Events</i> include message sends, deliveries, opens, clicks, bounces, and complaints. <i>Event destinations</i> are places that you can send information about these events to. For example, you can send event data to Amazon SNS to receive notifications when you receive bounces or complaints, or you can use Amazon Kinesis Data Firehose to stream data to Amazon S3 for long-term storage.</p> <p>A single configuration set can include more than one event destination.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateConfigurationSetEventDestinationResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: AlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '484':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters:
        - name: ConfigurationSetName
          in: path
          required: true
          description: The name of the configuration set that you want to add an event destination to.
          schema:
            type: string
            description: '<p>The name of a configuration set.</p> <p> <i>Configuration sets</i> are groups of rules that you can apply to the emails you send. You apply a configuration set to an email by including a reference to the configuration set in the headers of the email. When you apply a configuration set to an email, all of the rules in that configuration set are applied to the email.</p>'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - EventDestinationName
                - EventDestination
              properties:
                EventDestinationName:
                  description: '<p>The name of an event destination.</p> <p> <i>Events</i> include message sends, deliveries, opens, clicks, bounces, and complaints. <i>Event destinations</i> are places that you can send information about these events to. For example, you can send event data to Amazon SNS to receive notifications when you receive bounces or complaints, or you can use Amazon Kinesis Data Firehose to stream data to Amazon S3 for long-term storage.</p>'
                  type: string
                EventDestination:
                  description: 'An object that defines the event destination. Specifically, it defines which services receive events from emails sent using the configuration set that the event destination is associated with. Also defines the types of events that are sent to the event destination.'
                  type: object
                  properties:
                    Enabled:
                      $ref: '#/components/schemas/Enabled'
                      description: '<p>If <code>true</code>, the event destination is enabled. When the event destination is enabled, the specified event types are sent to the destinations in this <code>EventDestinationDefinition</code>.</p> <p>If <code>false</code>, the event destination is disabled. When the event destination is disabled, events aren''t sent to the specified destinations.</p>'
                    MatchingEventTypes:
                      $ref: '#/components/schemas/EventTypes'
                      description: An array that specifies which events the Amazon SES API v2 should send to the destinations in this <code>EventDestinationDefinition</code>.
                    KinesisFirehoseDestination:
                      $ref: '#/components/schemas/KinesisFirehoseDestination'
                      description: 'An object that defines an Amazon Kinesis Data Firehose destination for email events. You can use Amazon Kinesis Data Firehose to stream data to other services, such as Amazon S3 and Amazon Redshift.'
                    CloudWatchDestination:
                      $ref: '#/components/schemas/CloudWatchDestination'
                      description: An object that defines an Amazon CloudWatch destination for email events. You can use Amazon CloudWatch to monitor and gain insights on your email sending metrics.
                    SnsDestination:
                      $ref: '#/components/schemas/SnsDestination'
                      description: An object that defines an Amazon SNS destination for email events. You can use Amazon SNS to send notification when certain email events occur.
                    PinpointDestination:
                      $ref: '#/components/schemas/PinpointDestination'
                      description: 'An object that defines an Amazon Pinpoint project destination for email events. You can send email event data to a Amazon Pinpoint project to view metrics using the Transactional Messaging dashboards that are built in to Amazon Pinpoint. For more information, see <a href="https://docs.aws.amazon.com/pinpoint/latest/userguide/analytics-transactional-messages.html">Transactional Messaging Charts</a> in the <i>Amazon Pinpoint User Guide</i>.'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetConfigurationSetEventDestinations
      description: '<p>Retrieve a list of event destinations that are associated with a configuration set.</p> <p> <i>Events</i> include message sends, deliveries, opens, clicks, bounces, and complaints. <i>Event destinations</i> are places that you can send information about these events to. For example, you can send event data to Amazon SNS to receive notifications when you receive bounces or complaints, or you can use Amazon Kinesis Data Firehose to stream data to Amazon S3 for long-term storage.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConfigurationSetEventDestinationsResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters:
        - name: ConfigurationSetName
          in: path
          required: true
          description: The name of the configuration set that contains the event destination.
          schema:
            type: string
            description: '<p>The name of a configuration set.</p> <p> <i>Configuration sets</i> are groups of rules that you can apply to the emails you send. You apply a configuration set to an email by including a reference to the configuration set in the headers of the email. When you apply a configuration set to an email, all of the rules in that configuration set are applied to the email.</p>'
  '/v2/email/contact-lists/{ContactListName}/contacts':
    post:
      operationId: CreateContact
      description: 'Creates a contact, which is an end-user who is receiving the email, and adds them to a contact list.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateContactResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: AlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
      parameters:
        - name: ContactListName
          in: path
          required: true
          description: The name of the contact list to which the contact should be added.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - EmailAddress
              properties:
                EmailAddress:
                  description: The contact's email address.
                  type: string
                TopicPreferences:
                  description: The contact's preferences for being opted-in to or opted-out of topics.
                  type: array
                  items:
                    $ref: '#/components/schemas/TopicPreference'
                UnsubscribeAll:
                  description: A boolean value status noting if the contact is unsubscribed from all contact list topics.
                  type: boolean
                AttributesData:
                  description: The attribute data attached to a contact.
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListContacts
      description: Lists the contacts present in a specific contact list.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListContactsResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      parameters:
        - name: ContactListName
          in: path
          required: true
          description: The name of the contact list.
          schema:
            type: string
        - name: PageSize
          in: query
          required: false
          description: 'The number of contacts that may be returned at once, which is dependent on if there are more or less contacts than the value of the PageSize. Use this parameter to paginate results. If additional contacts exist beyond the specified limit, the <code>NextToken</code> element is sent in the response. Use the <code>NextToken</code> value in subsequent requests to retrieve additional contacts.'
          schema:
            type: integer
        - name: NextToken
          in: query
          required: false
          description: A string token indicating that there might be additional contacts available to be listed. Use the token provided in the Response to use in the subsequent call to ListContacts with the same parameters to retrieve the next page of contacts.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Filter:
                  description: A filter that can be applied to a list of contacts.
                  type: object
                  properties:
                    FilteredStatus:
                      $ref: '#/components/schemas/SubscriptionStatus'
                      description: 'The status by which you are filtering: <code>OPT_IN</code> or <code>OPT_OUT</code>.'
                    TopicFilter:
                      $ref: '#/components/schemas/TopicFilter'
                      description: Used for filtering by a specific topic preference.
  /v2/email/contact-lists:
    post:
      operationId: CreateContactList
      description: Creates a contact list.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateContactListResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: AlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ContactListName
              properties:
                ContactListName:
                  description: The name of the contact list.
                  type: string
                Topics:
                  description: 'An interest group, theme, or label within a list. A contact list can have multiple topics.'
                  type: array
                  items:
                    $ref: '#/components/schemas/Topic'
                Description:
                  description: A description of what the contact list is about.
                  type: string
                Tags:
                  description: The tags associated with a contact list.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListContactLists
      description: Lists all of the contact lists available.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListContactListsResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: PageSize
          in: query
          required: false
          description: 'Maximum number of contact lists to return at once. Use this parameter to paginate results. If additional contact lists exist beyond the specified limit, the <code>NextToken</code> element is sent in the response. Use the <code>NextToken</code> value in subsequent requests to retrieve additional lists.'
          schema:
            type: integer
        - name: NextToken
          in: query
          required: false
          description: A string token indicating that there might be additional contact lists available to be listed. Use the token provided in the Response to use in the subsequent call to ListContactLists with the same parameters to retrieve the next page of contact lists.
          schema:
            type: string
  /v2/email/custom-verification-email-templates:
    post:
      operationId: CreateCustomVerificationEmailTemplate
      description: '<p>Creates a new custom verification email template.</p> <p>For more information about custom verification email templates, see <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-verify-address-custom.html">Using Custom Verification Email Templates</a> in the <i>Amazon SES Developer Guide</i>.</p> <p>You can execute this operation no more than once per second.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCustomVerificationEmailTemplateResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: AlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - TemplateName
                - FromEmailAddress
                - TemplateSubject
                - TemplateContent
                - SuccessRedirectionURL
                - FailureRedirectionURL
              properties:
                TemplateName:
                  description: The name of the template. You will refer to this name when you send email using the <code>SendTemplatedEmail</code> or <code>SendBulkTemplatedEmail</code> operations.
                  type: string
                  minLength: 1
                FromEmailAddress:
                  description: The email address that the custom verification email is sent from.
                  type: string
                TemplateSubject:
                  description: The subject line of the email.
                  type: string
                TemplateContent:
                  description: The content of the custom verification email template.
                  type: string
                SuccessRedirectionURL:
                  description: The URL that the recipient of the verification email is sent to if his or her address is successfully verified.
                  type: string
                FailureRedirectionURL:
                  description: The URL that the recipient of the verification email is sent to if his or her address is not successfully verified.
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListCustomVerificationEmailTemplates
      description: '<p>Lists the existing custom verification email templates for your account in the current AWS Region.</p> <p>For more information about custom verification email templates, see <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-verify-address-custom.html">Using Custom Verification Email Templates</a> in the <i>Amazon SES Developer Guide</i>.</p> <p>You can execute this operation no more than once per second.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCustomVerificationEmailTemplatesResponse'
        '480':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '481':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters:
        - name: NextToken
          in: query
          required: false
          description: A token returned from a previous call to <code>ListCustomVerificationEmailTemplates</code> to indicate the position in the list of custom verification email templates.
          schema:
            type: string
        - name: PageSize
          in: query
          required: false
          description: '<p>The number of results to show in a single call to <code>ListCustomVerificationEmailTemplates</code>. If the number of results is larger than the number you specified in this parameter, then the response includes a <code>NextToken</code> element, which you can use to obtain additional results.</p> <p>The value you specify has to be at least 1, and can be no more than 50.</p>'
          schema:
            type: integer
  /v2/email/dedicated-ip-pools:
    post:
      operationId: CreateDedicatedIpPool
      description: 'Create a new pool of dedicated IP addresses. A pool can include one or more dedicated IP addresses that are associated with your AWS account. You can associate a pool with a configuration set. When you send an email that uses that configuration set, the message is sent from one of the addresses in the associated pool.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDedicatedIpPoolResponse'
        '480':
          description: AlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - PoolName
              properties:
                PoolName:
                  description: The name of a dedicated IP pool.
                  type: string
                Tags:
                  description: An object that defines the tags (keys and values) that you want to associate with the pool.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListDedicatedIpPools
      description: List all of the dedicated IP pools that exist in your AWS account in the current Region.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDedicatedIpPoolsResponse'
        '480':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '481':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters:
        - name: NextToken
          in: query
          required: false
          description: A token returned from a previous call to <code>ListDedicatedIpPools</code> to indicate the position in the list of dedicated IP pools.
          schema:
            type: string
        - name: PageSize
          in: query
          required: false
          description: 'The number of results to show in a single call to <code>ListDedicatedIpPools</code>. If the number of results is larger than the number you specified in this parameter, then the response includes a <code>NextToken</code> element, which you can use to obtain additional results.'
          schema:
            type: integer
  /v2/email/deliverability-dashboard/test:
    post:
      operationId: CreateDeliverabilityTestReport
      description: 'Create a new predictive inbox placement test. Predictive inbox placement tests can help you predict how your messages will be handled by various email providers around the world. When you perform a predictive inbox placement test, you provide a sample message that contains the content that you plan to send to your customers. Amazon SES then sends that message to special email addresses spread across several major email providers. After about 24 hours, the test is complete, and you can use the <code>GetDeliverabilityTestReport</code> operation to view the results of the test.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDeliverabilityTestReportResponse'
        '480':
          description: AccountSuspendedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSuspendedException'
        '481':
          description: SendingPausedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendingPausedException'
        '482':
          description: MessageRejected
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageRejected'
        '483':
          description: MailFromDomainNotVerifiedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailFromDomainNotVerifiedException'
        '484':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '486':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '487':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '488':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - FromEmailAddress
                - Content
              properties:
                ReportName:
                  description: A name that helps you identify a report generated by the Deliverability dashboard.
                  type: string
                FromEmailAddress:
                  description: The email address that the predictive inbox placement test email was sent from.
                  type: string
                Content:
                  description: 'An object that defines the entire content of the email, including the message headers and the body content. You can create a simple email message, in which you specify the subject and the text and HTML versions of the message body. You can also create raw messages, in which you specify a complete MIME-formatted message. Raw messages can include attachments and custom headers.'
                  type: object
                  properties:
                    Simple:
                      $ref: '#/components/schemas/Message'
                      description: The simple email message. The message consists of a subject and a message body.
                    Raw:
                      $ref: '#/components/schemas/RawMessage'
                      description: '<p>The raw email message. The message has to meet the following criteria:</p> <ul> <li> <p>The message has to contain a header and a body, separated by one blank line.</p> </li> <li> <p>All of the required header fields must be present in the message.</p> </li> <li> <p>Each part of a multipart MIME message must be formatted properly.</p> </li> <li> <p>If you include attachments, they must be in a file format that the Amazon SES API v2 supports. </p> </li> <li> <p>The entire message must be Base64 encoded.</p> </li> <li> <p>If any of the MIME parts in your message contain content that is outside of the 7-bit ASCII character range, you should encode that content to ensure that recipients'' email clients render the message properly.</p> </li> <li> <p>The length of any single line of text in the message can''t exceed 1,000 characters. This restriction is defined in <a href="https://tools.ietf.org/html/rfc5321">RFC 5321</a>.</p> </li> </ul>'
                    Template:
                      $ref: '#/components/schemas/Template'
                      description: The template to use for the email message.
                Tags:
                  description: An array of objects that define the tags (keys and values) that you want to associate with the predictive inbox placement test.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v2/email/identities:
    post:
      operationId: CreateEmailIdentity
      description: '<p>Starts the process of verifying an email identity. An <i>identity</i> is an email address or domain that you use when you send email. Before you can use an identity to send email, you first have to verify it. By verifying an identity, you demonstrate that you''re the owner of the identity, and that you''ve given Amazon SES API v2 permission to send email from the identity.</p> <p>When you verify an email address, Amazon SES sends an email to the address. Your email address is verified as soon as you follow the link in the verification email. </p> <p>When you verify a domain without specifying the <code>DkimSigningAttributes</code> object, this operation provides a set of DKIM tokens. You can convert these tokens into CNAME records, which you then add to the DNS configuration for your domain. Your domain is verified when Amazon SES detects these records in the DNS configuration for your domain. This verification method is known as <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">Easy DKIM</a>.</p> <p>Alternatively, you can perform the verification process by providing your own public-private key pair. This verification method is known as Bring Your Own DKIM (BYODKIM). To use BYODKIM, your call to the <code>CreateEmailIdentity</code> operation has to include the <code>DkimSigningAttributes</code> object. When you specify this object, you provide a selector (a component of the DNS record name that identifies the public key that you want to use for DKIM authentication) and a private key.</p> <p>When you verify a domain, this operation provides a set of DKIM tokens, which you can convert into CNAME tokens. You add these CNAME tokens to the DNS configuration for your domain. Your domain is verified when Amazon SES detects these records in the DNS configuration for your domain. For some DNS providers, it can take 72 hours or more to complete the domain verification process.</p> <p>Additionally, you can associate an existing configuration set with the email identity that you''re verifying.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEmailIdentityResponse'
        '480':
          description: AlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '485':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - EmailIdentity
              properties:
                EmailIdentity:
                  description: The email address or domain that you want to verify.
                  type: string
                  minLength: 1
                Tags:
                  description: An array of objects that define the tags (keys and values) that you want to associate with the email identity.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                DkimSigningAttributes:
                  description: An object that contains information about the tokens used for setting up Bring Your Own DKIM (BYODKIM).
                  type: object
                  properties:
                    DomainSigningSelector:
                      $ref: '#/components/schemas/Selector'
                      description: A string that's used to identify a public key in the DNS configuration for a domain.
                    DomainSigningPrivateKey:
                      $ref: '#/components/schemas/PrivateKey'
                      description: '<p>A private key that''s used to generate a DKIM signature.</p> <p>The private key must use 1024-bit RSA encryption, and must be encoded using base64 encoding.</p>'
                ConfigurationSetName:
                  description: '<p>The name of a configuration set.</p> <p> <i>Configuration sets</i> are groups of rules that you can apply to the emails you send. You apply a configuration set to an email by including a reference to the configuration set in the headers of the email. When you apply a configuration set to an email, all of the rules in that configuration set are applied to the email.</p>'
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListEmailIdentities
      description: Returns a list of all of the email identities that are associated with your AWS account. An identity can be either an email address or a domain. This operation returns identities that are verified as well as those that aren't. This operation returns identities that are associated with Amazon SES and Amazon Pinpoint.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEmailIdentitiesResponse'
        '480':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '481':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters:
        - name: NextToken
          in: query
          required: false
          description: A token returned from a previous call to <code>ListEmailIdentities</code> to indicate the position in the list of identities.
          schema:
            type: string
        - name: PageSize
          in: query
          required: false
          description: '<p>The number of results to show in a single call to <code>ListEmailIdentities</code>. If the number of results is larger than the number you specified in this parameter, then the response includes a <code>NextToken</code> element, which you can use to obtain additional results.</p> <p>The value you specify has to be at least 0, and can be no more than 1000.</p>'
          schema:
            type: integer
  '/v2/email/identities/{EmailIdentity}/policies/{PolicyName}':
    post:
      operationId: CreateEmailIdentityPolicy
      description: '<p>Creates the specified sending authorization policy for the given identity (an email address or a domain).</p> <note> <p>This API is for the identity owner only. If you have not verified the identity, this API will return an error.</p> </note> <p>Sending authorization is a feature that enables an identity owner to authorize other senders to use its identities. For information about using sending authorization, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEmailIdentityPolicyResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: AlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
        '482':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters:
        - name: EmailIdentity
          in: path
          required: true
          description: The email identity for which you want to create a policy.
          schema:
            type: string
            minLength: 1
        - name: PolicyName
          in: path
          required: true
          description: '<p>The name of the policy.</p> <p>The policy name cannot exceed 64 characters and can only include alphanumeric characters, dashes, and underscores.</p>'
          schema:
            type: string
            description: '<p>The name of the policy.</p> <p>The policy name cannot exceed 64 characters and can only include alphanumeric characters, dashes, and underscores.</p>'
            minLength: 1
            maxLength: 64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Policy
              properties:
                Policy:
                  description: '<p>The text of the policy in JSON format. The policy cannot exceed 4 KB.</p> <p>For information about the syntax of sending authorization policies, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer Guide</a>.</p>'
                  type: string
                  minLength: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteEmailIdentityPolicy
      description: '<p>Deletes the specified sending authorization policy for the given identity (an email address or a domain). This API returns successfully even if a policy with the specified name does not exist.</p> <note> <p>This API is for the identity owner only. If you have not verified the identity, this API will return an error.</p> </note> <p>Sending authorization is a feature that enables an identity owner to authorize other senders to use its identities. For information about using sending authorization, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteEmailIdentityPolicyResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters:
        - name: EmailIdentity
          in: path
          required: true
          description: The email identity for which you want to delete a policy.
          schema:
            type: string
            minLength: 1
        - name: PolicyName
          in: path
          required: true
          description: '<p>The name of the policy.</p> <p>The policy name cannot exceed 64 characters and can only include alphanumeric characters, dashes, and underscores.</p>'
          schema:
            type: string
            description: '<p>The name of the policy.</p> <p>The policy name cannot exceed 64 characters and can only include alphanumeric characters, dashes, and underscores.</p>'
            minLength: 1
            maxLength: 64
    put:
      operationId: UpdateEmailIdentityPolicy
      description: '<p>Updates the specified sending authorization policy for the given identity (an email address or a domain). This API returns successfully even if a policy with the specified name does not exist.</p> <note> <p>This API is for the identity owner only. If you have not verified the identity, this API will return an error.</p> </note> <p>Sending authorization is a feature that enables an identity owner to authorize other senders to use its identities. For information about using sending authorization, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEmailIdentityPolicyResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters:
        - name: EmailIdentity
          in: path
          required: true
          description: The email identity for which you want to update policy.
          schema:
            type: string
            minLength: 1
        - name: PolicyName
          in: path
          required: true
          description: '<p>The name of the policy.</p> <p>The policy name cannot exceed 64 characters and can only include alphanumeric characters, dashes, and underscores.</p>'
          schema:
            type: string
            description: '<p>The name of the policy.</p> <p>The policy name cannot exceed 64 characters and can only include alphanumeric characters, dashes, and underscores.</p>'
            minLength: 1
            maxLength: 64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Policy
              properties:
                Policy:
                  description: '<p>The text of the policy in JSON format. The policy cannot exceed 4 KB.</p> <p>For information about the syntax of sending authorization policies, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer Guide</a>.</p>'
                  type: string
                  minLength: 1
  /v2/email/templates:
    post:
      operationId: CreateEmailTemplate
      description: '<p>Creates an email template. Email templates enable you to send personalized email to one or more destinations in a single API operation. For more information, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEmailTemplateResponse'
        '480':
          description: AlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - TemplateName
                - TemplateContent
              properties:
                TemplateName:
                  description: The name of the template. You will refer to this name when you send email using the <code>SendTemplatedEmail</code> or <code>SendBulkTemplatedEmail</code> operations.
                  type: string
                  minLength: 1
                TemplateContent:
                  description: 'The content of the email, composed of a subject line, an HTML part, and a text-only part.'
                  type: object
                  properties:
                    Subject:
                      $ref: '#/components/schemas/EmailTemplateSubject'
                      description: The subject line of the email.
                    Text:
                      $ref: '#/components/schemas/EmailTemplateText'
                      description: The email body that will be visible to recipients whose email clients do not display HTML.
                    Html:
                      $ref: '#/components/schemas/EmailTemplateHtml'
                      description: The HTML body of the email.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListEmailTemplates
      description: <p>Lists the email templates present in your Amazon SES account in the current AWS Region.</p> <p>You can execute this operation no more than once per second.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEmailTemplatesResponse'
        '480':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '481':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters:
        - name: NextToken
          in: query
          required: false
          description: A token returned from a previous call to <code>ListEmailTemplates</code> to indicate the position in the list of email templates.
          schema:
            type: string
        - name: PageSize
          in: query
          required: false
          description: '<p>The number of results to show in a single call to <code>ListEmailTemplates</code>. If the number of results is larger than the number you specified in this parameter, then the response includes a <code>NextToken</code> element, which you can use to obtain additional results.</p> <p>The value you specify has to be at least 1, and can be no more than 10.</p>'
          schema:
            type: integer
  /v2/email/import-jobs:
    post:
      operationId: CreateImportJob
      description: Creates an import job for a data destination.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateImportJobResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ImportDestination
                - ImportDataSource
              properties:
                ImportDestination:
                  description: An object that contains details about the resource destination the import job is going to target.
                  type: object
                  properties:
                    SuppressionListDestination:
                      $ref: '#/components/schemas/SuppressionListDestination'
                      description: An object that contains the action of the import job towards suppression list.
                    ContactListDestination:
                      $ref: '#/components/schemas/ContactListDestination'
                      description: An object that contains the action of the import job towards a contact list.
                ImportDataSource:
                  description: An object that contains details about the data source of the import job.
                  type: object
                  properties:
                    S3Url:
                      $ref: '#/components/schemas/S3Url'
                      description: 'An Amazon S3 URL in the format s3://<i>&lt;bucket_name&gt;</i>/<i>&lt;object&gt;</i>.'
                    DataFormat:
                      $ref: '#/components/schemas/DataFormat'
                      description: The data format of the import job's data source.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListImportJobs
      description: Lists all of the import jobs.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListImportJobsResponse'
        '480':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '481':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters:
        - name: NextToken
          in: query
          required: false
          description: A string token indicating that there might be additional import jobs available to be listed. Copy this token to a subsequent call to <code>ListImportJobs</code> with the same parameters to retrieve the next page of import jobs.
          schema:
            type: string
        - name: PageSize
          in: query
          required: false
          description: 'Maximum number of import jobs to return at once. Use this parameter to paginate results. If additional import jobs exist beyond the specified limit, the <code>NextToken</code> element is sent in the response. Use the <code>NextToken</code> value in subsequent requests to retrieve additional addresses.'
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ImportDestinationType:
                  description: 'The destination of the import job, which can be used to list import jobs that have a certain <code>ImportDestinationType</code>.'
                  type: string
                  enum:
                    - SUPPRESSION_LIST
                    - CONTACT_LIST
  '/v2/email/configuration-sets/{ConfigurationSetName}':
    delete:
      operationId: DeleteConfigurationSet
      description: '<p>Delete an existing configuration set.</p> <p> <i>Configuration sets</i> are groups of rules that you can apply to the emails you send. You apply a configuration set to an email by including a reference to the configuration set in the headers of the email. When you apply a configuration set to an email, all of the rules in that configuration set are applied to the email.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteConfigurationSetResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
      parameters:
        - name: ConfigurationSetName
          in: path
          required: true
          description: The name of the configuration set that you want to delete.
          schema:
            type: string
            description: '<p>The name of a configuration set.</p> <p> <i>Configuration sets</i> are groups of rules that you can apply to the emails you send. You apply a configuration set to an email by including a reference to the configuration set in the headers of the email. When you apply a configuration set to an email, all of the rules in that configuration set are applied to the email.</p>'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetConfigurationSet
      description: '<p>Get information about an existing configuration set, including the dedicated IP pool that it''s associated with, whether or not it''s enabled for sending email, and more.</p> <p> <i>Configuration sets</i> are groups of rules that you can apply to the emails you send. You apply a configuration set to an email by including a reference to the configuration set in the headers of the email. When you apply a configuration set to an email, all of the rules in that configuration set are applied to the email.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConfigurationSetResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters:
        - name: ConfigurationSetName
          in: path
          required: true
          description: The name of the configuration set that you want to obtain more information about.
          schema:
            type: string
            description: '<p>The name of a configuration set.</p> <p> <i>Configuration sets</i> are groups of rules that you can apply to the emails you send. You apply a configuration set to an email by including a reference to the configuration set in the headers of the email. When you apply a configuration set to an email, all of the rules in that configuration set are applied to the email.</p>'
  '/v2/email/configuration-sets/{ConfigurationSetName}/event-destinations/{EventDestinationName}':
    delete:
      operationId: DeleteConfigurationSetEventDestination
      description: '<p>Delete an event destination.</p> <p> <i>Events</i> include message sends, deliveries, opens, clicks, bounces, and complaints. <i>Event destinations</i> are places that you can send information about these events to. For example, you can send event data to Amazon SNS to receive notifications when you receive bounces or complaints, or you can use Amazon Kinesis Data Firehose to stream data to Amazon S3 for long-term storage.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteConfigurationSetEventDestinationResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters:
        - name: ConfigurationSetName
          in: path
          required: true
          description: The name of the configuration set that contains the event destination that you want to delete.
          schema:
            type: string
            description: '<p>The name of a configuration set.</p> <p> <i>Configuration sets</i> are groups of rules that you can apply to the emails you send. You apply a configuration set to an email by including a reference to the configuration set in the headers of the email. When you apply a configuration set to an email, all of the rules in that configuration set are applied to the email.</p>'
        - name: EventDestinationName
          in: path
          required: true
          description: The name of the event destination that you want to delete.
          schema:
            type: string
            description: '<p>The name of an event destination.</p> <p> <i>Events</i> include message sends, deliveries, opens, clicks, bounces, and complaints. <i>Event destinations</i> are places that you can send information about these events to. For example, you can send event data to Amazon SNS to receive notifications when you receive bounces or complaints, or you can use Amazon Kinesis Data Firehose to stream data to Amazon S3 for long-term storage.</p>'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdateConfigurationSetEventDestination
      description: '<p>Update the configuration of an event destination for a configuration set.</p> <p> <i>Events</i> include message sends, deliveries, opens, clicks, bounces, and complaints. <i>Event destinations</i> are places that you can send information about these events to. For example, you can send event data to Amazon SNS to receive notifications when you receive bounces or complaints, or you can use Amazon Kinesis Data Firehose to stream data to Amazon S3 for long-term storage.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateConfigurationSetEventDestinationResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters:
        - name: ConfigurationSetName
          in: path
          required: true
          description: The name of the configuration set that contains the event destination that you want to modify.
          schema:
            type: string
            description: '<p>The name of a configuration set.</p> <p> <i>Configuration sets</i> are groups of rules that you can apply to the emails you send. You apply a configuration set to an email by including a reference to the configuration set in the headers of the email. When you apply a configuration set to an email, all of the rules in that configuration set are applied to the email.</p>'
        - name: EventDestinationName
          in: path
          required: true
          description: The name of the event destination that you want to modify.
          schema:
            type: string
            description: '<p>The name of an event destination.</p> <p> <i>Events</i> include message sends, deliveries, opens, clicks, bounces, and complaints. <i>Event destinations</i> are places that you can send information about these events to. For example, you can send event data to Amazon SNS to receive notifications when you receive bounces or complaints, or you can use Amazon Kinesis Data Firehose to stream data to Amazon S3 for long-term storage.</p>'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - EventDestination
              properties:
                EventDestination:
                  description: 'An object that defines the event destination. Specifically, it defines which services receive events from emails sent using the configuration set that the event destination is associated with. Also defines the types of events that are sent to the event destination.'
                  type: object
                  properties:
                    Enabled:
                      $ref: '#/components/schemas/Enabled'
                      description: '<p>If <code>true</code>, the event destination is enabled. When the event destination is enabled, the specified event types are sent to the destinations in this <code>EventDestinationDefinition</code>.</p> <p>If <code>false</code>, the event destination is disabled. When the event destination is disabled, events aren''t sent to the specified destinations.</p>'
                    MatchingEventTypes:
                      $ref: '#/components/schemas/EventTypes'
                      description: An array that specifies which events the Amazon SES API v2 should send to the destinations in this <code>EventDestinationDefinition</code>.
                    KinesisFirehoseDestination:
                      $ref: '#/components/schemas/KinesisFirehoseDestination'
                      description: 'An object that defines an Amazon Kinesis Data Firehose destination for email events. You can use Amazon Kinesis Data Firehose to stream data to other services, such as Amazon S3 and Amazon Redshift.'
                    CloudWatchDestination:
                      $ref: '#/components/schemas/CloudWatchDestination'
                      description: An object that defines an Amazon CloudWatch destination for email events. You can use Amazon CloudWatch to monitor and gain insights on your email sending metrics.
                    SnsDestination:
                      $ref: '#/components/schemas/SnsDestination'
                      description: An object that defines an Amazon SNS destination for email events. You can use Amazon SNS to send notification when certain email events occur.
                    PinpointDestination:
                      $ref: '#/components/schemas/PinpointDestination'
                      description: 'An object that defines an Amazon Pinpoint project destination for email events. You can send email event data to a Amazon Pinpoint project to view metrics using the Transactional Messaging dashboards that are built in to Amazon Pinpoint. For more information, see <a href="https://docs.aws.amazon.com/pinpoint/latest/userguide/analytics-transactional-messages.html">Transactional Messaging Charts</a> in the <i>Amazon Pinpoint User Guide</i>.'
  '/v2/email/contact-lists/{ContactListName}/contacts/{EmailAddress}':
    delete:
      operationId: DeleteContact
      description: Removes a contact from a contact list.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteContactResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      parameters:
        - name: ContactListName
          in: path
          required: true
          description: The name of the contact list from which the contact should be removed.
          schema:
            type: string
        - name: EmailAddress
          in: path
          required: true
          description: The contact's email address.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetContact
      description: Returns a contact from a contact list.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetContactResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      parameters:
        - name: ContactListName
          in: path
          required: true
          description: The name of the contact list to which the contact belongs.
          schema:
            type: string
        - name: EmailAddress
          in: path
          required: true
          description: The contact's email addres.
          schema:
            type: string
    put:
      operationId: UpdateContact
      description: 'Updates a contact''s preferences for a list. It is not necessary to specify all existing topic preferences in the TopicPreferences object, just the ones that need updating.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateContactResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
      parameters:
        - name: ContactListName
          in: path
          required: true
          description: The name of the contact list.
          schema:
            type: string
        - name: EmailAddress
          in: path
          required: true
          description: The contact's email addres.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TopicPreferences:
                  description: The contact's preference for being opted-in to or opted-out of a topic.
                  type: array
                  items:
                    $ref: '#/components/schemas/TopicPreference'
                UnsubscribeAll:
                  description: A boolean value status noting if the contact is unsubscribed from all contact list topics.
                  type: boolean
                AttributesData:
                  description: The attribute data attached to a contact.
                  type: string
  '/v2/email/contact-lists/{ContactListName}':
    delete:
      operationId: DeleteContactList
      description: Deletes a contact list and all of the contacts on that list.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteContactListResponse'
        '480':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
      parameters:
        - name: ContactListName
          in: path
          required: true
          description: The name of the contact list.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetContactList
      description: Returns contact list metadata. It does not return any information about the contacts present in the list.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetContactListResponse'
        '480':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters:
        - name: ContactListName
          in: path
          required: true
          description: The name of the contact list.
          schema:
            type: string
    put:
      operationId: UpdateContactList
      description: Updates contact list metadata. This operation does a complete replacement.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateContactListResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
      parameters:
        - name: ContactListName
          in: path
          required: true
          description: The name of the contact list.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Topics:
                  description: 'An interest group, theme, or label within a list. A contact list can have multiple topics.'
                  type: array
                  items:
                    $ref: '#/components/schemas/Topic'
                Description:
                  description: A description of what the contact list is about.
                  type: string
  '/v2/email/custom-verification-email-templates/{TemplateName}':
    delete:
      operationId: DeleteCustomVerificationEmailTemplate
      description: '<p>Deletes an existing custom verification email template.</p> <p>For more information about custom verification email templates, see <a href="https://docs.aws.amazon.com/es/latest/DeveloperGuide/send-email-verify-address-custom.html">Using Custom Verification Email Templates</a> in the <i>Amazon SES Developer Guide</i>.</p> <p>You can execute this operation no more than once per second.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCustomVerificationEmailTemplateResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters:
        - name: TemplateName
          in: path
          required: true
          description: The name of the custom verification email template that you want to delete.
          schema:
            type: string
            description: The name of the template. You will refer to this name when you send email using the <code>SendTemplatedEmail</code> or <code>SendBulkTemplatedEmail</code> operations.
            minLength: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetCustomVerificationEmailTemplate
      description: '<p>Returns the custom email verification template for the template name you specify.</p> <p>For more information about custom verification email templates, see <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-verify-address-custom.html">Using Custom Verification Email Templates</a> in the <i>Amazon SES Developer Guide</i>.</p> <p>You can execute this operation no more than once per second.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCustomVerificationEmailTemplateResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters:
        - name: TemplateName
          in: path
          required: true
          description: The name of the custom verification email template that you want to retrieve.
          schema:
            type: string
            description: The name of the template. You will refer to this name when you send email using the <code>SendTemplatedEmail</code> or <code>SendBulkTemplatedEmail</code> operations.
            minLength: 1
    put:
      operationId: UpdateCustomVerificationEmailTemplate
      description: '<p>Updates an existing custom verification email template.</p> <p>For more information about custom verification email templates, see <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-verify-address-custom.html">Using Custom Verification Email Templates</a> in the <i>Amazon SES Developer Guide</i>.</p> <p>You can execute this operation no more than once per second.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCustomVerificationEmailTemplateResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '482':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: TemplateName
          in: path
          required: true
          description: The name of the custom verification email template that you want to update.
          schema:
            type: string
            description: The name of the template. You will refer to this name when you send email using the <code>SendTemplatedEmail</code> or <code>SendBulkTemplatedEmail</code> operations.
            minLength: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - FromEmailAddress
                - TemplateSubject
                - TemplateContent
                - SuccessRedirectionURL
                - FailureRedirectionURL
              properties:
                FromEmailAddress:
                  description: The email address that the custom verification email is sent from.
                  type: string
                TemplateSubject:
                  description: The subject line of the email.
                  type: string
                TemplateContent:
                  description: The content of the custom verification email template.
                  type: string
                SuccessRedirectionURL:
                  description: The URL that the recipient of the verification email is sent to if his or her address is successfully verified.
                  type: string
                FailureRedirectionURL:
                  description: The URL that the recipient of the verification email is sent to if his or her address is not successfully verified.
                  type: string
  '/v2/email/dedicated-ip-pools/{PoolName}':
    delete:
      operationId: DeleteDedicatedIpPool
      description: Delete a dedicated IP pool.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDedicatedIpPoolResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
      parameters:
        - name: PoolName
          in: path
          required: true
          description: The name of the dedicated IP pool that you want to delete.
          schema:
            type: string
            description: The name of a dedicated IP pool.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/v2/email/identities/{EmailIdentity}':
    delete:
      operationId: DeleteEmailIdentity
      description: Deletes an email identity. An identity can be either an email address or a domain name.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteEmailIdentityResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
      parameters:
        - name: EmailIdentity
          in: path
          required: true
          description: 'The identity (that is, the email address or domain) that you want to delete.'
          schema:
            type: string
            minLength: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetEmailIdentity
      description: 'Provides information about a specific identity, including the identity''s verification status, sending authorization policies, its DKIM authentication status, and its custom Mail-From settings.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEmailIdentityResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters:
        - name: EmailIdentity
          in: path
          required: true
          description: The email identity that you want to retrieve details for.
          schema:
            type: string
            minLength: 1
  '/v2/email/templates/{TemplateName}':
    delete:
      operationId: DeleteEmailTemplate
      description: <p>Deletes an email template.</p> <p>You can execute this operation no more than once per second.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteEmailTemplateResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters:
        - name: TemplateName
          in: path
          required: true
          description: The name of the template to be deleted.
          schema:
            type: string
            description: The name of the template. You will refer to this name when you send email using the <code>SendTemplatedEmail</code> or <code>SendBulkTemplatedEmail</code> operations.
            minLength: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetEmailTemplate
      description: '<p>Displays the template object (which includes the subject line, HTML part and text part) for the template you specify.</p> <p>You can execute this operation no more than once per second.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEmailTemplateResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters:
        - name: TemplateName
          in: path
          required: true
          description: The name of the template you want to retrieve.
          schema:
            type: string
            description: The name of the template. You will refer to this name when you send email using the <code>SendTemplatedEmail</code> or <code>SendBulkTemplatedEmail</code> operations.
            minLength: 1
    put:
      operationId: UpdateEmailTemplate
      description: '<p>Updates an email template. Email templates enable you to send personalized email to one or more destinations in a single API operation. For more information, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEmailTemplateResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters:
        - name: TemplateName
          in: path
          required: true
          description: The name of the template you want to update.
          schema:
            type: string
            description: The name of the template. You will refer to this name when you send email using the <code>SendTemplatedEmail</code> or <code>SendBulkTemplatedEmail</code> operations.
            minLength: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - TemplateContent
              properties:
                TemplateContent:
                  description: 'The content of the email, composed of a subject line, an HTML part, and a text-only part.'
                  type: object
                  properties:
                    Subject:
                      $ref: '#/components/schemas/EmailTemplateSubject'
                      description: The subject line of the email.
                    Text:
                      $ref: '#/components/schemas/EmailTemplateText'
                      description: The email body that will be visible to recipients whose email clients do not display HTML.
                    Html:
                      $ref: '#/components/schemas/EmailTemplateHtml'
                      description: The HTML body of the email.
  '/v2/email/suppression/addresses/{EmailAddress}':
    delete:
      operationId: DeleteSuppressedDestination
      description: Removes an email address from the suppression list for your account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSuppressedDestinationResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '482':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: EmailAddress
          in: path
          required: true
          description: The suppressed email destination to remove from the account suppression list.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetSuppressedDestination
      description: Retrieves information about a specific email address that's on the suppression list for your account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSuppressedDestinationResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      parameters:
        - name: EmailAddress
          in: path
          required: true
          description: The email address that's on the account suppression list.
          schema:
            type: string
  /v2/email/account:
    get:
      operationId: GetAccount
      description: Obtain information about the email-sending status and capabilities of your Amazon SES account in the current AWS Region.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountResponse'
        '480':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '481':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters: []
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v2/email/deliverability-dashboard/blacklist-report#BlacklistItemNames:
    get:
      operationId: GetBlacklistReports
      description: Retrieve a list of the blacklists that your dedicated IP addresses appear on.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBlacklistReportsResponse'
        '480':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters:
        - name: BlacklistItemNames
          in: query
          required: true
          description: A list of IP addresses that you want to retrieve blacklist information about. You can only specify the dedicated IP addresses that you use to send email using Amazon SES or Amazon Pinpoint.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/BlacklistItemName'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/v2/email/dedicated-ips/{IP}':
    get:
      operationId: GetDedicatedIp
      description: 'Get information about a dedicated IP address, including the name of the dedicated IP pool that it''s associated with, as well information about the automatic warm-up process for the address.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDedicatedIpResponse'
        '480':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters:
        - name: IP
          in: path
          required: true
          description: The IP address that you want to obtain more information about. The value you specify has to be a dedicated IP address that's assocaited with your AWS account.
          schema:
            type: string
            description: An IPv4 address.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v2/email/dedicated-ips:
    get:
      operationId: GetDedicatedIps
      description: List the dedicated IP addresses that are associated with your AWS account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDedicatedIpsResponse'
        '480':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters:
        - name: PoolName
          in: query
          required: false
          description: The name of the IP pool that the dedicated IP address is associated with.
          schema:
            type: string
            description: The name of a dedicated IP pool.
        - name: NextToken
          in: query
          required: false
          description: A token returned from a previous call to <code>GetDedicatedIps</code> to indicate the position of the dedicated IP pool in the list of IP pools.
          schema:
            type: string
        - name: PageSize
          in: query
          required: false
          description: 'The number of results to show in a single call to <code>GetDedicatedIpsRequest</code>. If the number of results is larger than the number you specified in this parameter, then the response includes a <code>NextToken</code> element, which you can use to obtain additional results.'
          schema:
            type: integer
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v2/email/deliverability-dashboard:
    get:
      operationId: GetDeliverabilityDashboardOptions
      description: '<p>Retrieve information about the status of the Deliverability dashboard for your account. When the Deliverability dashboard is enabled, you gain access to reputation, deliverability, and other metrics for the domains that you use to send email. You also gain the ability to perform predictive inbox placement tests.</p> <p>When you use the Deliverability dashboard, you pay a monthly subscription charge, in addition to any other fees that you accrue by using Amazon SES and other AWS services. For more information about the features and cost of a Deliverability dashboard subscription, see <a href="http://aws.amazon.com/ses/pricing/">Amazon SES Pricing</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDeliverabilityDashboardOptionsResponse'
        '480':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters: []
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: PutDeliverabilityDashboardOption
      description: '<p>Enable or disable the Deliverability dashboard. When you enable the Deliverability dashboard, you gain access to reputation, deliverability, and other metrics for the domains that you use to send email. You also gain the ability to perform predictive inbox placement tests.</p> <p>When you use the Deliverability dashboard, you pay a monthly subscription charge, in addition to any other fees that you accrue by using Amazon SES and other AWS services. For more information about the features and cost of a Deliverability dashboard subscription, see <a href="http://aws.amazon.com/ses/pricing/">Amazon SES Pricing</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutDeliverabilityDashboardOptionResponse'
        '480':
          description: AlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - DashboardEnabled
              properties:
                DashboardEnabled:
                  description: 'Specifies whether to enable the Deliverability dashboard. To enable the dashboard, set this value to <code>true</code>.'
                  type: boolean
                SubscribedDomains:
                  description: 'An object that contains information about the Deliverability dashboard subscription for a verified domain that you use to send email and currently has an active Deliverability dashboard subscription. If a Deliverability dashboard subscription is active for a domain, you gain access to reputation, inbox placement, and other metrics for the domain.'
                  type: array
                  items:
                    $ref: '#/components/schemas/DomainDeliverabilityTrackingOption'
  '/v2/email/deliverability-dashboard/test-reports/{ReportId}':
    get:
      operationId: GetDeliverabilityTestReport
      description: Retrieve the results of a predictive inbox placement test.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDeliverabilityTestReportResponse'
        '480':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters:
        - name: ReportId
          in: path
          required: true
          description: A unique string that identifies the predictive inbox placement test.
          schema:
            type: string
            description: A unique string that identifies a Deliverability dashboard report.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/v2/email/deliverability-dashboard/campaigns/{CampaignId}':
    get:
      operationId: GetDomainDeliverabilityCampaign
      description: Retrieve all the deliverability data for a specific campaign. This data is available for a campaign only if the campaign sent email by using a domain that the Deliverability dashboard is enabled for.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDomainDeliverabilityCampaignResponse'
        '480':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '481':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      parameters:
        - name: CampaignId
          in: path
          required: true
          description: The unique identifier for the campaign. The Deliverability dashboard automatically generates and assigns this identifier to a campaign.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/v2/email/deliverability-dashboard/statistics-report/{Domain}#StartDate&EndDate':
    get:
      operationId: GetDomainStatisticsReport
      description: Retrieve inbox placement and engagement rates for the domains that you use to send email.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDomainStatisticsReportResponse'
        '480':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters:
        - name: Domain
          in: path
          required: true
          description: The domain that you want to obtain deliverability metrics for.
          schema:
            type: string
            minLength: 1
        - name: StartDate
          in: query
          required: true
          description: The first day (in Unix time) that you want to obtain domain deliverability metrics for.
          schema:
            type: string
            format: date-time
        - name: EndDate
          in: query
          required: true
          description: The last day (in Unix time) that you want to obtain domain deliverability metrics for. The <code>EndDate</code> that you specify has to be less than or equal to 30 days after the <code>StartDate</code>.
          schema:
            type: string
            format: date-time
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/v2/email/identities/{EmailIdentity}/policies':
    get:
      operationId: GetEmailIdentityPolicies
      description: '<p>Returns the requested sending authorization policies for the given identity (an email address or a domain). The policies are returned as a map of policy names to policy contents. You can retrieve a maximum of 20 policies at a time.</p> <note> <p>This API is for the identity owner only. If you have not verified the identity, this API will return an error.</p> </note> <p>Sending authorization is a feature that enables an identity owner to authorize other senders to use its identities. For information about using sending authorization, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEmailIdentityPoliciesResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters:
        - name: EmailIdentity
          in: path
          required: true
          description: The email identity that you want to retrieve policies for.
          schema:
            type: string
            minLength: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/v2/email/import-jobs/{JobId}':
    get:
      operationId: GetImportJob
      description: Provides information about an import job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetImportJobResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: JobId
          in: path
          required: true
          description: The ID of the import job.
          schema:
            type: string
            description: A string that represents the import job ID.
            minLength: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v2/email/deliverability-dashboard/test-reports:
    get:
      operationId: ListDeliverabilityTestReports
      description: 'Show a list of the predictive inbox placement tests that you''ve performed, regardless of their statuses. For predictive inbox placement tests that are complete, you can use the <code>GetDeliverabilityTestReport</code> operation to view the results.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDeliverabilityTestReportsResponse'
        '480':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters:
        - name: NextToken
          in: query
          required: false
          description: A token returned from a previous call to <code>ListDeliverabilityTestReports</code> to indicate the position in the list of predictive inbox placement tests.
          schema:
            type: string
        - name: PageSize
          in: query
          required: false
          description: '<p>The number of results to show in a single call to <code>ListDeliverabilityTestReports</code>. If the number of results is larger than the number you specified in this parameter, then the response includes a <code>NextToken</code> element, which you can use to obtain additional results.</p> <p>The value you specify has to be at least 0, and can be no more than 1000.</p>'
          schema:
            type: integer
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/v2/email/deliverability-dashboard/domains/{SubscribedDomain}/campaigns#StartDate&EndDate':
    get:
      operationId: ListDomainDeliverabilityCampaigns
      description: Retrieve deliverability data for all the campaigns that used a specific domain to send email during a specified time range. This data is available for a domain only if you enabled the Deliverability dashboard for the domain.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDomainDeliverabilityCampaignsResponse'
        '480':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '481':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      parameters:
        - name: StartDate
          in: query
          required: true
          description: 'The first day, in Unix time format, that you want to obtain deliverability data for.'
          schema:
            type: string
            format: date-time
        - name: EndDate
          in: query
          required: true
          description: 'The last day, in Unix time format, that you want to obtain deliverability data for. This value has to be less than or equal to 30 days after the value of the <code>StartDate</code> parameter.'
          schema:
            type: string
            format: date-time
        - name: SubscribedDomain
          in: path
          required: true
          description: The domain to obtain deliverability data for.
          schema:
            type: string
        - name: NextToken
          in: query
          required: false
          description: A token that’s returned from a previous call to the <code>ListDomainDeliverabilityCampaigns</code> operation. This token indicates the position of a campaign in the list of campaigns.
          schema:
            type: string
        - name: PageSize
          in: query
          required: false
          description: 'The maximum number of results to include in response to a single call to the <code>ListDomainDeliverabilityCampaigns</code> operation. If the number of results is larger than the number that you specify in this parameter, the response includes a <code>NextToken</code> element, which you can use to obtain additional results.'
          schema:
            type: integer
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v2/email/suppression/addresses:
    get:
      operationId: ListSuppressedDestinations
      description: Retrieves a list of email addresses that are on the suppression list for your account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSuppressedDestinationsResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      parameters:
        - name: Reason
          in: query
          required: false
          description: The factors that caused the email address to be added to .
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SuppressionListReason'
        - name: StartDate
          in: query
          required: false
          description: Used to filter the list of suppressed email destinations so that it only includes addresses that were added to the list after a specific date. The date that you specify should be in Unix time format.
          schema:
            type: string
            format: date-time
        - name: EndDate
          in: query
          required: false
          description: Used to filter the list of suppressed email destinations so that it only includes addresses that were added to the list before a specific date. The date that you specify should be in Unix time format.
          schema:
            type: string
            format: date-time
        - name: NextToken
          in: query
          required: false
          description: A token returned from a previous call to <code>ListSuppressedDestinations</code> to indicate the position in the list of suppressed email addresses.
          schema:
            type: string
        - name: PageSize
          in: query
          required: false
          description: 'The number of results to show in a single call to <code>ListSuppressedDestinations</code>. If the number of results is larger than the number you specified in this parameter, then the response includes a <code>NextToken</code> element, which you can use to obtain additional results.'
          schema:
            type: integer
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: PutSuppressedDestination
      description: Adds an email address to the suppression list for your account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutSuppressedDestinationResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - EmailAddress
                - Reason
              properties:
                EmailAddress:
                  description: The email address that should be added to the suppression list for your account.
                  type: string
                Reason:
                  description: '<p>The reason that the address was added to the suppression list for your account. The value can be one of the following:</p> <ul> <li> <p> <code>COMPLAINT</code> – Amazon SES added an email address to the suppression list for your account because a message sent to that address results in a complaint.</p> </li> <li> <p> <code>BOUNCE</code> – Amazon SES added an email address to the suppression list for your account because a message sent to that address results in a hard bounce.</p> </li> </ul>'
                  type: string
                  enum:
                    - BOUNCE
                    - COMPLAINT
  /v2/email/tags#ResourceArn:
    get:
      operationId: ListTagsForResource
      description: "Retrieve a list of the tags (keys and values) that are associated with a specified resource. A\_<i>tag</i>\_is a label that you optionally define and associate with a resource. Each tag consists of a required\_<i>tag key</i>\_and an optional associated\_<i>tag value</i>. A tag key is a general label that acts as a category for more specific tag values. A tag value acts as a descriptor within a tag key."
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: ResourceArn
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the resource that you want to retrieve tag information for.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v2/email/account/dedicated-ips/warmup:
    put:
      operationId: PutAccountDedicatedIpWarmupAttributes
      description: Enable or disable the automatic warm-up feature for dedicated IP addresses.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutAccountDedicatedIpWarmupAttributesResponse'
        '480':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '481':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AutoWarmupEnabled:
                  description: 'Enables or disables the automatic warm-up feature for dedicated IP addresses that are associated with your Amazon SES account in the current AWS Region. Set to <code>true</code> to enable the automatic warm-up feature, or set to <code>false</code> to disable it.'
                  type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v2/email/account/details:
    post:
      operationId: PutAccountDetails
      description: Update your Amazon SES account details.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutAccountDetailsResponse'
        '480':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '481':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - MailType
                - WebsiteURL
                - UseCaseDescription
              properties:
                MailType:
                  description: The type of email your account will send.
                  type: string
                  enum:
                    - MARKETING
                    - TRANSACTIONAL
                WebsiteURL:
                  description: The URL of your website. This information helps us better understand the type of content that you plan to send.
                  type: string
                  pattern: '^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?'
                  minLength: 1
                  maxLength: 1000
                  format: password
                ContactLanguage:
                  description: The language you would prefer to be contacted with.
                  type: string
                  enum:
                    - EN
                    - JA
                UseCaseDescription:
                  description: A description of the types of email that you plan to send.
                  type: string
                  minLength: 1
                  maxLength: 5000
                  format: password
                AdditionalContactEmailAddresses:
                  description: Additional email addresses that you would like to be notified regarding Amazon SES matters.
                  type: array
                  items:
                    $ref: '#/components/schemas/AdditionalContactEmailAddress'
                  minItems: 1
                  maxItems: 4
                ProductionAccessEnabled:
                  description: '<p>Indicates whether or not your account should have production access in the current AWS Region.</p> <p>If the value is <code>false</code>, then your account is in the <i>sandbox</i>. When your account is in the sandbox, you can only send email to verified identities. Additionally, the maximum number of emails you can send in a 24-hour period (your sending quota) is 200, and the maximum number of emails you can send per second (your maximum sending rate) is 1.</p> <p>If the value is <code>true</code>, then your account has production access. When your account has production access, you can send email to any address. The sending quota and maximum sending rate for your account vary based on your specific use case.</p>'
                  type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v2/email/account/sending:
    put:
      operationId: PutAccountSendingAttributes
      description: Enable or disable the ability of your account to send email.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutAccountSendingAttributesResponse'
        '480':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '481':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SendingEnabled:
                  description: '<p>Enables or disables your account''s ability to send email. Set to <code>true</code> to enable email sending, or set to <code>false</code> to disable email sending.</p> <note> <p>If AWS paused your account''s ability to send email, you can''t use this operation to resume your account''s ability to send email.</p> </note>'
                  type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v2/email/account/suppression:
    put:
      operationId: PutAccountSuppressionAttributes
      description: Change the settings for the account-level suppression list.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutAccountSuppressionAttributesResponse'
        '480':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '481':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SuppressedReasons:
                  description: '<p>A list that contains the reasons that email addresses will be automatically added to the suppression list for your account. This list can contain any or all of the following:</p> <ul> <li> <p> <code>COMPLAINT</code> – Amazon SES adds an email address to the suppression list for your account when a message sent to that address results in a complaint.</p> </li> <li> <p> <code>BOUNCE</code> – Amazon SES adds an email address to the suppression list for your account when a message sent to that address results in a hard bounce.</p> </li> </ul>'
                  type: array
                  items:
                    $ref: '#/components/schemas/SuppressionListReason'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/v2/email/configuration-sets/{ConfigurationSetName}/delivery-options':
    put:
      operationId: PutConfigurationSetDeliveryOptions
      description: Associate a configuration set with a dedicated IP pool. You can use dedicated IP pools to create groups of dedicated IP addresses for sending specific types of email.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutConfigurationSetDeliveryOptionsResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters:
        - name: ConfigurationSetName
          in: path
          required: true
          description: The name of the configuration set that you want to associate with a dedicated IP pool.
          schema:
            type: string
            description: '<p>The name of a configuration set.</p> <p> <i>Configuration sets</i> are groups of rules that you can apply to the emails you send. You apply a configuration set to an email by including a reference to the configuration set in the headers of the email. When you apply a configuration set to an email, all of the rules in that configuration set are applied to the email.</p>'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TlsPolicy:
                  description: 'Specifies whether messages that use the configuration set are required to use Transport Layer Security (TLS). If the value is <code>Require</code>, messages are only delivered if a TLS connection can be established. If the value is <code>Optional</code>, messages can be delivered in plain text if a TLS connection can''t be established.'
                  type: string
                  enum:
                    - REQUIRE
                    - OPTIONAL
                SendingPoolName:
                  description: The name of the dedicated IP pool that you want to associate with the configuration set.
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/v2/email/configuration-sets/{ConfigurationSetName}/reputation-options':
    put:
      operationId: PutConfigurationSetReputationOptions
      description: Enable or disable collection of reputation metrics for emails that you send using a particular configuration set in a specific AWS Region.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutConfigurationSetReputationOptionsResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters:
        - name: ConfigurationSetName
          in: path
          required: true
          description: The name of the configuration set that you want to enable or disable reputation metric tracking for.
          schema:
            type: string
            description: '<p>The name of a configuration set.</p> <p> <i>Configuration sets</i> are groups of rules that you can apply to the emails you send. You apply a configuration set to an email by including a reference to the configuration set in the headers of the email. When you apply a configuration set to an email, all of the rules in that configuration set are applied to the email.</p>'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ReputationMetricsEnabled:
                  description: 'If <code>true</code>, tracking of reputation metrics is enabled for the configuration set. If <code>false</code>, tracking of reputation metrics is disabled for the configuration set.'
                  type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/v2/email/configuration-sets/{ConfigurationSetName}/sending':
    put:
      operationId: PutConfigurationSetSendingOptions
      description: Enable or disable email sending for messages that use a particular configuration set in a specific AWS Region.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutConfigurationSetSendingOptionsResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters:
        - name: ConfigurationSetName
          in: path
          required: true
          description: The name of the configuration set that you want to enable or disable email sending for.
          schema:
            type: string
            description: '<p>The name of a configuration set.</p> <p> <i>Configuration sets</i> are groups of rules that you can apply to the emails you send. You apply a configuration set to an email by including a reference to the configuration set in the headers of the email. When you apply a configuration set to an email, all of the rules in that configuration set are applied to the email.</p>'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SendingEnabled:
                  description: 'If <code>true</code>, email sending is enabled for the configuration set. If <code>false</code>, email sending is disabled for the configuration set.'
                  type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/v2/email/configuration-sets/{ConfigurationSetName}/suppression-options':
    put:
      operationId: PutConfigurationSetSuppressionOptions
      description: Specify the account suppression list preferences for a configuration set.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutConfigurationSetSuppressionOptionsResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters:
        - name: ConfigurationSetName
          in: path
          required: true
          description: The name of the configuration set that you want to change the suppression list preferences for.
          schema:
            type: string
            description: '<p>The name of a configuration set.</p> <p> <i>Configuration sets</i> are groups of rules that you can apply to the emails you send. You apply a configuration set to an email by including a reference to the configuration set in the headers of the email. When you apply a configuration set to an email, all of the rules in that configuration set are applied to the email.</p>'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SuppressedReasons:
                  description: '<p>A list that contains the reasons that email addresses are automatically added to the suppression list for your account. This list can contain any or all of the following:</p> <ul> <li> <p> <code>COMPLAINT</code> – Amazon SES adds an email address to the suppression list for your account when a message sent to that address results in a complaint.</p> </li> <li> <p> <code>BOUNCE</code> – Amazon SES adds an email address to the suppression list for your account when a message sent to that address results in a hard bounce.</p> </li> </ul>'
                  type: array
                  items:
                    $ref: '#/components/schemas/SuppressionListReason'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/v2/email/configuration-sets/{ConfigurationSetName}/tracking-options':
    put:
      operationId: PutConfigurationSetTrackingOptions
      description: Specify a custom domain to use for open and click tracking elements in email that you send.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutConfigurationSetTrackingOptionsResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters:
        - name: ConfigurationSetName
          in: path
          required: true
          description: The name of the configuration set that you want to add a custom tracking domain to.
          schema:
            type: string
            description: '<p>The name of a configuration set.</p> <p> <i>Configuration sets</i> are groups of rules that you can apply to the emails you send. You apply a configuration set to an email by including a reference to the configuration set in the headers of the email. When you apply a configuration set to an email, all of the rules in that configuration set are applied to the email.</p>'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                CustomRedirectDomain:
                  description: The domain that you want to use for tracking open and click events.
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/v2/email/dedicated-ips/{IP}/pool':
    put:
      operationId: PutDedicatedIpInPool
      description: '<p>Move a dedicated IP address to an existing dedicated IP pool.</p> <note> <p>The dedicated IP address that you specify must already exist, and must be associated with your AWS account. </p> <p>The dedicated IP pool you specify must already exist. You can create a new pool by using the <code>CreateDedicatedIpPool</code> operation.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutDedicatedIpInPoolResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters:
        - name: IP
          in: path
          required: true
          description: The IP address that you want to move to the dedicated IP pool. The value you specify has to be a dedicated IP address that's associated with your AWS account.
          schema:
            type: string
            description: An IPv4 address.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - DestinationPoolName
              properties:
                DestinationPoolName:
                  description: The name of a dedicated IP pool.
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/v2/email/dedicated-ips/{IP}/warmup':
    put:
      operationId: PutDedicatedIpWarmupAttributes
      description: <p/>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutDedicatedIpWarmupAttributesResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters:
        - name: IP
          in: path
          required: true
          description: The dedicated IP address that you want to update the warm-up attributes for.
          schema:
            type: string
            description: An IPv4 address.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - WarmupPercentage
              properties:
                WarmupPercentage:
                  description: The warm-up percentage that you want to associate with the dedicated IP address.
                  type: integer
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/v2/email/identities/{EmailIdentity}/configuration-set':
    put:
      operationId: PutEmailIdentityConfigurationSetAttributes
      description: Used to associate a configuration set with an email identity.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutEmailIdentityConfigurationSetAttributesResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters:
        - name: EmailIdentity
          in: path
          required: true
          description: The email address or domain that you want to associate with a configuration set.
          schema:
            type: string
            minLength: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ConfigurationSetName:
                  description: '<p>The name of a configuration set.</p> <p> <i>Configuration sets</i> are groups of rules that you can apply to the emails you send. You apply a configuration set to an email by including a reference to the configuration set in the headers of the email. When you apply a configuration set to an email, all of the rules in that configuration set are applied to the email.</p>'
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/v2/email/identities/{EmailIdentity}/dkim':
    put:
      operationId: PutEmailIdentityDkimAttributes
      description: Used to enable or disable DKIM authentication for an email identity.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutEmailIdentityDkimAttributesResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters:
        - name: EmailIdentity
          in: path
          required: true
          description: The email identity that you want to change the DKIM settings for.
          schema:
            type: string
            minLength: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SigningEnabled:
                  description: '<p>Sets the DKIM signing configuration for the identity.</p> <p>When you set this value <code>true</code>, then the messages that are sent from the identity are signed using DKIM. If you set this value to <code>false</code>, your messages are sent without DKIM signing.</p>'
                  type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/v1/email/identities/{EmailIdentity}/dkim/signing':
    put:
      operationId: PutEmailIdentityDkimSigningAttributes
      description: '<p>Used to configure or change the DKIM authentication settings for an email domain identity. You can use this operation to do any of the following:</p> <ul> <li> <p>Update the signing attributes for an identity that uses Bring Your Own DKIM (BYODKIM).</p> </li> <li> <p>Change from using no DKIM authentication to using Easy DKIM.</p> </li> <li> <p>Change from using no DKIM authentication to using BYODKIM.</p> </li> <li> <p>Change from using Easy DKIM to using BYODKIM.</p> </li> <li> <p>Change from using BYODKIM to using Easy DKIM.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutEmailIdentityDkimSigningAttributesResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters:
        - name: EmailIdentity
          in: path
          required: true
          description: The email identity that you want to configure DKIM for.
          schema:
            type: string
            minLength: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - SigningAttributesOrigin
              properties:
                SigningAttributesOrigin:
                  description: '<p>The method that you want to use to configure DKIM for the identity. There are two possible values:</p> <ul> <li> <p> <code>AWS_SES</code> – Configure DKIM for the identity by using <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">Easy DKIM</a>.</p> </li> <li> <p> <code>EXTERNAL</code> – Configure DKIM for the identity by using Bring Your Own DKIM (BYODKIM).</p> </li> </ul>'
                  type: string
                  enum:
                    - AWS_SES
                    - EXTERNAL
                SigningAttributes:
                  description: An object that contains information about the tokens used for setting up Bring Your Own DKIM (BYODKIM).
                  type: object
                  properties:
                    DomainSigningSelector:
                      $ref: '#/components/schemas/Selector'
                      description: A string that's used to identify a public key in the DNS configuration for a domain.
                    DomainSigningPrivateKey:
                      $ref: '#/components/schemas/PrivateKey'
                      description: '<p>A private key that''s used to generate a DKIM signature.</p> <p>The private key must use 1024-bit RSA encryption, and must be encoded using base64 encoding.</p>'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/v2/email/identities/{EmailIdentity}/feedback':
    put:
      operationId: PutEmailIdentityFeedbackAttributes
      description: '<p>Used to enable or disable feedback forwarding for an identity. This setting determines what happens when an identity is used to send an email that results in a bounce or complaint event.</p> <p>If the value is <code>true</code>, you receive email notifications when bounce or complaint events occur. These notifications are sent to the address that you specified in the <code>Return-Path</code> header of the original email.</p> <p>You''re required to have a method of tracking bounces and complaints. If you haven''t set up another mechanism for receiving bounce or complaint notifications (for example, by setting up an event destination), you receive an email notification when these events occur (even if this setting is disabled).</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutEmailIdentityFeedbackAttributesResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters:
        - name: EmailIdentity
          in: path
          required: true
          description: The email identity that you want to configure bounce and complaint feedback forwarding for.
          schema:
            type: string
            minLength: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                EmailForwardingEnabled:
                  description: '<p>Sets the feedback forwarding configuration for the identity.</p> <p>If the value is <code>true</code>, you receive email notifications when bounce or complaint events occur. These notifications are sent to the address that you specified in the <code>Return-Path</code> header of the original email.</p> <p>You''re required to have a method of tracking bounces and complaints. If you haven''t set up another mechanism for receiving bounce or complaint notifications (for example, by setting up an event destination), you receive an email notification when these events occur (even if this setting is disabled).</p>'
                  type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/v2/email/identities/{EmailIdentity}/mail-from':
    put:
      operationId: PutEmailIdentityMailFromAttributes
      description: Used to enable or disable the custom Mail-From domain configuration for an email identity.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutEmailIdentityMailFromAttributesResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters:
        - name: EmailIdentity
          in: path
          required: true
          description: The verified email identity that you want to set up the custom MAIL FROM domain for.
          schema:
            type: string
            minLength: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MailFromDomain:
                  description: The domain that you want to use as a MAIL FROM domain.
                  type: string
                BehaviorOnMxFailure:
                  description: '<p>The action that you want to take if the required MX record can''t be found when you send an email. When you set this value to <code>UseDefaultValue</code>, the mail is sent using <i>amazonses.com</i> as the MAIL FROM domain. When you set this value to <code>RejectMessage</code>, the Amazon SES API v2 returns a <code>MailFromDomainNotVerified</code> error, and doesn''t attempt to deliver the email.</p> <p>These behaviors are taken when the custom MAIL FROM domain configuration is in the <code>Pending</code>, <code>Failed</code>, and <code>TemporaryFailure</code> states.</p>'
                  type: string
                  enum:
                    - USE_DEFAULT_VALUE
                    - REJECT_MESSAGE
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v2/email/outbound-bulk-emails:
    post:
      operationId: SendBulkEmail
      description: Composes an email message to multiple destinations.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendBulkEmailResponse'
        '480':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: AccountSuspendedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSuspendedException'
        '483':
          description: SendingPausedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendingPausedException'
        '484':
          description: MessageRejected
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageRejected'
        '485':
          description: MailFromDomainNotVerifiedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailFromDomainNotVerifiedException'
        '486':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '487':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - DefaultContent
                - BulkEmailEntries
              properties:
                FromEmailAddress:
                  description: The email address that you want to use as the "From" address for the email. The address that you specify has to be verified.
                  type: string
                FromEmailAddressIdentityArn:
                  description: '<p>This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to use the email address specified in the <code>FromEmailAddress</code> parameter.</p> <p>For example, if the owner of example.com (which has ARN arn:aws:ses:us-east-1:123456789012:identity/example.com) attaches a policy to it that authorizes you to use sender@example.com, then you would specify the <code>FromEmailAddressIdentityArn</code> to be arn:aws:ses:us-east-1:123456789012:identity/example.com, and the <code>FromEmailAddress</code> to be sender@example.com.</p> <p>For more information about sending authorization, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer Guide</a>.</p>'
                  type: string
                ReplyToAddresses:
                  description: 'The "Reply-to" email addresses for the message. When the recipient replies to the message, each Reply-to address receives the reply.'
                  type: array
                  items:
                    $ref: '#/components/schemas/EmailAddress'
                FeedbackForwardingEmailAddress:
                  description: The address that you want bounce and complaint notifications to be sent to.
                  type: string
                FeedbackForwardingEmailAddressIdentityArn:
                  description: '<p>This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to use the email address specified in the <code>FeedbackForwardingEmailAddress</code> parameter.</p> <p>For example, if the owner of example.com (which has ARN arn:aws:ses:us-east-1:123456789012:identity/example.com) attaches a policy to it that authorizes you to use feedback@example.com, then you would specify the <code>FeedbackForwardingEmailAddressIdentityArn</code> to be arn:aws:ses:us-east-1:123456789012:identity/example.com, and the <code>FeedbackForwardingEmailAddress</code> to be feedback@example.com.</p> <p>For more information about sending authorization, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer Guide</a>.</p>'
                  type: string
                DefaultEmailTags:
                  description: A list of message tags.
                  type: array
                  items:
                    $ref: '#/components/schemas/MessageTag'
                DefaultContent:
                  description: An object that contains the body of the message. You can specify a template message.
                  type: object
                  properties:
                    Template:
                      $ref: '#/components/schemas/Template'
                      description: The template to use for the bulk email message.
                BulkEmailEntries:
                  description: A list of <code>BulkEmailEntry</code> objects.
                  type: array
                  items:
                    $ref: '#/components/schemas/BulkEmailEntry'
                ConfigurationSetName:
                  description: '<p>The name of a configuration set.</p> <p> <i>Configuration sets</i> are groups of rules that you can apply to the emails you send. You apply a configuration set to an email by including a reference to the configuration set in the headers of the email. When you apply a configuration set to an email, all of the rules in that configuration set are applied to the email.</p>'
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v2/email/outbound-custom-verification-emails:
    post:
      operationId: SendCustomVerificationEmail
      description: '<p>Adds an email address to the list of identities for your Amazon SES account in the current AWS Region and attempts to verify it. As a result of executing this operation, a customized verification email is sent to the specified address.</p> <p>To use this operation, you must first create a custom verification email template. For more information about creating and using custom verification email templates, see <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-verify-address-custom.html">Using Custom Verification Email Templates</a> in the <i>Amazon SES Developer Guide</i>.</p> <p>You can execute this operation no more than once per second.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendCustomVerificationEmailResponse'
        '480':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: MessageRejected
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageRejected'
        '483':
          description: SendingPausedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendingPausedException'
        '484':
          description: MailFromDomainNotVerifiedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailFromDomainNotVerifiedException'
        '485':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '486':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - EmailAddress
                - TemplateName
              properties:
                EmailAddress:
                  description: The email address to verify.
                  type: string
                TemplateName:
                  description: The name of the template. You will refer to this name when you send email using the <code>SendTemplatedEmail</code> or <code>SendBulkTemplatedEmail</code> operations.
                  type: string
                  minLength: 1
                ConfigurationSetName:
                  description: '<p>The name of a configuration set.</p> <p> <i>Configuration sets</i> are groups of rules that you can apply to the emails you send. You apply a configuration set to an email by including a reference to the configuration set in the headers of the email. When you apply a configuration set to an email, all of the rules in that configuration set are applied to the email.</p>'
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v2/email/outbound-emails:
    post:
      operationId: SendEmail
      description: '<p>Sends an email message. You can use the Amazon SES API v2 to send two types of messages:</p> <ul> <li> <p> <b>Simple</b> – A standard email message. When you create this type of message, you specify the sender, the recipient, and the message body, and Amazon SES assembles the message for you.</p> </li> <li> <p> <b>Raw</b> – A raw, MIME-formatted email message. When you send this type of email, you have to specify all of the message headers, as well as the message body. You can use this message type to send messages that contain attachments. The message that you specify has to be a valid MIME message.</p> </li> <li> <p> <b>Templated</b> – A message that contains personalization tags. When you send this type of email, Amazon SES API v2 automatically replaces the tags with values that you specify.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailResponse'
        '480':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: AccountSuspendedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSuspendedException'
        '483':
          description: SendingPausedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendingPausedException'
        '484':
          description: MessageRejected
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageRejected'
        '485':
          description: MailFromDomainNotVerifiedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailFromDomainNotVerifiedException'
        '486':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '487':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Content
              properties:
                FromEmailAddress:
                  description: 'The email address that you want to use as the "From" address for the email. The address that you specify has to be verified. '
                  type: string
                FromEmailAddressIdentityArn:
                  description: '<p>This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to use the email address specified in the <code>FromEmailAddress</code> parameter.</p> <p>For example, if the owner of example.com (which has ARN arn:aws:ses:us-east-1:123456789012:identity/example.com) attaches a policy to it that authorizes you to use sender@example.com, then you would specify the <code>FromEmailAddressIdentityArn</code> to be arn:aws:ses:us-east-1:123456789012:identity/example.com, and the <code>FromEmailAddress</code> to be sender@example.com.</p> <p>For more information about sending authorization, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer Guide</a>.</p> <p>For Raw emails, the <code>FromEmailAddressIdentityArn</code> value overrides the X-SES-SOURCE-ARN and X-SES-FROM-ARN headers specified in raw email message content.</p>'
                  type: string
                Destination:
                  description: An object that describes the recipients for an email.
                  type: object
                  properties:
                    ToAddresses:
                      $ref: '#/components/schemas/EmailAddressList'
                      description: An array that contains the email addresses of the "To" recipients for the email.
                    CcAddresses:
                      $ref: '#/components/schemas/EmailAddressList'
                      description: An array that contains the email addresses of the "CC" (carbon copy) recipients for the email.
                    BccAddresses:
                      $ref: '#/components/schemas/EmailAddressList'
                      description: An array that contains the email addresses of the "BCC" (blind carbon copy) recipients for the email.
                ReplyToAddresses:
                  description: 'The "Reply-to" email addresses for the message. When the recipient replies to the message, each Reply-to address receives the reply.'
                  type: array
                  items:
                    $ref: '#/components/schemas/EmailAddress'
                FeedbackForwardingEmailAddress:
                  description: The address that you want bounce and complaint notifications to be sent to.
                  type: string
                FeedbackForwardingEmailAddressIdentityArn:
                  description: '<p>This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to use the email address specified in the <code>FeedbackForwardingEmailAddress</code> parameter.</p> <p>For example, if the owner of example.com (which has ARN arn:aws:ses:us-east-1:123456789012:identity/example.com) attaches a policy to it that authorizes you to use feedback@example.com, then you would specify the <code>FeedbackForwardingEmailAddressIdentityArn</code> to be arn:aws:ses:us-east-1:123456789012:identity/example.com, and the <code>FeedbackForwardingEmailAddress</code> to be feedback@example.com.</p> <p>For more information about sending authorization, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer Guide</a>.</p>'
                  type: string
                Content:
                  description: 'An object that defines the entire content of the email, including the message headers and the body content. You can create a simple email message, in which you specify the subject and the text and HTML versions of the message body. You can also create raw messages, in which you specify a complete MIME-formatted message. Raw messages can include attachments and custom headers.'
                  type: object
                  properties:
                    Simple:
                      $ref: '#/components/schemas/Message'
                      description: The simple email message. The message consists of a subject and a message body.
                    Raw:
                      $ref: '#/components/schemas/RawMessage'
                      description: '<p>The raw email message. The message has to meet the following criteria:</p> <ul> <li> <p>The message has to contain a header and a body, separated by one blank line.</p> </li> <li> <p>All of the required header fields must be present in the message.</p> </li> <li> <p>Each part of a multipart MIME message must be formatted properly.</p> </li> <li> <p>If you include attachments, they must be in a file format that the Amazon SES API v2 supports. </p> </li> <li> <p>The entire message must be Base64 encoded.</p> </li> <li> <p>If any of the MIME parts in your message contain content that is outside of the 7-bit ASCII character range, you should encode that content to ensure that recipients'' email clients render the message properly.</p> </li> <li> <p>The length of any single line of text in the message can''t exceed 1,000 characters. This restriction is defined in <a href="https://tools.ietf.org/html/rfc5321">RFC 5321</a>.</p> </li> </ul>'
                    Template:
                      $ref: '#/components/schemas/Template'
                      description: The template to use for the email message.
                EmailTags:
                  description: A list of message tags.
                  type: array
                  items:
                    $ref: '#/components/schemas/MessageTag'
                ConfigurationSetName:
                  description: '<p>The name of a configuration set.</p> <p> <i>Configuration sets</i> are groups of rules that you can apply to the emails you send. You apply a configuration set to an email by including a reference to the configuration set in the headers of the email. When you apply a configuration set to an email, all of the rules in that configuration set are applied to the email.</p>'
                  type: string
                ListManagementOptions:
                  description: 'An object used to specify a list or topic to which an email belongs, which will be used when a contact chooses to unsubscribe.'
                  type: object
                  properties:
                    ContactListName:
                      $ref: '#/components/schemas/ContactListName'
                      description: The name of the contact list.
                    TopicName:
                      $ref: '#/components/schemas/TopicName'
                      description: The name of the topic.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v2/email/tags:
    post:
      operationId: TagResource
      description: "<p>Add one or more tags (keys and values) to a specified resource. A <i>tag</i>\_is a label that you optionally define and associate with a resource. Tags can help you categorize and manage resources in different ways, such as by purpose, owner, environment, or other criteria. A resource can have as many as 50 tags.</p> <p>Each tag consists of a required\_<i>tag key</i>\_and an associated\_<i>tag value</i>, both of which you define. A tag key is a general label that acts as a category for more specific tag values. A tag value acts as a descriptor within a tag key.</p>"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ResourceArn
                - Tags
              properties:
                ResourceArn:
                  description: The Amazon Resource Name (ARN) of the resource that you want to add one or more tags to.
                  type: string
                Tags:
                  description: A list of the tags that you want to add to the resource. A tag consists of a required tag key (<code>Key</code>) and an associated tag value (<code>Value</code>). The maximum length of a tag key is 128 characters. The maximum length of a tag value is 256 characters.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/v2/email/templates/{TemplateName}/render':
    post:
      operationId: TestRenderEmailTemplate
      description: <p>Creates a preview of the MIME content of an email when provided with a template and a set of replacement data.</p> <p>You can execute this operation no more than once per second.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestRenderEmailTemplateResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      parameters:
        - name: TemplateName
          in: path
          required: true
          description: The name of the template that you want to render.
          schema:
            type: string
            description: The name of the template. You will refer to this name when you send email using the <code>SendTemplatedEmail</code> or <code>SendBulkTemplatedEmail</code> operations.
            minLength: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - TemplateData
              properties:
                TemplateData:
                  description: An object that defines the values to use for message variables in the template. This object is a set of key-value pairs. Each key defines a message variable in the template. The corresponding value defines the value to use for that variable.
                  type: string
                  maxLength: 262144
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v2/email/tags#ResourceArn&TagKeys:
    delete:
      operationId: UntagResource
      description: Remove one or more tags (keys and values) from a specified resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: ResourceArn
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the resource that you want to remove one or more tags from.
          schema:
            type: string
        - name: TagKeys
          in: query
          required: true
          description: '<p>The tags (tag keys) that you want to remove from the resource. When you specify a tag key, the action removes both that key and its associated tag value.</p> <p>To remove more than one tag from the resource, append the <code>TagKeys</code> parameter and argument for each additional tag to remove, separated by an ampersand. For example: <code>/v2/email/tags?ResourceArn=ResourceArn&amp;TagKeys=Key1&amp;TagKeys=Key2</code> </p>'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TagKey'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CreateConfigurationSetResponse:
      type: object
      properties: {}
      description: 'An HTTP 200 response if the request succeeds, or an error message if the request fails.'
    CustomRedirectDomain:
      type: string
      description: The domain that you want to use for tracking open and click events.
    TlsPolicy:
      type: string
      enum:
        - REQUIRE
        - OPTIONAL
      description: 'Specifies whether messages that use the configuration set are required to use Transport Layer Security (TLS). If the value is <code>Require</code>, messages are only delivered if a TLS connection can be established. If the value is <code>Optional</code>, messages can be delivered in plain text if a TLS connection can''t be established.'
    PoolName:
      type: string
      description: The name of a dedicated IP pool.
    Enabled:
      type: boolean
    LastFreshStart:
      type: string
      description: 'The date and time (in Unix time) when the reputation metrics were last given a fresh start. When your account is given a fresh start, your reputation metrics are calculated starting from the date of the fresh start.'
      format: date-time
    Tag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          $ref: '#/components/schemas/TagKey'
          description: One part of a key-value pair that defines a tag. The maximum length of a tag key is 128 characters. The minimum length is 1 character.
        Value:
          $ref: '#/components/schemas/TagValue'
          description: "The optional part of a key-value pair that defines a tag. The maximum length of a tag value is 256 characters. The minimum length is 0 characters. If you don't want a resource to have a specific tag value, don't specify a value for this\_parameter. If you don't specify a value, Amazon SES sets the value to an empty string."
      description: "<p>An object that defines the tags that are associated with a resource. A\_<i>tag</i>\_is a label that you optionally define and associate with a resource. Tags can help you categorize and manage resources in different ways, such as by purpose, owner, environment, or other criteria. A resource can have as many as 50 tags.</p> <p>Each tag consists of a required\_<i>tag key</i>\_and an associated\_<i>tag value</i>, both of which you define. A tag key is a general label that acts as a category for a more specific tag value. A tag value acts as a descriptor within a tag key. A tag key can contain as many as 128 characters. A tag value can contain as many as 256 characters. The characters can be Unicode letters, digits, white space, or one of the following symbols: _ . : / = + -. The following additional restrictions apply to tags:</p> <ul> <li> <p>Tag keys and values are case sensitive.</p> </li> <li> <p>For each associated resource, each tag key must be unique and it can have only one value.</p> </li> <li> <p>The\_<code>aws:</code>\_prefix is reserved for use by AWS; you can’t use it in any tag keys or values that you define. In addition, you can't edit or remove tag keys or values that use this prefix. Tags that use this prefix don’t count against the limit of 50 tags per resource.</p> </li> <li> <p>You can associate tags with public or shared resources, but the tags are available only for your AWS account, not any other accounts that share the resource. In addition, the tags are available only for resources that are located in the specified AWS Region for your AWS account.</p> </li> </ul>"
    SuppressionListReasons:
      type: array
      items:
        $ref: '#/components/schemas/SuppressionListReason'
    AlreadyExistsException: {}
    NotFoundException: {}
    TooManyRequestsException: {}
    LimitExceededException: {}
    BadRequestException: {}
    ConcurrentModificationException: {}
    CreateConfigurationSetEventDestinationResponse:
      type: object
      properties: {}
      description: 'An HTTP 200 response if the request succeeds, or an error message if the request fails.'
    EventTypes:
      type: array
      items:
        $ref: '#/components/schemas/EventType'
    KinesisFirehoseDestination:
      type: object
      required:
        - IamRoleArn
        - DeliveryStreamArn
      properties:
        IamRoleArn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the IAM role that the Amazon SES API v2 uses to send email events to the Amazon Kinesis Data Firehose stream.
        DeliveryStreamArn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the Amazon Kinesis Data Firehose stream that the Amazon SES API v2 sends email events to.
      description: 'An object that defines an Amazon Kinesis Data Firehose destination for email events. You can use Amazon Kinesis Data Firehose to stream data to other services, such as Amazon S3 and Amazon Redshift.'
    CloudWatchDestination:
      type: object
      required:
        - DimensionConfigurations
      properties:
        DimensionConfigurations:
          $ref: '#/components/schemas/CloudWatchDimensionConfigurations'
          description: An array of objects that define the dimensions to use when you send email events to Amazon CloudWatch.
      description: An object that defines an Amazon CloudWatch destination for email events. You can use Amazon CloudWatch to monitor and gain insights on your email sending metrics.
    SnsDestination:
      type: object
      required:
        - TopicArn
      properties:
        TopicArn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: 'The Amazon Resource Name (ARN) of the Amazon SNS topic that you want to publish email events to. For more information about Amazon SNS topics, see the <a href="https://docs.aws.amazon.com/sns/latest/dg/CreateTopic.html">Amazon SNS Developer Guide</a>.'
      description: An object that defines an Amazon SNS destination for email events. You can use Amazon SNS to send notification when certain email events occur.
    PinpointDestination:
      type: object
      properties:
        ApplicationArn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the Amazon Pinpoint project that you want to send email events to.
      description: 'An object that defines an Amazon Pinpoint project destination for email events. You can send email event data to a Amazon Pinpoint project to view metrics using the Transactional Messaging dashboards that are built in to Amazon Pinpoint. For more information, see <a href="https://docs.aws.amazon.com/pinpoint/latest/userguide/analytics-transactional-messages.html">Transactional Messaging Charts</a> in the <i>Amazon Pinpoint User Guide</i>.'
    CreateContactResponse:
      type: object
      properties: {}
    TopicPreference:
      type: object
      required:
        - TopicName
        - SubscriptionStatus
      properties:
        TopicName:
          $ref: '#/components/schemas/TopicName'
          description: The name of the topic.
        SubscriptionStatus:
          $ref: '#/components/schemas/SubscriptionStatus'
          description: The contact's subscription status to a topic which is either <code>OPT_IN</code> or <code>OPT_OUT</code>.
      description: The contact's preference for being opted-in to or opted-out of a topic.
    CreateContactListResponse:
      type: object
      properties: {}
    Topic:
      type: object
      required:
        - TopicName
        - DisplayName
        - DefaultSubscriptionStatus
      properties:
        TopicName:
          $ref: '#/components/schemas/TopicName'
          description: The name of the topic.
        DisplayName:
          $ref: '#/components/schemas/DisplayName'
          description: The name of the topic the contact will see.
        Description:
          $ref: '#/components/schemas/Description'
          description: 'A description of what the topic is about, which the contact will see.'
        DefaultSubscriptionStatus:
          $ref: '#/components/schemas/SubscriptionStatus'
          description: The default subscription status to be applied to a contact if the contact has not noted their preference for subscribing to a topic.
      description: 'An interest group, theme, or label within a list. Lists can have multiple topics.'
    CreateCustomVerificationEmailTemplateResponse:
      type: object
      properties: {}
      description: 'If the action is successful, the service sends back an HTTP 200 response with an empty HTTP body.'
    CreateDedicatedIpPoolResponse:
      type: object
      properties: {}
      description: 'An HTTP 200 response if the request succeeds, or an error message if the request fails.'
    CreateDeliverabilityTestReportResponse:
      type: object
      required:
        - ReportId
        - DeliverabilityTestStatus
      properties:
        ReportId:
          $ref: '#/components/schemas/ReportId'
          description: A unique string that identifies the predictive inbox placement test.
        DeliverabilityTestStatus:
          $ref: '#/components/schemas/DeliverabilityTestStatus'
          description: 'The status of the predictive inbox placement test. If the status is <code>IN_PROGRESS</code>, then the predictive inbox placement test is currently running. Predictive inbox placement tests are usually complete within 24 hours of creating the test. If the status is <code>COMPLETE</code>, then the test is finished, and you can use the <code>GetDeliverabilityTestReport</code> to view the results of the test.'
      description: Information about the predictive inbox placement test that you created.
    Message:
      type: object
      required:
        - Subject
        - Body
      properties:
        Subject:
          $ref: '#/components/schemas/Content'
          description: 'The subject line of the email. The subject line can only contain 7-bit ASCII characters. However, you can specify non-ASCII characters in the subject line by using encoded-word syntax, as described in <a href="https://tools.ietf.org/html/rfc2047">RFC 2047</a>.'
        Body:
          $ref: '#/components/schemas/Body'
          description: 'The body of the message. You can specify an HTML version of the message, a text-only version of the message, or both.'
      description: Represents the email message that you're sending. The <code>Message</code> object consists of a subject line and a message body.
    RawMessage:
      type: object
      required:
        - Data
      properties:
        Data:
          $ref: '#/components/schemas/RawMessageData'
          description: '<p>The raw email message. The message has to meet the following criteria:</p> <ul> <li> <p>The message has to contain a header and a body, separated by one blank line.</p> </li> <li> <p>All of the required header fields must be present in the message.</p> </li> <li> <p>Each part of a multipart MIME message must be formatted properly.</p> </li> <li> <p>Attachments must be in a file format that the Amazon SES supports.</p> </li> <li> <p>The entire message must be Base64 encoded.</p> </li> <li> <p>If any of the MIME parts in your message contain content that is outside of the 7-bit ASCII character range, you should encode that content to ensure that recipients'' email clients render the message properly.</p> </li> <li> <p>The length of any single line of text in the message can''t exceed 1,000 characters. This restriction is defined in <a href="https://tools.ietf.org/html/rfc5321">RFC 5321</a>.</p> </li> </ul>'
      description: Represents the raw content of an email message.
    Template:
      type: object
      properties:
        TemplateName:
          $ref: '#/components/schemas/EmailTemplateName'
          description: 'The name of the template. You will refer to this name when you send email using the <code>SendTemplatedEmail</code> or <code>SendBulkTemplatedEmail</code> operations. '
        TemplateArn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the template.
        TemplateData:
          $ref: '#/components/schemas/EmailTemplateData'
          description: An object that defines the values to use for message variables in the template. This object is a set of key-value pairs. Each key defines a message variable in the template. The corresponding value defines the value to use for that variable.
      description: 'An object that defines the email template to use for an email message, and the values to use for any message variables in that template. An <i>email template</i> is a type of message template that contains content that you want to define, save, and reuse in email messages that you send.'
    AccountSuspendedException: {}
    SendingPausedException: {}
    MessageRejected: {}
    MailFromDomainNotVerifiedException: {}
    CreateEmailIdentityResponse:
      type: object
      properties:
        IdentityType:
          $ref: '#/components/schemas/IdentityType'
          description: The email identity type.
        VerifiedForSendingStatus:
          $ref: '#/components/schemas/Enabled'
          description: 'Specifies whether or not the identity is verified. You can only send email from verified email addresses or domains. For more information about verifying identities, see the <a href="https://docs.aws.amazon.com/pinpoint/latest/userguide/channels-email-manage-verify.html">Amazon Pinpoint User Guide</a>.'
        DkimAttributes:
          $ref: '#/components/schemas/DkimAttributes'
          description: An object that contains information about the DKIM attributes for the identity.
      description: '<p>If the email identity is a domain, this object contains information about the DKIM verification status for the domain.</p> <p>If the email identity is an email address, this object is empty. </p>'
    Selector:
      type: string
      pattern: '^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9]))$'
      minLength: 1
      maxLength: 63
    PrivateKey:
      type: string
      pattern: '^[a-zA-Z0-9+\/]+={0,2}$'
      minLength: 1
      maxLength: 20480
      format: password
    CreateEmailIdentityPolicyResponse:
      type: object
      properties: {}
      description: 'An HTTP 200 response if the request succeeds, or an error message if the request fails.'
    CreateEmailTemplateResponse:
      type: object
      properties: {}
      description: 'If the action is successful, the service sends back an HTTP 200 response with an empty HTTP body.'
    EmailTemplateSubject:
      type: string
      description: The subject line of the email.
    EmailTemplateText:
      type: string
      description: The email body that will be visible to recipients whose email clients do not display HTML.
    EmailTemplateHtml:
      type: string
      description: The HTML body of the email.
    CreateImportJobResponse:
      type: object
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: A string that represents the import job ID.
      description: 'An HTTP 200 response if the request succeeds, or an error message if the request fails.'
    SuppressionListDestination:
      type: object
      required:
        - SuppressionListImportAction
      properties:
        SuppressionListImportAction:
          $ref: '#/components/schemas/SuppressionListImportAction'
          description: '<p>The type of action that you want to perform on the address. Acceptable values:</p> <ul> <li> <p>PUT: add the addresses to the suppression list. If the record already exists, it will override it with the new value.</p> </li> <li> <p>DELETE: remove the addresses from the suppression list.</p> </li> </ul>'
      description: An object that contains details about the action of suppression list.
    ContactListDestination:
      type: object
      required:
        - ContactListName
        - ContactListImportAction
      properties:
        ContactListName:
          $ref: '#/components/schemas/ContactListName'
          description: The name of the contact list.
        ContactListImportAction:
          $ref: '#/components/schemas/ContactListImportAction'
          description: '<p>&gt;The type of action that you want to perform on the addresses. Acceptable values:</p> <ul> <li> <p>PUT: add the addresses to the contact list. If the record already exists, it will override it with the new value.</p> </li> <li> <p>DELETE: remove the addresses from the contact list.</p> </li> </ul>'
      description: An object that contains details about the action of a contact list.
    S3Url:
      type: string
      pattern: '^s3:\/\/([^\/]+)\/(.*?([^\/]+)\/?)$'
      description: 'An Amazon S3 URL in the format s3://<i>&lt;bucket_name&gt;</i>/<i>&lt;object&gt;</i>.'
    DataFormat:
      type: string
      enum:
        - CSV
        - JSON
      description: The data format of the import job's data source.
    DeleteConfigurationSetResponse:
      type: object
      properties: {}
      description: 'An HTTP 200 response if the request succeeds, or an error message if the request fails.'
    DeleteConfigurationSetEventDestinationResponse:
      type: object
      properties: {}
      description: 'An HTTP 200 response if the request succeeds, or an error message if the request fails.'
    DeleteContactResponse:
      type: object
      properties: {}
    DeleteContactListResponse:
      type: object
      properties: {}
    DeleteCustomVerificationEmailTemplateResponse:
      type: object
      properties: {}
      description: 'If the action is successful, the service sends back an HTTP 200 response with an empty HTTP body.'
    DeleteDedicatedIpPoolResponse:
      type: object
      properties: {}
      description: 'An HTTP 200 response if the request succeeds, or an error message if the request fails.'
    DeleteEmailIdentityResponse:
      type: object
      properties: {}
      description: 'An HTTP 200 response if the request succeeds, or an error message if the request fails.'
    DeleteEmailIdentityPolicyResponse:
      type: object
      properties: {}
      description: 'An HTTP 200 response if the request succeeds, or an error message if the request fails.'
    DeleteEmailTemplateResponse:
      type: object
      properties: {}
      description: 'If the action is successful, the service sends back an HTTP 200 response with an empty HTTP body.'
    DeleteSuppressedDestinationResponse:
      type: object
      properties: {}
      description: 'An HTTP 200 response if the request succeeds, or an error message if the request fails.'
    GetAccountResponse:
      type: object
      properties:
        DedicatedIpAutoWarmupEnabled:
          $ref: '#/components/schemas/Enabled'
          description: Indicates whether or not the automatic warm-up feature is enabled for dedicated IP addresses that are associated with your account.
        EnforcementStatus:
          $ref: '#/components/schemas/GeneralEnforcementStatus'
          description: '<p>The reputation status of your Amazon SES account. The status can be one of the following:</p> <ul> <li> <p> <code>HEALTHY</code> – There are no reputation-related issues that currently impact your account.</p> </li> <li> <p> <code>PROBATION</code> – We''ve identified potential issues with your Amazon SES account. We''re placing your account under review while you work on correcting these issues.</p> </li> <li> <p> <code>SHUTDOWN</code> – Your account''s ability to send email is currently paused because of an issue with the email sent from your account. When you correct the issue, you can contact us and request that your account''s ability to send email is resumed.</p> </li> </ul>'
        ProductionAccessEnabled:
          $ref: '#/components/schemas/Enabled'
          description: '<p>Indicates whether or not your account has production access in the current AWS Region.</p> <p>If the value is <code>false</code>, then your account is in the <i>sandbox</i>. When your account is in the sandbox, you can only send email to verified identities. Additionally, the maximum number of emails you can send in a 24-hour period (your sending quota) is 200, and the maximum number of emails you can send per second (your maximum sending rate) is 1.</p> <p>If the value is <code>true</code>, then your account has production access. When your account has production access, you can send email to any address. The sending quota and maximum sending rate for your account vary based on your specific use case.</p>'
        SendQuota:
          $ref: '#/components/schemas/SendQuota'
          description: An object that contains information about the per-day and per-second sending limits for your Amazon SES account in the current AWS Region.
        SendingEnabled:
          $ref: '#/components/schemas/Enabled'
          description: Indicates whether or not email sending is enabled for your Amazon SES account in the current AWS Region.
        SuppressionAttributes:
          $ref: '#/components/schemas/SuppressionAttributes'
          description: An object that contains information about the email address suppression preferences for your account in the current AWS Region.
        Details:
          $ref: '#/components/schemas/AccountDetails'
          description: An object that defines your account details.
      description: A list of details about the email-sending capabilities of your Amazon SES account in the current AWS Region.
    GetBlacklistReportsResponse:
      type: object
      required:
        - BlacklistReport
      properties:
        BlacklistReport:
          $ref: '#/components/schemas/BlacklistReport'
          description: An object that contains information about a blacklist that one of your dedicated IP addresses appears on.
      description: An object that contains information about blacklist events.
    BlacklistItemName:
      type: string
      description: An IP address that you want to obtain blacklist information for.
    GetConfigurationSetResponse:
      type: object
      properties:
        ConfigurationSetName:
          $ref: '#/components/schemas/ConfigurationSetName'
          description: The name of the configuration set.
        TrackingOptions:
          $ref: '#/components/schemas/TrackingOptions'
          description: An object that defines the open and click tracking options for emails that you send using the configuration set.
        DeliveryOptions:
          $ref: '#/components/schemas/DeliveryOptions'
          description: An object that defines the dedicated IP pool that is used to send emails that you send using the configuration set.
        ReputationOptions:
          $ref: '#/components/schemas/ReputationOptions'
          description: An object that defines whether or not Amazon SES collects reputation metrics for the emails that you send that use the configuration set.
        SendingOptions:
          $ref: '#/components/schemas/SendingOptions'
          description: An object that defines whether or not Amazon SES can send email that you send using the configuration set.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: An array of objects that define the tags (keys and values) that are associated with the configuration set.
        SuppressionOptions:
          $ref: '#/components/schemas/SuppressionOptions'
          description: An object that contains information about the suppression list preferences for your account.
      description: Information about a configuration set.
    GetConfigurationSetEventDestinationsResponse:
      type: object
      properties:
        EventDestinations:
          $ref: '#/components/schemas/EventDestinations'
          description: An array that includes all of the events destinations that have been configured for the configuration set.
      description: Information about an event destination for a configuration set.
    GetContactResponse:
      type: object
      properties:
        ContactListName:
          $ref: '#/components/schemas/ContactListName'
          description: The name of the contact list to which the contact belongs.
        EmailAddress:
          $ref: '#/components/schemas/EmailAddress'
          description: The contact's email addres.
        TopicPreferences:
          $ref: '#/components/schemas/TopicPreferenceList'
          description: The contact's preference for being opted-in to or opted-out of a topic.&gt;
        TopicDefaultPreferences:
          $ref: '#/components/schemas/TopicPreferenceList'
          description: The default topic preferences applied to the contact.
        UnsubscribeAll:
          $ref: '#/components/schemas/UnsubscribeAll'
          description: A boolean value status noting if the contact is unsubscribed from all contact list topics.
        AttributesData:
          $ref: '#/components/schemas/AttributesData'
          description: The attribute data attached to a contact.
        CreatedTimestamp:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp noting when the contact was created.
        LastUpdatedTimestamp:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp noting the last time the contact's information was updated.
    GetContactListResponse:
      type: object
      properties:
        ContactListName:
          $ref: '#/components/schemas/ContactListName'
          description: The name of the contact list.
        Topics:
          $ref: '#/components/schemas/Topics'
          description: 'An interest group, theme, or label within a list. A contact list can have multiple topics.'
        Description:
          $ref: '#/components/schemas/Description'
          description: A description of what the contact list is about.
        CreatedTimestamp:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp noting when the contact list was created.
        LastUpdatedTimestamp:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp noting the last time the contact list was updated.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: The tags associated with a contact list.
    GetCustomVerificationEmailTemplateResponse:
      type: object
      properties:
        TemplateName:
          $ref: '#/components/schemas/EmailTemplateName'
          description: The name of the custom verification email template.
        FromEmailAddress:
          $ref: '#/components/schemas/EmailAddress'
          description: The email address that the custom verification email is sent from.
        TemplateSubject:
          $ref: '#/components/schemas/EmailTemplateSubject'
          description: The subject line of the custom verification email.
        TemplateContent:
          $ref: '#/components/schemas/TemplateContent'
          description: The content of the custom verification email.
        SuccessRedirectionURL:
          $ref: '#/components/schemas/SuccessRedirectionURL'
          description: The URL that the recipient of the verification email is sent to if his or her address is successfully verified.
        FailureRedirectionURL:
          $ref: '#/components/schemas/FailureRedirectionURL'
          description: The URL that the recipient of the verification email is sent to if his or her address is not successfully verified.
      description: The following elements are returned by the service.
    GetDedicatedIpResponse:
      type: object
      properties:
        DedicatedIp:
          $ref: '#/components/schemas/DedicatedIp'
          description: An object that contains information about a dedicated IP address.
      description: Information about a dedicated IP address.
    GetDedicatedIpsResponse:
      type: object
      properties:
        DedicatedIps:
          $ref: '#/components/schemas/DedicatedIpList'
          description: A list of dedicated IP addresses that are associated with your AWS account.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token that indicates that there are additional dedicated IP addresses to list. To view additional addresses, issue another request to <code>GetDedicatedIps</code>, passing this token in the <code>NextToken</code> parameter.'
      description: Information about the dedicated IP addresses that are associated with your AWS account.
    GetDeliverabilityDashboardOptionsResponse:
      type: object
      required:
        - DashboardEnabled
      properties:
        DashboardEnabled:
          $ref: '#/components/schemas/Enabled'
          description: 'Specifies whether the Deliverability dashboard is enabled. If this value is <code>true</code>, the dashboard is enabled.'
        SubscriptionExpiryDate:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date, in Unix time format, when your current subscription to the Deliverability dashboard is scheduled to expire, if your subscription is scheduled to expire at the end of the current calendar month. This value is null if you have an active subscription that isn’t due to expire at the end of the month.'
        AccountStatus:
          $ref: '#/components/schemas/DeliverabilityDashboardAccountStatus'
          description: 'The current status of your Deliverability dashboard subscription. If this value is <code>PENDING_EXPIRATION</code>, your subscription is scheduled to expire at the end of the current calendar month.'
        ActiveSubscribedDomains:
          $ref: '#/components/schemas/DomainDeliverabilityTrackingOptions'
          description: 'An array of objects, one for each verified domain that you use to send email and currently has an active Deliverability dashboard subscription that isn’t scheduled to expire at the end of the current calendar month.'
        PendingExpirationSubscribedDomains:
          $ref: '#/components/schemas/DomainDeliverabilityTrackingOptions'
          description: 'An array of objects, one for each verified domain that you use to send email and currently has an active Deliverability dashboard subscription that''s scheduled to expire at the end of the current calendar month.'
      description: An object that shows the status of the Deliverability dashboard.
    GetDeliverabilityTestReportResponse:
      type: object
      required:
        - DeliverabilityTestReport
        - OverallPlacement
        - IspPlacements
      properties:
        DeliverabilityTestReport:
          $ref: '#/components/schemas/DeliverabilityTestReport'
          description: An object that contains the results of the predictive inbox placement test.
        OverallPlacement:
          $ref: '#/components/schemas/PlacementStatistics'
          description: 'An object that specifies how many test messages that were sent during the predictive inbox placement test were delivered to recipients'' inboxes, how many were sent to recipients'' spam folders, and how many weren''t delivered.'
        IspPlacements:
          $ref: '#/components/schemas/IspPlacements'
          description: 'An object that describes how the test email was handled by several email providers, including Gmail, Hotmail, Yahoo, AOL, and others.'
        Message:
          $ref: '#/components/schemas/MessageContent'
          description: An object that contains the message that you sent when you performed this predictive inbox placement test.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: An array of objects that define the tags (keys and values) that are associated with the predictive inbox placement test.
      description: The results of the predictive inbox placement test.
    GetDomainDeliverabilityCampaignResponse:
      type: object
      required:
        - DomainDeliverabilityCampaign
      properties:
        DomainDeliverabilityCampaign:
          $ref: '#/components/schemas/DomainDeliverabilityCampaign'
          description: An object that contains the deliverability data for the campaign.
      description: An object that contains all the deliverability data for a specific campaign. This data is available for a campaign only if the campaign sent email by using a domain that the Deliverability dashboard is enabled for.
    GetDomainStatisticsReportResponse:
      type: object
      required:
        - OverallVolume
        - DailyVolumes
      properties:
        OverallVolume:
          $ref: '#/components/schemas/OverallVolume'
          description: An object that contains deliverability metrics for the domain that you specified. The data in this object is a summary of all of the data that was collected from the <code>StartDate</code> to the <code>EndDate</code>.
        DailyVolumes:
          $ref: '#/components/schemas/DailyVolumes'
          description: 'An object that contains deliverability metrics for the domain that you specified. This object contains data for each day, starting on the <code>StartDate</code> and ending on the <code>EndDate</code>.'
      description: An object that includes statistics that are related to the domain that you specified.
    GetEmailIdentityResponse:
      type: object
      properties:
        IdentityType:
          $ref: '#/components/schemas/IdentityType'
          description: The email identity type.
        FeedbackForwardingStatus:
          $ref: '#/components/schemas/Enabled'
          description: '<p>The feedback forwarding configuration for the identity.</p> <p>If the value is <code>true</code>, you receive email notifications when bounce or complaint events occur. These notifications are sent to the address that you specified in the <code>Return-Path</code> header of the original email.</p> <p>You''re required to have a method of tracking bounces and complaints. If you haven''t set up another mechanism for receiving bounce or complaint notifications (for example, by setting up an event destination), you receive an email notification when these events occur (even if this setting is disabled).</p>'
        VerifiedForSendingStatus:
          $ref: '#/components/schemas/Enabled'
          description: 'Specifies whether or not the identity is verified. You can only send email from verified email addresses or domains. For more information about verifying identities, see the <a href="https://docs.aws.amazon.com/pinpoint/latest/userguide/channels-email-manage-verify.html">Amazon Pinpoint User Guide</a>.'
        DkimAttributes:
          $ref: '#/components/schemas/DkimAttributes'
          description: An object that contains information about the DKIM attributes for the identity.
        MailFromAttributes:
          $ref: '#/components/schemas/MailFromAttributes'
          description: An object that contains information about the Mail-From attributes for the email identity.
        Policies:
          $ref: '#/components/schemas/PolicyMap'
          description: A map of policy names to policies.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: An array of objects that define the tags (keys and values) that are associated with the email identity.
        ConfigurationSetName:
          $ref: '#/components/schemas/ConfigurationSetName'
          description: The configuration set used by default when sending from this identity.
      description: Details about an email identity.
    GetEmailIdentityPoliciesResponse:
      type: object
      properties:
        Policies:
          $ref: '#/components/schemas/PolicyMap'
          description: A map of policy names to policies.
      description: Identity policies associated with email identity.
    GetEmailTemplateResponse:
      type: object
      required:
        - TemplateName
        - TemplateContent
      properties:
        TemplateName:
          $ref: '#/components/schemas/EmailTemplateName'
          description: The name of the template you want to retrieve.
        TemplateContent:
          $ref: '#/components/schemas/EmailTemplateContent'
          description: 'The content of the email template, composed of a subject line, an HTML part, and a text-only part.'
      description: The following element is returned by the service.
    GetImportJobResponse:
      type: object
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
          description: A string that represents the import job ID.
        ImportDestination:
          $ref: '#/components/schemas/ImportDestination'
          description: The destination of the import job.
        ImportDataSource:
          $ref: '#/components/schemas/ImportDataSource'
          description: The data source of the import job.
        FailureInfo:
          $ref: '#/components/schemas/FailureInfo'
          description: The failure details about an import job.
        JobStatus:
          $ref: '#/components/schemas/JobStatus'
          description: The status of the import job.
        CreatedTimestamp:
          $ref: '#/components/schemas/Timestamp'
          description: The time stamp of when the import job was created.
        CompletedTimestamp:
          $ref: '#/components/schemas/Timestamp'
          description: The time stamp of when the import job was completed.
        ProcessedRecordsCount:
          $ref: '#/components/schemas/ProcessedRecordsCount'
          description: The current number of records processed.
        FailedRecordsCount:
          $ref: '#/components/schemas/FailedRecordsCount'
          description: The number of records that failed processing because of invalid input or other reasons.
      description: 'An HTTP 200 response if the request succeeds, or an error message if the request fails.'
    GetSuppressedDestinationResponse:
      type: object
      required:
        - SuppressedDestination
      properties:
        SuppressedDestination:
          $ref: '#/components/schemas/SuppressedDestination'
          description: An object containing information about the suppressed email address.
      description: Information about the suppressed email address.
    ListConfigurationSetsResponse:
      type: object
      properties:
        ConfigurationSets:
          $ref: '#/components/schemas/ConfigurationSetNameList'
          description: An array that contains all of the configuration sets in your Amazon SES account in the current AWS Region.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token that indicates that there are additional configuration sets to list. To view additional configuration sets, issue another request to <code>ListConfigurationSets</code>, and pass this token in the <code>NextToken</code> parameter.'
      description: A list of configuration sets in your Amazon SES account in the current AWS Region.
    ListContactListsResponse:
      type: object
      properties:
        ContactLists:
          $ref: '#/components/schemas/ListOfContactLists'
          description: The available contact lists.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: A string token indicating that there might be additional contact lists available to be listed. Copy this token to a subsequent call to <code>ListContactLists</code> with the same parameters to retrieve the next page of contact lists.
    ListContactsResponse:
      type: object
      properties:
        Contacts:
          $ref: '#/components/schemas/ListOfContacts'
          description: The contacts present in a specific contact list.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: A string token indicating that there might be additional contacts available to be listed. Copy this token to a subsequent call to <code>ListContacts</code> with the same parameters to retrieve the next page of contacts.
    SubscriptionStatus:
      type: string
      enum:
        - OPT_IN
        - OPT_OUT
    TopicFilter:
      type: object
      properties:
        TopicName:
          $ref: '#/components/schemas/TopicName'
          description: The name of a topic on which you wish to apply the filter.
        UseDefaultIfPreferenceUnavailable:
          $ref: '#/components/schemas/UseDefaultIfPreferenceUnavailable'
          description: Notes that the default subscription status should be applied to a contact because the contact has not noted their preference for subscribing to a topic.
      description: Used for filtering by a specific topic preference.
    ListCustomVerificationEmailTemplatesResponse:
      type: object
      properties:
        CustomVerificationEmailTemplates:
          $ref: '#/components/schemas/CustomVerificationEmailTemplatesList'
          description: A list of the custom verification email templates that exist in your account.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token indicating that there are additional custom verification email templates available to be listed. Pass this token to a subsequent call to <code>ListCustomVerificationEmailTemplates</code> to retrieve the next 50 custom verification email templates.
      description: The following elements are returned by the service.
    ListDedicatedIpPoolsResponse:
      type: object
      properties:
        DedicatedIpPools:
          $ref: '#/components/schemas/ListOfDedicatedIpPools'
          description: A list of all of the dedicated IP pools that are associated with your AWS account in the current Region.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token that indicates that there are additional IP pools to list. To view additional IP pools, issue another request to <code>ListDedicatedIpPools</code>, passing this token in the <code>NextToken</code> parameter.'
      description: A list of dedicated IP pools.
    ListDeliverabilityTestReportsResponse:
      type: object
      required:
        - DeliverabilityTestReports
      properties:
        DeliverabilityTestReports:
          $ref: '#/components/schemas/DeliverabilityTestReports'
          description: An object that contains a lists of predictive inbox placement tests that you've performed.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token that indicates that there are additional predictive inbox placement tests to list. To view additional predictive inbox placement tests, issue another request to <code>ListDeliverabilityTestReports</code>, and pass this token in the <code>NextToken</code> parameter.'
      description: 'A list of the predictive inbox placement test reports that are available for your account, regardless of whether or not those tests are complete.'
    ListDomainDeliverabilityCampaignsResponse:
      type: object
      required:
        - DomainDeliverabilityCampaigns
      properties:
        DomainDeliverabilityCampaigns:
          $ref: '#/components/schemas/DomainDeliverabilityCampaignList'
          description: 'An array of responses, one for each campaign that used the domain to send email during the specified time range.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token that’s returned from a previous call to the <code>ListDomainDeliverabilityCampaigns</code> operation. This token indicates the position of the campaign in the list of campaigns.
      description: An array of objects that provide deliverability data for all the campaigns that used a specific domain to send email during a specified time range. This data is available for a domain only if you enabled the Deliverability dashboard for the domain.
    ListEmailIdentitiesResponse:
      type: object
      properties:
        EmailIdentities:
          $ref: '#/components/schemas/IdentityInfoList'
          description: An array that includes all of the email identities associated with your AWS account.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token that indicates that there are additional configuration sets to list. To view additional configuration sets, issue another request to <code>ListEmailIdentities</code>, and pass this token in the <code>NextToken</code> parameter.'
      description: 'A list of all of the identities that you''ve attempted to verify, regardless of whether or not those identities were successfully verified.'
    ListEmailTemplatesResponse:
      type: object
      properties:
        TemplatesMetadata:
          $ref: '#/components/schemas/EmailTemplateMetadataList'
          description: An array the contains the name and creation time stamp for each template in your Amazon SES account.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token indicating that there are additional email templates available to be listed. Pass this token to a subsequent <code>ListEmailTemplates</code> call to retrieve the next 10 email templates.
      description: The following elements are returned by the service.
    ListImportJobsResponse:
      type: object
      properties:
        ImportJobs:
          $ref: '#/components/schemas/ImportJobSummaryList'
          description: A list of the import job summaries.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: A string token indicating that there might be additional import jobs available to be listed. Copy this token to a subsequent call to <code>ListImportJobs</code> with the same parameters to retrieve the next page of import jobs.
      description: 'An HTTP 200 response if the request succeeds, or an error message if the request fails.'
    ListSuppressedDestinationsResponse:
      type: object
      properties:
        SuppressedDestinationSummaries:
          $ref: '#/components/schemas/SuppressedDestinationSummaries'
          description: 'A list of summaries, each containing a summary for a suppressed email destination.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token that indicates that there are additional email addresses on the suppression list for your account. To view additional suppressed addresses, issue another request to <code>ListSuppressedDestinations</code>, and pass this token in the <code>NextToken</code> parameter.'
      description: A list of suppressed email addresses.
    SuppressionListReason:
      type: string
      enum:
        - BOUNCE
        - COMPLAINT
      description: '<p>The reason that the address was added to the suppression list for your account. The value can be one of the following:</p> <ul> <li> <p> <code>COMPLAINT</code> – Amazon SES added an email address to the suppression list for your account because a message sent to that address results in a complaint.</p> </li> <li> <p> <code>BOUNCE</code> – Amazon SES added an email address to the suppression list for your account because a message sent to that address results in a hard bounce.</p> </li> </ul>'
    InvalidNextTokenException: {}
    ListTagsForResourceResponse:
      type: object
      required:
        - Tags
      properties:
        Tags:
          $ref: '#/components/schemas/TagList'
          description: An array that lists all the tags that are associated with the resource. Each tag consists of a required tag key (<code>Key</code>) and an associated tag value (<code>Value</code>)
    PutAccountDedicatedIpWarmupAttributesResponse:
      type: object
      properties: {}
      description: 'An HTTP 200 response if the request succeeds, or an error message if the request fails.'
    PutAccountDetailsResponse:
      type: object
      properties: {}
      description: 'An HTTP 200 response if the request succeeds, or an error message if the request fails.'
    AdditionalContactEmailAddress:
      type: string
      pattern: ^(.+)@(.+)$
      minLength: 6
      maxLength: 254
      format: password
    ConflictException: {}
    PutAccountSendingAttributesResponse:
      type: object
      properties: {}
      description: 'An HTTP 200 response if the request succeeds, or an error message if the request fails.'
    PutAccountSuppressionAttributesResponse:
      type: object
      properties: {}
      description: 'An HTTP 200 response if the request succeeds, or an error message if the request fails.'
    PutConfigurationSetDeliveryOptionsResponse:
      type: object
      properties: {}
      description: 'An HTTP 200 response if the request succeeds, or an error message if the request fails.'
    PutConfigurationSetReputationOptionsResponse:
      type: object
      properties: {}
      description: 'An HTTP 200 response if the request succeeds, or an error message if the request fails.'
    PutConfigurationSetSendingOptionsResponse:
      type: object
      properties: {}
      description: 'An HTTP 200 response if the request succeeds, or an error message if the request fails.'
    PutConfigurationSetSuppressionOptionsResponse:
      type: object
      properties: {}
      description: 'An HTTP 200 response if the request succeeds, or an error message if the request fails.'
    PutConfigurationSetTrackingOptionsResponse:
      type: object
      properties: {}
      description: 'An HTTP 200 response if the request succeeds, or an error message if the request fails.'
    PutDedicatedIpInPoolResponse:
      type: object
      properties: {}
      description: 'An HTTP 200 response if the request succeeds, or an error message if the request fails.'
    PutDedicatedIpWarmupAttributesResponse:
      type: object
      properties: {}
      description: 'An HTTP 200 response if the request succeeds, or an error message if the request fails.'
    PutDeliverabilityDashboardOptionResponse:
      type: object
      properties: {}
      description: A response that indicates whether the Deliverability dashboard is enabled.
    DomainDeliverabilityTrackingOption:
      type: object
      properties:
        Domain:
          $ref: '#/components/schemas/Domain'
          description: A verified domain that’s associated with your AWS account and currently has an active Deliverability dashboard subscription.
        SubscriptionStartDate:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date, in Unix time format, when you enabled the Deliverability dashboard for the domain.'
        InboxPlacementTrackingOption:
          $ref: '#/components/schemas/InboxPlacementTrackingOption'
          description: An object that contains information about the inbox placement data settings for the domain.
      description: 'An object that contains information about the Deliverability dashboard subscription for a verified domain that you use to send email and currently has an active Deliverability dashboard subscription. If a Deliverability dashboard subscription is active for a domain, you gain access to reputation, inbox placement, and other metrics for the domain.'
    PutEmailIdentityConfigurationSetAttributesResponse:
      type: object
      properties: {}
      description: 'If the action is successful, the service sends back an HTTP 200 response with an empty HTTP body.'
    PutEmailIdentityDkimAttributesResponse:
      type: object
      properties: {}
      description: 'An HTTP 200 response if the request succeeds, or an error message if the request fails.'
    PutEmailIdentityDkimSigningAttributesResponse:
      type: object
      properties:
        DkimStatus:
          $ref: '#/components/schemas/DkimStatus'
          description: '<p>The DKIM authentication status of the identity. Amazon SES determines the authentication status by searching for specific records in the DNS configuration for your domain. If you used <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">Easy DKIM</a> to set up DKIM authentication, Amazon SES tries to find three unique CNAME records in the DNS configuration for your domain.</p> <p>If you provided a public key to perform DKIM authentication, Amazon SES tries to find a TXT record that uses the selector that you specified. The value of the TXT record must be a public key that''s paired with the private key that you specified in the process of creating the identity.</p> <p>The status can be one of the following:</p> <ul> <li> <p> <code>PENDING</code> – The verification process was initiated, but Amazon SES hasn''t yet detected the DKIM records in the DNS configuration for the domain.</p> </li> <li> <p> <code>SUCCESS</code> – The verification process completed successfully.</p> </li> <li> <p> <code>FAILED</code> – The verification process failed. This typically occurs when Amazon SES fails to find the DKIM records in the DNS configuration of the domain.</p> </li> <li> <p> <code>TEMPORARY_FAILURE</code> – A temporary issue is preventing Amazon SES from determining the DKIM authentication status of the domain.</p> </li> <li> <p> <code>NOT_STARTED</code> – The DKIM verification process hasn''t been initiated for the domain.</p> </li> </ul>'
        DkimTokens:
          $ref: '#/components/schemas/DnsTokenList'
          description: '<p>If you used <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">Easy DKIM</a> to configure DKIM authentication for the domain, then this object contains a set of unique strings that you use to create a set of CNAME records that you add to the DNS configuration for your domain. When Amazon SES detects these records in the DNS configuration for your domain, the DKIM authentication process is complete.</p> <p>If you configured DKIM authentication for the domain by providing your own public-private key pair, then this object contains the selector that''s associated with your public key.</p> <p>Regardless of the DKIM authentication method you use, Amazon SES searches for the appropriate records in the DNS configuration of the domain for up to 72 hours.</p>'
      description: '<p>If the action is successful, the service sends back an HTTP 200 response.</p> <p>The following data is returned in JSON format by the service.</p>'
    PutEmailIdentityFeedbackAttributesResponse:
      type: object
      properties: {}
      description: 'An HTTP 200 response if the request succeeds, or an error message if the request fails.'
    PutEmailIdentityMailFromAttributesResponse:
      type: object
      properties: {}
      description: 'An HTTP 200 response if the request succeeds, or an error message if the request fails.'
    PutSuppressedDestinationResponse:
      type: object
      properties: {}
      description: 'An HTTP 200 response if the request succeeds, or an error message if the request fails.'
    SendBulkEmailResponse:
      type: object
      required:
        - BulkEmailEntryResults
      properties:
        BulkEmailEntryResults:
          $ref: '#/components/schemas/BulkEmailEntryResultList'
      description: The following data is returned in JSON format by the service.
    EmailAddress:
      type: string
    MessageTag:
      type: object
      required:
        - Name
        - Value
      properties:
        Name:
          $ref: '#/components/schemas/MessageTagName'
          description: '<p>The name of the message tag. The message tag name has to meet the following criteria:</p> <ul> <li> <p>It can only contain ASCII letters (a–z, A–Z), numbers (0–9), underscores (_), or dashes (-).</p> </li> <li> <p>It can contain no more than 256 characters.</p> </li> </ul>'
        Value:
          $ref: '#/components/schemas/MessageTagValue'
          description: '<p>The value of the message tag. The message tag value has to meet the following criteria:</p> <ul> <li> <p>It can only contain ASCII letters (a–z, A–Z), numbers (0–9), underscores (_), or dashes (-).</p> </li> <li> <p>It can contain no more than 256 characters.</p> </li> </ul>'
      description: 'Contains the name and value of a tag that you apply to an email. You can use message tags when you publish email sending events. '
    BulkEmailEntry:
      type: object
      required:
        - Destination
      properties:
        Destination:
          $ref: '#/components/schemas/Destination'
          description: '<p>Represents the destination of the message, consisting of To:, CC:, and BCC: fields.</p> <note> <p>Amazon SES does not support the SMTPUTF8 extension, as described in <a href="https://tools.ietf.org/html/rfc6531">RFC6531</a>. For this reason, the local part of a destination email address (the part of the email address that precedes the @ sign) may only contain <a href="https://en.wikipedia.org/wiki/Email_address#Local-part">7-bit ASCII characters</a>. If the domain part of an address (the part after the @ sign) contains non-ASCII characters, they must be encoded using Punycode, as described in <a href="https://tools.ietf.org/html/rfc3492.html">RFC3492</a>.</p> </note>'
        ReplacementTags:
          $ref: '#/components/schemas/MessageTagList'
          description: 'A list of tags, in the form of name/value pairs, to apply to an email that you send using the <code>SendBulkTemplatedEmail</code> operation. Tags correspond to characteristics of the email that you define, so that you can publish email sending events.'
        ReplacementEmailContent:
          $ref: '#/components/schemas/ReplacementEmailContent'
          description: The <code>ReplacementEmailContent</code> associated with a <code>BulkEmailEntry</code>.
    SendCustomVerificationEmailResponse:
      type: object
      properties:
        MessageId:
          $ref: '#/components/schemas/OutboundMessageId'
          description: The unique message identifier returned from the <code>SendCustomVerificationEmail</code> operation.
      description: The following element is returned by the service.
    SendEmailResponse:
      type: object
      properties:
        MessageId:
          $ref: '#/components/schemas/OutboundMessageId'
          description: '<p>A unique identifier for the message that is generated when the message is accepted.</p> <note> <p>It''s possible for Amazon SES to accept a message without sending it. This can happen when the message that you''re trying to send has an attachment contains a virus, or when you send a templated email that contains invalid personalization content, for example.</p> </note>'
      description: A unique message ID that you receive when an email is accepted for sending.
    EmailAddressList:
      type: array
      items:
        $ref: '#/components/schemas/EmailAddress'
    ContactListName:
      type: string
    TopicName:
      type: string
    TagResourceResponse:
      type: object
      properties: {}
    TestRenderEmailTemplateResponse:
      type: object
      required:
        - RenderedTemplate
      properties:
        RenderedTemplate:
          $ref: '#/components/schemas/RenderedEmailTemplate'
          description: The complete MIME message rendered by applying the data in the <code>TemplateData</code> parameter to the template specified in the TemplateName parameter.
      description: The following element is returned by the service.
    UntagResourceResponse:
      type: object
      properties: {}
    TagKey:
      type: string
    UpdateConfigurationSetEventDestinationResponse:
      type: object
      properties: {}
      description: 'An HTTP 200 response if the request succeeds, or an error message if the request fails.'
    UpdateContactResponse:
      type: object
      properties: {}
    UpdateContactListResponse:
      type: object
      properties: {}
    UpdateCustomVerificationEmailTemplateResponse:
      type: object
      properties: {}
      description: 'If the action is successful, the service sends back an HTTP 200 response with an empty HTTP body.'
    UpdateEmailIdentityPolicyResponse:
      type: object
      properties: {}
      description: 'An HTTP 200 response if the request succeeds, or an error message if the request fails.'
    UpdateEmailTemplateResponse:
      type: object
      properties: {}
      description: 'If the action is successful, the service sends back an HTTP 200 response with an empty HTTP body.'
    MailType:
      type: string
      enum:
        - MARKETING
        - TRANSACTIONAL
    WebsiteURL:
      type: string
      pattern: '^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?'
      minLength: 1
      maxLength: 1000
      format: password
    ContactLanguage:
      type: string
      enum:
        - EN
        - JA
    UseCaseDescription:
      type: string
      minLength: 1
      maxLength: 5000
      format: password
    AdditionalContactEmailAddresses:
      type: array
      items:
        $ref: '#/components/schemas/AdditionalContactEmailAddress'
      minItems: 1
      maxItems: 4
    ReviewDetails:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/ReviewStatus'
          description: '<p>The status of the latest review of your account. The status can be one of the following:</p> <ul> <li> <p> <code>PENDING</code> – We have received your appeal and are in the process of reviewing it.</p> </li> <li> <p> <code>GRANTED</code> – Your appeal has been reviewed and your production access has been granted.</p> </li> <li> <p> <code>DENIED</code> – Your appeal has been reviewed and your production access has been denied.</p> </li> <li> <p> <code>FAILED</code> – An internal error occurred and we didn''t receive your appeal. You can submit your appeal again.</p> </li> </ul>'
        CaseId:
          $ref: '#/components/schemas/CaseId'
          description: The associated support center case ID (if any).
      description: An object that contains information about your account details review.
    AccountDetails:
      type: object
      properties:
        MailType:
          $ref: '#/components/schemas/MailType'
          description: '<p>The type of email your account is sending. The mail type can be one of the following:</p> <ul> <li> <p> <code>MARKETING</code> – Most of your sending traffic is to keep your customers informed of your latest offering.</p> </li> <li> <p> <code>TRANSACTIONAL</code> – Most of your sending traffic is to communicate during a transaction with a customer.</p> </li> </ul>'
        WebsiteURL:
          $ref: '#/components/schemas/WebsiteURL'
          description: The URL of your website. This information helps us better understand the type of content that you plan to send.
        ContactLanguage:
          $ref: '#/components/schemas/ContactLanguage'
          description: The language you would prefer for the case. The contact language can be one of <code>ENGLISH</code> or <code>JAPANESE</code>.
        UseCaseDescription:
          $ref: '#/components/schemas/UseCaseDescription'
          description: A description of the types of email that you plan to send.
        AdditionalContactEmailAddresses:
          $ref: '#/components/schemas/AdditionalContactEmailAddresses'
          description: Additional email addresses where updates are sent about your account review process.
        ReviewDetails:
          $ref: '#/components/schemas/ReviewDetails'
          description: Information about the review of the latest details you submitted.
      description: An object that contains information about your account details.
    AmazonResourceName:
      type: string
    AttributesData:
      type: string
    BehaviorOnMxFailure:
      type: string
      enum:
        - USE_DEFAULT_VALUE
        - REJECT_MESSAGE
      description: '<p>The action that you want to take if the required MX record can''t be found when you send an email. When you set this value to <code>UseDefaultValue</code>, the mail is sent using <i>amazonses.com</i> as the MAIL FROM domain. When you set this value to <code>RejectMessage</code>, the Amazon SES API v2 returns a <code>MailFromDomainNotVerified</code> error, and doesn''t attempt to deliver the email.</p> <p>These behaviors are taken when the custom MAIL FROM domain configuration is in the <code>Pending</code>, <code>Failed</code>, and <code>TemporaryFailure</code> states.</p>'
    BlacklistEntry:
      type: object
      properties:
        RblName:
          $ref: '#/components/schemas/RblName'
          description: The name of the blacklist that the IP address appears on.
        ListingTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'The time when the blacklisting event occurred, shown in Unix time format.'
        Description:
          $ref: '#/components/schemas/BlacklistingDescription'
          description: 'Additional information about the blacklisting event, as provided by the blacklist maintainer.'
      description: An object that contains information about a blacklisting event that impacts one of the dedicated IP addresses that is associated with your account.
    BlacklistEntries:
      type: array
      items:
        $ref: '#/components/schemas/BlacklistEntry'
    RblName:
      type: string
      description: The name of a blacklist that an IP address was found on.
    Timestamp:
      type: string
      format: date-time
    BlacklistingDescription:
      type: string
      description: A description of the blacklisting event.
    BlacklistItemNames:
      type: array
      items:
        $ref: '#/components/schemas/BlacklistItemName'
    BlacklistReport:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/BlacklistEntries'
    Content:
      type: object
      required:
        - Data
      properties:
        Data:
          $ref: '#/components/schemas/MessageData'
          description: The content of the message itself.
        Charset:
          $ref: '#/components/schemas/Charset'
          description: 'The character set for the content. Because of the constraints of the SMTP protocol, Amazon SES uses 7-bit ASCII by default. If the text includes characters outside of the ASCII range, you have to specify a character set. For example, you could specify <code>UTF-8</code>, <code>ISO-8859-1</code>, or <code>Shift_JIS</code>.'
      description: 'An object that represents the content of the email, and optionally a character set specification.'
    Body:
      type: object
      properties:
        Text:
          $ref: '#/components/schemas/Content'
          description: 'An object that represents the version of the message that is displayed in email clients that don''t support HTML, or clients where the recipient has disabled HTML rendering.'
        Html:
          $ref: '#/components/schemas/Content'
          description: 'An object that represents the version of the message that is displayed in email clients that support HTML. HTML messages can include formatted text, hyperlinks, images, and more. '
      description: Represents the body of the email message.
    BulkEmailContent:
      type: object
      properties:
        Template:
          $ref: '#/components/schemas/Template'
          description: The template to use for the bulk email message.
      description: An object that contains the body of the message. You can specify a template message.
    Destination:
      type: object
      properties:
        ToAddresses:
          $ref: '#/components/schemas/EmailAddressList'
          description: An array that contains the email addresses of the "To" recipients for the email.
        CcAddresses:
          $ref: '#/components/schemas/EmailAddressList'
          description: An array that contains the email addresses of the "CC" (carbon copy) recipients for the email.
        BccAddresses:
          $ref: '#/components/schemas/EmailAddressList'
          description: An array that contains the email addresses of the "BCC" (blind carbon copy) recipients for the email.
      description: An object that describes the recipients for an email.
    MessageTagList:
      type: array
      description: A list of message tags.
      items:
        $ref: '#/components/schemas/MessageTag'
    ReplacementEmailContent:
      type: object
      properties:
        ReplacementTemplate:
          $ref: '#/components/schemas/ReplacementTemplate'
          description: The <code>ReplacementTemplate</code> associated with <code>ReplacementEmailContent</code>.
      description: The <code>ReplaceEmailContent</code> object to be used for a specific <code>BulkEmailEntry</code>. The <code>ReplacementTemplate</code> can be specified within this object.
    BulkEmailEntryList:
      type: array
      description: A list of <code>BulkEmailEntry</code> objects.
      items:
        $ref: '#/components/schemas/BulkEmailEntry'
    BulkEmailStatus:
      type: string
      enum:
        - SUCCESS
        - MESSAGE_REJECTED
        - MAIL_FROM_DOMAIN_NOT_VERIFIED
        - CONFIGURATION_SET_NOT_FOUND
        - TEMPLATE_NOT_FOUND
        - ACCOUNT_SUSPENDED
        - ACCOUNT_THROTTLED
        - ACCOUNT_DAILY_QUOTA_EXCEEDED
        - INVALID_SENDING_POOL_NAME
        - ACCOUNT_SENDING_PAUSED
        - CONFIGURATION_SET_SENDING_PAUSED
        - INVALID_PARAMETER
        - TRANSIENT_FAILURE
        - FAILED
    ErrorMessage:
      type: string
    OutboundMessageId:
      type: string
    BulkEmailEntryResult:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/BulkEmailStatus'
          description: '<p>The status of a message sent using the <code>SendBulkTemplatedEmail</code> operation.</p> <p>Possible values for this parameter include:</p> <ul> <li> <p>SUCCESS: Amazon SES accepted the message, and will attempt to deliver it to the recipients.</p> </li> <li> <p>MESSAGE_REJECTED: The message was rejected because it contained a virus.</p> </li> <li> <p>MAIL_FROM_DOMAIN_NOT_VERIFIED: The sender''s email address or domain was not verified.</p> </li> <li> <p>CONFIGURATION_SET_DOES_NOT_EXIST: The configuration set you specified does not exist.</p> </li> <li> <p>TEMPLATE_DOES_NOT_EXIST: The template you specified does not exist.</p> </li> <li> <p>ACCOUNT_SUSPENDED: Your account has been shut down because of issues related to your email sending practices.</p> </li> <li> <p>ACCOUNT_THROTTLED: The number of emails you can send has been reduced because your account has exceeded its allocated sending limit.</p> </li> <li> <p>ACCOUNT_DAILY_QUOTA_EXCEEDED: You have reached or exceeded the maximum number of emails you can send from your account in a 24-hour period.</p> </li> <li> <p>INVALID_SENDING_POOL_NAME: The configuration set you specified refers to an IP pool that does not exist.</p> </li> <li> <p>ACCOUNT_SENDING_PAUSED: Email sending for the Amazon SES account was disabled using the <a href="https://docs.aws.amazon.com/ses/latest/APIReference/API_UpdateAccountSendingEnabled.html">UpdateAccountSendingEnabled</a> operation.</p> </li> <li> <p>CONFIGURATION_SET_SENDING_PAUSED: Email sending for this configuration set was disabled using the <a href="https://docs.aws.amazon.com/ses/latest/APIReference/API_UpdateConfigurationSetSendingEnabled.html">UpdateConfigurationSetSendingEnabled</a> operation.</p> </li> <li> <p>INVALID_PARAMETER_VALUE: One or more of the parameters you specified when calling this operation was invalid. See the error message for additional information.</p> </li> <li> <p>TRANSIENT_FAILURE: Amazon SES was unable to process your request because of a temporary issue.</p> </li> <li> <p>FAILED: Amazon SES was unable to process your request. See the error message for additional information.</p> </li> </ul>'
        Error:
          $ref: '#/components/schemas/ErrorMessage'
          description: A description of an error that prevented a message being sent using the <code>SendBulkTemplatedEmail</code> operation.
        MessageId:
          $ref: '#/components/schemas/OutboundMessageId'
          description: The unique message identifier returned from the <code>SendBulkTemplatedEmail</code> operation.
      description: The result of the <code>SendBulkEmail</code> operation of each specified <code>BulkEmailEntry</code>.
    BulkEmailEntryResultList:
      type: array
      description: A list of <code>BulkMailEntry</code> objects.
      items:
        $ref: '#/components/schemas/BulkEmailEntryResult'
    CampaignId:
      type: string
    CaseId:
      type: string
    Charset:
      type: string
    CloudWatchDimensionConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/CloudWatchDimensionConfiguration'
    DimensionName:
      type: string
      description: '<p>The name of an Amazon CloudWatch dimension associated with an email sending metric. The name has to meet the following criteria:</p> <ul> <li> <p>It can only contain ASCII letters (a-z, A-Z), numbers (0-9), underscores (_), or dashes (-).</p> </li> <li> <p>It can contain no more than 256 characters.</p> </li> </ul>'
    DimensionValueSource:
      type: string
      enum:
        - MESSAGE_TAG
        - EMAIL_HEADER
        - LINK_TAG
      description: 'The location where the Amazon SES API v2 finds the value of a dimension to publish to Amazon CloudWatch. If you want to use the message tags that you specify using an <code>X-SES-MESSAGE-TAGS</code> header or a parameter to the <code>SendEmail</code> or <code>SendRawEmail</code> API, choose <code>messageTag</code>. If you want to use your own email headers, choose <code>emailHeader</code>. If you want to use link tags, choose <code>linkTags</code>.'
    DefaultDimensionValue:
      type: string
      description: '<p>The default value of the dimension that is published to Amazon CloudWatch if you don''t provide the value of the dimension when you send an email. This value has to meet the following criteria:</p> <ul> <li> <p>It can only contain ASCII letters (a–z, A–Z), numbers (0–9), underscores (_), or dashes (-).</p> </li> <li> <p>It can contain no more than 256 characters.</p> </li> </ul>'
    CloudWatchDimensionConfiguration:
      type: object
      required:
        - DimensionName
        - DimensionValueSource
        - DefaultDimensionValue
      properties:
        DimensionName:
          $ref: '#/components/schemas/DimensionName'
          description: '<p>The name of an Amazon CloudWatch dimension associated with an email sending metric. The name has to meet the following criteria:</p> <ul> <li> <p>It can only contain ASCII letters (a–z, A–Z), numbers (0–9), underscores (_), or dashes (-).</p> </li> <li> <p>It can contain no more than 256 characters.</p> </li> </ul>'
        DimensionValueSource:
          $ref: '#/components/schemas/DimensionValueSource'
          description: 'The location where the Amazon SES API v2 finds the value of a dimension to publish to Amazon CloudWatch. If you want to use the message tags that you specify using an <code>X-SES-MESSAGE-TAGS</code> header or a parameter to the <code>SendEmail</code> or <code>SendRawEmail</code> API, choose <code>messageTag</code>. If you want to use your own email headers, choose <code>emailHeader</code>. If you want to use link tags, choose <code>linkTags</code>.'
        DefaultDimensionValue:
          $ref: '#/components/schemas/DefaultDimensionValue'
          description: '<p>The default value of the dimension that is published to Amazon CloudWatch if you don''t provide the value of the dimension when you send an email. This value has to meet the following criteria:</p> <ul> <li> <p>It can only contain ASCII letters (a–z, A–Z), numbers (0–9), underscores (_), or dashes (-).</p> </li> <li> <p>It can contain no more than 256 characters.</p> </li> </ul>'
      description: An object that defines the dimension configuration to use when you send email events to Amazon CloudWatch.
    ConfigurationSetName:
      type: string
      description: '<p>The name of a configuration set.</p> <p> <i>Configuration sets</i> are groups of rules that you can apply to the emails you send. You apply a configuration set to an email by including a reference to the configuration set in the headers of the email. When you apply a configuration set to an email, all of the rules in that configuration set are applied to the email.</p>'
    ConfigurationSetNameList:
      type: array
      items:
        $ref: '#/components/schemas/ConfigurationSetName'
    TopicPreferenceList:
      type: array
      items:
        $ref: '#/components/schemas/TopicPreference'
    UnsubscribeAll:
      type: boolean
    Contact:
      type: object
      properties:
        EmailAddress:
          $ref: '#/components/schemas/EmailAddress'
          description: The contact's email address.
        TopicPreferences:
          $ref: '#/components/schemas/TopicPreferenceList'
          description: The contact's preference for being opted-in to or opted-out of a topic.
        TopicDefaultPreferences:
          $ref: '#/components/schemas/TopicPreferenceList'
          description: The default topic preferences applied to the contact.
        UnsubscribeAll:
          $ref: '#/components/schemas/UnsubscribeAll'
          description: A boolean value status noting if the contact is unsubscribed from all contact list topics.
        LastUpdatedTimestamp:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp noting the last time the contact's information was updated.
      description: A contact is the end-user who is receiving the email.
    ContactList:
      type: object
      properties:
        ContactListName:
          $ref: '#/components/schemas/ContactListName'
          description: The name of the contact list.
        LastUpdatedTimestamp:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp noting the last time the contact list was updated.
      description: A list that contains contacts that have subscribed to a particular topic or topics.
    ContactListImportAction:
      type: string
      enum:
        - DELETE
        - PUT
    MessageData:
      type: string
    EventDestinationName:
      type: string
      description: '<p>The name of an event destination.</p> <p> <i>Events</i> include message sends, deliveries, opens, clicks, bounces, and complaints. <i>Event destinations</i> are places that you can send information about these events to. For example, you can send event data to Amazon SNS to receive notifications when you receive bounces or complaints, or you can use Amazon Kinesis Data Firehose to stream data to Amazon S3 for long-term storage.</p>'
    EventDestinationDefinition:
      type: object
      properties:
        Enabled:
          $ref: '#/components/schemas/Enabled'
          description: '<p>If <code>true</code>, the event destination is enabled. When the event destination is enabled, the specified event types are sent to the destinations in this <code>EventDestinationDefinition</code>.</p> <p>If <code>false</code>, the event destination is disabled. When the event destination is disabled, events aren''t sent to the specified destinations.</p>'
        MatchingEventTypes:
          $ref: '#/components/schemas/EventTypes'
          description: An array that specifies which events the Amazon SES API v2 should send to the destinations in this <code>EventDestinationDefinition</code>.
        KinesisFirehoseDestination:
          $ref: '#/components/schemas/KinesisFirehoseDestination'
          description: 'An object that defines an Amazon Kinesis Data Firehose destination for email events. You can use Amazon Kinesis Data Firehose to stream data to other services, such as Amazon S3 and Amazon Redshift.'
        CloudWatchDestination:
          $ref: '#/components/schemas/CloudWatchDestination'
          description: An object that defines an Amazon CloudWatch destination for email events. You can use Amazon CloudWatch to monitor and gain insights on your email sending metrics.
        SnsDestination:
          $ref: '#/components/schemas/SnsDestination'
          description: An object that defines an Amazon SNS destination for email events. You can use Amazon SNS to send notification when certain email events occur.
        PinpointDestination:
          $ref: '#/components/schemas/PinpointDestination'
          description: 'An object that defines an Amazon Pinpoint project destination for email events. You can send email event data to a Amazon Pinpoint project to view metrics using the Transactional Messaging dashboards that are built in to Amazon Pinpoint. For more information, see <a href="https://docs.aws.amazon.com/pinpoint/latest/userguide/analytics-transactional-messages.html">Transactional Messaging Charts</a> in the <i>Amazon Pinpoint User Guide</i>.'
      description: 'An object that defines the event destination. Specifically, it defines which services receive events from emails sent using the configuration set that the event destination is associated with. Also defines the types of events that are sent to the event destination.'
    CreateConfigurationSetEventDestinationRequest:
      type: object
      required:
        - EventDestinationName
        - EventDestination
      title: CreateConfigurationSetEventDestinationRequest
      properties:
        EventDestinationName:
          $ref: '#/components/schemas/EventDestinationName'
          description: A name that identifies the event destination within the configuration set.
        EventDestination:
          $ref: '#/components/schemas/EventDestinationDefinition'
          description: An object that defines the event destination.
      description: A request to add an event destination to a configuration set.
    TrackingOptions:
      type: object
      required:
        - CustomRedirectDomain
      properties:
        CustomRedirectDomain:
          $ref: '#/components/schemas/CustomRedirectDomain'
          description: The domain that you want to use for tracking open and click events.
      description: '<p>An object that defines the tracking options for a configuration set. When you use the Amazon SES API v2 to send an email, it contains an invisible image that''s used to track when recipients open your email. If your email contains links, those links are changed slightly in order to track when recipients click them.</p> <p>These images and links include references to a domain operated by AWS. You can optionally configure the Amazon SES to use a domain that you operate for these images and links.</p>'
    DeliveryOptions:
      type: object
      properties:
        TlsPolicy:
          $ref: '#/components/schemas/TlsPolicy'
          description: 'Specifies whether messages that use the configuration set are required to use Transport Layer Security (TLS). If the value is <code>Require</code>, messages are only delivered if a TLS connection can be established. If the value is <code>Optional</code>, messages can be delivered in plain text if a TLS connection can''t be established.'
        SendingPoolName:
          $ref: '#/components/schemas/PoolName'
          description: The name of the dedicated IP pool that you want to associate with the configuration set.
      description: Used to associate a configuration set with a dedicated IP pool.
    ReputationOptions:
      type: object
      properties:
        ReputationMetricsEnabled:
          $ref: '#/components/schemas/Enabled'
          description: 'If <code>true</code>, tracking of reputation metrics is enabled for the configuration set. If <code>false</code>, tracking of reputation metrics is disabled for the configuration set.'
        LastFreshStart:
          $ref: '#/components/schemas/LastFreshStart'
          description: 'The date and time (in Unix time) when the reputation metrics were last given a fresh start. When your account is given a fresh start, your reputation metrics are calculated starting from the date of the fresh start.'
      description: 'Enable or disable collection of reputation metrics for emails that you send using this configuration set in the current AWS Region. '
    SendingOptions:
      type: object
      properties:
        SendingEnabled:
          $ref: '#/components/schemas/Enabled'
          description: 'If <code>true</code>, email sending is enabled for the configuration set. If <code>false</code>, email sending is disabled for the configuration set.'
      description: Used to enable or disable email sending for messages that use this configuration set in the current AWS Region.
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    SuppressionOptions:
      type: object
      properties:
        SuppressedReasons:
          $ref: '#/components/schemas/SuppressionListReasons'
          description: '<p>A list that contains the reasons that email addresses are automatically added to the suppression list for your account. This list can contain any or all of the following:</p> <ul> <li> <p> <code>COMPLAINT</code> – Amazon SES adds an email address to the suppression list for your account when a message sent to that address results in a complaint.</p> </li> <li> <p> <code>BOUNCE</code> – Amazon SES adds an email address to the suppression list for your account when a message sent to that address results in a hard bounce.</p> </li> </ul>'
      description: An object that contains information about the suppression list preferences for your account.
    CreateConfigurationSetRequest:
      type: object
      required:
        - ConfigurationSetName
      title: CreateConfigurationSetRequest
      properties:
        ConfigurationSetName:
          $ref: '#/components/schemas/ConfigurationSetName'
          description: The name of the configuration set.
        TrackingOptions:
          $ref: '#/components/schemas/TrackingOptions'
          description: An object that defines the open and click tracking options for emails that you send using the configuration set.
        DeliveryOptions:
          $ref: '#/components/schemas/DeliveryOptions'
          description: An object that defines the dedicated IP pool that is used to send emails that you send using the configuration set.
        ReputationOptions:
          $ref: '#/components/schemas/ReputationOptions'
          description: An object that defines whether or not Amazon SES collects reputation metrics for the emails that you send that use the configuration set.
        SendingOptions:
          $ref: '#/components/schemas/SendingOptions'
          description: An object that defines whether or not Amazon SES can send email that you send using the configuration set.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: An array of objects that define the tags (keys and values) that you want to associate with the configuration set.
        SuppressionOptions:
          $ref: '#/components/schemas/SuppressionOptions'
      description: A request to create a configuration set.
    Topics:
      type: array
      items:
        $ref: '#/components/schemas/Topic'
    Description:
      type: string
    CreateContactListRequest:
      type: object
      required:
        - ContactListName
      title: CreateContactListRequest
      properties:
        ContactListName:
          $ref: '#/components/schemas/ContactListName'
          description: The name of the contact list.
        Topics:
          $ref: '#/components/schemas/Topics'
          description: 'An interest group, theme, or label within a list. A contact list can have multiple topics.'
        Description:
          $ref: '#/components/schemas/Description'
          description: A description of what the contact list is about.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: The tags associated with a contact list.
    CreateContactRequest:
      type: object
      required:
        - EmailAddress
      title: CreateContactRequest
      properties:
        EmailAddress:
          $ref: '#/components/schemas/EmailAddress'
          description: The contact's email address.
        TopicPreferences:
          $ref: '#/components/schemas/TopicPreferenceList'
          description: The contact's preferences for being opted-in to or opted-out of topics.
        UnsubscribeAll:
          $ref: '#/components/schemas/UnsubscribeAll'
          description: A boolean value status noting if the contact is unsubscribed from all contact list topics.
        AttributesData:
          $ref: '#/components/schemas/AttributesData'
          description: The attribute data attached to a contact.
    EmailTemplateName:
      type: string
      description: The name of the template. You will refer to this name when you send email using the <code>SendTemplatedEmail</code> or <code>SendBulkTemplatedEmail</code> operations.
      minLength: 1
    TemplateContent:
      type: string
      description: The content of the custom verification email template.
    SuccessRedirectionURL:
      type: string
      description: The URL that the recipient of the verification email is sent to if his or her address is successfully verified.
    FailureRedirectionURL:
      type: string
      description: The URL that the recipient of the verification email is sent to if his or her address is not successfully verified.
    CreateCustomVerificationEmailTemplateRequest:
      type: object
      required:
        - TemplateName
        - FromEmailAddress
        - TemplateSubject
        - TemplateContent
        - SuccessRedirectionURL
        - FailureRedirectionURL
      title: CreateCustomVerificationEmailTemplateRequest
      properties:
        TemplateName:
          $ref: '#/components/schemas/EmailTemplateName'
          description: The name of the custom verification email template.
        FromEmailAddress:
          $ref: '#/components/schemas/EmailAddress'
          description: The email address that the custom verification email is sent from.
        TemplateSubject:
          $ref: '#/components/schemas/EmailTemplateSubject'
          description: The subject line of the custom verification email.
        TemplateContent:
          $ref: '#/components/schemas/TemplateContent'
          description: 'The content of the custom verification email. The total size of the email must be less than 10 MB. The message body may contain HTML, with some limitations. For more information, see <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-verify-address-custom.html#custom-verification-emails-faq">Custom Verification Email Frequently Asked Questions</a> in the <i>Amazon SES Developer Guide</i>.'
        SuccessRedirectionURL:
          $ref: '#/components/schemas/SuccessRedirectionURL'
          description: The URL that the recipient of the verification email is sent to if his or her address is successfully verified.
        FailureRedirectionURL:
          $ref: '#/components/schemas/FailureRedirectionURL'
          description: The URL that the recipient of the verification email is sent to if his or her address is not successfully verified.
      description: Represents a request to create a custom verification email template.
    CreateDedicatedIpPoolRequest:
      type: object
      required:
        - PoolName
      title: CreateDedicatedIpPoolRequest
      properties:
        PoolName:
          $ref: '#/components/schemas/PoolName'
          description: The name of the dedicated IP pool.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: An object that defines the tags (keys and values) that you want to associate with the pool.
      description: A request to create a new dedicated IP pool.
    ReportName:
      type: string
      description: A name that helps you identify a report generated by the Deliverability dashboard.
    EmailContent:
      type: object
      properties:
        Simple:
          $ref: '#/components/schemas/Message'
          description: The simple email message. The message consists of a subject and a message body.
        Raw:
          $ref: '#/components/schemas/RawMessage'
          description: '<p>The raw email message. The message has to meet the following criteria:</p> <ul> <li> <p>The message has to contain a header and a body, separated by one blank line.</p> </li> <li> <p>All of the required header fields must be present in the message.</p> </li> <li> <p>Each part of a multipart MIME message must be formatted properly.</p> </li> <li> <p>If you include attachments, they must be in a file format that the Amazon SES API v2 supports. </p> </li> <li> <p>The entire message must be Base64 encoded.</p> </li> <li> <p>If any of the MIME parts in your message contain content that is outside of the 7-bit ASCII character range, you should encode that content to ensure that recipients'' email clients render the message properly.</p> </li> <li> <p>The length of any single line of text in the message can''t exceed 1,000 characters. This restriction is defined in <a href="https://tools.ietf.org/html/rfc5321">RFC 5321</a>.</p> </li> </ul>'
        Template:
          $ref: '#/components/schemas/Template'
          description: The template to use for the email message.
      description: 'An object that defines the entire content of the email, including the message headers and the body content. You can create a simple email message, in which you specify the subject and the text and HTML versions of the message body. You can also create raw messages, in which you specify a complete MIME-formatted message. Raw messages can include attachments and custom headers.'
    CreateDeliverabilityTestReportRequest:
      type: object
      required:
        - FromEmailAddress
        - Content
      title: CreateDeliverabilityTestReportRequest
      properties:
        ReportName:
          $ref: '#/components/schemas/ReportName'
          description: A unique name that helps you to identify the predictive inbox placement test when you retrieve the results.
        FromEmailAddress:
          $ref: '#/components/schemas/EmailAddress'
          description: The email address that the predictive inbox placement test email was sent from.
        Content:
          $ref: '#/components/schemas/EmailContent'
          description: The HTML body of the message that you sent when you performed the predictive inbox placement test.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: An array of objects that define the tags (keys and values) that you want to associate with the predictive inbox placement test.
      description: 'A request to perform a predictive inbox placement test. Predictive inbox placement tests can help you predict how your messages will be handled by various email providers around the world. When you perform a predictive inbox placement test, you provide a sample message that contains the content that you plan to send to your customers. We send that message to special email addresses spread across several major email providers around the world. The test takes about 24 hours to complete. When the test is complete, you can use the <code>GetDeliverabilityTestReport</code> operation to view the results of the test.'
    ReportId:
      type: string
      description: A unique string that identifies a Deliverability dashboard report.
    DeliverabilityTestStatus:
      type: string
      enum:
        - IN_PROGRESS
        - COMPLETED
      description: 'The status of a predictive inbox placement test. If the status is <code>IN_PROGRESS</code>, then the predictive inbox placement test is currently running. Predictive inbox placement tests are usually complete within 24 hours of creating the test. If the status is <code>COMPLETE</code>, then the test is finished, and you can use the <code>GetDeliverabilityTestReport</code> operation to view the results of the test.'
    Identity:
      type: string
      minLength: 1
    PolicyName:
      type: string
      description: '<p>The name of the policy.</p> <p>The policy name cannot exceed 64 characters and can only include alphanumeric characters, dashes, and underscores.</p>'
      minLength: 1
      maxLength: 64
    Policy:
      type: string
      description: '<p>The text of the policy in JSON format. The policy cannot exceed 4 KB.</p> <p>For information about the syntax of sending authorization policies, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer Guide</a>.</p>'
      minLength: 1
    CreateEmailIdentityPolicyRequest:
      type: object
      required:
        - Policy
      title: CreateEmailIdentityPolicyRequest
      properties:
        Policy:
          $ref: '#/components/schemas/Policy'
          description: '<p>The text of the policy in JSON format. The policy cannot exceed 4 KB.</p> <p>For information about the syntax of sending authorization policies, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization-policies.html">Amazon SES Developer Guide</a>.</p>'
      description: 'Represents a request to create a sending authorization policy for an identity. Sending authorization is an Amazon SES feature that enables you to authorize other senders to use your identities. For information, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization-identity-owner-tasks-management.html">Amazon SES Developer Guide</a>.'
    DkimSigningAttributes:
      type: object
      required:
        - DomainSigningSelector
        - DomainSigningPrivateKey
      properties:
        DomainSigningSelector:
          $ref: '#/components/schemas/Selector'
          description: A string that's used to identify a public key in the DNS configuration for a domain.
        DomainSigningPrivateKey:
          $ref: '#/components/schemas/PrivateKey'
          description: '<p>A private key that''s used to generate a DKIM signature.</p> <p>The private key must use 1024-bit RSA encryption, and must be encoded using base64 encoding.</p>'
      description: An object that contains information about the tokens used for setting up Bring Your Own DKIM (BYODKIM).
    CreateEmailIdentityRequest:
      type: object
      required:
        - EmailIdentity
      title: CreateEmailIdentityRequest
      properties:
        EmailIdentity:
          $ref: '#/components/schemas/Identity'
          description: The email address or domain that you want to verify.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: An array of objects that define the tags (keys and values) that you want to associate with the email identity.
        DkimSigningAttributes:
          $ref: '#/components/schemas/DkimSigningAttributes'
          description: '<p>If your request includes this object, Amazon SES configures the identity to use Bring Your Own DKIM (BYODKIM) for DKIM authentication purposes, as opposed to the default method, <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">Easy DKIM</a>.</p> <p>You can only specify this object if the email identity is a domain, as opposed to an address.</p>'
        ConfigurationSetName:
          $ref: '#/components/schemas/ConfigurationSetName'
          description: 'The configuration set to use by default when sending from this identity. Note that any configuration set defined in the email sending request takes precedence. '
      description: A request to begin the verification process for an email identity (an email address or domain).
    IdentityType:
      type: string
      enum:
        - EMAIL_ADDRESS
        - DOMAIN
        - MANAGED_DOMAIN
      description: '<p>The email identity type. The identity type can be one of the following:</p> <ul> <li> <p> <code>EMAIL_ADDRESS</code> – The identity is an email address.</p> </li> <li> <p> <code>DOMAIN</code> – The identity is a domain.</p> </li> </ul>'
    DkimAttributes:
      type: object
      properties:
        SigningEnabled:
          $ref: '#/components/schemas/Enabled'
          description: 'If the value is <code>true</code>, then the messages that you send from the identity are signed using DKIM. If the value is <code>false</code>, then the messages that you send from the identity aren''t DKIM-signed.'
        Status:
          $ref: '#/components/schemas/DkimStatus'
          description: '<p>Describes whether or not Amazon SES has successfully located the DKIM records in the DNS records for the domain. The status can be one of the following:</p> <ul> <li> <p> <code>PENDING</code> – The verification process was initiated, but Amazon SES hasn''t yet detected the DKIM records in the DNS configuration for the domain.</p> </li> <li> <p> <code>SUCCESS</code> – The verification process completed successfully.</p> </li> <li> <p> <code>FAILED</code> – The verification process failed. This typically occurs when Amazon SES fails to find the DKIM records in the DNS configuration of the domain.</p> </li> <li> <p> <code>TEMPORARY_FAILURE</code> – A temporary issue is preventing Amazon SES from determining the DKIM authentication status of the domain.</p> </li> <li> <p> <code>NOT_STARTED</code> – The DKIM verification process hasn''t been initiated for the domain.</p> </li> </ul>'
        Tokens:
          $ref: '#/components/schemas/DnsTokenList'
          description: '<p>If you used <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">Easy DKIM</a> to configure DKIM authentication for the domain, then this object contains a set of unique strings that you use to create a set of CNAME records that you add to the DNS configuration for your domain. When Amazon SES detects these records in the DNS configuration for your domain, the DKIM authentication process is complete.</p> <p>If you configured DKIM authentication for the domain by providing your own public-private key pair, then this object contains the selector for the public key.</p> <p>Regardless of the DKIM authentication method you use, Amazon SES searches for the appropriate records in the DNS configuration of the domain for up to 72 hours.</p>'
        SigningAttributesOrigin:
          $ref: '#/components/schemas/DkimSigningAttributesOrigin'
          description: '<p>A string that indicates how DKIM was configured for the identity. There are two possible values:</p> <ul> <li> <p> <code>AWS_SES</code> – Indicates that DKIM was configured for the identity by using <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">Easy DKIM</a>.</p> </li> <li> <p> <code>EXTERNAL</code> – Indicates that DKIM was configured for the identity by using Bring Your Own DKIM (BYODKIM).</p> </li> </ul>'
      description: '<p>An object that contains information about the DKIM authentication status for an email identity.</p> <p>Amazon SES determines the authentication status by searching for specific records in the DNS configuration for the domain. If you used <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">Easy DKIM</a> to set up DKIM authentication, Amazon SES tries to find three unique CNAME records in the DNS configuration for your domain. If you provided a public key to perform DKIM authentication, Amazon SES tries to find a TXT record that uses the selector that you specified. The value of the TXT record must be a public key that''s paired with the private key that you specified in the process of creating the identity</p>'
    EmailTemplateContent:
      type: object
      properties:
        Subject:
          $ref: '#/components/schemas/EmailTemplateSubject'
          description: The subject line of the email.
        Text:
          $ref: '#/components/schemas/EmailTemplateText'
          description: The email body that will be visible to recipients whose email clients do not display HTML.
        Html:
          $ref: '#/components/schemas/EmailTemplateHtml'
          description: The HTML body of the email.
      description: 'The content of the email, composed of a subject line, an HTML part, and a text-only part.'
    CreateEmailTemplateRequest:
      type: object
      required:
        - TemplateName
        - TemplateContent
      title: CreateEmailTemplateRequest
      properties:
        TemplateName:
          $ref: '#/components/schemas/EmailTemplateName'
          description: The name of the template you want to create.
        TemplateContent:
          $ref: '#/components/schemas/EmailTemplateContent'
          description: 'The content of the email template, composed of a subject line, an HTML part, and a text-only part.'
      description: 'Represents a request to create an email template. For more information, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html">Amazon SES Developer Guide</a>.'
    ImportDestination:
      type: object
      properties:
        SuppressionListDestination:
          $ref: '#/components/schemas/SuppressionListDestination'
          description: An object that contains the action of the import job towards suppression list.
        ContactListDestination:
          $ref: '#/components/schemas/ContactListDestination'
          description: An object that contains the action of the import job towards a contact list.
      description: An object that contains details about the resource destination the import job is going to target.
    ImportDataSource:
      type: object
      required:
        - S3Url
        - DataFormat
      properties:
        S3Url:
          $ref: '#/components/schemas/S3Url'
          description: 'An Amazon S3 URL in the format s3://<i>&lt;bucket_name&gt;</i>/<i>&lt;object&gt;</i>.'
        DataFormat:
          $ref: '#/components/schemas/DataFormat'
          description: The data format of the import job's data source.
      description: An object that contains details about the data source of the import job.
    CreateImportJobRequest:
      type: object
      required:
        - ImportDestination
        - ImportDataSource
      title: CreateImportJobRequest
      properties:
        ImportDestination:
          $ref: '#/components/schemas/ImportDestination'
          description: The destination for the import job.
        ImportDataSource:
          $ref: '#/components/schemas/ImportDataSource'
          description: The data source for the import job.
      description: Represents a request to create an import job from a data source for a data destination.
    JobId:
      type: string
      description: A string that represents the import job ID.
      minLength: 1
    CustomVerificationEmailTemplateMetadata:
      type: object
      properties:
        TemplateName:
          $ref: '#/components/schemas/EmailTemplateName'
          description: The name of the custom verification email template.
        FromEmailAddress:
          $ref: '#/components/schemas/EmailAddress'
          description: The email address that the custom verification email is sent from.
        TemplateSubject:
          $ref: '#/components/schemas/EmailTemplateSubject'
          description: The subject line of the custom verification email.
        SuccessRedirectionURL:
          $ref: '#/components/schemas/SuccessRedirectionURL'
          description: The URL that the recipient of the verification email is sent to if his or her address is successfully verified.
        FailureRedirectionURL:
          $ref: '#/components/schemas/FailureRedirectionURL'
          description: The URL that the recipient of the verification email is sent to if his or her address is not successfully verified.
      description: Contains information about a custom verification email template.
    CustomVerificationEmailTemplatesList:
      type: array
      description: A list of the custom verification email templates that exist in your account.
      items:
        $ref: '#/components/schemas/CustomVerificationEmailTemplateMetadata'
    VolumeStatistics:
      type: object
      properties:
        InboxRawCount:
          $ref: '#/components/schemas/Volume'
          description: The total number of emails that arrived in recipients' inboxes.
        SpamRawCount:
          $ref: '#/components/schemas/Volume'
          description: The total number of emails that arrived in recipients' spam or junk mail folders.
        ProjectedInbox:
          $ref: '#/components/schemas/Volume'
          description: An estimate of the percentage of emails sent from the current domain that will arrive in recipients' inboxes.
        ProjectedSpam:
          $ref: '#/components/schemas/Volume'
          description: An estimate of the percentage of emails sent from the current domain that will arrive in recipients' spam or junk mail folders.
      description: An object that contains information about the amount of email that was delivered to recipients.
    DomainIspPlacements:
      type: array
      items:
        $ref: '#/components/schemas/DomainIspPlacement'
    DailyVolume:
      type: object
      properties:
        StartDate:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date that the DailyVolume metrics apply to, in Unix time.'
        VolumeStatistics:
          $ref: '#/components/schemas/VolumeStatistics'
          description: An object that contains inbox placement metrics for a specific day in the analysis period.
        DomainIspPlacements:
          $ref: '#/components/schemas/DomainIspPlacements'
          description: 'An object that contains inbox placement metrics for a specified day in the analysis period, broken out by the recipient''s email provider.'
      description: An object that contains information about the volume of email sent on each day of the analysis period.
    DailyVolumes:
      type: array
      items:
        $ref: '#/components/schemas/DailyVolume'
    Ip:
      type: string
      description: An IPv4 address.
    WarmupStatus:
      type: string
      enum:
        - IN_PROGRESS
        - DONE
      description: The warmup status of a dedicated IP.
    Percentage100Wrapper:
      type: integer
    DedicatedIp:
      type: object
      required:
        - Ip
        - WarmupStatus
        - WarmupPercentage
      properties:
        Ip:
          $ref: '#/components/schemas/Ip'
          description: An IPv4 address.
        WarmupStatus:
          $ref: '#/components/schemas/WarmupStatus'
          description: '<p>The warm-up status of a dedicated IP address. The status can have one of the following values:</p> <ul> <li> <p> <code>IN_PROGRESS</code> – The IP address isn''t ready to use because the dedicated IP warm-up process is ongoing.</p> </li> <li> <p> <code>DONE</code> – The dedicated IP warm-up process is complete, and the IP address is ready to use.</p> </li> </ul>'
        WarmupPercentage:
          $ref: '#/components/schemas/Percentage100Wrapper'
          description: 'Indicates how complete the dedicated IP warm-up process is. When this value equals 1, the address has completed the warm-up process and is ready for use.'
        PoolName:
          $ref: '#/components/schemas/PoolName'
          description: The name of the dedicated IP pool that the IP address is associated with.
      description: '<p>Contains information about a dedicated IP address that is associated with your Amazon SES account.</p> <p>To learn more about requesting dedicated IP addresses, see <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/dedicated-ip-case.html">Requesting and Relinquishing Dedicated IP Addresses</a> in the <i>Amazon SES Developer Guide</i>.</p>'
    DedicatedIpList:
      type: array
      description: A list of dedicated IP addresses that are associated with your AWS account.
      items:
        $ref: '#/components/schemas/DedicatedIp'
    DeleteConfigurationSetEventDestinationRequest:
      type: object
      title: DeleteConfigurationSetEventDestinationRequest
      properties: {}
      description: A request to delete an event destination from a configuration set.
    DeleteConfigurationSetRequest:
      type: object
      title: DeleteConfigurationSetRequest
      properties: {}
      description: A request to delete a configuration set.
    DeleteContactListRequest:
      type: object
      title: DeleteContactListRequest
      properties: {}
    DeleteContactRequest:
      type: object
      title: DeleteContactRequest
      properties: {}
    DeleteCustomVerificationEmailTemplateRequest:
      type: object
      title: DeleteCustomVerificationEmailTemplateRequest
      properties: {}
      description: Represents a request to delete an existing custom verification email template.
    DeleteDedicatedIpPoolRequest:
      type: object
      title: DeleteDedicatedIpPoolRequest
      properties: {}
      description: A request to delete a dedicated IP pool.
    DeleteEmailIdentityPolicyRequest:
      type: object
      title: DeleteEmailIdentityPolicyRequest
      properties: {}
      description: 'Represents a request to delete a sending authorization policy for an identity. Sending authorization is an Amazon SES feature that enables you to authorize other senders to use your identities. For information, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization-identity-owner-tasks-management.html">Amazon SES Developer Guide</a>.'
    DeleteEmailIdentityRequest:
      type: object
      title: DeleteEmailIdentityRequest
      properties: {}
      description: 'A request to delete an existing email identity. When you delete an identity, you lose the ability to send email from that identity. You can restore your ability to send email by completing the verification process for the identity again.'
    DeleteEmailTemplateRequest:
      type: object
      title: DeleteEmailTemplateRequest
      properties: {}
      description: 'Represents a request to delete an email template. For more information, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html">Amazon SES Developer Guide</a>.'
    DeleteSuppressedDestinationRequest:
      type: object
      title: DeleteSuppressedDestinationRequest
      properties: {}
      description: A request to remove an email address from the suppression list for your account.
    DeliverabilityDashboardAccountStatus:
      type: string
      enum:
        - ACTIVE
        - PENDING_EXPIRATION
        - DISABLED
      description: 'The current status of your Deliverability dashboard subscription. If this value is <code>PENDING_EXPIRATION</code>, your subscription is scheduled to expire at the end of the current calendar month.'
    DeliverabilityTestSubject:
      type: string
      description: The subject line for an email that you submitted in a predictive inbox placement test.
    DeliverabilityTestReport:
      type: object
      properties:
        ReportId:
          $ref: '#/components/schemas/ReportId'
          description: A unique string that identifies the predictive inbox placement test.
        ReportName:
          $ref: '#/components/schemas/ReportName'
          description: A name that helps you identify a predictive inbox placement test report.
        Subject:
          $ref: '#/components/schemas/DeliverabilityTestSubject'
          description: The subject line for an email that you submitted in a predictive inbox placement test.
        FromEmailAddress:
          $ref: '#/components/schemas/EmailAddress'
          description: The sender address that you specified for the predictive inbox placement test.
        CreateDate:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time when the predictive inbox placement test was created, in Unix time format.'
        DeliverabilityTestStatus:
          $ref: '#/components/schemas/DeliverabilityTestStatus'
          description: 'The status of the predictive inbox placement test. If the status is <code>IN_PROGRESS</code>, then the predictive inbox placement test is currently running. Predictive inbox placement tests are usually complete within 24 hours of creating the test. If the status is <code>COMPLETE</code>, then the test is finished, and you can use the <code>GetDeliverabilityTestReport</code> to view the results of the test.'
      description: An object that contains metadata related to a predictive inbox placement test.
    DeliverabilityTestReports:
      type: array
      items:
        $ref: '#/components/schemas/DeliverabilityTestReport'
    DisplayName:
      type: string
    DkimStatus:
      type: string
      enum:
        - PENDING
        - SUCCESS
        - FAILED
        - TEMPORARY_FAILURE
        - NOT_STARTED
      description: '<p>The DKIM authentication status of the identity. The status can be one of the following:</p> <ul> <li> <p> <code>PENDING</code> – The verification process was initiated, but Amazon SES hasn''t yet detected the DKIM records in the DNS configuration for the domain.</p> </li> <li> <p> <code>SUCCESS</code> – The verification process completed successfully.</p> </li> <li> <p> <code>FAILED</code> – The verification process failed. This typically occurs when Amazon SES fails to find the DKIM records in the DNS configuration of the domain.</p> </li> <li> <p> <code>TEMPORARY_FAILURE</code> – A temporary issue is preventing Amazon SES from determining the DKIM authentication status of the domain.</p> </li> <li> <p> <code>NOT_STARTED</code> – The DKIM verification process hasn''t been initiated for the domain.</p> </li> </ul>'
    DnsTokenList:
      type: array
      items:
        $ref: '#/components/schemas/DnsToken'
    DkimSigningAttributesOrigin:
      type: string
      enum:
        - AWS_SES
        - EXTERNAL
    DnsToken:
      type: string
    Domain:
      type: string
    ImageUrl:
      type: string
    Subject:
      type: string
    IpList:
      type: array
      items:
        $ref: '#/components/schemas/Ip'
    Volume:
      type: integer
      description: An object that contains information about inbox placement volume.
    Percentage:
      type: number
      description: An object that contains information about inbox placement percentages.
      format: double
    Esps:
      type: array
      items:
        $ref: '#/components/schemas/Esp'
    DomainDeliverabilityCampaign:
      type: object
      properties:
        CampaignId:
          $ref: '#/components/schemas/CampaignId'
          description: The unique identifier for the campaign. The Deliverability dashboard automatically generates and assigns this identifier to a campaign.
        ImageUrl:
          $ref: '#/components/schemas/ImageUrl'
          description: The URL of an image that contains a snapshot of the email message that was sent.
        Subject:
          $ref: '#/components/schemas/Subject'
          description: 'The subject line, or title, of the email message.'
        FromAddress:
          $ref: '#/components/schemas/Identity'
          description: The verified email address that the email message was sent from.
        SendingIps:
          $ref: '#/components/schemas/IpList'
          description: The IP addresses that were used to send the email message.
        FirstSeenDateTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'The first time, in Unix time format, when the email message was delivered to any recipient''s inbox. This value can help you determine how long it took for a campaign to deliver an email message.'
        LastSeenDateTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'The last time, in Unix time format, when the email message was delivered to any recipient''s inbox. This value can help you determine how long it took for a campaign to deliver an email message.'
        InboxCount:
          $ref: '#/components/schemas/Volume'
          description: The number of email messages that were delivered to recipients’ inboxes.
        SpamCount:
          $ref: '#/components/schemas/Volume'
          description: The number of email messages that were delivered to recipients' spam or junk mail folders.
        ReadRate:
          $ref: '#/components/schemas/Percentage'
          description: 'The percentage of email messages that were opened by recipients. Due to technical limitations, this value only includes recipients who opened the message by using an email client that supports images.'
        DeleteRate:
          $ref: '#/components/schemas/Percentage'
          description: 'The percentage of email messages that were deleted by recipients, without being opened first. Due to technical limitations, this value only includes recipients who opened the message by using an email client that supports images.'
        ReadDeleteRate:
          $ref: '#/components/schemas/Percentage'
          description: 'The percentage of email messages that were opened and then deleted by recipients. Due to technical limitations, this value only includes recipients who opened the message by using an email client that supports images.'
        ProjectedVolume:
          $ref: '#/components/schemas/Volume'
          description: The projected number of recipients that the email message was sent to.
        Esps:
          $ref: '#/components/schemas/Esps'
          description: The major email providers who handled the email message.
      description: An object that contains the deliverability data for a specific campaign. This data is available for a campaign only if the campaign sent email by using a domain that the Deliverability dashboard is enabled for (<code>PutDeliverabilityDashboardOption</code> operation).
    DomainDeliverabilityCampaignList:
      type: array
      description: <p/>
      items:
        $ref: '#/components/schemas/DomainDeliverabilityCampaign'
    InboxPlacementTrackingOption:
      type: object
      properties:
        Global:
          $ref: '#/components/schemas/Enabled'
          description: Specifies whether inbox placement data is being tracked for the domain.
        TrackedIsps:
          $ref: '#/components/schemas/IspNameList'
          description: 'An array of strings, one for each major email provider that the inbox placement data applies to.'
      description: An object that contains information about the inbox placement data settings for a verified domain that’s associated with your AWS account. This data is available only if you enabled the Deliverability dashboard for the domain.
    DomainDeliverabilityTrackingOptions:
      type: array
      description: 'An object that contains information about the Deliverability dashboard subscription for a verified domain that you use to send email and currently has an active Deliverability dashboard subscription. If a Deliverability dashboard subscription is active for a domain, you gain access to reputation, inbox placement, and other metrics for the domain.'
      items:
        $ref: '#/components/schemas/DomainDeliverabilityTrackingOption'
    IspName:
      type: string
      description: The name of an email provider.
    DomainIspPlacement:
      type: object
      properties:
        IspName:
          $ref: '#/components/schemas/IspName'
          description: The name of the email provider that the inbox placement data applies to.
        InboxRawCount:
          $ref: '#/components/schemas/Volume'
          description: The total number of messages that were sent from the selected domain to the specified email provider that arrived in recipients' inboxes.
        SpamRawCount:
          $ref: '#/components/schemas/Volume'
          description: The total number of messages that were sent from the selected domain to the specified email provider that arrived in recipients' spam or junk mail folders.
        InboxPercentage:
          $ref: '#/components/schemas/Percentage'
          description: The percentage of messages that were sent from the selected domain to the specified email provider that arrived in recipients' inboxes.
        SpamPercentage:
          $ref: '#/components/schemas/Percentage'
          description: The percentage of messages that were sent from the selected domain to the specified email provider that arrived in recipients' spam or junk mail folders.
      description: An object that contains inbox placement data for email sent from one of your email domains to a specific email provider.
    EmailTemplateData:
      type: string
      description: An object that defines the values to use for message variables in the template. This object is a set of key-value pairs. Each key defines a message variable in the template. The corresponding value defines the value to use for that variable.
      maxLength: 262144
    EmailTemplateMetadata:
      type: object
      properties:
        TemplateName:
          $ref: '#/components/schemas/EmailTemplateName'
          description: The name of the template.
        CreatedTimestamp:
          $ref: '#/components/schemas/Timestamp'
          description: The time and date the template was created.
      description: Contains information about an email template.
    EmailTemplateMetadataList:
      type: array
      description: A list of the EmailTemplateMetadata object.
      items:
        $ref: '#/components/schemas/EmailTemplateMetadata'
    EnabledWrapper:
      type: boolean
    Esp:
      type: string
    EventDestination:
      type: object
      required:
        - Name
        - MatchingEventTypes
      properties:
        Name:
          $ref: '#/components/schemas/EventDestinationName'
          description: A name that identifies the event destination.
        Enabled:
          $ref: '#/components/schemas/Enabled'
          description: '<p>If <code>true</code>, the event destination is enabled. When the event destination is enabled, the specified event types are sent to the destinations in this <code>EventDestinationDefinition</code>.</p> <p>If <code>false</code>, the event destination is disabled. When the event destination is disabled, events aren''t sent to the specified destinations.</p>'
        MatchingEventTypes:
          $ref: '#/components/schemas/EventTypes'
          description: The types of events that Amazon SES sends to the specified event destinations.
        KinesisFirehoseDestination:
          $ref: '#/components/schemas/KinesisFirehoseDestination'
          description: 'An object that defines an Amazon Kinesis Data Firehose destination for email events. You can use Amazon Kinesis Data Firehose to stream data to other services, such as Amazon S3 and Amazon Redshift.'
        CloudWatchDestination:
          $ref: '#/components/schemas/CloudWatchDestination'
          description: An object that defines an Amazon CloudWatch destination for email events. You can use Amazon CloudWatch to monitor and gain insights on your email sending metrics.
        SnsDestination:
          $ref: '#/components/schemas/SnsDestination'
          description: An object that defines an Amazon SNS destination for email events. You can use Amazon SNS to send notification when certain email events occur.
        PinpointDestination:
          $ref: '#/components/schemas/PinpointDestination'
          description: 'An object that defines an Amazon Pinpoint project destination for email events. You can send email event data to a Amazon Pinpoint project to view metrics using the Transactional Messaging dashboards that are built in to Amazon Pinpoint. For more information, see <a href="https://docs.aws.amazon.com/pinpoint/latest/userguide/analytics-transactional-messages.html">Transactional Messaging Charts</a> in the <i>Amazon Pinpoint User Guide</i>.'
      description: 'In the Amazon SES API v2, <i>events</i> include message sends, deliveries, opens, clicks, bounces, complaints and delivery delays. <i>Event destinations</i> are places that you can send information about these events to. For example, you can send event data to Amazon SNS to receive notifications when you receive bounces or complaints, or you can use Amazon Kinesis Data Firehose to stream data to Amazon S3 for long-term storage.'
    EventDestinations:
      type: array
      items:
        $ref: '#/components/schemas/EventDestination'
    EventType:
      type: string
      enum:
        - SEND
        - REJECT
        - BOUNCE
        - COMPLAINT
        - DELIVERY
        - OPEN
        - CLICK
        - RENDERING_FAILURE
        - DELIVERY_DELAY
        - SUBSCRIPTION
      description: 'An email sending event type. For example, email sends, opens, and bounces are all email events.'
    FailedRecordsCount:
      type: integer
    FailedRecordsS3Url:
      type: string
    FailureInfo:
      type: object
      properties:
        FailedRecordsS3Url:
          $ref: '#/components/schemas/FailedRecordsS3Url'
          description: An Amazon S3 presigned URL that contains all the failed records and related information.
        ErrorMessage:
          $ref: '#/components/schemas/ErrorMessage'
          description: A message about why the import job failed.
      description: An object that contains the failure details about an import job.
    FeedbackId:
      type: string
    GeneralEnforcementStatus:
      type: string
    GetAccountRequest:
      type: object
      title: GetAccountRequest
      properties: {}
      description: A request to obtain information about the email-sending capabilities of your Amazon SES account.
    SendQuota:
      type: object
      properties:
        Max24HourSend:
          $ref: '#/components/schemas/Max24HourSend'
          description: The maximum number of emails that you can send in the current AWS Region over a 24-hour period. This value is also called your <i>sending quota</i>.
        MaxSendRate:
          $ref: '#/components/schemas/MaxSendRate'
          description: The maximum number of emails that you can send per second in the current AWS Region. This value is also called your <i>maximum sending rate</i> or your <i>maximum TPS (transactions per second) rate</i>.
        SentLast24Hours:
          $ref: '#/components/schemas/SentLast24Hours'
          description: The number of emails sent from your Amazon SES account in the current AWS Region over the past 24 hours.
      description: An object that contains information about the per-day and per-second sending limits for your Amazon SES account in the current AWS Region.
    SuppressionAttributes:
      type: object
      properties:
        SuppressedReasons:
          $ref: '#/components/schemas/SuppressionListReasons'
          description: '<p>A list that contains the reasons that email addresses will be automatically added to the suppression list for your account. This list can contain any or all of the following:</p> <ul> <li> <p> <code>COMPLAINT</code> – Amazon SES adds an email address to the suppression list for your account when a message sent to that address results in a complaint.</p> </li> <li> <p> <code>BOUNCE</code> – Amazon SES adds an email address to the suppression list for your account when a message sent to that address results in a hard bounce.</p> </li> </ul>'
      description: An object that contains information about the email address suppression preferences for your account in the current AWS Region.
    GetBlacklistReportsRequest:
      type: object
      title: GetBlacklistReportsRequest
      properties: {}
      description: A request to retrieve a list of the blacklists that your dedicated IP addresses appear on.
    GetConfigurationSetEventDestinationsRequest:
      type: object
      title: GetConfigurationSetEventDestinationsRequest
      properties: {}
      description: A request to obtain information about the event destinations for a configuration set.
    GetConfigurationSetRequest:
      type: object
      title: GetConfigurationSetRequest
      properties: {}
      description: A request to obtain information about a configuration set.
    GetContactListRequest:
      type: object
      title: GetContactListRequest
      properties: {}
    GetContactRequest:
      type: object
      title: GetContactRequest
      properties: {}
    GetCustomVerificationEmailTemplateRequest:
      type: object
      title: GetCustomVerificationEmailTemplateRequest
      properties: {}
      description: Represents a request to retrieve an existing custom verification email template.
    GetDedicatedIpRequest:
      type: object
      title: GetDedicatedIpRequest
      properties: {}
      description: A request to obtain more information about a dedicated IP address.
    NextToken:
      type: string
    MaxItems:
      type: integer
    GetDedicatedIpsRequest:
      type: object
      title: GetDedicatedIpsRequest
      properties: {}
      description: A request to obtain more information about dedicated IP pools.
    GetDeliverabilityDashboardOptionsRequest:
      type: object
      title: GetDeliverabilityDashboardOptionsRequest
      properties: {}
      description: '<p>Retrieve information about the status of the Deliverability dashboard for your AWS account. When the Deliverability dashboard is enabled, you gain access to reputation, deliverability, and other metrics for your domains. You also gain the ability to perform predictive inbox placement tests.</p> <p>When you use the Deliverability dashboard, you pay a monthly subscription charge, in addition to any other fees that you accrue by using Amazon SES and other AWS services. For more information about the features and cost of a Deliverability dashboard subscription, see <a href="http://aws.amazon.com/pinpoint/pricing/">Amazon Pinpoint Pricing</a>.</p>'
    GetDeliverabilityTestReportRequest:
      type: object
      title: GetDeliverabilityTestReportRequest
      properties: {}
      description: A request to retrieve the results of a predictive inbox placement test.
    PlacementStatistics:
      type: object
      properties:
        InboxPercentage:
          $ref: '#/components/schemas/Percentage'
          description: The percentage of emails that arrived in recipients' inboxes during the predictive inbox placement test.
        SpamPercentage:
          $ref: '#/components/schemas/Percentage'
          description: The percentage of emails that arrived in recipients' spam or junk mail folders during the predictive inbox placement test.
        MissingPercentage:
          $ref: '#/components/schemas/Percentage'
          description: The percentage of emails that didn't arrive in recipients' inboxes at all during the predictive inbox placement test.
        SpfPercentage:
          $ref: '#/components/schemas/Percentage'
          description: The percentage of emails that were authenticated by using Sender Policy Framework (SPF) during the predictive inbox placement test.
        DkimPercentage:
          $ref: '#/components/schemas/Percentage'
          description: The percentage of emails that were authenticated by using DomainKeys Identified Mail (DKIM) during the predictive inbox placement test.
      description: An object that contains inbox placement data for an email provider.
    IspPlacements:
      type: array
      items:
        $ref: '#/components/schemas/IspPlacement'
    MessageContent:
      type: string
      description: The body of an email message.
    GetDomainDeliverabilityCampaignRequest:
      type: object
      title: GetDomainDeliverabilityCampaignRequest
      properties: {}
      description: Retrieve all the deliverability data for a specific campaign. This data is available for a campaign only if the campaign sent email by using a domain that the Deliverability dashboard is enabled for (<code>PutDeliverabilityDashboardOption</code> operation).
    GetDomainStatisticsReportRequest:
      type: object
      title: GetDomainStatisticsReportRequest
      properties: {}
      description: A request to obtain deliverability metrics for a domain.
    OverallVolume:
      type: object
      properties:
        VolumeStatistics:
          $ref: '#/components/schemas/VolumeStatistics'
          description: An object that contains information about the numbers of messages that arrived in recipients' inboxes and junk mail folders.
        ReadRatePercent:
          $ref: '#/components/schemas/Percentage'
          description: The percentage of emails that were sent from the domain that were read by their recipients.
        DomainIspPlacements:
          $ref: '#/components/schemas/DomainIspPlacements'
          description: An object that contains inbox and junk mail placement metrics for individual email providers.
      description: An object that contains information about email that was sent from the selected domain.
    GetEmailIdentityPoliciesRequest:
      type: object
      title: GetEmailIdentityPoliciesRequest
      properties: {}
      description: A request to return the policies of an email identity.
    PolicyMap:
      type: object
      description: An object that contains mapping between <code>PolicyName</code> and <code>Policy</code> text.
      additionalProperties:
        $ref: '#/components/schemas/Policy'
    GetEmailIdentityRequest:
      type: object
      title: GetEmailIdentityRequest
      properties: {}
      description: A request to return details about an email identity.
    MailFromAttributes:
      type: object
      required:
        - MailFromDomain
        - MailFromDomainStatus
        - BehaviorOnMxFailure
      properties:
        MailFromDomain:
          $ref: '#/components/schemas/MailFromDomainName'
          description: The name of a domain that an email identity uses as a custom MAIL FROM domain.
        MailFromDomainStatus:
          $ref: '#/components/schemas/MailFromDomainStatus'
          description: '<p>The status of the MAIL FROM domain. This status can have the following values:</p> <ul> <li> <p> <code>PENDING</code> – Amazon SES hasn''t started searching for the MX record yet.</p> </li> <li> <p> <code>SUCCESS</code> – Amazon SES detected the required MX record for the MAIL FROM domain.</p> </li> <li> <p> <code>FAILED</code> – Amazon SES can''t find the required MX record, or the record no longer exists.</p> </li> <li> <p> <code>TEMPORARY_FAILURE</code> – A temporary issue occurred, which prevented Amazon SES from determining the status of the MAIL FROM domain.</p> </li> </ul>'
        BehaviorOnMxFailure:
          $ref: '#/components/schemas/BehaviorOnMxFailure'
          description: '<p>The action that you want to take if the required MX record can''t be found when you send an email. When you set this value to <code>UseDefaultValue</code>, the mail is sent using <i>amazonses.com</i> as the MAIL FROM domain. When you set this value to <code>RejectMessage</code>, the Amazon SES API v2 returns a <code>MailFromDomainNotVerified</code> error, and doesn''t attempt to deliver the email.</p> <p>These behaviors are taken when the custom MAIL FROM domain configuration is in the <code>Pending</code>, <code>Failed</code>, and <code>TemporaryFailure</code> states.</p>'
      description: A list of attributes that are associated with a MAIL FROM domain.
    GetEmailTemplateRequest:
      type: object
      title: GetEmailTemplateRequest
      properties: {}
      description: 'Represents a request to display the template object (which includes the subject line, HTML part and text part) for the template you specify.'
    GetImportJobRequest:
      type: object
      title: GetImportJobRequest
      properties: {}
      description: Represents a request for information about an import job using the import job ID.
    JobStatus:
      type: string
      enum:
        - CREATED
        - PROCESSING
        - COMPLETED
        - FAILED
      description: The status of the import job.
    ProcessedRecordsCount:
      type: integer
    GetSuppressedDestinationRequest:
      type: object
      title: GetSuppressedDestinationRequest
      properties: {}
      description: A request to retrieve information about an email address that's on the suppression list for your account.
    SuppressedDestination:
      type: object
      required:
        - EmailAddress
        - Reason
        - LastUpdateTime
      properties:
        EmailAddress:
          $ref: '#/components/schemas/EmailAddress'
          description: The email address that is on the suppression list for your account.
        Reason:
          $ref: '#/components/schemas/SuppressionListReason'
          description: The reason that the address was added to the suppression list for your account.
        LastUpdateTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time when the suppressed destination was last updated, shown in Unix time format.'
        Attributes:
          $ref: '#/components/schemas/SuppressedDestinationAttributes'
          description: An optional value that can contain additional information about the reasons that the address was added to the suppression list for your account.
      description: An object that contains information about an email address that is on the suppression list for your account.
    IdentityInfo:
      type: object
      properties:
        IdentityType:
          $ref: '#/components/schemas/IdentityType'
          description: '<p>The email identity type. The identity type can be one of the following:</p> <ul> <li> <p> <code>EMAIL_ADDRESS</code> – The identity is an email address.</p> </li> <li> <p> <code>DOMAIN</code> – The identity is a domain.</p> </li> <li> <p> <code>MANAGED_DOMAIN</code> – The identity is a domain that is managed by AWS.</p> </li> </ul>'
        IdentityName:
          $ref: '#/components/schemas/Identity'
          description: The address or domain of the identity.
        SendingEnabled:
          $ref: '#/components/schemas/Enabled'
          description: '<p>Indicates whether or not you can send email from the identity.</p> <p>An <i>identity</i> is an email address or domain that you send email from. Before you can send email from an identity, you have to demostrate that you own the identity, and that you authorize Amazon SES to send email from that identity.</p>'
      description: Information about an email identity.
    IdentityInfoList:
      type: array
      items:
        $ref: '#/components/schemas/IdentityInfo'
    ImportDestinationType:
      type: string
      enum:
        - SUPPRESSION_LIST
        - CONTACT_LIST
      description: 'The destination of the import job, which can be used to list import jobs that have a certain <code>ImportDestinationType</code>.'
    ImportJobSummary:
      type: object
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
        ImportDestination:
          $ref: '#/components/schemas/ImportDestination'
        JobStatus:
          $ref: '#/components/schemas/JobStatus'
        CreatedTimestamp:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time when the import job was created.
      description: A summary of the import job.
    ImportJobSummaryList:
      type: array
      description: A list of the import job summaries.
      items:
        $ref: '#/components/schemas/ImportJobSummary'
    IspNameList:
      type: array
      items:
        $ref: '#/components/schemas/IspName'
    IspPlacement:
      type: object
      properties:
        IspName:
          $ref: '#/components/schemas/IspName'
          description: The name of the email provider that the inbox placement data applies to.
        PlacementStatistics:
          $ref: '#/components/schemas/PlacementStatistics'
          description: An object that contains inbox placement metrics for a specific email provider.
      description: An object that describes how email sent during the predictive inbox placement test was handled by a certain email provider.
    ListConfigurationSetsRequest:
      type: object
      title: ListConfigurationSetsRequest
      properties: {}
      description: A request to obtain a list of configuration sets for your Amazon SES account in the current AWS Region.
    ListContactListsRequest:
      type: object
      title: ListContactListsRequest
      properties: {}
    ListOfContactLists:
      type: array
      items:
        $ref: '#/components/schemas/ContactList'
    ListContactsFilter:
      type: object
      properties:
        FilteredStatus:
          $ref: '#/components/schemas/SubscriptionStatus'
          description: 'The status by which you are filtering: <code>OPT_IN</code> or <code>OPT_OUT</code>.'
        TopicFilter:
          $ref: '#/components/schemas/TopicFilter'
          description: Used for filtering by a specific topic preference.
      description: A filter that can be applied to a list of contacts.
    ListContactsRequest:
      type: object
      title: ListContactsRequest
      properties:
        Filter:
          $ref: '#/components/schemas/ListContactsFilter'
          description: A filter that can be applied to a list of contacts.
    ListOfContacts:
      type: array
      items:
        $ref: '#/components/schemas/Contact'
    ListCustomVerificationEmailTemplatesRequest:
      type: object
      title: ListCustomVerificationEmailTemplatesRequest
      properties: {}
      description: Represents a request to list the existing custom verification email templates for your account.
    ListDedicatedIpPoolsRequest:
      type: object
      title: ListDedicatedIpPoolsRequest
      properties: {}
      description: A request to obtain a list of dedicated IP pools.
    ListOfDedicatedIpPools:
      type: array
      description: A list of dedicated IP pools that are associated with your AWS account.
      items:
        $ref: '#/components/schemas/PoolName'
    ListDeliverabilityTestReportsRequest:
      type: object
      title: ListDeliverabilityTestReportsRequest
      properties: {}
      description: A request to list all of the predictive inbox placement tests that you've performed.
    ListDomainDeliverabilityCampaignsRequest:
      type: object
      title: ListDomainDeliverabilityCampaignsRequest
      properties: {}
      description: Retrieve deliverability data for all the campaigns that used a specific domain to send email during a specified time range. This data is available for a domain only if you enabled the Deliverability dashboard.
    ListEmailIdentitiesRequest:
      type: object
      title: ListEmailIdentitiesRequest
      properties: {}
      description: 'A request to list all of the email identities associated with your AWS account. This list includes identities that you''ve already verified, identities that are unverified, and identities that were verified in the past, but are no longer verified.'
    ListEmailTemplatesRequest:
      type: object
      title: ListEmailTemplatesRequest
      properties: {}
      description: 'Represents a request to list the email templates present in your Amazon SES account in the current AWS Region. For more information, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html">Amazon SES Developer Guide</a>.'
    ListImportJobsRequest:
      type: object
      title: ListImportJobsRequest
      properties:
        ImportDestinationType:
          $ref: '#/components/schemas/ImportDestinationType'
          description: 'The destination of the import job, which can be used to list import jobs that have a certain <code>ImportDestinationType</code>.'
      description: Represents a request to list all of the import jobs for a data destination within the specified maximum number of import jobs.
    ListManagementOptions:
      type: object
      required:
        - ContactListName
      properties:
        ContactListName:
          $ref: '#/components/schemas/ContactListName'
          description: The name of the contact list.
        TopicName:
          $ref: '#/components/schemas/TopicName'
          description: The name of the topic.
      description: 'An object used to specify a list or topic to which an email belongs, which will be used when a contact chooses to unsubscribe.'
    ListSuppressedDestinationsRequest:
      type: object
      title: ListSuppressedDestinationsRequest
      properties: {}
      description: A request to obtain a list of email destinations that are on the suppression list for your account.
    SuppressedDestinationSummaries:
      type: array
      items:
        $ref: '#/components/schemas/SuppressedDestinationSummary'
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
    MailFromDomainName:
      type: string
      description: The domain that you want to use as a MAIL FROM domain.
    MailFromDomainStatus:
      type: string
      enum:
        - PENDING
        - SUCCESS
        - FAILED
        - TEMPORARY_FAILURE
      description: '<p>The status of the MAIL FROM domain. This status can have the following values:</p> <ul> <li> <p> <code>PENDING</code> – Amazon SES hasn''t started searching for the MX record yet.</p> </li> <li> <p> <code>SUCCESS</code> – Amazon SES detected the required MX record for the MAIL FROM domain.</p> </li> <li> <p> <code>FAILED</code> – Amazon SES can''t find the required MX record, or the record no longer exists.</p> </li> <li> <p> <code>TEMPORARY_FAILURE</code> – A temporary issue occurred, which prevented Amazon SES from determining the status of the MAIL FROM domain.</p> </li> </ul>'
    Max24HourSend:
      type: number
      format: double
    MaxSendRate:
      type: number
      format: double
    MessageTagName:
      type: string
      description: '<p>The name of the message tag. The message tag name has to meet the following criteria:</p> <ul> <li> <p>It can only contain ASCII letters (a–z, A–Z), numbers (0–9), underscores (_), or dashes (-).</p> </li> <li> <p>It can contain no more than 256 characters.</p> </li> </ul>'
    MessageTagValue:
      type: string
      description: '<p>The value of the message tag. The message tag value has to meet the following criteria:</p> <ul> <li> <p>It can only contain ASCII letters (a–z, A–Z), numbers (0–9), underscores (_), or dashes (-).</p> </li> <li> <p>It can contain no more than 256 characters.</p> </li> </ul>'
    PutAccountDedicatedIpWarmupAttributesRequest:
      type: object
      title: PutAccountDedicatedIpWarmupAttributesRequest
      properties:
        AutoWarmupEnabled:
          $ref: '#/components/schemas/Enabled'
          description: 'Enables or disables the automatic warm-up feature for dedicated IP addresses that are associated with your Amazon SES account in the current AWS Region. Set to <code>true</code> to enable the automatic warm-up feature, or set to <code>false</code> to disable it.'
      description: A request to enable or disable the automatic IP address warm-up feature.
    PutAccountDetailsRequest:
      type: object
      required:
        - MailType
        - WebsiteURL
        - UseCaseDescription
      title: PutAccountDetailsRequest
      properties:
        MailType:
          $ref: '#/components/schemas/MailType'
          description: The type of email your account will send.
        WebsiteURL:
          $ref: '#/components/schemas/WebsiteURL'
          description: The URL of your website. This information helps us better understand the type of content that you plan to send.
        ContactLanguage:
          $ref: '#/components/schemas/ContactLanguage'
          description: The language you would prefer to be contacted with.
        UseCaseDescription:
          $ref: '#/components/schemas/UseCaseDescription'
          description: A description of the types of email that you plan to send.
        AdditionalContactEmailAddresses:
          $ref: '#/components/schemas/AdditionalContactEmailAddresses'
          description: Additional email addresses that you would like to be notified regarding Amazon SES matters.
        ProductionAccessEnabled:
          $ref: '#/components/schemas/EnabledWrapper'
          description: '<p>Indicates whether or not your account should have production access in the current AWS Region.</p> <p>If the value is <code>false</code>, then your account is in the <i>sandbox</i>. When your account is in the sandbox, you can only send email to verified identities. Additionally, the maximum number of emails you can send in a 24-hour period (your sending quota) is 200, and the maximum number of emails you can send per second (your maximum sending rate) is 1.</p> <p>If the value is <code>true</code>, then your account has production access. When your account has production access, you can send email to any address. The sending quota and maximum sending rate for your account vary based on your specific use case.</p>'
      description: A request to submit new account details.
    PutAccountSendingAttributesRequest:
      type: object
      title: PutAccountSendingAttributesRequest
      properties:
        SendingEnabled:
          $ref: '#/components/schemas/Enabled'
          description: '<p>Enables or disables your account''s ability to send email. Set to <code>true</code> to enable email sending, or set to <code>false</code> to disable email sending.</p> <note> <p>If AWS paused your account''s ability to send email, you can''t use this operation to resume your account''s ability to send email.</p> </note>'
      description: A request to change the ability of your account to send email.
    PutAccountSuppressionAttributesRequest:
      type: object
      title: PutAccountSuppressionAttributesRequest
      properties:
        SuppressedReasons:
          $ref: '#/components/schemas/SuppressionListReasons'
          description: '<p>A list that contains the reasons that email addresses will be automatically added to the suppression list for your account. This list can contain any or all of the following:</p> <ul> <li> <p> <code>COMPLAINT</code> – Amazon SES adds an email address to the suppression list for your account when a message sent to that address results in a complaint.</p> </li> <li> <p> <code>BOUNCE</code> – Amazon SES adds an email address to the suppression list for your account when a message sent to that address results in a hard bounce.</p> </li> </ul>'
      description: A request to change your account's suppression preferences.
    SendingPoolName:
      type: string
      description: The name of the dedicated IP pool that you want to associate with the configuration set.
    PutConfigurationSetDeliveryOptionsRequest:
      type: object
      title: PutConfigurationSetDeliveryOptionsRequest
      properties:
        TlsPolicy:
          $ref: '#/components/schemas/TlsPolicy'
          description: 'Specifies whether messages that use the configuration set are required to use Transport Layer Security (TLS). If the value is <code>Require</code>, messages are only delivered if a TLS connection can be established. If the value is <code>Optional</code>, messages can be delivered in plain text if a TLS connection can''t be established.'
        SendingPoolName:
          $ref: '#/components/schemas/SendingPoolName'
          description: The name of the dedicated IP pool that you want to associate with the configuration set.
      description: A request to associate a configuration set with a dedicated IP pool.
    PutConfigurationSetReputationOptionsRequest:
      type: object
      title: PutConfigurationSetReputationOptionsRequest
      properties:
        ReputationMetricsEnabled:
          $ref: '#/components/schemas/Enabled'
          description: 'If <code>true</code>, tracking of reputation metrics is enabled for the configuration set. If <code>false</code>, tracking of reputation metrics is disabled for the configuration set.'
      description: A request to enable or disable tracking of reputation metrics for a configuration set.
    PutConfigurationSetSendingOptionsRequest:
      type: object
      title: PutConfigurationSetSendingOptionsRequest
      properties:
        SendingEnabled:
          $ref: '#/components/schemas/Enabled'
          description: 'If <code>true</code>, email sending is enabled for the configuration set. If <code>false</code>, email sending is disabled for the configuration set.'
      description: A request to enable or disable the ability of Amazon SES to send emails that use a specific configuration set.
    PutConfigurationSetSuppressionOptionsRequest:
      type: object
      title: PutConfigurationSetSuppressionOptionsRequest
      properties:
        SuppressedReasons:
          $ref: '#/components/schemas/SuppressionListReasons'
          description: '<p>A list that contains the reasons that email addresses are automatically added to the suppression list for your account. This list can contain any or all of the following:</p> <ul> <li> <p> <code>COMPLAINT</code> – Amazon SES adds an email address to the suppression list for your account when a message sent to that address results in a complaint.</p> </li> <li> <p> <code>BOUNCE</code> – Amazon SES adds an email address to the suppression list for your account when a message sent to that address results in a hard bounce.</p> </li> </ul>'
      description: A request to change the account suppression list preferences for a specific configuration set.
    PutConfigurationSetTrackingOptionsRequest:
      type: object
      title: PutConfigurationSetTrackingOptionsRequest
      properties:
        CustomRedirectDomain:
          $ref: '#/components/schemas/CustomRedirectDomain'
          description: The domain that you want to use to track open and click events.
      description: A request to add a custom domain for tracking open and click events to a configuration set.
    PutDedicatedIpInPoolRequest:
      type: object
      required:
        - DestinationPoolName
      title: PutDedicatedIpInPoolRequest
      properties:
        DestinationPoolName:
          $ref: '#/components/schemas/PoolName'
          description: The name of the IP pool that you want to add the dedicated IP address to. You have to specify an IP pool that already exists.
      description: A request to move a dedicated IP address to a dedicated IP pool.
    PutDedicatedIpWarmupAttributesRequest:
      type: object
      required:
        - WarmupPercentage
      title: PutDedicatedIpWarmupAttributesRequest
      properties:
        WarmupPercentage:
          $ref: '#/components/schemas/Percentage100Wrapper'
          description: The warm-up percentage that you want to associate with the dedicated IP address.
      description: A request to change the warm-up attributes for a dedicated IP address. This operation is useful when you want to resume the warm-up process for an existing IP address.
    PutDeliverabilityDashboardOptionRequest:
      type: object
      required:
        - DashboardEnabled
      title: PutDeliverabilityDashboardOptionRequest
      properties:
        DashboardEnabled:
          $ref: '#/components/schemas/Enabled'
          description: 'Specifies whether to enable the Deliverability dashboard. To enable the dashboard, set this value to <code>true</code>.'
        SubscribedDomains:
          $ref: '#/components/schemas/DomainDeliverabilityTrackingOptions'
          description: 'An array of objects, one for each verified domain that you use to send email and enabled the Deliverability dashboard for.'
      description: '<p>Enable or disable the Deliverability dashboard. When you enable the Deliverability dashboard, you gain access to reputation, deliverability, and other metrics for the domains that you use to send email using Amazon SES API v2. You also gain the ability to perform predictive inbox placement tests.</p> <p>When you use the Deliverability dashboard, you pay a monthly subscription charge, in addition to any other fees that you accrue by using Amazon SES and other AWS services. For more information about the features and cost of a Deliverability dashboard subscription, see <a href="http://aws.amazon.com/pinpoint/pricing/">Amazon Pinpoint Pricing</a>.</p>'
    PutEmailIdentityConfigurationSetAttributesRequest:
      type: object
      title: PutEmailIdentityConfigurationSetAttributesRequest
      properties:
        ConfigurationSetName:
          $ref: '#/components/schemas/ConfigurationSetName'
          description: The configuration set that you want to associate with an email identity.
      description: A request to associate a configuration set with an email identity.
    PutEmailIdentityDkimAttributesRequest:
      type: object
      title: PutEmailIdentityDkimAttributesRequest
      properties:
        SigningEnabled:
          $ref: '#/components/schemas/Enabled'
          description: '<p>Sets the DKIM signing configuration for the identity.</p> <p>When you set this value <code>true</code>, then the messages that are sent from the identity are signed using DKIM. If you set this value to <code>false</code>, your messages are sent without DKIM signing.</p>'
      description: A request to enable or disable DKIM signing of email that you send from an email identity.
    PutEmailIdentityDkimSigningAttributesRequest:
      type: object
      required:
        - SigningAttributesOrigin
      title: PutEmailIdentityDkimSigningAttributesRequest
      properties:
        SigningAttributesOrigin:
          $ref: '#/components/schemas/DkimSigningAttributesOrigin'
          description: '<p>The method that you want to use to configure DKIM for the identity. There are two possible values:</p> <ul> <li> <p> <code>AWS_SES</code> – Configure DKIM for the identity by using <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">Easy DKIM</a>.</p> </li> <li> <p> <code>EXTERNAL</code> – Configure DKIM for the identity by using Bring Your Own DKIM (BYODKIM).</p> </li> </ul>'
        SigningAttributes:
          $ref: '#/components/schemas/DkimSigningAttributes'
          description: An object that contains information about the private key and selector that you want to use to configure DKIM for the identity. This object is only required if you want to configure Bring Your Own DKIM (BYODKIM) for the identity.
      description: A request to change the DKIM attributes for an email identity.
    PutEmailIdentityFeedbackAttributesRequest:
      type: object
      title: PutEmailIdentityFeedbackAttributesRequest
      properties:
        EmailForwardingEnabled:
          $ref: '#/components/schemas/Enabled'
          description: '<p>Sets the feedback forwarding configuration for the identity.</p> <p>If the value is <code>true</code>, you receive email notifications when bounce or complaint events occur. These notifications are sent to the address that you specified in the <code>Return-Path</code> header of the original email.</p> <p>You''re required to have a method of tracking bounces and complaints. If you haven''t set up another mechanism for receiving bounce or complaint notifications (for example, by setting up an event destination), you receive an email notification when these events occur (even if this setting is disabled).</p>'
      description: A request to set the attributes that control how bounce and complaint events are processed.
    PutEmailIdentityMailFromAttributesRequest:
      type: object
      title: PutEmailIdentityMailFromAttributesRequest
      properties:
        MailFromDomain:
          $ref: '#/components/schemas/MailFromDomainName'
          description: '<p> The custom MAIL FROM domain that you want the verified identity to use. The MAIL FROM domain must meet the following criteria:</p> <ul> <li> <p>It has to be a subdomain of the verified identity.</p> </li> <li> <p>It can''t be used to receive email.</p> </li> <li> <p>It can''t be used in a "From" address if the MAIL FROM domain is a destination for feedback forwarding emails.</p> </li> </ul>'
        BehaviorOnMxFailure:
          $ref: '#/components/schemas/BehaviorOnMxFailure'
          description: '<p>The action that you want to take if the required MX record isn''t found when you send an email. When you set this value to <code>UseDefaultValue</code>, the mail is sent using <i>amazonses.com</i> as the MAIL FROM domain. When you set this value to <code>RejectMessage</code>, the Amazon SES API v2 returns a <code>MailFromDomainNotVerified</code> error, and doesn''t attempt to deliver the email.</p> <p>These behaviors are taken when the custom MAIL FROM domain configuration is in the <code>Pending</code>, <code>Failed</code>, and <code>TemporaryFailure</code> states.</p>'
      description: A request to configure the custom MAIL FROM domain for a verified identity.
    PutSuppressedDestinationRequest:
      type: object
      required:
        - EmailAddress
        - Reason
      title: PutSuppressedDestinationRequest
      properties:
        EmailAddress:
          $ref: '#/components/schemas/EmailAddress'
          description: The email address that should be added to the suppression list for your account.
        Reason:
          $ref: '#/components/schemas/SuppressionListReason'
          description: The factors that should cause the email address to be added to the suppression list for your account.
      description: A request to add an email destination to the suppression list for your account.
    RawMessageData:
      type: string
      description: '<p>The raw email message. The message has to meet the following criteria:</p> <ul> <li> <p>The message has to contain a header and a body, separated by one blank line.</p> </li> <li> <p>All of the required header fields must be present in the message.</p> </li> <li> <p>Each part of a multipart MIME message must be formatted properly.</p> </li> <li> <p>Attachments must be in a file format that the Amazon SES API v2 supports. </p> </li> <li> <p>The entire message must be Base64 encoded.</p> </li> <li> <p>If any of the MIME parts in your message contain content that is outside of the 7-bit ASCII character range, you should encode that content to ensure that recipients'' email clients render the message properly.</p> </li> <li> <p>The length of any single line of text in the message can''t exceed 1,000 characters. This restriction is defined in <a href="https://tools.ietf.org/html/rfc5321">RFC 5321</a>.</p> </li> </ul>'
    RenderedEmailTemplate:
      type: string
      description: The complete MIME message rendered by applying the data in the TemplateData parameter to the template specified in the TemplateName parameter.
    ReplacementTemplate:
      type: object
      properties:
        ReplacementTemplateData:
          $ref: '#/components/schemas/EmailTemplateData'
          description: 'A list of replacement values to apply to the template. This parameter is a JSON object, typically consisting of key-value pairs in which the keys correspond to replacement tags in the email template.'
      description: An object which contains <code>ReplacementTemplateData</code> to be used for a specific <code>BulkEmailEntry</code>.
    ReviewStatus:
      type: string
      enum:
        - PENDING
        - FAILED
        - GRANTED
        - DENIED
    SendBulkEmailRequest:
      type: object
      required:
        - DefaultContent
        - BulkEmailEntries
      title: SendBulkEmailRequest
      properties:
        FromEmailAddress:
          $ref: '#/components/schemas/EmailAddress'
          description: The email address that you want to use as the "From" address for the email. The address that you specify has to be verified.
        FromEmailAddressIdentityArn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: '<p>This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to use the email address specified in the <code>FromEmailAddress</code> parameter.</p> <p>For example, if the owner of example.com (which has ARN arn:aws:ses:us-east-1:123456789012:identity/example.com) attaches a policy to it that authorizes you to use sender@example.com, then you would specify the <code>FromEmailAddressIdentityArn</code> to be arn:aws:ses:us-east-1:123456789012:identity/example.com, and the <code>FromEmailAddress</code> to be sender@example.com.</p> <p>For more information about sending authorization, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer Guide</a>.</p>'
        ReplyToAddresses:
          $ref: '#/components/schemas/EmailAddressList'
          description: 'The "Reply-to" email addresses for the message. When the recipient replies to the message, each Reply-to address receives the reply.'
        FeedbackForwardingEmailAddress:
          $ref: '#/components/schemas/EmailAddress'
          description: The address that you want bounce and complaint notifications to be sent to.
        FeedbackForwardingEmailAddressIdentityArn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: '<p>This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to use the email address specified in the <code>FeedbackForwardingEmailAddress</code> parameter.</p> <p>For example, if the owner of example.com (which has ARN arn:aws:ses:us-east-1:123456789012:identity/example.com) attaches a policy to it that authorizes you to use feedback@example.com, then you would specify the <code>FeedbackForwardingEmailAddressIdentityArn</code> to be arn:aws:ses:us-east-1:123456789012:identity/example.com, and the <code>FeedbackForwardingEmailAddress</code> to be feedback@example.com.</p> <p>For more information about sending authorization, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer Guide</a>.</p>'
        DefaultEmailTags:
          $ref: '#/components/schemas/MessageTagList'
          description: 'A list of tags, in the form of name/value pairs, to apply to an email that you send using the <code>SendEmail</code> operation. Tags correspond to characteristics of the email that you define, so that you can publish email sending events.'
        DefaultContent:
          $ref: '#/components/schemas/BulkEmailContent'
          description: An object that contains the body of the message. You can specify a template message.
        BulkEmailEntries:
          $ref: '#/components/schemas/BulkEmailEntryList'
          description: The list of bulk email entry objects.
        ConfigurationSetName:
          $ref: '#/components/schemas/ConfigurationSetName'
          description: The name of the configuration set that you want to use when sending the email.
      description: 'Represents a request to send email messages to multiple destinations using Amazon SES. For more information, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html">Amazon SES Developer Guide</a>.'
    SendCustomVerificationEmailRequest:
      type: object
      required:
        - EmailAddress
        - TemplateName
      title: SendCustomVerificationEmailRequest
      properties:
        EmailAddress:
          $ref: '#/components/schemas/EmailAddress'
          description: The email address to verify.
        TemplateName:
          $ref: '#/components/schemas/EmailTemplateName'
          description: The name of the custom verification email template to use when sending the verification email.
        ConfigurationSetName:
          $ref: '#/components/schemas/ConfigurationSetName'
          description: Name of a configuration set to use when sending the verification email.
      description: Represents a request to send a custom verification email to a specified recipient.
    SendEmailRequest:
      type: object
      required:
        - Content
      title: SendEmailRequest
      properties:
        FromEmailAddress:
          $ref: '#/components/schemas/EmailAddress'
          description: 'The email address that you want to use as the "From" address for the email. The address that you specify has to be verified. '
        FromEmailAddressIdentityArn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: '<p>This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to use the email address specified in the <code>FromEmailAddress</code> parameter.</p> <p>For example, if the owner of example.com (which has ARN arn:aws:ses:us-east-1:123456789012:identity/example.com) attaches a policy to it that authorizes you to use sender@example.com, then you would specify the <code>FromEmailAddressIdentityArn</code> to be arn:aws:ses:us-east-1:123456789012:identity/example.com, and the <code>FromEmailAddress</code> to be sender@example.com.</p> <p>For more information about sending authorization, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer Guide</a>.</p> <p>For Raw emails, the <code>FromEmailAddressIdentityArn</code> value overrides the X-SES-SOURCE-ARN and X-SES-FROM-ARN headers specified in raw email message content.</p>'
        Destination:
          $ref: '#/components/schemas/Destination'
          description: An object that contains the recipients of the email message.
        ReplyToAddresses:
          $ref: '#/components/schemas/EmailAddressList'
          description: 'The "Reply-to" email addresses for the message. When the recipient replies to the message, each Reply-to address receives the reply.'
        FeedbackForwardingEmailAddress:
          $ref: '#/components/schemas/EmailAddress'
          description: The address that you want bounce and complaint notifications to be sent to.
        FeedbackForwardingEmailAddressIdentityArn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: '<p>This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to use the email address specified in the <code>FeedbackForwardingEmailAddress</code> parameter.</p> <p>For example, if the owner of example.com (which has ARN arn:aws:ses:us-east-1:123456789012:identity/example.com) attaches a policy to it that authorizes you to use feedback@example.com, then you would specify the <code>FeedbackForwardingEmailAddressIdentityArn</code> to be arn:aws:ses:us-east-1:123456789012:identity/example.com, and the <code>FeedbackForwardingEmailAddress</code> to be feedback@example.com.</p> <p>For more information about sending authorization, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer Guide</a>.</p>'
        Content:
          $ref: '#/components/schemas/EmailContent'
          description: An object that contains the body of the message. You can send either a Simple message Raw message or a template Message.
        EmailTags:
          $ref: '#/components/schemas/MessageTagList'
          description: 'A list of tags, in the form of name/value pairs, to apply to an email that you send using the <code>SendEmail</code> operation. Tags correspond to characteristics of the email that you define, so that you can publish email sending events. '
        ConfigurationSetName:
          $ref: '#/components/schemas/ConfigurationSetName'
          description: The name of the configuration set that you want to use when sending the email.
        ListManagementOptions:
          $ref: '#/components/schemas/ListManagementOptions'
          description: 'An object used to specify a list or topic to which an email belongs, which will be used when a contact chooses to unsubscribe.'
      description: 'Represents a request to send a single formatted email using Amazon SES. For more information, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-formatted.html">Amazon SES Developer Guide</a>.'
    SentLast24Hours:
      type: number
      format: double
    SuppressedDestinationAttributes:
      type: object
      properties:
        MessageId:
          $ref: '#/components/schemas/OutboundMessageId'
          description: The unique identifier of the email message that caused the email address to be added to the suppression list for your account.
        FeedbackId:
          $ref: '#/components/schemas/FeedbackId'
          description: A unique identifier that's generated when an email address is added to the suppression list for your account.
      description: An object that contains additional attributes that are related an email address that is on the suppression list for your account.
    SuppressedDestinationSummary:
      type: object
      required:
        - EmailAddress
        - Reason
        - LastUpdateTime
      properties:
        EmailAddress:
          $ref: '#/components/schemas/EmailAddress'
          description: The email address that's on the suppression list for your account.
        Reason:
          $ref: '#/components/schemas/SuppressionListReason'
          description: The reason that the address was added to the suppression list for your account.
        LastUpdateTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time when the suppressed destination was last updated, shown in Unix time format.'
      description: A summary that describes the suppressed email address.
    SuppressionListImportAction:
      type: string
      enum:
        - DELETE
        - PUT
      description: '<p>The type of action that you want to perform on the address. Acceptable values:</p> <ul> <li> <p>PUT: add the addresses to the suppression list.</p> </li> <li> <p>DELETE: remove the address from the suppression list.</p> </li> </ul>'
    TagValue:
      type: string
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagResourceRequest:
      type: object
      required:
        - ResourceArn
        - Tags
      title: TagResourceRequest
      properties:
        ResourceArn:
          $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the resource that you want to add one or more tags to.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A list of the tags that you want to add to the resource. A tag consists of a required tag key (<code>Key</code>) and an associated tag value (<code>Value</code>). The maximum length of a tag key is 128 characters. The maximum length of a tag value is 256 characters.
    TestRenderEmailTemplateRequest:
      type: object
      required:
        - TemplateData
      title: TestRenderEmailTemplateRequest
      properties:
        TemplateData:
          $ref: '#/components/schemas/EmailTemplateData'
          description: 'A list of replacement values to apply to the template. This parameter is a JSON object, typically consisting of key-value pairs in which the keys correspond to replacement tags in the email template.'
      description: '&gt;Represents a request to create a preview of the MIME content of an email when provided with a template and a set of replacement data.'
    UseDefaultIfPreferenceUnavailable:
      type: boolean
    UntagResourceRequest:
      type: object
      title: UntagResourceRequest
      properties: {}
    UpdateConfigurationSetEventDestinationRequest:
      type: object
      required:
        - EventDestination
      title: UpdateConfigurationSetEventDestinationRequest
      properties:
        EventDestination:
          $ref: '#/components/schemas/EventDestinationDefinition'
          description: An object that defines the event destination.
      description: A request to change the settings for an event destination for a configuration set.
    UpdateContactListRequest:
      type: object
      title: UpdateContactListRequest
      properties:
        Topics:
          $ref: '#/components/schemas/Topics'
          description: 'An interest group, theme, or label within a list. A contact list can have multiple topics.'
        Description:
          $ref: '#/components/schemas/Description'
          description: A description of what the contact list is about.
    UpdateContactRequest:
      type: object
      title: UpdateContactRequest
      properties:
        TopicPreferences:
          $ref: '#/components/schemas/TopicPreferenceList'
          description: The contact's preference for being opted-in to or opted-out of a topic.
        UnsubscribeAll:
          $ref: '#/components/schemas/UnsubscribeAll'
          description: A boolean value status noting if the contact is unsubscribed from all contact list topics.
        AttributesData:
          $ref: '#/components/schemas/AttributesData'
          description: The attribute data attached to a contact.
    UpdateCustomVerificationEmailTemplateRequest:
      type: object
      required:
        - FromEmailAddress
        - TemplateSubject
        - TemplateContent
        - SuccessRedirectionURL
        - FailureRedirectionURL
      title: UpdateCustomVerificationEmailTemplateRequest
      properties:
        FromEmailAddress:
          $ref: '#/components/schemas/EmailAddress'
          description: The email address that the custom verification email is sent from.
        TemplateSubject:
          $ref: '#/components/schemas/EmailTemplateSubject'
          description: The subject line of the custom verification email.
        TemplateContent:
          $ref: '#/components/schemas/TemplateContent'
          description: 'The content of the custom verification email. The total size of the email must be less than 10 MB. The message body may contain HTML, with some limitations. For more information, see <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-verify-address-custom.html#custom-verification-emails-faq">Custom Verification Email Frequently Asked Questions</a> in the <i>Amazon SES Developer Guide</i>.'
        SuccessRedirectionURL:
          $ref: '#/components/schemas/SuccessRedirectionURL'
          description: The URL that the recipient of the verification email is sent to if his or her address is successfully verified.
        FailureRedirectionURL:
          $ref: '#/components/schemas/FailureRedirectionURL'
          description: The URL that the recipient of the verification email is sent to if his or her address is not successfully verified.
      description: Represents a request to update an existing custom verification email template.
    UpdateEmailIdentityPolicyRequest:
      type: object
      required:
        - Policy
      title: UpdateEmailIdentityPolicyRequest
      properties:
        Policy:
          $ref: '#/components/schemas/Policy'
          description: '<p>The text of the policy in JSON format. The policy cannot exceed 4 KB.</p> <p> For information about the syntax of sending authorization policies, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization-policies.html">Amazon SES Developer Guide</a>.</p>'
      description: 'Represents a request to update a sending authorization policy for an identity. Sending authorization is an Amazon SES feature that enables you to authorize other senders to use your identities. For information, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization-identity-owner-tasks-management.html">Amazon SES Developer Guide</a>.'
    UpdateEmailTemplateRequest:
      type: object
      required:
        - TemplateContent
      title: UpdateEmailTemplateRequest
      properties:
        TemplateContent:
          $ref: '#/components/schemas/EmailTemplateContent'
          description: 'The content of the email template, composed of a subject line, an HTML part, and a text-only part.'
      description: 'Represents a request to update an email template. For more information, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html">Amazon SES Developer Guide</a>.'
security:
  - hmac: []
