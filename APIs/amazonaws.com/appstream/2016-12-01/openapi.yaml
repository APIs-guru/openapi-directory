openapi: 3.0.0
info:
  version: '2016-12-01'
  x-release: v4
  title: Amazon AppStream
  description: '<fullname>Amazon AppStream 2.0</fullname> <p>This is the <i>Amazon AppStream 2.0 API Reference</i>. This documentation provides descriptions and syntax for each of the actions and data types in AppStream 2.0. AppStream 2.0 is a fully managed, secure application streaming service that lets you stream desktop applications to users without rewriting applications. AppStream 2.0 manages the AWS resources that are required to host and run your applications, scales automatically, and provides access to your users on demand. </p> <note> <p>You can call the AppStream 2.0 API operations by using an interface VPC endpoint (interface endpoint). For more information, see <a href="https://docs.aws.amazon.com/appstream2/latest/developerguide/access-api-cli-through-interface-vpc-endpoint.html">Access AppStream 2.0 API Operations and CLI Commands Through an Interface VPC Endpoint</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.</p> </note> <p>To learn more about AppStream 2.0, see the following resources:</p> <ul> <li> <p> <a href="http://aws.amazon.com/appstream2">Amazon AppStream 2.0 product page</a> </p> </li> <li> <p> <a href="http://aws.amazon.com/documentation/appstream2">Amazon AppStream 2.0 documentation</a> </p> </li> </ul>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: appstream
  x-aws-signingName: appstream
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/appstream-2016-12-01.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/appstream2/'
servers:
  - url: 'http://appstream2.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon AppStream multi-region endpoint
  - url: 'https://appstream2.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon AppStream multi-region endpoint
  - url: 'http://appstream2.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon AppStream endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://appstream2.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon AppStream endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /#X-Amz-Target=PhotonAdminProxyService.AssociateFleet:
    post:
      operationId: AssociateFleet
      description: Associates the specified fleet with the specified stack.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateFleetResult'
        '480':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '481':
          description: InvalidAccountStatusException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccountStatusException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '484':
          description: IncompatibleImageException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncompatibleImageException'
        '485':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateFleetRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.AssociateFleet
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=PhotonAdminProxyService.BatchAssociateUserStack:
    post:
      operationId: BatchAssociateUserStack
      description: Associates the specified users with the specified stacks. Users in a user pool cannot be assigned to stacks with fleets that are joined to an Active Directory domain.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchAssociateUserStackResult'
        '480':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
        '481':
          description: InvalidParameterCombinationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchAssociateUserStackRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.BatchAssociateUserStack
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=PhotonAdminProxyService.BatchDisassociateUserStack:
    post:
      operationId: BatchDisassociateUserStack
      description: Disassociates the specified users from the specified stacks.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDisassociateUserStackResult'
        '480':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
        '481':
          description: InvalidParameterCombinationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchDisassociateUserStackRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.BatchDisassociateUserStack
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=PhotonAdminProxyService.CopyImage:
    post:
      operationId: CopyImage
      description: Copies the image within the same region or to a new region within the same AWS account. Note that any tags you added to the image will not be copied.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CopyImageResponse'
        '480':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourceNotAvailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotAvailableException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: InvalidAccountStatusException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccountStatusException'
        '485':
          description: IncompatibleImageException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncompatibleImageException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyImageRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.CopyImage
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=PhotonAdminProxyService.CreateDirectoryConfig:
    post:
      operationId: CreateDirectoryConfig
      description: Creates a Directory Config object in AppStream 2.0. This object includes the configuration information required to join fleets and image builders to Microsoft Active Directory domains.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDirectoryConfigResult'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: InvalidAccountStatusException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccountStatusException'
        '484':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
        '485':
          description: InvalidRoleException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRoleException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDirectoryConfigRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.CreateDirectoryConfig
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=PhotonAdminProxyService.CreateFleet:
    post:
      operationId: CreateFleet
      description: Creates a fleet. A fleet consists of streaming instances that run a specified image.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFleetResult'
        '480':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '481':
          description: ResourceNotAvailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotAvailableException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: RequestLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestLimitExceededException'
        '485':
          description: InvalidAccountStatusException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccountStatusException'
        '486':
          description: InvalidRoleException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRoleException'
        '487':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '488':
          description: InvalidParameterCombinationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
        '489':
          description: IncompatibleImageException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncompatibleImageException'
        '490':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFleetRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.CreateFleet
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=PhotonAdminProxyService.CreateImageBuilder:
    post:
      operationId: CreateImageBuilder
      description: '<p>Creates an image builder. An image builder is a virtual machine that is used to create an image.</p> <p>The initial state of the builder is <code>PENDING</code>. When it is ready, the state is <code>RUNNING</code>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateImageBuilderResult'
        '480':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '481':
          description: RequestLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestLimitExceededException'
        '482':
          description: InvalidAccountStatusException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccountStatusException'
        '483':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '484':
          description: ResourceNotAvailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotAvailableException'
        '485':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '486':
          description: InvalidRoleException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRoleException'
        '487':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '488':
          description: InvalidParameterCombinationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
        '489':
          description: IncompatibleImageException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncompatibleImageException'
        '490':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateImageBuilderRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.CreateImageBuilder
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=PhotonAdminProxyService.CreateImageBuilderStreamingURL:
    post:
      operationId: CreateImageBuilderStreamingURL
      description: Creates a URL to start an image builder streaming session.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateImageBuilderStreamingURLResult'
        '480':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateImageBuilderStreamingURLRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.CreateImageBuilderStreamingURL
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=PhotonAdminProxyService.CreateStack:
    post:
      operationId: CreateStack
      description: 'Creates a stack to start streaming applications to users. A stack consists of an associated fleet, user access policies, and storage configurations. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateStackResult'
        '480':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '481':
          description: InvalidAccountStatusException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccountStatusException'
        '482':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '483':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '484':
          description: InvalidRoleException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRoleException'
        '485':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '486':
          description: InvalidParameterCombinationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStackRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.CreateStack
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=PhotonAdminProxyService.CreateStreamingURL:
    post:
      operationId: CreateStreamingURL
      description: 'Creates a temporary URL to start an AppStream 2.0 streaming session for the specified user. A streaming URL enables application streaming to be tested without user setup. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateStreamingURLResult'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ResourceNotAvailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotAvailableException'
        '482':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
        '483':
          description: InvalidParameterCombinationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStreamingURLRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.CreateStreamingURL
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=PhotonAdminProxyService.CreateUpdatedImage:
    post:
      operationId: CreateUpdatedImage
      description: '<p>Creates a new image with the latest Windows operating system updates, driver updates, and AppStream 2.0 agent software.</p> <p>For more information, see the "Update an Image by Using Managed AppStream 2.0 Image Updates" section in <a href="https://docs.aws.amazon.com/appstream2/latest/developerguide/administer-images.html">Administer Your AppStream 2.0 Images</a>, in the <i>Amazon AppStream 2.0 Administration Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUpdatedImageResult'
        '480':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '481':
          description: InvalidAccountStatusException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccountStatusException'
        '482':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
        '483':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '486':
          description: IncompatibleImageException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncompatibleImageException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdatedImageRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.CreateUpdatedImage
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=PhotonAdminProxyService.CreateUsageReportSubscription:
    post:
      operationId: CreateUsageReportSubscription
      description: Creates a usage report subscription. Usage reports are generated daily.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUsageReportSubscriptionResult'
        '480':
          description: InvalidRoleException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRoleException'
        '481':
          description: InvalidAccountStatusException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccountStatusException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUsageReportSubscriptionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.CreateUsageReportSubscription
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=PhotonAdminProxyService.CreateUser:
    post:
      operationId: CreateUser
      description: Creates a new user in the user pool.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserResult'
        '480':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '481':
          description: InvalidAccountStatusException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccountStatusException'
        '482':
          description: InvalidParameterCombinationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.CreateUser
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=PhotonAdminProxyService.DeleteDirectoryConfig:
    post:
      operationId: DeleteDirectoryConfig
      description: Deletes the specified Directory Config object from AppStream 2.0. This object includes the information required to join streaming instances to an Active Directory domain.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDirectoryConfigResult'
        '480':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDirectoryConfigRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.DeleteDirectoryConfig
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=PhotonAdminProxyService.DeleteFleet:
    post:
      operationId: DeleteFleet
      description: Deletes the specified fleet.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFleetResult'
        '480':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteFleetRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.DeleteFleet
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=PhotonAdminProxyService.DeleteImage:
    post:
      operationId: DeleteImage
      description: 'Deletes the specified image. You cannot delete an image when it is in use. After you delete an image, you cannot provision new capacity using the image.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteImageResult'
        '480':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
        '483':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteImageRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.DeleteImage
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=PhotonAdminProxyService.DeleteImageBuilder:
    post:
      operationId: DeleteImageBuilder
      description: Deletes the specified image builder and releases the capacity.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteImageBuilderResult'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
        '482':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteImageBuilderRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.DeleteImageBuilder
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=PhotonAdminProxyService.DeleteImagePermissions:
    post:
      operationId: DeleteImagePermissions
      description: 'Deletes permissions for the specified private image. After you delete permissions for an image, AWS accounts to which you previously granted these permissions can no longer use the image.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteImagePermissionsResult'
        '480':
          description: ResourceNotAvailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotAvailableException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteImagePermissionsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.DeleteImagePermissions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=PhotonAdminProxyService.DeleteStack:
    post:
      operationId: DeleteStack
      description: 'Deletes the specified stack. After the stack is deleted, the application streaming environment provided by the stack is no longer available to users. Also, any reservations made for application streaming sessions for the stack are released.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteStackResult'
        '480':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteStackRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.DeleteStack
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=PhotonAdminProxyService.DeleteUsageReportSubscription:
    post:
      operationId: DeleteUsageReportSubscription
      description: Disables usage report generation.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteUsageReportSubscriptionResult'
        '480':
          description: InvalidAccountStatusException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccountStatusException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteUsageReportSubscriptionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.DeleteUsageReportSubscription
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=PhotonAdminProxyService.DeleteUser:
    post:
      operationId: DeleteUser
      description: Deletes a user from the user pool.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteUserResult'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteUserRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.DeleteUser
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=PhotonAdminProxyService.DescribeDirectoryConfigs:
    post:
      operationId: DescribeDirectoryConfigs
      description: '<p>Retrieves a list that describes one or more specified Directory Config objects for AppStream 2.0, if the names for these objects are provided. Otherwise, all Directory Config objects in the account are described. These objects include the configuration information required to join fleets and image builders to Microsoft Active Directory domains. </p> <p>Although the response syntax in this topic includes the account password, this password is not returned in the actual response.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDirectoryConfigsResult'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDirectoryConfigsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.DescribeDirectoryConfigs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=PhotonAdminProxyService.DescribeFleets:
    post:
      operationId: DescribeFleets
      description: 'Retrieves a list that describes one or more specified fleets, if the fleet names are provided. Otherwise, all fleets in the account are described.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeFleetsResult'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeFleetsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.DescribeFleets
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=PhotonAdminProxyService.DescribeImageBuilders:
    post:
      operationId: DescribeImageBuilders
      description: 'Retrieves a list that describes one or more specified image builders, if the image builder names are provided. Otherwise, all image builders in the account are described.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeImageBuildersResult'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeImageBuildersRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.DescribeImageBuilders
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=PhotonAdminProxyService.DescribeImagePermissions:
    post:
      operationId: DescribeImagePermissions
      description: 'Retrieves a list that describes the permissions for shared AWS account IDs on a private image that you own. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeImagePermissionsResult'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeImagePermissionsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.DescribeImagePermissions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=PhotonAdminProxyService.DescribeImages:
    post:
      operationId: DescribeImages
      description: 'Retrieves a list that describes one or more specified images, if the image names or image ARNs are provided. Otherwise, all images in the account are described.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeImagesResult'
        '480':
          description: InvalidParameterCombinationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeImagesRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.DescribeImages
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=PhotonAdminProxyService.DescribeSessions:
    post:
      operationId: DescribeSessions
      description: 'Retrieves a list that describes the streaming sessions for a specified stack and fleet. If a UserId is provided for the stack and fleet, only streaming sessions for that user are described. If an authentication type is not provided, the default is to authenticate users using a streaming URL.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeSessionsResult'
        '480':
          description: InvalidParameterCombinationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeSessionsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.DescribeSessions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=PhotonAdminProxyService.DescribeStacks:
    post:
      operationId: DescribeStacks
      description: 'Retrieves a list that describes one or more specified stacks, if the stack names are provided. Otherwise, all stacks in the account are described.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeStacksResult'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeStacksRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.DescribeStacks
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=PhotonAdminProxyService.DescribeUsageReportSubscriptions:
    post:
      operationId: DescribeUsageReportSubscriptions
      description: Retrieves a list that describes one or more usage report subscriptions.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeUsageReportSubscriptionsResult'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidAccountStatusException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccountStatusException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeUsageReportSubscriptionsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.DescribeUsageReportSubscriptions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=PhotonAdminProxyService.DescribeUserStackAssociations:
    post:
      operationId: DescribeUserStackAssociations
      description: '<p>Retrieves a list that describes the UserStackAssociation objects. You must specify either or both of the following:</p> <ul> <li> <p>The stack name</p> </li> <li> <p>The user name (email address of the user associated with the stack) and the authentication type for the user</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeUserStackAssociationsResult'
        '480':
          description: InvalidParameterCombinationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
        '481':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeUserStackAssociationsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.DescribeUserStackAssociations
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=PhotonAdminProxyService.DescribeUsers:
    post:
      operationId: DescribeUsers
      description: Retrieves a list that describes one or more specified users in the user pool.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeUsersResult'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterCombinationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeUsersRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.DescribeUsers
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=PhotonAdminProxyService.DisableUser:
    post:
      operationId: DisableUser
      description: 'Disables the specified user in the user pool. Users can''t sign in to AppStream 2.0 until they are re-enabled. This action does not delete the user. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisableUserResult'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisableUserRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.DisableUser
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=PhotonAdminProxyService.DisassociateFleet:
    post:
      operationId: DisassociateFleet
      description: Disassociates the specified fleet from the specified stack.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateFleetResult'
        '480':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '483':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisassociateFleetRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.DisassociateFleet
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=PhotonAdminProxyService.EnableUser:
    post:
      operationId: EnableUser
      description: 'Enables a user in the user pool. After being enabled, users can sign in to AppStream 2.0 and open applications from the stacks to which they are assigned.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnableUserResult'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidAccountStatusException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccountStatusException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableUserRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.EnableUser
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=PhotonAdminProxyService.ExpireSession:
    post:
      operationId: ExpireSession
      description: Immediately stops the specified streaming session.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpireSessionResult'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpireSessionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.ExpireSession
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=PhotonAdminProxyService.ListAssociatedFleets:
    post:
      operationId: ListAssociatedFleets
      description: Retrieves the name of the fleet that is associated with the specified stack.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAssociatedFleetsResult'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAssociatedFleetsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.ListAssociatedFleets
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=PhotonAdminProxyService.ListAssociatedStacks:
    post:
      operationId: ListAssociatedStacks
      description: Retrieves the name of the stack with which the specified fleet is associated.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAssociatedStacksResult'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAssociatedStacksRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.ListAssociatedStacks
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=PhotonAdminProxyService.ListTagsForResource:
    post:
      operationId: ListTagsForResource
      description: '<p>Retrieves a list of all tags for the specified AppStream 2.0 resource. You can tag AppStream 2.0 image builders, images, fleets, and stacks.</p> <p>For more information about tags, see <a href="https://docs.aws.amazon.com/appstream2/latest/developerguide/tagging-basic.html">Tagging Your Resources</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.ListTagsForResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=PhotonAdminProxyService.StartFleet:
    post:
      operationId: StartFleet
      description: Starts the specified fleet.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartFleetResult'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: RequestLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestLimitExceededException'
        '484':
          description: InvalidAccountStatusException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccountStatusException'
        '485':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '486':
          description: ResourceNotAvailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotAvailableException'
        '487':
          description: InvalidRoleException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRoleException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartFleetRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.StartFleet
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=PhotonAdminProxyService.StartImageBuilder:
    post:
      operationId: StartImageBuilder
      description: Starts the specified image builder.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartImageBuilderResult'
        '480':
          description: ResourceNotAvailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotAvailableException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '483':
          description: InvalidAccountStatusException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccountStatusException'
        '484':
          description: IncompatibleImageException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncompatibleImageException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartImageBuilderRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.StartImageBuilder
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=PhotonAdminProxyService.StopFleet:
    post:
      operationId: StopFleet
      description: Stops the specified fleet.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopFleetResult'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopFleetRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.StopFleet
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=PhotonAdminProxyService.StopImageBuilder:
    post:
      operationId: StopImageBuilder
      description: Stops the specified image builder.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopImageBuilderResult'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
        '482':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopImageBuilderRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.StopImageBuilder
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=PhotonAdminProxyService.TagResource:
    post:
      operationId: TagResource
      description: '<p>Adds or overwrites one or more tags for the specified AppStream 2.0 resource. You can tag AppStream 2.0 image builders, images, fleets, and stacks.</p> <p>Each tag consists of a key and an optional value. If a resource already has a tag with the same key, this operation updates its value.</p> <p>To list the current tags for your resources, use <a>ListTagsForResource</a>. To disassociate tags from your resources, use <a>UntagResource</a>.</p> <p>For more information about tags, see <a href="https://docs.aws.amazon.com/appstream2/latest/developerguide/tagging-basic.html">Tagging Your Resources</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
        '480':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '481':
          description: InvalidAccountStatusException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccountStatusException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.TagResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=PhotonAdminProxyService.UntagResource:
    post:
      operationId: UntagResource
      description: '<p>Disassociates one or more specified tags from the specified AppStream 2.0 resource.</p> <p>To list the current tags for your resources, use <a>ListTagsForResource</a>.</p> <p>For more information about tags, see <a href="https://docs.aws.amazon.com/appstream2/latest/developerguide/tagging-basic.html">Tagging Your Resources</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.UntagResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=PhotonAdminProxyService.UpdateDirectoryConfig:
    post:
      operationId: UpdateDirectoryConfig
      description: Updates the specified Directory Config object in AppStream 2.0. This object includes the configuration information required to join fleets and image builders to Microsoft Active Directory domains.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDirectoryConfigResult'
        '480':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '483':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
        '484':
          description: InvalidRoleException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRoleException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDirectoryConfigRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.UpdateDirectoryConfig
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=PhotonAdminProxyService.UpdateFleet:
    post:
      operationId: UpdateFleet
      description: '<p>Updates the specified fleet.</p> <p>If the fleet is in the <code>STOPPED</code> state, you can update any attribute except the fleet name. If the fleet is in the <code>RUNNING</code> state, you can update the <code>DisplayName</code>, <code>ComputeCapacity</code>, <code>ImageARN</code>, <code>ImageName</code>, <code>IdleDisconnectTimeoutInSeconds</code>, and <code>DisconnectTimeoutInSeconds</code> attributes. If the fleet is in the <code>STARTING</code> or <code>STOPPING</code> state, you can''t update it.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFleetResult'
        '480':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: RequestLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestLimitExceededException'
        '483':
          description: InvalidAccountStatusException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccountStatusException'
        '484':
          description: InvalidRoleException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRoleException'
        '485':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '486':
          description: ResourceNotAvailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotAvailableException'
        '487':
          description: InvalidParameterCombinationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
        '488':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '489':
          description: IncompatibleImageException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncompatibleImageException'
        '490':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFleetRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.UpdateFleet
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=PhotonAdminProxyService.UpdateImagePermissions:
    post:
      operationId: UpdateImagePermissions
      description: 'Adds or updates permissions for the specified private image. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateImagePermissionsResult'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ResourceNotAvailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotAvailableException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateImagePermissionsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.UpdateImagePermissions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=PhotonAdminProxyService.UpdateStack:
    post:
      operationId: UpdateStack
      description: Updates the specified fields for the specified stack.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateStackResult'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '482':
          description: InvalidRoleException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRoleException'
        '483':
          description: InvalidParameterCombinationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: InvalidAccountStatusException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccountStatusException'
        '486':
          description: IncompatibleImageException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncompatibleImageException'
        '487':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
        '488':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStackRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.UpdateStack
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AssociateFleetResult:
      type: object
      properties: {}
    AssociateFleetRequest:
      type: object
      required:
        - FleetName
        - StackName
      title: AssociateFleetRequest
      properties:
        FleetName:
          $ref: '#/components/schemas/String'
          description: 'The name of the fleet. '
        StackName:
          $ref: '#/components/schemas/String'
          description: The name of the stack.
    LimitExceededException: {}
    InvalidAccountStatusException: {}
    ResourceNotFoundException: {}
    ConcurrentModificationException: {}
    IncompatibleImageException: {}
    OperationNotPermittedException: {}
    BatchAssociateUserStackResult:
      type: object
      properties:
        errors:
          $ref: '#/components/schemas/UserStackAssociationErrorList'
          description: The list of UserStackAssociationError objects.
    BatchAssociateUserStackRequest:
      type: object
      required:
        - UserStackAssociations
      title: BatchAssociateUserStackRequest
      properties:
        UserStackAssociations:
          $ref: '#/components/schemas/UserStackAssociationList'
          description: The list of UserStackAssociation objects.
    InvalidParameterCombinationException: {}
    BatchDisassociateUserStackResult:
      type: object
      properties:
        errors:
          $ref: '#/components/schemas/UserStackAssociationErrorList'
          description: The list of UserStackAssociationError objects.
    BatchDisassociateUserStackRequest:
      type: object
      required:
        - UserStackAssociations
      title: BatchDisassociateUserStackRequest
      properties:
        UserStackAssociations:
          $ref: '#/components/schemas/UserStackAssociationList'
          description: The list of UserStackAssociation objects.
    CopyImageResponse:
      type: object
      properties:
        DestinationImageName:
          $ref: '#/components/schemas/Name'
          description: The name of the destination image.
    CopyImageRequest:
      type: object
      required:
        - SourceImageName
        - DestinationImageName
        - DestinationRegion
      title: CopyImageRequest
      properties:
        SourceImageName:
          $ref: '#/components/schemas/Name'
          description: The name of the image to copy.
        DestinationImageName:
          $ref: '#/components/schemas/Name'
          description: The name that the image will have when it is copied to the destination.
        DestinationRegion:
          $ref: '#/components/schemas/RegionName'
          description: 'The destination region to which the image will be copied. This parameter is required, even if you are copying an image within the same region.'
        DestinationImageDescription:
          $ref: '#/components/schemas/Description'
          description: The description that the image will have when it is copied to the destination.
    ResourceAlreadyExistsException: {}
    ResourceNotAvailableException: {}
    CreateDirectoryConfigResult:
      type: object
      properties:
        DirectoryConfig:
          $ref: '#/components/schemas/DirectoryConfig'
          description: Information about the directory configuration.
    CreateDirectoryConfigRequest:
      type: object
      required:
        - DirectoryName
        - OrganizationalUnitDistinguishedNames
      title: CreateDirectoryConfigRequest
      properties:
        DirectoryName:
          $ref: '#/components/schemas/DirectoryName'
          description: 'The fully qualified name of the directory (for example, corp.example.com).'
        OrganizationalUnitDistinguishedNames:
          $ref: '#/components/schemas/OrganizationalUnitDistinguishedNamesList'
          description: The distinguished names of the organizational units for computer accounts.
        ServiceAccountCredentials:
          $ref: '#/components/schemas/ServiceAccountCredentials'
          description: The credentials for the service account used by the fleet or image builder to connect to the directory.
    InvalidRoleException: {}
    CreateFleetResult:
      type: object
      properties:
        Fleet:
          $ref: '#/components/schemas/Fleet'
          description: Information about the fleet.
    CreateFleetRequest:
      type: object
      required:
        - Name
        - InstanceType
        - ComputeCapacity
      title: CreateFleetRequest
      properties:
        Name:
          $ref: '#/components/schemas/Name'
          description: A unique name for the fleet.
        ImageName:
          $ref: '#/components/schemas/String'
          description: The name of the image used to create the fleet.
        ImageArn:
          $ref: '#/components/schemas/Arn'
          description: 'The ARN of the public, private, or shared image to use.'
        InstanceType:
          $ref: '#/components/schemas/String'
          description: '<p>The instance type to use when launching fleet instances. The following instance types are available:</p> <ul> <li> <p>stream.standard.small</p> </li> <li> <p>stream.standard.medium</p> </li> <li> <p>stream.standard.large</p> </li> <li> <p>stream.compute.large</p> </li> <li> <p>stream.compute.xlarge</p> </li> <li> <p>stream.compute.2xlarge</p> </li> <li> <p>stream.compute.4xlarge</p> </li> <li> <p>stream.compute.8xlarge</p> </li> <li> <p>stream.memory.large</p> </li> <li> <p>stream.memory.xlarge</p> </li> <li> <p>stream.memory.2xlarge</p> </li> <li> <p>stream.memory.4xlarge</p> </li> <li> <p>stream.memory.8xlarge</p> </li> <li> <p>stream.memory.z1d.large</p> </li> <li> <p>stream.memory.z1d.xlarge</p> </li> <li> <p>stream.memory.z1d.2xlarge</p> </li> <li> <p>stream.memory.z1d.3xlarge</p> </li> <li> <p>stream.memory.z1d.6xlarge</p> </li> <li> <p>stream.memory.z1d.12xlarge</p> </li> <li> <p>stream.graphics-design.large</p> </li> <li> <p>stream.graphics-design.xlarge</p> </li> <li> <p>stream.graphics-design.2xlarge</p> </li> <li> <p>stream.graphics-design.4xlarge</p> </li> <li> <p>stream.graphics-desktop.2xlarge</p> </li> <li> <p>stream.graphics.g4dn.xlarge</p> </li> <li> <p>stream.graphics.g4dn.2xlarge</p> </li> <li> <p>stream.graphics.g4dn.4xlarge</p> </li> <li> <p>stream.graphics.g4dn.8xlarge</p> </li> <li> <p>stream.graphics.g4dn.12xlarge</p> </li> <li> <p>stream.graphics.g4dn.16xlarge</p> </li> <li> <p>stream.graphics-pro.4xlarge</p> </li> <li> <p>stream.graphics-pro.8xlarge</p> </li> <li> <p>stream.graphics-pro.16xlarge</p> </li> </ul>'
        FleetType:
          $ref: '#/components/schemas/FleetType'
          description: '<p>The fleet type.</p> <dl> <dt>ALWAYS_ON</dt> <dd> <p>Provides users with instant-on access to their apps. You are charged for all running instances in your fleet, even if no users are streaming apps.</p> </dd> <dt>ON_DEMAND</dt> <dd> <p>Provide users with access to applications after they connect, which takes one to two minutes. You are charged for instance streaming when users are connected and a small hourly fee for instances that are not streaming apps.</p> </dd> </dl>'
        ComputeCapacity:
          $ref: '#/components/schemas/ComputeCapacity'
          description: The desired capacity for the fleet.
        VpcConfig:
          $ref: '#/components/schemas/VpcConfig'
          description: The VPC configuration for the fleet.
        MaxUserDurationInSeconds:
          $ref: '#/components/schemas/Integer'
          description: '<p>The maximum amount of time that a streaming session can remain active, in seconds. If users are still connected to a streaming instance five minutes before this limit is reached, they are prompted to save any open documents before being disconnected. After this time elapses, the instance is terminated and replaced by a new instance.</p> <p>Specify a value between 600 and 360000.</p>'
        DisconnectTimeoutInSeconds:
          $ref: '#/components/schemas/Integer'
          description: '<p>The amount of time that a streaming session remains active after users disconnect. If users try to reconnect to the streaming session after a disconnection or network interruption within this time interval, they are connected to their previous session. Otherwise, they are connected to a new session with a new streaming instance. </p> <p>Specify a value between 60 and 360000.</p>'
        Description:
          $ref: '#/components/schemas/Description'
          description: The description to display.
        DisplayName:
          $ref: '#/components/schemas/DisplayName'
          description: The fleet name to display.
        EnableDefaultInternetAccess:
          $ref: '#/components/schemas/BooleanObject'
          description: Enables or disables default internet access for the fleet.
        DomainJoinInfo:
          $ref: '#/components/schemas/DomainJoinInfo'
          description: 'The name of the directory and organizational unit (OU) to use to join the fleet to a Microsoft Active Directory domain. '
        Tags:
          $ref: '#/components/schemas/Tags'
          description: '<p>The tags to associate with the fleet. A tag is a key-value pair, and the value is optional. For example, Environment=Test. If you do not specify a value, Environment=. </p> <p>If you do not specify a value, the value is set to an empty string.</p> <p>Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following special characters: </p> <p>_ . : / = + \ - @</p> <p>For more information, see <a href="https://docs.aws.amazon.com/appstream2/latest/developerguide/tagging-basic.html">Tagging Your Resources</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.</p>'
        IdleDisconnectTimeoutInSeconds:
          $ref: '#/components/schemas/Integer'
          description: '<p>The amount of time that users can be idle (inactive) before they are disconnected from their streaming session and the <code>DisconnectTimeoutInSeconds</code> time interval begins. Users are notified before they are disconnected due to inactivity. If they try to reconnect to the streaming session before the time interval specified in <code>DisconnectTimeoutInSeconds</code> elapses, they are connected to their previous session. Users are considered idle when they stop providing keyboard or mouse input during their streaming session. File uploads and downloads, audio in, audio out, and pixels changing do not qualify as user activity. If users continue to be idle after the time interval in <code>IdleDisconnectTimeoutInSeconds</code> elapses, they are disconnected.</p> <p>To prevent users from being disconnected due to inactivity, specify a value of 0. Otherwise, specify a value between 60 and 3600. The default value is 0.</p> <note> <p>If you enable this feature, we recommend that you specify a value that corresponds exactly to a whole number of minutes (for example, 60, 120, and 180). If you don''t do this, the value is rounded to the nearest minute. For example, if you specify a value of 70, users are disconnected after 1 minute of inactivity. If you specify a value that is at the midpoint between two different minutes, the value is rounded up. For example, if you specify a value of 90, users are disconnected after 2 minutes of inactivity. </p> </note>'
        IamRoleArn:
          $ref: '#/components/schemas/Arn'
          description: '<p>The Amazon Resource Name (ARN) of the IAM role to apply to the fleet. To assume a role, a fleet instance calls the AWS Security Token Service (STS) <code>AssumeRole</code> API operation and passes the ARN of the role to use. The operation creates a new session with temporary credentials. AppStream 2.0 retrieves the temporary credentials and creates the <b>appstream_machine_role</b> credential profile on the instance.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/appstream2/latest/developerguide/using-iam-roles-to-grant-permissions-to-applications-scripts-streaming-instances.html">Using an IAM Role to Grant Permissions to Applications and Scripts Running on AppStream 2.0 Streaming Instances</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.</p>'
        StreamView:
          $ref: '#/components/schemas/StreamView'
          description: '<p>The AppStream 2.0 view that is displayed to your users when they stream from the fleet. When <code>APP</code> is specified, only the windows of applications opened by users display. When <code>DESKTOP</code> is specified, the standard desktop that is provided by the operating system displays.</p> <p>The default value is <code>APP</code>.</p>'
    RequestLimitExceededException: {}
    CreateImageBuilderResult:
      type: object
      properties:
        ImageBuilder:
          $ref: '#/components/schemas/ImageBuilder'
          description: Information about the image builder.
    CreateImageBuilderRequest:
      type: object
      required:
        - Name
        - InstanceType
      title: CreateImageBuilderRequest
      properties:
        Name:
          $ref: '#/components/schemas/Name'
          description: A unique name for the image builder.
        ImageName:
          $ref: '#/components/schemas/String'
          description: The name of the image used to create the image builder.
        ImageArn:
          $ref: '#/components/schemas/Arn'
          description: 'The ARN of the public, private, or shared image to use.'
        InstanceType:
          $ref: '#/components/schemas/String'
          description: '<p>The instance type to use when launching the image builder. The following instance types are available:</p> <ul> <li> <p>stream.standard.small</p> </li> <li> <p>stream.standard.medium</p> </li> <li> <p>stream.standard.large</p> </li> <li> <p>stream.compute.large</p> </li> <li> <p>stream.compute.xlarge</p> </li> <li> <p>stream.compute.2xlarge</p> </li> <li> <p>stream.compute.4xlarge</p> </li> <li> <p>stream.compute.8xlarge</p> </li> <li> <p>stream.memory.large</p> </li> <li> <p>stream.memory.xlarge</p> </li> <li> <p>stream.memory.2xlarge</p> </li> <li> <p>stream.memory.4xlarge</p> </li> <li> <p>stream.memory.8xlarge</p> </li> <li> <p>stream.memory.z1d.large</p> </li> <li> <p>stream.memory.z1d.xlarge</p> </li> <li> <p>stream.memory.z1d.2xlarge</p> </li> <li> <p>stream.memory.z1d.3xlarge</p> </li> <li> <p>stream.memory.z1d.6xlarge</p> </li> <li> <p>stream.memory.z1d.12xlarge</p> </li> <li> <p>stream.graphics-design.large</p> </li> <li> <p>stream.graphics-design.xlarge</p> </li> <li> <p>stream.graphics-design.2xlarge</p> </li> <li> <p>stream.graphics-design.4xlarge</p> </li> <li> <p>stream.graphics-desktop.2xlarge</p> </li> <li> <p>stream.graphics.g4dn.xlarge</p> </li> <li> <p>stream.graphics.g4dn.2xlarge</p> </li> <li> <p>stream.graphics.g4dn.4xlarge</p> </li> <li> <p>stream.graphics.g4dn.8xlarge</p> </li> <li> <p>stream.graphics.g4dn.12xlarge</p> </li> <li> <p>stream.graphics.g4dn.16xlarge</p> </li> <li> <p>stream.graphics-pro.4xlarge</p> </li> <li> <p>stream.graphics-pro.8xlarge</p> </li> <li> <p>stream.graphics-pro.16xlarge</p> </li> </ul>'
        Description:
          $ref: '#/components/schemas/Description'
          description: The description to display.
        DisplayName:
          $ref: '#/components/schemas/DisplayName'
          description: The image builder name to display.
        VpcConfig:
          $ref: '#/components/schemas/VpcConfig'
          description: The VPC configuration for the image builder. You can specify only one subnet.
        IamRoleArn:
          $ref: '#/components/schemas/Arn'
          description: '<p>The Amazon Resource Name (ARN) of the IAM role to apply to the image builder. To assume a role, the image builder calls the AWS Security Token Service (STS) <code>AssumeRole</code> API operation and passes the ARN of the role to use. The operation creates a new session with temporary credentials. AppStream 2.0 retrieves the temporary credentials and creates the <b>appstream_machine_role</b> credential profile on the instance.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/appstream2/latest/developerguide/using-iam-roles-to-grant-permissions-to-applications-scripts-streaming-instances.html">Using an IAM Role to Grant Permissions to Applications and Scripts Running on AppStream 2.0 Streaming Instances</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.</p>'
        EnableDefaultInternetAccess:
          $ref: '#/components/schemas/BooleanObject'
          description: Enables or disables default internet access for the image builder.
        DomainJoinInfo:
          $ref: '#/components/schemas/DomainJoinInfo'
          description: 'The name of the directory and organizational unit (OU) to use to join the image builder to a Microsoft Active Directory domain. '
        AppstreamAgentVersion:
          $ref: '#/components/schemas/AppstreamAgentVersion'
          description: 'The version of the AppStream 2.0 agent to use for this image builder. To use the latest version of the AppStream 2.0 agent, specify [LATEST]. '
        Tags:
          $ref: '#/components/schemas/Tags'
          description: '<p>The tags to associate with the image builder. A tag is a key-value pair, and the value is optional. For example, Environment=Test. If you do not specify a value, Environment=. </p> <p>Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following special characters: </p> <p>_ . : / = + \ - @</p> <p>If you do not specify a value, the value is set to an empty string.</p> <p>For more information about tags, see <a href="https://docs.aws.amazon.com/appstream2/latest/developerguide/tagging-basic.html">Tagging Your Resources</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.</p>'
        AccessEndpoints:
          $ref: '#/components/schemas/AccessEndpointList'
          description: The list of interface VPC endpoint (interface endpoint) objects. Administrators can connect to the image builder only through the specified endpoints.
    CreateImageBuilderStreamingURLResult:
      type: object
      properties:
        StreamingURL:
          $ref: '#/components/schemas/String'
          description: The URL to start the AppStream 2.0 streaming session.
        Expires:
          $ref: '#/components/schemas/Timestamp'
          description: 'The elapsed time, in seconds after the Unix epoch, when this URL expires.'
    CreateImageBuilderStreamingURLRequest:
      type: object
      required:
        - Name
      title: CreateImageBuilderStreamingURLRequest
      properties:
        Name:
          $ref: '#/components/schemas/String'
          description: The name of the image builder.
        Validity:
          $ref: '#/components/schemas/Long'
          description: 'The time that the streaming URL will be valid, in seconds. Specify a value between 1 and 604800 seconds. The default is 3600 seconds.'
    CreateStackResult:
      type: object
      properties:
        Stack:
          $ref: '#/components/schemas/Stack'
          description: Information about the stack.
    CreateStackRequest:
      type: object
      required:
        - Name
      title: CreateStackRequest
      properties:
        Name:
          $ref: '#/components/schemas/Name'
          description: The name of the stack.
        Description:
          $ref: '#/components/schemas/Description'
          description: The description to display.
        DisplayName:
          $ref: '#/components/schemas/DisplayName'
          description: The stack name to display.
        StorageConnectors:
          $ref: '#/components/schemas/StorageConnectorList'
          description: The storage connectors to enable.
        RedirectURL:
          $ref: '#/components/schemas/RedirectURL'
          description: The URL that users are redirected to after their streaming session ends.
        FeedbackURL:
          $ref: '#/components/schemas/FeedbackURL'
          description: 'The URL that users are redirected to after they click the Send Feedback link. If no URL is specified, no Send Feedback link is displayed.'
        UserSettings:
          $ref: '#/components/schemas/UserSettingList'
          description: 'The actions that are enabled or disabled for users during their streaming sessions. By default, these actions are enabled. '
        ApplicationSettings:
          $ref: '#/components/schemas/ApplicationSettings'
          description: 'The persistent application settings for users of a stack. When these settings are enabled, changes that users make to applications and Windows settings are automatically saved after each session and applied to the next session.'
        Tags:
          $ref: '#/components/schemas/Tags'
          description: '<p>The tags to associate with the stack. A tag is a key-value pair, and the value is optional. For example, Environment=Test. If you do not specify a value, Environment=. </p> <p>If you do not specify a value, the value is set to an empty string.</p> <p>Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following special characters: </p> <p>_ . : / = + \ - @</p> <p>For more information about tags, see <a href="https://docs.aws.amazon.com/appstream2/latest/developerguide/tagging-basic.html">Tagging Your Resources</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.</p>'
        AccessEndpoints:
          $ref: '#/components/schemas/AccessEndpointList'
          description: The list of interface VPC endpoint (interface endpoint) objects. Users of the stack can connect to AppStream 2.0 only through the specified endpoints.
        EmbedHostDomains:
          $ref: '#/components/schemas/EmbedHostDomains'
          description: 'The domains where AppStream 2.0 streaming sessions can be embedded in an iframe. You must approve the domains that you want to host embedded AppStream 2.0 streaming sessions. '
    CreateStreamingURLResult:
      type: object
      properties:
        StreamingURL:
          $ref: '#/components/schemas/String'
          description: The URL to start the AppStream 2.0 streaming session.
        Expires:
          $ref: '#/components/schemas/Timestamp'
          description: 'The elapsed time, in seconds after the Unix epoch, when this URL expires.'
    CreateStreamingURLRequest:
      type: object
      required:
        - StackName
        - FleetName
        - UserId
      title: CreateStreamingURLRequest
      properties:
        StackName:
          $ref: '#/components/schemas/String'
          description: The name of the stack.
        FleetName:
          $ref: '#/components/schemas/String'
          description: The name of the fleet.
        UserId:
          $ref: '#/components/schemas/StreamingUrlUserId'
          description: The identifier of the user.
        ApplicationId:
          $ref: '#/components/schemas/String'
          description: 'The name of the application to launch after the session starts. This is the name that you specified as <b>Name</b> in the Image Assistant. If your fleet is enabled for the <b>Desktop</b> stream view, you can also choose to launch directly to the operating system desktop. To do so, specify <b>Desktop</b>.'
        Validity:
          $ref: '#/components/schemas/Long'
          description: 'The time that the streaming URL will be valid, in seconds. Specify a value between 1 and 604800 seconds. The default is 60 seconds.'
        SessionContext:
          $ref: '#/components/schemas/String'
          description: 'The session context. For more information, see <a href="https://docs.aws.amazon.com/appstream2/latest/developerguide/managing-stacks-fleets.html#managing-stacks-fleets-parameters">Session Context</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.'
    CreateUpdatedImageResult:
      type: object
      properties:
        image:
          $ref: '#/components/schemas/Image'
        canUpdateImage:
          $ref: '#/components/schemas/Boolean'
          description: Indicates whether a new image can be created.
    CreateUpdatedImageRequest:
      type: object
      required:
        - existingImageName
        - newImageName
      title: CreateUpdatedImageRequest
      properties:
        existingImageName:
          $ref: '#/components/schemas/Name'
          description: The name of the image to update.
        newImageName:
          $ref: '#/components/schemas/Name'
          description: The name of the new image. The name must be unique within the AWS account and Region.
        newImageDescription:
          $ref: '#/components/schemas/Description'
          description: The description to display for the new image.
        newImageDisplayName:
          $ref: '#/components/schemas/DisplayName'
          description: The name to display for the new image.
        newImageTags:
          $ref: '#/components/schemas/Tags'
          description: '<p>The tags to associate with the new image. A tag is a key-value pair, and the value is optional. For example, Environment=Test. If you do not specify a value, Environment=. </p> <p>Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following special characters: </p> <p>_ . : / = + \ - @</p> <p>If you do not specify a value, the value is set to an empty string.</p> <p>For more information about tags, see <a href="https://docs.aws.amazon.com/appstream2/latest/developerguide/tagging-basic.html">Tagging Your Resources</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.</p>'
        dryRun:
          $ref: '#/components/schemas/Boolean'
          description: 'Indicates whether to display the status of image update availability before AppStream 2.0 initiates the process of creating a new updated image. If this value is set to <code>true</code>, AppStream 2.0 displays whether image updates are available. If this value is set to <code>false</code>, AppStream 2.0 initiates the process of creating a new updated image without displaying whether image updates are available.'
    CreateUsageReportSubscriptionResult:
      type: object
      properties:
        S3BucketName:
          $ref: '#/components/schemas/String'
          description: '<p>The Amazon S3 bucket where generated reports are stored.</p> <p>If you enabled on-instance session scripts and Amazon S3 logging for your session script configuration, AppStream 2.0 created an S3 bucket to store the script output. The bucket is unique to your account and Region. When you enable usage reporting in this case, AppStream 2.0 uses the same bucket to store your usage reports. If you haven''t already enabled on-instance session scripts, when you enable usage reports, AppStream 2.0 creates a new S3 bucket.</p>'
        Schedule:
          $ref: '#/components/schemas/UsageReportSchedule'
          description: The schedule for generating usage reports.
    CreateUsageReportSubscriptionRequest:
      type: object
      title: CreateUsageReportSubscriptionRequest
      properties: {}
    CreateUserResult:
      type: object
      properties: {}
    CreateUserRequest:
      type: object
      required:
        - UserName
        - AuthenticationType
      title: CreateUserRequest
      properties:
        UserName:
          $ref: '#/components/schemas/Username'
          description: '<p>The email address of the user.</p> <note> <p>Users'' email addresses are case-sensitive. During login, if they specify an email address that doesn''t use the same capitalization as the email address specified when their user pool account was created, a "user does not exist" error message displays.</p> </note>'
        MessageAction:
          $ref: '#/components/schemas/MessageAction'
          description: '<p>The action to take for the welcome email that is sent to a user after the user is created in the user pool. If you specify SUPPRESS, no email is sent. If you specify RESEND, do not specify the first name or last name of the user. If the value is null, the email is sent. </p> <note> <p>The temporary password in the welcome email is valid for only 7 days. If users don’t set their passwords within 7 days, you must send them a new welcome email.</p> </note>'
        FirstName:
          $ref: '#/components/schemas/UserAttributeValue'
          description: 'The first name, or given name, of the user.'
        LastName:
          $ref: '#/components/schemas/UserAttributeValue'
          description: 'The last name, or surname, of the user.'
        AuthenticationType:
          $ref: '#/components/schemas/AuthenticationType'
          description: 'The authentication type for the user. You must specify USERPOOL. '
    DeleteDirectoryConfigResult:
      type: object
      properties: {}
    DeleteDirectoryConfigRequest:
      type: object
      required:
        - DirectoryName
      title: DeleteDirectoryConfigRequest
      properties:
        DirectoryName:
          $ref: '#/components/schemas/DirectoryName'
          description: The name of the directory configuration.
    ResourceInUseException: {}
    DeleteFleetResult:
      type: object
      properties: {}
    DeleteFleetRequest:
      type: object
      required:
        - Name
      title: DeleteFleetRequest
      properties:
        Name:
          $ref: '#/components/schemas/String'
          description: The name of the fleet.
    DeleteImageResult:
      type: object
      properties:
        Image:
          $ref: '#/components/schemas/Image'
          description: Information about the image.
    DeleteImageRequest:
      type: object
      required:
        - Name
      title: DeleteImageRequest
      properties:
        Name:
          $ref: '#/components/schemas/Name'
          description: The name of the image.
    DeleteImageBuilderResult:
      type: object
      properties:
        ImageBuilder:
          $ref: '#/components/schemas/ImageBuilder'
          description: Information about the image builder.
    DeleteImageBuilderRequest:
      type: object
      required:
        - Name
      title: DeleteImageBuilderRequest
      properties:
        Name:
          $ref: '#/components/schemas/Name'
          description: The name of the image builder.
    DeleteImagePermissionsResult:
      type: object
      properties: {}
    DeleteImagePermissionsRequest:
      type: object
      required:
        - Name
        - SharedAccountId
      title: DeleteImagePermissionsRequest
      properties:
        Name:
          $ref: '#/components/schemas/Name'
          description: The name of the private image.
        SharedAccountId:
          $ref: '#/components/schemas/AwsAccountId'
          description: The 12-digit identifier of the AWS account for which to delete image permissions.
    DeleteStackResult:
      type: object
      properties: {}
    DeleteStackRequest:
      type: object
      required:
        - Name
      title: DeleteStackRequest
      properties:
        Name:
          $ref: '#/components/schemas/String'
          description: The name of the stack.
    DeleteUsageReportSubscriptionResult:
      type: object
      properties: {}
    DeleteUsageReportSubscriptionRequest:
      type: object
      title: DeleteUsageReportSubscriptionRequest
      properties: {}
    DeleteUserResult:
      type: object
      properties: {}
    DeleteUserRequest:
      type: object
      required:
        - UserName
        - AuthenticationType
      title: DeleteUserRequest
      properties:
        UserName:
          $ref: '#/components/schemas/Username'
          description: <p>The email address of the user.</p> <note> <p>Users' email addresses are case-sensitive.</p> </note>
        AuthenticationType:
          $ref: '#/components/schemas/AuthenticationType'
          description: The authentication type for the user. You must specify USERPOOL.
    DescribeDirectoryConfigsResult:
      type: object
      properties:
        DirectoryConfigs:
          $ref: '#/components/schemas/DirectoryConfigList'
          description: 'Information about the directory configurations. Note that although the response syntax in this topic includes the account password, this password is not returned in the actual response. '
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.'
    DescribeDirectoryConfigsRequest:
      type: object
      title: DescribeDirectoryConfigsRequest
      properties:
        DirectoryNames:
          $ref: '#/components/schemas/DirectoryNameList'
          description: The directory names.
        MaxResults:
          $ref: '#/components/schemas/Integer'
          description: The maximum size of each page of results.
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.'
    DescribeFleetsResult:
      type: object
      properties:
        Fleets:
          $ref: '#/components/schemas/FleetList'
          description: Information about the fleets.
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.'
    DescribeFleetsRequest:
      type: object
      title: DescribeFleetsRequest
      properties:
        Names:
          $ref: '#/components/schemas/StringList'
          description: The names of the fleets to describe.
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.'
    DescribeImageBuildersResult:
      type: object
      properties:
        ImageBuilders:
          $ref: '#/components/schemas/ImageBuilderList'
          description: Information about the image builders.
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.'
    DescribeImageBuildersRequest:
      type: object
      title: DescribeImageBuildersRequest
      properties:
        Names:
          $ref: '#/components/schemas/StringList'
          description: The names of the image builders to describe.
        MaxResults:
          $ref: '#/components/schemas/Integer'
          description: The maximum size of each page of results.
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.'
    DescribeImagePermissionsResult:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/Name'
          description: The name of the private image.
        SharedImagePermissionsList:
          $ref: '#/components/schemas/SharedImagePermissionsList'
          description: 'The permissions for a private image that you own. '
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.'
    DescribeImagePermissionsRequest:
      type: object
      required:
        - Name
      title: DescribeImagePermissionsRequest
      properties:
        Name:
          $ref: '#/components/schemas/Name'
          description: 'The name of the private image for which to describe permissions. The image must be one that you own. '
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum size of each page of results.
        SharedAwsAccountIds:
          $ref: '#/components/schemas/AwsAccountIdList'
          description: The 12-digit identifier of one or more AWS accounts with which the image is shared.
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.'
    DescribeImagesResult:
      type: object
      properties:
        Images:
          $ref: '#/components/schemas/ImageList'
          description: Information about the images.
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.'
    DescribeImagesRequest:
      type: object
      title: DescribeImagesRequest
      properties:
        Names:
          $ref: '#/components/schemas/StringList'
          description: The names of the public or private images to describe.
        Arns:
          $ref: '#/components/schemas/ArnList'
          description: 'The ARNs of the public, private, and shared images to describe.'
        Type:
          $ref: '#/components/schemas/VisibilityType'
          description: 'The type of image (public, private, or shared) to describe. '
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.'
        MaxResults:
          $ref: '#/components/schemas/DescribeImagesMaxResults'
          description: The maximum size of each page of results.
    DescribeSessionsResult:
      type: object
      properties:
        Sessions:
          $ref: '#/components/schemas/SessionList'
          description: Information about the streaming sessions.
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.'
    DescribeSessionsRequest:
      type: object
      required:
        - StackName
        - FleetName
      title: DescribeSessionsRequest
      properties:
        StackName:
          $ref: '#/components/schemas/String'
          description: The name of the stack. This value is case-sensitive.
        FleetName:
          $ref: '#/components/schemas/String'
          description: The name of the fleet. This value is case-sensitive.
        UserId:
          $ref: '#/components/schemas/UserId'
          description: 'The user identifier (ID). If you specify a user ID, you must also specify the authentication type.'
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.'
        Limit:
          $ref: '#/components/schemas/Integer'
          description: The size of each page of results. The default value is 20 and the maximum value is 50.
        AuthenticationType:
          $ref: '#/components/schemas/AuthenticationType'
          description: The authentication method. Specify <code>API</code> for a user authenticated using a streaming URL or <code>SAML</code> for a SAML federated user. The default is to authenticate users using a streaming URL.
    DescribeStacksResult:
      type: object
      properties:
        Stacks:
          $ref: '#/components/schemas/StackList'
          description: Information about the stacks.
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.'
    DescribeStacksRequest:
      type: object
      title: DescribeStacksRequest
      properties:
        Names:
          $ref: '#/components/schemas/StringList'
          description: The names of the stacks to describe.
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.'
    DescribeUsageReportSubscriptionsResult:
      type: object
      properties:
        UsageReportSubscriptions:
          $ref: '#/components/schemas/UsageReportSubscriptionList'
          description: Information about the usage report subscription.
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.'
    DescribeUsageReportSubscriptionsRequest:
      type: object
      title: DescribeUsageReportSubscriptionsRequest
      properties:
        MaxResults:
          $ref: '#/components/schemas/Integer'
          description: The maximum size of each page of results.
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.'
    DescribeUserStackAssociationsResult:
      type: object
      properties:
        UserStackAssociations:
          $ref: '#/components/schemas/UserStackAssociationList'
          description: The UserStackAssociation objects.
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.'
    DescribeUserStackAssociationsRequest:
      type: object
      title: DescribeUserStackAssociationsRequest
      properties:
        StackName:
          $ref: '#/components/schemas/String'
          description: The name of the stack that is associated with the user.
        UserName:
          $ref: '#/components/schemas/Username'
          description: <p>The email address of the user who is associated with the stack.</p> <note> <p>Users' email addresses are case-sensitive.</p> </note>
        AuthenticationType:
          $ref: '#/components/schemas/AuthenticationType'
          description: The authentication type for the user who is associated with the stack. You must specify USERPOOL.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum size of each page of results.
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.'
    DescribeUsersResult:
      type: object
      properties:
        Users:
          $ref: '#/components/schemas/UserList'
          description: Information about users in the user pool.
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.'
    DescribeUsersRequest:
      type: object
      required:
        - AuthenticationType
      title: DescribeUsersRequest
      properties:
        AuthenticationType:
          $ref: '#/components/schemas/AuthenticationType'
          description: The authentication type for the users in the user pool to describe. You must specify USERPOOL.
        MaxResults:
          $ref: '#/components/schemas/Integer'
          description: The maximum size of each page of results.
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.'
    DisableUserResult:
      type: object
      properties: {}
    DisableUserRequest:
      type: object
      required:
        - UserName
        - AuthenticationType
      title: DisableUserRequest
      properties:
        UserName:
          $ref: '#/components/schemas/Username'
          description: <p>The email address of the user.</p> <note> <p>Users' email addresses are case-sensitive.</p> </note>
        AuthenticationType:
          $ref: '#/components/schemas/AuthenticationType'
          description: The authentication type for the user. You must specify USERPOOL.
    DisassociateFleetResult:
      type: object
      properties: {}
    DisassociateFleetRequest:
      type: object
      required:
        - FleetName
        - StackName
      title: DisassociateFleetRequest
      properties:
        FleetName:
          $ref: '#/components/schemas/String'
          description: The name of the fleet.
        StackName:
          $ref: '#/components/schemas/String'
          description: The name of the stack.
    EnableUserResult:
      type: object
      properties: {}
    EnableUserRequest:
      type: object
      required:
        - UserName
        - AuthenticationType
      title: EnableUserRequest
      properties:
        UserName:
          $ref: '#/components/schemas/Username'
          description: '<p>The email address of the user.</p> <note> <p>Users'' email addresses are case-sensitive. During login, if they specify an email address that doesn''t use the same capitalization as the email address specified when their user pool account was created, a "user does not exist" error message displays. </p> </note>'
        AuthenticationType:
          $ref: '#/components/schemas/AuthenticationType'
          description: The authentication type for the user. You must specify USERPOOL.
    ExpireSessionResult:
      type: object
      properties: {}
    ExpireSessionRequest:
      type: object
      required:
        - SessionId
      title: ExpireSessionRequest
      properties:
        SessionId:
          $ref: '#/components/schemas/String'
          description: The identifier of the streaming session.
    ListAssociatedFleetsResult:
      type: object
      properties:
        Names:
          $ref: '#/components/schemas/StringList'
          description: The name of the fleet.
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.'
    ListAssociatedFleetsRequest:
      type: object
      required:
        - StackName
      title: ListAssociatedFleetsRequest
      properties:
        StackName:
          $ref: '#/components/schemas/String'
          description: The name of the stack.
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.'
    ListAssociatedStacksResult:
      type: object
      properties:
        Names:
          $ref: '#/components/schemas/StringList'
          description: The name of the stack.
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.'
    ListAssociatedStacksRequest:
      type: object
      required:
        - FleetName
      title: ListAssociatedStacksRequest
      properties:
        FleetName:
          $ref: '#/components/schemas/String'
          description: The name of the fleet.
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.'
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          $ref: '#/components/schemas/Tags'
          description: The information about the tags.
    ListTagsForResourceRequest:
      type: object
      required:
        - ResourceArn
      title: ListTagsForResourceRequest
      properties:
        ResourceArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource.
    StartFleetResult:
      type: object
      properties: {}
    StartFleetRequest:
      type: object
      required:
        - Name
      title: StartFleetRequest
      properties:
        Name:
          $ref: '#/components/schemas/String'
          description: The name of the fleet.
    StartImageBuilderResult:
      type: object
      properties:
        ImageBuilder:
          $ref: '#/components/schemas/ImageBuilder'
          description: Information about the image builder.
    StartImageBuilderRequest:
      type: object
      required:
        - Name
      title: StartImageBuilderRequest
      properties:
        Name:
          $ref: '#/components/schemas/String'
          description: The name of the image builder.
        AppstreamAgentVersion:
          $ref: '#/components/schemas/AppstreamAgentVersion'
          description: 'The version of the AppStream 2.0 agent to use for this image builder. To use the latest version of the AppStream 2.0 agent, specify [LATEST]. '
    StopFleetResult:
      type: object
      properties: {}
    StopFleetRequest:
      type: object
      required:
        - Name
      title: StopFleetRequest
      properties:
        Name:
          $ref: '#/components/schemas/String'
          description: The name of the fleet.
    StopImageBuilderResult:
      type: object
      properties:
        ImageBuilder:
          $ref: '#/components/schemas/ImageBuilder'
          description: Information about the image builder.
    StopImageBuilderRequest:
      type: object
      required:
        - Name
      title: StopImageBuilderRequest
      properties:
        Name:
          $ref: '#/components/schemas/String'
          description: The name of the image builder.
    TagResourceResponse:
      type: object
      properties: {}
    TagResourceRequest:
      type: object
      required:
        - ResourceArn
        - Tags
      title: TagResourceRequest
      properties:
        ResourceArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource.
        Tags:
          $ref: '#/components/schemas/Tags'
          description: '<p>The tags to associate. A tag is a key-value pair, and the value is optional. For example, Environment=Test. If you do not specify a value, Environment=. </p> <p>If you do not specify a value, the value is set to an empty string.</p> <p>Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following special characters: </p> <p>_ . : / = + \ - @</p>'
    UntagResourceResponse:
      type: object
      properties: {}
    UntagResourceRequest:
      type: object
      required:
        - ResourceArn
        - TagKeys
      title: UntagResourceRequest
      properties:
        ResourceArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource.
        TagKeys:
          $ref: '#/components/schemas/TagKeyList'
          description: The tag keys for the tags to disassociate.
    UpdateDirectoryConfigResult:
      type: object
      properties:
        DirectoryConfig:
          $ref: '#/components/schemas/DirectoryConfig'
          description: Information about the Directory Config object.
    UpdateDirectoryConfigRequest:
      type: object
      required:
        - DirectoryName
      title: UpdateDirectoryConfigRequest
      properties:
        DirectoryName:
          $ref: '#/components/schemas/DirectoryName'
          description: The name of the Directory Config object.
        OrganizationalUnitDistinguishedNames:
          $ref: '#/components/schemas/OrganizationalUnitDistinguishedNamesList'
          description: The distinguished names of the organizational units for computer accounts.
        ServiceAccountCredentials:
          $ref: '#/components/schemas/ServiceAccountCredentials'
          description: The credentials for the service account used by the fleet or image builder to connect to the directory.
    UpdateFleetResult:
      type: object
      properties:
        Fleet:
          $ref: '#/components/schemas/Fleet'
          description: Information about the fleet.
    UpdateFleetRequest:
      type: object
      title: UpdateFleetRequest
      properties:
        ImageName:
          $ref: '#/components/schemas/String'
          description: The name of the image used to create the fleet.
        ImageArn:
          $ref: '#/components/schemas/Arn'
          description: 'The ARN of the public, private, or shared image to use.'
        Name:
          $ref: '#/components/schemas/String'
          description: A unique name for the fleet.
        InstanceType:
          $ref: '#/components/schemas/String'
          description: '<p>The instance type to use when launching fleet instances. The following instance types are available:</p> <ul> <li> <p>stream.standard.small</p> </li> <li> <p>stream.standard.medium</p> </li> <li> <p>stream.standard.large</p> </li> <li> <p>stream.compute.large</p> </li> <li> <p>stream.compute.xlarge</p> </li> <li> <p>stream.compute.2xlarge</p> </li> <li> <p>stream.compute.4xlarge</p> </li> <li> <p>stream.compute.8xlarge</p> </li> <li> <p>stream.memory.large</p> </li> <li> <p>stream.memory.xlarge</p> </li> <li> <p>stream.memory.2xlarge</p> </li> <li> <p>stream.memory.4xlarge</p> </li> <li> <p>stream.memory.8xlarge</p> </li> <li> <p>stream.memory.z1d.large</p> </li> <li> <p>stream.memory.z1d.xlarge</p> </li> <li> <p>stream.memory.z1d.2xlarge</p> </li> <li> <p>stream.memory.z1d.3xlarge</p> </li> <li> <p>stream.memory.z1d.6xlarge</p> </li> <li> <p>stream.memory.z1d.12xlarge</p> </li> <li> <p>stream.graphics-design.large</p> </li> <li> <p>stream.graphics-design.xlarge</p> </li> <li> <p>stream.graphics-design.2xlarge</p> </li> <li> <p>stream.graphics-design.4xlarge</p> </li> <li> <p>stream.graphics-desktop.2xlarge</p> </li> <li> <p>stream.graphics.g4dn.xlarge</p> </li> <li> <p>stream.graphics.g4dn.2xlarge</p> </li> <li> <p>stream.graphics.g4dn.4xlarge</p> </li> <li> <p>stream.graphics.g4dn.8xlarge</p> </li> <li> <p>stream.graphics.g4dn.12xlarge</p> </li> <li> <p>stream.graphics.g4dn.16xlarge</p> </li> <li> <p>stream.graphics-pro.4xlarge</p> </li> <li> <p>stream.graphics-pro.8xlarge</p> </li> <li> <p>stream.graphics-pro.16xlarge</p> </li> </ul>'
        ComputeCapacity:
          $ref: '#/components/schemas/ComputeCapacity'
          description: The desired capacity for the fleet.
        VpcConfig:
          $ref: '#/components/schemas/VpcConfig'
          description: The VPC configuration for the fleet.
        MaxUserDurationInSeconds:
          $ref: '#/components/schemas/Integer'
          description: '<p>The maximum amount of time that a streaming session can remain active, in seconds. If users are still connected to a streaming instance five minutes before this limit is reached, they are prompted to save any open documents before being disconnected. After this time elapses, the instance is terminated and replaced by a new instance.</p> <p>Specify a value between 600 and 360000.</p>'
        DisconnectTimeoutInSeconds:
          $ref: '#/components/schemas/Integer'
          description: '<p>The amount of time that a streaming session remains active after users disconnect. If users try to reconnect to the streaming session after a disconnection or network interruption within this time interval, they are connected to their previous session. Otherwise, they are connected to a new session with a new streaming instance. </p> <p>Specify a value between 60 and 360000.</p>'
        DeleteVpcConfig:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - deprecated: true
              description: Deletes the VPC association for the specified fleet.
        Description:
          $ref: '#/components/schemas/Description'
          description: The description to display.
        DisplayName:
          $ref: '#/components/schemas/DisplayName'
          description: The fleet name to display.
        EnableDefaultInternetAccess:
          $ref: '#/components/schemas/BooleanObject'
          description: Enables or disables default internet access for the fleet.
        DomainJoinInfo:
          $ref: '#/components/schemas/DomainJoinInfo'
          description: 'The name of the directory and organizational unit (OU) to use to join the fleet to a Microsoft Active Directory domain. '
        IdleDisconnectTimeoutInSeconds:
          $ref: '#/components/schemas/Integer'
          description: '<p>The amount of time that users can be idle (inactive) before they are disconnected from their streaming session and the <code>DisconnectTimeoutInSeconds</code> time interval begins. Users are notified before they are disconnected due to inactivity. If users try to reconnect to the streaming session before the time interval specified in <code>DisconnectTimeoutInSeconds</code> elapses, they are connected to their previous session. Users are considered idle when they stop providing keyboard or mouse input during their streaming session. File uploads and downloads, audio in, audio out, and pixels changing do not qualify as user activity. If users continue to be idle after the time interval in <code>IdleDisconnectTimeoutInSeconds</code> elapses, they are disconnected. </p> <p>To prevent users from being disconnected due to inactivity, specify a value of 0. Otherwise, specify a value between 60 and 3600. The default value is 0.</p> <note> <p>If you enable this feature, we recommend that you specify a value that corresponds exactly to a whole number of minutes (for example, 60, 120, and 180). If you don''t do this, the value is rounded to the nearest minute. For example, if you specify a value of 70, users are disconnected after 1 minute of inactivity. If you specify a value that is at the midpoint between two different minutes, the value is rounded up. For example, if you specify a value of 90, users are disconnected after 2 minutes of inactivity. </p> </note>'
        AttributesToDelete:
          $ref: '#/components/schemas/FleetAttributes'
          description: The fleet attributes to delete.
        IamRoleArn:
          $ref: '#/components/schemas/Arn'
          description: '<p>The Amazon Resource Name (ARN) of the IAM role to apply to the fleet. To assume a role, a fleet instance calls the AWS Security Token Service (STS) <code>AssumeRole</code> API operation and passes the ARN of the role to use. The operation creates a new session with temporary credentials. AppStream 2.0 retrieves the temporary credentials and creates the <b>appstream_machine_role</b> credential profile on the instance.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/appstream2/latest/developerguide/using-iam-roles-to-grant-permissions-to-applications-scripts-streaming-instances.html">Using an IAM Role to Grant Permissions to Applications and Scripts Running on AppStream 2.0 Streaming Instances</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.</p>'
        StreamView:
          $ref: '#/components/schemas/StreamView'
          description: '<p>The AppStream 2.0 view that is displayed to your users when they stream from the fleet. When <code>APP</code> is specified, only the windows of applications opened by users display. When <code>DESKTOP</code> is specified, the standard desktop that is provided by the operating system displays.</p> <p>The default value is <code>APP</code>.</p>'
    UpdateImagePermissionsResult:
      type: object
      properties: {}
    UpdateImagePermissionsRequest:
      type: object
      required:
        - Name
        - SharedAccountId
        - ImagePermissions
      title: UpdateImagePermissionsRequest
      properties:
        Name:
          $ref: '#/components/schemas/Name'
          description: The name of the private image.
        SharedAccountId:
          $ref: '#/components/schemas/AwsAccountId'
          description: The 12-digit identifier of the AWS account for which you want add or update image permissions.
        ImagePermissions:
          $ref: '#/components/schemas/ImagePermissions'
          description: The permissions for the image.
    UpdateStackResult:
      type: object
      properties:
        Stack:
          $ref: '#/components/schemas/Stack'
          description: Information about the stack.
    UpdateStackRequest:
      type: object
      required:
        - Name
      title: UpdateStackRequest
      properties:
        DisplayName:
          $ref: '#/components/schemas/DisplayName'
          description: The stack name to display.
        Description:
          $ref: '#/components/schemas/Description'
          description: The description to display.
        Name:
          $ref: '#/components/schemas/String'
          description: The name of the stack.
        StorageConnectors:
          $ref: '#/components/schemas/StorageConnectorList'
          description: The storage connectors to enable.
        DeleteStorageConnectors:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - deprecated: true
              description: Deletes the storage connectors currently enabled for the stack.
        RedirectURL:
          $ref: '#/components/schemas/RedirectURL'
          description: The URL that users are redirected to after their streaming session ends.
        FeedbackURL:
          $ref: '#/components/schemas/FeedbackURL'
          description: 'The URL that users are redirected to after they choose the Send Feedback link. If no URL is specified, no Send Feedback link is displayed.'
        AttributesToDelete:
          $ref: '#/components/schemas/StackAttributes'
          description: The stack attributes to delete.
        UserSettings:
          $ref: '#/components/schemas/UserSettingList'
          description: 'The actions that are enabled or disabled for users during their streaming sessions. By default, these actions are enabled.'
        ApplicationSettings:
          $ref: '#/components/schemas/ApplicationSettings'
          description: 'The persistent application settings for users of a stack. When these settings are enabled, changes that users make to applications and Windows settings are automatically saved after each session and applied to the next session.'
        AccessEndpoints:
          $ref: '#/components/schemas/AccessEndpointList'
          description: The list of interface VPC endpoint (interface endpoint) objects. Users of the stack can connect to AppStream 2.0 only through the specified endpoints.
        EmbedHostDomains:
          $ref: '#/components/schemas/EmbedHostDomains'
          description: 'The domains where AppStream 2.0 streaming sessions can be embedded in an iframe. You must approve the domains that you want to host embedded AppStream 2.0 streaming sessions. '
    AccessEndpointType:
      type: string
      enum:
        - STREAMING
    String:
      type: string
      minLength: 1
    AccessEndpoint:
      type: object
      required:
        - EndpointType
      properties:
        EndpointType:
          $ref: '#/components/schemas/AccessEndpointType'
          description: The type of interface endpoint.
        VpceId:
          $ref: '#/components/schemas/String'
          description: The identifier (ID) of the VPC in which the interface endpoint is used.
      description: 'Describes an interface VPC endpoint (interface endpoint) that lets you create a private connection between the virtual private cloud (VPC) that you specify and AppStream 2.0. When you specify an interface endpoint for a stack, users of the stack can connect to AppStream 2.0 only through that endpoint. When you specify an interface endpoint for an image builder, administrators can connect to the image builder only through that endpoint.'
    AccessEndpointList:
      type: array
      items:
        $ref: '#/components/schemas/AccessEndpoint'
      minItems: 1
      maxItems: 4
    AccountName:
      type: string
      minLength: 1
      format: password
    AccountPassword:
      type: string
      minLength: 1
      maxLength: 127
      format: password
    Action:
      type: string
      enum:
        - CLIPBOARD_COPY_FROM_LOCAL_DEVICE
        - CLIPBOARD_COPY_TO_LOCAL_DEVICE
        - FILE_UPLOAD
        - FILE_DOWNLOAD
        - PRINTING_TO_LOCAL_DEVICE
        - DOMAIN_PASSWORD_SIGNIN
        - DOMAIN_SMART_CARD_SIGNIN
    Boolean:
      type: boolean
    Metadata:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    Application:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/String'
          description: The name of the application.
        DisplayName:
          $ref: '#/components/schemas/String'
          description: The application name to display.
        IconURL:
          $ref: '#/components/schemas/String'
          description: The URL for the application icon. This URL might be time-limited.
        LaunchPath:
          $ref: '#/components/schemas/String'
          description: The path to the application executable in the instance.
        LaunchParameters:
          $ref: '#/components/schemas/String'
          description: The arguments that are passed to the application at launch.
        Enabled:
          $ref: '#/components/schemas/Boolean'
          description: 'If there is a problem, the application can be disabled after image creation.'
        Metadata:
          $ref: '#/components/schemas/Metadata'
          description: Additional attributes that describe the application.
      description: Describes an application in the application catalog.
    SettingsGroup:
      type: string
      maxLength: 100
    ApplicationSettings:
      type: object
      required:
        - Enabled
      properties:
        Enabled:
          $ref: '#/components/schemas/Boolean'
          description: 'Enables or disables persistent application settings for users during their streaming sessions. '
        SettingsGroup:
          $ref: '#/components/schemas/SettingsGroup'
          description: 'The path prefix for the S3 bucket where users’ persistent application settings are stored. You can allow the same persistent application settings to be used across multiple stacks by specifying the same settings group for each stack. '
      description: The persistent application settings for users of a stack.
    ApplicationSettingsResponse:
      type: object
      properties:
        Enabled:
          $ref: '#/components/schemas/Boolean'
          description: Specifies whether persistent application settings are enabled for users during their streaming sessions.
        SettingsGroup:
          $ref: '#/components/schemas/SettingsGroup'
          description: The path prefix for the S3 bucket where users’ persistent application settings are stored.
        S3BucketName:
          $ref: '#/components/schemas/String'
          description: 'The S3 bucket where users’ persistent application settings are stored. When persistent application settings are enabled for the first time for an account in an AWS Region, an S3 bucket is created. The bucket is unique to the AWS account and the Region. '
      description: Describes the persistent application settings for users of a stack.
    Applications:
      type: array
      items:
        $ref: '#/components/schemas/Application'
    AppstreamAgentVersion:
      type: string
      minLength: 1
      maxLength: 100
    Arn:
      type: string
      pattern: '^arn:aws(?:\-cn|\-iso\-b|\-iso|\-us\-gov)?:[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.\\-]{0,1023}$'
    ArnList:
      type: array
      items:
        $ref: '#/components/schemas/Arn'
    AuthenticationType:
      type: string
      enum:
        - API
        - SAML
        - USERPOOL
    AwsAccountId:
      type: string
      pattern: ^\d+$
    AwsAccountIdList:
      type: array
      items:
        $ref: '#/components/schemas/AwsAccountId'
      minItems: 1
      maxItems: 5
    UserStackAssociationList:
      type: array
      items:
        $ref: '#/components/schemas/UserStackAssociation'
      minItems: 1
      maxItems: 25
    UserStackAssociationErrorList:
      type: array
      items:
        $ref: '#/components/schemas/UserStackAssociationError'
    BooleanObject:
      type: boolean
    Integer:
      type: integer
    ComputeCapacity:
      type: object
      required:
        - DesiredInstances
      properties:
        DesiredInstances:
          $ref: '#/components/schemas/Integer'
          description: The desired number of streaming instances.
      description: Describes the capacity for a fleet.
    ComputeCapacityStatus:
      type: object
      required:
        - Desired
      properties:
        Desired:
          $ref: '#/components/schemas/Integer'
          description: The desired number of streaming instances.
        Running:
          $ref: '#/components/schemas/Integer'
          description: The total number of simultaneous streaming instances that are running.
        InUse:
          $ref: '#/components/schemas/Integer'
          description: The number of instances in use for streaming.
        Available:
          $ref: '#/components/schemas/Integer'
          description: The number of currently available instances that can be used to stream sessions.
      description: Describes the capacity status for a fleet.
    Name:
      type: string
      pattern: '^[a-zA-Z0-9][a-zA-Z0-9_.-]{0,100}$'
    RegionName:
      type: string
      minLength: 1
      maxLength: 32
    Description:
      type: string
      maxLength: 256
    DirectoryName:
      type: string
    OrganizationalUnitDistinguishedNamesList:
      type: array
      items:
        $ref: '#/components/schemas/OrganizationalUnitDistinguishedName'
    ServiceAccountCredentials:
      type: object
      required:
        - AccountName
        - AccountPassword
      properties:
        AccountName:
          $ref: '#/components/schemas/AccountName'
          description: 'The user name of the account. This account must have the following privileges: create computer objects, join computers to the domain, and change/reset the password on descendant computer objects for the organizational units specified.'
        AccountPassword:
          $ref: '#/components/schemas/AccountPassword'
          description: The password for the account.
      description: Describes the credentials for the service account used by the fleet or image builder to connect to the directory.
    DirectoryConfig:
      type: object
      required:
        - DirectoryName
      properties:
        DirectoryName:
          $ref: '#/components/schemas/DirectoryName'
          description: 'The fully qualified name of the directory (for example, corp.example.com).'
        OrganizationalUnitDistinguishedNames:
          $ref: '#/components/schemas/OrganizationalUnitDistinguishedNamesList'
          description: The distinguished names of the organizational units for computer accounts.
        ServiceAccountCredentials:
          $ref: '#/components/schemas/ServiceAccountCredentials'
          description: The credentials for the service account used by the fleet or image builder to connect to the directory.
        CreatedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time the directory configuration was created.
      description: Describes the configuration information required to join fleets and image builders to Microsoft Active Directory domains.
    FleetType:
      type: string
      enum:
        - ALWAYS_ON
        - ON_DEMAND
    VpcConfig:
      type: object
      properties:
        SubnetIds:
          $ref: '#/components/schemas/SubnetIdList'
          description: The identifiers of the subnets to which a network interface is attached from the fleet instance or image builder instance. Fleet instances use one or more subnets. Image builder instances use one subnet.
        SecurityGroupIds:
          $ref: '#/components/schemas/SecurityGroupIdList'
          description: The identifiers of the security groups for the fleet or image builder.
      description: Describes VPC configuration information for fleets and image builders.
    DisplayName:
      type: string
      maxLength: 100
    DomainJoinInfo:
      type: object
      properties:
        DirectoryName:
          $ref: '#/components/schemas/DirectoryName'
          description: 'The fully qualified name of the directory (for example, corp.example.com).'
        OrganizationalUnitDistinguishedName:
          $ref: '#/components/schemas/OrganizationalUnitDistinguishedName'
          description: The distinguished name of the organizational unit for computer accounts.
      description: Describes the configuration information required to join fleets and image builders to Microsoft Active Directory domains.
    Tags:
      type: object
      minProperties: 1
      maxProperties: 50
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    StreamView:
      type: string
      enum:
        - APP
        - DESKTOP
    Fleet:
      type: object
      required:
        - Arn
        - Name
        - InstanceType
        - ComputeCapacityStatus
        - State
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) for the fleet.
        Name:
          $ref: '#/components/schemas/String'
          description: The name of the fleet.
        DisplayName:
          $ref: '#/components/schemas/String'
          description: The fleet name to display.
        Description:
          $ref: '#/components/schemas/String'
          description: The description to display.
        ImageName:
          $ref: '#/components/schemas/String'
          description: The name of the image used to create the fleet.
        ImageArn:
          $ref: '#/components/schemas/Arn'
          description: 'The ARN for the public, private, or shared image.'
        InstanceType:
          $ref: '#/components/schemas/String'
          description: '<p>The instance type to use when launching fleet instances. The following instance types are available:</p> <ul> <li> <p>stream.standard.small</p> </li> <li> <p>stream.standard.medium</p> </li> <li> <p>stream.standard.large</p> </li> <li> <p>stream.compute.large</p> </li> <li> <p>stream.compute.xlarge</p> </li> <li> <p>stream.compute.2xlarge</p> </li> <li> <p>stream.compute.4xlarge</p> </li> <li> <p>stream.compute.8xlarge</p> </li> <li> <p>stream.memory.large</p> </li> <li> <p>stream.memory.xlarge</p> </li> <li> <p>stream.memory.2xlarge</p> </li> <li> <p>stream.memory.4xlarge</p> </li> <li> <p>stream.memory.8xlarge</p> </li> <li> <p>stream.memory.z1d.large</p> </li> <li> <p>stream.memory.z1d.xlarge</p> </li> <li> <p>stream.memory.z1d.2xlarge</p> </li> <li> <p>stream.memory.z1d.3xlarge</p> </li> <li> <p>stream.memory.z1d.6xlarge</p> </li> <li> <p>stream.memory.z1d.12xlarge</p> </li> <li> <p>stream.graphics-design.large</p> </li> <li> <p>stream.graphics-design.xlarge</p> </li> <li> <p>stream.graphics-design.2xlarge</p> </li> <li> <p>stream.graphics-design.4xlarge</p> </li> <li> <p>stream.graphics-desktop.2xlarge</p> </li> <li> <p>stream.graphics.g4dn.xlarge</p> </li> <li> <p>stream.graphics.g4dn.2xlarge</p> </li> <li> <p>stream.graphics.g4dn.4xlarge</p> </li> <li> <p>stream.graphics.g4dn.8xlarge</p> </li> <li> <p>stream.graphics.g4dn.12xlarge</p> </li> <li> <p>stream.graphics.g4dn.16xlarge</p> </li> <li> <p>stream.graphics-pro.4xlarge</p> </li> <li> <p>stream.graphics-pro.8xlarge</p> </li> <li> <p>stream.graphics-pro.16xlarge</p> </li> </ul>'
        FleetType:
          $ref: '#/components/schemas/FleetType'
          description: '<p>The fleet type.</p> <dl> <dt>ALWAYS_ON</dt> <dd> <p>Provides users with instant-on access to their apps. You are charged for all running instances in your fleet, even if no users are streaming apps.</p> </dd> <dt>ON_DEMAND</dt> <dd> <p>Provide users with access to applications after they connect, which takes one to two minutes. You are charged for instance streaming when users are connected and a small hourly fee for instances that are not streaming apps.</p> </dd> </dl>'
        ComputeCapacityStatus:
          $ref: '#/components/schemas/ComputeCapacityStatus'
          description: The capacity status for the fleet.
        MaxUserDurationInSeconds:
          $ref: '#/components/schemas/Integer'
          description: '<p>The maximum amount of time that a streaming session can remain active, in seconds. If users are still connected to a streaming instance five minutes before this limit is reached, they are prompted to save any open documents before being disconnected. After this time elapses, the instance is terminated and replaced by a new instance. </p> <p>Specify a value between 600 and 360000.</p>'
        DisconnectTimeoutInSeconds:
          $ref: '#/components/schemas/Integer'
          description: '<p>The amount of time that a streaming session remains active after users disconnect. If they try to reconnect to the streaming session after a disconnection or network interruption within this time interval, they are connected to their previous session. Otherwise, they are connected to a new session with a new streaming instance.</p> <p>Specify a value between 60 and 360000.</p>'
        State:
          $ref: '#/components/schemas/FleetState'
          description: The current state for the fleet.
        VpcConfig:
          $ref: '#/components/schemas/VpcConfig'
          description: The VPC configuration for the fleet.
        CreatedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time the fleet was created.
        FleetErrors:
          $ref: '#/components/schemas/FleetErrors'
          description: The fleet errors.
        EnableDefaultInternetAccess:
          $ref: '#/components/schemas/BooleanObject'
          description: Indicates whether default internet access is enabled for the fleet.
        DomainJoinInfo:
          $ref: '#/components/schemas/DomainJoinInfo'
          description: 'The name of the directory and organizational unit (OU) to use to join the fleet to a Microsoft Active Directory domain. '
        IdleDisconnectTimeoutInSeconds:
          $ref: '#/components/schemas/Integer'
          description: '<p>The amount of time that users can be idle (inactive) before they are disconnected from their streaming session and the <code>DisconnectTimeoutInSeconds</code> time interval begins. Users are notified before they are disconnected due to inactivity. If users try to reconnect to the streaming session before the time interval specified in <code>DisconnectTimeoutInSeconds</code> elapses, they are connected to their previous session. Users are considered idle when they stop providing keyboard or mouse input during their streaming session. File uploads and downloads, audio in, audio out, and pixels changing do not qualify as user activity. If users continue to be idle after the time interval in <code>IdleDisconnectTimeoutInSeconds</code> elapses, they are disconnected.</p> <p>To prevent users from being disconnected due to inactivity, specify a value of 0. Otherwise, specify a value between 60 and 3600. The default value is 0.</p> <note> <p>If you enable this feature, we recommend that you specify a value that corresponds exactly to a whole number of minutes (for example, 60, 120, and 180). If you don''t do this, the value is rounded to the nearest minute. For example, if you specify a value of 70, users are disconnected after 1 minute of inactivity. If you specify a value that is at the midpoint between two different minutes, the value is rounded up. For example, if you specify a value of 90, users are disconnected after 2 minutes of inactivity. </p> </note>'
        IamRoleArn:
          $ref: '#/components/schemas/Arn'
          description: '<p>The ARN of the IAM role that is applied to the fleet. To assume a role, the fleet instance calls the AWS Security Token Service (STS) <code>AssumeRole</code> API operation and passes the ARN of the role to use. The operation creates a new session with temporary credentials. AppStream 2.0 retrieves the temporary credentials and creates the <b>appstream_machine_role</b> credential profile on the instance.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/appstream2/latest/developerguide/using-iam-roles-to-grant-permissions-to-applications-scripts-streaming-instances.html">Using an IAM Role to Grant Permissions to Applications and Scripts Running on AppStream 2.0 Streaming Instances</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.</p>'
        StreamView:
          $ref: '#/components/schemas/StreamView'
          description: '<p>The AppStream 2.0 view that is displayed to your users when they stream from the fleet. When <code>APP</code> is specified, only the windows of applications opened by users display. When <code>DESKTOP</code> is specified, the standard desktop that is provided by the operating system displays.</p> <p>The default value is <code>APP</code>.</p>'
      description: Describes a fleet.
    ImageBuilder:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/String'
          description: The name of the image builder.
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The ARN for the image builder.
        ImageArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the image from which this builder was created.
        Description:
          $ref: '#/components/schemas/String'
          description: The description to display.
        DisplayName:
          $ref: '#/components/schemas/String'
          description: The image builder name to display.
        VpcConfig:
          $ref: '#/components/schemas/VpcConfig'
          description: The VPC configuration of the image builder.
        InstanceType:
          $ref: '#/components/schemas/String'
          description: '<p>The instance type for the image builder. The following instance types are available:</p> <ul> <li> <p>stream.standard.small</p> </li> <li> <p>stream.standard.medium</p> </li> <li> <p>stream.standard.large</p> </li> <li> <p>stream.compute.large</p> </li> <li> <p>stream.compute.xlarge</p> </li> <li> <p>stream.compute.2xlarge</p> </li> <li> <p>stream.compute.4xlarge</p> </li> <li> <p>stream.compute.8xlarge</p> </li> <li> <p>stream.memory.large</p> </li> <li> <p>stream.memory.xlarge</p> </li> <li> <p>stream.memory.2xlarge</p> </li> <li> <p>stream.memory.4xlarge</p> </li> <li> <p>stream.memory.8xlarge</p> </li> <li> <p>stream.memory.z1d.large</p> </li> <li> <p>stream.memory.z1d.xlarge</p> </li> <li> <p>stream.memory.z1d.2xlarge</p> </li> <li> <p>stream.memory.z1d.3xlarge</p> </li> <li> <p>stream.memory.z1d.6xlarge</p> </li> <li> <p>stream.memory.z1d.12xlarge</p> </li> <li> <p>stream.graphics-design.large</p> </li> <li> <p>stream.graphics-design.xlarge</p> </li> <li> <p>stream.graphics-design.2xlarge</p> </li> <li> <p>stream.graphics-design.4xlarge</p> </li> <li> <p>stream.graphics-desktop.2xlarge</p> </li> <li> <p>stream.graphics.g4dn.xlarge</p> </li> <li> <p>stream.graphics.g4dn.2xlarge</p> </li> <li> <p>stream.graphics.g4dn.4xlarge</p> </li> <li> <p>stream.graphics.g4dn.8xlarge</p> </li> <li> <p>stream.graphics.g4dn.12xlarge</p> </li> <li> <p>stream.graphics.g4dn.16xlarge</p> </li> <li> <p>stream.graphics-pro.4xlarge</p> </li> <li> <p>stream.graphics-pro.8xlarge</p> </li> <li> <p>stream.graphics-pro.16xlarge</p> </li> </ul>'
        Platform:
          $ref: '#/components/schemas/PlatformType'
          description: The operating system platform of the image builder.
        IamRoleArn:
          $ref: '#/components/schemas/Arn'
          description: '<p>The ARN of the IAM role that is applied to the image builder. To assume a role, the image builder calls the AWS Security Token Service (STS) <code>AssumeRole</code> API operation and passes the ARN of the role to use. The operation creates a new session with temporary credentials. AppStream 2.0 retrieves the temporary credentials and creates the <b>appstream_machine_role</b> credential profile on the instance.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/appstream2/latest/developerguide/using-iam-roles-to-grant-permissions-to-applications-scripts-streaming-instances.html">Using an IAM Role to Grant Permissions to Applications and Scripts Running on AppStream 2.0 Streaming Instances</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.</p>'
        State:
          $ref: '#/components/schemas/ImageBuilderState'
          description: The state of the image builder.
        StateChangeReason:
          $ref: '#/components/schemas/ImageBuilderStateChangeReason'
          description: The reason why the last state change occurred.
        CreatedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time stamp when the image builder was created.
        EnableDefaultInternetAccess:
          $ref: '#/components/schemas/BooleanObject'
          description: Enables or disables default internet access for the image builder.
        DomainJoinInfo:
          $ref: '#/components/schemas/DomainJoinInfo'
          description: 'The name of the directory and organizational unit (OU) to use to join the image builder to a Microsoft Active Directory domain. '
        NetworkAccessConfiguration:
          $ref: '#/components/schemas/NetworkAccessConfiguration'
        ImageBuilderErrors:
          $ref: '#/components/schemas/ResourceErrors'
          description: The image builder errors.
        AppstreamAgentVersion:
          $ref: '#/components/schemas/AppstreamAgentVersion'
          description: 'The version of the AppStream 2.0 agent that is currently being used by the image builder. '
        AccessEndpoints:
          $ref: '#/components/schemas/AccessEndpointList'
          description: The list of virtual private cloud (VPC) interface endpoint objects. Administrators can connect to the image builder only through the specified endpoints.
      description: 'Describes a virtual machine that is used to create an image. '
    Long:
      type: integer
    Timestamp:
      type: string
      format: date-time
    StorageConnectorList:
      type: array
      description: The storage connectors.
      items:
        $ref: '#/components/schemas/StorageConnector'
    RedirectURL:
      type: string
      maxLength: 1000
    FeedbackURL:
      type: string
      maxLength: 1000
    UserSettingList:
      type: array
      items:
        $ref: '#/components/schemas/UserSetting'
      minItems: 1
    EmbedHostDomains:
      type: array
      items:
        $ref: '#/components/schemas/EmbedHostDomain'
      minItems: 1
      maxItems: 20
    Stack:
      type: object
      required:
        - Name
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the stack.
        Name:
          $ref: '#/components/schemas/String'
          description: The name of the stack.
        Description:
          $ref: '#/components/schemas/String'
          description: The description to display.
        DisplayName:
          $ref: '#/components/schemas/String'
          description: The stack name to display.
        CreatedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time the stack was created.
        StorageConnectors:
          $ref: '#/components/schemas/StorageConnectorList'
          description: The storage connectors to enable.
        RedirectURL:
          $ref: '#/components/schemas/RedirectURL'
          description: The URL that users are redirected to after their streaming session ends.
        FeedbackURL:
          $ref: '#/components/schemas/FeedbackURL'
          description: 'The URL that users are redirected to after they click the Send Feedback link. If no URL is specified, no Send Feedback link is displayed.'
        StackErrors:
          $ref: '#/components/schemas/StackErrors'
          description: The errors for the stack.
        UserSettings:
          $ref: '#/components/schemas/UserSettingList'
          description: The actions that are enabled or disabled for users during their streaming sessions. By default these actions are enabled.
        ApplicationSettings:
          $ref: '#/components/schemas/ApplicationSettingsResponse'
          description: The persistent application settings for users of the stack.
        AccessEndpoints:
          $ref: '#/components/schemas/AccessEndpointList'
          description: 'The list of virtual private cloud (VPC) interface endpoint objects. Users of the stack can connect to AppStream 2.0 only through the specified endpoints. '
        EmbedHostDomains:
          $ref: '#/components/schemas/EmbedHostDomains'
          description: The domains where AppStream 2.0 streaming sessions can be embedded in an iframe. You must approve the domains that you want to host embedded AppStream 2.0 streaming sessions.
      description: Describes a stack.
    StreamingUrlUserId:
      type: string
      pattern: '[\w+=,.@-]*'
      minLength: 2
      maxLength: 32
    Image:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/String'
          description: The name of the image.
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the image.
        BaseImageArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the image from which this image was created.
        DisplayName:
          $ref: '#/components/schemas/String'
          description: The image name to display.
        State:
          $ref: '#/components/schemas/ImageState'
          description: 'The image starts in the <code>PENDING</code> state. If image creation succeeds, the state is <code>AVAILABLE</code>. If image creation fails, the state is <code>FAILED</code>.'
        Visibility:
          $ref: '#/components/schemas/VisibilityType'
          description: Indicates whether the image is public or private.
        ImageBuilderSupported:
          $ref: '#/components/schemas/Boolean'
          description: Indicates whether an image builder can be launched from this image.
        ImageBuilderName:
          $ref: '#/components/schemas/String'
          description: 'The name of the image builder that was used to create the private image. If the image is shared, this value is null.'
        Platform:
          $ref: '#/components/schemas/PlatformType'
          description: The operating system platform of the image.
        Description:
          $ref: '#/components/schemas/String'
          description: The description to display.
        StateChangeReason:
          $ref: '#/components/schemas/ImageStateChangeReason'
          description: The reason why the last state change occurred.
        Applications:
          $ref: '#/components/schemas/Applications'
          description: The applications associated with the image.
        CreatedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time the image was created.
        PublicBaseImageReleasedDate:
          $ref: '#/components/schemas/Timestamp'
          description: 'The release date of the public base image. For private images, this date is the release date of the base image from which the image was created.'
        AppstreamAgentVersion:
          $ref: '#/components/schemas/AppstreamAgentVersion'
          description: 'The version of the AppStream 2.0 agent to use for instances that are launched from this image. '
        ImagePermissions:
          $ref: '#/components/schemas/ImagePermissions'
          description: The permissions to provide to the destination AWS account for the specified image.
        ImageErrors:
          $ref: '#/components/schemas/ResourceErrors'
          description: Describes the errors that are returned when a new image can't be created.
      description: Describes an image.
    UsageReportSchedule:
      type: string
      enum:
        - DAILY
    Username:
      type: string
      pattern: '[\p{L}\p{M}\p{S}\p{N}\p{P}]+'
      minLength: 1
      maxLength: 128
      format: password
    MessageAction:
      type: string
      enum:
        - SUPPRESS
        - RESEND
    UserAttributeValue:
      type: string
      pattern: '^[A-Za-z0-9_\-\s]+$'
      maxLength: 2048
      format: password
    DirectoryNameList:
      type: array
      items:
        $ref: '#/components/schemas/DirectoryName'
    DirectoryConfigList:
      type: array
      items:
        $ref: '#/components/schemas/DirectoryConfig'
    StringList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    FleetList:
      type: array
      description: The fleets.
      items:
        $ref: '#/components/schemas/Fleet'
    ImageBuilderList:
      type: array
      items:
        $ref: '#/components/schemas/ImageBuilder'
    MaxResults:
      type: integer
      minimum: 0
      maximum: 500
    SharedImagePermissionsList:
      type: array
      items:
        $ref: '#/components/schemas/SharedImagePermissions'
    DescribeImagesMaxResults:
      type: integer
      minimum: 0
      maximum: 25
    VisibilityType:
      type: string
      enum:
        - PUBLIC
        - PRIVATE
        - SHARED
    ImageList:
      type: array
      items:
        $ref: '#/components/schemas/Image'
    UserId:
      type: string
      minLength: 2
      maxLength: 128
    SessionList:
      type: array
      description: List of sessions.
      items:
        $ref: '#/components/schemas/Session'
    StackList:
      type: array
      description: The stacks.
      items:
        $ref: '#/components/schemas/Stack'
    UsageReportSubscriptionList:
      type: array
      items:
        $ref: '#/components/schemas/UsageReportSubscription'
    UserList:
      type: array
      items:
        $ref: '#/components/schemas/User'
    Domain:
      type: string
      description: GSuite domain for GDrive integration.
      minLength: 1
      maxLength: 64
    OrganizationalUnitDistinguishedName:
      type: string
      maxLength: 2000
    DomainList:
      type: array
      items:
        $ref: '#/components/schemas/Domain'
      maxItems: 50
    EmbedHostDomain:
      type: string
      pattern: '(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]'
      description: 'Specifies a valid domain that can embed AppStream. Valid examples include: ["testorigin.tt--com", "testingorigin.com.us", "test.com.us"] Invalid examples include: ["test,com", ".com", "h*llo.com". ""]'
      maxLength: 128
    FleetState:
      type: string
      enum:
        - STARTING
        - RUNNING
        - STOPPING
        - STOPPED
    FleetErrors:
      type: array
      items:
        $ref: '#/components/schemas/FleetError'
    FleetAttribute:
      type: string
      enum:
        - VPC_CONFIGURATION
        - VPC_CONFIGURATION_SECURITY_GROUP_IDS
        - DOMAIN_JOIN_INFO
        - IAM_ROLE_ARN
      description: The fleet attribute.
    FleetAttributes:
      type: array
      description: The fleet attributes.
      items:
        $ref: '#/components/schemas/FleetAttribute'
    FleetErrorCode:
      type: string
      enum:
        - IAM_SERVICE_ROLE_MISSING_ENI_DESCRIBE_ACTION
        - IAM_SERVICE_ROLE_MISSING_ENI_CREATE_ACTION
        - IAM_SERVICE_ROLE_MISSING_ENI_DELETE_ACTION
        - NETWORK_INTERFACE_LIMIT_EXCEEDED
        - INTERNAL_SERVICE_ERROR
        - IAM_SERVICE_ROLE_IS_MISSING
        - MACHINE_ROLE_IS_MISSING
        - STS_DISABLED_IN_REGION
        - SUBNET_HAS_INSUFFICIENT_IP_ADDRESSES
        - IAM_SERVICE_ROLE_MISSING_DESCRIBE_SUBNET_ACTION
        - SUBNET_NOT_FOUND
        - IMAGE_NOT_FOUND
        - INVALID_SUBNET_CONFIGURATION
        - SECURITY_GROUPS_NOT_FOUND
        - IGW_NOT_ATTACHED
        - IAM_SERVICE_ROLE_MISSING_DESCRIBE_SECURITY_GROUPS_ACTION
        - FLEET_STOPPED
        - FLEET_INSTANCE_PROVISIONING_FAILURE
        - DOMAIN_JOIN_ERROR_FILE_NOT_FOUND
        - DOMAIN_JOIN_ERROR_ACCESS_DENIED
        - DOMAIN_JOIN_ERROR_LOGON_FAILURE
        - DOMAIN_JOIN_ERROR_INVALID_PARAMETER
        - DOMAIN_JOIN_ERROR_MORE_DATA
        - DOMAIN_JOIN_ERROR_NO_SUCH_DOMAIN
        - DOMAIN_JOIN_ERROR_NOT_SUPPORTED
        - DOMAIN_JOIN_NERR_INVALID_WORKGROUP_NAME
        - DOMAIN_JOIN_NERR_WORKSTATION_NOT_STARTED
        - DOMAIN_JOIN_ERROR_DS_MACHINE_ACCOUNT_QUOTA_EXCEEDED
        - DOMAIN_JOIN_NERR_PASSWORD_EXPIRED
        - DOMAIN_JOIN_INTERNAL_SERVICE_ERROR
    FleetError:
      type: object
      properties:
        ErrorCode:
          $ref: '#/components/schemas/FleetErrorCode'
          description: The error code.
        ErrorMessage:
          $ref: '#/components/schemas/String'
          description: The error message.
      description: Describes a fleet error.
    ImageState:
      type: string
      enum:
        - PENDING
        - AVAILABLE
        - FAILED
        - COPYING
        - DELETING
        - CREATING
        - IMPORTING
    PlatformType:
      type: string
      enum:
        - WINDOWS
        - WINDOWS_SERVER_2016
        - WINDOWS_SERVER_2019
    ImageStateChangeReason:
      type: object
      properties:
        Code:
          $ref: '#/components/schemas/ImageStateChangeReasonCode'
          description: The state change reason code.
        Message:
          $ref: '#/components/schemas/String'
          description: The state change reason message.
      description: Describes the reason why the last image state change occurred.
    ImagePermissions:
      type: object
      properties:
        allowFleet:
          $ref: '#/components/schemas/BooleanObject'
          description: Indicates whether the image can be used for a fleet.
        allowImageBuilder:
          $ref: '#/components/schemas/BooleanObject'
          description: Indicates whether the image can be used for an image builder.
      description: 'Describes the permissions for an image. '
    ResourceErrors:
      type: array
      items:
        $ref: '#/components/schemas/ResourceError'
    ImageBuilderState:
      type: string
      enum:
        - PENDING
        - UPDATING_AGENT
        - RUNNING
        - STOPPING
        - STOPPED
        - REBOOTING
        - SNAPSHOTTING
        - DELETING
        - FAILED
        - UPDATING
        - PENDING_QUALIFICATION
    ImageBuilderStateChangeReason:
      type: object
      properties:
        Code:
          $ref: '#/components/schemas/ImageBuilderStateChangeReasonCode'
          description: The state change reason code.
        Message:
          $ref: '#/components/schemas/String'
          description: The state change reason message.
      description: Describes the reason why the last image builder state change occurred.
    NetworkAccessConfiguration:
      type: object
      properties:
        EniPrivateIpAddress:
          $ref: '#/components/schemas/String'
          description: The private IP address of the elastic network interface that is attached to instances in your VPC.
        EniId:
          $ref: '#/components/schemas/String'
          description: The resource identifier of the elastic network interface that is attached to instances in your VPC. All network interfaces have the eni-xxxxxxxx resource identifier.
      description: Describes the network details of the fleet or image builder instance.
    ImageBuilderStateChangeReasonCode:
      type: string
      enum:
        - INTERNAL_ERROR
        - IMAGE_UNAVAILABLE
    ImageStateChangeReasonCode:
      type: string
      enum:
        - INTERNAL_ERROR
        - IMAGE_BUILDER_NOT_AVAILABLE
        - IMAGE_COPY_FAILURE
    UsageReportExecutionErrorCode:
      type: string
      enum:
        - RESOURCE_NOT_FOUND
        - ACCESS_DENIED
        - INTERNAL_SERVICE_ERROR
    LastReportGenerationExecutionError:
      type: object
      properties:
        ErrorCode:
          $ref: '#/components/schemas/UsageReportExecutionErrorCode'
          description: The error code for the error that is returned when a usage report can't be generated.
        ErrorMessage:
          $ref: '#/components/schemas/String'
          description: The error message for the error that is returned when a usage report can't be generated.
      description: Describes the error that is returned when a usage report can't be generated.
    LastReportGenerationExecutionErrors:
      type: array
      items:
        $ref: '#/components/schemas/LastReportGenerationExecutionError'
    Permission:
      type: string
      enum:
        - ENABLED
        - DISABLED
    ResourceError:
      type: object
      properties:
        ErrorCode:
          $ref: '#/components/schemas/FleetErrorCode'
          description: The error code.
        ErrorMessage:
          $ref: '#/components/schemas/String'
          description: The error message.
        ErrorTimestamp:
          $ref: '#/components/schemas/Timestamp'
          description: The time the error occurred.
      description: Describes a resource error.
    ResourceIdentifier:
      type: string
      description: The ARN of the resource.
      minLength: 1
      maxLength: 2048
    SecurityGroupIdList:
      type: array
      description: The security group identifiers.
      items:
        $ref: '#/components/schemas/String'
      maxItems: 5
    SessionState:
      type: string
      enum:
        - ACTIVE
        - PENDING
        - EXPIRED
      description: Possible values for the state of a streaming session.
    SessionConnectionState:
      type: string
      enum:
        - CONNECTED
        - NOT_CONNECTED
    Session:
      type: object
      required:
        - Id
        - UserId
        - StackName
        - FleetName
        - State
      properties:
        Id:
          $ref: '#/components/schemas/String'
          description: The identifier of the streaming session.
        UserId:
          $ref: '#/components/schemas/UserId'
          description: The identifier of the user for whom the session was created.
        StackName:
          $ref: '#/components/schemas/String'
          description: The name of the stack for the streaming session.
        FleetName:
          $ref: '#/components/schemas/String'
          description: The name of the fleet for the streaming session.
        State:
          $ref: '#/components/schemas/SessionState'
          description: The current state of the streaming session.
        ConnectionState:
          $ref: '#/components/schemas/SessionConnectionState'
          description: Specifies whether a user is connected to the streaming session.
        StartTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time when a streaming instance is dedicated for the user.
        MaxExpirationTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'The time when the streaming session is set to expire. This time is based on the <code>MaxUserDurationinSeconds</code> value, which determines the maximum length of time that a streaming session can run. A streaming session might end earlier than the time specified in <code>SessionMaxExpirationTime</code>, when the <code>DisconnectTimeOutInSeconds</code> elapses or the user chooses to end his or her session. If the <code>DisconnectTimeOutInSeconds</code> elapses, or the user chooses to end his or her session, the streaming instance is terminated and the streaming session ends.'
        AuthenticationType:
          $ref: '#/components/schemas/AuthenticationType'
          description: The authentication method. The user is authenticated using a streaming URL (<code>API</code>) or SAML 2.0 federation (<code>SAML</code>).
        NetworkAccessConfiguration:
          $ref: '#/components/schemas/NetworkAccessConfiguration'
          description: The network details for the streaming session.
      description: Describes a streaming session.
    SharedImagePermissions:
      type: object
      required:
        - sharedAccountId
        - imagePermissions
      properties:
        sharedAccountId:
          $ref: '#/components/schemas/AwsAccountId'
          description: The 12-digit identifier of the AWS account with which the image is shared.
        imagePermissions:
          $ref: '#/components/schemas/ImagePermissions'
          description: Describes the permissions for a shared image.
      description: Describes the permissions that are available to the specified AWS account for a shared image.
    StackErrors:
      type: array
      description: The stack errors.
      items:
        $ref: '#/components/schemas/StackError'
    StackAttribute:
      type: string
      enum:
        - STORAGE_CONNECTORS
        - STORAGE_CONNECTOR_HOMEFOLDERS
        - STORAGE_CONNECTOR_GOOGLE_DRIVE
        - STORAGE_CONNECTOR_ONE_DRIVE
        - REDIRECT_URL
        - FEEDBACK_URL
        - THEME_NAME
        - USER_SETTINGS
        - EMBED_HOST_DOMAINS
        - IAM_ROLE_ARN
        - ACCESS_ENDPOINTS
    StackAttributes:
      type: array
      items:
        $ref: '#/components/schemas/StackAttribute'
    StackErrorCode:
      type: string
      enum:
        - STORAGE_CONNECTOR_ERROR
        - INTERNAL_SERVICE_ERROR
    StackError:
      type: object
      properties:
        ErrorCode:
          $ref: '#/components/schemas/StackErrorCode'
          description: The error code.
        ErrorMessage:
          $ref: '#/components/schemas/String'
          description: The error message.
      description: Describes a stack error.
    StorageConnectorType:
      type: string
      enum:
        - HOMEFOLDERS
        - GOOGLE_DRIVE
        - ONE_DRIVE
      description: The type of storage connector.
    StorageConnector:
      type: object
      required:
        - ConnectorType
      properties:
        ConnectorType:
          $ref: '#/components/schemas/StorageConnectorType'
          description: The type of storage connector.
        ResourceIdentifier:
          $ref: '#/components/schemas/ResourceIdentifier'
          description: The ARN of the storage connector.
        Domains:
          $ref: '#/components/schemas/DomainList'
          description: The names of the domains for the account.
      description: Describes a connector that enables persistent storage for users.
    SubnetIdList:
      type: array
      description: The subnet identifiers.
      items:
        $ref: '#/components/schemas/String'
    TagKey:
      type: string
      pattern: '^(^(?!aws:).[\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      minItems: 1
      maxItems: 50
    TagValue:
      type: string
      pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
      minLength: 0
      maxLength: 256
    UsageReportSubscription:
      type: object
      properties:
        S3BucketName:
          $ref: '#/components/schemas/String'
          description: '<p>The Amazon S3 bucket where generated reports are stored.</p> <p>If you enabled on-instance session scripts and Amazon S3 logging for your session script configuration, AppStream 2.0 created an S3 bucket to store the script output. The bucket is unique to your account and Region. When you enable usage reporting in this case, AppStream 2.0 uses the same bucket to store your usage reports. If you haven''t already enabled on-instance session scripts, when you enable usage reports, AppStream 2.0 creates a new S3 bucket.</p>'
        Schedule:
          $ref: '#/components/schemas/UsageReportSchedule'
          description: The schedule for generating usage reports.
        LastGeneratedReportDate:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the last usage report was generated.
        SubscriptionErrors:
          $ref: '#/components/schemas/LastReportGenerationExecutionErrors'
          description: The errors that were returned if usage reports couldn't be generated.
      description: Describes information about the usage report subscription.
    User:
      type: object
      required:
        - AuthenticationType
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the user.
        UserName:
          $ref: '#/components/schemas/Username'
          description: <p>The email address of the user.</p> <note> <p>Users' email addresses are case-sensitive.</p> </note>
        Enabled:
          $ref: '#/components/schemas/Boolean'
          description: Specifies whether the user in the user pool is enabled.
        Status:
          $ref: '#/components/schemas/String'
          description: '<p>The status of the user in the user pool. The status can be one of the following:</p> <ul> <li> <p>UNCONFIRMED – The user is created but not confirmed.</p> </li> <li> <p>CONFIRMED – The user is confirmed.</p> </li> <li> <p>ARCHIVED – The user is no longer active.</p> </li> <li> <p>COMPROMISED – The user is disabled because of a potential security threat.</p> </li> <li> <p>UNKNOWN – The user status is not known.</p> </li> </ul>'
        FirstName:
          $ref: '#/components/schemas/UserAttributeValue'
          description: 'The first name, or given name, of the user.'
        LastName:
          $ref: '#/components/schemas/UserAttributeValue'
          description: 'The last name, or surname, of the user.'
        CreatedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time the user was created in the user pool.
        AuthenticationType:
          $ref: '#/components/schemas/AuthenticationType'
          description: The authentication type for the user.
      description: Describes a user in the user pool.
    UserSetting:
      type: object
      required:
        - Action
        - Permission
      properties:
        Action:
          $ref: '#/components/schemas/Action'
          description: The action that is enabled or disabled.
        Permission:
          $ref: '#/components/schemas/Permission'
          description: Indicates whether the action is enabled or disabled.
      description: Describes an action and whether the action is enabled or disabled for users during their streaming sessions.
    UserStackAssociation:
      type: object
      required:
        - StackName
        - UserName
        - AuthenticationType
      properties:
        StackName:
          $ref: '#/components/schemas/String'
          description: The name of the stack that is associated with the user.
        UserName:
          $ref: '#/components/schemas/Username'
          description: <p>The email address of the user who is associated with the stack.</p> <note> <p>Users' email addresses are case-sensitive.</p> </note>
        AuthenticationType:
          $ref: '#/components/schemas/AuthenticationType'
          description: The authentication type for the user.
        SendEmailNotification:
          $ref: '#/components/schemas/Boolean'
          description: Specifies whether a welcome email is sent to a user after the user is created in the user pool.
      description: Describes a user in the user pool and the associated stack.
    UserStackAssociationErrorCode:
      type: string
      enum:
        - STACK_NOT_FOUND
        - USER_NAME_NOT_FOUND
        - DIRECTORY_NOT_FOUND
        - INTERNAL_ERROR
    UserStackAssociationError:
      type: object
      properties:
        UserStackAssociation:
          $ref: '#/components/schemas/UserStackAssociation'
          description: Information about the user and associated stack.
        ErrorCode:
          $ref: '#/components/schemas/UserStackAssociationErrorCode'
          description: The error code for the error that is returned when a user can’t be associated with or disassociated from a stack.
        ErrorMessage:
          $ref: '#/components/schemas/String'
          description: The error message for the error that is returned when a user can’t be associated with or disassociated from a stack.
      description: 'Describes the error that is returned when a user can’t be associated with or disassociated from a stack. '
security:
  - hmac: []
