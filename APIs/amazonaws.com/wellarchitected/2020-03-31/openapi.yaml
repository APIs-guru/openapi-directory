openapi: 3.0.0
info:
  version: '2020-03-31'
  x-release: v4
  title: AWS Well-Architected Tool
  description: '<fullname>AWS Well-Architected Tool</fullname> <p>This is the <i>AWS Well-Architected Tool API Reference</i>. The AWS Well-Architected Tool API provides programmatic access to the <a href="http://aws.amazon.com/well-architected-tool">AWS Well-Architected Tool</a> in the <a href="https://console.aws.amazon.com/wellarchitected">AWS Management Console</a>. For information about the AWS Well-Architected Tool, see the <a href="https://docs.aws.amazon.com/wellarchitected/latest/userguide/intro.html">AWS Well-Architected Tool User Guide</a>.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: wellarchitected
  x-aws-signingName: wellarchitected
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/wellarchitected-2020-03-31.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/wellarchitected/'
servers:
  - url: 'http://wellarchitected.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Well-Architected multi-region endpoint
  - url: 'https://wellarchitected.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Well-Architected multi-region endpoint
  - url: 'http://wellarchitected.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Well-Architected endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://wellarchitected.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Well-Architected endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  '/workloads/{WorkloadId}/associateLenses':
    patch:
      operationId: AssociateLenses
      description: Associate a lens to a workload.
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: WorkloadId
          in: path
          required: true
          description: ''
          schema:
            type: string
            pattern: '[0-9a-f]{32}'
            description: The ID assigned to the workload. This ID is unique within an AWS Region.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - LensAliases
              properties:
                LensAliases:
                  description: <p>List of lens aliases to associate or disassociate with a workload.</p> <p>Identify a lens using its <a>LensSummary$LensAlias</a>.</p>
                  type: array
                  items:
                    $ref: '#/components/schemas/LensAlias'
                  minItems: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/workloads/{WorkloadId}/milestones':
    post:
      operationId: CreateMilestone
      description: Create a milestone for an existing workload.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMilestoneOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: WorkloadId
          in: path
          required: true
          description: ''
          schema:
            type: string
            pattern: '[0-9a-f]{32}'
            description: The ID assigned to the workload. This ID is unique within an AWS Region.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - MilestoneName
                - ClientRequestToken
              properties:
                MilestoneName:
                  description: <p>The name of the milestone in a workload.</p> <p>Milestone names must be unique within a workload.</p>
                  type: string
                  minLength: 3
                  maxLength: 100
                ClientRequestToken:
                  description: '<p>A unique case-sensitive string used to ensure that this request is idempotent (executes only once).</p> <p>You should not reuse the same token for other requests. If you retry a request with the same client request token and the same parameters after it has completed successfully, the result of the original request is returned. </p> <important> <p>This token is listed as required, however, if you do not specify it, the AWS SDKs automatically generate one for you. If you are not using the AWS SDK or the AWS CLI, you must provide this token or the request will fail.</p> </important>'
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /workloads:
    post:
      operationId: CreateWorkload
      description: '<p>Create a new workload.</p> <p>The owner of a workload can share the workload with other AWS accounts and IAM users in the same AWS Region. Only the owner of a workload can delete it.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/wellarchitected/latest/userguide/define-workload.html">Defining a Workload</a> in the <i>AWS Well-Architected Tool User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWorkloadOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - WorkloadName
                - Description
                - Environment
                - ReviewOwner
                - Lenses
                - ClientRequestToken
              properties:
                WorkloadName:
                  description: <p>The name of the workload.</p> <p>The name must be unique within an account within a Region. Spaces and capitalization are ignored when checking for uniqueness.</p>
                  type: string
                  minLength: 3
                  maxLength: 100
                Description:
                  description: The description for the workload.
                  type: string
                  minLength: 3
                  maxLength: 250
                Environment:
                  description: The environment for the workload.
                  type: string
                  enum:
                    - PRODUCTION
                    - PREPRODUCTION
                AccountIds:
                  description: The list of AWS account IDs associated with the workload.
                  type: array
                  items:
                    $ref: '#/components/schemas/AwsAccountId'
                  maxItems: 100
                AwsRegions:
                  description: 'The list of AWS Regions associated with the workload, for example, <code>us-east-2</code>, or <code>ca-central-1</code>.'
                  type: array
                  items:
                    $ref: '#/components/schemas/AwsRegion'
                  maxItems: 50
                NonAwsRegions:
                  description: ' The list of non-AWS Regions associated with the workload.'
                  type: array
                  items:
                    $ref: '#/components/schemas/WorkloadNonAwsRegion'
                  maxItems: 5
                PillarPriorities:
                  description: 'The priorities of the pillars, which are used to order items in the improvement plan. Each pillar is represented by its <a>PillarReviewSummary$PillarId</a>.'
                  type: array
                  items:
                    $ref: '#/components/schemas/PillarId'
                ArchitecturalDesign:
                  description: The URL of the architectural design for the workload.
                  type: string
                  maxLength: 2048
                ReviewOwner:
                  description: 'The review owner of the workload. The name, email address, or identifier for the primary group or individual that owns the workload review process.'
                  type: string
                  minLength: 3
                  maxLength: 255
                IndustryType:
                  description: '<p>The industry type for the workload.</p> <p>If specified, must be one of the following:</p> <ul> <li> <p> <code>Agriculture</code> </p> </li> <li> <p> <code>Automobile</code> </p> </li> <li> <p> <code>Defense</code> </p> </li> <li> <p> <code>Design and Engineering</code> </p> </li> <li> <p> <code>Digital Advertising</code> </p> </li> <li> <p> <code>Education</code> </p> </li> <li> <p> <code>Environmental Protection</code> </p> </li> <li> <p> <code>Financial Services</code> </p> </li> <li> <p> <code>Gaming</code> </p> </li> <li> <p> <code>General Public Services</code> </p> </li> <li> <p> <code>Healthcare</code> </p> </li> <li> <p> <code>Hospitality</code> </p> </li> <li> <p> <code>InfoTech</code> </p> </li> <li> <p> <code>Justice and Public Safety</code> </p> </li> <li> <p> <code>Life Sciences</code> </p> </li> <li> <p> <code>Manufacturing</code> </p> </li> <li> <p> <code>Media &amp; Entertainment</code> </p> </li> <li> <p> <code>Mining &amp; Resources</code> </p> </li> <li> <p> <code>Oil &amp; Gas</code> </p> </li> <li> <p> <code>Power &amp; Utilities</code> </p> </li> <li> <p> <code>Professional Services</code> </p> </li> <li> <p> <code>Real Estate &amp; Construction</code> </p> </li> <li> <p> <code>Retail &amp; Wholesale</code> </p> </li> <li> <p> <code>Social Protection</code> </p> </li> <li> <p> <code>Telecommunications</code> </p> </li> <li> <p> <code>Travel, Transportation &amp; Logistics</code> </p> </li> <li> <p> <code>Other</code> </p> </li> </ul>'
                  type: string
                  maxLength: 100
                Industry:
                  description: The industry for the workload.
                  type: string
                  maxLength: 100
                Lenses:
                  description: The list of lenses associated with the workload. Each lens is identified by its <a>LensSummary$LensAlias</a>.
                  type: array
                  items:
                    $ref: '#/components/schemas/LensAlias'
                Notes:
                  description: The notes associated with the workload.
                  type: string
                  maxLength: 2084
                ClientRequestToken:
                  description: '<p>A unique case-sensitive string used to ensure that this request is idempotent (executes only once).</p> <p>You should not reuse the same token for other requests. If you retry a request with the same client request token and the same parameters after it has completed successfully, the result of the original request is returned. </p> <important> <p>This token is listed as required, however, if you do not specify it, the AWS SDKs automatically generate one for you. If you are not using the AWS SDK or the AWS CLI, you must provide this token or the request will fail.</p> </important>'
                  type: string
                Tags:
                  description: The tags to be associated with the workload.
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/workloads/{WorkloadId}/shares':
    post:
      operationId: CreateWorkloadShare
      description: '<p>Create a workload share.</p> <p>The owner of a workload can share it with other AWS accounts and IAM users in the same AWS Region. Shared access to a workload is not removed until the workload invitation is deleted.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/wellarchitected/latest/userguide/workloads-sharing.html">Sharing a Workload</a> in the <i>AWS Well-Architected Tool User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWorkloadShareOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: WorkloadId
          in: path
          required: true
          description: ''
          schema:
            type: string
            pattern: '[0-9a-f]{32}'
            description: The ID assigned to the workload. This ID is unique within an AWS Region.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - SharedWith
                - PermissionType
                - ClientRequestToken
              properties:
                SharedWith:
                  description: The AWS account ID or IAM role with which the workload is shared.
                  type: string
                  minLength: 12
                  maxLength: 2048
                PermissionType:
                  description: Permission granted on a workload share.
                  type: string
                  enum:
                    - READONLY
                    - CONTRIBUTOR
                ClientRequestToken:
                  description: '<p>A unique case-sensitive string used to ensure that this request is idempotent (executes only once).</p> <p>You should not reuse the same token for other requests. If you retry a request with the same client request token and the same parameters after it has completed successfully, the result of the original request is returned. </p> <important> <p>This token is listed as required, however, if you do not specify it, the AWS SDKs automatically generate one for you. If you are not using the AWS SDK or the AWS CLI, you must provide this token or the request will fail.</p> </important>'
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListWorkloadShares
      description: List the workload shares associated with the workload.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkloadSharesOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: WorkloadId
          in: path
          required: true
          description: ''
          schema:
            type: string
            pattern: '[0-9a-f]{32}'
            description: The ID assigned to the workload. This ID is unique within an AWS Region.
        - name: SharedWithPrefix
          in: query
          required: false
          description: The AWS account ID or IAM role with which the workload is shared.
          schema:
            type: string
            maxLength: 100
        - name: NextToken
          in: query
          required: false
          description: ''
          schema:
            type: string
            description: The token to use to retrieve the next set of results.
        - name: MaxResults
          in: query
          required: false
          description: The maximum number of results to return for this request.
          schema:
            type: integer
            minimum: 1
            maximum: 50
  '/workloads/{WorkloadId}#ClientRequestToken':
    delete:
      operationId: DeleteWorkload
      description: Delete an existing workload.
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: WorkloadId
          in: path
          required: true
          description: ''
          schema:
            type: string
            pattern: '[0-9a-f]{32}'
            description: The ID assigned to the workload. This ID is unique within an AWS Region.
        - name: ClientRequestToken
          in: query
          required: true
          description: ''
          schema:
            type: string
            description: '<p>A unique case-sensitive string used to ensure that this request is idempotent (executes only once).</p> <p>You should not reuse the same token for other requests. If you retry a request with the same client request token and the same parameters after it has completed successfully, the result of the original request is returned. </p> <important> <p>This token is listed as required, however, if you do not specify it, the AWS SDKs automatically generate one for you. If you are not using the AWS SDK or the AWS CLI, you must provide this token or the request will fail.</p> </important>'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/workloads/{WorkloadId}/shares/{ShareId}#ClientRequestToken':
    delete:
      operationId: DeleteWorkloadShare
      description: Delete a workload share.
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: ShareId
          in: path
          required: true
          description: ''
          schema:
            type: string
            pattern: '[0-9a-f]{32}'
            description: The ID associated with the workload share.
        - name: WorkloadId
          in: path
          required: true
          description: ''
          schema:
            type: string
            pattern: '[0-9a-f]{32}'
            description: The ID assigned to the workload. This ID is unique within an AWS Region.
        - name: ClientRequestToken
          in: query
          required: true
          description: ''
          schema:
            type: string
            description: '<p>A unique case-sensitive string used to ensure that this request is idempotent (executes only once).</p> <p>You should not reuse the same token for other requests. If you retry a request with the same client request token and the same parameters after it has completed successfully, the result of the original request is returned. </p> <important> <p>This token is listed as required, however, if you do not specify it, the AWS SDKs automatically generate one for you. If you are not using the AWS SDK or the AWS CLI, you must provide this token or the request will fail.</p> </important>'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/workloads/{WorkloadId}/disassociateLenses':
    patch:
      operationId: DisassociateLenses
      description: <p>Disassociate a lens from a workload.</p> <note> <p>The AWS Well-Architected Framework lens (<code>wellarchitected</code>) cannot be removed from a workload.</p> </note>
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: WorkloadId
          in: path
          required: true
          description: ''
          schema:
            type: string
            pattern: '[0-9a-f]{32}'
            description: The ID assigned to the workload. This ID is unique within an AWS Region.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - LensAliases
              properties:
                LensAliases:
                  description: <p>List of lens aliases to associate or disassociate with a workload.</p> <p>Identify a lens using its <a>LensSummary$LensAlias</a>.</p>
                  type: array
                  items:
                    $ref: '#/components/schemas/LensAlias'
                  minItems: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/workloads/{WorkloadId}/lensReviews/{LensAlias}/answers/{QuestionId}':
    get:
      operationId: GetAnswer
      description: Get the answer to a specific question in a workload review.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAnswerOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: WorkloadId
          in: path
          required: true
          description: ''
          schema:
            type: string
            pattern: '[0-9a-f]{32}'
            description: The ID assigned to the workload. This ID is unique within an AWS Region.
        - name: LensAlias
          in: path
          required: true
          description: ''
          schema:
            type: string
            description: '<p>The alias of the lens, for example, <code>serverless</code>.</p> <p>Each lens is identified by its <a>LensSummary$LensAlias</a>.</p>'
            minLength: 1
            maxLength: 64
        - name: QuestionId
          in: path
          required: true
          description: ''
          schema:
            type: string
            description: The ID of the question.
            minLength: 1
            maxLength: 128
        - name: MilestoneNumber
          in: query
          required: false
          description: ''
          schema:
            type: integer
            description: <p>The milestone number.</p> <p>A workload can have a maximum of 100 milestones.</p>
            minimum: 1
            maximum: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    patch:
      operationId: UpdateAnswer
      description: Update the answer to a specific question in a workload review.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAnswerOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: WorkloadId
          in: path
          required: true
          description: ''
          schema:
            type: string
            pattern: '[0-9a-f]{32}'
            description: The ID assigned to the workload. This ID is unique within an AWS Region.
        - name: LensAlias
          in: path
          required: true
          description: ''
          schema:
            type: string
            description: '<p>The alias of the lens, for example, <code>serverless</code>.</p> <p>Each lens is identified by its <a>LensSummary$LensAlias</a>.</p>'
            minLength: 1
            maxLength: 64
        - name: QuestionId
          in: path
          required: true
          description: ''
          schema:
            type: string
            description: The ID of the question.
            minLength: 1
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SelectedChoices:
                  description: <p>List of selected choice IDs in a question answer.</p> <p>The values entered replace the previously selected choices.</p>
                  type: array
                  items:
                    $ref: '#/components/schemas/ChoiceId'
                ChoiceUpdates:
                  description: A list of choices to update on a question in your workload. The String key corresponds to the choice ID to be updated.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/ChoiceUpdate'
                Notes:
                  description: The notes associated with the workload.
                  type: string
                  maxLength: 2084
                IsApplicable:
                  description: Defines whether this question is applicable to a lens review.
                  type: boolean
                Reason:
                  description: The reason why a question is not applicable to your workload.
                  type: string
                  enum:
                    - OUT_OF_SCOPE
                    - BUSINESS_PRIORITIES
                    - ARCHITECTURE_CONSTRAINTS
                    - OTHER
                    - NONE
  '/workloads/{WorkloadId}/lensReviews/{LensAlias}':
    get:
      operationId: GetLensReview
      description: Get lens review.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLensReviewOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: WorkloadId
          in: path
          required: true
          description: ''
          schema:
            type: string
            pattern: '[0-9a-f]{32}'
            description: The ID assigned to the workload. This ID is unique within an AWS Region.
        - name: LensAlias
          in: path
          required: true
          description: ''
          schema:
            type: string
            description: '<p>The alias of the lens, for example, <code>serverless</code>.</p> <p>Each lens is identified by its <a>LensSummary$LensAlias</a>.</p>'
            minLength: 1
            maxLength: 64
        - name: MilestoneNumber
          in: query
          required: false
          description: ''
          schema:
            type: integer
            description: <p>The milestone number.</p> <p>A workload can have a maximum of 100 milestones.</p>
            minimum: 1
            maximum: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    patch:
      operationId: UpdateLensReview
      description: Update lens review.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateLensReviewOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: WorkloadId
          in: path
          required: true
          description: ''
          schema:
            type: string
            pattern: '[0-9a-f]{32}'
            description: The ID assigned to the workload. This ID is unique within an AWS Region.
        - name: LensAlias
          in: path
          required: true
          description: ''
          schema:
            type: string
            description: '<p>The alias of the lens, for example, <code>serverless</code>.</p> <p>Each lens is identified by its <a>LensSummary$LensAlias</a>.</p>'
            minLength: 1
            maxLength: 64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                LensNotes:
                  description: The notes associated with the workload.
                  type: string
                  maxLength: 2084
                PillarNotes:
                  description: List of pillar notes of a lens review in a workload.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/Notes'
  '/workloads/{WorkloadId}/lensReviews/{LensAlias}/report':
    get:
      operationId: GetLensReviewReport
      description: Get lens review report.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLensReviewReportOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: WorkloadId
          in: path
          required: true
          description: ''
          schema:
            type: string
            pattern: '[0-9a-f]{32}'
            description: The ID assigned to the workload. This ID is unique within an AWS Region.
        - name: LensAlias
          in: path
          required: true
          description: ''
          schema:
            type: string
            description: '<p>The alias of the lens, for example, <code>serverless</code>.</p> <p>Each lens is identified by its <a>LensSummary$LensAlias</a>.</p>'
            minLength: 1
            maxLength: 64
        - name: MilestoneNumber
          in: query
          required: false
          description: ''
          schema:
            type: integer
            description: <p>The milestone number.</p> <p>A workload can have a maximum of 100 milestones.</p>
            minimum: 1
            maximum: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/lenses/{LensAlias}/versionDifference#BaseLensVersion':
    get:
      operationId: GetLensVersionDifference
      description: Get lens version differences.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLensVersionDifferenceOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: LensAlias
          in: path
          required: true
          description: ''
          schema:
            type: string
            description: '<p>The alias of the lens, for example, <code>serverless</code>.</p> <p>Each lens is identified by its <a>LensSummary$LensAlias</a>.</p>'
            minLength: 1
            maxLength: 64
        - name: BaseLensVersion
          in: query
          required: true
          description: The base version of the lens.
          schema:
            type: string
            minLength: 1
            maxLength: 128
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/workloads/{WorkloadId}/milestones/{MilestoneNumber}':
    get:
      operationId: GetMilestone
      description: Get a milestone for an existing workload.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMilestoneOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: WorkloadId
          in: path
          required: true
          description: ''
          schema:
            type: string
            pattern: '[0-9a-f]{32}'
            description: The ID assigned to the workload. This ID is unique within an AWS Region.
        - name: MilestoneNumber
          in: path
          required: true
          description: ''
          schema:
            type: integer
            description: <p>The milestone number.</p> <p>A workload can have a maximum of 100 milestones.</p>
            minimum: 1
            maximum: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/workloads/{WorkloadId}':
    get:
      operationId: GetWorkload
      description: Get an existing workload.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWorkloadOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: WorkloadId
          in: path
          required: true
          description: ''
          schema:
            type: string
            pattern: '[0-9a-f]{32}'
            description: The ID assigned to the workload. This ID is unique within an AWS Region.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    patch:
      operationId: UpdateWorkload
      description: Update an existing workload.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateWorkloadOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: WorkloadId
          in: path
          required: true
          description: ''
          schema:
            type: string
            pattern: '[0-9a-f]{32}'
            description: The ID assigned to the workload. This ID is unique within an AWS Region.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                WorkloadName:
                  description: <p>The name of the workload.</p> <p>The name must be unique within an account within a Region. Spaces and capitalization are ignored when checking for uniqueness.</p>
                  type: string
                  minLength: 3
                  maxLength: 100
                Description:
                  description: The description for the workload.
                  type: string
                  minLength: 3
                  maxLength: 250
                Environment:
                  description: The environment for the workload.
                  type: string
                  enum:
                    - PRODUCTION
                    - PREPRODUCTION
                AccountIds:
                  description: The list of AWS account IDs associated with the workload.
                  type: array
                  items:
                    $ref: '#/components/schemas/AwsAccountId'
                  maxItems: 100
                AwsRegions:
                  description: 'The list of AWS Regions associated with the workload, for example, <code>us-east-2</code>, or <code>ca-central-1</code>.'
                  type: array
                  items:
                    $ref: '#/components/schemas/AwsRegion'
                  maxItems: 50
                NonAwsRegions:
                  description: ' The list of non-AWS Regions associated with the workload.'
                  type: array
                  items:
                    $ref: '#/components/schemas/WorkloadNonAwsRegion'
                  maxItems: 5
                PillarPriorities:
                  description: 'The priorities of the pillars, which are used to order items in the improvement plan. Each pillar is represented by its <a>PillarReviewSummary$PillarId</a>.'
                  type: array
                  items:
                    $ref: '#/components/schemas/PillarId'
                ArchitecturalDesign:
                  description: The URL of the architectural design for the workload.
                  type: string
                  maxLength: 2048
                ReviewOwner:
                  description: 'The review owner of the workload. The name, email address, or identifier for the primary group or individual that owns the workload review process.'
                  type: string
                  minLength: 3
                  maxLength: 255
                IsReviewOwnerUpdateAcknowledged:
                  description: '<p>Flag indicating whether the workload owner has acknowledged that the <i>Review owner</i> field is required.</p> <p>If a <b>Review owner</b> is not added to the workload within 60 days of acknowledgement, access to the workload is restricted until an owner is added.</p>'
                  type: boolean
                IndustryType:
                  description: '<p>The industry type for the workload.</p> <p>If specified, must be one of the following:</p> <ul> <li> <p> <code>Agriculture</code> </p> </li> <li> <p> <code>Automobile</code> </p> </li> <li> <p> <code>Defense</code> </p> </li> <li> <p> <code>Design and Engineering</code> </p> </li> <li> <p> <code>Digital Advertising</code> </p> </li> <li> <p> <code>Education</code> </p> </li> <li> <p> <code>Environmental Protection</code> </p> </li> <li> <p> <code>Financial Services</code> </p> </li> <li> <p> <code>Gaming</code> </p> </li> <li> <p> <code>General Public Services</code> </p> </li> <li> <p> <code>Healthcare</code> </p> </li> <li> <p> <code>Hospitality</code> </p> </li> <li> <p> <code>InfoTech</code> </p> </li> <li> <p> <code>Justice and Public Safety</code> </p> </li> <li> <p> <code>Life Sciences</code> </p> </li> <li> <p> <code>Manufacturing</code> </p> </li> <li> <p> <code>Media &amp; Entertainment</code> </p> </li> <li> <p> <code>Mining &amp; Resources</code> </p> </li> <li> <p> <code>Oil &amp; Gas</code> </p> </li> <li> <p> <code>Power &amp; Utilities</code> </p> </li> <li> <p> <code>Professional Services</code> </p> </li> <li> <p> <code>Real Estate &amp; Construction</code> </p> </li> <li> <p> <code>Retail &amp; Wholesale</code> </p> </li> <li> <p> <code>Social Protection</code> </p> </li> <li> <p> <code>Telecommunications</code> </p> </li> <li> <p> <code>Travel, Transportation &amp; Logistics</code> </p> </li> <li> <p> <code>Other</code> </p> </li> </ul>'
                  type: string
                  maxLength: 100
                Industry:
                  description: The industry for the workload.
                  type: string
                  maxLength: 100
                Notes:
                  description: The notes associated with the workload.
                  type: string
                  maxLength: 2084
                ImprovementStatus:
                  description: The improvement status for a workload.
                  type: string
                  enum:
                    - NOT_APPLICABLE
                    - NOT_STARTED
                    - IN_PROGRESS
                    - COMPLETE
                    - RISK_ACKNOWLEDGED
  '/workloads/{WorkloadId}/lensReviews/{LensAlias}/answers':
    get:
      operationId: ListAnswers
      description: List of answers.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAnswersOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: WorkloadId
          in: path
          required: true
          description: ''
          schema:
            type: string
            pattern: '[0-9a-f]{32}'
            description: The ID assigned to the workload. This ID is unique within an AWS Region.
        - name: LensAlias
          in: path
          required: true
          description: ''
          schema:
            type: string
            description: '<p>The alias of the lens, for example, <code>serverless</code>.</p> <p>Each lens is identified by its <a>LensSummary$LensAlias</a>.</p>'
            minLength: 1
            maxLength: 64
        - name: PillarId
          in: query
          required: false
          description: ''
          schema:
            type: string
            description: '<p>The ID used to identify a pillar, for example, <code>security</code>.</p> <p>A pillar is identified by its <a>PillarReviewSummary$PillarId</a>.</p>'
            minLength: 1
            maxLength: 64
        - name: MilestoneNumber
          in: query
          required: false
          description: ''
          schema:
            type: integer
            description: <p>The milestone number.</p> <p>A workload can have a maximum of 100 milestones.</p>
            minimum: 1
            maximum: 100
        - name: NextToken
          in: query
          required: false
          description: ''
          schema:
            type: string
            description: The token to use to retrieve the next set of results.
        - name: MaxResults
          in: query
          required: false
          description: The maximum number of results to return for this request.
          schema:
            type: integer
            minimum: 1
            maximum: 50
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/workloads/{WorkloadId}/lensReviews/{LensAlias}/improvements':
    get:
      operationId: ListLensReviewImprovements
      description: List lens review improvements.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLensReviewImprovementsOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: WorkloadId
          in: path
          required: true
          description: ''
          schema:
            type: string
            pattern: '[0-9a-f]{32}'
            description: The ID assigned to the workload. This ID is unique within an AWS Region.
        - name: LensAlias
          in: path
          required: true
          description: ''
          schema:
            type: string
            description: '<p>The alias of the lens, for example, <code>serverless</code>.</p> <p>Each lens is identified by its <a>LensSummary$LensAlias</a>.</p>'
            minLength: 1
            maxLength: 64
        - name: PillarId
          in: query
          required: false
          description: ''
          schema:
            type: string
            description: '<p>The ID used to identify a pillar, for example, <code>security</code>.</p> <p>A pillar is identified by its <a>PillarReviewSummary$PillarId</a>.</p>'
            minLength: 1
            maxLength: 64
        - name: MilestoneNumber
          in: query
          required: false
          description: ''
          schema:
            type: integer
            description: <p>The milestone number.</p> <p>A workload can have a maximum of 100 milestones.</p>
            minimum: 1
            maximum: 100
        - name: NextToken
          in: query
          required: false
          description: ''
          schema:
            type: string
            description: The token to use to retrieve the next set of results.
        - name: MaxResults
          in: query
          required: false
          description: The maximum number of results to return for this request.
          schema:
            type: integer
            minimum: 1
            maximum: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/workloads/{WorkloadId}/lensReviews':
    get:
      operationId: ListLensReviews
      description: List lens reviews.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLensReviewsOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: WorkloadId
          in: path
          required: true
          description: ''
          schema:
            type: string
            pattern: '[0-9a-f]{32}'
            description: The ID assigned to the workload. This ID is unique within an AWS Region.
        - name: MilestoneNumber
          in: query
          required: false
          description: ''
          schema:
            type: integer
            description: <p>The milestone number.</p> <p>A workload can have a maximum of 100 milestones.</p>
            minimum: 1
            maximum: 100
        - name: NextToken
          in: query
          required: false
          description: ''
          schema:
            type: string
            description: The token to use to retrieve the next set of results.
        - name: MaxResults
          in: query
          required: false
          description: ''
          schema:
            type: integer
            description: The maximum number of results to return for this request.
            minimum: 1
            maximum: 50
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /lenses:
    get:
      operationId: ListLenses
      description: List the available lenses.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLensesOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: NextToken
          in: query
          required: false
          description: ''
          schema:
            type: string
            description: The token to use to retrieve the next set of results.
        - name: MaxResults
          in: query
          required: false
          description: ''
          schema:
            type: integer
            description: The maximum number of results to return for this request.
            minimum: 1
            maximum: 50
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/workloads/{WorkloadId}/milestonesSummaries':
    post:
      operationId: ListMilestones
      description: List all milestones for an existing workload.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMilestonesOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: WorkloadId
          in: path
          required: true
          description: ''
          schema:
            type: string
            pattern: '[0-9a-f]{32}'
            description: The ID assigned to the workload. This ID is unique within an AWS Region.
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                NextToken:
                  description: The token to use to retrieve the next set of results.
                  type: string
                MaxResults:
                  description: The maximum number of results to return for this request.
                  type: integer
                  minimum: 1
                  maximum: 50
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /notifications:
    post:
      operationId: ListNotifications
      description: List lens notifications.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNotificationsOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                WorkloadId:
                  description: The ID assigned to the workload. This ID is unique within an AWS Region.
                  type: string
                  pattern: '[0-9a-f]{32}'
                NextToken:
                  description: The token to use to retrieve the next set of results.
                  type: string
                MaxResults:
                  description: The maximum number of results to return for this request.
                  type: integer
                  minimum: 1
                  maximum: 50
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /shareInvitations:
    get:
      operationId: ListShareInvitations
      description: List the workload invitations.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListShareInvitationsOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: WorkloadNamePrefix
          in: query
          required: false
          description: ''
          schema:
            type: string
            description: An optional string added to the beginning of each workload name returned in the results.
            maxLength: 100
        - name: NextToken
          in: query
          required: false
          description: ''
          schema:
            type: string
            description: The token to use to retrieve the next set of results.
        - name: MaxResults
          in: query
          required: false
          description: The maximum number of results to return for this request.
          schema:
            type: integer
            minimum: 1
            maximum: 50
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{WorkloadArn}':
    get:
      operationId: ListTagsForResource
      description: List the tags for a resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceOutput'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: WorkloadArn
          in: path
          required: true
          description: ''
          schema:
            type: string
            description: The ARN for the workload.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: TagResource
      description: Adds one or more tags to the specified resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceOutput'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: WorkloadArn
          in: path
          required: true
          description: ''
          schema:
            type: string
            description: The ARN for the workload.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Tags
              properties:
                Tags:
                  description: The tags for the resource.
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
  /workloadsSummaries:
    post:
      operationId: ListWorkloads
      description: List workloads. Paginated.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkloadsOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                WorkloadNamePrefix:
                  description: An optional string added to the beginning of each workload name returned in the results.
                  type: string
                  maxLength: 100
                NextToken:
                  description: The token to use to retrieve the next set of results.
                  type: string
                MaxResults:
                  description: The maximum number of results to return for this request.
                  type: integer
                  minimum: 1
                  maximum: 50
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{WorkloadArn}#tagKeys':
    delete:
      operationId: UntagResource
      description: '<p>Deletes specified tags from a resource.</p> <p>To specify multiple tags, use separate <b>tagKeys</b> parameters, for example:</p> <p> <code>DELETE /tags/WorkloadArn?tagKeys=key1&amp;tagKeys=key2</code> </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceOutput'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: WorkloadArn
          in: path
          required: true
          description: ''
          schema:
            type: string
            description: The ARN for the workload.
        - name: tagKeys
          in: query
          required: true
          description: A list of tag keys. Existing tags of the resource whose keys are members of this list are removed from the resource.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TagKey'
            minItems: 1
            maxItems: 50
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/shareInvitations/{ShareInvitationId}':
    patch:
      operationId: UpdateShareInvitation
      description: Update a workload invitation.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateShareInvitationOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: ShareInvitationId
          in: path
          required: true
          description: The ID assigned to the share invitation.
          schema:
            type: string
            pattern: '[0-9a-f]{32}'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ShareInvitationAction
              properties:
                ShareInvitationAction:
                  description: Share invitation action taken by contributor.
                  type: string
                  enum:
                    - ACCEPT
                    - REJECT
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/workloads/{WorkloadId}/shares/{ShareId}':
    patch:
      operationId: UpdateWorkloadShare
      description: Update a workload share.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateWorkloadShareOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: ShareId
          in: path
          required: true
          description: ''
          schema:
            type: string
            pattern: '[0-9a-f]{32}'
            description: The ID associated with the workload share.
        - name: WorkloadId
          in: path
          required: true
          description: ''
          schema:
            type: string
            pattern: '[0-9a-f]{32}'
            description: The ID assigned to the workload. This ID is unique within an AWS Region.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - PermissionType
              properties:
                PermissionType:
                  description: Permission granted on a workload share.
                  type: string
                  enum:
                    - READONLY
                    - CONTRIBUTOR
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/workloads/{WorkloadId}/lensReviews/{LensAlias}/upgrade':
    put:
      operationId: UpgradeLensReview
      description: Upgrade lens review.
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: WorkloadId
          in: path
          required: true
          description: ''
          schema:
            type: string
            pattern: '[0-9a-f]{32}'
            description: The ID assigned to the workload. This ID is unique within an AWS Region.
        - name: LensAlias
          in: path
          required: true
          description: ''
          schema:
            type: string
            description: '<p>The alias of the lens, for example, <code>serverless</code>.</p> <p>Each lens is identified by its <a>LensSummary$LensAlias</a>.</p>'
            minLength: 1
            maxLength: 64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - MilestoneName
              properties:
                MilestoneName:
                  description: <p>The name of the milestone in a workload.</p> <p>Milestone names must be unique within a workload.</p>
                  type: string
                  minLength: 3
                  maxLength: 100
                ClientRequestToken:
                  description: '<p>A unique case-sensitive string used to ensure that this request is idempotent (executes only once).</p> <p>You should not reuse the same token for other requests. If you retry a request with the same client request token and the same parameters after it has completed successfully, the result of the original request is returned. </p> <important> <p>This token is listed as required, however, if you do not specify it, the AWS SDKs automatically generate one for you. If you are not using the AWS SDK or the AWS CLI, you must provide this token or the request will fail.</p> </important>'
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    LensAlias:
      type: string
      description: '<p>The alias of the lens, for example, <code>serverless</code>.</p> <p>Each lens is identified by its <a>LensSummary$LensAlias</a>.</p>'
      minLength: 1
      maxLength: 64
    ValidationException: {}
    ResourceNotFoundException: {}
    ConflictException: {}
    InternalServerException: {}
    AccessDeniedException: {}
    ThrottlingException: {}
    CreateMilestoneOutput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        MilestoneNumber:
          $ref: '#/components/schemas/MilestoneNumber'
      description: Output of a create milestone call.
    ServiceQuotaExceededException: {}
    CreateWorkloadOutput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        WorkloadArn:
          $ref: '#/components/schemas/WorkloadArn'
      description: Output of a create workload call.
    AwsAccountId:
      type: string
      pattern: '[0-9]{12}'
      description: An AWS account ID.
    AwsRegion:
      type: string
      description: 'An AWS Region, for example, <code>us-west-2</code> or <code>ap-northeast-1</code>.'
      maxLength: 100
    WorkloadNonAwsRegion:
      type: string
      minLength: 3
      maxLength: 25
    PillarId:
      type: string
      description: '<p>The ID used to identify a pillar, for example, <code>security</code>.</p> <p>A pillar is identified by its <a>PillarReviewSummary$PillarId</a>.</p>'
      minLength: 1
      maxLength: 64
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    CreateWorkloadShareOutput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        ShareId:
          $ref: '#/components/schemas/ShareId'
      description: Input for Create Workload Share
    GetAnswerOutput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        MilestoneNumber:
          $ref: '#/components/schemas/MilestoneNumber'
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
        Answer:
          $ref: '#/components/schemas/Answer'
      description: Output of a get answer call.
    GetLensReviewOutput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        MilestoneNumber:
          $ref: '#/components/schemas/MilestoneNumber'
        LensReview:
          $ref: '#/components/schemas/LensReview'
      description: Output of a get lens review call.
    GetLensReviewReportOutput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        MilestoneNumber:
          $ref: '#/components/schemas/MilestoneNumber'
        LensReviewReport:
          $ref: '#/components/schemas/LensReviewReport'
      description: Output of a get lens review report call.
    GetLensVersionDifferenceOutput:
      type: object
      properties:
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
        BaseLensVersion:
          $ref: '#/components/schemas/LensVersion'
          description: The base version of the lens.
        LatestLensVersion:
          $ref: '#/components/schemas/LensVersion'
          description: The latest version of the lens.
        VersionDifferences:
          $ref: '#/components/schemas/VersionDifferences'
    GetMilestoneOutput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        Milestone:
          $ref: '#/components/schemas/Milestone'
      description: Output of a get milestone call.
    GetWorkloadOutput:
      type: object
      properties:
        Workload:
          $ref: '#/components/schemas/Workload'
      description: Output of a get workload call.
    ListAnswersOutput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        MilestoneNumber:
          $ref: '#/components/schemas/MilestoneNumber'
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
        AnswerSummaries:
          $ref: '#/components/schemas/AnswerSummaries'
        NextToken:
          $ref: '#/components/schemas/NextToken'
      description: Output of a list answers call.
    ListLensReviewImprovementsOutput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        MilestoneNumber:
          $ref: '#/components/schemas/MilestoneNumber'
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
        ImprovementSummaries:
          $ref: '#/components/schemas/ImprovementSummaries'
        NextToken:
          $ref: '#/components/schemas/NextToken'
      description: Output of a list lens review improvements call.
    ListLensReviewsOutput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        MilestoneNumber:
          $ref: '#/components/schemas/MilestoneNumber'
        LensReviewSummaries:
          $ref: '#/components/schemas/LensReviewSummaries'
        NextToken:
          $ref: '#/components/schemas/NextToken'
      description: Output of a list lens reviews call.
    ListLensesOutput:
      type: object
      properties:
        LensSummaries:
          $ref: '#/components/schemas/LensSummaries'
        NextToken:
          $ref: '#/components/schemas/NextToken'
      description: Output of a list lenses call.
    ListMilestonesOutput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        MilestoneSummaries:
          $ref: '#/components/schemas/MilestoneSummaries'
        NextToken:
          $ref: '#/components/schemas/NextToken'
      description: Output of a list milestones call.
    ListNotificationsOutput:
      type: object
      properties:
        NotificationSummaries:
          $ref: '#/components/schemas/NotificationSummaries'
          description: List of lens notification summaries in a workload.
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListShareInvitationsOutput:
      type: object
      properties:
        ShareInvitationSummaries:
          $ref: '#/components/schemas/ShareInvitationSummaries'
          description: List of share invitation summaries in a workload.
        NextToken:
          $ref: '#/components/schemas/NextToken'
      description: Input for List Share Invitations
    ListTagsForResourceOutput:
      type: object
      properties:
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: The tags for the resource.
    ListWorkloadSharesOutput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        WorkloadShareSummaries:
          $ref: '#/components/schemas/WorkloadShareSummaries'
        NextToken:
          $ref: '#/components/schemas/NextToken'
      description: Input for List Workload Share
    ListWorkloadsOutput:
      type: object
      properties:
        WorkloadSummaries:
          $ref: '#/components/schemas/WorkloadSummaries'
        NextToken:
          $ref: '#/components/schemas/NextToken'
      description: Output of a list workloads call.
    TagResourceOutput:
      type: object
      properties: {}
    UntagResourceOutput:
      type: object
      properties: {}
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    UpdateAnswerOutput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
        Answer:
          $ref: '#/components/schemas/Answer'
      description: Output of a update answer call.
    ChoiceId:
      type: string
      description: The ID of a choice.
      minLength: 1
      maxLength: 64
    ChoiceUpdate:
      type: object
      required:
        - Status
      properties:
        Status:
          $ref: '#/components/schemas/ChoiceStatus'
          description: The status of a choice.
        Reason:
          $ref: '#/components/schemas/ChoiceReason'
          description: The reason why a choice is non-applicable to a question in your workload.
        Notes:
          $ref: '#/components/schemas/ChoiceNotes'
          description: The notes associated with a choice.
      description: A list of choices to be updated.
    UpdateLensReviewOutput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        LensReview:
          $ref: '#/components/schemas/LensReview'
      description: Output of a update lens review call.
    Notes:
      type: string
      description: The notes associated with the workload.
      maxLength: 2084
    UpdateShareInvitationOutput:
      type: object
      properties:
        ShareInvitation:
          $ref: '#/components/schemas/ShareInvitation'
          description: The updated workload share invitation.
    UpdateWorkloadOutput:
      type: object
      properties:
        Workload:
          $ref: '#/components/schemas/Workload'
      description: Output of an update workload call.
    UpdateWorkloadShareOutput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        WorkloadShare:
          $ref: '#/components/schemas/WorkloadShare'
      description: Input for Update Workload Share
    QuestionId:
      type: string
      description: The ID of the question.
      minLength: 1
      maxLength: 128
    QuestionTitle:
      type: string
      description: The title of the question.
      minLength: 1
      maxLength: 512
    QuestionDescription:
      type: string
      description: The description of the question.
      minLength: 1
      maxLength: 1024
    ImprovementPlanUrl:
      type: string
      description: <p>The improvement plan URL for a question.</p> <p>This value is only available if the question has been answered.</p>
      minLength: 1
      maxLength: 2048
    HelpfulResourceUrl:
      type: string
      description: The helpful resource URL for a question.
      minLength: 1
      maxLength: 2048
    Choices:
      type: array
      description: List of choices available for a question.
      items:
        $ref: '#/components/schemas/Choice'
    SelectedChoices:
      type: array
      description: <p>List of selected choice IDs in a question answer.</p> <p>The values entered replace the previously selected choices.</p>
      items:
        $ref: '#/components/schemas/ChoiceId'
    ChoiceAnswers:
      type: array
      items:
        $ref: '#/components/schemas/ChoiceAnswer'
    IsApplicable:
      type: boolean
      description: Defines whether this question is applicable to a lens review.
    Risk:
      type: string
      enum:
        - UNANSWERED
        - HIGH
        - MEDIUM
        - NONE
        - NOT_APPLICABLE
      description: 'The risk for a given workload, lens review, pillar, or question.'
    AnswerReason:
      type: string
      enum:
        - OUT_OF_SCOPE
        - BUSINESS_PRIORITIES
        - ARCHITECTURE_CONSTRAINTS
        - OTHER
        - NONE
    Answer:
      type: object
      properties:
        QuestionId:
          $ref: '#/components/schemas/QuestionId'
        PillarId:
          $ref: '#/components/schemas/PillarId'
        QuestionTitle:
          $ref: '#/components/schemas/QuestionTitle'
        QuestionDescription:
          $ref: '#/components/schemas/QuestionDescription'
        ImprovementPlanUrl:
          $ref: '#/components/schemas/ImprovementPlanUrl'
        HelpfulResourceUrl:
          $ref: '#/components/schemas/HelpfulResourceUrl'
        Choices:
          $ref: '#/components/schemas/Choices'
        SelectedChoices:
          $ref: '#/components/schemas/SelectedChoices'
        ChoiceAnswers:
          $ref: '#/components/schemas/ChoiceAnswers'
          description: A list of selected choices to a question in your workload.
        IsApplicable:
          $ref: '#/components/schemas/IsApplicable'
        Risk:
          $ref: '#/components/schemas/Risk'
        Notes:
          $ref: '#/components/schemas/Notes'
        Reason:
          $ref: '#/components/schemas/AnswerReason'
          description: The reason why the question is not applicable to your workload.
      description: An answer of the question.
    AnswerSummary:
      type: object
      properties:
        QuestionId:
          $ref: '#/components/schemas/QuestionId'
        PillarId:
          $ref: '#/components/schemas/PillarId'
        QuestionTitle:
          $ref: '#/components/schemas/QuestionTitle'
        Choices:
          $ref: '#/components/schemas/Choices'
        SelectedChoices:
          $ref: '#/components/schemas/SelectedChoices'
        ChoiceAnswerSummaries:
          $ref: '#/components/schemas/ChoiceAnswerSummaries'
          description: A list of selected choices to a question in your workload.
        IsApplicable:
          $ref: '#/components/schemas/IsApplicable'
        Risk:
          $ref: '#/components/schemas/Risk'
        Reason:
          $ref: '#/components/schemas/AnswerReason'
          description: The reason why a choice is non-applicable to a question in your workload.
      description: An answer summary of a lens review in a workload.
    AnswerSummaries:
      type: array
      description: List of answer summaries of lens review in a workload.
      items:
        $ref: '#/components/schemas/AnswerSummary'
    ChoiceAnswerSummaries:
      type: array
      items:
        $ref: '#/components/schemas/ChoiceAnswerSummary'
    WorkloadId:
      type: string
      pattern: '[0-9a-f]{32}'
      description: The ID assigned to the workload. This ID is unique within an AWS Region.
    LensAliases:
      type: array
      description: <p>List of lens aliases to associate or disassociate with a workload.</p> <p>Identify a lens using its <a>LensSummary$LensAlias</a>.</p>
      items:
        $ref: '#/components/schemas/LensAlias'
      minItems: 1
    AssociateLensesInput:
      type: object
      required:
        - LensAliases
      title: AssociateLensesInput
      properties:
        LensAliases:
          $ref: '#/components/schemas/LensAliases'
      description: Input to associate lens reviews.
    Base64String:
      type: string
      description: <p>The Base64-encoded string representation of a lens review report.</p> <p>This data can be used to create a PDF file.</p>
    ChoiceTitle:
      type: string
      description: The title of a choice.
      minLength: 1
      maxLength: 512
    ChoiceDescription:
      type: string
      description: The description of a choice.
      minLength: 1
      maxLength: 1024
    Choice:
      type: object
      properties:
        ChoiceId:
          $ref: '#/components/schemas/ChoiceId'
        Title:
          $ref: '#/components/schemas/ChoiceTitle'
        Description:
          $ref: '#/components/schemas/ChoiceDescription'
      description: A choice available to answer question.
    ChoiceStatus:
      type: string
      enum:
        - SELECTED
        - NOT_APPLICABLE
        - UNSELECTED
    ChoiceReason:
      type: string
      enum:
        - OUT_OF_SCOPE
        - BUSINESS_PRIORITIES
        - ARCHITECTURE_CONSTRAINTS
        - OTHER
        - NONE
    ChoiceNotes:
      type: string
      maxLength: 250
    ChoiceAnswer:
      type: object
      properties:
        ChoiceId:
          $ref: '#/components/schemas/ChoiceId'
        Status:
          $ref: '#/components/schemas/ChoiceStatus'
          description: The status of a choice.
        Reason:
          $ref: '#/components/schemas/ChoiceReason'
          description: The reason why a choice is non-applicable to a question in your workload.
        Notes:
          $ref: '#/components/schemas/ChoiceNotes'
          description: The notes associated with a choice.
      description: A choice that has been answered on a question in your workload.
    ChoiceAnswerSummary:
      type: object
      properties:
        ChoiceId:
          $ref: '#/components/schemas/ChoiceId'
        Status:
          $ref: '#/components/schemas/ChoiceStatus'
          description: The status of a choice.
        Reason:
          $ref: '#/components/schemas/ChoiceReason'
          description: The reason why a choice is non-applicable to a question in your workload.
      description: A choice summary that has been answered on a question in your workload.
    ChoiceUpdates:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ChoiceUpdate'
    ClientRequestToken:
      type: string
      description: '<p>A unique case-sensitive string used to ensure that this request is idempotent (executes only once).</p> <p>You should not reuse the same token for other requests. If you retry a request with the same client request token and the same parameters after it has completed successfully, the result of the original request is returned. </p> <important> <p>This token is listed as required, however, if you do not specify it, the AWS SDKs automatically generate one for you. If you are not using the AWS SDK or the AWS CLI, you must provide this token or the request will fail.</p> </important>'
    Count:
      type: integer
      description: A non-negative integer that denotes how many.
      minimum: 0
    MilestoneName:
      type: string
      description: <p>The name of the milestone in a workload.</p> <p>Milestone names must be unique within a workload.</p>
      minLength: 3
      maxLength: 100
    CreateMilestoneInput:
      type: object
      required:
        - MilestoneName
        - ClientRequestToken
      title: CreateMilestoneInput
      properties:
        MilestoneName:
          $ref: '#/components/schemas/MilestoneName'
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
      description: Input for milestone creation.
    MilestoneNumber:
      type: integer
      description: <p>The milestone number.</p> <p>A workload can have a maximum of 100 milestones.</p>
      minimum: 1
      maximum: 100
    WorkloadName:
      type: string
      description: <p>The name of the workload.</p> <p>The name must be unique within an account within a Region. Spaces and capitalization are ignored when checking for uniqueness.</p>
      minLength: 3
      maxLength: 100
    WorkloadDescription:
      type: string
      description: The description for the workload.
      minLength: 3
      maxLength: 250
    WorkloadEnvironment:
      type: string
      enum:
        - PRODUCTION
        - PREPRODUCTION
      description: The environment for the workload.
    WorkloadAccountIds:
      type: array
      description: The list of AWS account IDs associated with the workload.
      items:
        $ref: '#/components/schemas/AwsAccountId'
      maxItems: 100
    WorkloadAwsRegions:
      type: array
      description: 'The list of AWS Regions associated with the workload, for example, <code>us-east-2</code>, or <code>ca-central-1</code>.'
      items:
        $ref: '#/components/schemas/AwsRegion'
      maxItems: 50
    WorkloadNonAwsRegions:
      type: array
      description: ' The list of non-AWS Regions associated with the workload.'
      items:
        $ref: '#/components/schemas/WorkloadNonAwsRegion'
      maxItems: 5
    WorkloadPillarPriorities:
      type: array
      description: 'The priorities of the pillars, which are used to order items in the improvement plan. Each pillar is represented by its <a>PillarReviewSummary$PillarId</a>.'
      items:
        $ref: '#/components/schemas/PillarId'
    WorkloadArchitecturalDesign:
      type: string
      description: The URL of the architectural design for the workload.
      maxLength: 2048
    WorkloadReviewOwner:
      type: string
      description: 'The review owner of the workload. The name, email address, or identifier for the primary group or individual that owns the workload review process.'
      minLength: 3
      maxLength: 255
    WorkloadIndustryType:
      type: string
      description: '<p>The industry type for the workload.</p> <p>If specified, must be one of the following:</p> <ul> <li> <p> <code>Agriculture</code> </p> </li> <li> <p> <code>Automobile</code> </p> </li> <li> <p> <code>Defense</code> </p> </li> <li> <p> <code>Design and Engineering</code> </p> </li> <li> <p> <code>Digital Advertising</code> </p> </li> <li> <p> <code>Education</code> </p> </li> <li> <p> <code>Environmental Protection</code> </p> </li> <li> <p> <code>Financial Services</code> </p> </li> <li> <p> <code>Gaming</code> </p> </li> <li> <p> <code>General Public Services</code> </p> </li> <li> <p> <code>Healthcare</code> </p> </li> <li> <p> <code>Hospitality</code> </p> </li> <li> <p> <code>InfoTech</code> </p> </li> <li> <p> <code>Justice and Public Safety</code> </p> </li> <li> <p> <code>Life Sciences</code> </p> </li> <li> <p> <code>Manufacturing</code> </p> </li> <li> <p> <code>Media &amp; Entertainment</code> </p> </li> <li> <p> <code>Mining &amp; Resources</code> </p> </li> <li> <p> <code>Oil &amp; Gas</code> </p> </li> <li> <p> <code>Power &amp; Utilities</code> </p> </li> <li> <p> <code>Professional Services</code> </p> </li> <li> <p> <code>Real Estate &amp; Construction</code> </p> </li> <li> <p> <code>Retail &amp; Wholesale</code> </p> </li> <li> <p> <code>Social Protection</code> </p> </li> <li> <p> <code>Telecommunications</code> </p> </li> <li> <p> <code>Travel, Transportation &amp; Logistics</code> </p> </li> <li> <p> <code>Other</code> </p> </li> </ul>'
      maxLength: 100
    WorkloadIndustry:
      type: string
      description: The industry for the workload.
      maxLength: 100
    WorkloadLenses:
      type: array
      description: The list of lenses associated with the workload. Each lens is identified by its <a>LensSummary$LensAlias</a>.
      items:
        $ref: '#/components/schemas/LensAlias'
    TagMap:
      type: object
      minProperties: 1
      maxProperties: 50
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    CreateWorkloadInput:
      type: object
      required:
        - WorkloadName
        - Description
        - Environment
        - ReviewOwner
        - Lenses
        - ClientRequestToken
      title: CreateWorkloadInput
      properties:
        WorkloadName:
          $ref: '#/components/schemas/WorkloadName'
        Description:
          $ref: '#/components/schemas/WorkloadDescription'
        Environment:
          $ref: '#/components/schemas/WorkloadEnvironment'
        AccountIds:
          $ref: '#/components/schemas/WorkloadAccountIds'
        AwsRegions:
          $ref: '#/components/schemas/WorkloadAwsRegions'
        NonAwsRegions:
          $ref: '#/components/schemas/WorkloadNonAwsRegions'
        PillarPriorities:
          $ref: '#/components/schemas/WorkloadPillarPriorities'
        ArchitecturalDesign:
          $ref: '#/components/schemas/WorkloadArchitecturalDesign'
        ReviewOwner:
          $ref: '#/components/schemas/WorkloadReviewOwner'
        IndustryType:
          $ref: '#/components/schemas/WorkloadIndustryType'
        Industry:
          $ref: '#/components/schemas/WorkloadIndustry'
        Lenses:
          $ref: '#/components/schemas/WorkloadLenses'
        Notes:
          $ref: '#/components/schemas/Notes'
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: The tags to be associated with the workload.
      description: Input for workload creation.
    WorkloadArn:
      type: string
      description: The ARN for the workload.
    SharedWith:
      type: string
      description: The AWS account ID or IAM role with which the workload is shared.
      minLength: 12
      maxLength: 2048
    PermissionType:
      type: string
      enum:
        - READONLY
        - CONTRIBUTOR
      description: Permission granted on a workload share.
    CreateWorkloadShareInput:
      type: object
      required:
        - SharedWith
        - PermissionType
        - ClientRequestToken
      title: CreateWorkloadShareInput
      properties:
        SharedWith:
          $ref: '#/components/schemas/SharedWith'
        PermissionType:
          $ref: '#/components/schemas/PermissionType'
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
      description: Input for Create Workload Share
    ShareId:
      type: string
      pattern: '[0-9a-f]{32}'
      description: The ID associated with the workload share.
    DeleteWorkloadInput:
      type: object
      title: DeleteWorkloadInput
      properties: {}
      description: Input for workload deletion.
    DeleteWorkloadShareInput:
      type: object
      title: DeleteWorkloadShareInput
      properties: {}
      description: Input for Delete Workload Share
    DifferenceStatus:
      type: string
      enum:
        - UPDATED
        - NEW
        - DELETED
    DisassociateLensesInput:
      type: object
      required:
        - LensAliases
      title: DisassociateLensesInput
      properties:
        LensAliases:
          $ref: '#/components/schemas/LensAliases'
      description: Input to disassociate lens reviews.
    GetAnswerInput:
      type: object
      title: GetAnswerInput
      properties: {}
      description: Input to get answer.
    GetLensReviewInput:
      type: object
      title: GetLensReviewInput
      properties: {}
      description: Input to get lens review.
    LensReview:
      type: object
      properties:
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
        LensVersion:
          $ref: '#/components/schemas/LensVersion'
          description: The version of the lens.
        LensName:
          $ref: '#/components/schemas/LensName'
        LensStatus:
          $ref: '#/components/schemas/LensStatus'
          description: The status of the lens.
        PillarReviewSummaries:
          $ref: '#/components/schemas/PillarReviewSummaries'
        UpdatedAt:
          $ref: '#/components/schemas/Timestamp'
        Notes:
          $ref: '#/components/schemas/Notes'
        RiskCounts:
          $ref: '#/components/schemas/RiskCounts'
        NextToken:
          $ref: '#/components/schemas/NextToken'
      description: A lens review of a question.
    GetLensReviewReportInput:
      type: object
      title: GetLensReviewReportInput
      properties: {}
      description: Input to get lens review report.
    LensReviewReport:
      type: object
      properties:
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
        Base64String:
          $ref: '#/components/schemas/Base64String'
      description: A report of a lens review.
    LensVersion:
      type: string
      minLength: 1
      maxLength: 128
    GetLensVersionDifferenceInput:
      type: object
      title: GetLensVersionDifferenceInput
      properties: {}
    VersionDifferences:
      type: object
      properties:
        PillarDifferences:
          $ref: '#/components/schemas/PillarDifferences'
          description: The differences between the base and latest versions of the lens.
      description: The differences between the base and latest versions of the lens.
    GetMilestoneInput:
      type: object
      title: GetMilestoneInput
      properties: {}
      description: Input to get a milestone.
    Milestone:
      type: object
      properties:
        MilestoneNumber:
          $ref: '#/components/schemas/MilestoneNumber'
        MilestoneName:
          $ref: '#/components/schemas/MilestoneName'
        RecordedAt:
          $ref: '#/components/schemas/Timestamp'
        Workload:
          $ref: '#/components/schemas/Workload'
      description: A milestone return object.
    GetWorkloadInput:
      type: object
      title: GetWorkloadInput
      properties: {}
      description: Input to get a workload.
    Workload:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        WorkloadArn:
          $ref: '#/components/schemas/WorkloadArn'
        WorkloadName:
          $ref: '#/components/schemas/WorkloadName'
        Description:
          $ref: '#/components/schemas/WorkloadDescription'
        Environment:
          $ref: '#/components/schemas/WorkloadEnvironment'
        UpdatedAt:
          $ref: '#/components/schemas/Timestamp'
        AccountIds:
          $ref: '#/components/schemas/WorkloadAccountIds'
        AwsRegions:
          $ref: '#/components/schemas/WorkloadAwsRegions'
        NonAwsRegions:
          $ref: '#/components/schemas/WorkloadNonAwsRegions'
        ArchitecturalDesign:
          $ref: '#/components/schemas/WorkloadArchitecturalDesign'
        ReviewOwner:
          $ref: '#/components/schemas/WorkloadReviewOwner'
        ReviewRestrictionDate:
          $ref: '#/components/schemas/Timestamp'
        IsReviewOwnerUpdateAcknowledged:
          $ref: '#/components/schemas/IsReviewOwnerUpdateAcknowledged'
          description: '<p>Flag indicating whether the workload owner has acknowledged that the <i>Review owner</i> field is required.</p> <p>If a <b>Review owner</b> is not added to the workload within 60 days of acknowledgement, access to the workload is restricted until an owner is added.</p>'
        IndustryType:
          $ref: '#/components/schemas/WorkloadIndustryType'
        Industry:
          $ref: '#/components/schemas/WorkloadIndustry'
        Notes:
          $ref: '#/components/schemas/Notes'
        ImprovementStatus:
          $ref: '#/components/schemas/WorkloadImprovementStatus'
        RiskCounts:
          $ref: '#/components/schemas/RiskCounts'
        PillarPriorities:
          $ref: '#/components/schemas/WorkloadPillarPriorities'
        Lenses:
          $ref: '#/components/schemas/WorkloadLenses'
        Owner:
          $ref: '#/components/schemas/AwsAccountId'
        ShareInvitationId:
          $ref: '#/components/schemas/ShareInvitationId'
          description: The ID assigned to the share invitation.
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: The tags associated with the workload.
      description: A workload return object.
    ImprovementSummary:
      type: object
      properties:
        QuestionId:
          $ref: '#/components/schemas/QuestionId'
        PillarId:
          $ref: '#/components/schemas/PillarId'
        QuestionTitle:
          $ref: '#/components/schemas/QuestionTitle'
        Risk:
          $ref: '#/components/schemas/Risk'
        ImprovementPlanUrl:
          $ref: '#/components/schemas/ImprovementPlanUrl'
      description: An improvement summary of a lens review in a workload.
    ImprovementSummaries:
      type: array
      description: List of improvement summaries of lens review in a workload.
      items:
        $ref: '#/components/schemas/ImprovementSummary'
    IsReviewOwnerUpdateAcknowledged:
      type: boolean
    LensDescription:
      type: string
      description: The description of the lens.
      minLength: 1
      maxLength: 1024
    LensName:
      type: string
      description: The full name of the lens.
      minLength: 1
      maxLength: 128
    LensStatus:
      type: string
      enum:
        - CURRENT
        - NOT_CURRENT
        - DEPRECATED
    PillarReviewSummaries:
      type: array
      description: List of pillar review summaries of lens review in a workload.
      items:
        $ref: '#/components/schemas/PillarReviewSummary'
    Timestamp:
      type: string
      description: The date and time recorded.
      format: date-time
    RiskCounts:
      type: object
      description: A map from risk names to the count of how questions have that rating.
      additionalProperties:
        $ref: '#/components/schemas/Count'
    NextToken:
      type: string
      description: The token to use to retrieve the next set of results.
    LensReviewSummary:
      type: object
      properties:
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
        LensVersion:
          $ref: '#/components/schemas/LensVersion'
          description: The version of the lens.
        LensName:
          $ref: '#/components/schemas/LensName'
        LensStatus:
          $ref: '#/components/schemas/LensStatus'
          description: The status of the lens.
        UpdatedAt:
          $ref: '#/components/schemas/Timestamp'
        RiskCounts:
          $ref: '#/components/schemas/RiskCounts'
      description: A lens review summary of a workload.
    LensReviewSummaries:
      type: array
      description: List of lens summaries of lens reviews of a workload.
      items:
        $ref: '#/components/schemas/LensReviewSummary'
    LensSummary:
      type: object
      properties:
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
        LensVersion:
          $ref: '#/components/schemas/LensVersion'
          description: The version of the lens.
        LensName:
          $ref: '#/components/schemas/LensName'
        Description:
          $ref: '#/components/schemas/LensDescription'
      description: A lens summary of a lens.
    LensSummaries:
      type: array
      description: List of lens summaries of available lenses.
      items:
        $ref: '#/components/schemas/LensSummary'
    LensUpgradeSummary:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        WorkloadName:
          $ref: '#/components/schemas/WorkloadName'
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
        CurrentLensVersion:
          $ref: '#/components/schemas/LensVersion'
          description: The current version of the lens.
        LatestLensVersion:
          $ref: '#/components/schemas/LensVersion'
          description: The latest version of the lens.
      description: Lens upgrade summary return object.
    ListAnswersMaxResults:
      type: integer
      minimum: 1
      maximum: 50
    ListAnswersInput:
      type: object
      title: ListAnswersInput
      properties: {}
      description: Input to list answers.
    ListLensReviewImprovementsMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    ListLensReviewImprovementsInput:
      type: object
      title: ListLensReviewImprovementsInput
      properties: {}
      description: Input to list lens review improvements.
    MaxResults:
      type: integer
      description: The maximum number of results to return for this request.
      minimum: 1
      maximum: 50
    ListLensReviewsInput:
      type: object
      title: ListLensReviewsInput
      properties: {}
      description: Input to list lens reviews.
    ListLensesInput:
      type: object
      title: ListLensesInput
      properties: {}
      description: Input to list lenses.
    ListMilestonesInput:
      type: object
      title: ListMilestonesInput
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
      description: Input to list all milestones for a workload.
    MilestoneSummaries:
      type: array
      description: A list of milestone summaries.
      items:
        $ref: '#/components/schemas/MilestoneSummary'
    ListNotificationsMaxResults:
      type: integer
      minimum: 1
      maximum: 50
    ListNotificationsInput:
      type: object
      title: ListNotificationsInput
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/ListNotificationsMaxResults'
          description: The maximum number of results to return for this request.
    NotificationSummaries:
      type: array
      items:
        $ref: '#/components/schemas/NotificationSummary'
    WorkloadNamePrefix:
      type: string
      description: An optional string added to the beginning of each workload name returned in the results.
      maxLength: 100
    ListShareInvitationsMaxResults:
      type: integer
      minimum: 1
      maximum: 50
    ListShareInvitationsInput:
      type: object
      title: ListShareInvitationsInput
      properties: {}
      description: Input for List Share Invitations
    ShareInvitationSummaries:
      type: array
      items:
        $ref: '#/components/schemas/ShareInvitationSummary'
    ListTagsForResourceInput:
      type: object
      title: ListTagsForResourceInput
      properties: {}
    SharedWithPrefix:
      type: string
      maxLength: 100
    ListWorkloadSharesMaxResults:
      type: integer
      minimum: 1
      maximum: 50
    ListWorkloadSharesInput:
      type: object
      title: ListWorkloadSharesInput
      properties: {}
      description: Input for List Workload Share
    WorkloadShareSummaries:
      type: array
      description: A list of workload share summaries.
      items:
        $ref: '#/components/schemas/WorkloadShareSummary'
    ListWorkloadsMaxResults:
      type: integer
      minimum: 1
      maximum: 50
    ListWorkloadsInput:
      type: object
      title: ListWorkloadsInput
      properties:
        WorkloadNamePrefix:
          $ref: '#/components/schemas/WorkloadNamePrefix'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/ListWorkloadsMaxResults'
          description: The maximum number of results to return for this request.
      description: Input to list all workloads.
    WorkloadSummaries:
      type: array
      description: A list of workload summaries.
      items:
        $ref: '#/components/schemas/WorkloadSummary'
    MilestoneSummary:
      type: object
      properties:
        MilestoneNumber:
          $ref: '#/components/schemas/MilestoneNumber'
        MilestoneName:
          $ref: '#/components/schemas/MilestoneName'
        RecordedAt:
          $ref: '#/components/schemas/Timestamp'
        WorkloadSummary:
          $ref: '#/components/schemas/WorkloadSummary'
      description: A milestone summary return object.
    WorkloadSummary:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        WorkloadArn:
          $ref: '#/components/schemas/WorkloadArn'
        WorkloadName:
          $ref: '#/components/schemas/WorkloadName'
        Owner:
          $ref: '#/components/schemas/AwsAccountId'
        UpdatedAt:
          $ref: '#/components/schemas/Timestamp'
        Lenses:
          $ref: '#/components/schemas/WorkloadLenses'
        RiskCounts:
          $ref: '#/components/schemas/RiskCounts'
        ImprovementStatus:
          $ref: '#/components/schemas/WorkloadImprovementStatus'
      description: A workload summary return object.
    NotificationSummary:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/NotificationType'
          description: The type of notification.
        LensUpgradeSummary:
          $ref: '#/components/schemas/LensUpgradeSummary'
          description: Summary of lens upgrade.
      description: A notification summary return object.
    NotificationType:
      type: string
      enum:
        - LENS_VERSION_UPGRADED
        - LENS_VERSION_DEPRECATED
    QuestionDifferences:
      type: array
      items:
        $ref: '#/components/schemas/QuestionDifference'
    PillarDifference:
      type: object
      properties:
        PillarId:
          $ref: '#/components/schemas/PillarId'
        DifferenceStatus:
          $ref: '#/components/schemas/DifferenceStatus'
          description: Indicates the type of change to the pillar.
        QuestionDifferences:
          $ref: '#/components/schemas/QuestionDifferences'
          description: List of question differences.
      description: A pillar difference return object.
    PillarDifferences:
      type: array
      items:
        $ref: '#/components/schemas/PillarDifference'
    PillarName:
      type: string
      description: The name of the pillar.
      minLength: 1
      maxLength: 128
    PillarNotes:
      type: object
      description: List of pillar notes of a lens review in a workload.
      additionalProperties:
        $ref: '#/components/schemas/Notes'
    PillarReviewSummary:
      type: object
      properties:
        PillarId:
          $ref: '#/components/schemas/PillarId'
        PillarName:
          $ref: '#/components/schemas/PillarName'
        Notes:
          $ref: '#/components/schemas/Notes'
        RiskCounts:
          $ref: '#/components/schemas/RiskCounts'
      description: A pillar review summary of a lens review.
    QuestionDifference:
      type: object
      properties:
        QuestionId:
          $ref: '#/components/schemas/QuestionId'
        QuestionTitle:
          $ref: '#/components/schemas/QuestionTitle'
        DifferenceStatus:
          $ref: '#/components/schemas/DifferenceStatus'
          description: Indicates the type of change to the question.
      description: A question difference return object.
    ShareInvitationId:
      type: string
      pattern: '[0-9a-f]{32}'
    ShareInvitation:
      type: object
      properties:
        ShareInvitationId:
          $ref: '#/components/schemas/ShareInvitationId'
          description: The ID assigned to the share invitation.
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
      description: The share invitation.
    ShareInvitationAction:
      type: string
      enum:
        - ACCEPT
        - REJECT
      description: Share invitation action taken by contributor.
    ShareInvitationSummary:
      type: object
      properties:
        ShareInvitationId:
          $ref: '#/components/schemas/ShareInvitationId'
          description: The ID assigned to the share invitation.
        SharedBy:
          $ref: '#/components/schemas/AwsAccountId'
        SharedWith:
          $ref: '#/components/schemas/SharedWith'
        PermissionType:
          $ref: '#/components/schemas/PermissionType'
        WorkloadName:
          $ref: '#/components/schemas/WorkloadName'
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
      description: A share invitation summary return object.
    ShareStatus:
      type: string
      enum:
        - ACCEPTED
        - REJECTED
        - PENDING
        - REVOKED
        - EXPIRED
      description: The status of a workload share.
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      minItems: 1
      maxItems: 50
    TagResourceInput:
      type: object
      required:
        - Tags
      title: TagResourceInput
      properties:
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: The tags for the resource.
    UntagResourceInput:
      type: object
      title: UntagResourceInput
      properties: {}
    UpdateAnswerInput:
      type: object
      title: UpdateAnswerInput
      properties:
        SelectedChoices:
          $ref: '#/components/schemas/SelectedChoices'
        ChoiceUpdates:
          $ref: '#/components/schemas/ChoiceUpdates'
          description: A list of choices to update on a question in your workload. The String key corresponds to the choice ID to be updated.
        Notes:
          $ref: '#/components/schemas/Notes'
        IsApplicable:
          $ref: '#/components/schemas/IsApplicable'
        Reason:
          $ref: '#/components/schemas/AnswerReason'
          description: The reason why a question is not applicable to your workload.
      description: Input to update answer.
    UpdateLensReviewInput:
      type: object
      title: UpdateLensReviewInput
      properties:
        LensNotes:
          $ref: '#/components/schemas/Notes'
        PillarNotes:
          $ref: '#/components/schemas/PillarNotes'
      description: Input for update lens review.
    UpdateShareInvitationInput:
      type: object
      required:
        - ShareInvitationAction
      title: UpdateShareInvitationInput
      properties:
        ShareInvitationAction:
          $ref: '#/components/schemas/ShareInvitationAction'
      description: Input for Update Share Invitation
    WorkloadImprovementStatus:
      type: string
      enum:
        - NOT_APPLICABLE
        - NOT_STARTED
        - IN_PROGRESS
        - COMPLETE
        - RISK_ACKNOWLEDGED
      description: The improvement status for a workload.
    UpdateWorkloadInput:
      type: object
      title: UpdateWorkloadInput
      properties:
        WorkloadName:
          $ref: '#/components/schemas/WorkloadName'
        Description:
          $ref: '#/components/schemas/WorkloadDescription'
        Environment:
          $ref: '#/components/schemas/WorkloadEnvironment'
        AccountIds:
          $ref: '#/components/schemas/WorkloadAccountIds'
        AwsRegions:
          $ref: '#/components/schemas/WorkloadAwsRegions'
        NonAwsRegions:
          $ref: '#/components/schemas/WorkloadNonAwsRegions'
        PillarPriorities:
          $ref: '#/components/schemas/WorkloadPillarPriorities'
        ArchitecturalDesign:
          $ref: '#/components/schemas/WorkloadArchitecturalDesign'
        ReviewOwner:
          $ref: '#/components/schemas/WorkloadReviewOwner'
        IsReviewOwnerUpdateAcknowledged:
          $ref: '#/components/schemas/IsReviewOwnerUpdateAcknowledged'
          description: '<p>Flag indicating whether the workload owner has acknowledged that the <i>Review owner</i> field is required.</p> <p>If a <b>Review owner</b> is not added to the workload within 60 days of acknowledgement, access to the workload is restricted until an owner is added.</p>'
        IndustryType:
          $ref: '#/components/schemas/WorkloadIndustryType'
        Industry:
          $ref: '#/components/schemas/WorkloadIndustry'
        Notes:
          $ref: '#/components/schemas/Notes'
        ImprovementStatus:
          $ref: '#/components/schemas/WorkloadImprovementStatus'
      description: Input to update a workload.
    UpdateWorkloadShareInput:
      type: object
      required:
        - PermissionType
      title: UpdateWorkloadShareInput
      properties:
        PermissionType:
          $ref: '#/components/schemas/PermissionType'
      description: Input for Update Workload Share
    WorkloadShare:
      type: object
      properties:
        ShareId:
          $ref: '#/components/schemas/ShareId'
        SharedBy:
          $ref: '#/components/schemas/AwsAccountId'
        SharedWith:
          $ref: '#/components/schemas/SharedWith'
        PermissionType:
          $ref: '#/components/schemas/PermissionType'
        Status:
          $ref: '#/components/schemas/ShareStatus'
        WorkloadName:
          $ref: '#/components/schemas/WorkloadName'
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
      description: A workload share return object.
    UpgradeLensReviewInput:
      type: object
      required:
        - MilestoneName
      title: UpgradeLensReviewInput
      properties:
        MilestoneName:
          $ref: '#/components/schemas/MilestoneName'
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
    WorkloadShareSummary:
      type: object
      properties:
        ShareId:
          $ref: '#/components/schemas/ShareId'
        SharedWith:
          $ref: '#/components/schemas/SharedWith'
        PermissionType:
          $ref: '#/components/schemas/PermissionType'
        Status:
          $ref: '#/components/schemas/ShareStatus'
      description: A workload share summary return object.
security:
  - hmac: []
