openapi: 3.0.0
info:
  version: '2018-09-05'
  x-release: v4
  title: Amazon Pinpoint SMS and Voice Service
  description: Pinpoint SMS and Voice Messaging public facing APIs
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: sms-voice
  x-aws-signingName: sms-voice
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/sms-voice-2018-09-05.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/pinpoint/'
servers:
  - url: 'http://sms-voice.pinpoint.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Pinpoint SMS Voice multi-region endpoint
  - url: 'https://sms-voice.pinpoint.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Pinpoint SMS Voice multi-region endpoint
  - url: 'http://sms-voice.pinpoint.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Pinpoint SMS Voice endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://sms-voice.pinpoint.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Pinpoint SMS Voice endpoint for China (Beijing) and China (Ningxia)
paths:
  /v1/sms-voice/configuration-sets:
    post:
      operationId: CreateConfigurationSet
      description: 'Create a new configuration set. After you create the configuration set, you can add one or more event destinations to it.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateConfigurationSetResponse'
        '480':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '481':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: InternalServiceErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
        '484':
          description: AlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ConfigurationSetName:
                  description: The name that you want to give the configuration set.
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListConfigurationSets
      description: List all of the configuration sets associated with your Amazon Pinpoint account in the current region.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConfigurationSetsResponse'
        '480':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '481':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '482':
          description: InternalServiceErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
      parameters:
        - name: NextToken
          in: query
          required: false
          description: A token returned from a previous call to the API that indicates the position in the list of results.
          schema:
            type: string
        - name: PageSize
          in: query
          required: false
          description: Used to specify the number of items that should be returned in the response.
          schema:
            type: string
  '/v1/sms-voice/configuration-sets/{ConfigurationSetName}/event-destinations':
    post:
      operationId: CreateConfigurationSetEventDestination
      description: Create a new event destination in a configuration set.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateConfigurationSetEventDestinationResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: InternalServiceErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '485':
          description: AlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
      parameters:
        - name: ConfigurationSetName
          in: path
          required: true
          description: ConfigurationSetName
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                EventDestination:
                  description: An object that defines a single event destination.
                  type: object
                  properties:
                    CloudWatchLogsDestination:
                      $ref: '#/components/schemas/CloudWatchLogsDestination'
                    Enabled:
                      $ref: '#/components/schemas/Boolean'
                      description: 'Indicates whether or not the event destination is enabled. If the event destination is enabled, then Amazon Pinpoint sends response data to the specified event destination.'
                    KinesisFirehoseDestination:
                      $ref: '#/components/schemas/KinesisFirehoseDestination'
                    MatchingEventTypes:
                      $ref: '#/components/schemas/EventTypes'
                    SnsDestination:
                      $ref: '#/components/schemas/SnsDestination'
                EventDestinationName:
                  description: A name that identifies the event destination.
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetConfigurationSetEventDestinations
      description: 'Obtain information about an event destination, including the types of events it reports, the Amazon Resource Name (ARN) of the destination, and the name of the event destination.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConfigurationSetEventDestinationsResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: InternalServiceErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
      parameters:
        - name: ConfigurationSetName
          in: path
          required: true
          description: ConfigurationSetName
          schema:
            type: string
  '/v1/sms-voice/configuration-sets/{ConfigurationSetName}':
    delete:
      operationId: DeleteConfigurationSet
      description: Deletes an existing configuration set.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteConfigurationSetResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: InternalServiceErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
      parameters:
        - name: ConfigurationSetName
          in: path
          required: true
          description: ConfigurationSetName
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/v1/sms-voice/configuration-sets/{ConfigurationSetName}/event-destinations/{EventDestinationName}':
    delete:
      operationId: DeleteConfigurationSetEventDestination
      description: Deletes an event destination in a configuration set.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteConfigurationSetEventDestinationResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: InternalServiceErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
      parameters:
        - name: ConfigurationSetName
          in: path
          required: true
          description: ConfigurationSetName
          schema:
            type: string
        - name: EventDestinationName
          in: path
          required: true
          description: EventDestinationName
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdateConfigurationSetEventDestination
      description: 'Update an event destination in a configuration set. An event destination is a location that you publish information about your voice calls to. For example, you can log an event to an Amazon CloudWatch destination when a call fails.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateConfigurationSetEventDestinationResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: InternalServiceErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
      parameters:
        - name: ConfigurationSetName
          in: path
          required: true
          description: ConfigurationSetName
          schema:
            type: string
        - name: EventDestinationName
          in: path
          required: true
          description: EventDestinationName
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                EventDestination:
                  description: An object that defines a single event destination.
                  type: object
                  properties:
                    CloudWatchLogsDestination:
                      $ref: '#/components/schemas/CloudWatchLogsDestination'
                    Enabled:
                      $ref: '#/components/schemas/Boolean'
                      description: 'Indicates whether or not the event destination is enabled. If the event destination is enabled, then Amazon Pinpoint sends response data to the specified event destination.'
                    KinesisFirehoseDestination:
                      $ref: '#/components/schemas/KinesisFirehoseDestination'
                    MatchingEventTypes:
                      $ref: '#/components/schemas/EventTypes'
                    SnsDestination:
                      $ref: '#/components/schemas/SnsDestination'
  /v1/sms-voice/voice/message:
    post:
      operationId: SendVoiceMessage
      description: Create a new voice message and send it to a recipient's phone number.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendVoiceMessageResponse'
        '480':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '481':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '482':
          description: InternalServiceErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                CallerId:
                  description: The phone number that appears on recipients' devices when they receive the message.
                  type: string
                ConfigurationSetName:
                  description: The name of the configuration set that you want to use to send the message.
                  type: string
                Content:
                  description: An object that contains a voice message and information about the recipient that you want to send it to.
                  type: object
                  properties:
                    CallInstructionsMessage:
                      $ref: '#/components/schemas/CallInstructionsMessageType'
                    PlainTextMessage:
                      $ref: '#/components/schemas/PlainTextMessageType'
                    SSMLMessage:
                      $ref: '#/components/schemas/SSMLMessageType'
                DestinationPhoneNumber:
                  description: The phone number that you want to send the voice message to.
                  type: string
                OriginationPhoneNumber:
                  description: 'The phone number that Amazon Pinpoint should use to send the voice message. This isn''t necessarily the phone number that appears on recipients'' devices when they receive the message, because you can specify a CallerId parameter in the request.'
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CreateConfigurationSetResponse:
      type: object
      properties: {}
      description: An empty object that indicates that the configuration set was successfully created.
    TooManyRequestsException: {}
    BadRequestException: {}
    LimitExceededException: {}
    InternalServiceErrorException: {}
    AlreadyExistsException: {}
    CreateConfigurationSetEventDestinationResponse:
      type: object
      properties: {}
      description: An empty object that indicates that the event destination was created successfully.
    CloudWatchLogsDestination:
      type: object
      properties:
        IamRoleArn:
          $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of an Amazon Identity and Access Management (IAM) role that is able to write event data to an Amazon CloudWatch destination.
        LogGroupArn:
          $ref: '#/components/schemas/String'
          description: The name of the Amazon CloudWatch Log Group that you want to record events in.
      description: An object that contains information about an event destination that sends data to Amazon CloudWatch Logs.
    Boolean:
      type: boolean
    KinesisFirehoseDestination:
      type: object
      properties:
        DeliveryStreamArn:
          $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of an IAM role that can write data to an Amazon Kinesis Data Firehose stream.
        IamRoleArn:
          $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the Amazon Kinesis Data Firehose destination that you want to use in the event destination.
      description: An object that contains information about an event destination that sends data to Amazon Kinesis Data Firehose.
    EventTypes:
      type: array
      description: An array of EventDestination objects. Each EventDestination object includes ARNs and other information that define an event destination.
      items:
        $ref: '#/components/schemas/EventType'
    SnsDestination:
      type: object
      properties:
        TopicArn:
          $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the Amazon SNS topic that you want to publish events to.
      description: An object that contains information about an event destination that sends data to Amazon SNS.
    NotFoundException: {}
    DeleteConfigurationSetResponse:
      type: object
      properties: {}
      description: An empty object that indicates that the configuration set was deleted successfully.
    DeleteConfigurationSetEventDestinationResponse:
      type: object
      properties: {}
      description: An empty object that indicates that the event destination was deleted successfully.
    GetConfigurationSetEventDestinationsResponse:
      type: object
      properties:
        EventDestinations:
          $ref: '#/components/schemas/EventDestinations'
      description: An object that contains information about an event destination.
    ListConfigurationSetsResponse:
      type: object
      properties:
        ConfigurationSets:
          $ref: '#/components/schemas/ConfigurationSets'
          description: An object that contains a list of configuration sets for your account in the current region.
        NextToken:
          $ref: '#/components/schemas/NextTokenString'
          description: A token returned from a previous call to ListConfigurationSets to indicate the position in the list of configuration sets.
      description: An object that contains information about the configuration sets for your account in the current region.
    SendVoiceMessageResponse:
      type: object
      properties:
        MessageId:
          $ref: '#/components/schemas/String'
          description: A unique identifier for the voice message.
      description: An object that that contains the Message ID of a Voice message that was sent successfully.
    CallInstructionsMessageType:
      type: object
      properties:
        Text:
          $ref: '#/components/schemas/NonEmptyString'
          description: 'The language to use when delivering the message. For a complete list of supported languages, see the Amazon Polly Developer Guide.'
      description: An object that defines a message that contains text formatted using Amazon Pinpoint Voice Instructions markup.
    PlainTextMessageType:
      type: object
      properties:
        LanguageCode:
          $ref: '#/components/schemas/String'
          description: 'The language to use when delivering the message. For a complete list of supported languages, see the Amazon Polly Developer Guide.'
        Text:
          $ref: '#/components/schemas/NonEmptyString'
          description: The plain (not SSML-formatted) text to deliver to the recipient.
        VoiceId:
          $ref: '#/components/schemas/String'
          description: 'The name of the voice that you want to use to deliver the message. For a complete list of supported voices, see the Amazon Polly Developer Guide.'
      description: An object that defines a message that contains unformatted text.
    SSMLMessageType:
      type: object
      properties:
        LanguageCode:
          $ref: '#/components/schemas/String'
          description: 'The language to use when delivering the message. For a complete list of supported languages, see the Amazon Polly Developer Guide.'
        Text:
          $ref: '#/components/schemas/NonEmptyString'
          description: The SSML-formatted text to deliver to the recipient.
        VoiceId:
          $ref: '#/components/schemas/String'
          description: 'The name of the voice that you want to use to deliver the message. For a complete list of supported voices, see the Amazon Polly Developer Guide.'
      description: An object that defines a message that contains SSML-formatted text.
    UpdateConfigurationSetEventDestinationResponse:
      type: object
      properties: {}
      description: An empty object that indicates that the event destination was updated successfully.
    NonEmptyString:
      type: string
    String:
      type: string
    WordCharactersWithDelimiters:
      type: string
    ConfigurationSets:
      type: array
      description: An array that contains all of the configuration sets in your Amazon Pinpoint account in the current AWS Region.
      items:
        $ref: '#/components/schemas/WordCharactersWithDelimiters'
    __string:
      type: string
    EventDestinationDefinition:
      type: object
      properties:
        CloudWatchLogsDestination:
          $ref: '#/components/schemas/CloudWatchLogsDestination'
        Enabled:
          $ref: '#/components/schemas/Boolean'
          description: 'Indicates whether or not the event destination is enabled. If the event destination is enabled, then Amazon Pinpoint sends response data to the specified event destination.'
        KinesisFirehoseDestination:
          $ref: '#/components/schemas/KinesisFirehoseDestination'
        MatchingEventTypes:
          $ref: '#/components/schemas/EventTypes'
        SnsDestination:
          $ref: '#/components/schemas/SnsDestination'
      description: An object that defines a single event destination.
    CreateConfigurationSetEventDestinationRequest:
      type: object
      title: CreateConfigurationSetEventDestinationRequest
      properties:
        EventDestination:
          $ref: '#/components/schemas/EventDestinationDefinition'
        EventDestinationName:
          $ref: '#/components/schemas/NonEmptyString'
          description: A name that identifies the event destination.
      description: Create a new event destination in a configuration set.
    CreateConfigurationSetRequest:
      type: object
      title: CreateConfigurationSetRequest
      properties:
        ConfigurationSetName:
          $ref: '#/components/schemas/WordCharactersWithDelimiters'
          description: The name that you want to give the configuration set.
      description: A request to create a new configuration set.
    DeleteConfigurationSetEventDestinationRequest:
      type: object
      title: DeleteConfigurationSetEventDestinationRequest
      properties: {}
    DeleteConfigurationSetRequest:
      type: object
      title: DeleteConfigurationSetRequest
      properties: {}
    EventDestination:
      type: object
      properties:
        CloudWatchLogsDestination:
          $ref: '#/components/schemas/CloudWatchLogsDestination'
        Enabled:
          $ref: '#/components/schemas/Boolean'
          description: 'Indicates whether or not the event destination is enabled. If the event destination is enabled, then Amazon Pinpoint sends response data to the specified event destination.'
        KinesisFirehoseDestination:
          $ref: '#/components/schemas/KinesisFirehoseDestination'
        MatchingEventTypes:
          $ref: '#/components/schemas/EventTypes'
        Name:
          $ref: '#/components/schemas/String'
          description: A name that identifies the event destination configuration.
        SnsDestination:
          $ref: '#/components/schemas/SnsDestination'
      description: An object that defines an event destination.
    EventDestinations:
      type: array
      description: An array of EventDestination objects. Each EventDestination object includes ARNs and other information that define an event destination.
      items:
        $ref: '#/components/schemas/EventDestination'
    EventType:
      type: string
      enum:
        - INITIATED_CALL
        - RINGING
        - ANSWERED
        - COMPLETED_CALL
        - BUSY
        - FAILED
        - NO_ANSWER
      description: The types of events that are sent to the event destination.
    GetConfigurationSetEventDestinationsRequest:
      type: object
      title: GetConfigurationSetEventDestinationsRequest
      properties: {}
    ListConfigurationSetsRequest:
      type: object
      title: ListConfigurationSetsRequest
      properties: {}
    NextTokenString:
      type: string
    VoiceMessageContent:
      type: object
      properties:
        CallInstructionsMessage:
          $ref: '#/components/schemas/CallInstructionsMessageType'
        PlainTextMessage:
          $ref: '#/components/schemas/PlainTextMessageType'
        SSMLMessage:
          $ref: '#/components/schemas/SSMLMessageType'
      description: An object that contains a voice message and information about the recipient that you want to send it to.
    SendVoiceMessageRequest:
      type: object
      title: SendVoiceMessageRequest
      properties:
        CallerId:
          $ref: '#/components/schemas/String'
          description: The phone number that appears on recipients' devices when they receive the message.
        ConfigurationSetName:
          $ref: '#/components/schemas/WordCharactersWithDelimiters'
          description: The name of the configuration set that you want to use to send the message.
        Content:
          $ref: '#/components/schemas/VoiceMessageContent'
        DestinationPhoneNumber:
          $ref: '#/components/schemas/NonEmptyString'
          description: The phone number that you want to send the voice message to.
        OriginationPhoneNumber:
          $ref: '#/components/schemas/NonEmptyString'
          description: 'The phone number that Amazon Pinpoint should use to send the voice message. This isn''t necessarily the phone number that appears on recipients'' devices when they receive the message, because you can specify a CallerId parameter in the request.'
      description: SendVoiceMessageRequest
    UpdateConfigurationSetEventDestinationRequest:
      type: object
      title: UpdateConfigurationSetEventDestinationRequest
      properties:
        EventDestination:
          $ref: '#/components/schemas/EventDestinationDefinition'
      description: UpdateConfigurationSetEventDestinationRequest
security:
  - hmac: []
