openapi: 3.0.0
info:
  version: '2015-05-28'
  x-release: v4
  title: AWS IoT Data Plane
  description: '<fullname>AWS IoT</fullname> <p>AWS IoT-Data enables secure, bi-directional communication between Internet-connected things (such as sensors, actuators, embedded devices, or smart appliances) and the AWS cloud. It implements a broker for applications and things to publish messages over HTTP (Publish) and retrieve, update, and delete shadows. A shadow is a persistent representation of your things and their state in the AWS cloud.</p> <p>Find the endpoint address for actions in the AWS IoT data plane by running this CLI command:</p> <p> <code>aws iot describe-endpoint --endpoint-type iot:Data-ATS</code> </p> <p>The service name used by <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">AWS Signature Version 4</a> to sign requests is: <i>iotdevicegateway</i>.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: iot-data
  x-aws-signingName: iotdata
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/iot-data-2015-05-28.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/iot/'
servers:
  - url: 'http://data.iot.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS IoT Data Plane multi-region endpoint
  - url: 'https://data.iot.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS IoT Data Plane multi-region endpoint
  - url: 'http://data.iot.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS IoT Data Plane endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://data.iot.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS IoT Data Plane endpoint for China (Beijing) and China (Ningxia)
paths:
  '/things/{thingName}/shadow':
    delete:
      operationId: DeleteThingShadow
      description: '<p>Deletes the shadow for the specified thing.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/iot/latest/developerguide/API_DeleteThingShadow.html">DeleteThingShadow</a> in the AWS IoT Developer Guide.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteThingShadowResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '486':
          description: MethodNotAllowedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '487':
          description: UnsupportedDocumentEncodingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedDocumentEncodingException'
      parameters:
        - name: thingName
          in: path
          required: true
          description: The name of the thing.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
        - name: name
          in: query
          required: false
          description: The name of the shadow.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetThingShadow
      description: '<p>Gets the shadow for the specified thing.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/iot/latest/developerguide/API_GetThingShadow.html">GetThingShadow</a> in the AWS IoT Developer Guide.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetThingShadowResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '486':
          description: MethodNotAllowedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '487':
          description: UnsupportedDocumentEncodingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedDocumentEncodingException'
      parameters:
        - name: thingName
          in: path
          required: true
          description: The name of the thing.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
        - name: name
          in: query
          required: false
          description: The name of the shadow.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 64
    post:
      operationId: UpdateThingShadow
      description: '<p>Updates the shadow for the specified thing.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/iot/latest/developerguide/API_UpdateThingShadow.html">UpdateThingShadow</a> in the AWS IoT Developer Guide.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateThingShadowResponse'
        '480':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '481':
          description: RequestEntityTooLargeException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestEntityTooLargeException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '487':
          description: MethodNotAllowedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '488':
          description: UnsupportedDocumentEncodingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedDocumentEncodingException'
      parameters:
        - name: thingName
          in: path
          required: true
          description: The name of the thing.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
        - name: name
          in: query
          required: false
          description: The name of the shadow.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - payload
              properties:
                payload:
                  description: 'The state information, in JSON format.'
                  type: string
  '/api/things/shadow/ListNamedShadowsForThing/{thingName}':
    get:
      operationId: ListNamedShadowsForThing
      description: Lists the shadows for the specified thing.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNamedShadowsForThingResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '486':
          description: MethodNotAllowedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
      parameters:
        - name: thingName
          in: path
          required: true
          description: The name of the thing.
          schema:
            type: string
            pattern: '[a-zA-Z0-9:_-]+'
            minLength: 1
            maxLength: 128
        - name: nextToken
          in: query
          required: false
          description: The token to retrieve the next set of results.
          schema:
            type: string
        - name: pageSize
          in: query
          required: false
          description: The result page size.
          schema:
            type: integer
            minimum: 1
            maximum: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/topics/{topic}':
    post:
      operationId: Publish
      description: '<p>Publishes state information.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/iot/latest/developerguide/protocols.html#http">HTTP Protocol</a> in the AWS IoT Developer Guide.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '483':
          description: MethodNotAllowedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
      parameters:
        - name: topic
          in: path
          required: true
          description: The name of the MQTT topic.
          schema:
            type: string
        - name: qos
          in: query
          required: false
          description: The Quality of Service (QoS) level.
          schema:
            type: integer
            minimum: 0
            maximum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                payload:
                  description: 'The state information, in JSON format.'
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    DeleteThingShadowResponse:
      type: object
      required:
        - payload
      properties:
        payload:
          $ref: '#/components/schemas/JsonDocument'
          description: 'The state information, in JSON format.'
      description: The output from the DeleteThingShadow operation.
    ResourceNotFoundException: {}
    InvalidRequestException: {}
    ThrottlingException: {}
    UnauthorizedException: {}
    ServiceUnavailableException: {}
    InternalFailureException: {}
    MethodNotAllowedException: {}
    UnsupportedDocumentEncodingException: {}
    GetThingShadowResponse:
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/JsonDocument'
          description: 'The state information, in JSON format.'
      description: The output from the GetThingShadow operation.
    ListNamedShadowsForThingResponse:
      type: object
      properties:
        results:
          $ref: '#/components/schemas/NamedShadowList'
          description: The list of shadows for the specified thing.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token for the next set of results, or null if there are no additional results.'
        timestamp:
          $ref: '#/components/schemas/Timestamp'
          description: The Epoch date and time the response was generated by AWS IoT.
    UpdateThingShadowResponse:
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/JsonDocument'
          description: 'The state information, in JSON format.'
      description: The output from the UpdateThingShadow operation.
    ConflictException: {}
    RequestEntityTooLargeException: {}
    ThingName:
      type: string
      pattern: '[a-zA-Z0-9:_-]+'
      minLength: 1
      maxLength: 128
    ShadowName:
      type: string
      pattern: '[a-zA-Z0-9:_-]+'
      minLength: 1
      maxLength: 64
    DeleteThingShadowRequest:
      type: object
      title: DeleteThingShadowRequest
      properties: {}
      description: The input for the DeleteThingShadow operation.
    JsonDocument:
      type: string
    GetThingShadowRequest:
      type: object
      title: GetThingShadowRequest
      properties: {}
      description: The input for the GetThingShadow operation.
    NextToken:
      type: string
    PageSize:
      type: integer
      minimum: 1
      maximum: 100
    ListNamedShadowsForThingRequest:
      type: object
      title: ListNamedShadowsForThingRequest
      properties: {}
    NamedShadowList:
      type: array
      items:
        $ref: '#/components/schemas/ShadowName'
    Timestamp:
      type: integer
    Payload:
      type: string
    Topic:
      type: string
    Qos:
      type: integer
      minimum: 0
      maximum: 1
    PublishRequest:
      type: object
      title: PublishRequest
      properties:
        payload:
          $ref: '#/components/schemas/Payload'
          description: 'The state information, in JSON format.'
      description: The input for the Publish operation.
    UpdateThingShadowRequest:
      type: object
      required:
        - payload
      title: UpdateThingShadowRequest
      properties:
        payload:
          $ref: '#/components/schemas/JsonDocument'
          description: 'The state information, in JSON format.'
      description: The input for the UpdateThingShadow operation.
security:
  - hmac: []
