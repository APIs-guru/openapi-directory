openapi: 3.0.0
info:
  version: '2018-09-22'
  x-release: v4
  title: CodeArtifact
  description: '<p> AWS CodeArtifact is a fully managed artifact repository compatible with language-native package managers and build tools such as npm, Apache Maven, and pip. You can use CodeArtifact to share packages with development teams and pull packages. Packages can be pulled from both public and CodeArtifact repositories. You can also create an upstream relationship between a CodeArtifact repository and another repository, which effectively merges their contents from the point of view of a package manager client. </p> <p> <b>AWS CodeArtifact Components</b> </p> <p>Use the information in this guide to help you work with the following CodeArtifact components:</p> <ul> <li> <p> <b>Repository</b>: A CodeArtifact repository contains a set of <a href="https://docs.aws.amazon.com/codeartifact/latest/ug/welcome.html#welcome-concepts-package-version">package versions</a>, each of which maps to a set of assets, or files. Repositories are polyglot, so a single repository can contain packages of any supported type. Each repository exposes endpoints for fetching and publishing packages using tools like the <b> <code>npm</code> </b> CLI, the Maven CLI (<b> <code>mvn</code> </b>), and <b> <code>pip</code> </b>.</p> </li> <li> <p> <b>Domain</b>: Repositories are aggregated into a higher-level entity known as a <i>domain</i>. All package assets and metadata are stored in the domain, but are consumed through repositories. A given package asset, such as a Maven JAR file, is stored once per domain, no matter how many repositories it''s present in. All of the assets and metadata in a domain are encrypted with the same customer master key (CMK) stored in AWS Key Management Service (AWS KMS).</p> <p>Each repository is a member of a single domain and can''t be moved to a different domain.</p> <p>The domain allows organizational policy to be applied across multiple repositories, such as which accounts can access repositories in the domain, and which public repositories can be used as sources of packages.</p> <p>Although an organization can have multiple domains, we recommend a single production domain that contains all published artifacts so that teams can find and share packages across their organization.</p> </li> <li> <p> <b>Package</b>: A <i>package</i> is a bundle of software and the metadata required to resolve dependencies and install the software. CodeArtifact supports <a href="https://docs.aws.amazon.com/codeartifact/latest/ug/using-npm.html">npm</a>, <a href="https://docs.aws.amazon.com/codeartifact/latest/ug/using-python.html">PyPI</a>, and <a href="https://docs.aws.amazon.com/codeartifact/latest/ug/using-maven">Maven</a> package formats.</p> <p>In CodeArtifact, a package consists of:</p> <ul> <li> <p>A <i>name</i> (for example, <code>webpack</code> is the name of a popular npm package)</p> </li> <li> <p>An optional namespace (for example, <code>@types</code> in <code>@types/node</code>)</p> </li> <li> <p>A set of versions (for example, <code>1.0.0</code>, <code>1.0.1</code>, <code>1.0.2</code>, etc.)</p> </li> <li> <p> Package-level metadata (for example, npm tags)</p> </li> </ul> </li> <li> <p> <b>Package version</b>: A version of a package, such as <code>@types/node 12.6.9</code>. The version number format and semantics vary for different package formats. For example, npm package versions must conform to the <a href="https://semver.org/">Semantic Versioning specification</a>. In CodeArtifact, a package version consists of the version identifier, metadata at the package version level, and a set of assets.</p> </li> <li> <p> <b>Upstream repository</b>: One repository is <i>upstream</i> of another when the package versions in it can be accessed from the repository endpoint of the downstream repository, effectively merging the contents of the two repositories from the point of view of a client. CodeArtifact allows creating an upstream relationship between two repositories.</p> </li> <li> <p> <b>Asset</b>: An individual file stored in CodeArtifact associated with a package version, such as an npm <code>.tgz</code> file or Maven POM and JAR files.</p> </li> </ul> <p>CodeArtifact supports these operations:</p> <ul> <li> <p> <code>AssociateExternalConnection</code>: Adds an existing external connection to a repository. </p> </li> <li> <p> <code>CopyPackageVersions</code>: Copies package versions from one repository to another repository in the same domain.</p> </li> <li> <p> <code>CreateDomain</code>: Creates a domain</p> </li> <li> <p> <code>CreateRepository</code>: Creates a CodeArtifact repository in a domain. </p> </li> <li> <p> <code>DeleteDomain</code>: Deletes a domain. You cannot delete a domain that contains repositories. </p> </li> <li> <p> <code>DeleteDomainPermissionsPolicy</code>: Deletes the resource policy that is set on a domain.</p> </li> <li> <p> <code>DeletePackageVersions</code>: Deletes versions of a package. After a package has been deleted, it can be republished, but its assets and metadata cannot be restored because they have been permanently removed from storage.</p> </li> <li> <p> <code>DeleteRepository</code>: Deletes a repository. </p> </li> <li> <p> <code>DeleteRepositoryPermissionsPolicy</code>: Deletes the resource policy that is set on a repository.</p> </li> <li> <p> <code>DescribeDomain</code>: Returns a <code>DomainDescription</code> object that contains information about the requested domain.</p> </li> <li> <p> <code>DescribePackageVersion</code>: Returns a <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_PackageVersionDescription.html">PackageVersionDescription</a> object that contains details about a package version. </p> </li> <li> <p> <code>DescribeRepository</code>: Returns a <code>RepositoryDescription</code> object that contains detailed information about the requested repository. </p> </li> <li> <p> <code>DisposePackageVersions</code>: Disposes versions of a package. A package version with the status <code>Disposed</code> cannot be restored because they have been permanently removed from storage.</p> </li> <li> <p> <code>DisassociateExternalConnection</code>: Removes an existing external connection from a repository. </p> </li> <li> <p> <code>GetAuthorizationToken</code>: Generates a temporary authorization token for accessing repositories in the domain. The token expires the authorization period has passed. The default authorization period is 12 hours and can be customized to any length with a maximum of 12 hours.</p> </li> <li> <p> <code>GetDomainPermissionsPolicy</code>: Returns the policy of a resource that is attached to the specified domain. </p> </li> <li> <p> <code>GetPackageVersionAsset</code>: Returns the contents of an asset that is in a package version. </p> </li> <li> <p> <code>GetPackageVersionReadme</code>: Gets the readme file or descriptive text for a package version.</p> </li> <li> <p> <code>GetRepositoryEndpoint</code>: Returns the endpoint of a repository for a specific package format. A repository has one endpoint for each package format: </p> <ul> <li> <p> <code>npm</code> </p> </li> <li> <p> <code>pypi</code> </p> </li> <li> <p> <code>maven</code> </p> </li> </ul> </li> <li> <p> <code>GetRepositoryPermissionsPolicy</code>: Returns the resource policy that is set on a repository. </p> </li> <li> <p> <code>ListDomains</code>: Returns a list of <code>DomainSummary</code> objects. Each returned <code>DomainSummary</code> object contains information about a domain.</p> </li> <li> <p> <code>ListPackages</code>: Lists the packages in a repository.</p> </li> <li> <p> <code>ListPackageVersionAssets</code>: Lists the assets for a given package version.</p> </li> <li> <p> <code>ListPackageVersionDependencies</code>: Returns a list of the direct dependencies for a package version. </p> </li> <li> <p> <code>ListPackageVersions</code>: Returns a list of package versions for a specified package in a repository.</p> </li> <li> <p> <code>ListRepositories</code>: Returns a list of repositories owned by the AWS account that called this method.</p> </li> <li> <p> <code>ListRepositoriesInDomain</code>: Returns a list of the repositories in a domain.</p> </li> <li> <p> <code>PutDomainPermissionsPolicy</code>: Attaches a resource policy to a domain.</p> </li> <li> <p> <code>PutRepositoryPermissionsPolicy</code>: Sets the resource policy on a repository that specifies permissions to access it. </p> </li> <li> <p> <code>UpdatePackageVersionsStatus</code>: Updates the status of one or more versions of a package.</p> </li> <li> <p> <code>UpdateRepository</code>: Updates the properties of a repository.</p> </li> </ul>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: codeartifact
  x-aws-signingName: codeartifact
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/codeartifact-2018-09-22.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/codeartifact/'
servers:
  - url: 'http://codeartifact.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CodeArtifact multi-region endpoint
  - url: 'https://codeartifact.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CodeArtifact multi-region endpoint
  - url: 'http://codeartifact.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CodeArtifact endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://codeartifact.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CodeArtifact endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /v1/repository/external-connection#domain&repository&external-connection:
    post:
      operationId: AssociateExternalConnection
      description: '<p>Adds an existing external connection to a repository. One external connection is allowed per repository.</p> <note> <p>A repository can have one or more upstream repositories, or an external connection.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateExternalConnectionResult'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: domain
          in: query
          required: true
          description: The name of the domain that contains the repository.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]{0,48}[a-z0-9]'
            minLength: 2
            maxLength: 50
        - name: domain-owner
          in: query
          required: false
          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '
          schema:
            type: string
            pattern: '[0-9]{12}'
            minLength: 12
            maxLength: 12
        - name: repository
          in: query
          required: true
          description: ' The name of the repository to which the external connection is added. '
          schema:
            type: string
            pattern: '[A-Za-z0-9][A-Za-z0-9._\-]{1,99}'
            minLength: 2
            maxLength: 100
        - name: external-connection
          in: query
          required: true
          description: '<p> The name of the external connection to add to the repository. The following values are supported: </p> <ul> <li> <p> <code>public:npmjs</code> - for the npm public repository. </p> </li> <li> <p> <code>public:pypi</code> - for the Python Package Index. </p> </li> <li> <p> <code>public:maven-central</code> - for Maven Central. </p> </li> <li> <p> <code>public:maven-googleandroid</code> - for the Google Android repository. </p> </li> <li> <p> <code>public:maven-gradleplugins</code> - for the Gradle plugins repository. </p> </li> <li> <p> <code>public:maven-commonsware</code> - for the CommonsWare Android repository. </p> </li> </ul>'
          schema:
            type: string
            pattern: '[A-Za-z0-9][A-Za-z0-9._\-:]{1,99}'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DisassociateExternalConnection
      description: ' Removes an existing external connection from a repository. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateExternalConnectionResult'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: domain
          in: query
          required: true
          description: 'The name of the domain that contains the repository from which to remove the external repository. '
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]{0,48}[a-z0-9]'
            minLength: 2
            maxLength: 50
        - name: domain-owner
          in: query
          required: false
          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '
          schema:
            type: string
            pattern: '[0-9]{12}'
            minLength: 12
            maxLength: 12
        - name: repository
          in: query
          required: true
          description: 'The name of the repository from which the external connection will be removed. '
          schema:
            type: string
            pattern: '[A-Za-z0-9][A-Za-z0-9._\-]{1,99}'
            minLength: 2
            maxLength: 100
        - name: external-connection
          in: query
          required: true
          description: 'The name of the external connection to be removed from the repository. '
          schema:
            type: string
            pattern: '[A-Za-z0-9][A-Za-z0-9._\-:]{1,99}'
  /v1/package/versions/copy#domain&source-repository&destination-repository&format&package:
    post:
      operationId: CopyPackageVersions
      description: <p> Copies package versions from one repository to another repository in the same domain. </p> <note> <p> You must specify <code>versions</code> or <code>versionRevisions</code>. You cannot specify both. </p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CopyPackageVersionsResult'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: domain
          in: query
          required: true
          description: ' The name of the domain that contains the source and destination repositories. '
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]{0,48}[a-z0-9]'
            minLength: 2
            maxLength: 50
        - name: domain-owner
          in: query
          required: false
          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '
          schema:
            type: string
            pattern: '[0-9]{12}'
            minLength: 12
            maxLength: 12
        - name: source-repository
          in: query
          required: true
          description: ' The name of the repository that contains the package versions to copy. '
          schema:
            type: string
            pattern: '[A-Za-z0-9][A-Za-z0-9._\-]{1,99}'
            minLength: 2
            maxLength: 100
        - name: destination-repository
          in: query
          required: true
          description: ' The name of the repository into which package versions are copied. '
          schema:
            type: string
            pattern: '[A-Za-z0-9][A-Za-z0-9._\-]{1,99}'
            minLength: 2
            maxLength: 100
        - name: format
          in: query
          required: true
          description: '<p> The format of the package that is copied. The valid package types are: </p> <ul> <li> <p> <code>npm</code>: A Node Package Manager (npm) package. </p> </li> <li> <p> <code>pypi</code>: A Python Package Index (PyPI) package. </p> </li> <li> <p> <code>maven</code>: A Maven package that contains compiled code in a distributable format, such as a JAR file. </p> </li> </ul>'
          schema:
            type: string
            enum:
              - npm
              - pypi
              - maven
              - nuget
        - name: namespace
          in: query
          required: false
          description: '<p> The namespace of the package. The package component that specifies its namespace depends on its type. For example: </p> <ul> <li> <p> The namespace of a Maven package is its <code>groupId</code>. </p> </li> <li> <p> The namespace of an npm package is its <code>scope</code>. </p> </li> <li> <p> A Python package does not contain a corresponding component, so Python packages do not have a namespace. </p> </li> </ul>'
          schema:
            type: string
            pattern: '[^!#/\s]+'
            minLength: 1
            maxLength: 255
        - name: package
          in: query
          required: true
          description: ' The name of the package that is copied. '
          schema:
            type: string
            pattern: '[^!#/\s]+'
            minLength: 1
            maxLength: 255
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                versions:
                  description: <p> The versions of the package to copy. </p> <note> <p> You must specify <code>versions</code> or <code>versionRevisions</code>. You cannot specify both. </p> </note>
                  type: array
                  items:
                    $ref: '#/components/schemas/PackageVersion'
                  maxItems: 100
                versionRevisions:
                  description: <p> A list of key-value pairs. The keys are package versions and the values are package version revisions. A <code>CopyPackageVersion</code> operation succeeds if the specified versions in the source repository match the specified package version revision. </p> <note> <p> You must specify <code>versions</code> or <code>versionRevisions</code>. You cannot specify both. </p> </note>
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/PackageVersionRevision'
                allowOverwrite:
                  description: ' Set to true to overwrite a package version that already exists in the destination repository. If set to false and the package version already exists in the destination repository, the package version is returned in the <code>failedVersions</code> field of the response with an <code>ALREADY_EXISTS</code> error code. '
                  type: boolean
                includeFromUpstream:
                  description: ' Set to true to copy packages from repositories that are upstream from the source repository to the destination repository. The default setting is false. For more information, see <a href="https://docs.aws.amazon.com/codeartifact/latest/ug/repos-upstream.html">Working with upstream repositories</a>. '
                  type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v1/domain#domain:
    post:
      operationId: CreateDomain
      description: '<p> Creates a domain. CodeArtifact <i>domains</i> make it easier to manage multiple repositories across an organization. You can use a domain to apply permissions across many repositories owned by different AWS accounts. An asset is stored only once in a domain, even if it''s in multiple repositories. </p> <p>Although you can have multiple domains, we recommend a single production domain that contains all published artifacts so that your development teams can find and share packages. You can use a second pre-production domain to test changes to the production domain configuration. </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDomainResult'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: domain
          in: query
          required: true
          description: ' The name of the domain to create. All domain names in an AWS Region that are in the same AWS account must be unique. The domain name is used as the prefix in DNS hostnames. Do not use sensitive information in a domain name because it is publicly discoverable. '
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]{0,48}[a-z0-9]'
            minLength: 2
            maxLength: 50
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                encryptionKey:
                  description: '<p> The encryption key for the domain. This is used to encrypt content stored in a domain. An encryption key can be a key ID, a key Amazon Resource Name (ARN), a key alias, or a key alias ARN. To specify an <code>encryptionKey</code>, your IAM role must have <code>kms:DescribeKey</code> and <code>kms:CreateGrant</code> permissions on the encryption key that is used. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestSyntax">DescribeKey</a> in the <i>AWS Key Management Service API Reference</i> and <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">AWS KMS API Permissions Reference</a> in the <i>AWS Key Management Service Developer Guide</i>. </p> <important> <p> CodeArtifact supports only symmetric CMKs. Do not associate an asymmetric CMK with your domain. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html">Using symmetric and asymmetric keys</a> in the <i>AWS Key Management Service Developer Guide</i>. </p> </important>'
                  type: string
                  pattern: \S+
                  minLength: 1
                  maxLength: 1011
                tags:
                  description: One or more tag key-value pairs for the domain.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                  minItems: 0
                  maxItems: 200
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteDomain
      description: ' Deletes a domain. You cannot delete a domain that contains repositories. If you want to delete a domain with repositories, first delete its repositories. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDomainResult'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: domain
          in: query
          required: true
          description: ' The name of the domain to delete. '
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]{0,48}[a-z0-9]'
            minLength: 2
            maxLength: 50
        - name: domain-owner
          in: query
          required: false
          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '
          schema:
            type: string
            pattern: '[0-9]{12}'
            minLength: 12
            maxLength: 12
    get:
      operationId: DescribeDomain
      description: ' Returns a <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_DomainDescription.html">DomainDescription</a> object that contains information about the requested domain. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDomainResult'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: domain
          in: query
          required: true
          description: ' A string that specifies the name of the requested domain. '
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]{0,48}[a-z0-9]'
            minLength: 2
            maxLength: 50
        - name: domain-owner
          in: query
          required: false
          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '
          schema:
            type: string
            pattern: '[0-9]{12}'
            minLength: 12
            maxLength: 12
  /v1/repository#domain&repository:
    post:
      operationId: CreateRepository
      description: ' Creates a repository. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRepositoryResult'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: domain
          in: query
          required: true
          description: ' The name of the domain that contains the created repository. '
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]{0,48}[a-z0-9]'
            minLength: 2
            maxLength: 50
        - name: domain-owner
          in: query
          required: false
          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '
          schema:
            type: string
            pattern: '[0-9]{12}'
            minLength: 12
            maxLength: 12
        - name: repository
          in: query
          required: true
          description: ' The name of the repository to create. '
          schema:
            type: string
            pattern: '[A-Za-z0-9][A-Za-z0-9._\-]{1,99}'
            minLength: 2
            maxLength: 100
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  description: ' A description of the created repository. '
                  type: string
                  pattern: '\P{C}+'
                  maxLength: 1000
                upstreams:
                  description: ' A list of upstream repositories to associate with the repository. The order of the upstream repositories in the list determines their priority order when AWS CodeArtifact looks for a requested package version. For more information, see <a href="https://docs.aws.amazon.com/codeartifact/latest/ug/repos-upstream.html">Working with upstream repositories</a>. '
                  type: array
                  items:
                    $ref: '#/components/schemas/UpstreamRepository'
                tags:
                  description: One or more tag key-value pairs for the repository.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                  minItems: 0
                  maxItems: 200
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteRepository
      description: ' Deletes a repository. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRepositoryResult'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: domain
          in: query
          required: true
          description: ' The name of the domain that contains the repository to delete. '
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]{0,48}[a-z0-9]'
            minLength: 2
            maxLength: 50
        - name: domain-owner
          in: query
          required: false
          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '
          schema:
            type: string
            pattern: '[0-9]{12}'
            minLength: 12
            maxLength: 12
        - name: repository
          in: query
          required: true
          description: ' The name of the repository to delete. '
          schema:
            type: string
            pattern: '[A-Za-z0-9][A-Za-z0-9._\-]{1,99}'
            minLength: 2
            maxLength: 100
    get:
      operationId: DescribeRepository
      description: ' Returns a <code>RepositoryDescription</code> object that contains detailed information about the requested repository. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeRepositoryResult'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: domain
          in: query
          required: true
          description: ' The name of the domain that contains the repository to describe. '
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]{0,48}[a-z0-9]'
            minLength: 2
            maxLength: 50
        - name: domain-owner
          in: query
          required: false
          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '
          schema:
            type: string
            pattern: '[0-9]{12}'
            minLength: 12
            maxLength: 12
        - name: repository
          in: query
          required: true
          description: ' A string that specifies the name of the requested repository. '
          schema:
            type: string
            pattern: '[A-Za-z0-9][A-Za-z0-9._\-]{1,99}'
            minLength: 2
            maxLength: 100
    put:
      operationId: UpdateRepository
      description: ' Update the properties of a repository. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRepositoryResult'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: domain
          in: query
          required: true
          description: ' The name of the domain associated with the repository to update. '
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]{0,48}[a-z0-9]'
            minLength: 2
            maxLength: 50
        - name: domain-owner
          in: query
          required: false
          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '
          schema:
            type: string
            pattern: '[0-9]{12}'
            minLength: 12
            maxLength: 12
        - name: repository
          in: query
          required: true
          description: ' The name of the repository to update. '
          schema:
            type: string
            pattern: '[A-Za-z0-9][A-Za-z0-9._\-]{1,99}'
            minLength: 2
            maxLength: 100
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  description: ' An updated repository description. '
                  type: string
                  pattern: '\P{C}+'
                  maxLength: 1000
                upstreams:
                  description: ' A list of upstream repositories to associate with the repository. The order of the upstream repositories in the list determines their priority order when AWS CodeArtifact looks for a requested package version. For more information, see <a href="https://docs.aws.amazon.com/codeartifact/latest/ug/repos-upstream.html">Working with upstream repositories</a>. '
                  type: array
                  items:
                    $ref: '#/components/schemas/UpstreamRepository'
  /v1/domain/permissions/policy#domain:
    delete:
      operationId: DeleteDomainPermissionsPolicy
      description: ' Deletes the resource policy set on a domain. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDomainPermissionsPolicyResult'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: domain
          in: query
          required: true
          description: ' The name of the domain associated with the resource policy to be deleted. '
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]{0,48}[a-z0-9]'
            minLength: 2
            maxLength: 50
        - name: domain-owner
          in: query
          required: false
          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '
          schema:
            type: string
            pattern: '[0-9]{12}'
            minLength: 12
            maxLength: 12
        - name: policy-revision
          in: query
          required: false
          description: ' The current revision of the resource policy to be deleted. This revision is used for optimistic locking, which prevents others from overwriting your changes to the domain''s resource policy. '
          schema:
            type: string
            pattern: \S+
            minLength: 1
            maxLength: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetDomainPermissionsPolicy
      description: '<p> Returns the resource policy attached to the specified domain. </p> <note> <p> The policy is a resource-based policy, not an identity-based policy. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_identity-vs-resource.html">Identity-based policies and resource-based policies </a> in the <i>AWS Identity and Access Management User Guide</i>. </p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDomainPermissionsPolicyResult'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: domain
          in: query
          required: true
          description: ' The name of the domain to which the resource policy is attached. '
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]{0,48}[a-z0-9]'
            minLength: 2
            maxLength: 50
        - name: domain-owner
          in: query
          required: false
          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '
          schema:
            type: string
            pattern: '[0-9]{12}'
            minLength: 12
            maxLength: 12
  /v1/package/versions/delete#domain&repository&format&package:
    post:
      operationId: DeletePackageVersions
      description: ' Deletes one or more versions of a package. A deleted package version cannot be restored in your repository. If you want to remove a package version from your repository and be able to restore it later, set its status to <code>Archived</code>. Archived packages cannot be downloaded from a repository and don''t show up with list package APIs (for example, <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_ListPackageVersions.html">ListackageVersions</a>), but you can restore them using <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_UpdatePackageVersionsStatus.html">UpdatePackageVersionsStatus</a>. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePackageVersionsResult'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: domain
          in: query
          required: true
          description: ' The name of the domain that contains the package to delete. '
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]{0,48}[a-z0-9]'
            minLength: 2
            maxLength: 50
        - name: domain-owner
          in: query
          required: false
          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '
          schema:
            type: string
            pattern: '[0-9]{12}'
            minLength: 12
            maxLength: 12
        - name: repository
          in: query
          required: true
          description: ' The name of the repository that contains the package versions to delete. '
          schema:
            type: string
            pattern: '[A-Za-z0-9][A-Za-z0-9._\-]{1,99}'
            minLength: 2
            maxLength: 100
        - name: format
          in: query
          required: true
          description: '<p> The format of the package versions to delete. The valid values are: </p> <ul> <li> <p> <code>npm</code> </p> </li> <li> <p> <code>pypi</code> </p> </li> <li> <p> <code>maven</code> </p> </li> </ul>'
          schema:
            type: string
            enum:
              - npm
              - pypi
              - maven
              - nuget
        - name: namespace
          in: query
          required: false
          description: '<p> The namespace of the package. The package component that specifies its namespace depends on its type. For example: </p> <ul> <li> <p> The namespace of a Maven package is its <code>groupId</code>. </p> </li> <li> <p> The namespace of an npm package is its <code>scope</code>. </p> </li> <li> <p> A Python package does not contain a corresponding component, so Python packages do not have a namespace. </p> </li> </ul>'
          schema:
            type: string
            pattern: '[^!#/\s]+'
            minLength: 1
            maxLength: 255
        - name: package
          in: query
          required: true
          description: ' The name of the package with the versions to delete. '
          schema:
            type: string
            pattern: '[^!#/\s]+'
            minLength: 1
            maxLength: 255
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - versions
              properties:
                versions:
                  description: ' An array of strings that specify the versions of the package to delete. '
                  type: array
                  items:
                    $ref: '#/components/schemas/PackageVersion'
                  maxItems: 100
                expectedStatus:
                  description: '<p> The expected status of the package version to delete. Valid values are: </p> <ul> <li> <p> <code>Published</code> </p> </li> <li> <p> <code>Unfinished</code> </p> </li> <li> <p> <code>Unlisted</code> </p> </li> <li> <p> <code>Archived</code> </p> </li> <li> <p> <code>Disposed</code> </p> </li> </ul>'
                  type: string
                  enum:
                    - Published
                    - Unfinished
                    - Unlisted
                    - Archived
                    - Disposed
                    - Deleted
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v1/repository/permissions/policies#domain&repository:
    delete:
      operationId: DeleteRepositoryPermissionsPolicy
      description: '<p> Deletes the resource policy that is set on a repository. After a resource policy is deleted, the permissions allowed and denied by the deleted policy are removed. The effect of deleting a resource policy might not be immediate. </p> <important> <p> Use <code>DeleteRepositoryPermissionsPolicy</code> with caution. After a policy is deleted, AWS users, roles, and accounts lose permissions to perform the repository actions granted by the deleted policy. </p> </important>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRepositoryPermissionsPolicyResult'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: domain
          in: query
          required: true
          description: ' The name of the domain that contains the repository associated with the resource policy to be deleted. '
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]{0,48}[a-z0-9]'
            minLength: 2
            maxLength: 50
        - name: domain-owner
          in: query
          required: false
          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '
          schema:
            type: string
            pattern: '[0-9]{12}'
            minLength: 12
            maxLength: 12
        - name: repository
          in: query
          required: true
          description: ' The name of the repository that is associated with the resource policy to be deleted '
          schema:
            type: string
            pattern: '[A-Za-z0-9][A-Za-z0-9._\-]{1,99}'
            minLength: 2
            maxLength: 100
        - name: policy-revision
          in: query
          required: false
          description: ' The revision of the repository''s resource policy to be deleted. This revision is used for optimistic locking, which prevents others from accidentally overwriting your changes to the repository''s resource policy. '
          schema:
            type: string
            pattern: \S+
            minLength: 1
            maxLength: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v1/package/version#domain&repository&format&package&version:
    get:
      operationId: DescribePackageVersion
      description: ' Returns a <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_PackageVersionDescription.html">PackageVersionDescription</a> object that contains information about the requested package version. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePackageVersionResult'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: domain
          in: query
          required: true
          description: ' The name of the domain that contains the repository that contains the package version. '
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]{0,48}[a-z0-9]'
            minLength: 2
            maxLength: 50
        - name: domain-owner
          in: query
          required: false
          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '
          schema:
            type: string
            pattern: '[0-9]{12}'
            minLength: 12
            maxLength: 12
        - name: repository
          in: query
          required: true
          description: ' The name of the repository that contains the package version. '
          schema:
            type: string
            pattern: '[A-Za-z0-9][A-Za-z0-9._\-]{1,99}'
            minLength: 2
            maxLength: 100
        - name: format
          in: query
          required: true
          description: '<p> A format that specifies the type of the requested package version. The valid values are: </p> <ul> <li> <p> <code>npm</code> </p> </li> <li> <p> <code>pypi</code> </p> </li> <li> <p> <code>maven</code> </p> </li> </ul>'
          schema:
            type: string
            enum:
              - npm
              - pypi
              - maven
              - nuget
        - name: namespace
          in: query
          required: false
          description: '<p> The namespace of the package. The package component that specifies its namespace depends on its type. For example: </p> <ul> <li> <p> The namespace of a Maven package is its <code>groupId</code>. </p> </li> <li> <p> The namespace of an npm package is its <code>scope</code>. </p> </li> <li> <p> A Python package does not contain a corresponding component, so Python packages do not have a namespace. </p> </li> </ul>'
          schema:
            type: string
            pattern: '[^!#/\s]+'
            minLength: 1
            maxLength: 255
        - name: package
          in: query
          required: true
          description: ' The name of the requested package version. '
          schema:
            type: string
            pattern: '[^!#/\s]+'
            minLength: 1
            maxLength: 255
        - name: version
          in: query
          required: true
          description: ' A string that contains the package version (for example, <code>3.5.2</code>). '
          schema:
            type: string
            pattern: '[^!#/\s]+'
            minLength: 1
            maxLength: 255
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v1/package/versions/dispose#domain&repository&format&package:
    post:
      operationId: DisposePackageVersions
      description: '<p> Deletes the assets in package versions and sets the package versions'' status to <code>Disposed</code>. A disposed package version cannot be restored in your repository because its assets are deleted. </p> <p> To view all disposed package versions in a repository, use <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_ListPackageVersions.html">ListPackageVersions</a> and set the <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_ListPackageVersions.html#API_ListPackageVersions_RequestSyntax">status</a> parameter to <code>Disposed</code>. </p> <p> To view information about a disposed package version, use <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_DescribePackageVersion.html">DescribePackageVersion</a>. </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisposePackageVersionsResult'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: domain
          in: query
          required: true
          description: ' The name of the domain that contains the repository you want to dispose. '
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]{0,48}[a-z0-9]'
            minLength: 2
            maxLength: 50
        - name: domain-owner
          in: query
          required: false
          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '
          schema:
            type: string
            pattern: '[0-9]{12}'
            minLength: 12
            maxLength: 12
        - name: repository
          in: query
          required: true
          description: ' The name of the repository that contains the package versions you want to dispose. '
          schema:
            type: string
            pattern: '[A-Za-z0-9][A-Za-z0-9._\-]{1,99}'
            minLength: 2
            maxLength: 100
        - name: format
          in: query
          required: true
          description: '<p> A format that specifies the type of package versions you want to dispose. The valid values are: </p> <ul> <li> <p> <code>npm</code> </p> </li> <li> <p> <code>pypi</code> </p> </li> <li> <p> <code>maven</code> </p> </li> </ul>'
          schema:
            type: string
            enum:
              - npm
              - pypi
              - maven
              - nuget
        - name: namespace
          in: query
          required: false
          description: '<p> The namespace of the package. The package component that specifies its namespace depends on its type. For example: </p> <ul> <li> <p> The namespace of a Maven package is its <code>groupId</code>. </p> </li> <li> <p> The namespace of an npm package is its <code>scope</code>. </p> </li> <li> <p> A Python package does not contain a corresponding component, so Python packages do not have a namespace. </p> </li> </ul>'
          schema:
            type: string
            pattern: '[^!#/\s]+'
            minLength: 1
            maxLength: 255
        - name: package
          in: query
          required: true
          description: ' The name of the package with the versions you want to dispose. '
          schema:
            type: string
            pattern: '[^!#/\s]+'
            minLength: 1
            maxLength: 255
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - versions
              properties:
                versions:
                  description: ' The versions of the package you want to dispose. '
                  type: array
                  items:
                    $ref: '#/components/schemas/PackageVersion'
                  maxItems: 100
                versionRevisions:
                  description: ' The revisions of the package versions you want to dispose. '
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/PackageVersionRevision'
                expectedStatus:
                  description: '<p> The expected status of the package version to dispose. Valid values are: </p> <ul> <li> <p> <code>Published</code> </p> </li> <li> <p> <code>Unfinished</code> </p> </li> <li> <p> <code>Unlisted</code> </p> </li> <li> <p> <code>Archived</code> </p> </li> <li> <p> <code>Disposed</code> </p> </li> </ul>'
                  type: string
                  enum:
                    - Published
                    - Unfinished
                    - Unlisted
                    - Archived
                    - Disposed
                    - Deleted
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v1/authorization-token#domain:
    post:
      operationId: GetAuthorizationToken
      description: '<p> Generates a temporary authorization token for accessing repositories in the domain. This API requires the <code>codeartifact:GetAuthorizationToken</code> and <code>sts:GetServiceBearerToken</code> permissions. For more information about authorization tokens, see <a href="https://docs.aws.amazon.com/codeartifact/latest/ug/tokens-authentication.html">AWS CodeArtifact authentication and tokens</a>. </p> <note> <p>CodeArtifact authorization tokens are valid for a period of 12 hours when created with the <code>login</code> command. You can call <code>login</code> periodically to refresh the token. When you create an authorization token with the <code>GetAuthorizationToken</code> API, you can set a custom authorization period, up to a maximum of 12 hours, with the <code>durationSeconds</code> parameter.</p> <p>The authorization period begins after <code>login</code> or <code>GetAuthorizationToken</code> is called. If <code>login</code> or <code>GetAuthorizationToken</code> is called while assuming a role, the token lifetime is independent of the maximum session duration of the role. For example, if you call <code>sts assume-role</code> and specify a session duration of 15 minutes, then generate a CodeArtifact authorization token, the token will be valid for the full authorization period even though this is longer than the 15-minute session duration.</p> <p>See <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html">Using IAM Roles</a> for more information on controlling session duration. </p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAuthorizationTokenResult'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: domain
          in: query
          required: true
          description: ' The name of the domain that is in scope for the generated authorization token. '
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]{0,48}[a-z0-9]'
            minLength: 2
            maxLength: 50
        - name: domain-owner
          in: query
          required: false
          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '
          schema:
            type: string
            pattern: '[0-9]{12}'
            minLength: 12
            maxLength: 12
        - name: duration
          in: query
          required: false
          description: 'The time, in seconds, that the generated authorization token is valid. Valid values are <code>0</code> and any number between <code>900</code> (15 minutes) and <code>43200</code> (12 hours). A value of <code>0</code> will set the expiration of the authorization token to the same expiration of the user''s role''s temporary credentials.'
          schema:
            type: integer
            minimum: 0
            maximum: 43200
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v1/package/version/asset#domain&repository&format&package&version&asset:
    get:
      operationId: GetPackageVersionAsset
      description: ' Returns an asset (or file) that is in a package. For example, for a Maven package version, use <code>GetPackageVersionAsset</code> to download a <code>JAR</code> file, a <code>POM</code> file, or any other assets in the package version. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPackageVersionAssetResult'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: domain
          in: query
          required: true
          description: ' The name of the domain that contains the repository that contains the package version with the requested asset. '
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]{0,48}[a-z0-9]'
            minLength: 2
            maxLength: 50
        - name: domain-owner
          in: query
          required: false
          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '
          schema:
            type: string
            pattern: '[0-9]{12}'
            minLength: 12
            maxLength: 12
        - name: repository
          in: query
          required: true
          description: ' The repository that contains the package version with the requested asset. '
          schema:
            type: string
            pattern: '[A-Za-z0-9][A-Za-z0-9._\-]{1,99}'
            minLength: 2
            maxLength: 100
        - name: format
          in: query
          required: true
          description: '<p> A format that specifies the type of the package version with the requested asset file. The valid values are: </p> <ul> <li> <p> <code>npm</code> </p> </li> <li> <p> <code>pypi</code> </p> </li> <li> <p> <code>maven</code> </p> </li> </ul>'
          schema:
            type: string
            enum:
              - npm
              - pypi
              - maven
              - nuget
        - name: namespace
          in: query
          required: false
          description: '<p> The namespace of the package. The package component that specifies its namespace depends on its type. For example: </p> <ul> <li> <p> The namespace of a Maven package is its <code>groupId</code>. </p> </li> <li> <p> The namespace of an npm package is its <code>scope</code>. </p> </li> <li> <p> A Python package does not contain a corresponding component, so Python packages do not have a namespace. </p> </li> </ul>'
          schema:
            type: string
            pattern: '[^!#/\s]+'
            minLength: 1
            maxLength: 255
        - name: package
          in: query
          required: true
          description: ' The name of the package that contains the requested asset. '
          schema:
            type: string
            pattern: '[^!#/\s]+'
            minLength: 1
            maxLength: 255
        - name: version
          in: query
          required: true
          description: ' A string that contains the package version (for example, <code>3.5.2</code>). '
          schema:
            type: string
            pattern: '[^!#/\s]+'
            minLength: 1
            maxLength: 255
        - name: asset
          in: query
          required: true
          description: ' The name of the requested asset. '
          schema:
            type: string
            pattern: '\P{C}+'
            minLength: 1
            maxLength: 255
        - name: revision
          in: query
          required: false
          description: ' The name of the package version revision that contains the requested asset. '
          schema:
            type: string
            pattern: \S+
            minLength: 1
            maxLength: 50
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v1/package/version/readme#domain&repository&format&package&version:
    get:
      operationId: GetPackageVersionReadme
      description: '<p> Gets the readme file or descriptive text for a package version. For packages that do not contain a readme file, CodeArtifact extracts a description from a metadata file. For example, from the <code>&lt;description&gt;</code> element in the <code>pom.xml</code> file of a Maven package. </p> <p> The returned text might contain formatting. For example, it might contain formatting for Markdown or reStructuredText. </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPackageVersionReadmeResult'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: domain
          in: query
          required: true
          description: ' The name of the domain that contains the repository that contains the package version with the requested readme file. '
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]{0,48}[a-z0-9]'
            minLength: 2
            maxLength: 50
        - name: domain-owner
          in: query
          required: false
          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '
          schema:
            type: string
            pattern: '[0-9]{12}'
            minLength: 12
            maxLength: 12
        - name: repository
          in: query
          required: true
          description: ' The repository that contains the package with the requested readme file. '
          schema:
            type: string
            pattern: '[A-Za-z0-9][A-Za-z0-9._\-]{1,99}'
            minLength: 2
            maxLength: 100
        - name: format
          in: query
          required: true
          description: '<p> A format that specifies the type of the package version with the requested readme file. The valid values are: </p> <ul> <li> <p> <code>npm</code> </p> </li> <li> <p> <code>pypi</code> </p> </li> <li> <p> <code>maven</code> </p> </li> </ul>'
          schema:
            type: string
            enum:
              - npm
              - pypi
              - maven
              - nuget
        - name: namespace
          in: query
          required: false
          description: '<p> The namespace of the package. The package component that specifies its namespace depends on its type. For example: </p> <ul> <li> <p> The namespace of a Maven package is its <code>groupId</code>. </p> </li> <li> <p> The namespace of an npm package is its <code>scope</code>. </p> </li> <li> <p> A Python package does not contain a corresponding component, so Python packages do not have a namespace. </p> </li> </ul>'
          schema:
            type: string
            pattern: '[^!#/\s]+'
            minLength: 1
            maxLength: 255
        - name: package
          in: query
          required: true
          description: ' The name of the package version that contains the requested readme file. '
          schema:
            type: string
            pattern: '[^!#/\s]+'
            minLength: 1
            maxLength: 255
        - name: version
          in: query
          required: true
          description: ' A string that contains the package version (for example, <code>3.5.2</code>). '
          schema:
            type: string
            pattern: '[^!#/\s]+'
            minLength: 1
            maxLength: 255
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v1/repository/endpoint#domain&repository&format:
    get:
      operationId: GetRepositoryEndpoint
      description: '<p> Returns the endpoint of a repository for a specific package format. A repository has one endpoint for each package format: </p> <ul> <li> <p> <code>npm</code> </p> </li> <li> <p> <code>pypi</code> </p> </li> <li> <p> <code>maven</code> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRepositoryEndpointResult'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: domain
          in: query
          required: true
          description: ' The name of the domain that contains the repository. '
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]{0,48}[a-z0-9]'
            minLength: 2
            maxLength: 50
        - name: domain-owner
          in: query
          required: false
          description: ' The 12-digit account number of the AWS account that owns the domain that contains the repository. It does not include dashes or spaces. '
          schema:
            type: string
            pattern: '[0-9]{12}'
            minLength: 12
            maxLength: 12
        - name: repository
          in: query
          required: true
          description: ' The name of the repository. '
          schema:
            type: string
            pattern: '[A-Za-z0-9][A-Za-z0-9._\-]{1,99}'
            minLength: 2
            maxLength: 100
        - name: format
          in: query
          required: true
          description: '<p> Returns which endpoint of a repository to return. A repository has one endpoint for each package format: </p> <ul> <li> <p> <code>npm</code> </p> </li> <li> <p> <code>pypi</code> </p> </li> <li> <p> <code>maven</code> </p> </li> </ul>'
          schema:
            type: string
            enum:
              - npm
              - pypi
              - maven
              - nuget
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v1/repository/permissions/policy#domain&repository:
    get:
      operationId: GetRepositoryPermissionsPolicy
      description: ' Returns the resource policy that is set on a repository. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRepositoryPermissionsPolicyResult'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: domain
          in: query
          required: true
          description: ' The name of the domain containing the repository whose associated resource policy is to be retrieved. '
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]{0,48}[a-z0-9]'
            minLength: 2
            maxLength: 50
        - name: domain-owner
          in: query
          required: false
          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '
          schema:
            type: string
            pattern: '[0-9]{12}'
            minLength: 12
            maxLength: 12
        - name: repository
          in: query
          required: true
          description: ' The name of the repository whose associated resource policy is to be retrieved. '
          schema:
            type: string
            pattern: '[A-Za-z0-9][A-Za-z0-9._\-]{1,99}'
            minLength: 2
            maxLength: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: PutRepositoryPermissionsPolicy
      description: '<p> Sets the resource policy on a repository that specifies permissions to access it. </p> <p> When you call <code>PutRepositoryPermissionsPolicy</code>, the resource policy on the repository is ignored when evaluting permissions. This ensures that the owner of a repository cannot lock themselves out of the repository, which would prevent them from being able to update the resource policy. </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutRepositoryPermissionsPolicyResult'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: domain
          in: query
          required: true
          description: ' The name of the domain containing the repository to set the resource policy on. '
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]{0,48}[a-z0-9]'
            minLength: 2
            maxLength: 50
        - name: domain-owner
          in: query
          required: false
          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '
          schema:
            type: string
            pattern: '[0-9]{12}'
            minLength: 12
            maxLength: 12
        - name: repository
          in: query
          required: true
          description: ' The name of the repository to set the resource policy on. '
          schema:
            type: string
            pattern: '[A-Za-z0-9][A-Za-z0-9._\-]{1,99}'
            minLength: 2
            maxLength: 100
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - policyDocument
              properties:
                policyRevision:
                  description: ' Sets the revision of the resource policy that specifies permissions to access the repository. This revision is used for optimistic locking, which prevents others from overwriting your changes to the repository''s resource policy. '
                  type: string
                  pattern: \S+
                  minLength: 1
                  maxLength: 100
                policyDocument:
                  description: ' A valid displayable JSON Aspen policy string to be set as the access control resource policy on the provided repository. '
                  type: string
                  minLength: 1
                  maxLength: 5120
  /v1/domains:
    post:
      operationId: ListDomains
      description: ' Returns a list of <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_PackageVersionDescription.html">DomainSummary</a> objects for all domains owned by the AWS account that makes this call. Each returned <code>DomainSummary</code> object contains information about a domain. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDomainsResult'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                maxResults:
                  description: ' The maximum number of results to return per page. '
                  type: integer
                  minimum: 1
                  maximum: 1000
                nextToken:
                  description: ' The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results. '
                  type: string
                  pattern: \S+
                  minLength: 1
                  maxLength: 2000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v1/package/version/assets#domain&repository&format&package&version:
    post:
      operationId: ListPackageVersionAssets
      description: ' Returns a list of <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_AssetSummary.html">AssetSummary</a> objects for assets in a package version. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPackageVersionAssetsResult'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: domain
          in: query
          required: true
          description: ' The name of the domain that contains the repository associated with the package version assets. '
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]{0,48}[a-z0-9]'
            minLength: 2
            maxLength: 50
        - name: domain-owner
          in: query
          required: false
          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '
          schema:
            type: string
            pattern: '[0-9]{12}'
            minLength: 12
            maxLength: 12
        - name: repository
          in: query
          required: true
          description: ' The name of the repository that contains the package that contains the returned package version assets. '
          schema:
            type: string
            pattern: '[A-Za-z0-9][A-Za-z0-9._\-]{1,99}'
            minLength: 2
            maxLength: 100
        - name: format
          in: query
          required: true
          description: '<p> The format of the package that contains the returned package version assets. The valid package types are: </p> <ul> <li> <p> <code>npm</code>: A Node Package Manager (npm) package. </p> </li> <li> <p> <code>pypi</code>: A Python Package Index (PyPI) package. </p> </li> <li> <p> <code>maven</code>: A Maven package that contains compiled code in a distributable format, such as a JAR file. </p> </li> </ul>'
          schema:
            type: string
            enum:
              - npm
              - pypi
              - maven
              - nuget
        - name: namespace
          in: query
          required: false
          description: '<p> The namespace of the package. The package component that specifies its namespace depends on its type. For example: </p> <ul> <li> <p> The namespace of a Maven package is its <code>groupId</code>. </p> </li> <li> <p> The namespace of an npm package is its <code>scope</code>. </p> </li> <li> <p> A Python package does not contain a corresponding component, so Python packages do not have a namespace. </p> </li> </ul>'
          schema:
            type: string
            pattern: '[^!#/\s]+'
            minLength: 1
            maxLength: 255
        - name: package
          in: query
          required: true
          description: ' The name of the package that contains the returned package version assets. '
          schema:
            type: string
            pattern: '[^!#/\s]+'
            minLength: 1
            maxLength: 255
        - name: version
          in: query
          required: true
          description: ' A string that contains the package version (for example, <code>3.5.2</code>). '
          schema:
            type: string
            pattern: '[^!#/\s]+'
            minLength: 1
            maxLength: 255
        - name: max-results
          in: query
          required: false
          description: ' The maximum number of results to return per page. '
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: next-token
          in: query
          required: false
          description: ' The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results. '
          schema:
            type: string
            pattern: \S+
            minLength: 1
            maxLength: 2000
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v1/package/version/dependencies#domain&repository&format&package&version:
    post:
      operationId: ListPackageVersionDependencies
      description: ' Returns the direct dependencies for a package version. The dependencies are returned as <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_PackageDependency.html">PackageDependency</a> objects. CodeArtifact extracts the dependencies for a package version from the metadata file for the package format (for example, the <code>package.json</code> file for npm packages and the <code>pom.xml</code> file for Maven). Any package version dependencies that are not listed in the configuration file are not returned. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPackageVersionDependenciesResult'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: domain
          in: query
          required: true
          description: ' The name of the domain that contains the repository that contains the requested package version dependencies. '
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]{0,48}[a-z0-9]'
            minLength: 2
            maxLength: 50
        - name: domain-owner
          in: query
          required: false
          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '
          schema:
            type: string
            pattern: '[0-9]{12}'
            minLength: 12
            maxLength: 12
        - name: repository
          in: query
          required: true
          description: ' The name of the repository that contains the requested package version. '
          schema:
            type: string
            pattern: '[A-Za-z0-9][A-Za-z0-9._\-]{1,99}'
            minLength: 2
            maxLength: 100
        - name: format
          in: query
          required: true
          description: '<p> The format of the package with the requested dependencies. The valid package types are: </p> <ul> <li> <p> <code>npm</code>: A Node Package Manager (npm) package. </p> </li> <li> <p> <code>pypi</code>: A Python Package Index (PyPI) package. </p> </li> <li> <p> <code>maven</code>: A Maven package that contains compiled code in a distributable format, such as a JAR file. </p> </li> </ul>'
          schema:
            type: string
            enum:
              - npm
              - pypi
              - maven
              - nuget
        - name: namespace
          in: query
          required: false
          description: '<p> The namespace of the package. The package component that specifies its namespace depends on its type. For example: </p> <ul> <li> <p> The namespace of a Maven package is its <code>groupId</code>. </p> </li> <li> <p> The namespace of an npm package is its <code>scope</code>. </p> </li> <li> <p> A Python package does not contain a corresponding component, so Python packages do not have a namespace. </p> </li> </ul>'
          schema:
            type: string
            pattern: '[^!#/\s]+'
            minLength: 1
            maxLength: 255
        - name: package
          in: query
          required: true
          description: ' The name of the package versions'' package. '
          schema:
            type: string
            pattern: '[^!#/\s]+'
            minLength: 1
            maxLength: 255
        - name: version
          in: query
          required: true
          description: ' A string that contains the package version (for example, <code>3.5.2</code>). '
          schema:
            type: string
            pattern: '[^!#/\s]+'
            minLength: 1
            maxLength: 255
        - name: next-token
          in: query
          required: false
          description: ' The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results. '
          schema:
            type: string
            pattern: \S+
            minLength: 1
            maxLength: 2000
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v1/package/versions#domain&repository&format&package:
    post:
      operationId: ListPackageVersions
      description: ' Returns a list of <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_PackageVersionSummary.html">PackageVersionSummary</a> objects for package versions in a repository that match the request parameters. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPackageVersionsResult'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: domain
          in: query
          required: true
          description: ' The name of the domain that contains the repository that contains the returned package versions. '
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]{0,48}[a-z0-9]'
            minLength: 2
            maxLength: 50
        - name: domain-owner
          in: query
          required: false
          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '
          schema:
            type: string
            pattern: '[0-9]{12}'
            minLength: 12
            maxLength: 12
        - name: repository
          in: query
          required: true
          description: ' The name of the repository that contains the package. '
          schema:
            type: string
            pattern: '[A-Za-z0-9][A-Za-z0-9._\-]{1,99}'
            minLength: 2
            maxLength: 100
        - name: format
          in: query
          required: true
          description: '<p> The format of the returned packages. The valid package types are: </p> <ul> <li> <p> <code>npm</code>: A Node Package Manager (npm) package. </p> </li> <li> <p> <code>pypi</code>: A Python Package Index (PyPI) package. </p> </li> <li> <p> <code>maven</code>: A Maven package that contains compiled code in a distributable format, such as a JAR file. </p> </li> </ul>'
          schema:
            type: string
            enum:
              - npm
              - pypi
              - maven
              - nuget
        - name: namespace
          in: query
          required: false
          description: '<p> The namespace of the package. The package component that specifies its namespace depends on its type. For example: </p> <ul> <li> <p> The namespace of a Maven package is its <code>groupId</code>. </p> </li> <li> <p> The namespace of an npm package is its <code>scope</code>. </p> </li> <li> <p> A Python package does not contain a corresponding component, so Python packages do not have a namespace. </p> </li> </ul>'
          schema:
            type: string
            pattern: '[^!#/\s]+'
            minLength: 1
            maxLength: 255
        - name: package
          in: query
          required: true
          description: ' The name of the package for which you want to return a list of package versions. '
          schema:
            type: string
            pattern: '[^!#/\s]+'
            minLength: 1
            maxLength: 255
        - name: status
          in: query
          required: false
          description: '<p> A string that specifies the status of the package versions to include in the returned list. It can be one of the following: </p> <ul> <li> <p> <code>Published</code> </p> </li> <li> <p> <code>Unfinished</code> </p> </li> <li> <p> <code>Unlisted</code> </p> </li> <li> <p> <code>Archived</code> </p> </li> <li> <p> <code>Disposed</code> </p> </li> </ul>'
          schema:
            type: string
            enum:
              - Published
              - Unfinished
              - Unlisted
              - Archived
              - Disposed
              - Deleted
        - name: sortBy
          in: query
          required: false
          description: ' How to sort the returned list of package versions. '
          schema:
            type: string
            enum:
              - PUBLISHED_TIME
        - name: max-results
          in: query
          required: false
          description: ' The maximum number of results to return per page. '
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: next-token
          in: query
          required: false
          description: ' The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results. '
          schema:
            type: string
            pattern: \S+
            minLength: 1
            maxLength: 2000
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v1/packages#domain&repository:
    post:
      operationId: ListPackages
      description: ' Returns a list of <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_PackageSummary.html">PackageSummary</a> objects for packages in a repository that match the request parameters. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPackagesResult'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: domain
          in: query
          required: true
          description: ' The name of the domain that contains the repository that contains the requested list of packages. '
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]{0,48}[a-z0-9]'
            minLength: 2
            maxLength: 50
        - name: domain-owner
          in: query
          required: false
          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '
          schema:
            type: string
            pattern: '[0-9]{12}'
            minLength: 12
            maxLength: 12
        - name: repository
          in: query
          required: true
          description: ' The name of the repository from which packages are to be listed. '
          schema:
            type: string
            pattern: '[A-Za-z0-9][A-Za-z0-9._\-]{1,99}'
            minLength: 2
            maxLength: 100
        - name: format
          in: query
          required: false
          description: '<p> The format of the packages. The valid package types are: </p> <ul> <li> <p> <code>npm</code>: A Node Package Manager (npm) package. </p> </li> <li> <p> <code>pypi</code>: A Python Package Index (PyPI) package. </p> </li> <li> <p> <code>maven</code>: A Maven package that contains compiled code in a distributable format, such as a JAR file. </p> </li> </ul>'
          schema:
            type: string
            enum:
              - npm
              - pypi
              - maven
              - nuget
        - name: namespace
          in: query
          required: false
          description: '<p> The namespace of the package. The package component that specifies its namespace depends on its type. For example: </p> <ul> <li> <p> The namespace of a Maven package is its <code>groupId</code>. </p> </li> <li> <p> The namespace of an npm package is its <code>scope</code>. </p> </li> <li> <p> A Python package does not contain a corresponding component, so Python packages do not have a namespace. </p> </li> </ul>'
          schema:
            type: string
            pattern: '[^!#/\s]+'
            minLength: 1
            maxLength: 255
        - name: package-prefix
          in: query
          required: false
          description: ' A prefix used to filter returned packages. Only packages with names that start with <code>packagePrefix</code> are returned. '
          schema:
            type: string
            pattern: '[^!#/\s]+'
            minLength: 1
            maxLength: 255
        - name: max-results
          in: query
          required: false
          description: ' The maximum number of results to return per page. '
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: next-token
          in: query
          required: false
          description: ' The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results. '
          schema:
            type: string
            pattern: \S+
            minLength: 1
            maxLength: 2000
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v1/repositories:
    post:
      operationId: ListRepositories
      description: ' Returns a list of <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_RepositorySummary.html">RepositorySummary</a> objects. Each <code>RepositorySummary</code> contains information about a repository in the specified AWS account and that matches the input parameters. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRepositoriesResult'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: repository-prefix
          in: query
          required: false
          description: ' A prefix used to filter returned repositories. Only repositories with names that start with <code>repositoryPrefix</code> are returned.'
          schema:
            type: string
            pattern: '[A-Za-z0-9][A-Za-z0-9._\-]{1,99}'
            minLength: 2
            maxLength: 100
        - name: max-results
          in: query
          required: false
          description: ' The maximum number of results to return per page. '
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: next-token
          in: query
          required: false
          description: ' The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results. '
          schema:
            type: string
            pattern: \S+
            minLength: 1
            maxLength: 2000
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v1/domain/repositories#domain:
    post:
      operationId: ListRepositoriesInDomain
      description: ' Returns a list of <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_RepositorySummary.html">RepositorySummary</a> objects. Each <code>RepositorySummary</code> contains information about a repository in the specified domain and that matches the input parameters. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRepositoriesInDomainResult'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: domain
          in: query
          required: true
          description: ' The name of the domain that contains the returned list of repositories. '
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]{0,48}[a-z0-9]'
            minLength: 2
            maxLength: 50
        - name: domain-owner
          in: query
          required: false
          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '
          schema:
            type: string
            pattern: '[0-9]{12}'
            minLength: 12
            maxLength: 12
        - name: administrator-account
          in: query
          required: false
          description: ' Filter the list of repositories to only include those that are managed by the AWS account ID. '
          schema:
            type: string
            pattern: '[0-9]{12}'
            minLength: 12
            maxLength: 12
        - name: repository-prefix
          in: query
          required: false
          description: ' A prefix used to filter returned repositories. Only repositories with names that start with <code>repositoryPrefix</code> are returned. '
          schema:
            type: string
            pattern: '[A-Za-z0-9][A-Za-z0-9._\-]{1,99}'
            minLength: 2
            maxLength: 100
        - name: max-results
          in: query
          required: false
          description: ' The maximum number of results to return per page. '
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: next-token
          in: query
          required: false
          description: ' The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results. '
          schema:
            type: string
            pattern: \S+
            minLength: 1
            maxLength: 2000
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v1/tags#resourceArn:
    post:
      operationId: ListTagsForResource
      description: Gets information about AWS tags for a specified Amazon Resource Name (ARN) in AWS CodeArtifact.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResult'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: resourceArn
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the resource to get tags for.
          schema:
            type: string
            pattern: \S+
            minLength: 1
            maxLength: 1011
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v1/domain/permissions/policy:
    put:
      operationId: PutDomainPermissionsPolicy
      description: '<p> Sets a resource policy on a domain that specifies permissions to access it. </p> <p> When you call <code>PutDomainPermissionsPolicy</code>, the resource policy on the domain is ignored when evaluting permissions. This ensures that the owner of a domain cannot lock themselves out of the domain, which would prevent them from being able to update the resource policy. </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutDomainPermissionsPolicyResult'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - domain
                - policyDocument
              properties:
                domain:
                  description: ' The name of the domain on which to set the resource policy. '
                  type: string
                  pattern: '[a-z][a-z0-9\-]{0,48}[a-z0-9]'
                  minLength: 2
                  maxLength: 50
                domainOwner:
                  description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '
                  type: string
                  pattern: '[0-9]{12}'
                  minLength: 12
                  maxLength: 12
                policyRevision:
                  description: ' The current revision of the resource policy to be set. This revision is used for optimistic locking, which prevents others from overwriting your changes to the domain''s resource policy. '
                  type: string
                  pattern: \S+
                  minLength: 1
                  maxLength: 100
                policyDocument:
                  description: ' A valid displayable JSON Aspen policy string to be set as the access control resource policy on the provided domain. '
                  type: string
                  minLength: 1
                  maxLength: 5120
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v1/tag#resourceArn:
    post:
      operationId: TagResource
      description: Adds or updates tags for a resource in AWS CodeArtifact.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResult'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: resourceArn
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the resource that you want to add or update tags for.
          schema:
            type: string
            pattern: \S+
            minLength: 1
            maxLength: 1011
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tags
              properties:
                tags:
                  description: The tags you want to modify or add to the resource.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                  minItems: 0
                  maxItems: 200
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v1/untag#resourceArn:
    post:
      operationId: UntagResource
      description: Removes tags from a resource in AWS CodeArtifact.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResult'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: resourceArn
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the resource that you want to remove tags from.
          schema:
            type: string
            pattern: \S+
            minLength: 1
            maxLength: 1011
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tagKeys
              properties:
                tagKeys:
                  description: The tag key for each tag that you want to remove from the resource.
                  type: array
                  items:
                    $ref: '#/components/schemas/TagKey'
                  minItems: 0
                  maxItems: 200
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v1/package/versions/update_status#domain&repository&format&package:
    post:
      operationId: UpdatePackageVersionsStatus
      description: ' Updates the status of one or more versions of a package. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePackageVersionsStatusResult'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: domain
          in: query
          required: true
          description: ' The name of the domain that contains the repository that contains the package versions with a status to be updated. '
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]{0,48}[a-z0-9]'
            minLength: 2
            maxLength: 50
        - name: domain-owner
          in: query
          required: false
          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '
          schema:
            type: string
            pattern: '[0-9]{12}'
            minLength: 12
            maxLength: 12
        - name: repository
          in: query
          required: true
          description: ' The repository that contains the package versions with the status you want to update. '
          schema:
            type: string
            pattern: '[A-Za-z0-9][A-Za-z0-9._\-]{1,99}'
            minLength: 2
            maxLength: 100
        - name: format
          in: query
          required: true
          description: '<p> A format that specifies the type of the package with the statuses to update. The valid values are: </p> <ul> <li> <p> <code>npm</code> </p> </li> <li> <p> <code>pypi</code> </p> </li> <li> <p> <code>maven</code> </p> </li> </ul>'
          schema:
            type: string
            enum:
              - npm
              - pypi
              - maven
              - nuget
        - name: namespace
          in: query
          required: false
          description: '<p> The namespace of the package. The package component that specifies its namespace depends on its type. For example: </p> <ul> <li> <p> The namespace of a Maven package is its <code>groupId</code>. </p> </li> <li> <p> The namespace of an npm package is its <code>scope</code>. </p> </li> <li> <p> A Python package does not contain a corresponding component, so Python packages do not have a namespace. </p> </li> </ul>'
          schema:
            type: string
            pattern: '[^!#/\s]+'
            minLength: 1
            maxLength: 255
        - name: package
          in: query
          required: true
          description: ' The name of the package with the version statuses to update. '
          schema:
            type: string
            pattern: '[^!#/\s]+'
            minLength: 1
            maxLength: 255
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - versions
                - targetStatus
              properties:
                versions:
                  description: ' An array of strings that specify the versions of the package with the statuses to update. '
                  type: array
                  items:
                    $ref: '#/components/schemas/PackageVersion'
                  maxItems: 100
                versionRevisions:
                  description: ' A map of package versions and package version revisions. The map <code>key</code> is the package version (for example, <code>3.5.2</code>), and the map <code>value</code> is the package version revision. '
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/PackageVersionRevision'
                expectedStatus:
                  description: ' The package version’s expected status before it is updated. If <code>expectedStatus</code> is provided, the package version''s status is updated only if its status at the time <code>UpdatePackageVersionsStatus</code> is called matches <code>expectedStatus</code>. '
                  type: string
                  enum:
                    - Published
                    - Unfinished
                    - Unlisted
                    - Archived
                    - Disposed
                    - Deleted
                targetStatus:
                  description: ' The status you want to change the package version status to. '
                  type: string
                  enum:
                    - Published
                    - Unfinished
                    - Unlisted
                    - Archived
                    - Disposed
                    - Deleted
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AssociateExternalConnectionResult:
      type: object
      properties:
        repository:
          $ref: '#/components/schemas/RepositoryDescription'
          description: ' Information about the connected repository after processing the request. '
    AccessDeniedException: {}
    ConflictException: {}
    InternalServerException: {}
    ResourceNotFoundException: {}
    ServiceQuotaExceededException: {}
    ThrottlingException: {}
    ValidationException: {}
    CopyPackageVersionsResult:
      type: object
      properties:
        successfulVersions:
          $ref: '#/components/schemas/SuccessfulPackageVersionInfoMap'
          description: ' A list of the package versions that were successfully copied to your repository. '
        failedVersions:
          $ref: '#/components/schemas/PackageVersionErrorMap'
          description: '<p> A map of package versions that failed to copy and their error codes. The possible error codes are in the <code>PackageVersionError</code> data type. They are: </p> <ul> <li> <p> <code>ALREADY_EXISTS</code> </p> </li> <li> <p> <code>MISMATCHED_REVISION</code> </p> </li> <li> <p> <code>MISMATCHED_STATUS</code> </p> </li> <li> <p> <code>NOT_ALLOWED</code> </p> </li> <li> <p> <code>NOT_FOUND</code> </p> </li> <li> <p> <code>SKIPPED</code> </p> </li> </ul>'
    PackageVersion:
      type: string
      pattern: '[^!#/\s]+'
      minLength: 1
      maxLength: 255
    PackageVersionRevision:
      type: string
      pattern: \S+
      minLength: 1
      maxLength: 50
    CreateDomainResult:
      type: object
      properties:
        domain:
          $ref: '#/components/schemas/DomainDescription'
          description: ' Contains information about the created domain after processing the request. '
    Tag:
      type: object
      required:
        - key
        - value
      properties:
        key:
          $ref: '#/components/schemas/TagKey'
          description: The tag key.
        value:
          $ref: '#/components/schemas/TagValue'
          description: The tag value.
      description: 'A tag is a key-value pair that can be used to manage, search for, or filter resources in AWS CodeArtifact.'
    CreateRepositoryResult:
      type: object
      properties:
        repository:
          $ref: '#/components/schemas/RepositoryDescription'
          description: ' Information about the created repository after processing the request. '
    UpstreamRepository:
      type: object
      required:
        - repositoryName
      properties:
        repositoryName:
          $ref: '#/components/schemas/RepositoryName'
          description: ' The name of an upstream repository. '
      description: ' Information about an upstream repository. A list of <code>UpstreamRepository</code> objects is an input parameter to <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_CreateRepository.html">CreateRepository</a> and <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_UpdateRepository.html">UpdateRepository</a>. '
    DeleteDomainResult:
      type: object
      properties:
        domain:
          $ref: '#/components/schemas/DomainDescription'
          description: ' Contains information about the deleted domain after processing the request. '
    DeleteDomainPermissionsPolicyResult:
      type: object
      properties:
        policy:
          $ref: '#/components/schemas/ResourcePolicy'
          description: ' Information about the deleted resource policy after processing the request. '
    DeletePackageVersionsResult:
      type: object
      properties:
        successfulVersions:
          $ref: '#/components/schemas/SuccessfulPackageVersionInfoMap'
          description: ' A list of the package versions that were successfully deleted. '
        failedVersions:
          $ref: '#/components/schemas/PackageVersionErrorMap'
          description: '<p> A <code>PackageVersionError</code> object that contains a map of errors codes for the deleted package that failed. The possible error codes are: </p> <ul> <li> <p> <code>ALREADY_EXISTS</code> </p> </li> <li> <p> <code>MISMATCHED_REVISION</code> </p> </li> <li> <p> <code>MISMATCHED_STATUS</code> </p> </li> <li> <p> <code>NOT_ALLOWED</code> </p> </li> <li> <p> <code>NOT_FOUND</code> </p> </li> <li> <p> <code>SKIPPED</code> </p> </li> </ul>'
    DeleteRepositoryResult:
      type: object
      properties:
        repository:
          $ref: '#/components/schemas/RepositoryDescription'
          description: ' Information about the deleted repository after processing the request. '
    DeleteRepositoryPermissionsPolicyResult:
      type: object
      properties:
        policy:
          $ref: '#/components/schemas/ResourcePolicy'
          description: ' Information about the deleted policy after processing the request. '
    DescribeDomainResult:
      type: object
      properties:
        domain:
          $ref: '#/components/schemas/DomainDescription'
    DescribePackageVersionResult:
      type: object
      required:
        - packageVersion
      properties:
        packageVersion:
          $ref: '#/components/schemas/PackageVersionDescription'
          description: ' A <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_PackageVersionDescription.html">PackageVersionDescription</a> object that contains information about the requested package version. '
    DescribeRepositoryResult:
      type: object
      properties:
        repository:
          $ref: '#/components/schemas/RepositoryDescription'
          description: ' A <code>RepositoryDescription</code> object that contains the requested repository information. '
    DisassociateExternalConnectionResult:
      type: object
      properties:
        repository:
          $ref: '#/components/schemas/RepositoryDescription'
          description: ' The repository associated with the removed external connection. '
    DisposePackageVersionsResult:
      type: object
      properties:
        successfulVersions:
          $ref: '#/components/schemas/SuccessfulPackageVersionInfoMap'
          description: ' A list of the package versions that were successfully disposed. '
        failedVersions:
          $ref: '#/components/schemas/PackageVersionErrorMap'
          description: '<p> A <code>PackageVersionError</code> object that contains a map of errors codes for the disposed package versions that failed. The possible error codes are: </p> <ul> <li> <p> <code>ALREADY_EXISTS</code> </p> </li> <li> <p> <code>MISMATCHED_REVISION</code> </p> </li> <li> <p> <code>MISMATCHED_STATUS</code> </p> </li> <li> <p> <code>NOT_ALLOWED</code> </p> </li> <li> <p> <code>NOT_FOUND</code> </p> </li> <li> <p> <code>SKIPPED</code> </p> </li> </ul>'
    GetAuthorizationTokenResult:
      type: object
      properties:
        authorizationToken:
          $ref: '#/components/schemas/String'
          description: ' The returned authentication token. '
        expiration:
          $ref: '#/components/schemas/Timestamp'
          description: ' A timestamp that specifies the date and time the authorization token expires. '
    GetDomainPermissionsPolicyResult:
      type: object
      properties:
        policy:
          $ref: '#/components/schemas/ResourcePolicy'
          description: ' The returned resource policy. '
    GetPackageVersionAssetResult:
      type: object
      properties:
        asset:
          $ref: '#/components/schemas/Asset'
          description: ' The binary file, or asset, that is downloaded.'
    GetPackageVersionReadmeResult:
      type: object
      properties:
        format:
          $ref: '#/components/schemas/PackageFormat'
          description: '<p> The format of the package with the requested readme file. Valid format types are: </p> <ul> <li> <p> <code>npm</code> </p> </li> <li> <p> <code>pypi</code> </p> </li> <li> <p> <code>maven</code> </p> </li> </ul>'
        namespace:
          $ref: '#/components/schemas/PackageNamespace'
          description: '<p> The namespace of the package. The package component that specifies its namespace depends on its type. For example: </p> <ul> <li> <p> The namespace of a Maven package is its <code>groupId</code>. </p> </li> <li> <p> The namespace of an npm package is its <code>scope</code>. </p> </li> <li> <p> A Python package does not contain a corresponding component, so Python packages do not have a namespace. </p> </li> </ul>'
        package:
          $ref: '#/components/schemas/PackageName'
          description: ' The name of the package that contains the returned readme file. '
        version:
          $ref: '#/components/schemas/PackageVersion'
          description: ' The version of the package with the requested readme file. '
        versionRevision:
          $ref: '#/components/schemas/PackageVersionRevision'
          description: ' The current revision associated with the package version. '
        readme:
          $ref: '#/components/schemas/String'
          description: ' The text of the returned readme file. '
    GetRepositoryEndpointResult:
      type: object
      properties:
        repositoryEndpoint:
          $ref: '#/components/schemas/String'
          description: ' A string that specifies the URL of the returned endpoint. '
    GetRepositoryPermissionsPolicyResult:
      type: object
      properties:
        policy:
          $ref: '#/components/schemas/ResourcePolicy'
          description: ' The returned resource policy. '
    ListDomainsResult:
      type: object
      properties:
        domains:
          $ref: '#/components/schemas/DomainSummaryList'
          description: ' The returned list of <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_DomainSummary.html">DomainSummary</a> objects. '
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: ' The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results. '
    ListPackageVersionAssetsResult:
      type: object
      properties:
        format:
          $ref: '#/components/schemas/PackageFormat'
          description: ' The format of the package that contains the returned package version assets. '
        namespace:
          $ref: '#/components/schemas/PackageNamespace'
          description: '<p> The namespace of the package. The package component that specifies its namespace depends on its type. For example: </p> <ul> <li> <p> The namespace of a Maven package is its <code>groupId</code>. </p> </li> <li> <p> The namespace of an npm package is its <code>scope</code>. </p> </li> <li> <p> A Python package does not contain a corresponding component, so Python packages do not have a namespace. </p> </li> </ul>'
        package:
          $ref: '#/components/schemas/PackageName'
          description: ' The name of the package that contains the returned package version assets. '
        version:
          $ref: '#/components/schemas/PackageVersion'
          description: ' The version of the package associated with the returned assets. '
        versionRevision:
          $ref: '#/components/schemas/PackageVersionRevision'
          description: ' The current revision associated with the package version. '
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: ' If there are additional results, this is the token for the next set of results. '
        assets:
          $ref: '#/components/schemas/AssetSummaryList'
          description: ' The returned list of <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_AssetSummary.html">AssetSummary</a> objects. '
    ListPackageVersionDependenciesResult:
      type: object
      properties:
        format:
          $ref: '#/components/schemas/PackageFormat'
          description: '<p> A format that specifies the type of the package that contains the returned dependencies. The valid values are: </p> <ul> <li> <p> <code>npm</code> </p> </li> <li> <p> <code>pypi</code> </p> </li> <li> <p> <code>maven</code> </p> </li> </ul>'
        namespace:
          $ref: '#/components/schemas/PackageNamespace'
          description: '<p> The namespace of the package. The package component that specifies its namespace depends on its type. For example: </p> <ul> <li> <p> The namespace of a Maven package is its <code>groupId</code>. </p> </li> <li> <p> The namespace of an npm package is its <code>scope</code>. </p> </li> <li> <p> A Python package does not contain a corresponding component, so Python packages do not have a namespace. </p> </li> </ul>'
        package:
          $ref: '#/components/schemas/PackageName'
          description: ' The name of the package that contains the returned package versions dependencies. '
        version:
          $ref: '#/components/schemas/PackageVersion'
          description: ' The version of the package that is specified in the request. '
        versionRevision:
          $ref: '#/components/schemas/PackageVersionRevision'
          description: ' The current revision associated with the package version. '
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: ' The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results. '
        dependencies:
          $ref: '#/components/schemas/PackageDependencyList'
          description: ' The returned list of <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_PackageDependency.html">PackageDependency</a> objects. '
    ListPackageVersionsResult:
      type: object
      properties:
        defaultDisplayVersion:
          $ref: '#/components/schemas/PackageVersion'
          description: '<p> The default package version to display. This depends on the package format: </p> <ul> <li> <p> For Maven and PyPI packages, it''s the most recently published package version. </p> </li> <li> <p> For npm packages, it''s the version referenced by the <code>latest</code> tag. If the <code>latest</code> tag is not set, it''s the most recently published package version. </p> </li> </ul>'
        format:
          $ref: '#/components/schemas/PackageFormat'
          description: '<p> A format of the package. Valid package format values are: </p> <ul> <li> <p> <code>npm</code> </p> </li> <li> <p> <code>pypi</code> </p> </li> <li> <p> <code>maven</code> </p> </li> </ul>'
        namespace:
          $ref: '#/components/schemas/PackageNamespace'
          description: '<p> The namespace of the package. The package component that specifies its namespace depends on its type. For example: </p> <ul> <li> <p> The namespace of a Maven package is its <code>groupId</code>. </p> </li> <li> <p> The namespace of an npm package is its <code>scope</code>. </p> </li> <li> <p> A Python package does not contain a corresponding component, so Python packages do not have a namespace. </p> </li> </ul>'
        package:
          $ref: '#/components/schemas/PackageName'
          description: ' The name of the package. '
        versions:
          $ref: '#/components/schemas/PackageVersionSummaryList'
          description: ' The returned list of <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_PackageVersionSummary.html">PackageVersionSummary</a> objects. '
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: ' If there are additional results, this is the token for the next set of results. '
    ListPackagesResult:
      type: object
      properties:
        packages:
          $ref: '#/components/schemas/PackageSummaryList'
          description: ' The list of returned <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_PackageSummary.html">PackageSummary</a> objects. '
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: ' If there are additional results, this is the token for the next set of results. '
    ListRepositoriesResult:
      type: object
      properties:
        repositories:
          $ref: '#/components/schemas/RepositorySummaryList'
          description: ' The returned list of <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_RepositorySummary.html">RepositorySummary</a> objects. '
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: ' If there are additional results, this is the token for the next set of results. '
    ListRepositoriesInDomainResult:
      type: object
      properties:
        repositories:
          $ref: '#/components/schemas/RepositorySummaryList'
          description: ' The returned list of repositories. '
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: ' If there are additional results, this is the token for the next set of results. '
    ListTagsForResourceResult:
      type: object
      properties:
        tags:
          $ref: '#/components/schemas/TagList'
          description: A list of tag key and value pairs associated with the specified resource.
    PutDomainPermissionsPolicyResult:
      type: object
      properties:
        policy:
          $ref: '#/components/schemas/ResourcePolicy'
          description: ' The resource policy that was set after processing the request. '
    PutRepositoryPermissionsPolicyResult:
      type: object
      properties:
        policy:
          $ref: '#/components/schemas/ResourcePolicy'
          description: ' The resource policy that was set after processing the request. '
    TagResourceResult:
      type: object
      properties: {}
    UntagResourceResult:
      type: object
      properties: {}
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    UpdatePackageVersionsStatusResult:
      type: object
      properties:
        successfulVersions:
          $ref: '#/components/schemas/SuccessfulPackageVersionInfoMap'
          description: ' A list of <code>PackageVersionError</code> objects, one for each package version with a status that failed to update. '
        failedVersions:
          $ref: '#/components/schemas/PackageVersionErrorMap'
          description: ' A list of <code>SuccessfulPackageVersionInfo</code> objects, one for each package version with a status that successfully updated. '
    UpdateRepositoryResult:
      type: object
      properties:
        repository:
          $ref: '#/components/schemas/RepositoryDescription'
          description: ' The updated repository. '
    AccountId:
      type: string
      pattern: '[0-9]{12}'
      minLength: 12
      maxLength: 12
    Arn:
      type: string
      pattern: \S+
      minLength: 1
      maxLength: 1011
    Asset:
      type: string
    HashValue:
      type: string
      pattern: '[0-9a-f]+'
      minLength: 32
      maxLength: 512
    AssetHashes:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/HashValue'
    AssetName:
      type: string
      pattern: '\P{C}+'
      minLength: 1
      maxLength: 255
    LongOptional:
      type: integer
    AssetSummary:
      type: object
      required:
        - name
      properties:
        name:
          $ref: '#/components/schemas/AssetName'
          description: ' The name of the asset. '
        size:
          $ref: '#/components/schemas/LongOptional'
          description: ' The size of the asset. '
        hashes:
          $ref: '#/components/schemas/AssetHashes'
          description: ' The hashes of the asset. '
      description: ' Contains details about a package version asset. '
    AssetSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/AssetSummary'
    DomainName:
      type: string
      pattern: '[a-z][a-z0-9\-]{0,48}[a-z0-9]'
      minLength: 2
      maxLength: 50
    RepositoryName:
      type: string
      pattern: '[A-Za-z0-9][A-Za-z0-9._\-]{1,99}'
      minLength: 2
      maxLength: 100
    ExternalConnectionName:
      type: string
      pattern: '[A-Za-z0-9][A-Za-z0-9._\-:]{1,99}'
    AssociateExternalConnectionRequest:
      type: object
      title: AssociateExternalConnectionRequest
      properties: {}
    RepositoryDescription:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/RepositoryName'
          description: ' The name of the repository. '
        administratorAccount:
          $ref: '#/components/schemas/AccountId'
          description: ' The 12-digit account number of the AWS account that manages the repository. '
        domainName:
          $ref: '#/components/schemas/DomainName'
          description: ' The name of the domain that contains the repository. '
        domainOwner:
          $ref: '#/components/schemas/AccountId'
          description: ' The 12-digit account number of the AWS account that owns the domain that contains the repository. It does not include dashes or spaces. '
        arn:
          $ref: '#/components/schemas/Arn'
          description: ' The Amazon Resource Name (ARN) of the repository. '
        description:
          $ref: '#/components/schemas/Description'
          description: ' A text description of the repository. '
        upstreams:
          $ref: '#/components/schemas/UpstreamRepositoryInfoList'
          description: ' A list of upstream repositories to associate with the repository. The order of the upstream repositories in the list determines their priority order when AWS CodeArtifact looks for a requested package version. For more information, see <a href="https://docs.aws.amazon.com/codeartifact/latest/ug/repos-upstream.html">Working with upstream repositories</a>. '
        externalConnections:
          $ref: '#/components/schemas/RepositoryExternalConnectionInfoList'
          description: ' An array of external connections associated with the repository. '
      description: ' The details of a repository stored in AWS CodeArtifact. A CodeArtifact repository contains a set of package versions, each of which maps to a set of assets. Repositories are polyglot—a single repository can contain packages of any supported type. Each repository exposes endpoints for fetching and publishing packages using tools like the <code>npm</code> CLI, the Maven CLI (<code>mvn</code>), and <code>pip</code>. You can create up to 100 repositories per AWS account. '
    AuthorizationTokenDurationSeconds:
      type: integer
      minimum: 0
      maximum: 43200
    BooleanOptional:
      type: boolean
    PackageFormat:
      type: string
      enum:
        - npm
        - pypi
        - maven
        - nuget
    PackageNamespace:
      type: string
      pattern: '[^!#/\s]+'
      minLength: 1
      maxLength: 255
    PackageName:
      type: string
      pattern: '[^!#/\s]+'
      minLength: 1
      maxLength: 255
    PackageVersionList:
      type: array
      items:
        $ref: '#/components/schemas/PackageVersion'
      maxItems: 100
    PackageVersionRevisionMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/PackageVersionRevision'
    CopyPackageVersionsRequest:
      type: object
      title: CopyPackageVersionsRequest
      properties:
        versions:
          $ref: '#/components/schemas/PackageVersionList'
          description: <p> The versions of the package to copy. </p> <note> <p> You must specify <code>versions</code> or <code>versionRevisions</code>. You cannot specify both. </p> </note>
        versionRevisions:
          $ref: '#/components/schemas/PackageVersionRevisionMap'
          description: <p> A list of key-value pairs. The keys are package versions and the values are package version revisions. A <code>CopyPackageVersion</code> operation succeeds if the specified versions in the source repository match the specified package version revision. </p> <note> <p> You must specify <code>versions</code> or <code>versionRevisions</code>. You cannot specify both. </p> </note>
        allowOverwrite:
          $ref: '#/components/schemas/BooleanOptional'
          description: ' Set to true to overwrite a package version that already exists in the destination repository. If set to false and the package version already exists in the destination repository, the package version is returned in the <code>failedVersions</code> field of the response with an <code>ALREADY_EXISTS</code> error code. '
        includeFromUpstream:
          $ref: '#/components/schemas/BooleanOptional'
          description: ' Set to true to copy packages from repositories that are upstream from the source repository to the destination repository. The default setting is false. For more information, see <a href="https://docs.aws.amazon.com/codeartifact/latest/ug/repos-upstream.html">Working with upstream repositories</a>. '
    SuccessfulPackageVersionInfoMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/SuccessfulPackageVersionInfo'
    PackageVersionErrorMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/PackageVersionError'
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
      minItems: 0
      maxItems: 200
    CreateDomainRequest:
      type: object
      title: CreateDomainRequest
      properties:
        encryptionKey:
          $ref: '#/components/schemas/Arn'
          description: '<p> The encryption key for the domain. This is used to encrypt content stored in a domain. An encryption key can be a key ID, a key Amazon Resource Name (ARN), a key alias, or a key alias ARN. To specify an <code>encryptionKey</code>, your IAM role must have <code>kms:DescribeKey</code> and <code>kms:CreateGrant</code> permissions on the encryption key that is used. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestSyntax">DescribeKey</a> in the <i>AWS Key Management Service API Reference</i> and <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">AWS KMS API Permissions Reference</a> in the <i>AWS Key Management Service Developer Guide</i>. </p> <important> <p> CodeArtifact supports only symmetric CMKs. Do not associate an asymmetric CMK with your domain. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html">Using symmetric and asymmetric keys</a> in the <i>AWS Key Management Service Developer Guide</i>. </p> </important>'
        tags:
          $ref: '#/components/schemas/TagList'
          description: One or more tag key-value pairs for the domain.
    DomainDescription:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/DomainName'
          description: ' The name of the domain. '
        owner:
          $ref: '#/components/schemas/AccountId'
          description: ' The AWS account ID that owns the domain. '
        arn:
          $ref: '#/components/schemas/Arn'
          description: ' The Amazon Resource Name (ARN) of the domain. '
        status:
          $ref: '#/components/schemas/DomainStatus'
          description: <p> The current status of a domain. The valid values are </p> <ul> <li> <p> <code>Active</code> </p> </li> <li> <p> <code>Deleted</code> </p> </li> </ul>
        createdTime:
          $ref: '#/components/schemas/Timestamp'
          description: ' A timestamp that represents the date and time the domain was created. '
        encryptionKey:
          $ref: '#/components/schemas/Arn'
          description: ' The ARN of an AWS Key Management Service (AWS KMS) key associated with a domain. '
        repositoryCount:
          $ref: '#/components/schemas/Integer'
          description: ' The number of repositories in the domain. '
        assetSizeBytes:
          $ref: '#/components/schemas/Long'
          description: ' The total size of all assets in the domain. '
        s3BucketArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the Amazon S3 bucket that is used to store package assets in the domain.
      description: ' Information about a domain. A domain is a container for repositories. When you create a domain, it is empty until you add one or more repositories. '
    Description:
      type: string
      pattern: '\P{C}+'
      maxLength: 1000
    UpstreamRepositoryList:
      type: array
      items:
        $ref: '#/components/schemas/UpstreamRepository'
    CreateRepositoryRequest:
      type: object
      title: CreateRepositoryRequest
      properties:
        description:
          $ref: '#/components/schemas/Description'
          description: ' A description of the created repository. '
        upstreams:
          $ref: '#/components/schemas/UpstreamRepositoryList'
          description: ' A list of upstream repositories to associate with the repository. The order of the upstream repositories in the list determines their priority order when AWS CodeArtifact looks for a requested package version. For more information, see <a href="https://docs.aws.amazon.com/codeartifact/latest/ug/repos-upstream.html">Working with upstream repositories</a>. '
        tags:
          $ref: '#/components/schemas/TagList'
          description: One or more tag key-value pairs for the repository.
    PolicyRevision:
      type: string
      pattern: \S+
      minLength: 1
      maxLength: 100
    DeleteDomainPermissionsPolicyRequest:
      type: object
      title: DeleteDomainPermissionsPolicyRequest
      properties: {}
    ResourcePolicy:
      type: object
      properties:
        resourceArn:
          $ref: '#/components/schemas/Arn'
          description: ' The ARN of the resource associated with the resource policy '
        revision:
          $ref: '#/components/schemas/PolicyRevision'
          description: ' The current revision of the resource policy. '
        document:
          $ref: '#/components/schemas/PolicyDocument'
          description: ' The resource policy formatted in JSON. '
      description: ' An AWS CodeArtifact resource policy that contains a resource ARN, document details, and a revision. '
    DeleteDomainRequest:
      type: object
      title: DeleteDomainRequest
      properties: {}
    PackageVersionStatus:
      type: string
      enum:
        - Published
        - Unfinished
        - Unlisted
        - Archived
        - Disposed
        - Deleted
    DeletePackageVersionsRequest:
      type: object
      required:
        - versions
      title: DeletePackageVersionsRequest
      properties:
        versions:
          $ref: '#/components/schemas/PackageVersionList'
          description: ' An array of strings that specify the versions of the package to delete. '
        expectedStatus:
          $ref: '#/components/schemas/PackageVersionStatus'
          description: '<p> The expected status of the package version to delete. Valid values are: </p> <ul> <li> <p> <code>Published</code> </p> </li> <li> <p> <code>Unfinished</code> </p> </li> <li> <p> <code>Unlisted</code> </p> </li> <li> <p> <code>Archived</code> </p> </li> <li> <p> <code>Disposed</code> </p> </li> </ul>'
    DeleteRepositoryPermissionsPolicyRequest:
      type: object
      title: DeleteRepositoryPermissionsPolicyRequest
      properties: {}
    DeleteRepositoryRequest:
      type: object
      title: DeleteRepositoryRequest
      properties: {}
    DescribeDomainRequest:
      type: object
      title: DescribeDomainRequest
      properties: {}
    DescribePackageVersionRequest:
      type: object
      title: DescribePackageVersionRequest
      properties: {}
    PackageVersionDescription:
      type: object
      properties:
        format:
          $ref: '#/components/schemas/PackageFormat'
          description: '<p> The format of the package version. The valid package formats are: </p> <ul> <li> <p> <code>npm</code>: A Node Package Manager (npm) package. </p> </li> <li> <p> <code>pypi</code>: A Python Package Index (PyPI) package. </p> </li> <li> <p> <code>maven</code>: A Maven package that contains compiled code in a distributable format, such as a JAR file. </p> </li> </ul>'
        namespace:
          $ref: '#/components/schemas/PackageNamespace'
          description: '<p> The namespace of the package. The package component that specifies its namespace depends on its type. For example: </p> <ul> <li> <p> The namespace of a Maven package is its <code>groupId</code>. </p> </li> <li> <p> The namespace of an npm package is its <code>scope</code>. </p> </li> <li> <p> A Python package does not contain a corresponding component, so Python packages do not have a namespace. </p> </li> </ul>'
        packageName:
          $ref: '#/components/schemas/PackageName'
          description: ' The name of the requested package. '
        displayName:
          $ref: '#/components/schemas/String255'
          description: ' The name of the package that is displayed. The <code>displayName</code> varies depending on the package version''s format. For example, if an npm package is named <code>ui</code>, is in the namespace <code>vue</code>, and has the format <code>npm</code>, then the <code>displayName</code> is <code>@vue/ui</code>. '
        version:
          $ref: '#/components/schemas/PackageVersion'
          description: ' The version of the package. '
        summary:
          $ref: '#/components/schemas/String'
          description: ' A summary of the package version. The summary is extracted from the package. The information in and detail level of the summary depends on the package version''s format. '
        homePage:
          $ref: '#/components/schemas/String'
          description: ' The homepage associated with the package. '
        sourceCodeRepository:
          $ref: '#/components/schemas/String'
          description: ' The repository for the source code in the package version, or the source code used to build it. '
        publishedTime:
          $ref: '#/components/schemas/Timestamp'
          description: ' A timestamp that contains the date and time the package version was published. '
        licenses:
          $ref: '#/components/schemas/LicenseInfoList'
          description: ' Information about licenses associated with the package version. '
        revision:
          $ref: '#/components/schemas/PackageVersionRevision'
          description: ' The revision of the package version. '
        status:
          $ref: '#/components/schemas/PackageVersionStatus'
          description: '<p> A string that contains the status of the package version. It can be one of the following: </p> <ul> <li> <p> <code>Published</code> </p> </li> <li> <p> <code>Unfinished</code> </p> </li> <li> <p> <code>Unlisted</code> </p> </li> <li> <p> <code>Archived</code> </p> </li> <li> <p> <code>Disposed</code> </p> </li> </ul>'
      description: ' Details about a package version. '
    DescribeRepositoryRequest:
      type: object
      title: DescribeRepositoryRequest
      properties: {}
    DisassociateExternalConnectionRequest:
      type: object
      title: DisassociateExternalConnectionRequest
      properties: {}
    DisposePackageVersionsRequest:
      type: object
      required:
        - versions
      title: DisposePackageVersionsRequest
      properties:
        versions:
          $ref: '#/components/schemas/PackageVersionList'
          description: ' The versions of the package you want to dispose. '
        versionRevisions:
          $ref: '#/components/schemas/PackageVersionRevisionMap'
          description: ' The revisions of the package versions you want to dispose. '
        expectedStatus:
          $ref: '#/components/schemas/PackageVersionStatus'
          description: '<p> The expected status of the package version to dispose. Valid values are: </p> <ul> <li> <p> <code>Published</code> </p> </li> <li> <p> <code>Unfinished</code> </p> </li> <li> <p> <code>Unlisted</code> </p> </li> <li> <p> <code>Archived</code> </p> </li> <li> <p> <code>Disposed</code> </p> </li> </ul>'
    DomainStatus:
      type: string
      enum:
        - Active
        - Deleted
    Timestamp:
      type: string
      format: date-time
    Integer:
      type: integer
    Long:
      type: integer
    DomainSummary:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/DomainName'
          description: ' The name of the domain. '
        owner:
          $ref: '#/components/schemas/AccountId'
          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '
        arn:
          $ref: '#/components/schemas/Arn'
          description: ' The ARN of the domain. '
        status:
          $ref: '#/components/schemas/DomainStatus'
          description: '<p> A string that contains the status of the domain. The valid values are: </p> <ul> <li> <p> <code>Active</code> </p> </li> <li> <p> <code>Deleted</code> </p> </li> </ul>'
        createdTime:
          $ref: '#/components/schemas/Timestamp'
          description: ' A timestamp that contains the date and time the domain was created. '
        encryptionKey:
          $ref: '#/components/schemas/Arn'
          description: ' The key used to encrypt the domain. '
      description: ' Information about a domain, including its name, Amazon Resource Name (ARN), and status. The <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_ListDomains.html">ListDomains</a> operation returns a list of <code>DomainSummary</code> objects. '
    DomainSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/DomainSummary'
    ErrorMessage:
      type: string
    ExternalConnectionStatus:
      type: string
      enum:
        - Available
    GetAuthorizationTokenRequest:
      type: object
      title: GetAuthorizationTokenRequest
      properties: {}
    String:
      type: string
    GetDomainPermissionsPolicyRequest:
      type: object
      title: GetDomainPermissionsPolicyRequest
      properties: {}
    GetPackageVersionAssetRequest:
      type: object
      title: GetPackageVersionAssetRequest
      properties: {}
    GetPackageVersionReadmeRequest:
      type: object
      title: GetPackageVersionReadmeRequest
      properties: {}
    GetRepositoryEndpointRequest:
      type: object
      title: GetRepositoryEndpointRequest
      properties: {}
    GetRepositoryPermissionsPolicyRequest:
      type: object
      title: GetRepositoryPermissionsPolicyRequest
      properties: {}
    HashAlgorithm:
      type: string
      enum:
        - MD5
        - SHA-1
        - SHA-256
        - SHA-512
    LicenseInfo:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/String'
          description: ' Name of the license. '
        url:
          $ref: '#/components/schemas/String'
          description: ' The URL for license data. '
      description: ' Details of the license data. '
    LicenseInfoList:
      type: array
      items:
        $ref: '#/components/schemas/LicenseInfo'
    ListDomainsMaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    PaginationToken:
      type: string
      pattern: \S+
      minLength: 1
      maxLength: 2000
    ListDomainsRequest:
      type: object
      title: ListDomainsRequest
      properties:
        maxResults:
          $ref: '#/components/schemas/ListDomainsMaxResults'
          description: ' The maximum number of results to return per page. '
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: ' The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results. '
    ListPackageVersionAssetsMaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    ListPackageVersionAssetsRequest:
      type: object
      title: ListPackageVersionAssetsRequest
      properties: {}
    ListPackageVersionDependenciesRequest:
      type: object
      title: ListPackageVersionDependenciesRequest
      properties: {}
    PackageDependencyList:
      type: array
      items:
        $ref: '#/components/schemas/PackageDependency'
    ListPackageVersionsMaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    PackageVersionSortType:
      type: string
      enum:
        - PUBLISHED_TIME
    ListPackageVersionsRequest:
      type: object
      title: ListPackageVersionsRequest
      properties: {}
    PackageVersionSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/PackageVersionSummary'
    ListPackagesMaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    ListPackagesRequest:
      type: object
      title: ListPackagesRequest
      properties: {}
    PackageSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/PackageSummary'
    ListRepositoriesInDomainMaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    ListRepositoriesInDomainRequest:
      type: object
      title: ListRepositoriesInDomainRequest
      properties: {}
    RepositorySummaryList:
      type: array
      items:
        $ref: '#/components/schemas/RepositorySummary'
    ListRepositoriesMaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    ListRepositoriesRequest:
      type: object
      title: ListRepositoriesRequest
      properties: {}
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
    PackageDependency:
      type: object
      properties:
        namespace:
          $ref: '#/components/schemas/PackageNamespace'
          description: '<p> The namespace of the package. The package component that specifies its namespace depends on its type. For example: </p> <ul> <li> <p> The namespace of a Maven package is its <code>groupId</code>. </p> </li> <li> <p> The namespace of an npm package is its <code>scope</code>. </p> </li> <li> <p> A Python package does not contain a corresponding component, so Python packages do not have a namespace. </p> </li> </ul>'
        package:
          $ref: '#/components/schemas/PackageName'
          description: ' The name of the package that this package depends on. '
        dependencyType:
          $ref: '#/components/schemas/String'
          description: ' The type of a package dependency. The possible values depend on the package type. Example types are <code>compile</code>, <code>runtime</code>, and <code>test</code> for Maven packages, and <code>dev</code>, <code>prod</code>, and <code>optional</code> for npm packages. '
        versionRequirement:
          $ref: '#/components/schemas/String'
          description: ' The required version, or version range, of the package that this package depends on. The version format is specific to the package type. For example, the following are possible valid required versions: <code>1.2.3</code>, <code>^2.3.4</code>, or <code>4.x</code>. '
      description: ' Details about a package dependency. '
    PackageSummary:
      type: object
      properties:
        format:
          $ref: '#/components/schemas/PackageFormat'
          description: '<p> The format of the package. Valid values are: </p> <ul> <li> <p> <code>npm</code> </p> </li> <li> <p> <code>pypi</code> </p> </li> <li> <p> <code>maven</code> </p> </li> </ul>'
        namespace:
          $ref: '#/components/schemas/PackageNamespace'
          description: '<p> The namespace of the package. The package component that specifies its namespace depends on its type. For example: </p> <ul> <li> <p> The namespace of a Maven package is its <code>groupId</code>. </p> </li> <li> <p> The namespace of an npm package is its <code>scope</code>. </p> </li> <li> <p> A Python package does not contain a corresponding component, so Python packages do not have a namespace. </p> </li> </ul>'
        package:
          $ref: '#/components/schemas/PackageName'
          description: ' The name of the package. '
      description: ' Details about a package, including its format, namespace, and name. The <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_ListPackages.html">ListPackages</a> operation returns a list of <code>PackageSummary</code> objects. '
    String255:
      type: string
      minLength: 1
      maxLength: 255
    PackageVersionErrorCode:
      type: string
      enum:
        - ALREADY_EXISTS
        - MISMATCHED_REVISION
        - MISMATCHED_STATUS
        - NOT_ALLOWED
        - NOT_FOUND
        - SKIPPED
    PackageVersionError:
      type: object
      properties:
        errorCode:
          $ref: '#/components/schemas/PackageVersionErrorCode'
          description: '<p> The error code associated with the error. Valid error codes are: </p> <ul> <li> <p> <code>ALREADY_EXISTS</code> </p> </li> <li> <p> <code>MISMATCHED_REVISION</code> </p> </li> <li> <p> <code>MISMATCHED_STATUS</code> </p> </li> <li> <p> <code>NOT_ALLOWED</code> </p> </li> <li> <p> <code>NOT_FOUND</code> </p> </li> <li> <p> <code>SKIPPED</code> </p> </li> </ul>'
        errorMessage:
          $ref: '#/components/schemas/ErrorMessage'
          description: ' The error message associated with the error. '
      description: ' An error associated with package. '
    PackageVersionSummary:
      type: object
      required:
        - version
        - status
      properties:
        version:
          $ref: '#/components/schemas/PackageVersion'
          description: ' Information about a package version. '
        revision:
          $ref: '#/components/schemas/PackageVersionRevision'
          description: ' The revision associated with a package version. '
        status:
          $ref: '#/components/schemas/PackageVersionStatus'
          description: '<p> A string that contains the status of the package version. It can be one of the following: </p> <ul> <li> <p> <code>Published</code> </p> </li> <li> <p> <code>Unfinished</code> </p> </li> <li> <p> <code>Unlisted</code> </p> </li> <li> <p> <code>Archived</code> </p> </li> <li> <p> <code>Disposed</code> </p> </li> </ul>'
      description: ' Details about a package version, including its status, version, and revision. The <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_ListPackageVersions.html">ListPackageVersions</a> operation returns a list of <code>PackageVersionSummary</code> objects. '
    PolicyDocument:
      type: string
      minLength: 1
      maxLength: 5120
    PutDomainPermissionsPolicyRequest:
      type: object
      required:
        - domain
        - policyDocument
      title: PutDomainPermissionsPolicyRequest
      properties:
        domain:
          $ref: '#/components/schemas/DomainName'
          description: ' The name of the domain on which to set the resource policy. '
        domainOwner:
          $ref: '#/components/schemas/AccountId'
          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '
        policyRevision:
          $ref: '#/components/schemas/PolicyRevision'
          description: ' The current revision of the resource policy to be set. This revision is used for optimistic locking, which prevents others from overwriting your changes to the domain''s resource policy. '
        policyDocument:
          $ref: '#/components/schemas/PolicyDocument'
          description: ' A valid displayable JSON Aspen policy string to be set as the access control resource policy on the provided domain. '
    PutRepositoryPermissionsPolicyRequest:
      type: object
      required:
        - policyDocument
      title: PutRepositoryPermissionsPolicyRequest
      properties:
        policyRevision:
          $ref: '#/components/schemas/PolicyRevision'
          description: ' Sets the revision of the resource policy that specifies permissions to access the repository. This revision is used for optimistic locking, which prevents others from overwriting your changes to the repository''s resource policy. '
        policyDocument:
          $ref: '#/components/schemas/PolicyDocument'
          description: ' A valid displayable JSON Aspen policy string to be set as the access control resource policy on the provided repository. '
    UpstreamRepositoryInfoList:
      type: array
      items:
        $ref: '#/components/schemas/UpstreamRepositoryInfo'
    RepositoryExternalConnectionInfoList:
      type: array
      items:
        $ref: '#/components/schemas/RepositoryExternalConnectionInfo'
    RepositoryExternalConnectionInfo:
      type: object
      properties:
        externalConnectionName:
          $ref: '#/components/schemas/ExternalConnectionName'
          description: ' The name of the external connection associated with a repository. '
        packageFormat:
          $ref: '#/components/schemas/PackageFormat'
          description: '<p> The package format associated with a repository''s external connection. The valid package formats are: </p> <ul> <li> <p> <code>npm</code>: A Node Package Manager (npm) package. </p> </li> <li> <p> <code>pypi</code>: A Python Package Index (PyPI) package. </p> </li> <li> <p> <code>maven</code>: A Maven package that contains compiled code in a distributable format, such as a JAR file. </p> </li> </ul>'
        status:
          $ref: '#/components/schemas/ExternalConnectionStatus'
          description: ' The status of the external connection of a repository. There is one valid value, <code>Available</code>. '
      description: ' Contains information about the external connection of a repository. '
    RepositorySummary:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/RepositoryName'
          description: ' The name of the repository. '
        administratorAccount:
          $ref: '#/components/schemas/AccountId'
          description: ' The AWS account ID that manages the repository. '
        domainName:
          $ref: '#/components/schemas/DomainName'
          description: ' The name of the domain that contains the repository. '
        domainOwner:
          $ref: '#/components/schemas/AccountId'
          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '
        arn:
          $ref: '#/components/schemas/Arn'
          description: ' The ARN of the repository. '
        description:
          $ref: '#/components/schemas/Description'
          description: ' The description of the repository. '
      description: ' Details about a repository, including its Amazon Resource Name (ARN), description, and domain information. The <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_ListRepositories.html">ListRepositories</a> operation returns a list of <code>RepositorySummary</code> objects. '
    SuccessfulPackageVersionInfo:
      type: object
      properties:
        revision:
          $ref: '#/components/schemas/String'
          description: ' The revision of a package version. '
        status:
          $ref: '#/components/schemas/PackageVersionStatus'
          description: '<p> The status of a package version. Valid statuses are: </p> <ul> <li> <p> <code>Published</code> </p> </li> <li> <p> <code>Unfinished</code> </p> </li> <li> <p> <code>Unlisted</code> </p> </li> <li> <p> <code>Archived</code> </p> </li> <li> <p> <code>Disposed</code> </p> </li> </ul>'
      description: ' Contains the revision and status of a package version. '
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      minItems: 0
      maxItems: 200
    TagResourceRequest:
      type: object
      required:
        - tags
      title: TagResourceRequest
      properties:
        tags:
          $ref: '#/components/schemas/TagList'
          description: The tags you want to modify or add to the resource.
    UntagResourceRequest:
      type: object
      required:
        - tagKeys
      title: UntagResourceRequest
      properties:
        tagKeys:
          $ref: '#/components/schemas/TagKeyList'
          description: The tag key for each tag that you want to remove from the resource.
    UpdatePackageVersionsStatusRequest:
      type: object
      required:
        - versions
        - targetStatus
      title: UpdatePackageVersionsStatusRequest
      properties:
        versions:
          $ref: '#/components/schemas/PackageVersionList'
          description: ' An array of strings that specify the versions of the package with the statuses to update. '
        versionRevisions:
          $ref: '#/components/schemas/PackageVersionRevisionMap'
          description: ' A map of package versions and package version revisions. The map <code>key</code> is the package version (for example, <code>3.5.2</code>), and the map <code>value</code> is the package version revision. '
        expectedStatus:
          $ref: '#/components/schemas/PackageVersionStatus'
          description: ' The package version’s expected status before it is updated. If <code>expectedStatus</code> is provided, the package version''s status is updated only if its status at the time <code>UpdatePackageVersionsStatus</code> is called matches <code>expectedStatus</code>. '
        targetStatus:
          $ref: '#/components/schemas/PackageVersionStatus'
          description: ' The status you want to change the package version status to. '
    UpdateRepositoryRequest:
      type: object
      title: UpdateRepositoryRequest
      properties:
        description:
          $ref: '#/components/schemas/Description'
          description: ' An updated repository description. '
        upstreams:
          $ref: '#/components/schemas/UpstreamRepositoryList'
          description: ' A list of upstream repositories to associate with the repository. The order of the upstream repositories in the list determines their priority order when AWS CodeArtifact looks for a requested package version. For more information, see <a href="https://docs.aws.amazon.com/codeartifact/latest/ug/repos-upstream.html">Working with upstream repositories</a>. '
    UpstreamRepositoryInfo:
      type: object
      properties:
        repositoryName:
          $ref: '#/components/schemas/RepositoryName'
          description: ' The name of an upstream repository. '
      description: ' Information about an upstream repository. '
security:
  - hmac: []
