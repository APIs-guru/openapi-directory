openapi: 3.0.0
info:
  version: '2009-03-31'
  x-release: v4
  title: Amazon EMR
  description: 'Amazon EMR is a web service that makes it easier to process large amounts of data efficiently. Amazon EMR uses Hadoop processing combined with several Amazon Web Services services to do tasks such as web indexing, data mining, log file analysis, machine learning, scientific simulation, and data warehouse management.'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: elasticmapreduce
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/elasticmapreduce-2009-03-31.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/elasticmapreduce/'
servers:
  - url: 'http://elasticmapreduce.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon EMR multi-region endpoint
  - url: 'https://elasticmapreduce.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon EMR multi-region endpoint
  - url: 'http://elasticmapreduce.amazonaws.com'
    variables: {}
    description: The general Amazon EMR endpoint for US West (Oregon)
  - url: 'https://elasticmapreduce.amazonaws.com'
    variables: {}
    description: The general Amazon EMR endpoint for US West (Oregon)
  - url: 'http://elasticmapreduce.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon EMR endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://elasticmapreduce.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon EMR endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /#X-Amz-Target=ElasticMapReduce.AddInstanceFleet:
    post:
      operationId: AddInstanceFleet
      description: '<p>Adds an instance fleet to a running cluster.</p> <note> <p>The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddInstanceFleetOutput'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddInstanceFleetInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.AddInstanceFleet
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.AddInstanceGroups:
    post:
      operationId: AddInstanceGroups
      description: Adds one or more instance groups to a running cluster.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddInstanceGroupsOutput'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddInstanceGroupsInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.AddInstanceGroups
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.AddJobFlowSteps:
    post:
      operationId: AddJobFlowSteps
      description: '<p>AddJobFlowSteps adds new steps to a running cluster. A maximum of 256 steps are allowed in each job flow.</p> <p>If your cluster is long-running (such as a Hive data warehouse) or complex, you may require more than 256 steps to process your data. You can bypass the 256-step limitation in various ways, including using SSH to connect to the master node and submitting queries directly to the software running on the master node, such as Hive and Hadoop. For more information on how to do this, see <a href="https://docs.aws.amazon.com/emr/latest/ManagementGuide/AddMoreThan256Steps.html">Add More than 256 Steps to a Cluster</a> in the <i>Amazon EMR Management Guide</i>.</p> <p>A step specifies the location of a JAR file stored either on the master node of the cluster or in Amazon S3. Each step is performed by the main function of the main class of the JAR file. The main class can be specified either in the manifest of the JAR or by using the MainFunction parameter of the step.</p> <p>Amazon EMR executes each step in the order listed. For a step to be considered complete, the main function must exit with a zero exit code and all Hadoop jobs started while the step was running must have completed and run successfully.</p> <p>You can only add steps to a cluster that is in one of the following states: STARTING, BOOTSTRAPPING, RUNNING, or WAITING.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddJobFlowStepsOutput'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddJobFlowStepsInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.AddJobFlowSteps
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.AddTags:
    post:
      operationId: AddTags
      description: 'Adds tags to an Amazon EMR resource. Tags make it easier to associate clusters in various ways, such as grouping clusters to track your Amazon EMR resource allocation costs. For more information, see <a href="https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-plan-tags.html">Tag Clusters</a>. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddTagsOutput'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddTagsInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.AddTags
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.CancelSteps:
    post:
      operationId: CancelSteps
      description: 'Cancels a pending step or steps in a running cluster. Available only in Amazon EMR versions 4.8.0 and later, excluding version 5.0.0. A maximum of 256 steps are allowed in each CancelSteps request. CancelSteps is idempotent but asynchronous; it does not guarantee that a step will be canceled, even if the request is successfully submitted. When you use Amazon EMR versions 5.28.0 and later, you can cancel steps that are in a <code>PENDING</code> or <code>RUNNING</code> state. In earlier versions of Amazon EMR, you can only cancel steps that are in a <code>PENDING</code> state. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelStepsOutput'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelStepsInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.CancelSteps
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.CreateSecurityConfiguration:
    post:
      operationId: CreateSecurityConfiguration
      description: 'Creates a security configuration, which is stored in the service and can be specified when a cluster is created.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSecurityConfigurationOutput'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSecurityConfigurationInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.CreateSecurityConfiguration
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.CreateStudio:
    post:
      operationId: CreateStudio
      description: Creates a new Amazon EMR Studio.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateStudioOutput'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStudioInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.CreateStudio
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.CreateStudioSessionMapping:
    post:
      operationId: CreateStudioSessionMapping
      description: 'Maps a user or group to the Amazon EMR Studio specified by <code>StudioId</code>, and applies a session policy to refine Studio permissions for that user or group.'
      responses:
        '200':
          description: Success
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStudioSessionMappingInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.CreateStudioSessionMapping
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.DeleteSecurityConfiguration:
    post:
      operationId: DeleteSecurityConfiguration
      description: Deletes a security configuration.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSecurityConfigurationOutput'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteSecurityConfigurationInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.DeleteSecurityConfiguration
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.DeleteStudio:
    post:
      operationId: DeleteStudio
      description: Removes an Amazon EMR Studio from the Studio metadata store.
      responses:
        '200':
          description: Success
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteStudioInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.DeleteStudio
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.DeleteStudioSessionMapping:
    post:
      operationId: DeleteStudioSessionMapping
      description: Removes a user or group from an Amazon EMR Studio.
      responses:
        '200':
          description: Success
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteStudioSessionMappingInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.DeleteStudioSessionMapping
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.DescribeCluster:
    post:
      operationId: DescribeCluster
      description: 'Provides cluster-level details including status, hardware and software configuration, VPC settings, and so on.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeClusterOutput'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeClusterInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.DescribeCluster
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.DescribeJobFlows:
    post:
      deprecated: true
      operationId: DescribeJobFlows
      description: '<p>This API is no longer supported and will eventually be removed. We recommend you use <a>ListClusters</a>, <a>DescribeCluster</a>, <a>ListSteps</a>, <a>ListInstanceGroups</a> and <a>ListBootstrapActions</a> instead.</p> <p>DescribeJobFlows returns a list of job flows that match all of the supplied parameters. The parameters can include a list of job flow IDs, job flow states, and restrictions on job flow creation date and time.</p> <p>Regardless of supplied parameters, only job flows created within the last two months are returned.</p> <p>If no parameters are supplied, then job flows matching either of the following criteria are returned:</p> <ul> <li> <p>Job flows created and completed in the last two weeks</p> </li> <li> <p> Job flows created within the last two months that are in one of the following states: <code>RUNNING</code>, <code>WAITING</code>, <code>SHUTTING_DOWN</code>, <code>STARTING</code> </p> </li> </ul> <p>Amazon EMR can return a maximum of 512 job flow descriptions.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeJobFlowsOutput'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeJobFlowsInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.DescribeJobFlows
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.DescribeNotebookExecution:
    post:
      operationId: DescribeNotebookExecution
      description: Provides details of a notebook execution.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeNotebookExecutionOutput'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeNotebookExecutionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.DescribeNotebookExecution
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.DescribeReleaseLabel:
    post:
      operationId: DescribeReleaseLabel
      description: 'Provides EMR release label details, such as releases available the region where the API request is run, and the available applications for a specific EMR release label. Can also list EMR release versions that support a specified version of Spark.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeReleaseLabelOutput'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeReleaseLabelInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.DescribeReleaseLabel
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.DescribeSecurityConfiguration:
    post:
      operationId: DescribeSecurityConfiguration
      description: Provides the details of a security configuration by returning the configuration JSON.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeSecurityConfigurationOutput'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeSecurityConfigurationInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.DescribeSecurityConfiguration
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.DescribeStep:
    post:
      operationId: DescribeStep
      description: Provides more detail about the cluster step.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeStepOutput'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeStepInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.DescribeStep
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.DescribeStudio:
    post:
      operationId: DescribeStudio
      description: 'Returns details for the specified Amazon EMR Studio including ID, Name, VPC, Studio access URL, and so on.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeStudioOutput'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeStudioInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.DescribeStudio
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.GetBlockPublicAccessConfiguration:
    post:
      operationId: GetBlockPublicAccessConfiguration
      description: 'Returns the Amazon EMR block public access configuration for your account in the current Region. For more information see <a href="https://docs.aws.amazon.com/emr/latest/ManagementGuide/configure-block-public-access.html">Configure Block Public Access for Amazon EMR</a> in the <i>Amazon EMR Management Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBlockPublicAccessConfigurationOutput'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetBlockPublicAccessConfigurationInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.GetBlockPublicAccessConfiguration
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.GetManagedScalingPolicy:
    post:
      operationId: GetManagedScalingPolicy
      description: 'Fetches the attached managed scaling policy for an Amazon EMR cluster. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetManagedScalingPolicyOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetManagedScalingPolicyInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.GetManagedScalingPolicy
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.GetStudioSessionMapping:
    post:
      operationId: GetStudioSessionMapping
      description: Fetches mapping details for the specified Amazon EMR Studio and identity (user or group).
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStudioSessionMappingOutput'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetStudioSessionMappingInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.GetStudioSessionMapping
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.ListBootstrapActions:
    post:
      operationId: ListBootstrapActions
      description: Provides information about the bootstrap actions associated with a cluster.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBootstrapActionsOutput'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListBootstrapActionsInput'
      parameters:
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.ListBootstrapActions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.ListClusters:
    post:
      operationId: ListClusters
      description: 'Provides the status of all clusters visible to this account. Allows you to filter the list of clusters based on certain criteria; for example, filtering by cluster creation date and time or by status. This call returns a maximum of 50 clusters in unsorted order per call, but returns a marker to track the paging of the cluster list across multiple ListClusters calls.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClustersOutput'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListClustersInput'
      parameters:
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.ListClusters
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.ListInstanceFleets:
    post:
      operationId: ListInstanceFleets
      description: '<p>Lists all available details about the instance fleets in a cluster.</p> <note> <p>The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInstanceFleetsOutput'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListInstanceFleetsInput'
      parameters:
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.ListInstanceFleets
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.ListInstanceGroups:
    post:
      operationId: ListInstanceGroups
      description: Provides all available details about the instance groups in a cluster.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInstanceGroupsOutput'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListInstanceGroupsInput'
      parameters:
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.ListInstanceGroups
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.ListInstances:
    post:
      operationId: ListInstances
      description: 'Provides information for all active EC2 instances and EC2 instances terminated in the last 30 days, up to a maximum of 2,000. EC2 instances in any of the following states are considered active: AWAITING_FULFILLMENT, PROVISIONING, BOOTSTRAPPING, RUNNING.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInstancesOutput'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListInstancesInput'
      parameters:
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.ListInstances
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.ListNotebookExecutions:
    post:
      operationId: ListNotebookExecutions
      description: 'Provides summaries of all notebook executions. You can filter the list based on multiple criteria such as status, time range, and editor id. Returns a maximum of 50 notebook executions and a marker to track the paging of a longer notebook execution list across multiple <code>ListNotebookExecution</code> calls.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNotebookExecutionsOutput'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListNotebookExecutionsInput'
      parameters:
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.ListNotebookExecutions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.ListReleaseLabels:
    post:
      operationId: ListReleaseLabels
      description: Retrieves release labels of EMR services in the region where the API is called.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReleaseLabelsOutput'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListReleaseLabelsInput'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.ListReleaseLabels
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.ListSecurityConfigurations:
    post:
      operationId: ListSecurityConfigurations
      description: 'Lists all the security configurations visible to this account, providing their creation dates and times, and their names. This call returns a maximum of 50 clusters per call, but returns a marker to track the paging of the cluster list across multiple ListSecurityConfigurations calls.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSecurityConfigurationsOutput'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListSecurityConfigurationsInput'
      parameters:
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.ListSecurityConfigurations
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.ListSteps:
    post:
      operationId: ListSteps
      description: 'Provides a list of steps for the cluster in reverse order unless you specify <code>stepIds</code> with the request or filter by <code>StepStates</code>. You can specify a maximum of 10 <code>stepIDs</code>. The CLI automatically paginates results to return a list greater than 50 steps. To return more than 50 steps using the CLI, specify a <code>Marker</code>, which is a pagination token that indicates the next set of steps to retrieve.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStepsOutput'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListStepsInput'
      parameters:
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.ListSteps
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.ListStudioSessionMappings:
    post:
      operationId: ListStudioSessionMappings
      description: Returns a list of all user or group session mappings for the Amazon EMR Studio specified by <code>StudioId</code>.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStudioSessionMappingsOutput'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListStudioSessionMappingsInput'
      parameters:
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.ListStudioSessionMappings
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.ListStudios:
    post:
      operationId: ListStudios
      description: 'Returns a list of all Amazon EMR Studios associated with the account. The list includes details such as ID, Studio Access URL, and creation time for each Studio.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStudiosOutput'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListStudiosInput'
      parameters:
        - name: Marker
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.ListStudios
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.ModifyCluster:
    post:
      operationId: ModifyCluster
      description: Modifies the number of steps that can be executed concurrently for the cluster specified using ClusterID.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModifyClusterOutput'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyClusterInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.ModifyCluster
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.ModifyInstanceFleet:
    post:
      operationId: ModifyInstanceFleet
      description: '<p>Modifies the target On-Demand and target Spot capacities for the instance fleet with the specified InstanceFleetID within the cluster specified using ClusterID. The call either succeeds or fails atomically.</p> <note> <p>The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions.</p> </note>'
      responses:
        '200':
          description: Success
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyInstanceFleetInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.ModifyInstanceFleet
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.ModifyInstanceGroups:
    post:
      operationId: ModifyInstanceGroups
      description: ModifyInstanceGroups modifies the number of nodes and configuration settings of an instance group. The input parameters include the new target instance count for the group and the instance group ID. The call will either succeed or fail atomically.
      responses:
        '200':
          description: Success
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyInstanceGroupsInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.ModifyInstanceGroups
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.PutAutoScalingPolicy:
    post:
      operationId: PutAutoScalingPolicy
      description: Creates or updates an automatic scaling policy for a core instance group or task instance group in an Amazon EMR cluster. The automatic scaling policy defines how an instance group dynamically adds and terminates EC2 instances in response to the value of a CloudWatch metric.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutAutoScalingPolicyOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutAutoScalingPolicyInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.PutAutoScalingPolicy
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.PutBlockPublicAccessConfiguration:
    post:
      operationId: PutBlockPublicAccessConfiguration
      description: 'Creates or updates an Amazon EMR block public access configuration for your account in the current Region. For more information see <a href="https://docs.aws.amazon.com/emr/latest/ManagementGuide/configure-block-public-access.html">Configure Block Public Access for Amazon EMR</a> in the <i>Amazon EMR Management Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutBlockPublicAccessConfigurationOutput'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutBlockPublicAccessConfigurationInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.PutBlockPublicAccessConfiguration
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.PutManagedScalingPolicy:
    post:
      operationId: PutManagedScalingPolicy
      description: 'Creates or updates a managed scaling policy for an Amazon EMR cluster. The managed scaling policy defines the limits for resources, such as EC2 instances that can be added or terminated from a cluster. The policy only applies to the core and task nodes. The master node cannot be scaled after initial configuration. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutManagedScalingPolicyOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutManagedScalingPolicyInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.PutManagedScalingPolicy
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.RemoveAutoScalingPolicy:
    post:
      operationId: RemoveAutoScalingPolicy
      description: Removes an automatic scaling policy from a specified instance group within an EMR cluster.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveAutoScalingPolicyOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveAutoScalingPolicyInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.RemoveAutoScalingPolicy
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.RemoveManagedScalingPolicy:
    post:
      operationId: RemoveManagedScalingPolicy
      description: ' Removes a managed scaling policy from a specified EMR cluster. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveManagedScalingPolicyOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveManagedScalingPolicyInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.RemoveManagedScalingPolicy
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.RemoveTags:
    post:
      operationId: RemoveTags
      description: '<p>Removes tags from an Amazon EMR resource. Tags make it easier to associate clusters in various ways, such as grouping clusters to track your Amazon EMR resource allocation costs. For more information, see <a href="https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-plan-tags.html">Tag Clusters</a>. </p> <p>The following example removes the stack tag with value Prod from a cluster:</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveTagsOutput'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveTagsInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.RemoveTags
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.RunJobFlow:
    post:
      operationId: RunJobFlow
      description: '<p>RunJobFlow creates and starts running a new cluster (job flow). The cluster runs the steps specified. After the steps complete, the cluster stops and the HDFS partition is lost. To prevent loss of data, configure the last step of the job flow to store results in Amazon S3. If the <a>JobFlowInstancesConfig</a> <code>KeepJobFlowAliveWhenNoSteps</code> parameter is set to <code>TRUE</code>, the cluster transitions to the WAITING state rather than shutting down after the steps have completed. </p> <p>For additional protection, you can set the <a>JobFlowInstancesConfig</a> <code>TerminationProtected</code> parameter to <code>TRUE</code> to lock the cluster and prevent it from being terminated by API call, user intervention, or in the event of a job flow error.</p> <p>A maximum of 256 steps are allowed in each job flow.</p> <p>If your cluster is long-running (such as a Hive data warehouse) or complex, you may require more than 256 steps to process your data. You can bypass the 256-step limitation in various ways, including using the SSH shell to connect to the master node and submitting queries directly to the software running on the master node, such as Hive and Hadoop. For more information on how to do this, see <a href="https://docs.aws.amazon.com/emr/latest/ManagementGuide/AddMoreThan256Steps.html">Add More than 256 Steps to a Cluster</a> in the <i>Amazon EMR Management Guide</i>.</p> <p>For long running clusters, we recommend that you periodically store your results.</p> <note> <p>The instance fleets configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions. The RunJobFlow request can contain InstanceFleets parameters or InstanceGroups parameters, but not both.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunJobFlowOutput'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunJobFlowInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.RunJobFlow
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.SetTerminationProtection:
    post:
      operationId: SetTerminationProtection
      description: '<p>SetTerminationProtection locks a cluster (job flow) so the EC2 instances in the cluster cannot be terminated by user intervention, an API call, or in the event of a job-flow error. The cluster still terminates upon successful completion of the job flow. Calling <code>SetTerminationProtection</code> on a cluster is similar to calling the Amazon EC2 <code>DisableAPITermination</code> API on all EC2 instances in a cluster.</p> <p> <code>SetTerminationProtection</code> is used to prevent accidental termination of a cluster and to ensure that in the event of an error, the instances persist so that you can recover any data stored in their ephemeral instance storage.</p> <p> To terminate a cluster that has been locked by setting <code>SetTerminationProtection</code> to <code>true</code>, you must first unlock the job flow by a subsequent call to <code>SetTerminationProtection</code> in which you set the value to <code>false</code>. </p> <p> For more information, see<a href="https://docs.aws.amazon.com/emr/latest/ManagementGuide/UsingEMR_TerminationProtection.html">Managing Cluster Termination</a> in the <i>Amazon EMR Management Guide</i>. </p>'
      responses:
        '200':
          description: Success
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetTerminationProtectionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.SetTerminationProtection
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.SetVisibleToAllUsers:
    post:
      operationId: SetVisibleToAllUsers
      description: '<p>Sets the <a>Cluster$VisibleToAllUsers</a> value for an EMR cluster. When <code>true</code>, IAM principals in the account can perform EMR cluster actions that their IAM policies allow. When <code>false</code>, only the IAM principal that created the cluster and the account root user can perform EMR actions on the cluster, regardless of IAM permissions policies attached to other IAM principals.</p> <p>This action works on running clusters. When you create a cluster, use the <a>RunJobFlowInput$VisibleToAllUsers</a> parameter.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/emr/latest/ManagementGuide/security_iam_emr-with-iam.html#security_set_visible_to_all_users">Understanding the EMR Cluster VisibleToAllUsers Setting</a> in the <i>Amazon EMRManagement Guide</i>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetVisibleToAllUsersInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.SetVisibleToAllUsers
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.StartNotebookExecution:
    post:
      operationId: StartNotebookExecution
      description: Starts a notebook execution.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartNotebookExecutionOutput'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartNotebookExecutionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.StartNotebookExecution
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.StopNotebookExecution:
    post:
      operationId: StopNotebookExecution
      description: Stops a notebook execution.
      responses:
        '200':
          description: Success
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopNotebookExecutionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.StopNotebookExecution
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.TerminateJobFlows:
    post:
      operationId: TerminateJobFlows
      description: '<p>TerminateJobFlows shuts a list of clusters (job flows) down. When a job flow is shut down, any step not yet completed is canceled and the EC2 instances on which the cluster is running are stopped. Any log files not already saved are uploaded to Amazon S3 if a LogUri was specified when the cluster was created.</p> <p>The maximum number of clusters allowed is 10. The call to <code>TerminateJobFlows</code> is asynchronous. Depending on the configuration of the cluster, it may take up to 1-5 minutes for the cluster to completely terminate and release allocated resources, such as Amazon EC2 instances.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TerminateJobFlowsInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.TerminateJobFlows
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.UpdateStudio:
    post:
      operationId: UpdateStudio
      description: 'Updates an Amazon EMR Studio configuration, including attributes such as name, description, and subnets.'
      responses:
        '200':
          description: Success
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStudioInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.UpdateStudio
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=ElasticMapReduce.UpdateStudioSessionMapping:
    post:
      operationId: UpdateStudioSessionMapping
      description: Updates the session policy attached to the user or group for the specified Amazon EMR Studio.
      responses:
        '200':
          description: Success
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStudioSessionMappingInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ElasticMapReduce.UpdateStudioSessionMapping
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AddInstanceFleetOutput:
      type: object
      properties:
        ClusterId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The unique identifier of the cluster.
        InstanceFleetId:
          $ref: '#/components/schemas/InstanceFleetId'
          description: The unique identifier of the instance fleet.
        ClusterArn:
          $ref: '#/components/schemas/ArnType'
          description: The Amazon Resource Name of the cluster.
    AddInstanceFleetInput:
      type: object
      required:
        - ClusterId
        - InstanceFleet
      title: AddInstanceFleetInput
      properties:
        ClusterId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The unique identifier of the cluster.
        InstanceFleet:
          $ref: '#/components/schemas/InstanceFleetConfig'
          description: Specifies the configuration of the instance fleet.
    InternalServerException: {}
    InvalidRequestException: {}
    AddInstanceGroupsOutput:
      type: object
      properties:
        JobFlowId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The job flow ID in which the instance groups are added.
        InstanceGroupIds:
          $ref: '#/components/schemas/InstanceGroupIdsList'
          description: Instance group IDs of the newly created instance groups.
        ClusterArn:
          $ref: '#/components/schemas/ArnType'
          description: The Amazon Resource Name of the cluster.
      description: Output from an AddInstanceGroups call.
    AddInstanceGroupsInput:
      type: object
      required:
        - InstanceGroups
        - JobFlowId
      title: AddInstanceGroupsInput
      properties:
        InstanceGroups:
          $ref: '#/components/schemas/InstanceGroupConfigList'
          description: Instance groups to add.
        JobFlowId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: Job flow in which to add the instance groups.
      description: Input to an AddInstanceGroups call.
    InternalServerError: {}
    AddJobFlowStepsOutput:
      type: object
      properties:
        StepIds:
          $ref: '#/components/schemas/StepIdsList'
          description: The identifiers of the list of steps added to the job flow.
      description: ' The output for the <a>AddJobFlowSteps</a> operation. '
    AddJobFlowStepsInput:
      type: object
      required:
        - JobFlowId
        - Steps
      title: AddJobFlowStepsInput
      properties:
        JobFlowId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: 'A string that uniquely identifies the job flow. This identifier is returned by <a>RunJobFlow</a> and can also be obtained from <a>ListClusters</a>. '
        Steps:
          $ref: '#/components/schemas/StepConfigList'
          description: ' A list of <a>StepConfig</a> to be executed by the job flow. '
      description: ' The input argument to the <a>AddJobFlowSteps</a> operation. '
    AddTagsOutput:
      type: object
      properties: {}
      description: This output indicates the result of adding tags to a resource.
    AddTagsInput:
      type: object
      required:
        - ResourceId
        - Tags
      title: AddTagsInput
      properties:
        ResourceId:
          $ref: '#/components/schemas/ResourceId'
          description: The Amazon EMR resource identifier to which tags will be added. This value must be a cluster identifier.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'A list of tags to associate with a cluster and propagate to EC2 instances. Tags are user-defined key-value pairs that consist of a required key string with a maximum of 128 characters, and an optional value string with a maximum of 256 characters.'
      description: This input identifies a cluster and a list of tags to attach.
    CancelStepsOutput:
      type: object
      properties:
        CancelStepsInfoList:
          $ref: '#/components/schemas/CancelStepsInfoList'
          description: 'A list of <a>CancelStepsInfo</a>, which shows the status of specified cancel requests for each <code>StepID</code> specified.'
      description: ' The output for the <a>CancelSteps</a> operation. '
    CancelStepsInput:
      type: object
      required:
        - ClusterId
        - StepIds
      title: CancelStepsInput
      properties:
        ClusterId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: 'The <code>ClusterID</code> for the specified steps that will be canceled. Use <a>RunJobFlow</a> and <a>ListClusters</a> to get ClusterIDs. '
        StepIds:
          $ref: '#/components/schemas/StepIdsList'
          description: The list of <code>StepIDs</code> to cancel. Use <a>ListSteps</a> to get steps and their states for the specified cluster.
        StepCancellationOption:
          $ref: '#/components/schemas/StepCancellationOption'
          description: 'The option to choose to cancel <code>RUNNING</code> steps. By default, the value is <code>SEND_INTERRUPT</code>.'
      description: The input argument to the <a>CancelSteps</a> operation.
    CreateSecurityConfigurationOutput:
      type: object
      required:
        - Name
        - CreationDateTime
      properties:
        Name:
          $ref: '#/components/schemas/XmlString'
          description: The name of the security configuration.
        CreationDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time the security configuration was created.
    CreateSecurityConfigurationInput:
      type: object
      required:
        - Name
        - SecurityConfiguration
      title: CreateSecurityConfigurationInput
      properties:
        Name:
          $ref: '#/components/schemas/XmlString'
          description: The name of the security configuration.
        SecurityConfiguration:
          $ref: '#/components/schemas/String'
          description: 'The security configuration details in JSON format. For JSON parameters and examples, see <a href="https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-security-configurations.html">Use Security Configurations to Set Up Cluster Security</a> in the <i>Amazon EMR Management Guide</i>.'
    CreateStudioOutput:
      type: object
      properties:
        StudioId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The ID of the Amazon EMR Studio.
        Url:
          $ref: '#/components/schemas/XmlString'
          description: The unique Studio access URL.
    CreateStudioInput:
      type: object
      required:
        - Name
        - AuthMode
        - VpcId
        - SubnetIds
        - ServiceRole
        - UserRole
        - WorkspaceSecurityGroupId
        - EngineSecurityGroupId
        - DefaultS3Location
      title: CreateStudioInput
      properties:
        Name:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: A descriptive name for the Amazon EMR Studio.
        Description:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: A detailed description of the Amazon EMR Studio.
        AuthMode:
          $ref: '#/components/schemas/AuthMode'
          description: Specifies whether the Studio authenticates users using single sign-on (SSO) or IAM. Amazon EMR Studio currently only supports SSO authentication.
        VpcId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The ID of the Amazon Virtual Private Cloud (Amazon VPC) to associate with the Studio.
        SubnetIds:
          $ref: '#/components/schemas/SubnetIdList'
          description: A list of subnet IDs to associate with the Amazon EMR Studio. A Studio can have a maximum of 5 subnets. The subnets must belong to the VPC specified by <code>VpcId</code>. Studio users can create a Workspace in any of the specified subnets.
        ServiceRole:
          $ref: '#/components/schemas/XmlString'
          description: The IAM role that will be assumed by the Amazon EMR Studio. The service role provides a way for Amazon EMR Studio to interoperate with other Amazon Web Services services.
        UserRole:
          $ref: '#/components/schemas/XmlString'
          description: The IAM user role that will be assumed by users and groups logged in to an Amazon EMR Studio. The permissions attached to this IAM role can be scoped down for each user or group using session policies.
        WorkspaceSecurityGroupId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: 'The ID of the Amazon EMR Studio Workspace security group. The Workspace security group allows outbound network traffic to resources in the Engine security group, and it must be in the same VPC specified by <code>VpcId</code>.'
        EngineSecurityGroupId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: 'The ID of the Amazon EMR Studio Engine security group. The Engine security group allows inbound network traffic from the Workspace security group, and it must be in the same VPC specified by <code>VpcId</code>.'
        DefaultS3Location:
          $ref: '#/components/schemas/XmlString'
          description: The Amazon S3 location to back up Amazon EMR Studio Workspaces and notebook files.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'A list of tags to associate with the Amazon EMR Studio. Tags are user-defined key-value pairs that consist of a required key string with a maximum of 128 characters, and an optional value string with a maximum of 256 characters.'
    CreateStudioSessionMappingInput:
      type: object
      required:
        - StudioId
        - IdentityType
        - SessionPolicyArn
      title: CreateStudioSessionMappingInput
      properties:
        StudioId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The ID of the Amazon EMR Studio to which the user or group will be mapped.
        IdentityId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: 'The globally unique identifier (GUID) of the user or group from the Amazon Web Services SSO Identity Store. For more information, see <a href="https://docs.aws.amazon.com/singlesignon/latest/IdentityStoreAPIReference/API_User.html#singlesignon-Type-User-UserId">UserId</a> and <a href="https://docs.aws.amazon.com/singlesignon/latest/IdentityStoreAPIReference/API_Group.html#singlesignon-Type-Group-GroupId">GroupId</a> in the <i>Amazon Web Services SSO Identity Store API Reference</i>. Either <code>IdentityName</code> or <code>IdentityId</code> must be specified, but not both.'
        IdentityName:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: 'The name of the user or group. For more information, see <a href="https://docs.aws.amazon.com/singlesignon/latest/IdentityStoreAPIReference/API_User.html#singlesignon-Type-User-UserName">UserName</a> and <a href="https://docs.aws.amazon.com/singlesignon/latest/IdentityStoreAPIReference/API_Group.html#singlesignon-Type-Group-DisplayName">DisplayName</a> in the <i>Amazon Web Services SSO Identity Store API Reference</i>. Either <code>IdentityName</code> or <code>IdentityId</code> must be specified, but not both.'
        IdentityType:
          $ref: '#/components/schemas/IdentityType'
          description: Specifies whether the identity to map to the Amazon EMR Studio is a user or a group.
        SessionPolicyArn:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: 'The Amazon Resource Name (ARN) for the session policy that will be applied to the user or group. You should specify the ARN for the session policy that you want to apply, not the ARN of your user role. For more information, see <a href="https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-studio-user-role.html">Create an EMR Studio User Role with Session Policies</a>.'
    DeleteSecurityConfigurationOutput:
      type: object
      properties: {}
    DeleteSecurityConfigurationInput:
      type: object
      required:
        - Name
      title: DeleteSecurityConfigurationInput
      properties:
        Name:
          $ref: '#/components/schemas/XmlString'
          description: The name of the security configuration.
    DeleteStudioInput:
      type: object
      required:
        - StudioId
      title: DeleteStudioInput
      properties:
        StudioId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The ID of the Amazon EMR Studio.
    DeleteStudioSessionMappingInput:
      type: object
      required:
        - StudioId
        - IdentityType
      title: DeleteStudioSessionMappingInput
      properties:
        StudioId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The ID of the Amazon EMR Studio.
        IdentityId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: 'The globally unique identifier (GUID) of the user or group to remove from the Amazon EMR Studio. For more information, see <a href="https://docs.aws.amazon.com/singlesignon/latest/IdentityStoreAPIReference/API_User.html#singlesignon-Type-User-UserId">UserId</a> and <a href="https://docs.aws.amazon.com/singlesignon/latest/IdentityStoreAPIReference/API_Group.html#singlesignon-Type-Group-GroupId">GroupId</a> in the <i>Amazon Web Services SSO Identity Store API Reference</i>. Either <code>IdentityName</code> or <code>IdentityId</code> must be specified.'
        IdentityName:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: 'The name of the user name or group to remove from the Amazon EMR Studio. For more information, see <a href="https://docs.aws.amazon.com/singlesignon/latest/IdentityStoreAPIReference/API_User.html#singlesignon-Type-User-UserName">UserName</a> and <a href="https://docs.aws.amazon.com/singlesignon/latest/IdentityStoreAPIReference/API_Group.html#singlesignon-Type-Group-DisplayName">DisplayName</a> in the <i>Amazon Web Services SSO Store API Reference</i>. Either <code>IdentityName</code> or <code>IdentityId</code> must be specified.'
        IdentityType:
          $ref: '#/components/schemas/IdentityType'
          description: Specifies whether the identity to delete from the Amazon EMR Studio is a user or a group.
    DescribeClusterOutput:
      type: object
      properties:
        Cluster:
          $ref: '#/components/schemas/Cluster'
          description: This output contains the details for the requested cluster.
      description: This output contains the description of the cluster.
    DescribeClusterInput:
      type: object
      required:
        - ClusterId
      title: DescribeClusterInput
      properties:
        ClusterId:
          $ref: '#/components/schemas/ClusterId'
          description: The identifier of the cluster to describe.
      description: This input determines which cluster to describe.
    DescribeJobFlowsOutput:
      type: object
      properties:
        JobFlows:
          $ref: '#/components/schemas/JobFlowDetailList'
          description: A list of job flows matching the parameters supplied.
      description: ' The output for the <a>DescribeJobFlows</a> operation. '
    DescribeJobFlowsInput:
      type: object
      title: DescribeJobFlowsInput
      properties:
        CreatedAfter:
          $ref: '#/components/schemas/Date'
          description: Return only job flows created after this date and time.
        CreatedBefore:
          $ref: '#/components/schemas/Date'
          description: Return only job flows created before this date and time.
        JobFlowIds:
          $ref: '#/components/schemas/XmlStringList'
          description: Return only job flows whose job flow ID is contained in this list.
        JobFlowStates:
          $ref: '#/components/schemas/JobFlowExecutionStateList'
          description: Return only job flows whose state is contained in this list.
      description: ' The input for the <a>DescribeJobFlows</a> operation. '
    DescribeNotebookExecutionOutput:
      type: object
      properties:
        NotebookExecution:
          $ref: '#/components/schemas/NotebookExecution'
          description: Properties of the notebook execution.
    DescribeNotebookExecutionInput:
      type: object
      required:
        - NotebookExecutionId
      title: DescribeNotebookExecutionInput
      properties:
        NotebookExecutionId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The unique identifier of the notebook execution.
    DescribeReleaseLabelOutput:
      type: object
      properties:
        ReleaseLabel:
          $ref: '#/components/schemas/String'
          description: The target release label described in the response.
        Applications:
          $ref: '#/components/schemas/SimplifiedApplicationList'
          description: The list of applications available for the target release label. <code>Name</code> is the name of the application. <code>Version</code> is the concise version of the application.
        NextToken:
          $ref: '#/components/schemas/String'
          description: The pagination token. Reserved for future use. Currently set to null.
    DescribeReleaseLabelInput:
      type: object
      title: DescribeReleaseLabelInput
      properties:
        ReleaseLabel:
          $ref: '#/components/schemas/String'
          description: The target release label to be described.
        NextToken:
          $ref: '#/components/schemas/String'
          description: The pagination token. Reserved for future use. Currently set to null.
        MaxResults:
          $ref: '#/components/schemas/MaxResultsNumber'
          description: Reserved for future use. Currently set to null.
    DescribeSecurityConfigurationOutput:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/XmlString'
          description: The name of the security configuration.
        SecurityConfiguration:
          $ref: '#/components/schemas/String'
          description: The security configuration details in JSON format.
        CreationDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time the security configuration was created
    DescribeSecurityConfigurationInput:
      type: object
      required:
        - Name
      title: DescribeSecurityConfigurationInput
      properties:
        Name:
          $ref: '#/components/schemas/XmlString'
          description: The name of the security configuration.
    DescribeStepOutput:
      type: object
      properties:
        Step:
          $ref: '#/components/schemas/Step'
          description: The step details for the requested step identifier.
      description: This output contains the description of the cluster step.
    DescribeStepInput:
      type: object
      required:
        - ClusterId
        - StepId
      title: DescribeStepInput
      properties:
        ClusterId:
          $ref: '#/components/schemas/ClusterId'
          description: The identifier of the cluster with steps to describe.
        StepId:
          $ref: '#/components/schemas/StepId'
          description: The identifier of the step to describe.
      description: This input determines which step to describe.
    DescribeStudioOutput:
      type: object
      properties:
        Studio:
          $ref: '#/components/schemas/Studio'
          description: The Amazon EMR Studio details.
    DescribeStudioInput:
      type: object
      required:
        - StudioId
      title: DescribeStudioInput
      properties:
        StudioId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The Amazon EMR Studio ID.
    GetBlockPublicAccessConfigurationOutput:
      type: object
      required:
        - BlockPublicAccessConfiguration
        - BlockPublicAccessConfigurationMetadata
      properties:
        BlockPublicAccessConfiguration:
          $ref: '#/components/schemas/BlockPublicAccessConfiguration'
          description: '<p>A configuration for Amazon EMR block public access. The configuration applies to all clusters created in your account for the current Region. The configuration specifies whether block public access is enabled. If block public access is enabled, security groups associated with the cluster cannot have rules that allow inbound traffic from 0.0.0.0/0 or ::/0 on a port, unless the port is specified as an exception using <code>PermittedPublicSecurityGroupRuleRanges</code> in the <code>BlockPublicAccessConfiguration</code>. By default, Port 22 (SSH) is an exception, and public access is allowed on this port. You can change this by updating the block public access configuration to remove the exception.</p> <note> <p>For accounts that created clusters in a Region before November 25, 2019, block public access is disabled by default in that Region. To use this feature, you must manually enable and configure it. For accounts that did not create an EMR cluster in a Region before this date, block public access is enabled by default in that Region.</p> </note>'
        BlockPublicAccessConfigurationMetadata:
          $ref: '#/components/schemas/BlockPublicAccessConfigurationMetadata'
          description: 'Properties that describe the Amazon Web Services principal that created the <code>BlockPublicAccessConfiguration</code> using the <code>PutBlockPublicAccessConfiguration</code> action as well as the date and time that the configuration was created. Each time a configuration for block public access is updated, Amazon EMR updates this metadata.'
    GetBlockPublicAccessConfigurationInput:
      type: object
      title: GetBlockPublicAccessConfigurationInput
      properties: {}
    GetManagedScalingPolicyOutput:
      type: object
      properties:
        ManagedScalingPolicy:
          $ref: '#/components/schemas/ManagedScalingPolicy'
          description: 'Specifies the managed scaling policy that is attached to an Amazon EMR cluster. '
    GetManagedScalingPolicyInput:
      type: object
      required:
        - ClusterId
      title: GetManagedScalingPolicyInput
      properties:
        ClusterId:
          $ref: '#/components/schemas/ClusterId'
          description: 'Specifies the ID of the cluster for which the managed scaling policy will be fetched. '
    GetStudioSessionMappingOutput:
      type: object
      properties:
        SessionMapping:
          $ref: '#/components/schemas/SessionMappingDetail'
          description: 'The session mapping details for the specified Amazon EMR Studio and identity, including session policy ARN and creation time.'
    GetStudioSessionMappingInput:
      type: object
      required:
        - StudioId
        - IdentityType
      title: GetStudioSessionMappingInput
      properties:
        StudioId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The ID of the Amazon EMR Studio.
        IdentityId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: 'The globally unique identifier (GUID) of the user or group. For more information, see <a href="https://docs.aws.amazon.com/singlesignon/latest/IdentityStoreAPIReference/API_User.html#singlesignon-Type-User-UserId">UserId</a> and <a href="https://docs.aws.amazon.com/singlesignon/latest/IdentityStoreAPIReference/API_Group.html#singlesignon-Type-Group-GroupId">GroupId</a> in the <i>Amazon Web Services SSO Identity Store API Reference</i>. Either <code>IdentityName</code> or <code>IdentityId</code> must be specified.'
        IdentityName:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: 'The name of the user or group to fetch. For more information, see <a href="https://docs.aws.amazon.com/singlesignon/latest/IdentityStoreAPIReference/API_User.html#singlesignon-Type-User-UserName">UserName</a> and <a href="https://docs.aws.amazon.com/singlesignon/latest/IdentityStoreAPIReference/API_Group.html#singlesignon-Type-Group-DisplayName">DisplayName</a> in the <i>Amazon Web Services SSO Identity Store API Reference</i>. Either <code>IdentityName</code> or <code>IdentityId</code> must be specified.'
        IdentityType:
          $ref: '#/components/schemas/IdentityType'
          description: Specifies whether the identity to fetch is a user or a group.
    ListBootstrapActionsOutput:
      type: object
      properties:
        BootstrapActions:
          $ref: '#/components/schemas/CommandList'
          description: The bootstrap actions associated with the cluster.
        Marker:
          $ref: '#/components/schemas/Marker'
          description: The pagination token that indicates the next set of results to retrieve.
      description: This output contains the bootstrap actions detail.
    ListBootstrapActionsInput:
      type: object
      required:
        - ClusterId
      title: ListBootstrapActionsInput
      properties:
        ClusterId:
          $ref: '#/components/schemas/ClusterId'
          description: The cluster identifier for the bootstrap actions to list.
        Marker:
          $ref: '#/components/schemas/Marker'
          description: The pagination token that indicates the next set of results to retrieve.
      description: This input determines which bootstrap actions to retrieve.
    ListClustersOutput:
      type: object
      properties:
        Clusters:
          $ref: '#/components/schemas/ClusterSummaryList'
          description: The list of clusters for the account based on the given filters.
        Marker:
          $ref: '#/components/schemas/Marker'
          description: The pagination token that indicates the next set of results to retrieve.
      description: 'This contains a ClusterSummaryList with the cluster details; for example, the cluster IDs, names, and status.'
    ListClustersInput:
      type: object
      title: ListClustersInput
      properties:
        CreatedAfter:
          $ref: '#/components/schemas/Date'
          description: The creation date and time beginning value filter for listing clusters.
        CreatedBefore:
          $ref: '#/components/schemas/Date'
          description: The creation date and time end value filter for listing clusters.
        ClusterStates:
          $ref: '#/components/schemas/ClusterStateList'
          description: The cluster state filters to apply when listing clusters. Clusters that change state while this action runs may be not be returned as expected in the list of clusters.
        Marker:
          $ref: '#/components/schemas/Marker'
          description: The pagination token that indicates the next set of results to retrieve.
      description: This input determines how the ListClusters action filters the list of clusters that it returns.
    ListInstanceFleetsOutput:
      type: object
      properties:
        InstanceFleets:
          $ref: '#/components/schemas/InstanceFleetList'
          description: The list of instance fleets for the cluster and given filters.
        Marker:
          $ref: '#/components/schemas/Marker'
          description: The pagination token that indicates the next set of results to retrieve.
    ListInstanceFleetsInput:
      type: object
      required:
        - ClusterId
      title: ListInstanceFleetsInput
      properties:
        ClusterId:
          $ref: '#/components/schemas/ClusterId'
          description: The unique identifier of the cluster.
        Marker:
          $ref: '#/components/schemas/Marker'
          description: The pagination token that indicates the next set of results to retrieve.
    ListInstanceGroupsOutput:
      type: object
      properties:
        InstanceGroups:
          $ref: '#/components/schemas/InstanceGroupList'
          description: The list of instance groups for the cluster and given filters.
        Marker:
          $ref: '#/components/schemas/Marker'
          description: The pagination token that indicates the next set of results to retrieve.
      description: This input determines which instance groups to retrieve.
    ListInstanceGroupsInput:
      type: object
      required:
        - ClusterId
      title: ListInstanceGroupsInput
      properties:
        ClusterId:
          $ref: '#/components/schemas/ClusterId'
          description: The identifier of the cluster for which to list the instance groups.
        Marker:
          $ref: '#/components/schemas/Marker'
          description: The pagination token that indicates the next set of results to retrieve.
      description: This input determines which instance groups to retrieve.
    ListInstancesOutput:
      type: object
      properties:
        Instances:
          $ref: '#/components/schemas/InstanceList'
          description: The list of instances for the cluster and given filters.
        Marker:
          $ref: '#/components/schemas/Marker'
          description: The pagination token that indicates the next set of results to retrieve.
      description: This output contains the list of instances.
    ListInstancesInput:
      type: object
      required:
        - ClusterId
      title: ListInstancesInput
      properties:
        ClusterId:
          $ref: '#/components/schemas/ClusterId'
          description: The identifier of the cluster for which to list the instances.
        InstanceGroupId:
          $ref: '#/components/schemas/InstanceGroupId'
          description: The identifier of the instance group for which to list the instances.
        InstanceGroupTypes:
          $ref: '#/components/schemas/InstanceGroupTypeList'
          description: The type of instance group for which to list the instances.
        InstanceFleetId:
          $ref: '#/components/schemas/InstanceFleetId'
          description: The unique identifier of the instance fleet.
        InstanceFleetType:
          $ref: '#/components/schemas/InstanceFleetType'
          description: 'The node type of the instance fleet. For example MASTER, CORE, or TASK.'
        InstanceStates:
          $ref: '#/components/schemas/InstanceStateList'
          description: A list of instance states that will filter the instances returned with this request.
        Marker:
          $ref: '#/components/schemas/Marker'
          description: The pagination token that indicates the next set of results to retrieve.
      description: This input determines which instances to list.
    ListNotebookExecutionsOutput:
      type: object
      properties:
        NotebookExecutions:
          $ref: '#/components/schemas/NotebookExecutionSummaryList'
          description: A list of notebook executions.
        Marker:
          $ref: '#/components/schemas/Marker'
          description: A pagination token that a subsequent <code>ListNotebookExecutions</code> can use to determine the next set of results to retrieve.
    ListNotebookExecutionsInput:
      type: object
      title: ListNotebookExecutionsInput
      properties:
        EditorId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The unique ID of the editor associated with the notebook execution.
        Status:
          $ref: '#/components/schemas/NotebookExecutionStatus'
          description: <p>The status filter for listing notebook executions.</p> <ul> <li> <p> <code>START_PENDING</code> indicates that the cluster has received the execution request but execution has not begun.</p> </li> <li> <p> <code>STARTING</code> indicates that the execution is starting on the cluster.</p> </li> <li> <p> <code>RUNNING</code> indicates that the execution is being processed by the cluster.</p> </li> <li> <p> <code>FINISHING</code> indicates that execution processing is in the final stages.</p> </li> <li> <p> <code>FINISHED</code> indicates that the execution has completed without error.</p> </li> <li> <p> <code>FAILING</code> indicates that the execution is failing and will not finish successfully.</p> </li> <li> <p> <code>FAILED</code> indicates that the execution failed.</p> </li> <li> <p> <code>STOP_PENDING</code> indicates that the cluster has received a <code>StopNotebookExecution</code> request and the stop is pending.</p> </li> <li> <p> <code>STOPPING</code> indicates that the cluster is in the process of stopping the execution as a result of a <code>StopNotebookExecution</code> request.</p> </li> <li> <p> <code>STOPPED</code> indicates that the execution stopped because of a <code>StopNotebookExecution</code> request.</p> </li> </ul>
        From:
          $ref: '#/components/schemas/Date'
          description: The beginning of time range filter for listing notebook executions. The default is the timestamp of 30 days ago.
        To:
          $ref: '#/components/schemas/Date'
          description: The end of time range filter for listing notebook executions. The default is the current timestamp.
        Marker:
          $ref: '#/components/schemas/Marker'
          description: 'The pagination token, returned by a previous <code>ListNotebookExecutions</code> call, that indicates the start of the list for this <code>ListNotebookExecutions</code> call.'
    ListReleaseLabelsOutput:
      type: object
      properties:
        ReleaseLabels:
          $ref: '#/components/schemas/StringList'
          description: The returned release labels.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Used to paginate the next page of results if specified in the next <code>ListReleaseLabels</code> request.
    ListReleaseLabelsInput:
      type: object
      title: ListReleaseLabelsInput
      properties:
        Filters:
          $ref: '#/components/schemas/ReleaseLabelFilter'
          description: Filters the results of the request. <code>Prefix</code> specifies the prefix of release labels to return. <code>Application</code> specifies the application (with/without version) of release labels to return.
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'Specifies the next page of results. If <code>NextToken</code> is not specified, which is usually the case for the first request of ListReleaseLabels, the first page of results are determined by other filtering parameters or by the latest version. The <code>ListReleaseLabels</code> request fails if the identity (account ID) and all filtering parameters are different from the original request, or if the <code>NextToken</code> is expired or tampered with.'
        MaxResults:
          $ref: '#/components/schemas/MaxResultsNumber'
          description: Defines the maximum number of release labels to return in a single response. The default is <code>100</code>.
    ListSecurityConfigurationsOutput:
      type: object
      properties:
        SecurityConfigurations:
          $ref: '#/components/schemas/SecurityConfigurationList'
          description: 'The creation date and time, and name, of each security configuration.'
        Marker:
          $ref: '#/components/schemas/Marker'
          description: 'A pagination token that indicates the next set of results to retrieve. Include the marker in the next ListSecurityConfiguration call to retrieve the next page of results, if required.'
    ListSecurityConfigurationsInput:
      type: object
      title: ListSecurityConfigurationsInput
      properties:
        Marker:
          $ref: '#/components/schemas/Marker'
          description: The pagination token that indicates the set of results to retrieve.
    ListStepsOutput:
      type: object
      properties:
        Steps:
          $ref: '#/components/schemas/StepSummaryList'
          description: The filtered list of steps for the cluster.
        Marker:
          $ref: '#/components/schemas/Marker'
          description: 'The maximum number of steps that a single <code>ListSteps</code> action returns is 50. To return a longer list of steps, use multiple <code>ListSteps</code> actions along with the <code>Marker</code> parameter, which is a pagination token that indicates the next set of results to retrieve.'
      description: This output contains the list of steps returned in reverse order. This means that the last step is the first element in the list.
    ListStepsInput:
      type: object
      required:
        - ClusterId
      title: ListStepsInput
      properties:
        ClusterId:
          $ref: '#/components/schemas/ClusterId'
          description: The identifier of the cluster for which to list the steps.
        StepStates:
          $ref: '#/components/schemas/StepStateList'
          description: The filter to limit the step list based on certain states.
        StepIds:
          $ref: '#/components/schemas/XmlStringList'
          description: The filter to limit the step list based on the identifier of the steps. You can specify a maximum of ten Step IDs. The character constraint applies to the overall length of the array.
        Marker:
          $ref: '#/components/schemas/Marker'
          description: 'The maximum number of steps that a single <code>ListSteps</code> action returns is 50. To return a longer list of steps, use multiple <code>ListSteps</code> actions along with the <code>Marker</code> parameter, which is a pagination token that indicates the next set of results to retrieve.'
      description: This input determines which steps to list.
    ListStudioSessionMappingsOutput:
      type: object
      properties:
        SessionMappings:
          $ref: '#/components/schemas/SessionMappingSummaryList'
          description: 'A list of session mapping summary objects. Each object includes session mapping details such as creation time, identity type (user or group), and Amazon EMR Studio ID.'
        Marker:
          $ref: '#/components/schemas/Marker'
          description: The pagination token that indicates the next set of results to retrieve.
    ListStudioSessionMappingsInput:
      type: object
      title: ListStudioSessionMappingsInput
      properties:
        StudioId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The ID of the Amazon EMR Studio.
        IdentityType:
          $ref: '#/components/schemas/IdentityType'
          description: 'Specifies whether to return session mappings for users or groups. If not specified, the results include session mapping details for both users and groups.'
        Marker:
          $ref: '#/components/schemas/Marker'
          description: The pagination token that indicates the set of results to retrieve.
    ListStudiosOutput:
      type: object
      properties:
        Studios:
          $ref: '#/components/schemas/StudioSummaryList'
          description: The list of Studio summary objects.
        Marker:
          $ref: '#/components/schemas/Marker'
          description: The pagination token that indicates the next set of results to retrieve.
    ListStudiosInput:
      type: object
      title: ListStudiosInput
      properties:
        Marker:
          $ref: '#/components/schemas/Marker'
          description: The pagination token that indicates the set of results to retrieve.
    ModifyClusterOutput:
      type: object
      properties:
        StepConcurrencyLevel:
          $ref: '#/components/schemas/Integer'
          description: The number of steps that can be executed concurrently.
    ModifyClusterInput:
      type: object
      required:
        - ClusterId
      title: ModifyClusterInput
      properties:
        ClusterId:
          $ref: '#/components/schemas/String'
          description: The unique identifier of the cluster.
        StepConcurrencyLevel:
          $ref: '#/components/schemas/Integer'
          description: The number of steps that can be executed concurrently. You can specify a minimum of 1 step and a maximum of 256 steps. We recommend that you do not change this parameter while steps are running or the <code>ActionOnFailure</code> setting may not behave as expected. For more information see <a>Step$ActionOnFailure</a>.
    ModifyInstanceFleetInput:
      type: object
      required:
        - ClusterId
        - InstanceFleet
      title: ModifyInstanceFleetInput
      properties:
        ClusterId:
          $ref: '#/components/schemas/ClusterId'
          description: The unique identifier of the cluster.
        InstanceFleet:
          $ref: '#/components/schemas/InstanceFleetModifyConfig'
          description: The configuration parameters of the instance fleet.
    ModifyInstanceGroupsInput:
      type: object
      title: ModifyInstanceGroupsInput
      properties:
        ClusterId:
          $ref: '#/components/schemas/ClusterId'
          description: The ID of the cluster to which the instance group belongs.
        InstanceGroups:
          $ref: '#/components/schemas/InstanceGroupModifyConfigList'
          description: Instance groups to change.
      description: Change the size of some instance groups.
    PutAutoScalingPolicyOutput:
      type: object
      properties:
        ClusterId:
          $ref: '#/components/schemas/ClusterId'
          description: Specifies the ID of a cluster. The instance group to which the automatic scaling policy is applied is within this cluster.
        InstanceGroupId:
          $ref: '#/components/schemas/InstanceGroupId'
          description: Specifies the ID of the instance group to which the scaling policy is applied.
        AutoScalingPolicy:
          $ref: '#/components/schemas/AutoScalingPolicyDescription'
          description: The automatic scaling policy definition.
        ClusterArn:
          $ref: '#/components/schemas/ArnType'
          description: The Amazon Resource Name (ARN) of the cluster.
    PutAutoScalingPolicyInput:
      type: object
      required:
        - ClusterId
        - InstanceGroupId
        - AutoScalingPolicy
      title: PutAutoScalingPolicyInput
      properties:
        ClusterId:
          $ref: '#/components/schemas/ClusterId'
          description: Specifies the ID of a cluster. The instance group to which the automatic scaling policy is applied is within this cluster.
        InstanceGroupId:
          $ref: '#/components/schemas/InstanceGroupId'
          description: Specifies the ID of the instance group to which the automatic scaling policy is applied.
        AutoScalingPolicy:
          $ref: '#/components/schemas/AutoScalingPolicy'
          description: Specifies the definition of the automatic scaling policy.
    PutBlockPublicAccessConfigurationOutput:
      type: object
      properties: {}
    PutBlockPublicAccessConfigurationInput:
      type: object
      required:
        - BlockPublicAccessConfiguration
      title: PutBlockPublicAccessConfigurationInput
      properties:
        BlockPublicAccessConfiguration:
          $ref: '#/components/schemas/BlockPublicAccessConfiguration'
          description: '<p>A configuration for Amazon EMR block public access. The configuration applies to all clusters created in your account for the current Region. The configuration specifies whether block public access is enabled. If block public access is enabled, security groups associated with the cluster cannot have rules that allow inbound traffic from 0.0.0.0/0 or ::/0 on a port, unless the port is specified as an exception using <code>PermittedPublicSecurityGroupRuleRanges</code> in the <code>BlockPublicAccessConfiguration</code>. By default, Port 22 (SSH) is an exception, and public access is allowed on this port. You can change this by updating <code>BlockPublicSecurityGroupRules</code> to remove the exception.</p> <note> <p>For accounts that created clusters in a Region before November 25, 2019, block public access is disabled by default in that Region. To use this feature, you must manually enable and configure it. For accounts that did not create an EMR cluster in a Region before this date, block public access is enabled by default in that Region.</p> </note>'
    PutManagedScalingPolicyOutput:
      type: object
      properties: {}
    PutManagedScalingPolicyInput:
      type: object
      required:
        - ClusterId
        - ManagedScalingPolicy
      title: PutManagedScalingPolicyInput
      properties:
        ClusterId:
          $ref: '#/components/schemas/ClusterId'
          description: 'Specifies the ID of an EMR cluster where the managed scaling policy is attached. '
        ManagedScalingPolicy:
          $ref: '#/components/schemas/ManagedScalingPolicy'
          description: 'Specifies the constraints for the managed scaling policy. '
    RemoveAutoScalingPolicyOutput:
      type: object
      properties: {}
    RemoveAutoScalingPolicyInput:
      type: object
      required:
        - ClusterId
        - InstanceGroupId
      title: RemoveAutoScalingPolicyInput
      properties:
        ClusterId:
          $ref: '#/components/schemas/ClusterId'
          description: Specifies the ID of a cluster. The instance group to which the automatic scaling policy is applied is within this cluster.
        InstanceGroupId:
          $ref: '#/components/schemas/InstanceGroupId'
          description: Specifies the ID of the instance group to which the scaling policy is applied.
    RemoveManagedScalingPolicyOutput:
      type: object
      properties: {}
    RemoveManagedScalingPolicyInput:
      type: object
      required:
        - ClusterId
      title: RemoveManagedScalingPolicyInput
      properties:
        ClusterId:
          $ref: '#/components/schemas/ClusterId'
          description: ' Specifies the ID of the cluster from which the managed scaling policy will be removed. '
    RemoveTagsOutput:
      type: object
      properties: {}
      description: This output indicates the result of removing tags from a resource.
    RemoveTagsInput:
      type: object
      required:
        - ResourceId
        - TagKeys
      title: RemoveTagsInput
      properties:
        ResourceId:
          $ref: '#/components/schemas/ResourceId'
          description: The Amazon EMR resource identifier from which tags will be removed. This value must be a cluster identifier.
        TagKeys:
          $ref: '#/components/schemas/StringList'
          description: A list of tag keys to remove from a resource.
      description: This input identifies a cluster and a list of tags to remove.
    RunJobFlowOutput:
      type: object
      properties:
        JobFlowId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: A unique identifier for the job flow.
        ClusterArn:
          $ref: '#/components/schemas/ArnType'
          description: The Amazon Resource Name (ARN) of the cluster.
      description: ' The result of the <a>RunJobFlow</a> operation. '
    RunJobFlowInput:
      type: object
      required:
        - Name
        - Instances
      title: RunJobFlowInput
      properties:
        Name:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The name of the job flow.
        LogUri:
          $ref: '#/components/schemas/XmlString'
          description: 'The location in Amazon S3 to write the log files of the job flow. If a value is not provided, logs are not created.'
        LogEncryptionKmsKeyId:
          $ref: '#/components/schemas/XmlString'
          description: 'The KMS key used for encrypting log files. If a value is not provided, the logs remain encrypted by AES-256. This attribute is only available with Amazon EMR version 5.30.0 and later, excluding Amazon EMR 6.0.0.'
        AdditionalInfo:
          $ref: '#/components/schemas/XmlString'
          description: A JSON string for selecting additional features.
        AmiVersion:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: 'Applies only to Amazon EMR AMI versions 3.x and 2.x. For Amazon EMR releases 4.0 and later, <code>ReleaseLabel</code> is used. To specify a custom AMI, use <code>CustomAmiID</code>.'
        ReleaseLabel:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: 'The Amazon EMR release label, which determines the version of open-source application packages installed on the cluster. Release labels are in the form <code>emr-x.x.x</code>, where x.x.x is an Amazon EMR release version such as <code>emr-5.14.0</code>. For more information about Amazon EMR release versions and included application versions and features, see <a href="https://docs.aws.amazon.com/emr/latest/ReleaseGuide/">https://docs.aws.amazon.com/emr/latest/ReleaseGuide/</a>. The release label applies only to Amazon EMR releases version 4.0 and later. Earlier versions use <code>AmiVersion</code>.'
        Instances:
          $ref: '#/components/schemas/JobFlowInstancesConfig'
          description: A specification of the number and type of Amazon EC2 instances.
        Steps:
          $ref: '#/components/schemas/StepConfigList'
          description: A list of steps to run.
        BootstrapActions:
          $ref: '#/components/schemas/BootstrapActionConfigList'
          description: A list of bootstrap actions to run before Hadoop starts on the cluster nodes.
        SupportedProducts:
          $ref: '#/components/schemas/SupportedProductsList'
          description: '<note> <p>For Amazon EMR releases 3.x and 2.x. For Amazon EMR releases 4.x and later, use Applications.</p> </note> <p>A list of strings that indicates third-party software to use. For more information, see the <a href="https://docs.aws.amazon.com/emr/latest/DeveloperGuide/emr-dg.pdf">Amazon EMR Developer Guide</a>. Currently supported values are:</p> <ul> <li> <p>"mapr-m3" - launch the job flow using MapR M3 Edition.</p> </li> <li> <p>"mapr-m5" - launch the job flow using MapR M5 Edition.</p> </li> </ul>'
        NewSupportedProducts:
          $ref: '#/components/schemas/NewSupportedProductsList'
          description: '<note> <p>For Amazon EMR releases 3.x and 2.x. For Amazon EMR releases 4.x and later, use Applications.</p> </note> <p>A list of strings that indicates third-party software to use with the job flow that accepts a user argument list. EMR accepts and forwards the argument list to the corresponding installation script as bootstrap action arguments. For more information, see "Launch a Job Flow on the MapR Distribution for Hadoop" in the <a href="https://docs.aws.amazon.com/emr/latest/DeveloperGuide/emr-dg.pdf">Amazon EMR Developer Guide</a>. Supported values are:</p> <ul> <li> <p>"mapr-m3" - launch the cluster using MapR M3 Edition.</p> </li> <li> <p>"mapr-m5" - launch the cluster using MapR M5 Edition.</p> </li> <li> <p>"mapr" with the user arguments specifying "--edition,m3" or "--edition,m5" - launch the job flow using MapR M3 or M5 Edition respectively.</p> </li> <li> <p>"mapr-m7" - launch the cluster using MapR M7 Edition.</p> </li> <li> <p>"hunk" - launch the cluster with the Hunk Big Data Analytics Platform.</p> </li> <li> <p>"hue"- launch the cluster with Hue installed.</p> </li> <li> <p>"spark" - launch the cluster with Apache Spark installed.</p> </li> <li> <p>"ganglia" - launch the cluster with the Ganglia Monitoring System installed.</p> </li> </ul>'
        Applications:
          $ref: '#/components/schemas/ApplicationList'
          description: 'Applies to Amazon EMR releases 4.0 and later. A case-insensitive list of applications for Amazon EMR to install and configure when launching the cluster. For a list of applications available for each Amazon EMR release version, see the <a href="https://docs.aws.amazon.com/emr/latest/ReleaseGuide/">Amazon EMR Release Guide</a>.'
        Configurations:
          $ref: '#/components/schemas/ConfigurationList'
          description: For Amazon EMR releases 4.0 and later. The list of configurations supplied for the EMR cluster you are creating.
        VisibleToAllUsers:
          $ref: '#/components/schemas/Boolean'
          description: '<p>Set this value to <code>true</code> so that IAM principals in the account associated with the cluster can perform EMR actions on the cluster that their IAM policies allow. This value defaults to <code>true</code> for clusters created using the EMR API or the CLI <a href="https://docs.aws.amazon.com/cli/latest/reference/emr/create-cluster.html">create-cluster</a> command.</p> <p>When set to <code>false</code>, only the IAM principal that created the cluster and the account root user can perform EMR actions for the cluster, regardless of the IAM permissions policies attached to other IAM principals. For more information, see <a href="https://docs.aws.amazon.com/emr/latest/ManagementGuide/security_iam_emr-with-iam.html#security_set_visible_to_all_users">Understanding the EMR Cluster VisibleToAllUsers Setting</a> in the <i>Amazon EMRManagement Guide</i>.</p>'
        JobFlowRole:
          $ref: '#/components/schemas/XmlString'
          description: 'Also called instance profile and EC2 role. An IAM role for an EMR cluster. The EC2 instances of the cluster assume this role. The default role is <code>EMR_EC2_DefaultRole</code>. In order to use the default role, you must have already created it using the CLI or console.'
        ServiceRole:
          $ref: '#/components/schemas/XmlString'
          description: The IAM role that will be assumed by the Amazon EMR service to access Amazon Web Services resources on your behalf.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A list of tags to associate with a cluster and propagate to Amazon EC2 instances.
        SecurityConfiguration:
          $ref: '#/components/schemas/XmlString'
          description: The name of a security configuration to apply to the cluster.
        AutoScalingRole:
          $ref: '#/components/schemas/XmlString'
          description: An IAM role for automatic scaling policies. The default role is <code>EMR_AutoScaling_DefaultRole</code>. The IAM role provides permissions that the automatic scaling feature requires to launch and terminate EC2 instances in an instance group.
        ScaleDownBehavior:
          $ref: '#/components/schemas/ScaleDownBehavior'
          description: 'Specifies the way that individual Amazon EC2 instances terminate when an automatic scale-in activity occurs or an instance group is resized. <code>TERMINATE_AT_INSTANCE_HOUR</code> indicates that Amazon EMR terminates nodes at the instance-hour boundary, regardless of when the request to terminate the instance was submitted. This option is only available with Amazon EMR 5.1.0 and later and is the default for clusters created using that version. <code>TERMINATE_AT_TASK_COMPLETION</code> indicates that Amazon EMR adds nodes to a deny list and drains tasks from nodes before terminating the Amazon EC2 instances, regardless of the instance-hour boundary. With either behavior, Amazon EMR removes the least active nodes first and blocks instance termination if it could lead to HDFS corruption. <code>TERMINATE_AT_TASK_COMPLETION</code> available only in Amazon EMR version 4.1.0 and later, and is the default for versions of Amazon EMR earlier than 5.1.0.'
        CustomAmiId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: '<p>Available only in Amazon EMR version 5.7.0 and later. The ID of a custom Amazon EBS-backed Linux AMI. If specified, Amazon EMR uses this AMI when it launches cluster EC2 instances. For more information about custom AMIs in Amazon EMR, see <a href="https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-custom-ami.html">Using a Custom AMI</a> in the <i>Amazon EMR Management Guide</i>. If omitted, the cluster uses the base Linux AMI for the <code>ReleaseLabel</code> specified. For Amazon EMR versions 2.x and 3.x, use <code>AmiVersion</code> instead.</p> <p>For information about creating a custom AMI, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/creating-an-ami-ebs.html">Creating an Amazon EBS-Backed Linux AMI</a> in the <i>Amazon Elastic Compute Cloud User Guide for Linux Instances</i>. For information about finding an AMI ID, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/finding-an-ami.html">Finding a Linux AMI</a>. </p>'
        EbsRootVolumeSize:
          $ref: '#/components/schemas/Integer'
          description: 'The size, in GiB, of the Amazon EBS root device volume of the Linux AMI that is used for each EC2 instance. Available in Amazon EMR version 4.x and later.'
        RepoUpgradeOnBoot:
          $ref: '#/components/schemas/RepoUpgradeOnBoot'
          description: 'Applies only when <code>CustomAmiID</code> is used. Specifies which updates from the Amazon Linux AMI package repositories to apply automatically when the instance boots using the AMI. If omitted, the default is <code>SECURITY</code>, which indicates that only security updates are applied. If <code>NONE</code> is specified, no updates are applied, and all updates must be applied manually.'
        KerberosAttributes:
          $ref: '#/components/schemas/KerberosAttributes'
          description: 'Attributes for Kerberos configuration when Kerberos authentication is enabled using a security configuration. For more information see <a href="https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-kerberos.html">Use Kerberos Authentication</a> in the <i>Amazon EMR Management Guide</i>.'
        StepConcurrencyLevel:
          $ref: '#/components/schemas/Integer'
          description: Specifies the number of steps that can be executed concurrently. The default value is <code>1</code>. The maximum value is <code>256</code>.
        ManagedScalingPolicy:
          $ref: '#/components/schemas/ManagedScalingPolicy'
          description: ' The specified managed scaling policy for an Amazon EMR cluster. '
        PlacementGroupConfigs:
          $ref: '#/components/schemas/PlacementGroupConfigList'
          description: The specified placement group configuration for an Amazon EMR cluster.
      description: ' Input to the <a>RunJobFlow</a> operation. '
    SetTerminationProtectionInput:
      type: object
      required:
        - JobFlowIds
        - TerminationProtected
      title: SetTerminationProtectionInput
      properties:
        JobFlowIds:
          $ref: '#/components/schemas/XmlStringList'
          description: ' A list of strings that uniquely identify the clusters to protect. This identifier is returned by <a>RunJobFlow</a> and can also be obtained from <a>DescribeJobFlows</a> . '
        TerminationProtected:
          $ref: '#/components/schemas/Boolean'
          description: 'A Boolean that indicates whether to protect the cluster and prevent the Amazon EC2 instances in the cluster from shutting down due to API calls, user intervention, or job-flow error.'
      description: ' The input argument to the <a>TerminationProtection</a> operation. '
    SetVisibleToAllUsersInput:
      type: object
      required:
        - JobFlowIds
        - VisibleToAllUsers
      title: SetVisibleToAllUsersInput
      properties:
        JobFlowIds:
          $ref: '#/components/schemas/XmlStringList'
          description: The unique identifier of the job flow (cluster).
        VisibleToAllUsers:
          $ref: '#/components/schemas/Boolean'
          description: A value of <code>true</code> indicates that an IAM principal in the account can perform EMR actions on the cluster that the IAM policies attached to the principal allow. A value of <code>false</code> indicates that only the IAM principal that created the cluster and the Amazon Web Services root user can perform EMR actions on the cluster.
      description: The input to the SetVisibleToAllUsers action.
    StartNotebookExecutionOutput:
      type: object
      properties:
        NotebookExecutionId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The unique identifier of the notebook execution.
    StartNotebookExecutionInput:
      type: object
      required:
        - EditorId
        - RelativePath
        - ExecutionEngine
        - ServiceRole
      title: StartNotebookExecutionInput
      properties:
        EditorId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The unique identifier of the EMR Notebook to use for notebook execution.
        RelativePath:
          $ref: '#/components/schemas/XmlString'
          description: 'The path and file name of the notebook file for this execution, relative to the path specified for the EMR Notebook. For example, if you specify a path of <code>s3://MyBucket/MyNotebooks</code> when you create an EMR Notebook for a notebook with an ID of <code>e-ABCDEFGHIJK1234567890ABCD</code> (the <code>EditorID</code> of this request), and you specify a <code>RelativePath</code> of <code>my_notebook_executions/notebook_execution.ipynb</code>, the location of the file for the notebook execution is <code>s3://MyBucket/MyNotebooks/e-ABCDEFGHIJK1234567890ABCD/my_notebook_executions/notebook_execution.ipynb</code>.'
        NotebookExecutionName:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: An optional name for the notebook execution.
        NotebookParams:
          $ref: '#/components/schemas/XmlString'
          description: Input parameters in JSON format passed to the EMR Notebook at runtime for execution.
        ExecutionEngine:
          $ref: '#/components/schemas/ExecutionEngineConfig'
          description: Specifies the execution engine (cluster) that runs the notebook execution.
        ServiceRole:
          $ref: '#/components/schemas/XmlString'
          description: The name or ARN of the IAM role that is used as the service role for Amazon EMR (the EMR role) for the notebook execution.
        NotebookInstanceSecurityGroupId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The unique identifier of the Amazon EC2 security group to associate with the EMR Notebook for this notebook execution.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A list of tags associated with a notebook execution. Tags are user-defined key-value pairs that consist of a required key string with a maximum of 128 characters and an optional value string with a maximum of 256 characters.
    StopNotebookExecutionInput:
      type: object
      required:
        - NotebookExecutionId
      title: StopNotebookExecutionInput
      properties:
        NotebookExecutionId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The unique identifier of the notebook execution.
    TerminateJobFlowsInput:
      type: object
      required:
        - JobFlowIds
      title: TerminateJobFlowsInput
      properties:
        JobFlowIds:
          $ref: '#/components/schemas/XmlStringList'
          description: A list of job flows to be shut down.
      description: ' Input to the <a>TerminateJobFlows</a> operation. '
    UpdateStudioInput:
      type: object
      required:
        - StudioId
      title: UpdateStudioInput
      properties:
        StudioId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The ID of the Amazon EMR Studio to update.
        Name:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: A descriptive name for the Amazon EMR Studio.
        Description:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: A detailed description to assign to the Amazon EMR Studio.
        SubnetIds:
          $ref: '#/components/schemas/SubnetIdList'
          description: 'A list of subnet IDs to associate with the Amazon EMR Studio. The list can include new subnet IDs, but must also include all of the subnet IDs previously associated with the Studio. The list order does not matter. A Studio can have a maximum of 5 subnets. The subnets must belong to the same VPC as the Studio. '
        DefaultS3Location:
          $ref: '#/components/schemas/XmlString'
          description: The Amazon S3 location to back up Workspaces and notebook files for the Amazon EMR Studio.
    UpdateStudioSessionMappingInput:
      type: object
      required:
        - StudioId
        - IdentityType
        - SessionPolicyArn
      title: UpdateStudioSessionMappingInput
      properties:
        StudioId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The ID of the Amazon EMR Studio.
        IdentityId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: 'The globally unique identifier (GUID) of the user or group. For more information, see <a href="https://docs.aws.amazon.com/singlesignon/latest/IdentityStoreAPIReference/API_User.html#singlesignon-Type-User-UserId">UserId</a> and <a href="https://docs.aws.amazon.com/singlesignon/latest/IdentityStoreAPIReference/API_Group.html#singlesignon-Type-Group-GroupId">GroupId</a> in the <i>Amazon Web Services SSO Identity Store API Reference</i>. Either <code>IdentityName</code> or <code>IdentityId</code> must be specified.'
        IdentityName:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: 'The name of the user or group to update. For more information, see <a href="https://docs.aws.amazon.com/singlesignon/latest/IdentityStoreAPIReference/API_User.html#singlesignon-Type-User-UserName">UserName</a> and <a href="https://docs.aws.amazon.com/singlesignon/latest/IdentityStoreAPIReference/API_Group.html#singlesignon-Type-Group-DisplayName">DisplayName</a> in the <i>Amazon Web Services SSO Identity Store API Reference</i>. Either <code>IdentityName</code> or <code>IdentityId</code> must be specified.'
        IdentityType:
          $ref: '#/components/schemas/IdentityType'
          description: Specifies whether the identity to update is a user or a group.
        SessionPolicyArn:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The Amazon Resource Name (ARN) of the session policy to associate with the specified user or group.
    ActionOnFailure:
      type: string
      enum:
        - TERMINATE_JOB_FLOW
        - TERMINATE_CLUSTER
        - CANCEL_AND_WAIT
        - CONTINUE
    XmlStringMaxLen256:
      type: string
      minLength: 0
      maxLength: 256
      x-pattern: '[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\r\n\t]*'
    InstanceFleetConfig:
      type: object
      required:
        - InstanceFleetType
      properties:
        Name:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The friendly name of the instance fleet.
        InstanceFleetType:
          $ref: '#/components/schemas/InstanceFleetType'
          description: 'The node type that the instance fleet hosts. Valid values are MASTER, CORE, and TASK.'
        TargetOnDemandCapacity:
          $ref: '#/components/schemas/WholeNumber'
          description: '<p>The target capacity of On-Demand units for the instance fleet, which determines how many On-Demand Instances to provision. When the instance fleet launches, Amazon EMR tries to provision On-Demand Instances as specified by <a>InstanceTypeConfig</a>. Each instance configuration has a specified <code>WeightedCapacity</code>. When an On-Demand Instance is provisioned, the <code>WeightedCapacity</code> units count toward the target capacity. Amazon EMR provisions instances until the target capacity is totally fulfilled, even if this results in an overage. For example, if there are 2 units remaining to fulfill capacity, and Amazon EMR can only provision an instance with a <code>WeightedCapacity</code> of 5 units, the instance is provisioned, and the target capacity is exceeded by 3 units.</p> <note> <p>If not specified or set to 0, only Spot Instances are provisioned for the instance fleet using <code>TargetSpotCapacity</code>. At least one of <code>TargetSpotCapacity</code> and <code>TargetOnDemandCapacity</code> should be greater than 0. For a master instance fleet, only one of <code>TargetSpotCapacity</code> and <code>TargetOnDemandCapacity</code> can be specified, and its value must be 1.</p> </note>'
        TargetSpotCapacity:
          $ref: '#/components/schemas/WholeNumber'
          description: '<p>The target capacity of Spot units for the instance fleet, which determines how many Spot Instances to provision. When the instance fleet launches, Amazon EMR tries to provision Spot Instances as specified by <a>InstanceTypeConfig</a>. Each instance configuration has a specified <code>WeightedCapacity</code>. When a Spot Instance is provisioned, the <code>WeightedCapacity</code> units count toward the target capacity. Amazon EMR provisions instances until the target capacity is totally fulfilled, even if this results in an overage. For example, if there are 2 units remaining to fulfill capacity, and Amazon EMR can only provision an instance with a <code>WeightedCapacity</code> of 5 units, the instance is provisioned, and the target capacity is exceeded by 3 units.</p> <note> <p>If not specified or set to 0, only On-Demand Instances are provisioned for the instance fleet. At least one of <code>TargetSpotCapacity</code> and <code>TargetOnDemandCapacity</code> should be greater than 0. For a master instance fleet, only one of <code>TargetSpotCapacity</code> and <code>TargetOnDemandCapacity</code> can be specified, and its value must be 1.</p> </note>'
        InstanceTypeConfigs:
          $ref: '#/components/schemas/InstanceTypeConfigList'
          description: The instance type configurations that define the EC2 instances in the instance fleet.
        LaunchSpecifications:
          $ref: '#/components/schemas/InstanceFleetProvisioningSpecifications'
          description: The launch specification for the instance fleet.
      description: '<p>The configuration that defines an instance fleet.</p> <note> <p>The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions.</p> </note>'
    InstanceFleetId:
      type: string
    ArnType:
      type: string
      minLength: 20
      maxLength: 2048
    InstanceGroupConfigList:
      type: array
      items:
        $ref: '#/components/schemas/InstanceGroupConfig'
    InstanceGroupIdsList:
      type: array
      items:
        $ref: '#/components/schemas/XmlStringMaxLen256'
    StepConfigList:
      type: array
      items:
        $ref: '#/components/schemas/StepConfig'
    StepIdsList:
      type: array
      items:
        $ref: '#/components/schemas/XmlStringMaxLen256'
    ResourceId:
      type: string
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    AdjustmentType:
      type: string
      enum:
        - CHANGE_IN_CAPACITY
        - PERCENT_CHANGE_IN_CAPACITY
        - EXACT_CAPACITY
    String:
      type: string
    StringList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    StringMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    Application:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/String'
          description: The name of the application.
        Version:
          $ref: '#/components/schemas/String'
          description: The version of the application.
        Args:
          $ref: '#/components/schemas/StringList'
          description: Arguments for Amazon EMR to pass to the application.
        AdditionalInfo:
          $ref: '#/components/schemas/StringMap'
          description: This option is for advanced users only. This is meta information about third-party applications that third-party vendors use for testing purposes.
      description: '<p>With Amazon EMR release version 4.0 and later, the only accepted parameter is the application name. To pass arguments to applications, you use configuration classifications specified using configuration JSON objects. For more information, see <a href="https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-configure-apps.html">Configuring Applications</a>.</p> <p>With earlier Amazon EMR releases, the application is any Amazon or third-party software that you can add to the cluster. This structure contains a list of strings that indicates the software to use with the cluster and accepts a user argument list. Amazon EMR accepts and forwards the argument list to the corresponding installation script as bootstrap action argument.</p>'
    ApplicationList:
      type: array
      items:
        $ref: '#/components/schemas/Application'
    AuthMode:
      type: string
      enum:
        - SSO
        - IAM
    ScalingConstraints:
      type: object
      required:
        - MinCapacity
        - MaxCapacity
      properties:
        MinCapacity:
          $ref: '#/components/schemas/Integer'
          description: The lower boundary of EC2 instances in an instance group below which scaling activities are not allowed to shrink. Scale-in activities will not terminate instances below this boundary.
        MaxCapacity:
          $ref: '#/components/schemas/Integer'
          description: The upper boundary of EC2 instances in an instance group beyond which scaling activities are not allowed to grow. Scale-out activities will not add instances beyond this boundary.
      description: The upper and lower EC2 instance limits for an automatic scaling policy. Automatic scaling activities triggered by automatic scaling rules will not cause an instance group to grow above or below these limits.
    ScalingRuleList:
      type: array
      items:
        $ref: '#/components/schemas/ScalingRule'
    AutoScalingPolicy:
      type: object
      required:
        - Constraints
        - Rules
      properties:
        Constraints:
          $ref: '#/components/schemas/ScalingConstraints'
          description: The upper and lower EC2 instance limits for an automatic scaling policy. Automatic scaling activity will not cause an instance group to grow above or below these limits.
        Rules:
          $ref: '#/components/schemas/ScalingRuleList'
          description: The scale-in and scale-out rules that comprise the automatic scaling policy.
      description: An automatic scaling policy for a core instance group or task instance group in an Amazon EMR cluster. An automatic scaling policy defines how an instance group dynamically adds and terminates EC2 instances in response to the value of a CloudWatch metric. See <a>PutAutoScalingPolicy</a>.
    AutoScalingPolicyStatus:
      type: object
      properties:
        State:
          $ref: '#/components/schemas/AutoScalingPolicyState'
          description: Indicates the status of the automatic scaling policy.
        StateChangeReason:
          $ref: '#/components/schemas/AutoScalingPolicyStateChangeReason'
          description: The reason for a change in status.
      description: 'The status of an automatic scaling policy. '
    AutoScalingPolicyDescription:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/AutoScalingPolicyStatus'
          description: 'The status of an automatic scaling policy. '
        Constraints:
          $ref: '#/components/schemas/ScalingConstraints'
          description: The upper and lower EC2 instance limits for an automatic scaling policy. Automatic scaling activity will not cause an instance group to grow above or below these limits.
        Rules:
          $ref: '#/components/schemas/ScalingRuleList'
          description: The scale-in and scale-out rules that comprise the automatic scaling policy.
      description: An automatic scaling policy for a core instance group or task instance group in an Amazon EMR cluster. The automatic scaling policy defines how an instance group dynamically adds and terminates EC2 instances in response to the value of a CloudWatch metric. See <a>PutAutoScalingPolicy</a>.
    AutoScalingPolicyState:
      type: string
      enum:
        - PENDING
        - ATTACHING
        - ATTACHED
        - DETACHING
        - DETACHED
        - FAILED
    AutoScalingPolicyStateChangeReasonCode:
      type: string
      enum:
        - USER_REQUEST
        - PROVISION_FAILURE
        - CLEANUP_FAILURE
    AutoScalingPolicyStateChangeReason:
      type: object
      properties:
        Code:
          $ref: '#/components/schemas/AutoScalingPolicyStateChangeReasonCode'
          description: The code indicating the reason for the change in status.<code>USER_REQUEST</code> indicates that the scaling policy status was changed by a user. <code>PROVISION_FAILURE</code> indicates that the status change was because the policy failed to provision. <code>CLEANUP_FAILURE</code> indicates an error.
        Message:
          $ref: '#/components/schemas/String'
          description: 'A friendly, more verbose message that accompanies an automatic scaling policy state change.'
      description: The reason for an <a>AutoScalingPolicyStatus</a> change.
    Boolean:
      type: boolean
    PortRanges:
      type: array
      items:
        $ref: '#/components/schemas/PortRange'
    BlockPublicAccessConfiguration:
      type: object
      required:
        - BlockPublicSecurityGroupRules
      properties:
        BlockPublicSecurityGroupRules:
          $ref: '#/components/schemas/Boolean'
          description: 'Indicates whether Amazon EMR block public access is enabled (<code>true</code>) or disabled (<code>false</code>). By default, the value is <code>false</code> for accounts that have created EMR clusters before July 2019. For accounts created after this, the default is <code>true</code>.'
        PermittedPublicSecurityGroupRuleRanges:
          $ref: '#/components/schemas/PortRanges'
          description: '<p>Specifies ports and port ranges that are permitted to have security group rules that allow inbound traffic from all public sources. For example, if Port 23 (Telnet) is specified for <code>PermittedPublicSecurityGroupRuleRanges</code>, Amazon EMR allows cluster creation if a security group associated with the cluster has a rule that allows inbound traffic on Port 23 from IPv4 0.0.0.0/0 or IPv6 port ::/0 as the source.</p> <p>By default, Port 22, which is used for SSH access to the cluster EC2 instances, is in the list of <code>PermittedPublicSecurityGroupRuleRanges</code>.</p>'
      description: 'A configuration for Amazon EMR block public access. When <code>BlockPublicSecurityGroupRules</code> is set to <code>true</code>, Amazon EMR prevents cluster creation if one of the cluster''s security groups has a rule that allows inbound traffic from 0.0.0.0/0 or ::/0 on a port, unless the port is specified as an exception using <code>PermittedPublicSecurityGroupRuleRanges</code>.'
    Date:
      type: string
      format: date-time
    BlockPublicAccessConfigurationMetadata:
      type: object
      required:
        - CreationDateTime
        - CreatedByArn
      properties:
        CreationDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time that the configuration was created.
        CreatedByArn:
          $ref: '#/components/schemas/ArnType'
          description: The Amazon Resource Name that created or last modified the configuration.
      description: 'Properties that describe the Amazon Web Services principal that created the <code>BlockPublicAccessConfiguration</code> using the <code>PutBlockPublicAccessConfiguration</code> action as well as the date and time that the configuration was created. Each time a configuration for block public access is updated, Amazon EMR updates this metadata.'
    BooleanObject:
      type: boolean
    ScriptBootstrapActionConfig:
      type: object
      required:
        - Path
      properties:
        Path:
          $ref: '#/components/schemas/XmlString'
          description: Location in Amazon S3 of the script to run during a bootstrap action.
        Args:
          $ref: '#/components/schemas/XmlStringList'
          description: A list of command line arguments to pass to the bootstrap action script.
      description: Configuration of the script to run during a bootstrap action.
    BootstrapActionConfig:
      type: object
      required:
        - Name
        - ScriptBootstrapAction
      properties:
        Name:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The name of the bootstrap action.
        ScriptBootstrapAction:
          $ref: '#/components/schemas/ScriptBootstrapActionConfig'
          description: The script run by the bootstrap action.
      description: Configuration of a bootstrap action.
    BootstrapActionConfigList:
      type: array
      items:
        $ref: '#/components/schemas/BootstrapActionConfig'
    BootstrapActionDetail:
      type: object
      properties:
        BootstrapActionConfig:
          $ref: '#/components/schemas/BootstrapActionConfig'
          description: A description of the bootstrap action.
      description: Reports the configuration of a bootstrap action in a cluster (job flow).
    BootstrapActionDetailList:
      type: array
      items:
        $ref: '#/components/schemas/BootstrapActionDetail'
    StepId:
      type: string
    CancelStepsRequestStatus:
      type: string
      enum:
        - SUBMITTED
        - FAILED
    CancelStepsInfo:
      type: object
      properties:
        StepId:
          $ref: '#/components/schemas/StepId'
          description: The encrypted StepId of a step.
        Status:
          $ref: '#/components/schemas/CancelStepsRequestStatus'
          description: The status of a CancelSteps Request. The value may be SUBMITTED or FAILED.
        Reason:
          $ref: '#/components/schemas/String'
          description: The reason for the failure if the CancelSteps request fails.
      description: 'Specification of the status of a CancelSteps request. Available only in Amazon EMR version 4.8.0 and later, excluding version 5.0.0.'
    CancelStepsInfoList:
      type: array
      items:
        $ref: '#/components/schemas/CancelStepsInfo'
    StepCancellationOption:
      type: string
      enum:
        - SEND_INTERRUPT
        - TERMINATE_PROCESS
    ComparisonOperator:
      type: string
      enum:
        - GREATER_THAN_OR_EQUAL
        - GREATER_THAN
        - LESS_THAN
        - LESS_THAN_OR_EQUAL
    Integer:
      type: integer
    Statistic:
      type: string
      enum:
        - SAMPLE_COUNT
        - AVERAGE
        - SUM
        - MINIMUM
        - MAXIMUM
    NonNegativeDouble:
      type: number
      format: double
      minimum: 0
    Unit:
      type: string
      enum:
        - NONE
        - SECONDS
        - MICRO_SECONDS
        - MILLI_SECONDS
        - BYTES
        - KILO_BYTES
        - MEGA_BYTES
        - GIGA_BYTES
        - TERA_BYTES
        - BITS
        - KILO_BITS
        - MEGA_BITS
        - GIGA_BITS
        - TERA_BITS
        - PERCENT
        - COUNT
        - BYTES_PER_SECOND
        - KILO_BYTES_PER_SECOND
        - MEGA_BYTES_PER_SECOND
        - GIGA_BYTES_PER_SECOND
        - TERA_BYTES_PER_SECOND
        - BITS_PER_SECOND
        - KILO_BITS_PER_SECOND
        - MEGA_BITS_PER_SECOND
        - GIGA_BITS_PER_SECOND
        - TERA_BITS_PER_SECOND
        - COUNT_PER_SECOND
    MetricDimensionList:
      type: array
      items:
        $ref: '#/components/schemas/MetricDimension'
    CloudWatchAlarmDefinition:
      type: object
      required:
        - ComparisonOperator
        - MetricName
        - Period
        - Threshold
      properties:
        ComparisonOperator:
          $ref: '#/components/schemas/ComparisonOperator'
          description: Determines how the metric specified by <code>MetricName</code> is compared to the value specified by <code>Threshold</code>.
        EvaluationPeriods:
          $ref: '#/components/schemas/Integer'
          description: 'The number of periods, in five-minute increments, during which the alarm condition must exist before the alarm triggers automatic scaling activity. The default value is <code>1</code>.'
        MetricName:
          $ref: '#/components/schemas/String'
          description: The name of the CloudWatch metric that is watched to determine an alarm condition.
        Namespace:
          $ref: '#/components/schemas/String'
          description: The namespace for the CloudWatch metric. The default is <code>AWS/ElasticMapReduce</code>.
        Period:
          $ref: '#/components/schemas/Integer'
          description: 'The period, in seconds, over which the statistic is applied. EMR CloudWatch metrics are emitted every five minutes (300 seconds), so if an EMR CloudWatch metric is specified, specify <code>300</code>.'
        Statistic:
          $ref: '#/components/schemas/Statistic'
          description: The statistic to apply to the metric associated with the alarm. The default is <code>AVERAGE</code>.
        Threshold:
          $ref: '#/components/schemas/NonNegativeDouble'
          description: The value against which the specified statistic is compared.
        Unit:
          $ref: '#/components/schemas/Unit'
          description: The unit of measure associated with the CloudWatch metric being watched. The value specified for <code>Unit</code> must correspond to the units specified in the CloudWatch metric.
        Dimensions:
          $ref: '#/components/schemas/MetricDimensionList'
          description: A CloudWatch metric dimension.
      description: 'The definition of a CloudWatch metric alarm, which determines when an automatic scaling activity is triggered. When the defined alarm conditions are satisfied, scaling activity begins.'
    ClusterId:
      type: string
    ClusterStatus:
      type: object
      properties:
        State:
          $ref: '#/components/schemas/ClusterState'
          description: The current state of the cluster.
        StateChangeReason:
          $ref: '#/components/schemas/ClusterStateChangeReason'
          description: The reason for the cluster status change.
        Timeline:
          $ref: '#/components/schemas/ClusterTimeline'
          description: A timeline that represents the status of a cluster over the lifetime of the cluster.
      description: The detailed status of the cluster.
    Ec2InstanceAttributes:
      type: object
      properties:
        Ec2KeyName:
          $ref: '#/components/schemas/String'
          description: The name of the Amazon EC2 key pair to use when connecting with SSH into the master node as a user named "hadoop".
        Ec2SubnetId:
          $ref: '#/components/schemas/String'
          description: 'Set this parameter to the identifier of the Amazon VPC subnet where you want the cluster to launch. If you do not specify this value, and your account supports EC2-Classic, the cluster launches in EC2-Classic.'
        RequestedEc2SubnetIds:
          $ref: '#/components/schemas/XmlStringMaxLen256List'
          description: 'Applies to clusters configured with the instance fleets option. Specifies the unique identifier of one or more Amazon EC2 subnets in which to launch EC2 cluster instances. Subnets must exist within the same VPC. Amazon EMR chooses the EC2 subnet with the best fit from among the list of <code>RequestedEc2SubnetIds</code>, and then launches all cluster instances within that Subnet. If this value is not specified, and the account and Region support EC2-Classic networks, the cluster launches instances in the EC2-Classic network and uses <code>RequestedEc2AvailabilityZones</code> instead of this setting. If EC2-Classic is not supported, and no Subnet is specified, Amazon EMR chooses the subnet for you. <code>RequestedEc2SubnetIDs</code> and <code>RequestedEc2AvailabilityZones</code> cannot be specified together.'
        Ec2AvailabilityZone:
          $ref: '#/components/schemas/String'
          description: 'The Availability Zone in which the cluster will run. '
        RequestedEc2AvailabilityZones:
          $ref: '#/components/schemas/XmlStringMaxLen256List'
          description: 'Applies to clusters configured with the instance fleets option. Specifies one or more Availability Zones in which to launch EC2 cluster instances when the EC2-Classic network configuration is supported. Amazon EMR chooses the Availability Zone with the best fit from among the list of <code>RequestedEc2AvailabilityZones</code>, and then launches all cluster instances within that Availability Zone. If you do not specify this value, Amazon EMR chooses the Availability Zone for you. <code>RequestedEc2SubnetIDs</code> and <code>RequestedEc2AvailabilityZones</code> cannot be specified together.'
        IamInstanceProfile:
          $ref: '#/components/schemas/String'
          description: The IAM role that was specified when the cluster was launched. The EC2 instances of the cluster assume this role.
        EmrManagedMasterSecurityGroup:
          $ref: '#/components/schemas/String'
          description: The identifier of the Amazon EC2 security group for the master node.
        EmrManagedSlaveSecurityGroup:
          $ref: '#/components/schemas/String'
          description: The identifier of the Amazon EC2 security group for the core and task nodes.
        ServiceAccessSecurityGroup:
          $ref: '#/components/schemas/String'
          description: The identifier of the Amazon EC2 security group for the Amazon EMR service to access clusters in VPC private subnets.
        AdditionalMasterSecurityGroups:
          $ref: '#/components/schemas/StringList'
          description: A list of additional Amazon EC2 security group IDs for the master node.
        AdditionalSlaveSecurityGroups:
          $ref: '#/components/schemas/StringList'
          description: A list of additional Amazon EC2 security group IDs for the core and task nodes.
      description: 'Provides information about the EC2 instances in a cluster grouped by category. For example, key name, subnet ID, IAM instance profile, and so on.'
    InstanceCollectionType:
      type: string
      enum:
        - INSTANCE_FLEET
        - INSTANCE_GROUP
    ConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/Configuration'
    XmlString:
      type: string
      minLength: 0
      maxLength: 10280
      x-pattern: '[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\r\n\t]*'
    ScaleDownBehavior:
      type: string
      enum:
        - TERMINATE_AT_INSTANCE_HOUR
        - TERMINATE_AT_TASK_COMPLETION
    RepoUpgradeOnBoot:
      type: string
      enum:
        - SECURITY
        - NONE
    KerberosAttributes:
      type: object
      required:
        - Realm
        - KdcAdminPassword
      properties:
        Realm:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: 'The name of the Kerberos realm to which all nodes in a cluster belong. For example, <code>EC2.INTERNAL</code>. '
        KdcAdminPassword:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: 'The password used within the cluster for the kadmin service on the cluster-dedicated KDC, which maintains Kerberos principals, password policies, and keytabs for the cluster.'
        CrossRealmTrustPrincipalPassword:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: 'Required only when establishing a cross-realm trust with a KDC in a different realm. The cross-realm principal password, which must be identical across realms.'
        ADDomainJoinUser:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: Required only when establishing a cross-realm trust with an Active Directory domain. A user with sufficient privileges to join resources to the domain.
        ADDomainJoinPassword:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The Active Directory password for <code>ADDomainJoinUser</code>.
      description: 'Attributes for Kerberos configuration when Kerberos authentication is enabled using a security configuration. For more information see <a href="https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-kerberos.html">Use Kerberos Authentication</a> in the <i>Amazon EMR Management Guide</i>.'
    OptionalArnType:
      type: string
      minLength: 0
      maxLength: 2048
    PlacementGroupConfigList:
      type: array
      items:
        $ref: '#/components/schemas/PlacementGroupConfig'
    Cluster:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/ClusterId'
          description: The unique identifier for the cluster.
        Name:
          $ref: '#/components/schemas/String'
          description: The name of the cluster.
        Status:
          $ref: '#/components/schemas/ClusterStatus'
          description: The current status details about the cluster.
        Ec2InstanceAttributes:
          $ref: '#/components/schemas/Ec2InstanceAttributes'
          description: 'Provides information about the EC2 instances in a cluster grouped by category. For example, key name, subnet ID, IAM instance profile, and so on.'
        InstanceCollectionType:
          $ref: '#/components/schemas/InstanceCollectionType'
          description: '<note> <p>The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions.</p> </note> <p>The instance group configuration of the cluster. A value of <code>INSTANCE_GROUP</code> indicates a uniform instance group configuration. A value of <code>INSTANCE_FLEET</code> indicates an instance fleets configuration.</p>'
        LogUri:
          $ref: '#/components/schemas/String'
          description: The path to the Amazon S3 location where logs for this cluster are stored.
        LogEncryptionKmsKeyId:
          $ref: '#/components/schemas/String'
          description: ' The KMS key used for encrypting log files. This attribute is only available with EMR version 5.30.0 and later, excluding EMR 6.0.0. '
        RequestedAmiVersion:
          $ref: '#/components/schemas/String'
          description: The AMI version requested for this cluster.
        RunningAmiVersion:
          $ref: '#/components/schemas/String'
          description: The AMI version running on this cluster.
        ReleaseLabel:
          $ref: '#/components/schemas/String'
          description: 'The Amazon EMR release label, which determines the version of open-source application packages installed on the cluster. Release labels are in the form <code>emr-x.x.x</code>, where x.x.x is an Amazon EMR release version such as <code>emr-5.14.0</code>. For more information about Amazon EMR release versions and included application versions and features, see <a href="https://docs.aws.amazon.com/emr/latest/ReleaseGuide/">https://docs.aws.amazon.com/emr/latest/ReleaseGuide/</a>. The release label applies only to Amazon EMR releases version 4.0 and later. Earlier versions use <code>AmiVersion</code>.'
        AutoTerminate:
          $ref: '#/components/schemas/Boolean'
          description: Specifies whether the cluster should terminate after completing all steps.
        TerminationProtected:
          $ref: '#/components/schemas/Boolean'
          description: 'Indicates whether Amazon EMR will lock the cluster to prevent the EC2 instances from being terminated by an API call or user intervention, or in the event of a cluster error.'
        VisibleToAllUsers:
          $ref: '#/components/schemas/Boolean'
          description: '<p>Indicates whether the cluster is visible to IAM principals in the account associated with the cluster. When <code>true</code>, IAM principals in the account can perform EMR cluster actions on the cluster that their IAM policies allow. When <code>false</code>, only the IAM principal that created the cluster and the account root user can perform EMR actions, regardless of IAM permissions policies attached to other IAM principals.</p> <p>The default value is <code>true</code> if a value is not provided when creating a cluster using the EMR API <a>RunJobFlow</a> command, the CLI <a href="https://docs.aws.amazon.com/cli/latest/reference/emr/create-cluster.html">create-cluster</a> command, or the Management Console. IAM principals that are allowed to perform actions on the cluster can use the <a>SetVisibleToAllUsers</a> action to change the value on a running cluster. For more information, see <a href="https://docs.aws.amazon.com/emr/latest/ManagementGuide/security_iam_emr-with-iam.html#security_set_visible_to_all_users">Understanding the EMR Cluster VisibleToAllUsers Setting</a> in the <i>Amazon EMRManagement Guide</i>.</p>'
        Applications:
          $ref: '#/components/schemas/ApplicationList'
          description: The applications installed on this cluster.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A list of tags associated with a cluster.
        ServiceRole:
          $ref: '#/components/schemas/String'
          description: The IAM role that will be assumed by the Amazon EMR service to access Amazon Web Services resources on your behalf.
        NormalizedInstanceHours:
          $ref: '#/components/schemas/Integer'
          description: 'An approximation of the cost of the cluster, represented in m1.small/hours. This value is incremented one time for every hour an m1.small instance runs. Larger instances are weighted more, so an EC2 instance that is roughly four times more expensive would result in the normalized instance hours being incremented by four. This result is only an approximation and does not reflect the actual billing rate.'
        MasterPublicDnsName:
          $ref: '#/components/schemas/String'
          description: 'The DNS name of the master node. If the cluster is on a private subnet, this is the private DNS name. On a public subnet, this is the public DNS name.'
        Configurations:
          $ref: '#/components/schemas/ConfigurationList'
          description: Applies only to Amazon EMR releases 4.x and later. The list of Configurations supplied to the EMR cluster.
        SecurityConfiguration:
          $ref: '#/components/schemas/XmlString'
          description: The name of the security configuration applied to the cluster.
        AutoScalingRole:
          $ref: '#/components/schemas/XmlString'
          description: An IAM role for automatic scaling policies. The default role is <code>EMR_AutoScaling_DefaultRole</code>. The IAM role provides permissions that the automatic scaling feature requires to launch and terminate EC2 instances in an instance group.
        ScaleDownBehavior:
          $ref: '#/components/schemas/ScaleDownBehavior'
          description: 'The way that individual Amazon EC2 instances terminate when an automatic scale-in activity occurs or an instance group is resized. <code>TERMINATE_AT_INSTANCE_HOUR</code> indicates that Amazon EMR terminates nodes at the instance-hour boundary, regardless of when the request to terminate the instance was submitted. This option is only available with Amazon EMR 5.1.0 and later and is the default for clusters created using that version. <code>TERMINATE_AT_TASK_COMPLETION</code> indicates that Amazon EMR adds nodes to a deny list and drains tasks from nodes before terminating the Amazon EC2 instances, regardless of the instance-hour boundary. With either behavior, Amazon EMR removes the least active nodes first and blocks instance termination if it could lead to HDFS corruption. <code>TERMINATE_AT_TASK_COMPLETION</code> is available only in Amazon EMR version 4.1.0 and later, and is the default for versions of Amazon EMR earlier than 5.1.0.'
        CustomAmiId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: Available only in Amazon EMR version 5.7.0 and later. The ID of a custom Amazon EBS-backed Linux AMI if the cluster uses a custom AMI.
        EbsRootVolumeSize:
          $ref: '#/components/schemas/Integer'
          description: 'The size, in GiB, of the Amazon EBS root device volume of the Linux AMI that is used for each EC2 instance. Available in Amazon EMR version 4.x and later.'
        RepoUpgradeOnBoot:
          $ref: '#/components/schemas/RepoUpgradeOnBoot'
          description: Applies only when <code>CustomAmiID</code> is used. Specifies the type of updates that are applied from the Amazon Linux AMI package repositories when an instance boots using the AMI.
        KerberosAttributes:
          $ref: '#/components/schemas/KerberosAttributes'
          description: 'Attributes for Kerberos configuration when Kerberos authentication is enabled using a security configuration. For more information see <a href="https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-kerberos.html">Use Kerberos Authentication</a> in the <i>Amazon EMR Management Guide</i>.'
        ClusterArn:
          $ref: '#/components/schemas/ArnType'
          description: The Amazon Resource Name of the cluster.
        OutpostArn:
          $ref: '#/components/schemas/OptionalArnType'
          description: ' The Amazon Resource Name (ARN) of the Outpost where the cluster is launched. '
        StepConcurrencyLevel:
          $ref: '#/components/schemas/Integer'
          description: Specifies the number of steps that can be executed concurrently.
        PlacementGroups:
          $ref: '#/components/schemas/PlacementGroupConfigList'
          description: Placement group configured for an Amazon EMR cluster.
      description: The detailed description of the cluster.
    ClusterState:
      type: string
      enum:
        - STARTING
        - BOOTSTRAPPING
        - RUNNING
        - WAITING
        - TERMINATING
        - TERMINATED
        - TERMINATED_WITH_ERRORS
    ClusterStateChangeReasonCode:
      type: string
      enum:
        - INTERNAL_ERROR
        - VALIDATION_ERROR
        - INSTANCE_FAILURE
        - INSTANCE_FLEET_TIMEOUT
        - BOOTSTRAP_FAILURE
        - USER_REQUEST
        - STEP_FAILURE
        - ALL_STEPS_COMPLETED
    ClusterStateChangeReason:
      type: object
      properties:
        Code:
          $ref: '#/components/schemas/ClusterStateChangeReasonCode'
          description: The programmatic code for the state change reason.
        Message:
          $ref: '#/components/schemas/String'
          description: The descriptive message for the state change reason.
      description: The reason that the cluster changed to its current state.
    ClusterStateList:
      type: array
      items:
        $ref: '#/components/schemas/ClusterState'
    ClusterTimeline:
      type: object
      properties:
        CreationDateTime:
          $ref: '#/components/schemas/Date'
          description: The creation date and time of the cluster.
        ReadyDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time when the cluster was ready to run steps.
        EndDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time when the cluster was terminated.
      description: Represents the timeline of the cluster's lifecycle.
    ClusterSummary:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/ClusterId'
          description: The unique identifier for the cluster.
        Name:
          $ref: '#/components/schemas/String'
          description: The name of the cluster.
        Status:
          $ref: '#/components/schemas/ClusterStatus'
          description: The details about the current status of the cluster.
        NormalizedInstanceHours:
          $ref: '#/components/schemas/Integer'
          description: 'An approximation of the cost of the cluster, represented in m1.small/hours. This value is incremented one time for every hour an m1.small instance runs. Larger instances are weighted more, so an EC2 instance that is roughly four times more expensive would result in the normalized instance hours being incremented by four. This result is only an approximation and does not reflect the actual billing rate.'
        ClusterArn:
          $ref: '#/components/schemas/ArnType'
          description: The Amazon Resource Name of the cluster.
        OutpostArn:
          $ref: '#/components/schemas/OptionalArnType'
          description: ' The Amazon Resource Name (ARN) of the Outpost where the cluster is launched. '
      description: The summary description of the cluster.
    ClusterSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ClusterSummary'
    Command:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/String'
          description: The name of the command.
        ScriptPath:
          $ref: '#/components/schemas/String'
          description: The Amazon S3 location of the command script.
        Args:
          $ref: '#/components/schemas/StringList'
          description: Arguments for Amazon EMR to pass to the command for execution.
      description: An entity describing an executable that runs on a cluster.
    CommandList:
      type: array
      items:
        $ref: '#/components/schemas/Command'
    ComputeLimitsUnitType:
      type: string
      enum:
        - InstanceFleetUnits
        - Instances
        - VCPU
    ComputeLimits:
      type: object
      required:
        - UnitType
        - MinimumCapacityUnits
        - MaximumCapacityUnits
      properties:
        UnitType:
          $ref: '#/components/schemas/ComputeLimitsUnitType'
          description: ' The unit type used for specifying a managed scaling policy. '
        MinimumCapacityUnits:
          $ref: '#/components/schemas/Integer'
          description: ' The lower boundary of EC2 units. It is measured through vCPU cores or instances for instance groups and measured through units for instance fleets. Managed scaling activities are not allowed beyond this boundary. The limit only applies to the core and task nodes. The master node cannot be scaled after initial configuration. '
        MaximumCapacityUnits:
          $ref: '#/components/schemas/Integer'
          description: ' The upper boundary of EC2 units. It is measured through vCPU cores or instances for instance groups and measured through units for instance fleets. Managed scaling activities are not allowed beyond this boundary. The limit only applies to the core and task nodes. The master node cannot be scaled after initial configuration. '
        MaximumOnDemandCapacityUnits:
          $ref: '#/components/schemas/Integer'
          description: ' The upper boundary of On-Demand EC2 units. It is measured through vCPU cores or instances for instance groups and measured through units for instance fleets. The On-Demand units are not allowed to scale beyond this boundary. The parameter is used to split capacity allocation between On-Demand and Spot Instances. '
        MaximumCoreCapacityUnits:
          $ref: '#/components/schemas/Integer'
          description: ' The upper boundary of EC2 units for core node type in a cluster. It is measured through vCPU cores or instances for instance groups and measured through units for instance fleets. The core units are not allowed to scale beyond this boundary. The parameter is used to split capacity allocation between core and task nodes. '
      description: ' The EC2 unit limits for a managed scaling policy. The managed scaling activity of a cluster can not be above or below these limits. The limit only applies to the core and task nodes. The master node cannot be scaled after initial configuration. '
    Configuration:
      type: object
      properties:
        Classification:
          $ref: '#/components/schemas/String'
          description: The classification within a configuration.
        Configurations:
          $ref: '#/components/schemas/ConfigurationList'
          description: A list of additional configurations to apply within a configuration object.
        Properties:
          $ref: '#/components/schemas/StringMap'
          description: A set of properties specified within a configuration classification.
      description: '<note> <p>Amazon EMR releases 4.x or later.</p> </note> <p>An optional configuration specification to be used when provisioning cluster instances, which can include configurations for applications and software bundled with Amazon EMR. A configuration consists of a classification, properties, and optional nested configurations. A classification refers to an application-specific configuration file. Properties are the settings you want to change in that file. For more information, see <a href="https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-configure-apps.html">Configuring Applications</a>.</p>'
    SubnetIdList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    IdentityType:
      type: string
      enum:
        - USER
        - GROUP
    XmlStringList:
      type: array
      items:
        $ref: '#/components/schemas/XmlString'
    JobFlowExecutionStateList:
      type: array
      items:
        $ref: '#/components/schemas/JobFlowExecutionState'
    JobFlowDetailList:
      type: array
      items:
        $ref: '#/components/schemas/JobFlowDetail'
    NotebookExecution:
      type: object
      properties:
        NotebookExecutionId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The unique identifier of a notebook execution.
        EditorId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The unique identifier of the EMR Notebook that is used for the notebook execution.
        ExecutionEngine:
          $ref: '#/components/schemas/ExecutionEngineConfig'
          description: 'The execution engine, such as an EMR cluster, used to run the EMR notebook and perform the notebook execution.'
        NotebookExecutionName:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: A name for the notebook execution.
        NotebookParams:
          $ref: '#/components/schemas/XmlString'
          description: Input parameters in JSON format passed to the EMR Notebook at runtime for execution.
        Status:
          $ref: '#/components/schemas/NotebookExecutionStatus'
          description: <p>The status of the notebook execution.</p> <ul> <li> <p> <code>START_PENDING</code> indicates that the cluster has received the execution request but execution has not begun.</p> </li> <li> <p> <code>STARTING</code> indicates that the execution is starting on the cluster.</p> </li> <li> <p> <code>RUNNING</code> indicates that the execution is being processed by the cluster.</p> </li> <li> <p> <code>FINISHING</code> indicates that execution processing is in the final stages.</p> </li> <li> <p> <code>FINISHED</code> indicates that the execution has completed without error.</p> </li> <li> <p> <code>FAILING</code> indicates that the execution is failing and will not finish successfully.</p> </li> <li> <p> <code>FAILED</code> indicates that the execution failed.</p> </li> <li> <p> <code>STOP_PENDING</code> indicates that the cluster has received a <code>StopNotebookExecution</code> request and the stop is pending.</p> </li> <li> <p> <code>STOPPING</code> indicates that the cluster is in the process of stopping the execution as a result of a <code>StopNotebookExecution</code> request.</p> </li> <li> <p> <code>STOPPED</code> indicates that the execution stopped because of a <code>StopNotebookExecution</code> request.</p> </li> </ul>
        StartTime:
          $ref: '#/components/schemas/Date'
          description: The timestamp when notebook execution started.
        EndTime:
          $ref: '#/components/schemas/Date'
          description: The timestamp when notebook execution ended.
        Arn:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The Amazon Resource Name (ARN) of the notebook execution.
        OutputNotebookURI:
          $ref: '#/components/schemas/XmlString'
          description: The location of the notebook execution's output file in Amazon S3.
        LastStateChangeReason:
          $ref: '#/components/schemas/XmlString'
          description: The reason for the latest status change of the notebook execution.
        NotebookInstanceSecurityGroupId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: 'The unique identifier of the EC2 security group associated with the EMR Notebook instance. For more information see <a href="https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-managed-notebooks-security-groups.html">Specifying EC2 Security Groups for EMR Notebooks</a> in the <i>EMR Management Guide</i>.'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A list of tags associated with a notebook execution. Tags are user-defined key-value pairs that consist of a required key string with a maximum of 128 characters and an optional value string with a maximum of 256 characters.
      description: A notebook execution. An execution is a specific instance that an EMR Notebook is run using the <code>StartNotebookExecution</code> action.
    MaxResultsNumber:
      type: integer
      minimum: 1
      maximum: 100
    SimplifiedApplicationList:
      type: array
      items:
        $ref: '#/components/schemas/SimplifiedApplication'
    Step:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/StepId'
          description: The identifier of the cluster step.
        Name:
          $ref: '#/components/schemas/String'
          description: The name of the cluster step.
        Config:
          $ref: '#/components/schemas/HadoopStepConfig'
          description: The Hadoop job configuration of the cluster step.
        ActionOnFailure:
          $ref: '#/components/schemas/ActionOnFailure'
          description: '<p>The action to take when the cluster step fails. Possible values are <code>TERMINATE_CLUSTER</code>, <code>CANCEL_AND_WAIT</code>, and <code>CONTINUE</code>. <code>TERMINATE_JOB_FLOW</code> is provided for backward compatibility. We recommend using <code>TERMINATE_CLUSTER</code> instead.</p> <p>If a cluster''s <code>StepConcurrencyLevel</code> is greater than <code>1</code>, do not use <code>AddJobFlowSteps</code> to submit a step with this parameter set to <code>CANCEL_AND_WAIT</code> or <code>TERMINATE_CLUSTER</code>. The step is not submitted and the action fails with a message that the <code>ActionOnFailure</code> setting is not valid.</p> <p>If you change a cluster''s <code>StepConcurrencyLevel</code> to be greater than 1 while a step is running, the <code>ActionOnFailure</code> parameter may not behave as you expect. In this case, for a step that fails with this parameter set to <code>CANCEL_AND_WAIT</code>, pending steps and the running step are not canceled; for a step that fails with this parameter set to <code>TERMINATE_CLUSTER</code>, the cluster does not terminate.</p>'
        Status:
          $ref: '#/components/schemas/StepStatus'
          description: The current execution status details of the cluster step.
      description: This represents a step in a cluster.
    Studio:
      type: object
      properties:
        StudioId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The ID of the Amazon EMR Studio.
        StudioArn:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The Amazon Resource Name (ARN) of the Amazon EMR Studio.
        Name:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The name of the Amazon EMR Studio.
        Description:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The detailed description of the Amazon EMR Studio.
        AuthMode:
          $ref: '#/components/schemas/AuthMode'
          description: Specifies whether the Amazon EMR Studio authenticates users using single sign-on (SSO) or IAM.
        VpcId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The ID of the VPC associated with the Amazon EMR Studio.
        SubnetIds:
          $ref: '#/components/schemas/SubnetIdList'
          description: The list of IDs of the subnets associated with the Amazon EMR Studio.
        ServiceRole:
          $ref: '#/components/schemas/XmlString'
          description: The name of the IAM role assumed by the Amazon EMR Studio.
        UserRole:
          $ref: '#/components/schemas/XmlString'
          description: The name of the IAM role assumed by users logged in to the Amazon EMR Studio.
        WorkspaceSecurityGroupId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The ID of the Workspace security group associated with the Amazon EMR Studio. The Workspace security group allows outbound network traffic to resources in the Engine security group and to the internet.
        EngineSecurityGroupId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The ID of the Engine security group associated with the Amazon EMR Studio. The Engine security group allows inbound network traffic from resources in the Workspace security group.
        Url:
          $ref: '#/components/schemas/XmlString'
          description: The unique access URL of the Amazon EMR Studio.
        CreationTime:
          $ref: '#/components/schemas/Date'
          description: The time the Amazon EMR Studio was created.
        DefaultS3Location:
          $ref: '#/components/schemas/XmlString'
          description: The Amazon S3 location to back up Amazon EMR Studio Workspaces and notebook files.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A list of tags associated with the Amazon EMR Studio.
      description: 'Details for an Amazon EMR Studio including ID, creation time, name, and so on.'
    InstanceId:
      type: string
    EC2InstanceIdsList:
      type: array
      items:
        $ref: '#/components/schemas/InstanceId'
    EC2InstanceIdsToTerminateList:
      type: array
      items:
        $ref: '#/components/schemas/InstanceId'
    VolumeSpecification:
      type: object
      required:
        - VolumeType
        - SizeInGB
      properties:
        VolumeType:
          $ref: '#/components/schemas/String'
          description: 'The volume type. Volume types supported are gp2, io1, standard.'
        Iops:
          $ref: '#/components/schemas/Integer'
          description: The number of I/O operations per second (IOPS) that the volume supports.
        SizeInGB:
          $ref: '#/components/schemas/Integer'
          description: 'The volume size, in gibibytes (GiB). This can be a number from 1 - 1024. If the volume type is EBS-optimized, the minimum value is 10.'
      description: 'EBS volume specifications such as volume type, IOPS, and size (GiB) that will be requested for the EBS volume attached to an EC2 instance in the cluster.'
    EbsBlockDevice:
      type: object
      properties:
        VolumeSpecification:
          $ref: '#/components/schemas/VolumeSpecification'
          description: 'EBS volume specifications such as volume type, IOPS, and size (GiB) that will be requested for the EBS volume attached to an EC2 instance in the cluster.'
        Device:
          $ref: '#/components/schemas/String'
          description: 'The device name that is exposed to the instance, such as /dev/sdh.'
      description: Configuration of requested EBS block device associated with the instance group.
    EbsBlockDeviceConfig:
      type: object
      required:
        - VolumeSpecification
      properties:
        VolumeSpecification:
          $ref: '#/components/schemas/VolumeSpecification'
          description: 'EBS volume specifications such as volume type, IOPS, and size (GiB) that will be requested for the EBS volume attached to an EC2 instance in the cluster.'
        VolumesPerInstance:
          $ref: '#/components/schemas/Integer'
          description: Number of EBS volumes with a specific volume configuration that will be associated with every instance in the instance group
      description: Configuration of requested EBS block device associated with the instance group with count of volumes that will be associated to every instance.
    EbsBlockDeviceConfigList:
      type: array
      items:
        $ref: '#/components/schemas/EbsBlockDeviceConfig'
    EbsBlockDeviceList:
      type: array
      items:
        $ref: '#/components/schemas/EbsBlockDevice'
    EbsConfiguration:
      type: object
      properties:
        EbsBlockDeviceConfigs:
          $ref: '#/components/schemas/EbsBlockDeviceConfigList'
          description: An array of Amazon EBS volume specifications attached to a cluster instance.
        EbsOptimized:
          $ref: '#/components/schemas/BooleanObject'
          description: Indicates whether an Amazon EBS volume is EBS-optimized.
      description: The Amazon EBS configuration of a cluster instance.
    EbsVolume:
      type: object
      properties:
        Device:
          $ref: '#/components/schemas/String'
          description: 'The device name that is exposed to the instance, such as /dev/sdh.'
        VolumeId:
          $ref: '#/components/schemas/String'
          description: The volume identifier of the EBS volume.
      description: EBS block device that's attached to an EC2 instance.
    EbsVolumeList:
      type: array
      items:
        $ref: '#/components/schemas/EbsVolume'
    XmlStringMaxLen256List:
      type: array
      items:
        $ref: '#/components/schemas/XmlStringMaxLen256'
    ExecutionEngineType:
      type: string
      enum:
        - EMR
    ExecutionEngineConfig:
      type: object
      required:
        - Id
      properties:
        Id:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: 'The unique identifier of the execution engine. For an EMR cluster, this is the cluster ID.'
        Type:
          $ref: '#/components/schemas/ExecutionEngineType'
          description: The type of execution engine. A value of <code>EMR</code> specifies an EMR cluster.
        MasterInstanceSecurityGroupId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: 'An optional unique ID of an EC2 security group to associate with the master instance of the EMR cluster for this notebook execution. For more information see <a href="https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-managed-notebooks-security-groups.html">Specifying EC2 Security Groups for EMR Notebooks</a> in the <i>EMR Management Guide</i>.'
      description: 'Specifies the execution engine (cluster) to run the notebook and perform the notebook execution, for example, an EMR cluster.'
    FailureDetails:
      type: object
      properties:
        Reason:
          $ref: '#/components/schemas/String'
          description: 'The reason for the step failure. In the case where the service cannot successfully determine the root cause of the failure, it returns "Unknown Error" as a reason.'
        Message:
          $ref: '#/components/schemas/String'
          description: The descriptive message including the error the Amazon EMR service has identified as the cause of step failure. This is text from an error log that describes the root cause of the failure.
        LogFile:
          $ref: '#/components/schemas/String'
          description: The path to the log file where the step failure root cause was originally recorded.
      description: The details of the step failure. The service attempts to detect the root cause for many common failures.
    ManagedScalingPolicy:
      type: object
      properties:
        ComputeLimits:
          $ref: '#/components/schemas/ComputeLimits'
          description: The EC2 unit limits for a managed scaling policy. The managed scaling activity of a cluster is not allowed to go above or below these limits. The limit only applies to the core and task nodes. The master node cannot be scaled after initial configuration.
      description: ' Managed scaling policy for an Amazon EMR cluster. The policy specifies the limits for resources that can be added or terminated from a cluster. The policy only applies to the core and task nodes. The master node cannot be scaled after initial configuration. '
    SessionMappingDetail:
      type: object
      properties:
        StudioId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The ID of the Amazon EMR Studio.
        IdentityId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The globally unique identifier (GUID) of the user or group.
        IdentityName:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: 'The name of the user or group. For more information, see <a href="https://docs.aws.amazon.com/singlesignon/latest/IdentityStoreAPIReference/API_User.html#singlesignon-Type-User-UserName">UserName</a> and <a href="https://docs.aws.amazon.com/singlesignon/latest/IdentityStoreAPIReference/API_Group.html#singlesignon-Type-Group-DisplayName">DisplayName</a> in the <i>Amazon Web Services SSO Identity Store API Reference</i>.'
        IdentityType:
          $ref: '#/components/schemas/IdentityType'
          description: Specifies whether the identity mapped to the Amazon EMR Studio is a user or a group.
        SessionPolicyArn:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The Amazon Resource Name (ARN) of the session policy associated with the user or group.
        CreationTime:
          $ref: '#/components/schemas/Date'
          description: The time the session mapping was created.
        LastModifiedTime:
          $ref: '#/components/schemas/Date'
          description: The time the session mapping was last modified.
      description: 'Details for an Amazon EMR Studio session mapping including creation time, user or group ID, Studio ID, and so on.'
    KeyValueList:
      type: array
      items:
        $ref: '#/components/schemas/KeyValue'
    HadoopJarStepConfig:
      type: object
      required:
        - Jar
      properties:
        Properties:
          $ref: '#/components/schemas/KeyValueList'
          description: A list of Java properties that are set when the step runs. You can use these properties to pass key-value pairs to your main function.
        Jar:
          $ref: '#/components/schemas/XmlString'
          description: A path to a JAR file run during the step.
        MainClass:
          $ref: '#/components/schemas/XmlString'
          description: 'The name of the main class in the specified Java file. If not specified, the JAR file should specify a Main-Class in its manifest file.'
        Args:
          $ref: '#/components/schemas/XmlStringList'
          description: A list of command line arguments passed to the JAR file's main function when executed.
      description: A job flow step consisting of a JAR file whose main function will be executed. The main function submits a job for Hadoop to execute and waits for the job to finish or fail.
    HadoopStepConfig:
      type: object
      properties:
        Jar:
          $ref: '#/components/schemas/String'
          description: The path to the JAR file that runs during the step.
        Properties:
          $ref: '#/components/schemas/StringMap'
          description: The list of Java properties that are set when the step runs. You can use these properties to pass key-value pairs to your main function.
        MainClass:
          $ref: '#/components/schemas/String'
          description: 'The name of the main class in the specified Java file. If not specified, the JAR file should specify a main class in its manifest file.'
        Args:
          $ref: '#/components/schemas/StringList'
          description: The list of command line arguments to pass to the JAR file's main function for execution.
      description: A cluster step consisting of a JAR file whose main function will be executed. The main function submits a job for Hadoop to execute and waits for the job to finish or fail.
    InstanceStatus:
      type: object
      properties:
        State:
          $ref: '#/components/schemas/InstanceState'
          description: The current state of the instance.
        StateChangeReason:
          $ref: '#/components/schemas/InstanceStateChangeReason'
          description: The details of the status change reason for the instance.
        Timeline:
          $ref: '#/components/schemas/InstanceTimeline'
          description: The timeline of the instance status over time.
      description: The instance status details.
    MarketType:
      type: string
      enum:
        - ON_DEMAND
        - SPOT
    InstanceType:
      type: string
      minLength: 1
      maxLength: 256
      x-pattern: '[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\r\n\t]*'
    Instance:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/InstanceId'
          description: The unique identifier for the instance in Amazon EMR.
        Ec2InstanceId:
          $ref: '#/components/schemas/InstanceId'
          description: The unique identifier of the instance in Amazon EC2.
        PublicDnsName:
          $ref: '#/components/schemas/String'
          description: The public DNS name of the instance.
        PublicIpAddress:
          $ref: '#/components/schemas/String'
          description: The public IP address of the instance.
        PrivateDnsName:
          $ref: '#/components/schemas/String'
          description: The private DNS name of the instance.
        PrivateIpAddress:
          $ref: '#/components/schemas/String'
          description: The private IP address of the instance.
        Status:
          $ref: '#/components/schemas/InstanceStatus'
          description: The current status of the instance.
        InstanceGroupId:
          $ref: '#/components/schemas/String'
          description: The identifier of the instance group to which this instance belongs.
        InstanceFleetId:
          $ref: '#/components/schemas/InstanceFleetId'
          description: The unique identifier of the instance fleet to which an EC2 instance belongs.
        Market:
          $ref: '#/components/schemas/MarketType'
          description: 'The instance purchasing option. Valid values are <code>ON_DEMAND</code> or <code>SPOT</code>. '
        InstanceType:
          $ref: '#/components/schemas/InstanceType'
          description: 'The EC2 instance type, for example <code>m3.xlarge</code>.'
        EbsVolumes:
          $ref: '#/components/schemas/EbsVolumeList'
          description: The list of Amazon EBS volumes that are attached to this instance.
      description: Represents an EC2 instance provisioned as part of cluster.
    InstanceFleetStatus:
      type: object
      properties:
        State:
          $ref: '#/components/schemas/InstanceFleetState'
          description: '<p>A code representing the instance fleet status.</p> <ul> <li> <p> <code>PROVISIONING</code>—The instance fleet is provisioning EC2 resources and is not yet ready to run jobs.</p> </li> <li> <p> <code>BOOTSTRAPPING</code>—EC2 instances and other resources have been provisioned and the bootstrap actions specified for the instances are underway.</p> </li> <li> <p> <code>RUNNING</code>—EC2 instances and other resources are running. They are either executing jobs or waiting to execute jobs.</p> </li> <li> <p> <code>RESIZING</code>—A resize operation is underway. EC2 instances are either being added or removed.</p> </li> <li> <p> <code>SUSPENDED</code>—A resize operation could not complete. Existing EC2 instances are running, but instances can''t be added or removed.</p> </li> <li> <p> <code>TERMINATING</code>—The instance fleet is terminating EC2 instances.</p> </li> <li> <p> <code>TERMINATED</code>—The instance fleet is no longer active, and all EC2 instances have been terminated.</p> </li> </ul>'
        StateChangeReason:
          $ref: '#/components/schemas/InstanceFleetStateChangeReason'
          description: Provides status change reason details for the instance fleet.
        Timeline:
          $ref: '#/components/schemas/InstanceFleetTimeline'
          description: 'Provides historical timestamps for the instance fleet, including the time of creation, the time it became ready to run jobs, and the time of termination.'
      description: '<p>The status of the instance fleet.</p> <note> <p>The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions.</p> </note>'
    InstanceFleetType:
      type: string
      enum:
        - MASTER
        - CORE
        - TASK
    WholeNumber:
      type: integer
      minimum: 0
    InstanceTypeSpecificationList:
      type: array
      items:
        $ref: '#/components/schemas/InstanceTypeSpecification'
    InstanceFleetProvisioningSpecifications:
      type: object
      properties:
        SpotSpecification:
          $ref: '#/components/schemas/SpotProvisioningSpecification'
          description: 'The launch specification for Spot Instances in the fleet, which determines the defined duration, provisioning timeout behavior, and allocation strategy.'
        OnDemandSpecification:
          $ref: '#/components/schemas/OnDemandProvisioningSpecification'
          description: '<p> The launch specification for On-Demand Instances in the instance fleet, which determines the allocation strategy. </p> <note> <p>The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions. On-Demand Instances allocation strategy is available in Amazon EMR version 5.12.1 and later.</p> </note>'
      description: '<p>The launch specification for Spot Instances in the fleet, which determines the defined duration, provisioning timeout behavior, and allocation strategy.</p> <note> <p>The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions. On-Demand and Spot Instance allocation strategies are available in Amazon EMR version 5.12.1 and later.</p> </note>'
    InstanceFleet:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/InstanceFleetId'
          description: The unique identifier of the instance fleet.
        Name:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: A friendly name for the instance fleet.
        Status:
          $ref: '#/components/schemas/InstanceFleetStatus'
          description: 'The current status of the instance fleet. '
        InstanceFleetType:
          $ref: '#/components/schemas/InstanceFleetType'
          description: 'The node type that the instance fleet hosts. Valid values are MASTER, CORE, or TASK. '
        TargetOnDemandCapacity:
          $ref: '#/components/schemas/WholeNumber'
          description: '<p>The target capacity of On-Demand units for the instance fleet, which determines how many On-Demand Instances to provision. When the instance fleet launches, Amazon EMR tries to provision On-Demand Instances as specified by <a>InstanceTypeConfig</a>. Each instance configuration has a specified <code>WeightedCapacity</code>. When an On-Demand Instance is provisioned, the <code>WeightedCapacity</code> units count toward the target capacity. Amazon EMR provisions instances until the target capacity is totally fulfilled, even if this results in an overage. For example, if there are 2 units remaining to fulfill capacity, and Amazon EMR can only provision an instance with a <code>WeightedCapacity</code> of 5 units, the instance is provisioned, and the target capacity is exceeded by 3 units. You can use <a>InstanceFleet$ProvisionedOnDemandCapacity</a> to determine the Spot capacity units that have been provisioned for the instance fleet.</p> <note> <p>If not specified or set to 0, only Spot Instances are provisioned for the instance fleet using <code>TargetSpotCapacity</code>. At least one of <code>TargetSpotCapacity</code> and <code>TargetOnDemandCapacity</code> should be greater than 0. For a master instance fleet, only one of <code>TargetSpotCapacity</code> and <code>TargetOnDemandCapacity</code> can be specified, and its value must be 1.</p> </note>'
        TargetSpotCapacity:
          $ref: '#/components/schemas/WholeNumber'
          description: '<p>The target capacity of Spot units for the instance fleet, which determines how many Spot Instances to provision. When the instance fleet launches, Amazon EMR tries to provision Spot Instances as specified by <a>InstanceTypeConfig</a>. Each instance configuration has a specified <code>WeightedCapacity</code>. When a Spot instance is provisioned, the <code>WeightedCapacity</code> units count toward the target capacity. Amazon EMR provisions instances until the target capacity is totally fulfilled, even if this results in an overage. For example, if there are 2 units remaining to fulfill capacity, and Amazon EMR can only provision an instance with a <code>WeightedCapacity</code> of 5 units, the instance is provisioned, and the target capacity is exceeded by 3 units. You can use <a>InstanceFleet$ProvisionedSpotCapacity</a> to determine the Spot capacity units that have been provisioned for the instance fleet.</p> <note> <p>If not specified or set to 0, only On-Demand Instances are provisioned for the instance fleet. At least one of <code>TargetSpotCapacity</code> and <code>TargetOnDemandCapacity</code> should be greater than 0. For a master instance fleet, only one of <code>TargetSpotCapacity</code> and <code>TargetOnDemandCapacity</code> can be specified, and its value must be 1.</p> </note>'
        ProvisionedOnDemandCapacity:
          $ref: '#/components/schemas/WholeNumber'
          description: The number of On-Demand units that have been provisioned for the instance fleet to fulfill <code>TargetOnDemandCapacity</code>. This provisioned capacity might be less than or greater than <code>TargetOnDemandCapacity</code>.
        ProvisionedSpotCapacity:
          $ref: '#/components/schemas/WholeNumber'
          description: The number of Spot units that have been provisioned for this instance fleet to fulfill <code>TargetSpotCapacity</code>. This provisioned capacity might be less than or greater than <code>TargetSpotCapacity</code>.
        InstanceTypeSpecifications:
          $ref: '#/components/schemas/InstanceTypeSpecificationList'
          description: An array of specifications for the instance types that comprise an instance fleet.
        LaunchSpecifications:
          $ref: '#/components/schemas/InstanceFleetProvisioningSpecifications'
          description: 'Describes the launch specification for an instance fleet. '
      description: '<p>Describes an instance fleet, which is a group of EC2 instances that host a particular node type (master, core, or task) in an Amazon EMR cluster. Instance fleets can consist of a mix of instance types and On-Demand and Spot Instances, which are provisioned to meet a defined target capacity. </p> <note> <p>The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions.</p> </note>'
    InstanceTypeConfigList:
      type: array
      items:
        $ref: '#/components/schemas/InstanceTypeConfig'
    InstanceFleetConfigList:
      type: array
      items:
        $ref: '#/components/schemas/InstanceFleetConfig'
    InstanceFleetList:
      type: array
      items:
        $ref: '#/components/schemas/InstanceFleet'
    InstanceFleetModifyConfig:
      type: object
      required:
        - InstanceFleetId
      properties:
        InstanceFleetId:
          $ref: '#/components/schemas/InstanceFleetId'
          description: A unique identifier for the instance fleet.
        TargetOnDemandCapacity:
          $ref: '#/components/schemas/WholeNumber'
          description: The target capacity of On-Demand units for the instance fleet. For more information see <a>InstanceFleetConfig$TargetOnDemandCapacity</a>.
        TargetSpotCapacity:
          $ref: '#/components/schemas/WholeNumber'
          description: 'The target capacity of Spot units for the instance fleet. For more information, see <a>InstanceFleetConfig$TargetSpotCapacity</a>.'
      description: '<p>Configuration parameters for an instance fleet modification request.</p> <note> <p>The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions.</p> </note>'
    SpotProvisioningSpecification:
      type: object
      required:
        - TimeoutDurationMinutes
        - TimeoutAction
      properties:
        TimeoutDurationMinutes:
          $ref: '#/components/schemas/WholeNumber'
          description: 'The spot provisioning timeout period in minutes. If Spot Instances are not provisioned within this time period, the <code>TimeOutAction</code> is taken. Minimum value is 5 and maximum value is 1440. The timeout applies only during initial provisioning, when the cluster is first created.'
        TimeoutAction:
          $ref: '#/components/schemas/SpotProvisioningTimeoutAction'
          description: 'The action to take when <code>TargetSpotCapacity</code> has not been fulfilled when the <code>TimeoutDurationMinutes</code> has expired; that is, when all Spot Instances could not be provisioned within the Spot provisioning timeout. Valid values are <code>TERMINATE_CLUSTER</code> and <code>SWITCH_TO_ON_DEMAND</code>. SWITCH_TO_ON_DEMAND specifies that if no Spot Instances are available, On-Demand Instances should be provisioned to fulfill any remaining Spot capacity.'
        BlockDurationMinutes:
          $ref: '#/components/schemas/WholeNumber'
          description: 'The defined duration for Spot Instances (also known as Spot blocks) in minutes. When specified, the Spot Instance does not terminate before the defined duration expires, and defined duration pricing for Spot Instances applies. Valid values are 60, 120, 180, 240, 300, or 360. The duration period starts as soon as a Spot Instance receives its instance ID. At the end of the duration, Amazon EC2 marks the Spot Instance for termination and provides a Spot Instance termination notice, which gives the instance a two-minute warning before it terminates. '
        AllocationStrategy:
          $ref: '#/components/schemas/SpotProvisioningAllocationStrategy'
          description: ' Specifies the strategy to use in launching Spot Instance fleets. Currently, the only option is capacity-optimized (the default), which launches instances from Spot Instance pools with optimal capacity for the number of instances that are launching. '
      description: '<p>The launch specification for Spot Instances in the instance fleet, which determines the defined duration, provisioning timeout behavior, and allocation strategy.</p> <note> <p>The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions. Spot Instance allocation strategy is available in Amazon EMR version 5.12.1 and later.</p> </note>'
    OnDemandProvisioningSpecification:
      type: object
      required:
        - AllocationStrategy
      properties:
        AllocationStrategy:
          $ref: '#/components/schemas/OnDemandProvisioningAllocationStrategy'
          description: 'Specifies the strategy to use in launching On-Demand instance fleets. Currently, the only option is <code>lowest-price</code> (the default), which launches the lowest price first.'
        CapacityReservationOptions:
          $ref: '#/components/schemas/OnDemandCapacityReservationOptions'
          description: 'The launch specification for On-Demand instances in the instance fleet, which determines the allocation strategy.'
      description: '<p> The launch specification for On-Demand Instances in the instance fleet, which determines the allocation strategy. </p> <note> <p>The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions. On-Demand Instances allocation strategy is available in Amazon EMR version 5.12.1 and later.</p> </note>'
    InstanceFleetState:
      type: string
      enum:
        - PROVISIONING
        - BOOTSTRAPPING
        - RUNNING
        - RESIZING
        - SUSPENDED
        - TERMINATING
        - TERMINATED
    InstanceFleetStateChangeReasonCode:
      type: string
      enum:
        - INTERNAL_ERROR
        - VALIDATION_ERROR
        - INSTANCE_FAILURE
        - CLUSTER_TERMINATED
    InstanceFleetStateChangeReason:
      type: object
      properties:
        Code:
          $ref: '#/components/schemas/InstanceFleetStateChangeReasonCode'
          description: A code corresponding to the reason the state change occurred.
        Message:
          $ref: '#/components/schemas/String'
          description: An explanatory message.
      description: '<p>Provides status change reason details for the instance fleet.</p> <note> <p>The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions.</p> </note>'
    InstanceFleetTimeline:
      type: object
      properties:
        CreationDateTime:
          $ref: '#/components/schemas/Date'
          description: The time and date the instance fleet was created.
        ReadyDateTime:
          $ref: '#/components/schemas/Date'
          description: The time and date the instance fleet was ready to run jobs.
        EndDateTime:
          $ref: '#/components/schemas/Date'
          description: The time and date the instance fleet terminated.
      description: '<p>Provides historical timestamps for the instance fleet, including the time of creation, the time it became ready to run jobs, and the time of termination.</p> <note> <p>The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions.</p> </note>'
    InstanceGroupId:
      type: string
    InstanceGroupType:
      type: string
      enum:
        - MASTER
        - CORE
        - TASK
    InstanceGroupStatus:
      type: object
      properties:
        State:
          $ref: '#/components/schemas/InstanceGroupState'
          description: The current state of the instance group.
        StateChangeReason:
          $ref: '#/components/schemas/InstanceGroupStateChangeReason'
          description: The status change reason details for the instance group.
        Timeline:
          $ref: '#/components/schemas/InstanceGroupTimeline'
          description: The timeline of the instance group status over time.
      description: The details of the instance group status.
    Long:
      type: integer
    ShrinkPolicy:
      type: object
      properties:
        DecommissionTimeout:
          $ref: '#/components/schemas/Integer'
          description: The desired timeout for decommissioning an instance. Overrides the default YARN decommissioning timeout.
        InstanceResizePolicy:
          $ref: '#/components/schemas/InstanceResizePolicy'
          description: Custom policy for requesting termination protection or termination of specific instances when shrinking an instance group.
      description: Policy for customizing shrink operations. Allows configuration of decommissioning timeout and targeted instance shrinking.
    InstanceGroup:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/InstanceGroupId'
          description: The identifier of the instance group.
        Name:
          $ref: '#/components/schemas/String'
          description: The name of the instance group.
        Market:
          $ref: '#/components/schemas/MarketType'
          description: The marketplace to provision instances for this group. Valid values are ON_DEMAND or SPOT.
        InstanceGroupType:
          $ref: '#/components/schemas/InstanceGroupType'
          description: 'The type of the instance group. Valid values are MASTER, CORE or TASK.'
        BidPrice:
          $ref: '#/components/schemas/String'
          description: 'If specified, indicates that the instance group uses Spot Instances. This is the maximum price you are willing to pay for Spot Instances. Specify <code>OnDemandPrice</code> to set the amount equal to the On-Demand price, or specify an amount in USD.'
        InstanceType:
          $ref: '#/components/schemas/InstanceType'
          description: The EC2 instance type for all instances in the instance group.
        RequestedInstanceCount:
          $ref: '#/components/schemas/Integer'
          description: The target number of instances for the instance group.
        RunningInstanceCount:
          $ref: '#/components/schemas/Integer'
          description: The number of instances currently running in this instance group.
        Status:
          $ref: '#/components/schemas/InstanceGroupStatus'
          description: The current status of the instance group.
        Configurations:
          $ref: '#/components/schemas/ConfigurationList'
          description: '<note> <p>Amazon EMR releases 4.x or later.</p> </note> <p>The list of configurations supplied for an Amazon EMR cluster instance group. You can specify a separate configuration for each instance group (master, core, and task).</p>'
        ConfigurationsVersion:
          $ref: '#/components/schemas/Long'
          description: The version number of the requested configuration specification for this instance group.
        LastSuccessfullyAppliedConfigurations:
          $ref: '#/components/schemas/ConfigurationList'
          description: A list of configurations that were successfully applied for an instance group last time.
        LastSuccessfullyAppliedConfigurationsVersion:
          $ref: '#/components/schemas/Long'
          description: 'The version number of a configuration specification that was successfully applied for an instance group last time. '
        EbsBlockDevices:
          $ref: '#/components/schemas/EbsBlockDeviceList'
          description: The EBS block devices that are mapped to this instance group.
        EbsOptimized:
          $ref: '#/components/schemas/BooleanObject'
          description: 'If the instance group is EBS-optimized. An Amazon EBS-optimized instance uses an optimized configuration stack and provides additional, dedicated capacity for Amazon EBS I/O.'
        ShrinkPolicy:
          $ref: '#/components/schemas/ShrinkPolicy'
          description: Policy for customizing shrink operations.
        AutoScalingPolicy:
          $ref: '#/components/schemas/AutoScalingPolicyDescription'
          description: An automatic scaling policy for a core instance group or task instance group in an Amazon EMR cluster. The automatic scaling policy defines how an instance group dynamically adds and terminates EC2 instances in response to the value of a CloudWatch metric. See PutAutoScalingPolicy.
        CustomAmiId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The custom AMI ID to use for the provisioned instance group.
      description: 'This entity represents an instance group, which is a group of instances that have common purpose. For example, CORE instance group is used for HDFS.'
    InstanceRoleType:
      type: string
      enum:
        - MASTER
        - CORE
        - TASK
    InstanceGroupConfig:
      type: object
      required:
        - InstanceRole
        - InstanceType
        - InstanceCount
      properties:
        Name:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: Friendly name given to the instance group.
        Market:
          $ref: '#/components/schemas/MarketType'
          description: Market type of the EC2 instances used to create a cluster node.
        InstanceRole:
          $ref: '#/components/schemas/InstanceRoleType'
          description: The role of the instance group in the cluster.
        BidPrice:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: 'If specified, indicates that the instance group uses Spot Instances. This is the maximum price you are willing to pay for Spot Instances. Specify <code>OnDemandPrice</code> to set the amount equal to the On-Demand price, or specify an amount in USD.'
        InstanceType:
          $ref: '#/components/schemas/InstanceType'
          description: The EC2 instance type for all instances in the instance group.
        InstanceCount:
          $ref: '#/components/schemas/Integer'
          description: Target number of instances for the instance group.
        Configurations:
          $ref: '#/components/schemas/ConfigurationList'
          description: '<note> <p>Amazon EMR releases 4.x or later.</p> </note> <p>The list of configurations supplied for an EMR cluster instance group. You can specify a separate configuration for each instance group (master, core, and task).</p>'
        EbsConfiguration:
          $ref: '#/components/schemas/EbsConfiguration'
          description: EBS configurations that will be attached to each EC2 instance in the instance group.
        AutoScalingPolicy:
          $ref: '#/components/schemas/AutoScalingPolicy'
          description: An automatic scaling policy for a core instance group or task instance group in an Amazon EMR cluster. The automatic scaling policy defines how an instance group dynamically adds and terminates EC2 instances in response to the value of a CloudWatch metric. See <a>PutAutoScalingPolicy</a>.
        CustomAmiId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The custom AMI ID to use for the provisioned instance group.
      description: Configuration defining a new instance group.
    InstanceGroupState:
      type: string
      enum:
        - PROVISIONING
        - BOOTSTRAPPING
        - RUNNING
        - RECONFIGURING
        - RESIZING
        - SUSPENDED
        - TERMINATING
        - TERMINATED
        - ARRESTED
        - SHUTTING_DOWN
        - ENDED
    InstanceGroupDetail:
      type: object
      required:
        - Market
        - InstanceRole
        - InstanceType
        - InstanceRequestCount
        - InstanceRunningCount
        - State
        - CreationDateTime
      properties:
        InstanceGroupId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: Unique identifier for the instance group.
        Name:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: Friendly name for the instance group.
        Market:
          $ref: '#/components/schemas/MarketType'
          description: Market type of the EC2 instances used to create a cluster node.
        InstanceRole:
          $ref: '#/components/schemas/InstanceRoleType'
          description: Instance group role in the cluster
        BidPrice:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: 'If specified, indicates that the instance group uses Spot Instances. This is the maximum price you are willing to pay for Spot Instances. Specify <code>OnDemandPrice</code> to set the amount equal to the On-Demand price, or specify an amount in USD.'
        InstanceType:
          $ref: '#/components/schemas/InstanceType'
          description: EC2 instance type.
        InstanceRequestCount:
          $ref: '#/components/schemas/Integer'
          description: Target number of instances to run in the instance group.
        InstanceRunningCount:
          $ref: '#/components/schemas/Integer'
          description: Actual count of running instances.
        State:
          $ref: '#/components/schemas/InstanceGroupState'
          description: 'State of instance group. The following values are deprecated: STARTING, TERMINATED, and FAILED.'
        LastStateChangeReason:
          $ref: '#/components/schemas/XmlString'
          description: Details regarding the state of the instance group.
        CreationDateTime:
          $ref: '#/components/schemas/Date'
          description: The date/time the instance group was created.
        StartDateTime:
          $ref: '#/components/schemas/Date'
          description: The date/time the instance group was started.
        ReadyDateTime:
          $ref: '#/components/schemas/Date'
          description: The date/time the instance group was available to the cluster.
        EndDateTime:
          $ref: '#/components/schemas/Date'
          description: The date/time the instance group was terminated.
        CustomAmiId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The custom AMI ID to use for the provisioned instance group.
      description: Detailed information about an instance group.
    InstanceGroupDetailList:
      type: array
      items:
        $ref: '#/components/schemas/InstanceGroupDetail'
    InstanceGroupList:
      type: array
      items:
        $ref: '#/components/schemas/InstanceGroup'
    InstanceGroupModifyConfig:
      type: object
      required:
        - InstanceGroupId
      properties:
        InstanceGroupId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: Unique ID of the instance group to modify.
        InstanceCount:
          $ref: '#/components/schemas/Integer'
          description: Target size for the instance group.
        EC2InstanceIdsToTerminate:
          $ref: '#/components/schemas/EC2InstanceIdsToTerminateList'
          description: 'The EC2 InstanceIds to terminate. After you terminate the instances, the instance group will not return to its original requested size.'
        ShrinkPolicy:
          $ref: '#/components/schemas/ShrinkPolicy'
          description: Policy for customizing shrink operations.
        Configurations:
          $ref: '#/components/schemas/ConfigurationList'
          description: A list of new or modified configurations to apply for an instance group.
      description: Modify the size or configurations of an instance group.
    InstanceGroupModifyConfigList:
      type: array
      items:
        $ref: '#/components/schemas/InstanceGroupModifyConfig'
    InstanceGroupStateChangeReasonCode:
      type: string
      enum:
        - INTERNAL_ERROR
        - VALIDATION_ERROR
        - INSTANCE_FAILURE
        - CLUSTER_TERMINATED
    InstanceGroupStateChangeReason:
      type: object
      properties:
        Code:
          $ref: '#/components/schemas/InstanceGroupStateChangeReasonCode'
          description: The programmable code for the state change reason.
        Message:
          $ref: '#/components/schemas/String'
          description: The status change reason description.
      description: The status change reason details for the instance group.
    InstanceGroupTimeline:
      type: object
      properties:
        CreationDateTime:
          $ref: '#/components/schemas/Date'
          description: The creation date and time of the instance group.
        ReadyDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time when the instance group became ready to perform tasks.
        EndDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time when the instance group terminated.
      description: The timeline of the instance group lifecycle.
    InstanceGroupTypeList:
      type: array
      items:
        $ref: '#/components/schemas/InstanceGroupType'
    InstanceList:
      type: array
      items:
        $ref: '#/components/schemas/Instance'
    InstanceResizePolicy:
      type: object
      properties:
        InstancesToTerminate:
          $ref: '#/components/schemas/EC2InstanceIdsList'
          description: Specific list of instances to be terminated when shrinking an instance group.
        InstancesToProtect:
          $ref: '#/components/schemas/EC2InstanceIdsList'
          description: Specific list of instances to be protected when shrinking an instance group.
        InstanceTerminationTimeout:
          $ref: '#/components/schemas/Integer'
          description: Decommissioning timeout override for the specific list of instances to be terminated.
      description: Custom policy for requesting termination protection or termination of specific instances when shrinking an instance group.
    InstanceState:
      type: string
      enum:
        - AWAITING_FULFILLMENT
        - PROVISIONING
        - BOOTSTRAPPING
        - RUNNING
        - TERMINATED
    InstanceStateChangeReasonCode:
      type: string
      enum:
        - INTERNAL_ERROR
        - VALIDATION_ERROR
        - INSTANCE_FAILURE
        - BOOTSTRAP_FAILURE
        - CLUSTER_TERMINATED
    InstanceStateChangeReason:
      type: object
      properties:
        Code:
          $ref: '#/components/schemas/InstanceStateChangeReasonCode'
          description: The programmable code for the state change reason.
        Message:
          $ref: '#/components/schemas/String'
          description: The status change reason description.
      description: The details of the status change reason for the instance.
    InstanceStateList:
      type: array
      items:
        $ref: '#/components/schemas/InstanceState'
    InstanceTimeline:
      type: object
      properties:
        CreationDateTime:
          $ref: '#/components/schemas/Date'
          description: The creation date and time of the instance.
        ReadyDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time when the instance was ready to perform tasks.
        EndDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time when the instance was terminated.
      description: The timeline of the instance lifecycle.
    InstanceTypeConfig:
      type: object
      required:
        - InstanceType
      properties:
        InstanceType:
          $ref: '#/components/schemas/InstanceType'
          description: 'An EC2 instance type, such as <code>m3.xlarge</code>. '
        WeightedCapacity:
          $ref: '#/components/schemas/WholeNumber'
          description: 'The number of units that a provisioned instance of this type provides toward fulfilling the target capacities defined in <a>InstanceFleetConfig</a>. This value is 1 for a master instance fleet, and must be 1 or greater for core and task instance fleets. Defaults to 1 if not specified. '
        BidPrice:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: 'The bid price for each EC2 Spot Instance type as defined by <code>InstanceType</code>. Expressed in USD. If neither <code>BidPrice</code> nor <code>BidPriceAsPercentageOfOnDemandPrice</code> is provided, <code>BidPriceAsPercentageOfOnDemandPrice</code> defaults to 100%. '
        BidPriceAsPercentageOfOnDemandPrice:
          $ref: '#/components/schemas/NonNegativeDouble'
          description: 'The bid price, as a percentage of On-Demand price, for each EC2 Spot Instance as defined by <code>InstanceType</code>. Expressed as a number (for example, 20 specifies 20%). If neither <code>BidPrice</code> nor <code>BidPriceAsPercentageOfOnDemandPrice</code> is provided, <code>BidPriceAsPercentageOfOnDemandPrice</code> defaults to 100%.'
        EbsConfiguration:
          $ref: '#/components/schemas/EbsConfiguration'
          description: 'The configuration of Amazon Elastic Block Store (Amazon EBS) attached to each instance as defined by <code>InstanceType</code>. '
        Configurations:
          $ref: '#/components/schemas/ConfigurationList'
          description: 'A configuration classification that applies when provisioning cluster instances, which can include configurations for applications and software that run on the cluster.'
        CustomAmiId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The custom AMI ID to use for the instance type.
      description: '<p>An instance type configuration for each instance type in an instance fleet, which determines the EC2 instances Amazon EMR attempts to provision to fulfill On-Demand and Spot target capacities. When you use an allocation strategy, you can include a maximum of 30 instance type configurations for a fleet. For more information about how to use an allocation strategy, see <a href="https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-fleet.html">Configure Instance Fleets</a>. Without an allocation strategy, you may specify a maximum of five instance type configurations for a fleet.</p> <note> <p>The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions.</p> </note>'
    InstanceTypeSpecification:
      type: object
      properties:
        InstanceType:
          $ref: '#/components/schemas/InstanceType'
          description: 'The EC2 instance type, for example <code>m3.xlarge</code>.'
        WeightedCapacity:
          $ref: '#/components/schemas/WholeNumber'
          description: 'The number of units that a provisioned instance of this type provides toward fulfilling the target capacities defined in <a>InstanceFleetConfig</a>. Capacity values represent performance characteristics such as vCPUs, memory, or I/O. If not specified, the default value is 1.'
        BidPrice:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The bid price for each EC2 Spot Instance type as defined by <code>InstanceType</code>. Expressed in USD.
        BidPriceAsPercentageOfOnDemandPrice:
          $ref: '#/components/schemas/NonNegativeDouble'
          description: 'The bid price, as a percentage of On-Demand price, for each EC2 Spot Instance as defined by <code>InstanceType</code>. Expressed as a number (for example, 20 specifies 20%).'
        Configurations:
          $ref: '#/components/schemas/ConfigurationList'
          description: 'A configuration classification that applies when provisioning cluster instances, which can include configurations for applications and software bundled with Amazon EMR.'
        EbsBlockDevices:
          $ref: '#/components/schemas/EbsBlockDeviceList'
          description: The configuration of Amazon Elastic Block Store (Amazon EBS) attached to each instance as defined by <code>InstanceType</code>.
        EbsOptimized:
          $ref: '#/components/schemas/BooleanObject'
          description: Evaluates to <code>TRUE</code> when the specified <code>InstanceType</code> is EBS-optimized.
        CustomAmiId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The custom AMI ID to use for the instance type.
      description: '<p>The configuration specification for each instance type in an instance fleet.</p> <note> <p>The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions.</p> </note>'
    JobFlowExecutionStatusDetail:
      type: object
      required:
        - State
        - CreationDateTime
      properties:
        State:
          $ref: '#/components/schemas/JobFlowExecutionState'
          description: The state of the job flow.
        CreationDateTime:
          $ref: '#/components/schemas/Date'
          description: The creation date and time of the job flow.
        StartDateTime:
          $ref: '#/components/schemas/Date'
          description: The start date and time of the job flow.
        ReadyDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time when the job flow was ready to start running bootstrap actions.
        EndDateTime:
          $ref: '#/components/schemas/Date'
          description: The completion date and time of the job flow.
        LastStateChangeReason:
          $ref: '#/components/schemas/XmlString'
          description: Description of the job flow last changed state.
      description: Describes the status of the cluster (job flow).
    JobFlowInstancesDetail:
      type: object
      required:
        - MasterInstanceType
        - SlaveInstanceType
        - InstanceCount
      properties:
        MasterInstanceType:
          $ref: '#/components/schemas/InstanceType'
          description: The Amazon EC2 master node instance type.
        MasterPublicDnsName:
          $ref: '#/components/schemas/XmlString'
          description: 'The DNS name of the master node. If the cluster is on a private subnet, this is the private DNS name. On a public subnet, this is the public DNS name.'
        MasterInstanceId:
          $ref: '#/components/schemas/XmlString'
          description: The Amazon EC2 instance identifier of the master node.
        SlaveInstanceType:
          $ref: '#/components/schemas/InstanceType'
          description: The Amazon EC2 core and task node instance type.
        InstanceCount:
          $ref: '#/components/schemas/Integer'
          description: 'The number of Amazon EC2 instances in the cluster. If the value is 1, the same instance serves as both the master and core and task node. If the value is greater than 1, one instance is the master node and all others are core and task nodes.'
        InstanceGroups:
          $ref: '#/components/schemas/InstanceGroupDetailList'
          description: Details about the instance groups in a cluster.
        NormalizedInstanceHours:
          $ref: '#/components/schemas/Integer'
          description: 'An approximation of the cost of the cluster, represented in m1.small/hours. This value is increased one time for every hour that an m1.small instance runs. Larger instances are weighted more heavily, so an Amazon EC2 instance that is roughly four times more expensive would result in the normalized instance hours being increased incrementally four times. This result is only an approximation and does not reflect the actual billing rate.'
        Ec2KeyName:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The name of an Amazon EC2 key pair that can be used to connect to the master node using SSH.
        Ec2SubnetId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: 'For clusters launched within Amazon Virtual Private Cloud, this is the identifier of the subnet where the cluster was launched.'
        Placement:
          $ref: '#/components/schemas/PlacementType'
          description: The Amazon EC2 Availability Zone for the cluster.
        KeepJobFlowAliveWhenNoSteps:
          $ref: '#/components/schemas/Boolean'
          description: Specifies whether the cluster should remain available after completing all steps.
        TerminationProtected:
          $ref: '#/components/schemas/Boolean'
          description: 'Specifies whether the Amazon EC2 instances in the cluster are protected from termination by API calls, user intervention, or in the event of a job-flow error.'
        HadoopVersion:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The Hadoop version for the cluster.
      description: Specify the type of Amazon EC2 instances that the cluster (job flow) runs on.
    StepDetailList:
      type: array
      items:
        $ref: '#/components/schemas/StepDetail'
    SupportedProductsList:
      type: array
      items:
        $ref: '#/components/schemas/XmlStringMaxLen256'
    JobFlowDetail:
      type: object
      required:
        - JobFlowId
        - Name
        - ExecutionStatusDetail
        - Instances
      properties:
        JobFlowId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The job flow identifier.
        Name:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The name of the job flow.
        LogUri:
          $ref: '#/components/schemas/XmlString'
          description: The location in Amazon S3 where log files for the job are stored.
        LogEncryptionKmsKeyId:
          $ref: '#/components/schemas/XmlString'
          description: 'The KMS key used for encrypting log files. This attribute is only available with EMR version 5.30.0 and later, excluding EMR 6.0.0.'
        AmiVersion:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: 'Applies only to Amazon EMR AMI versions 3.x and 2.x. For Amazon EMR releases 4.0 and later, <code>ReleaseLabel</code> is used. To specify a custom AMI, use <code>CustomAmiID</code>.'
        ExecutionStatusDetail:
          $ref: '#/components/schemas/JobFlowExecutionStatusDetail'
          description: Describes the execution status of the job flow.
        Instances:
          $ref: '#/components/schemas/JobFlowInstancesDetail'
          description: Describes the Amazon EC2 instances of the job flow.
        Steps:
          $ref: '#/components/schemas/StepDetailList'
          description: A list of steps run by the job flow.
        BootstrapActions:
          $ref: '#/components/schemas/BootstrapActionDetailList'
          description: A list of the bootstrap actions run by the job flow.
        SupportedProducts:
          $ref: '#/components/schemas/SupportedProductsList'
          description: 'A list of strings set by third-party software when the job flow is launched. If you are not using third-party software to manage the job flow, this value is empty.'
        VisibleToAllUsers:
          $ref: '#/components/schemas/Boolean'
          description: '<p>Indicates whether the cluster is visible to IAM principals in the account associated with the cluster. When <code>true</code>, IAM principals in the account can perform EMR cluster actions that their IAM policies allow. When <code>false</code>, only the IAM principal that created the cluster and the account root user can perform EMR actions, regardless of IAM permissions policies attached to other IAM principals.</p> <p>The default value is <code>true</code> if a value is not provided when creating a cluster using the EMR API <a>RunJobFlow</a> command, the CLI <a href="https://docs.aws.amazon.com/cli/latest/reference/emr/create-cluster.html">create-cluster</a> command, or the Management Console. IAM principals that are authorized to perform actions on the cluster can use the <a>SetVisibleToAllUsers</a> action to change the value on a running cluster. For more information, see <a href="https://docs.aws.amazon.com/emr/latest/ManagementGuide/security_iam_emr-with-iam.html#security_set_visible_to_all_users">Understanding the EMR Cluster VisibleToAllUsers Setting</a> in the <i>Amazon EMRManagement Guide</i>.</p>'
        JobFlowRole:
          $ref: '#/components/schemas/XmlString'
          description: The IAM role that was specified when the job flow was launched. The EC2 instances of the job flow assume this role.
        ServiceRole:
          $ref: '#/components/schemas/XmlString'
          description: The IAM role that is assumed by the Amazon EMR service to access Amazon Web Services resources on your behalf.
        AutoScalingRole:
          $ref: '#/components/schemas/XmlString'
          description: An IAM role for automatic scaling policies. The default role is <code>EMR_AutoScaling_DefaultRole</code>. The IAM role provides a way for the automatic scaling feature to get the required permissions it needs to launch and terminate EC2 instances in an instance group.
        ScaleDownBehavior:
          $ref: '#/components/schemas/ScaleDownBehavior'
          description: 'The way that individual Amazon EC2 instances terminate when an automatic scale-in activity occurs or an instance group is resized. <code>TERMINATE_AT_INSTANCE_HOUR</code> indicates that Amazon EMR terminates nodes at the instance-hour boundary, regardless of when the request to terminate the instance was submitted. This option is only available with Amazon EMR 5.1.0 and later and is the default for clusters created using that version. <code>TERMINATE_AT_TASK_COMPLETION</code> indicates that Amazon EMR adds nodes to a deny list and drains tasks from nodes before terminating the Amazon EC2 instances, regardless of the instance-hour boundary. With either behavior, Amazon EMR removes the least active nodes first and blocks instance termination if it could lead to HDFS corruption. <code>TERMINATE_AT_TASK_COMPLETION</code> available only in Amazon EMR version 4.1.0 and later, and is the default for versions of Amazon EMR earlier than 5.1.0.'
      description: A description of a cluster (job flow).
    JobFlowExecutionState:
      type: string
      enum:
        - STARTING
        - BOOTSTRAPPING
        - RUNNING
        - WAITING
        - SHUTTING_DOWN
        - TERMINATED
        - COMPLETED
        - FAILED
      description: The type of instance.
    PlacementType:
      type: object
      properties:
        AvailabilityZone:
          $ref: '#/components/schemas/XmlString'
          description: 'The Amazon EC2 Availability Zone for the cluster. <code>AvailabilityZone</code> is used for uniform instance groups, while <code>AvailabilityZones</code> (plural) is used for instance fleets.'
        AvailabilityZones:
          $ref: '#/components/schemas/XmlStringMaxLen256List'
          description: '<p>When multiple Availability Zones are specified, Amazon EMR evaluates them and launches instances in the optimal Availability Zone. <code>AvailabilityZones</code> is used for instance fleets, while <code>AvailabilityZone</code> (singular) is used for uniform instance groups.</p> <note> <p>The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions.</p> </note>'
      description: The Amazon EC2 Availability Zone configuration of the cluster (job flow).
    SecurityGroupsList:
      type: array
      items:
        $ref: '#/components/schemas/XmlStringMaxLen256'
    JobFlowInstancesConfig:
      type: object
      properties:
        MasterInstanceType:
          $ref: '#/components/schemas/InstanceType'
          description: The EC2 instance type of the master node.
        SlaveInstanceType:
          $ref: '#/components/schemas/InstanceType'
          description: The EC2 instance type of the core and task nodes.
        InstanceCount:
          $ref: '#/components/schemas/Integer'
          description: The number of EC2 instances in the cluster.
        InstanceGroups:
          $ref: '#/components/schemas/InstanceGroupConfigList'
          description: Configuration for the instance groups in a cluster.
        InstanceFleets:
          $ref: '#/components/schemas/InstanceFleetConfigList'
          description: '<note> <p>The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions.</p> </note> <p>Describes the EC2 instances and instance configurations for clusters that use the instance fleet configuration.</p>'
        Ec2KeyName:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The name of the EC2 key pair that can be used to connect to the master node using SSH as the user called "hadoop."
        Placement:
          $ref: '#/components/schemas/PlacementType'
          description: The Availability Zone in which the cluster runs.
        KeepJobFlowAliveWhenNoSteps:
          $ref: '#/components/schemas/Boolean'
          description: 'Specifies whether the cluster should remain available after completing all steps. Defaults to <code>true</code>. For more information about configuring cluster termination, see <a href="https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-plan-termination.html">Control Cluster Termination</a> in the <i>EMR Management Guide</i>.'
        TerminationProtected:
          $ref: '#/components/schemas/Boolean'
          description: 'Specifies whether to lock the cluster to prevent the Amazon EC2 instances from being terminated by API call, user intervention, or in the event of a job-flow error.'
        HadoopVersion:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: 'Applies only to Amazon EMR release versions earlier than 4.0. The Hadoop version for the cluster. Valid inputs are "0.18" (no longer maintained), "0.20" (no longer maintained), "0.20.205" (no longer maintained), "1.0.3", "2.2.0", or "2.4.0". If you do not set this value, the default of 0.18 is used, unless the <code>AmiVersion</code> parameter is set in the RunJobFlow call, in which case the default version of Hadoop for that AMI version is used.'
        Ec2SubnetId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: 'Applies to clusters that use the uniform instance group configuration. To launch the cluster in Amazon Virtual Private Cloud (Amazon VPC), set this parameter to the identifier of the Amazon VPC subnet where you want the cluster to launch. If you do not specify this value and your account supports EC2-Classic, the cluster launches in EC2-Classic.'
        Ec2SubnetIds:
          $ref: '#/components/schemas/XmlStringMaxLen256List'
          description: '<p>Applies to clusters that use the instance fleet configuration. When multiple EC2 subnet IDs are specified, Amazon EMR evaluates them and launches instances in the optimal subnet.</p> <note> <p>The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions.</p> </note>'
        EmrManagedMasterSecurityGroup:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: 'The identifier of the Amazon EC2 security group for the master node. If you specify <code>EmrManagedMasterSecurityGroup</code>, you must also specify <code>EmrManagedSlaveSecurityGroup</code>.'
        EmrManagedSlaveSecurityGroup:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: 'The identifier of the Amazon EC2 security group for the core and task nodes. If you specify <code>EmrManagedSlaveSecurityGroup</code>, you must also specify <code>EmrManagedMasterSecurityGroup</code>.'
        ServiceAccessSecurityGroup:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The identifier of the Amazon EC2 security group for the Amazon EMR service to access clusters in VPC private subnets.
        AdditionalMasterSecurityGroups:
          $ref: '#/components/schemas/SecurityGroupsList'
          description: A list of additional Amazon EC2 security group IDs for the master node.
        AdditionalSlaveSecurityGroups:
          $ref: '#/components/schemas/SecurityGroupsList'
          description: A list of additional Amazon EC2 security group IDs for the core and task nodes.
      description: 'A description of the Amazon EC2 instance on which the cluster (job flow) runs. A valid JobFlowInstancesConfig must contain either InstanceGroups or InstanceFleets. They cannot be used together. You may also have MasterInstanceType, SlaveInstanceType, and InstanceCount (all three must be present), but we don''t recommend this configuration.'
    KeyValue:
      type: object
      properties:
        Key:
          $ref: '#/components/schemas/XmlString'
          description: The unique identifier of a key-value pair.
        Value:
          $ref: '#/components/schemas/XmlString'
          description: The value part of the identified key.
      description: A key-value pair.
    Marker:
      type: string
    NotebookExecutionStatus:
      type: string
      enum:
        - START_PENDING
        - STARTING
        - RUNNING
        - FINISHING
        - FINISHED
        - FAILING
        - FAILED
        - STOP_PENDING
        - STOPPING
        - STOPPED
    NotebookExecutionSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/NotebookExecutionSummary'
    ReleaseLabelFilter:
      type: object
      properties:
        Prefix:
          $ref: '#/components/schemas/String'
          description: 'Optional release label version prefix filter. For example, <code>emr-5</code>.'
        Application:
          $ref: '#/components/schemas/String'
          description: 'Optional release label application filter. For example, <code>spark@2.1.0</code>.'
      description: The release label filters by application or version prefix.
    SecurityConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/SecurityConfigurationSummary'
    StepStateList:
      type: array
      items:
        $ref: '#/components/schemas/StepState'
    StepSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/StepSummary'
    SessionMappingSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/SessionMappingSummary'
    StudioSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/StudioSummary'
    MetricDimension:
      type: object
      properties:
        Key:
          $ref: '#/components/schemas/String'
          description: The dimension name.
        Value:
          $ref: '#/components/schemas/String'
          description: The dimension value.
      description: 'A CloudWatch dimension, which is specified using a <code>Key</code> (known as a <code>Name</code> in CloudWatch), <code>Value</code> pair. By default, Amazon EMR uses one dimension whose <code>Key</code> is <code>JobFlowID</code> and <code>Value</code> is a variable representing the cluster ID, which is <code>${emr.clusterId}</code>. This enables the rule to bootstrap when the cluster ID becomes available.'
    SupportedProductConfig:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The name of the product configuration.
        Args:
          $ref: '#/components/schemas/XmlStringList'
          description: The list of user-supplied arguments.
      description: The list of supported product configurations that allow user-supplied arguments. EMR accepts these arguments and forwards them to the corresponding installation script as bootstrap action arguments.
    NewSupportedProductsList:
      type: array
      items:
        $ref: '#/components/schemas/SupportedProductConfig'
    NotebookExecutionSummary:
      type: object
      properties:
        NotebookExecutionId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The unique identifier of the notebook execution.
        EditorId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The unique identifier of the editor associated with the notebook execution.
        NotebookExecutionName:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The name of the notebook execution.
        Status:
          $ref: '#/components/schemas/NotebookExecutionStatus'
          description: <p>The status of the notebook execution.</p> <ul> <li> <p> <code>START_PENDING</code> indicates that the cluster has received the execution request but execution has not begun.</p> </li> <li> <p> <code>STARTING</code> indicates that the execution is starting on the cluster.</p> </li> <li> <p> <code>RUNNING</code> indicates that the execution is being processed by the cluster.</p> </li> <li> <p> <code>FINISHING</code> indicates that execution processing is in the final stages.</p> </li> <li> <p> <code>FINISHED</code> indicates that the execution has completed without error.</p> </li> <li> <p> <code>FAILING</code> indicates that the execution is failing and will not finish successfully.</p> </li> <li> <p> <code>FAILED</code> indicates that the execution failed.</p> </li> <li> <p> <code>STOP_PENDING</code> indicates that the cluster has received a <code>StopNotebookExecution</code> request and the stop is pending.</p> </li> <li> <p> <code>STOPPING</code> indicates that the cluster is in the process of stopping the execution as a result of a <code>StopNotebookExecution</code> request.</p> </li> <li> <p> <code>STOPPED</code> indicates that the execution stopped because of a <code>StopNotebookExecution</code> request.</p> </li> </ul>
        StartTime:
          $ref: '#/components/schemas/Date'
          description: The timestamp when notebook execution started.
        EndTime:
          $ref: '#/components/schemas/Date'
          description: The timestamp when notebook execution started.
      description: Details for a notebook execution. The details include information such as the unique ID and status of the notebook execution.
    OnDemandCapacityReservationUsageStrategy:
      type: string
      enum:
        - use-capacity-reservations-first
    OnDemandCapacityReservationPreference:
      type: string
      enum:
        - open
        - none
    OnDemandCapacityReservationOptions:
      type: object
      properties:
        UsageStrategy:
          $ref: '#/components/schemas/OnDemandCapacityReservationUsageStrategy'
          description: '<p>Indicates whether to use unused Capacity Reservations for fulfilling On-Demand capacity.</p> <p>If you specify <code>use-capacity-reservations-first</code>, the fleet uses unused Capacity Reservations to fulfill On-Demand capacity up to the target On-Demand capacity. If multiple instance pools have unused Capacity Reservations, the On-Demand allocation strategy (<code>lowest-price</code>) is applied. If the number of unused Capacity Reservations is less than the On-Demand target capacity, the remaining On-Demand target capacity is launched according to the On-Demand allocation strategy (<code>lowest-price</code>).</p> <p>If you do not specify a value, the fleet fulfills the On-Demand capacity according to the chosen On-Demand allocation strategy.</p>'
        CapacityReservationPreference:
          $ref: '#/components/schemas/OnDemandCapacityReservationPreference'
          description: '<p>Indicates the instance''s Capacity Reservation preferences. Possible preferences include:</p> <ul> <li> <p> <code>open</code> - The instance can run in any open Capacity Reservation that has matching attributes (instance type, platform, Availability Zone).</p> </li> <li> <p> <code>none</code> - The instance avoids running in a Capacity Reservation even if one is available. The instance runs as an On-Demand Instance.</p> </li> </ul>'
        CapacityReservationResourceGroupArn:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The ARN of the Capacity Reservation resource group in which to run the instance.
      description: Describes the strategy for using unused Capacity Reservations for fulfilling On-Demand capacity.
    OnDemandProvisioningAllocationStrategy:
      type: string
      enum:
        - lowest-price
    PlacementGroupStrategy:
      type: string
      enum:
        - SPREAD
        - PARTITION
        - CLUSTER
        - NONE
    PlacementGroupConfig:
      type: object
      required:
        - InstanceRole
      properties:
        InstanceRole:
          $ref: '#/components/schemas/InstanceRoleType'
          description: '<p>Role of the instance in the cluster.</p> <p>Starting with Amazon EMR version 5.23.0, the only supported instance role is <code>MASTER</code>.</p>'
        PlacementStrategy:
          $ref: '#/components/schemas/PlacementGroupStrategy'
          description: '<p>EC2 Placement Group strategy associated with instance role.</p> <p>Starting with Amazon EMR version 5.23.0, the only supported placement strategy is <code>SPREAD</code> for the <code>MASTER</code> instance role.</p>'
      description: '<p>Placement group configuration for an Amazon EMR cluster. The configuration specifies the placement strategy that can be applied to instance roles during cluster creation.</p> <p>To use this configuration, consider attaching managed policy AmazonElasticMapReducePlacementGroupPolicy to the EMR role.</p>'
    Port:
      type: integer
      minimum: -1
      maximum: 65535
    PortRange:
      type: object
      required:
        - MinRange
      properties:
        MinRange:
          $ref: '#/components/schemas/Port'
          description: The smallest port number in a specified range of port numbers.
        MaxRange:
          $ref: '#/components/schemas/Port'
          description: The smallest port number in a specified range of port numbers.
      description: 'A list of port ranges that are permitted to allow inbound traffic from all public IP addresses. To specify a single port, use the same value for <code>MinRange</code> and <code>MaxRange</code>.'
    SimpleScalingPolicyConfiguration:
      type: object
      required:
        - ScalingAdjustment
      properties:
        AdjustmentType:
          $ref: '#/components/schemas/AdjustmentType'
          description: 'The way in which EC2 instances are added (if <code>ScalingAdjustment</code> is a positive number) or terminated (if <code>ScalingAdjustment</code> is a negative number) each time the scaling activity is triggered. <code>CHANGE_IN_CAPACITY</code> is the default. <code>CHANGE_IN_CAPACITY</code> indicates that the EC2 instance count increments or decrements by <code>ScalingAdjustment</code>, which should be expressed as an integer. <code>PERCENT_CHANGE_IN_CAPACITY</code> indicates the instance count increments or decrements by the percentage specified by <code>ScalingAdjustment</code>, which should be expressed as an integer. For example, 20 indicates an increase in 20% increments of cluster capacity. <code>EXACT_CAPACITY</code> indicates the scaling activity results in an instance group with the number of EC2 instances specified by <code>ScalingAdjustment</code>, which should be expressed as a positive integer.'
        ScalingAdjustment:
          $ref: '#/components/schemas/Integer'
          description: 'The amount by which to scale in or scale out, based on the specified <code>AdjustmentType</code>. A positive value adds to the instance group''s EC2 instance count while a negative number removes instances. If <code>AdjustmentType</code> is set to <code>EXACT_CAPACITY</code>, the number should only be a positive integer. If <code>AdjustmentType</code> is set to <code>PERCENT_CHANGE_IN_CAPACITY</code>, the value should express the percentage as an integer. For example, -20 indicates a decrease in 20% increments of cluster capacity.'
        CoolDown:
          $ref: '#/components/schemas/Integer'
          description: 'The amount of time, in seconds, after a scaling activity completes before any further trigger-related scaling activities can start. The default value is 0.'
      description: 'An automatic scaling configuration, which describes how the policy adds or removes instances, the cooldown period, and the number of EC2 instances that will be added each time the CloudWatch metric alarm condition is satisfied.'
    ScalingAction:
      type: object
      required:
        - SimpleScalingPolicyConfiguration
      properties:
        Market:
          $ref: '#/components/schemas/MarketType'
          description: Not available for instance groups. Instance groups use the market type specified for the group.
        SimpleScalingPolicyConfiguration:
          $ref: '#/components/schemas/SimpleScalingPolicyConfiguration'
          description: 'The type of adjustment the automatic scaling activity makes when triggered, and the periodicity of the adjustment.'
      description: 'The type of adjustment the automatic scaling activity makes when triggered, and the periodicity of the adjustment.'
    ScalingTrigger:
      type: object
      required:
        - CloudWatchAlarmDefinition
      properties:
        CloudWatchAlarmDefinition:
          $ref: '#/components/schemas/CloudWatchAlarmDefinition'
          description: 'The definition of a CloudWatch metric alarm. When the defined alarm conditions are met along with other trigger parameters, scaling activity begins.'
      description: The conditions that trigger an automatic scaling activity.
    ScalingRule:
      type: object
      required:
        - Name
        - Action
        - Trigger
      properties:
        Name:
          $ref: '#/components/schemas/String'
          description: The name used to identify an automatic scaling rule. Rule names must be unique within a scaling policy.
        Description:
          $ref: '#/components/schemas/String'
          description: 'A friendly, more verbose description of the automatic scaling rule.'
        Action:
          $ref: '#/components/schemas/ScalingAction'
          description: The conditions that trigger an automatic scaling activity.
        Trigger:
          $ref: '#/components/schemas/ScalingTrigger'
          description: The CloudWatch alarm definition that determines when automatic scaling activity is triggered.
      description: 'A scale-in or scale-out rule that defines scaling activity, including the CloudWatch metric alarm that triggers activity, how EC2 instances are added or removed, and the periodicity of adjustments. The automatic scaling policy for an instance group can comprise one or more automatic scaling rules.'
    SecurityConfigurationSummary:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/XmlString'
          description: The name of the security configuration.
        CreationDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time the security configuration was created.
      description: 'The creation date and time, and name, of a security configuration.'
    SessionMappingSummary:
      type: object
      properties:
        StudioId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The ID of the Amazon EMR Studio.
        IdentityId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The globally unique identifier (GUID) of the user or group from the Amazon Web Services SSO Identity Store.
        IdentityName:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: 'The name of the user or group. For more information, see <a href="https://docs.aws.amazon.com/singlesignon/latest/IdentityStoreAPIReference/API_User.html#singlesignon-Type-User-UserName">UserName</a> and <a href="https://docs.aws.amazon.com/singlesignon/latest/IdentityStoreAPIReference/API_Group.html#singlesignon-Type-Group-DisplayName">DisplayName</a> in the <i>Amazon Web Services SSO Identity Store API Reference</i>.'
        IdentityType:
          $ref: '#/components/schemas/IdentityType'
          description: Specifies whether the identity mapped to the Amazon EMR Studio is a user or a group.
        SessionPolicyArn:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The Amazon Resource Name (ARN) of the session policy associated with the user or group.
        CreationTime:
          $ref: '#/components/schemas/Date'
          description: The time the session mapping was created.
      description: Details for an Amazon EMR Studio session mapping. The details do not include the time the session mapping was last modified.
    SimplifiedApplication:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/String'
          description: 'The returned release label application name. For example, <code>hadoop</code>.'
        Version:
          $ref: '#/components/schemas/String'
          description: 'The returned release label application version. For example, <code>3.2.1</code>.'
      description: The returned release label application names or versions.
    SpotProvisioningAllocationStrategy:
      type: string
      enum:
        - capacity-optimized
    SpotProvisioningTimeoutAction:
      type: string
      enum:
        - SWITCH_TO_ON_DEMAND
        - TERMINATE_CLUSTER
    StepStatus:
      type: object
      properties:
        State:
          $ref: '#/components/schemas/StepState'
          description: The execution state of the cluster step.
        StateChangeReason:
          $ref: '#/components/schemas/StepStateChangeReason'
          description: The reason for the step execution status change.
        FailureDetails:
          $ref: '#/components/schemas/FailureDetails'
          description: 'The details for the step failure including reason, message, and log file path where the root cause was identified.'
        Timeline:
          $ref: '#/components/schemas/StepTimeline'
          description: The timeline of the cluster step status over time.
      description: The execution status details of the cluster step.
    StepConfig:
      type: object
      required:
        - Name
        - HadoopJarStep
      properties:
        Name:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The name of the step.
        ActionOnFailure:
          $ref: '#/components/schemas/ActionOnFailure'
          description: '<p>The action to take when the step fails. Use one of the following values:</p> <ul> <li> <p> <code>TERMINATE_CLUSTER</code> - Shuts down the cluster.</p> </li> <li> <p> <code>CANCEL_AND_WAIT</code> - Cancels any pending steps and returns the cluster to the <code>WAITING</code> state.</p> </li> <li> <p> <code>CONTINUE</code> - Continues to the next step in the queue.</p> </li> <li> <p> <code>TERMINATE_JOB_FLOW</code> - Shuts down the cluster. <code>TERMINATE_JOB_FLOW</code> is provided for backward compatibility. We recommend using <code>TERMINATE_CLUSTER</code> instead.</p> </li> </ul> <p>If a cluster''s <code>StepConcurrencyLevel</code> is greater than <code>1</code>, do not use <code>AddJobFlowSteps</code> to submit a step with this parameter set to <code>CANCEL_AND_WAIT</code> or <code>TERMINATE_CLUSTER</code>. The step is not submitted and the action fails with a message that the <code>ActionOnFailure</code> setting is not valid.</p> <p>If you change a cluster''s <code>StepConcurrencyLevel</code> to be greater than 1 while a step is running, the <code>ActionOnFailure</code> parameter may not behave as you expect. In this case, for a step that fails with this parameter set to <code>CANCEL_AND_WAIT</code>, pending steps and the running step are not canceled; for a step that fails with this parameter set to <code>TERMINATE_CLUSTER</code>, the cluster does not terminate.</p>'
        HadoopJarStep:
          $ref: '#/components/schemas/HadoopJarStepConfig'
          description: The JAR file used for the step.
      description: Specification for a cluster (job flow) step.
    StepExecutionStatusDetail:
      type: object
      required:
        - State
        - CreationDateTime
      properties:
        State:
          $ref: '#/components/schemas/StepExecutionState'
          description: The state of the step.
        CreationDateTime:
          $ref: '#/components/schemas/Date'
          description: The creation date and time of the step.
        StartDateTime:
          $ref: '#/components/schemas/Date'
          description: The start date and time of the step.
        EndDateTime:
          $ref: '#/components/schemas/Date'
          description: The completion date and time of the step.
        LastStateChangeReason:
          $ref: '#/components/schemas/XmlString'
          description: A description of the step's current state.
      description: The execution state of a step.
    StepDetail:
      type: object
      required:
        - StepConfig
        - ExecutionStatusDetail
      properties:
        StepConfig:
          $ref: '#/components/schemas/StepConfig'
          description: The step configuration.
        ExecutionStatusDetail:
          $ref: '#/components/schemas/StepExecutionStatusDetail'
          description: The description of the step status.
      description: Combines the execution state and configuration of a step.
    StepExecutionState:
      type: string
      enum:
        - PENDING
        - RUNNING
        - CONTINUE
        - COMPLETED
        - CANCELLED
        - FAILED
        - INTERRUPTED
    StepState:
      type: string
      enum:
        - PENDING
        - CANCEL_PENDING
        - RUNNING
        - COMPLETED
        - CANCELLED
        - FAILED
        - INTERRUPTED
    StepStateChangeReasonCode:
      type: string
      enum:
        - NONE
    StepStateChangeReason:
      type: object
      properties:
        Code:
          $ref: '#/components/schemas/StepStateChangeReasonCode'
          description: 'The programmable code for the state change reason. Note: Currently, the service provides no code for the state change.'
        Message:
          $ref: '#/components/schemas/String'
          description: The descriptive message for the state change reason.
      description: The details of the step state change reason.
    StepTimeline:
      type: object
      properties:
        CreationDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time when the cluster step was created.
        StartDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time when the cluster step execution started.
        EndDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time when the cluster step execution completed or failed.
      description: The timeline of the cluster step lifecycle.
    StepSummary:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/StepId'
          description: The identifier of the cluster step.
        Name:
          $ref: '#/components/schemas/String'
          description: The name of the cluster step.
        Config:
          $ref: '#/components/schemas/HadoopStepConfig'
          description: The Hadoop job configuration of the cluster step.
        ActionOnFailure:
          $ref: '#/components/schemas/ActionOnFailure'
          description: 'The action to take when the cluster step fails. Possible values are TERMINATE_CLUSTER, CANCEL_AND_WAIT, and CONTINUE. TERMINATE_JOB_FLOW is available for backward compatibility.'
        Status:
          $ref: '#/components/schemas/StepStatus'
          description: The current execution status details of the cluster step.
      description: The summary of the cluster step.
    StudioSummary:
      type: object
      properties:
        StudioId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The ID of the Amazon EMR Studio.
        Name:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The name of the Amazon EMR Studio.
        VpcId:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The ID of the Virtual Private Cloud (Amazon VPC) associated with the Amazon EMR Studio.
        Description:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The detailed description of the Amazon EMR Studio.
        Url:
          $ref: '#/components/schemas/XmlStringMaxLen256'
          description: The unique access URL of the Amazon EMR Studio.
        CreationTime:
          $ref: '#/components/schemas/Date'
          description: The time when the Amazon EMR Studio was created.
      description: 'Details for an Amazon EMR Studio, including ID, Name, VPC, and Description. The details do not include subnets, IAM roles, security groups, or tags associated with the Studio.'
    Tag:
      type: object
      properties:
        Key:
          $ref: '#/components/schemas/String'
          description: 'A user-defined key, which is the minimum required information for a valid tag. For more information, see <a href="https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-plan-tags.html">Tag </a>. '
        Value:
          $ref: '#/components/schemas/String'
          description: 'A user-defined value, which is optional in a tag. For more information, see <a href="https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-plan-tags.html">Tag Clusters</a>. '
      description: 'A key-value pair containing user-defined metadata that you can associate with an Amazon EMR resource. Tags make it easier to associate clusters in various ways, such as grouping clusters to track your Amazon EMR resource allocation costs. For more information, see <a href="https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-plan-tags.html">Tag Clusters</a>. '
security:
  - hmac: []
