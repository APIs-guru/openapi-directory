openapi: 3.0.0
info:
  version: '2016-05-10'
  x-release: v4
  title: Amazon CloudDirectory
  description: '<fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about AWS Directory Services features, see <a href="https://aws.amazon.com/directoryservice/">AWS Directory Service</a> and the <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/what_is.html">AWS Directory Service Administration Guide</a>.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: clouddirectory
  x-aws-signingName: clouddirectory
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/clouddirectory-2016-05-10.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/clouddirectory/'
servers:
  - url: 'http://clouddirectory.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon CloudDirectory multi-region endpoint
  - url: 'https://clouddirectory.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon CloudDirectory multi-region endpoint
  - url: 'http://clouddirectory.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon CloudDirectory endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://clouddirectory.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon CloudDirectory endpoint for China (Beijing) and China (Ningxia)
paths:
  /amazonclouddirectory/2017-01-11/object/facets#x-amz-data-partition:
    put:
      operationId: AddFacetToObject
      description: Adds a new <a>Facet</a> to an object. An object can have more than one facet applied on it.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddFacetToObjectResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '488':
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: 'The Amazon Resource Name (ARN) that is associated with the <a>Directory</a> where the object resides. For more information, see <a>arns</a>.'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - SchemaFacet
                - ObjectReference
              properties:
                SchemaFacet:
                  description: A facet.
                  type: object
                  properties:
                    SchemaArn:
                      $ref: '#/components/schemas/Arn'
                      description: 'The ARN of the schema that contains the facet with no minor component. See <a>arns</a> and <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/inplaceschemaupgrade.html">In-Place Schema Upgrade</a> for a description of when to provide minor versions.'
                    FacetName:
                      $ref: '#/components/schemas/FacetName'
                      description: The name of the facet.
                ObjectAttributeList:
                  description: Attributes on the facet that you are adding to the object.
                  type: array
                  items:
                    $ref: '#/components/schemas/AttributeKeyAndValue'
                ObjectReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: '#/components/schemas/SelectorObjectReference'
                      description: '<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#accessingobjects">Accessing Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/schema/apply#x-amz-data-partition:
    put:
      operationId: ApplySchema
      description: 'Copies the input published schema, at the specified version, into the <a>Directory</a> with the same name and version as that of the published schema.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplySchemaResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: InvalidAttachmentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAttachmentException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: 'The Amazon Resource Name (ARN) that is associated with the <a>Directory</a> into which the schema is copied. For more information, see <a>arns</a>.'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - PublishedSchemaArn
              properties:
                PublishedSchemaArn:
                  description: 'Published schema Amazon Resource Name (ARN) that needs to be copied. For more information, see <a>arns</a>.'
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/object/attach#x-amz-data-partition:
    put:
      operationId: AttachObject
      description: '<p>Attaches an existing object to another object. An object can be accessed in two ways:</p> <ol> <li> <p>Using the path</p> </li> <li> <p>Using <code>ObjectIdentifier</code> </p> </li> </ol>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachObjectResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '488':
          description: LinkNameAlreadyInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkNameAlreadyInUseException'
        '489':
          description: InvalidAttachmentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAttachmentException'
        '490':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '491':
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: 'Amazon Resource Name (ARN) that is associated with the <a>Directory</a> where both objects reside. For more information, see <a>arns</a>.'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ParentReference
                - ChildReference
                - LinkName
              properties:
                ParentReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: '#/components/schemas/SelectorObjectReference'
                      description: '<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#accessingobjects">Accessing Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>'
                ChildReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: '#/components/schemas/SelectorObjectReference'
                      description: '<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#accessingobjects">Accessing Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>'
                LinkName:
                  description: The link name with which the child object is attached to the parent.
                  type: string
                  pattern: '[^\/\[\]\(\):\{\}#@!?\s\\;]+'
                  minLength: 1
                  maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/policy/attach#x-amz-data-partition:
    put:
      operationId: AttachPolicy
      description: Attaches a policy object to a regular object. An object can have a limited number of attached policies.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachPolicyResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '488':
          description: NotPolicyException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotPolicyException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: 'The Amazon Resource Name (ARN) that is associated with the <a>Directory</a> where both objects reside. For more information, see <a>arns</a>.'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - PolicyReference
                - ObjectReference
              properties:
                PolicyReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: '#/components/schemas/SelectorObjectReference'
                      description: '<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#accessingobjects">Accessing Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>'
                ObjectReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: '#/components/schemas/SelectorObjectReference'
                      description: '<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#accessingobjects">Accessing Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/index/attach#x-amz-data-partition:
    put:
      operationId: AttachToIndex
      description: Attaches the specified object to the specified index.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachToIndexResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: InvalidAttachmentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAttachmentException'
        '488':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '489':
          description: LinkNameAlreadyInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkNameAlreadyInUseException'
        '490':
          description: IndexedAttributeMissingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndexedAttributeMissingException'
        '491':
          description: NotIndexException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotIndexException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The Amazon Resource Name (ARN) of the directory where the object and index exist.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - IndexReference
                - TargetReference
              properties:
                IndexReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: '#/components/schemas/SelectorObjectReference'
                      description: '<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#accessingobjects">Accessing Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>'
                TargetReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: '#/components/schemas/SelectorObjectReference'
                      description: '<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#accessingobjects">Accessing Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/typedlink/attach#x-amz-data-partition:
    put:
      operationId: AttachTypedLink
      description: 'Attaches a typed link to a specified source and target object. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachTypedLinkResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '488':
          description: InvalidAttachmentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAttachmentException'
        '489':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '490':
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The Amazon Resource Name (ARN) of the directory where you want to attach the typed link.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - SourceObjectReference
                - TargetObjectReference
                - TypedLinkFacet
                - Attributes
              properties:
                SourceObjectReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: '#/components/schemas/SelectorObjectReference'
                      description: '<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#accessingobjects">Accessing Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>'
                TargetObjectReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: '#/components/schemas/SelectorObjectReference'
                      description: '<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#accessingobjects">Accessing Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>'
                TypedLinkFacet:
                  description: Identifies the schema Amazon Resource Name (ARN) and facet name for the typed link.
                  type: object
                  properties:
                    SchemaArn:
                      $ref: '#/components/schemas/Arn'
                      description: 'The Amazon Resource Name (ARN) that is associated with the schema. For more information, see <a>arns</a>.'
                    TypedLinkName:
                      $ref: '#/components/schemas/TypedLinkName'
                      description: The unique name of the typed link facet.
                Attributes:
                  description: A set of attributes that are associated with the typed link.
                  type: array
                  items:
                    $ref: '#/components/schemas/AttributeNameAndValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/batchread#x-amz-data-partition:
    post:
      operationId: BatchRead
      description: 'Performs all the read operations in a batch. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchReadResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: 'The Amazon Resource Name (ARN) that is associated with the <a>Directory</a>. For more information, see <a>arns</a>.'
          schema:
            type: string
        - name: x-amz-consistency-level
          in: header
          required: false
          description: Represents the manner and timing in which the successful write or update of an object is reflected in a subsequent read operation of that same object.
          schema:
            type: string
            enum:
              - SERIALIZABLE
              - EVENTUAL
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Operations
              properties:
                Operations:
                  description: A list of operations that are part of the batch.
                  type: array
                  items:
                    $ref: '#/components/schemas/BatchReadOperation'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/batchwrite#x-amz-data-partition:
    put:
      operationId: BatchWrite
      description: Performs all the write operations in a batch. Either all the operations succeed or none.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchWriteResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: BatchWriteException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchWriteException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: 'The Amazon Resource Name (ARN) that is associated with the <a>Directory</a>. For more information, see <a>arns</a>.'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Operations
              properties:
                Operations:
                  description: A list of operations that are part of the batch.
                  type: array
                  items:
                    $ref: '#/components/schemas/BatchWriteOperation'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/directory/create#x-amz-data-partition:
    put:
      operationId: CreateDirectory
      description: Creates a <a>Directory</a> by copying the published schema into the directory. A directory cannot be created without a schema.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDirectoryResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryAlreadyExistsException'
        '487':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: 'The Amazon Resource Name (ARN) of the published schema that will be copied into the data <a>Directory</a>. For more information, see <a>arns</a>.'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
              properties:
                Name:
                  description: 'The name of the <a>Directory</a>. Should be unique per account, per region.'
                  type: string
                  pattern: '^[a-zA-Z0-9._-]*$'
                  minLength: 1
                  maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/facet/create#x-amz-data-partition:
    put:
      operationId: CreateFacet
      description: Creates a new <a>Facet</a> in a schema. Facet creation is allowed only in development or applied schemas.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFacetResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: FacetAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetAlreadyExistsException'
        '488':
          description: InvalidRuleException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRuleException'
        '489':
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: 'The schema ARN in which the new <a>Facet</a> will be created. For more information, see <a>arns</a>.'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
                - ObjectType
              properties:
                Name:
                  description: 'The name of the <a>Facet</a>, which is unique for a given schema.'
                  type: string
                  pattern: '^[a-zA-Z0-9._-]*$'
                  minLength: 1
                  maxLength: 64
                Attributes:
                  description: The attributes that are associated with the <a>Facet</a>.
                  type: array
                  items:
                    $ref: '#/components/schemas/FacetAttribute'
                ObjectType:
                  description: '<p>Specifies whether a given object created from this facet is of type node, leaf node, policy or index.</p> <ul> <li> <p>Node: Can have multiple children but one parent.</p> </li> </ul> <ul> <li> <p>Leaf node: Cannot have children but can have multiple parents.</p> </li> </ul> <ul> <li> <p>Policy: Allows you to store a policy document and policy type. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_key_concepts.html#policies">Policies</a>.</p> </li> </ul> <ul> <li> <p>Index: Can be created with the Index API.</p> </li> </ul>'
                  type: string
                  enum:
                    - NODE
                    - LEAF_NODE
                    - POLICY
                    - INDEX
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/index#x-amz-data-partition:
    put:
      operationId: CreateIndex
      description: 'Creates an index object. See <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_indexing.html">Indexing</a> for more information.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateIndexResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '488':
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
        '489':
          description: LinkNameAlreadyInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkNameAlreadyInUseException'
        '490':
          description: UnsupportedIndexTypeException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedIndexTypeException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The ARN of the directory where the index should be created.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - OrderedIndexedAttributeList
                - IsUnique
              properties:
                OrderedIndexedAttributeList:
                  description: Specifies the attributes that should be indexed on. Currently only a single attribute is supported.
                  type: array
                  items:
                    $ref: '#/components/schemas/AttributeKey'
                IsUnique:
                  description: Indicates whether the attribute that is being indexed has unique values or not.
                  type: boolean
                ParentReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: '#/components/schemas/SelectorObjectReference'
                      description: '<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#accessingobjects">Accessing Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>'
                LinkName:
                  description: The name of the link between the parent object and the index object.
                  type: string
                  pattern: '[^\/\[\]\(\):\{\}#@!?\s\\;]+'
                  minLength: 1
                  maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/object#x-amz-data-partition:
    put:
      operationId: CreateObject
      description: 'Creates an object in a <a>Directory</a>. Additionally attaches the object to a parent, if a parent reference and <code>LinkName</code> is specified. An object is simply a collection of <a>Facet</a> attributes. You can also use this API call to create a policy object, if the facet from which you create the object is a policy facet. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateObjectResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '488':
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
        '489':
          description: LinkNameAlreadyInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkNameAlreadyInUseException'
        '490':
          description: UnsupportedIndexTypeException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedIndexTypeException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: 'The Amazon Resource Name (ARN) that is associated with the <a>Directory</a> in which the object will be created. For more information, see <a>arns</a>.'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - SchemaFacets
              properties:
                SchemaFacets:
                  description: A list of schema facets to be associated with the object. Do not provide minor version components. See <a>SchemaFacet</a> for details.
                  type: array
                  items:
                    $ref: '#/components/schemas/SchemaFacet'
                ObjectAttributeList:
                  description: The attribute map whose attribute ARN contains the key and attribute value as the map value.
                  type: array
                  items:
                    $ref: '#/components/schemas/AttributeKeyAndValue'
                ParentReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: '#/components/schemas/SelectorObjectReference'
                      description: '<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#accessingobjects">Accessing Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>'
                LinkName:
                  description: The name of link that is used to attach this object to a parent.
                  type: string
                  pattern: '[^\/\[\]\(\):\{\}#@!?\s\\;]+'
                  minLength: 1
                  maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/schema/create:
    put:
      operationId: CreateSchema
      description: '<p>Creates a new schema in a development state. A schema can exist in three phases:</p> <ul> <li> <p> <i>Development:</i> This is a mutable phase of the schema. All new schemas are in the development phase. Once the schema is finalized, it can be published.</p> </li> <li> <p> <i>Published:</i> Published schemas are immutable and have a version associated with them.</p> </li> <li> <p> <i>Applied:</i> Applied schemas are mutable in a way that allows you to add new schema facets. You can also add new, nonrequired attributes to existing schema facets. You can apply only published schemas to directories. </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSchemaResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: SchemaAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaAlreadyExistsException'
        '487':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
              properties:
                Name:
                  description: The name that is associated with the schema. This is unique to each account and in each region.
                  type: string
                  pattern: '^[a-zA-Z0-9._-]*$'
                  minLength: 1
                  maxLength: 32
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/typedlink/facet/create#x-amz-data-partition:
    put:
      operationId: CreateTypedLinkFacet
      description: 'Creates a <a>TypedLinkFacet</a>. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTypedLinkFacetResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: FacetAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetAlreadyExistsException'
        '488':
          description: InvalidRuleException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRuleException'
        '489':
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: 'The Amazon Resource Name (ARN) that is associated with the schema. For more information, see <a>arns</a>.'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Facet
              properties:
                Facet:
                  description: 'Defines the typed links structure and its attributes. To create a typed link facet, use the <a>CreateTypedLinkFacet</a> API.'
                  type: object
                  properties:
                    Name:
                      $ref: '#/components/schemas/TypedLinkName'
                      description: The unique name of the typed link facet.
                    Attributes:
                      $ref: '#/components/schemas/TypedLinkAttributeDefinitionList'
                      description: 'A set of key-value pairs associated with the typed link. Typed link attributes are used when you have data values that are related to the link itself, and not to one of the two objects being linked. Identity attributes also serve to distinguish the link from others of the same type between the same objects.'
                    IdentityAttributeOrder:
                      $ref: '#/components/schemas/AttributeNameList'
                      description: 'The set of attributes that distinguish links made from this facet from each other, in the order of significance. Listing typed links can filter on the values of these attributes. See <a>ListOutgoingTypedLinks</a> and <a>ListIncomingTypedLinks</a> for details.'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/directory#x-amz-data-partition:
    put:
      operationId: DeleteDirectory
      description: Deletes a directory. Only disabled directories can be deleted. A deleted directory cannot be undone. Exercise extreme caution when deleting directories.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDirectoryResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: DirectoryNotDisabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotDisabledException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryDeletedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryDeletedException'
        '487':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '488':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The ARN of the directory to delete.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/facet/delete#x-amz-data-partition:
    put:
      operationId: DeleteFacet
      description: Deletes a given <a>Facet</a>. All attributes and <a>Rule</a>s that are associated with the facet will be deleted. Only development schema facets are allowed deletion.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFacetResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: FacetNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetNotFoundException'
        '488':
          description: FacetInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetInUseException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: 'The Amazon Resource Name (ARN) that is associated with the <a>Facet</a>. For more information, see <a>arns</a>.'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
              properties:
                Name:
                  description: The name of the facet to delete.
                  type: string
                  pattern: '^[a-zA-Z0-9._-]*$'
                  minLength: 1
                  maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/object/delete#x-amz-data-partition:
    put:
      operationId: DeleteObject
      description: Deletes an object and its associated attributes. Only objects with no children and no parents can be deleted.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteObjectResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '488':
          description: ObjectNotDetachedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectNotDetachedException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: 'The Amazon Resource Name (ARN) that is associated with the <a>Directory</a> where the object resides. For more information, see <a>arns</a>.'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ObjectReference
              properties:
                ObjectReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: '#/components/schemas/SelectorObjectReference'
                      description: '<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#accessingobjects">Accessing Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/schema#x-amz-data-partition:
    put:
      operationId: DeleteSchema
      description: 'Deletes a given schema. Schemas in a development and published state can only be deleted. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSchemaResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: StillContainsLinksException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StillContainsLinksException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: 'The Amazon Resource Name (ARN) of the development schema. For more information, see <a>arns</a>.'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/typedlink/facet/delete#x-amz-data-partition:
    put:
      operationId: DeleteTypedLinkFacet
      description: 'Deletes a <a>TypedLinkFacet</a>. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTypedLinkFacetResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: FacetNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetNotFoundException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: 'The Amazon Resource Name (ARN) that is associated with the schema. For more information, see <a>arns</a>.'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
              properties:
                Name:
                  description: The unique name of the typed link facet.
                  type: string
                  pattern: '^[a-zA-Z0-9._-]*$'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/index/detach#x-amz-data-partition:
    put:
      operationId: DetachFromIndex
      description: Detaches the specified object from the specified index.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetachFromIndexResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '488':
          description: ObjectAlreadyDetachedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectAlreadyDetachedException'
        '489':
          description: NotIndexException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotIndexException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The Amazon Resource Name (ARN) of the directory the index and object exist in.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - IndexReference
                - TargetReference
              properties:
                IndexReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: '#/components/schemas/SelectorObjectReference'
                      description: '<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#accessingobjects">Accessing Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>'
                TargetReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: '#/components/schemas/SelectorObjectReference'
                      description: '<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#accessingobjects">Accessing Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/object/detach#x-amz-data-partition:
    put:
      operationId: DetachObject
      description: Detaches a given object from the parent object. The object that is to be detached from the parent is specified by the link name.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetachObjectResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '488':
          description: NotNodeException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotNodeException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: 'The Amazon Resource Name (ARN) that is associated with the <a>Directory</a> where objects reside. For more information, see <a>arns</a>.'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ParentReference
                - LinkName
              properties:
                ParentReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: '#/components/schemas/SelectorObjectReference'
                      description: '<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#accessingobjects">Accessing Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>'
                LinkName:
                  description: The link name associated with the object that needs to be detached.
                  type: string
                  pattern: '[^\/\[\]\(\):\{\}#@!?\s\\;]+'
                  minLength: 1
                  maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/policy/detach#x-amz-data-partition:
    put:
      operationId: DetachPolicy
      description: Detaches a policy from an object.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetachPolicyResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '488':
          description: NotPolicyException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotPolicyException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: 'The Amazon Resource Name (ARN) that is associated with the <a>Directory</a> where both objects reside. For more information, see <a>arns</a>.'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - PolicyReference
                - ObjectReference
              properties:
                PolicyReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: '#/components/schemas/SelectorObjectReference'
                      description: '<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#accessingobjects">Accessing Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>'
                ObjectReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: '#/components/schemas/SelectorObjectReference'
                      description: '<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#accessingobjects">Accessing Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/typedlink/detach#x-amz-data-partition:
    put:
      operationId: DetachTypedLink
      description: 'Detaches a typed link from a specified source and target object. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
      responses:
        '200':
          description: Success
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '488':
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The Amazon Resource Name (ARN) of the directory where you want to detach the typed link.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - TypedLinkSpecifier
              properties:
                TypedLinkSpecifier:
                  description: 'Contains all the information that is used to uniquely identify a typed link. The parameters discussed in this topic are used to uniquely specify the typed link being operated on. The <a>AttachTypedLink</a> API returns a typed link specifier while the <a>DetachTypedLink</a> API accepts one as input. Similarly, the <a>ListIncomingTypedLinks</a> and <a>ListOutgoingTypedLinks</a> API operations provide typed link specifiers as output. You can also construct a typed link specifier from scratch.'
                  type: object
                  properties:
                    TypedLinkFacet:
                      $ref: '#/components/schemas/TypedLinkSchemaAndFacetName'
                      description: Identifies the typed link facet that is associated with the typed link.
                    SourceObjectReference:
                      $ref: '#/components/schemas/ObjectReference'
                      description: Identifies the source object that the typed link will attach to.
                    TargetObjectReference:
                      $ref: '#/components/schemas/ObjectReference'
                      description: Identifies the target object that the typed link will attach to.
                    IdentityAttributeValues:
                      $ref: '#/components/schemas/AttributeNameAndValueList'
                      description: Identifies the attribute value to update.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/directory/disable#x-amz-data-partition:
    put:
      operationId: DisableDirectory
      description: Disables the specified directory. Disabled directories cannot be read or written to. Only enabled directories can be disabled. Disabled directories may be reenabled.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisableDirectoryResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: DirectoryDeletedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryDeletedException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '487':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The ARN of the directory to disable.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/directory/enable#x-amz-data-partition:
    put:
      operationId: EnableDirectory
      description: 'Enables the specified directory. Only disabled directories can be enabled. Once enabled, the directory can then be read and written to.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnableDirectoryResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: DirectoryDeletedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryDeletedException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '487':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The ARN of the directory to enable.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/schema/getappliedschema:
    post:
      operationId: GetAppliedSchemaVersion
      description: 'Returns current applied schema version ARN, including the minor version in use.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAppliedSchemaVersionResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - SchemaArn
              properties:
                SchemaArn:
                  description: The ARN of the applied schema.
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/directory/get#x-amz-data-partition:
    post:
      operationId: GetDirectory
      description: Retrieves metadata about a directory.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDirectoryResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The ARN of the directory.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/facet#x-amz-data-partition:
    post:
      operationId: GetFacet
      description: 'Gets details of the <a>Facet</a>, such as facet name, attributes, <a>Rule</a>s, or <code>ObjectType</code>. You can call this on all kinds of schema facets -- published, development, or applied.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFacetResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: FacetNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetNotFoundException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: 'The Amazon Resource Name (ARN) that is associated with the <a>Facet</a>. For more information, see <a>arns</a>.'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
              properties:
                Name:
                  description: The name of the facet to retrieve.
                  type: string
                  pattern: '^[a-zA-Z0-9._-]*$'
                  minLength: 1
                  maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdateFacet
      description: '<p>Does the following:</p> <ol> <li> <p>Adds new <code>Attributes</code>, <code>Rules</code>, or <code>ObjectTypes</code>.</p> </li> <li> <p>Updates existing <code>Attributes</code>, <code>Rules</code>, or <code>ObjectTypes</code>.</p> </li> <li> <p>Deletes existing <code>Attributes</code>, <code>Rules</code>, or <code>ObjectTypes</code>.</p> </li> </ol>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFacetResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: InvalidFacetUpdateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFacetUpdateException'
        '487':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '488':
          description: FacetNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetNotFoundException'
        '489':
          description: InvalidRuleException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRuleException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: 'The Amazon Resource Name (ARN) that is associated with the <a>Facet</a>. For more information, see <a>arns</a>.'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
              properties:
                Name:
                  description: The name of the facet.
                  type: string
                  pattern: '^[a-zA-Z0-9._-]*$'
                  minLength: 1
                  maxLength: 64
                AttributeUpdates:
                  description: 'List of attributes that need to be updated in a given schema <a>Facet</a>. Each attribute is followed by <code>AttributeAction</code>, which specifies the type of update operation to perform. '
                  type: array
                  items:
                    $ref: '#/components/schemas/FacetAttributeUpdate'
                ObjectType:
                  description: The object type that is associated with the facet. See <a>CreateFacetRequest$ObjectType</a> for more details.
                  type: string
                  enum:
                    - NODE
                    - LEAF_NODE
                    - POLICY
                    - INDEX
  /amazonclouddirectory/2017-01-11/typedlink/attributes/get#x-amz-data-partition:
    post:
      operationId: GetLinkAttributes
      description: Retrieves attributes that are associated with a typed link.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLinkAttributesResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '488':
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: 'The Amazon Resource Name (ARN) that is associated with the Directory where the typed link resides. For more information, see <a>arns</a> or <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - TypedLinkSpecifier
                - AttributeNames
              properties:
                TypedLinkSpecifier:
                  description: 'Contains all the information that is used to uniquely identify a typed link. The parameters discussed in this topic are used to uniquely specify the typed link being operated on. The <a>AttachTypedLink</a> API returns a typed link specifier while the <a>DetachTypedLink</a> API accepts one as input. Similarly, the <a>ListIncomingTypedLinks</a> and <a>ListOutgoingTypedLinks</a> API operations provide typed link specifiers as output. You can also construct a typed link specifier from scratch.'
                  type: object
                  properties:
                    TypedLinkFacet:
                      $ref: '#/components/schemas/TypedLinkSchemaAndFacetName'
                      description: Identifies the typed link facet that is associated with the typed link.
                    SourceObjectReference:
                      $ref: '#/components/schemas/ObjectReference'
                      description: Identifies the source object that the typed link will attach to.
                    TargetObjectReference:
                      $ref: '#/components/schemas/ObjectReference'
                      description: Identifies the target object that the typed link will attach to.
                    IdentityAttributeValues:
                      $ref: '#/components/schemas/AttributeNameAndValueList'
                      description: Identifies the attribute value to update.
                AttributeNames:
                  description: A list of attribute names whose values will be retrieved.
                  type: array
                  items:
                    $ref: '#/components/schemas/AttributeName'
                ConsistencyLevel:
                  description: The consistency level at which to retrieve the attributes on a typed link.
                  type: string
                  enum:
                    - SERIALIZABLE
                    - EVENTUAL
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/object/attributes/get#x-amz-data-partition:
    post:
      operationId: GetObjectAttributes
      description: Retrieves attributes within a facet that are associated with an object.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetObjectAttributesResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '488':
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The Amazon Resource Name (ARN) that is associated with the <a>Directory</a> where the object resides.
          schema:
            type: string
        - name: x-amz-consistency-level
          in: header
          required: false
          description: The consistency level at which to retrieve the attributes on an object.
          schema:
            type: string
            enum:
              - SERIALIZABLE
              - EVENTUAL
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ObjectReference
                - SchemaFacet
                - AttributeNames
              properties:
                ObjectReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: '#/components/schemas/SelectorObjectReference'
                      description: '<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#accessingobjects">Accessing Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>'
                SchemaFacet:
                  description: A facet.
                  type: object
                  properties:
                    SchemaArn:
                      $ref: '#/components/schemas/Arn'
                      description: 'The ARN of the schema that contains the facet with no minor component. See <a>arns</a> and <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/inplaceschemaupgrade.html">In-Place Schema Upgrade</a> for a description of when to provide minor versions.'
                    FacetName:
                      $ref: '#/components/schemas/FacetName'
                      description: The name of the facet.
                AttributeNames:
                  description: List of attribute names whose values will be retrieved.
                  type: array
                  items:
                    $ref: '#/components/schemas/AttributeName'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/object/information#x-amz-data-partition:
    post:
      operationId: GetObjectInformation
      description: Retrieves metadata about an object.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetObjectInformationResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The ARN of the directory being retrieved.
          schema:
            type: string
        - name: x-amz-consistency-level
          in: header
          required: false
          description: The consistency level at which to retrieve the object information.
          schema:
            type: string
            enum:
              - SERIALIZABLE
              - EVENTUAL
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ObjectReference
              properties:
                ObjectReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: '#/components/schemas/SelectorObjectReference'
                      description: '<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#accessingobjects">Accessing Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/schema/json#x-amz-data-partition:
    post:
      operationId: GetSchemaAsJson
      description: 'Retrieves a JSON representation of the schema. See <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_schemas.html#jsonformat">JSON Schema Format</a> for more information.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSchemaAsJsonResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The ARN of the schema to retrieve.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: PutSchemaFromJson
      description: 'Allows a schema to be updated using JSON upload. Only available for development schemas. See <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_schemas.html#jsonformat">JSON Schema Format</a> for more information.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutSchemaFromJsonResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: InvalidSchemaDocException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSchemaDocException'
        '487':
          description: InvalidRuleException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRuleException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The ARN of the schema to update.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Document
              properties:
                Document:
                  description: The replacement JSON schema.
                  type: string
  /amazonclouddirectory/2017-01-11/typedlink/facet/get#x-amz-data-partition:
    post:
      operationId: GetTypedLinkFacetInformation
      description: 'Returns the identity attribute order for a specific <a>TypedLinkFacet</a>. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTypedLinkFacetInformationResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '488':
          description: FacetNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetNotFoundException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: 'The Amazon Resource Name (ARN) that is associated with the schema. For more information, see <a>arns</a>.'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
              properties:
                Name:
                  description: The unique name of the typed link facet.
                  type: string
                  pattern: '^[a-zA-Z0-9._-]*$'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/schema/applied:
    post:
      operationId: ListAppliedSchemaArns
      description: 'Lists schema major versions applied to a directory. If <code>SchemaArn</code> is provided, lists the minor version.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAppliedSchemaArnsResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - DirectoryArn
              properties:
                DirectoryArn:
                  description: The ARN of the directory you are listing.
                  type: string
                SchemaArn:
                  description: The response for <code>ListAppliedSchemaArns</code> when this parameter is used will list all minor version ARNs for a major version.
                  type: string
                NextToken:
                  description: The pagination token.
                  type: string
                MaxResults:
                  description: The maximum number of results to retrieve.
                  type: integer
                  minimum: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/object/indices#x-amz-data-partition:
    post:
      operationId: ListAttachedIndices
      description: Lists indices attached to the specified object.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAttachedIndicesResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The ARN of the directory.
          schema:
            type: string
        - name: x-amz-consistency-level
          in: header
          required: false
          description: The consistency level to use for this operation.
          schema:
            type: string
            enum:
              - SERIALIZABLE
              - EVENTUAL
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - TargetReference
              properties:
                TargetReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: '#/components/schemas/SelectorObjectReference'
                      description: '<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#accessingobjects">Accessing Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>'
                NextToken:
                  description: The pagination token.
                  type: string
                MaxResults:
                  description: The maximum number of results to retrieve.
                  type: integer
                  minimum: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/schema/development:
    post:
      operationId: ListDevelopmentSchemaArns
      description: Retrieves each Amazon Resource Name (ARN) of schemas in the development state.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDevelopmentSchemaArnsResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                NextToken:
                  description: The pagination token.
                  type: string
                MaxResults:
                  description: The maximum number of results to retrieve.
                  type: integer
                  minimum: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/directory/list:
    post:
      operationId: ListDirectories
      description: Lists directories created within an account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDirectoriesResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                NextToken:
                  description: The pagination token.
                  type: string
                MaxResults:
                  description: The maximum number of results to retrieve.
                  type: integer
                  minimum: 1
                state:
                  description: 'The state of the directories in the list. Can be either Enabled, Disabled, or Deleted.'
                  type: string
                  enum:
                    - ENABLED
                    - DISABLED
                    - DELETED
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/facet/attributes#x-amz-data-partition:
    post:
      operationId: ListFacetAttributes
      description: Retrieves attributes attached to the facet.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFacetAttributesResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: FacetNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetNotFoundException'
        '488':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The ARN of the schema where the facet resides.
          schema:
            type: string
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
              properties:
                Name:
                  description: The name of the facet whose attributes will be retrieved.
                  type: string
                  pattern: '^[a-zA-Z0-9._-]*$'
                  minLength: 1
                  maxLength: 64
                NextToken:
                  description: The pagination token.
                  type: string
                MaxResults:
                  description: The maximum number of results to retrieve.
                  type: integer
                  minimum: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/facet/list#x-amz-data-partition:
    post:
      operationId: ListFacetNames
      description: Retrieves the names of facets that exist in a schema.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFacetNamesResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The Amazon Resource Name (ARN) to retrieve facet names from.
          schema:
            type: string
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                NextToken:
                  description: The pagination token.
                  type: string
                MaxResults:
                  description: The maximum number of results to retrieve.
                  type: integer
                  minimum: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/typedlink/incoming#x-amz-data-partition:
    post:
      operationId: ListIncomingTypedLinks
      description: 'Returns a paginated list of all the incoming <a>TypedLinkSpecifier</a> information for an object. It also supports filtering by typed link facet and identity attributes. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListIncomingTypedLinksResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '488':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '489':
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The Amazon Resource Name (ARN) of the directory where you want to list the typed links.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ObjectReference
              properties:
                ObjectReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: '#/components/schemas/SelectorObjectReference'
                      description: '<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#accessingobjects">Accessing Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>'
                FilterAttributeRanges:
                  description: 'Provides range filters for multiple attributes. When providing ranges to typed link selection, any inexact ranges must be specified at the end. Any attributes that do not have a range specified are presumed to match the entire range.'
                  type: array
                  items:
                    $ref: '#/components/schemas/TypedLinkAttributeRange'
                FilterTypedLink:
                  description: Identifies the schema Amazon Resource Name (ARN) and facet name for the typed link.
                  type: object
                  properties:
                    SchemaArn:
                      $ref: '#/components/schemas/Arn'
                      description: 'The Amazon Resource Name (ARN) that is associated with the schema. For more information, see <a>arns</a>.'
                    TypedLinkName:
                      $ref: '#/components/schemas/TypedLinkName'
                      description: The unique name of the typed link facet.
                NextToken:
                  description: The pagination token.
                  type: string
                MaxResults:
                  description: The maximum number of results to retrieve.
                  type: integer
                  minimum: 1
                ConsistencyLevel:
                  description: The consistency level to execute the request at.
                  type: string
                  enum:
                    - SERIALIZABLE
                    - EVENTUAL
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/index/targets#x-amz-data-partition:
    post:
      operationId: ListIndex
      description: Lists objects attached to the specified index.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListIndexResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '486':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '487':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '488':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '489':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '490':
          description: NotIndexException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotIndexException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The ARN of the directory that the index exists in.
          schema:
            type: string
        - name: x-amz-consistency-level
          in: header
          required: false
          description: The consistency level to execute the request at.
          schema:
            type: string
            enum:
              - SERIALIZABLE
              - EVENTUAL
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - IndexReference
              properties:
                RangesOnIndexedValues:
                  description: Specifies the ranges of indexed values that you want to query.
                  type: array
                  items:
                    $ref: '#/components/schemas/ObjectAttributeRange'
                IndexReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: '#/components/schemas/SelectorObjectReference'
                      description: '<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#accessingobjects">Accessing Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>'
                MaxResults:
                  description: 'The maximum number of objects in a single page to retrieve from the index during a request. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/limits.html#limits_cd">AWS Directory Service Limits</a>.'
                  type: integer
                  minimum: 1
                NextToken:
                  description: The pagination token.
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/object/attributes#x-amz-data-partition:
    post:
      operationId: ListObjectAttributes
      description: 'Lists all attributes that are associated with an object. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListObjectAttributesResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '488':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '489':
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: 'The Amazon Resource Name (ARN) that is associated with the <a>Directory</a> where the object resides. For more information, see <a>arns</a>.'
          schema:
            type: string
        - name: x-amz-consistency-level
          in: header
          required: false
          description: Represents the manner and timing in which the successful write or update of an object is reflected in a subsequent read operation of that same object.
          schema:
            type: string
            enum:
              - SERIALIZABLE
              - EVENTUAL
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ObjectReference
              properties:
                ObjectReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: '#/components/schemas/SelectorObjectReference'
                      description: '<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#accessingobjects">Accessing Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>'
                NextToken:
                  description: The pagination token.
                  type: string
                MaxResults:
                  description: The maximum number of items to be retrieved in a single call. This is an approximate number.
                  type: integer
                  minimum: 1
                FacetFilter:
                  description: A facet.
                  type: object
                  properties:
                    SchemaArn:
                      $ref: '#/components/schemas/Arn'
                      description: 'The ARN of the schema that contains the facet with no minor component. See <a>arns</a> and <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/inplaceschemaupgrade.html">In-Place Schema Upgrade</a> for a description of when to provide minor versions.'
                    FacetName:
                      $ref: '#/components/schemas/FacetName'
                      description: The name of the facet.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/object/children#x-amz-data-partition:
    post:
      operationId: ListObjectChildren
      description: Returns a paginated list of child objects that are associated with a given object.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListObjectChildrenResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '488':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '489':
          description: NotNodeException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotNodeException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: 'The Amazon Resource Name (ARN) that is associated with the <a>Directory</a> where the object resides. For more information, see <a>arns</a>.'
          schema:
            type: string
        - name: x-amz-consistency-level
          in: header
          required: false
          description: Represents the manner and timing in which the successful write or update of an object is reflected in a subsequent read operation of that same object.
          schema:
            type: string
            enum:
              - SERIALIZABLE
              - EVENTUAL
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ObjectReference
              properties:
                ObjectReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: '#/components/schemas/SelectorObjectReference'
                      description: '<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#accessingobjects">Accessing Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>'
                NextToken:
                  description: The pagination token.
                  type: string
                MaxResults:
                  description: The maximum number of items to be retrieved in a single call. This is an approximate number.
                  type: integer
                  minimum: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/object/parentpaths#x-amz-data-partition:
    post:
      operationId: ListObjectParentPaths
      description: '<p>Retrieves all available parent paths for any object type such as node, leaf node, policy node, and index node objects. For more information about objects, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_key_concepts.html#dirstructure">Directory Structure</a>.</p> <p>Use this API to evaluate all parents for an object. The call returns all objects from the root of the directory up to the requested object. The API returns the number of paths based on user-defined <code>MaxResults</code>, in case there are multiple paths to the parent. The order of the paths and nodes returned is consistent among multiple API calls unless the objects are deleted or moved. Paths not leading to the directory root are ignored from the target object.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListObjectParentPathsResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '488':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The ARN of the directory to which the parent path applies.
          schema:
            type: string
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ObjectReference
              properties:
                ObjectReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: '#/components/schemas/SelectorObjectReference'
                      description: '<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#accessingobjects">Accessing Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>'
                NextToken:
                  description: The pagination token.
                  type: string
                MaxResults:
                  description: The maximum number of items to be retrieved in a single call. This is an approximate number.
                  type: integer
                  minimum: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/object/parent#x-amz-data-partition:
    post:
      operationId: ListObjectParents
      description: Lists parent objects that are associated with a given object in pagination fashion.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListObjectParentsResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '488':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '489':
          description: CannotListParentOfRootException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CannotListParentOfRootException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: 'The Amazon Resource Name (ARN) that is associated with the <a>Directory</a> where the object resides. For more information, see <a>arns</a>.'
          schema:
            type: string
        - name: x-amz-consistency-level
          in: header
          required: false
          description: Represents the manner and timing in which the successful write or update of an object is reflected in a subsequent read operation of that same object.
          schema:
            type: string
            enum:
              - SERIALIZABLE
              - EVENTUAL
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ObjectReference
              properties:
                ObjectReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: '#/components/schemas/SelectorObjectReference'
                      description: '<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#accessingobjects">Accessing Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>'
                NextToken:
                  description: The pagination token.
                  type: string
                MaxResults:
                  description: The maximum number of items to be retrieved in a single call. This is an approximate number.
                  type: integer
                  minimum: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/object/policy#x-amz-data-partition:
    post:
      operationId: ListObjectPolicies
      description: Returns policies attached to an object in pagination fashion.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListObjectPoliciesResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '488':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: 'The Amazon Resource Name (ARN) that is associated with the <a>Directory</a> where objects reside. For more information, see <a>arns</a>.'
          schema:
            type: string
        - name: x-amz-consistency-level
          in: header
          required: false
          description: Represents the manner and timing in which the successful write or update of an object is reflected in a subsequent read operation of that same object.
          schema:
            type: string
            enum:
              - SERIALIZABLE
              - EVENTUAL
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ObjectReference
              properties:
                ObjectReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: '#/components/schemas/SelectorObjectReference'
                      description: '<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#accessingobjects">Accessing Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>'
                NextToken:
                  description: The pagination token.
                  type: string
                MaxResults:
                  description: The maximum number of items to be retrieved in a single call. This is an approximate number.
                  type: integer
                  minimum: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/typedlink/outgoing#x-amz-data-partition:
    post:
      operationId: ListOutgoingTypedLinks
      description: 'Returns a paginated list of all the outgoing <a>TypedLinkSpecifier</a> information for an object. It also supports filtering by typed link facet and identity attributes. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOutgoingTypedLinksResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '488':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '489':
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The Amazon Resource Name (ARN) of the directory where you want to list the typed links.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ObjectReference
              properties:
                ObjectReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: '#/components/schemas/SelectorObjectReference'
                      description: '<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#accessingobjects">Accessing Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>'
                FilterAttributeRanges:
                  description: 'Provides range filters for multiple attributes. When providing ranges to typed link selection, any inexact ranges must be specified at the end. Any attributes that do not have a range specified are presumed to match the entire range.'
                  type: array
                  items:
                    $ref: '#/components/schemas/TypedLinkAttributeRange'
                FilterTypedLink:
                  description: Identifies the schema Amazon Resource Name (ARN) and facet name for the typed link.
                  type: object
                  properties:
                    SchemaArn:
                      $ref: '#/components/schemas/Arn'
                      description: 'The Amazon Resource Name (ARN) that is associated with the schema. For more information, see <a>arns</a>.'
                    TypedLinkName:
                      $ref: '#/components/schemas/TypedLinkName'
                      description: The unique name of the typed link facet.
                NextToken:
                  description: The pagination token.
                  type: string
                MaxResults:
                  description: The maximum number of results to retrieve.
                  type: integer
                  minimum: 1
                ConsistencyLevel:
                  description: The consistency level to execute the request at.
                  type: string
                  enum:
                    - SERIALIZABLE
                    - EVENTUAL
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/policy/attachment#x-amz-data-partition:
    post:
      operationId: ListPolicyAttachments
      description: Returns all of the <code>ObjectIdentifiers</code> to which a given policy is attached.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPolicyAttachmentsResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '488':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '489':
          description: NotPolicyException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotPolicyException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: 'The Amazon Resource Name (ARN) that is associated with the <a>Directory</a> where objects reside. For more information, see <a>arns</a>.'
          schema:
            type: string
        - name: x-amz-consistency-level
          in: header
          required: false
          description: Represents the manner and timing in which the successful write or update of an object is reflected in a subsequent read operation of that same object.
          schema:
            type: string
            enum:
              - SERIALIZABLE
              - EVENTUAL
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - PolicyReference
              properties:
                PolicyReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: '#/components/schemas/SelectorObjectReference'
                      description: '<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#accessingobjects">Accessing Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>'
                NextToken:
                  description: The pagination token.
                  type: string
                MaxResults:
                  description: The maximum number of items to be retrieved in a single call. This is an approximate number.
                  type: integer
                  minimum: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/schema/published:
    post:
      operationId: ListPublishedSchemaArns
      description: 'Lists the major version families of each published schema. If a major version ARN is provided as <code>SchemaArn</code>, the minor version revisions in that family are listed instead.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPublishedSchemaArnsResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SchemaArn:
                  description: The response for <code>ListPublishedSchemaArns</code> when this parameter is used will list all minor version ARNs for a major version.
                  type: string
                NextToken:
                  description: The pagination token.
                  type: string
                MaxResults:
                  description: The maximum number of results to retrieve.
                  type: integer
                  minimum: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/tags:
    post:
      operationId: ListTagsForResource
      description: Returns tags for a resource. Tagging is currently supported only for directories with a limit of 50 tags per directory. All 50 tags are returned for a given directory with this API call.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: InvalidTaggingRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTaggingRequestException'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ResourceArn
              properties:
                ResourceArn:
                  description: The Amazon Resource Name (ARN) of the resource. Tagging is only supported for directories.
                  type: string
                NextToken:
                  description: The pagination token. This is for future use. Currently pagination is not supported for tagging.
                  type: string
                MaxResults:
                  description: The <code>MaxResults</code> parameter sets the maximum number of results returned in a single page. This is for future use and is not supported currently.
                  type: integer
                  minimum: 50
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/typedlink/facet/attributes#x-amz-data-partition:
    post:
      operationId: ListTypedLinkFacetAttributes
      description: 'Returns a paginated list of all attribute definitions for a particular <a>TypedLinkFacet</a>. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTypedLinkFacetAttributesResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: FacetNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetNotFoundException'
        '488':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: 'The Amazon Resource Name (ARN) that is associated with the schema. For more information, see <a>arns</a>.'
          schema:
            type: string
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
              properties:
                Name:
                  description: The unique name of the typed link facet.
                  type: string
                  pattern: '^[a-zA-Z0-9._-]*$'
                NextToken:
                  description: The pagination token.
                  type: string
                MaxResults:
                  description: The maximum number of results to retrieve.
                  type: integer
                  minimum: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/typedlink/facet/list#x-amz-data-partition:
    post:
      operationId: ListTypedLinkFacetNames
      description: 'Returns a paginated list of <code>TypedLink</code> facet names for a particular schema. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTypedLinkFacetNamesResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: 'The Amazon Resource Name (ARN) that is associated with the schema. For more information, see <a>arns</a>.'
          schema:
            type: string
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                NextToken:
                  description: The pagination token.
                  type: string
                MaxResults:
                  description: The maximum number of results to retrieve.
                  type: integer
                  minimum: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/policy/lookup#x-amz-data-partition:
    post:
      operationId: LookupPolicy
      description: 'Lists all policies from the root of the <a>Directory</a> to the object specified. If there are no policies present, an empty list is returned. If policies are present, and if some objects don''t have the policies attached, it returns the <code>ObjectIdentifier</code> for such objects. If policies are present, it returns <code>ObjectIdentifier</code>, <code>policyId</code>, and <code>policyType</code>. Paths that don''t lead to the root from the target object are ignored. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_key_concepts.html#policies">Policies</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookupPolicyResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '488':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: 'The Amazon Resource Name (ARN) that is associated with the <a>Directory</a>. For more information, see <a>arns</a>.'
          schema:
            type: string
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ObjectReference
              properties:
                ObjectReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: '#/components/schemas/SelectorObjectReference'
                      description: '<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#accessingobjects">Accessing Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>'
                NextToken:
                  description: The token to request the next page of results.
                  type: string
                MaxResults:
                  description: The maximum number of items to be retrieved in a single call. This is an approximate number.
                  type: integer
                  minimum: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/schema/publish#x-amz-data-partition:
    put:
      operationId: PublishSchema
      description: Publishes a development schema with a major version and a recommended minor version.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishSchemaResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: SchemaAlreadyPublishedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaAlreadyPublishedException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: 'The Amazon Resource Name (ARN) that is associated with the development schema. For more information, see <a>arns</a>.'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Version
              properties:
                Version:
                  description: The major version under which the schema will be published. Schemas have both a major and minor version associated with them.
                  type: string
                  pattern: '^[a-zA-Z0-9._-]*$'
                  minLength: 1
                  maxLength: 10
                MinorVersion:
                  description: The minor version under which the schema will be published. This parameter is recommended. Schemas have both a major and minor version associated with them.
                  type: string
                  pattern: '^[a-zA-Z0-9._-]*$'
                  minLength: 1
                  maxLength: 10
                Name:
                  description: 'The new name under which the schema will be published. If this is not provided, the development schema is considered.'
                  type: string
                  pattern: '^[a-zA-Z0-9._-]*$'
                  minLength: 1
                  maxLength: 32
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/object/facets/delete#x-amz-data-partition:
    put:
      operationId: RemoveFacetFromObject
      description: Removes the specified facet from the specified object.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveFacetFromObjectResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '488':
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The ARN of the directory in which the object resides.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - SchemaFacet
                - ObjectReference
              properties:
                SchemaFacet:
                  description: A facet.
                  type: object
                  properties:
                    SchemaArn:
                      $ref: '#/components/schemas/Arn'
                      description: 'The ARN of the schema that contains the facet with no minor component. See <a>arns</a> and <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/inplaceschemaupgrade.html">In-Place Schema Upgrade</a> for a description of when to provide minor versions.'
                    FacetName:
                      $ref: '#/components/schemas/FacetName'
                      description: The name of the facet.
                ObjectReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: '#/components/schemas/SelectorObjectReference'
                      description: '<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#accessingobjects">Accessing Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/tags/add:
    put:
      operationId: TagResource
      description: An API operation for adding tags to a resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: InvalidTaggingRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTaggingRequestException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ResourceArn
                - Tags
              properties:
                ResourceArn:
                  description: The Amazon Resource Name (ARN) of the resource. Tagging is only supported for directories.
                  type: string
                Tags:
                  description: A list of tag key-value pairs.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/tags/remove:
    put:
      operationId: UntagResource
      description: An API operation for removing tags from a resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: InvalidTaggingRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTaggingRequestException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ResourceArn
                - TagKeys
              properties:
                ResourceArn:
                  description: The Amazon Resource Name (ARN) of the resource. Tagging is only supported for directories.
                  type: string
                TagKeys:
                  description: Keys of the tag that need to be removed from the resource.
                  type: array
                  items:
                    $ref: '#/components/schemas/TagKey'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/typedlink/attributes/update#x-amz-data-partition:
    post:
      operationId: UpdateLinkAttributes
      description: 'Updates a given typed link’s attributes. Attributes to be updated must not contribute to the typed link’s identity, as defined by its <code>IdentityAttributeOrder</code>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateLinkAttributesResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '488':
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: 'The Amazon Resource Name (ARN) that is associated with the Directory where the updated typed link resides. For more information, see <a>arns</a> or <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - TypedLinkSpecifier
                - AttributeUpdates
              properties:
                TypedLinkSpecifier:
                  description: 'Contains all the information that is used to uniquely identify a typed link. The parameters discussed in this topic are used to uniquely specify the typed link being operated on. The <a>AttachTypedLink</a> API returns a typed link specifier while the <a>DetachTypedLink</a> API accepts one as input. Similarly, the <a>ListIncomingTypedLinks</a> and <a>ListOutgoingTypedLinks</a> API operations provide typed link specifiers as output. You can also construct a typed link specifier from scratch.'
                  type: object
                  properties:
                    TypedLinkFacet:
                      $ref: '#/components/schemas/TypedLinkSchemaAndFacetName'
                      description: Identifies the typed link facet that is associated with the typed link.
                    SourceObjectReference:
                      $ref: '#/components/schemas/ObjectReference'
                      description: Identifies the source object that the typed link will attach to.
                    TargetObjectReference:
                      $ref: '#/components/schemas/ObjectReference'
                      description: Identifies the target object that the typed link will attach to.
                    IdentityAttributeValues:
                      $ref: '#/components/schemas/AttributeNameAndValueList'
                      description: Identifies the attribute value to update.
                AttributeUpdates:
                  description: The attributes update structure.
                  type: array
                  items:
                    $ref: '#/components/schemas/LinkAttributeUpdate'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/object/update#x-amz-data-partition:
    put:
      operationId: UpdateObjectAttributes
      description: Updates a given object's attributes.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateObjectAttributesResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '488':
          description: LinkNameAlreadyInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkNameAlreadyInUseException'
        '489':
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: 'The Amazon Resource Name (ARN) that is associated with the <a>Directory</a> where the object resides. For more information, see <a>arns</a>.'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ObjectReference
                - AttributeUpdates
              properties:
                ObjectReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: '#/components/schemas/SelectorObjectReference'
                      description: '<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#accessingobjects">Accessing Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>'
                AttributeUpdates:
                  description: The attributes update structure.
                  type: array
                  items:
                    $ref: '#/components/schemas/ObjectAttributeUpdate'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/schema/update#x-amz-data-partition:
    put:
      operationId: UpdateSchema
      description: Updates the schema name with a new name. Only development schema names can be updated.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSchemaResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: 'The Amazon Resource Name (ARN) of the development schema. For more information, see <a>arns</a>.'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
              properties:
                Name:
                  description: The name of the schema.
                  type: string
                  pattern: '^[a-zA-Z0-9._-]*$'
                  minLength: 1
                  maxLength: 32
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/typedlink/facet#x-amz-data-partition:
    put:
      operationId: UpdateTypedLinkFacet
      description: 'Updates a <a>TypedLinkFacet</a>. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTypedLinkFacetResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
        '487':
          description: InvalidFacetUpdateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFacetUpdateException'
        '488':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '489':
          description: FacetNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetNotFoundException'
        '490':
          description: InvalidRuleException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRuleException'
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: 'The Amazon Resource Name (ARN) that is associated with the schema. For more information, see <a>arns</a>.'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
                - AttributeUpdates
                - IdentityAttributeOrder
              properties:
                Name:
                  description: The unique name of the typed link facet.
                  type: string
                  pattern: '^[a-zA-Z0-9._-]*$'
                AttributeUpdates:
                  description: Attributes update structure.
                  type: array
                  items:
                    $ref: '#/components/schemas/TypedLinkFacetAttributeUpdate'
                IdentityAttributeOrder:
                  description: 'The order of identity attributes for the facet, from most significant to least significant. The ability to filter typed links considers the order that the attributes are defined on the typed link facet. When providing ranges to a typed link selection, any inexact ranges must be specified at the end. Any attributes that do not have a range specified are presumed to match the entire range. Filters are interpreted in the order of the attributes on the typed link facet, not the order in which they are supplied to any API calls. For more information about identity attributes, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
                  type: array
                  items:
                    $ref: '#/components/schemas/AttributeName'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/schema/upgradeapplied:
    put:
      operationId: UpgradeAppliedSchema
      description: 'Upgrades a single directory in-place using the <code>PublishedSchemaArn</code> with schema updates found in <code>MinorVersion</code>. Backwards-compatible minor version upgrades are instantaneously available for readers on all objects in the directory. Note: This is a synchronous API call and upgrades only one schema on a given directory per call. To upgrade multiple directories from one schema, you would need to call this API on each directory.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpgradeAppliedSchemaResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: IncompatibleSchemaException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncompatibleSchemaException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: InvalidAttachmentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAttachmentException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - PublishedSchemaArn
                - DirectoryArn
              properties:
                PublishedSchemaArn:
                  description: The revision of the published schema to upgrade the directory to.
                  type: string
                DirectoryArn:
                  description: The ARN for the directory to which the upgraded schema will be applied.
                  type: string
                DryRun:
                  description: 'Used for testing whether the major version schemas are backward compatible or not. If schema compatibility fails, an exception would be thrown else the call would succeed but no changes will be saved. This parameter is optional.'
                  type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/schema/upgradepublished:
    put:
      operationId: UpgradePublishedSchema
      description: Upgrades a published schema under a new minor version revision using the current contents of <code>DevelopmentSchemaArn</code>.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpgradePublishedSchemaResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: IncompatibleSchemaException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncompatibleSchemaException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: InvalidAttachmentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAttachmentException'
        '488':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - DevelopmentSchemaArn
                - PublishedSchemaArn
                - MinorVersion
              properties:
                DevelopmentSchemaArn:
                  description: The ARN of the development schema with the changes used for the upgrade.
                  type: string
                PublishedSchemaArn:
                  description: The ARN of the published schema to be upgraded.
                  type: string
                MinorVersion:
                  description: Identifies the minor version of the published schema that will be created. This parameter is NOT optional.
                  type: string
                  pattern: '^[a-zA-Z0-9._-]*$'
                  minLength: 1
                  maxLength: 10
                DryRun:
                  description: 'Used for testing whether the Development schema provided is backwards compatible, or not, with the publish schema provided by the user to be upgraded. If schema compatibility fails, an exception would be thrown else the call would succeed. This parameter is optional and defaults to false.'
                  type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AddFacetToObjectResponse:
      type: object
      properties: {}
    Arn:
      type: string
    FacetName:
      type: string
      pattern: '^[a-zA-Z0-9._-]*$'
      minLength: 1
      maxLength: 64
    AttributeKeyAndValue:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          $ref: '#/components/schemas/AttributeKey'
          description: The key of the attribute.
        Value:
          $ref: '#/components/schemas/TypedAttributeValue'
          description: The value of the attribute.
      description: The combination of an attribute key and an attribute value.
    SelectorObjectReference:
      type: string
    InternalServiceException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: 'Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the <a href="http://status.aws.amazon.com/">AWS Service Health Dashboard</a> site to see if there are any operational issues with the service.'
    InvalidArnException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Indicates that the provided ARN value is not valid.
    RetryableConflictException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: 'Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.'
    ValidationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Indicates that your request is malformed in some manner. See the exception message.
    LimitExceededException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: 'Indicates that limits are exceeded. See <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/limits.html">Limits</a> for more information.'
    AccessDeniedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Access denied. Check your permissions.
    DirectoryNotEnabledException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Operations are only permitted on enabled directories.
    ResourceNotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: The specified resource could not be found.
    FacetValidationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: The <a>Facet</a> that you provided was not well formed or could not be validated with the schema.
    ApplySchemaResponse:
      type: object
      properties:
        AppliedSchemaArn:
          $ref: '#/components/schemas/Arn'
          description: 'The applied schema ARN that is associated with the copied schema in the <a>Directory</a>. You can use this ARN to describe the schema information applied on this directory. For more information, see <a>arns</a>.'
        DirectoryArn:
          $ref: '#/components/schemas/Arn'
          description: 'The ARN that is associated with the <a>Directory</a>. For more information, see <a>arns</a>.'
    InvalidAttachmentException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Indicates that an attempt to attach an object with the same link name or to apply a schema with the same name has occurred. Rename the link or the schema and then try again.
    AttachObjectResponse:
      type: object
      properties:
        AttachedObjectIdentifier:
          $ref: '#/components/schemas/ObjectIdentifier'
          description: 'The attached <code>ObjectIdentifier</code>, which is the child <code>ObjectIdentifier</code>.'
    LinkNameAlreadyInUseException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Indicates that a link could not be created due to a naming conflict. Choose a different name and then try again.
    AttachPolicyResponse:
      type: object
      properties: {}
    NotPolicyException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Indicates that the requested operation can only operate on policy objects.
    AttachToIndexResponse:
      type: object
      properties:
        AttachedObjectIdentifier:
          $ref: '#/components/schemas/ObjectIdentifier'
          description: The <code>ObjectIdentifier</code> of the object that was attached to the index.
    IndexedAttributeMissingException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: An object has been attempted to be attached to an object that does not have the appropriate attribute value.
    NotIndexException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Indicates that the requested operation can only operate on index objects.
    AttachTypedLinkResponse:
      type: object
      properties:
        TypedLinkSpecifier:
          $ref: '#/components/schemas/TypedLinkSpecifier'
          description: Returns a typed link specifier as output.
    TypedLinkName:
      type: string
      pattern: '^[a-zA-Z0-9._-]*$'
    AttributeNameAndValue:
      type: object
      required:
        - AttributeName
        - Value
      properties:
        AttributeName:
          $ref: '#/components/schemas/AttributeName'
          description: The attribute name of the typed link.
        Value:
          $ref: '#/components/schemas/TypedAttributeValue'
          description: The value for the typed link.
      description: Identifies the attribute name and value for a typed link.
    BatchReadResponse:
      type: object
      properties:
        Responses:
          $ref: '#/components/schemas/BatchReadOperationResponseList'
          description: A list of all the responses for each batch read.
    BatchReadOperation:
      type: object
      properties:
        ListObjectAttributes:
          $ref: '#/components/schemas/BatchListObjectAttributes'
          description: Lists all attributes that are associated with an object.
        ListObjectChildren:
          $ref: '#/components/schemas/BatchListObjectChildren'
          description: Returns a paginated list of child objects that are associated with a given object.
        ListAttachedIndices:
          $ref: '#/components/schemas/BatchListAttachedIndices'
          description: Lists indices attached to an object.
        ListObjectParentPaths:
          $ref: '#/components/schemas/BatchListObjectParentPaths'
          description: 'Retrieves all available parent paths for any object type such as node, leaf node, policy node, and index node objects. For more information about objects, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_key_concepts.html#dirstructure">Directory Structure</a>.'
        GetObjectInformation:
          $ref: '#/components/schemas/BatchGetObjectInformation'
          description: Retrieves metadata about an object.
        GetObjectAttributes:
          $ref: '#/components/schemas/BatchGetObjectAttributes'
          description: Retrieves attributes within a facet that are associated with an object.
        ListObjectPolicies:
          $ref: '#/components/schemas/BatchListObjectPolicies'
          description: Returns policies attached to an object in pagination fashion.
        ListPolicyAttachments:
          $ref: '#/components/schemas/BatchListPolicyAttachments'
          description: Returns all of the <code>ObjectIdentifiers</code> to which a given policy is attached.
        LookupPolicy:
          $ref: '#/components/schemas/BatchLookupPolicy'
          description: 'Lists all policies from the root of the <a>Directory</a> to the object specified. If there are no policies present, an empty list is returned. If policies are present, and if some objects don''t have the policies attached, it returns the <code>ObjectIdentifier</code> for such objects. If policies are present, it returns <code>ObjectIdentifier</code>, <code>policyId</code>, and <code>policyType</code>. Paths that don''t lead to the root from the target object are ignored. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_key_concepts.html#policies">Policies</a>.'
        ListIndex:
          $ref: '#/components/schemas/BatchListIndex'
          description: Lists objects attached to the specified index.
        ListOutgoingTypedLinks:
          $ref: '#/components/schemas/BatchListOutgoingTypedLinks'
          description: 'Returns a paginated list of all the outgoing <a>TypedLinkSpecifier</a> information for an object. It also supports filtering by typed link facet and identity attributes. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
        ListIncomingTypedLinks:
          $ref: '#/components/schemas/BatchListIncomingTypedLinks'
          description: 'Returns a paginated list of all the incoming <a>TypedLinkSpecifier</a> information for an object. It also supports filtering by typed link facet and identity attributes. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
        GetLinkAttributes:
          $ref: '#/components/schemas/BatchGetLinkAttributes'
          description: Retrieves attributes that are associated with a typed link.
      description: Represents the output of a <code>BatchRead</code> operation.
    BatchWriteResponse:
      type: object
      properties:
        Responses:
          $ref: '#/components/schemas/BatchWriteOperationResponseList'
          description: A list of all the responses for each batch write.
    BatchWriteOperation:
      type: object
      properties:
        CreateObject:
          $ref: '#/components/schemas/BatchCreateObject'
          description: Creates an object.
        AttachObject:
          $ref: '#/components/schemas/BatchAttachObject'
          description: Attaches an object to a <a>Directory</a>.
        DetachObject:
          $ref: '#/components/schemas/BatchDetachObject'
          description: Detaches an object from a <a>Directory</a>.
        UpdateObjectAttributes:
          $ref: '#/components/schemas/BatchUpdateObjectAttributes'
          description: Updates a given object's attributes.
        DeleteObject:
          $ref: '#/components/schemas/BatchDeleteObject'
          description: Deletes an object in a <a>Directory</a>.
        AddFacetToObject:
          $ref: '#/components/schemas/BatchAddFacetToObject'
          description: A batch operation that adds a facet to an object.
        RemoveFacetFromObject:
          $ref: '#/components/schemas/BatchRemoveFacetFromObject'
          description: A batch operation that removes a facet from an object.
        AttachPolicy:
          $ref: '#/components/schemas/BatchAttachPolicy'
          description: Attaches a policy object to a regular object. An object can have a limited number of attached policies.
        DetachPolicy:
          $ref: '#/components/schemas/BatchDetachPolicy'
          description: Detaches a policy from a <a>Directory</a>.
        CreateIndex:
          $ref: '#/components/schemas/BatchCreateIndex'
          description: 'Creates an index object. See <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_indexing.html">Indexing</a> for more information.'
        AttachToIndex:
          $ref: '#/components/schemas/BatchAttachToIndex'
          description: Attaches the specified object to the specified index.
        DetachFromIndex:
          $ref: '#/components/schemas/BatchDetachFromIndex'
          description: Detaches the specified object from the specified index.
        AttachTypedLink:
          $ref: '#/components/schemas/BatchAttachTypedLink'
          description: 'Attaches a typed link to a specified source and target object. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
        DetachTypedLink:
          $ref: '#/components/schemas/BatchDetachTypedLink'
          description: 'Detaches a typed link from a specified source and target object. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
        UpdateLinkAttributes:
          $ref: '#/components/schemas/BatchUpdateLinkAttributes'
          description: Updates a given object's attributes.
      description: 'Represents the output of a <code>BatchWrite</code> operation. '
    BatchWriteException:
      type: object
      properties:
        Index:
          $ref: '#/components/schemas/BatchOperationIndex'
        Type:
          $ref: '#/components/schemas/BatchWriteExceptionType'
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: A <code>BatchWrite</code> exception has occurred.
    CreateDirectoryResponse:
      type: object
      required:
        - DirectoryArn
        - Name
        - ObjectIdentifier
        - AppliedSchemaArn
      properties:
        DirectoryArn:
          $ref: '#/components/schemas/DirectoryArn'
          description: 'The ARN that is associated with the <a>Directory</a>. For more information, see <a>arns</a>.'
        Name:
          $ref: '#/components/schemas/DirectoryName'
          description: The name of the <a>Directory</a>.
        ObjectIdentifier:
          $ref: '#/components/schemas/ObjectIdentifier'
          description: The root object node of the created directory.
        AppliedSchemaArn:
          $ref: '#/components/schemas/Arn'
          description: 'The ARN of the published schema in the <a>Directory</a>. Once a published schema is copied into the directory, it has its own ARN, which is referred to applied schema ARN. For more information, see <a>arns</a>.'
    DirectoryAlreadyExistsException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Indicates that a <a>Directory</a> could not be created due to a naming conflict. Choose a different name and try again.
    CreateFacetResponse:
      type: object
      properties: {}
    FacetAttribute:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/AttributeName'
          description: The name of the facet attribute.
        AttributeDefinition:
          $ref: '#/components/schemas/FacetAttributeDefinition'
          description: 'A facet attribute consists of either a definition or a reference. This structure contains the attribute definition. See <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_advanced.html#attributereferences">Attribute References</a> for more information.'
        AttributeReference:
          $ref: '#/components/schemas/FacetAttributeReference'
          description: 'An attribute reference that is associated with the attribute. See <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_advanced.html#attributereferences">Attribute References</a> for more information.'
        RequiredBehavior:
          $ref: '#/components/schemas/RequiredAttributeBehavior'
          description: The required behavior of the <code>FacetAttribute</code>.
      description: An attribute that is associated with the <a>Facet</a>.
    FacetAlreadyExistsException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: A facet with the same name already exists.
    InvalidRuleException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Occurs when any of the rule parameter keys or values are invalid.
    CreateIndexResponse:
      type: object
      properties:
        ObjectIdentifier:
          $ref: '#/components/schemas/ObjectIdentifier'
          description: The <code>ObjectIdentifier</code> of the index created by this operation.
    AttributeKey:
      type: object
      required:
        - SchemaArn
        - FacetName
        - Name
      properties:
        SchemaArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the schema that contains the facet and attribute.
        FacetName:
          $ref: '#/components/schemas/FacetName'
          description: The name of the facet that the attribute exists within.
        Name:
          $ref: '#/components/schemas/AttributeName'
          description: The name of the attribute.
      description: A unique identifier for an attribute.
    UnsupportedIndexTypeException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Indicates that the requested index type is not supported.
    CreateObjectResponse:
      type: object
      properties:
        ObjectIdentifier:
          $ref: '#/components/schemas/ObjectIdentifier'
          description: The identifier that is associated with the object.
    SchemaFacet:
      type: object
      properties:
        SchemaArn:
          $ref: '#/components/schemas/Arn'
          description: 'The ARN of the schema that contains the facet with no minor component. See <a>arns</a> and <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/inplaceschemaupgrade.html">In-Place Schema Upgrade</a> for a description of when to provide minor versions.'
        FacetName:
          $ref: '#/components/schemas/FacetName'
          description: The name of the facet.
      description: A facet.
    CreateSchemaResponse:
      type: object
      properties:
        SchemaArn:
          $ref: '#/components/schemas/Arn'
          description: 'The Amazon Resource Name (ARN) that is associated with the schema. For more information, see <a>arns</a>.'
    SchemaAlreadyExistsException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Indicates that a schema could not be created due to a naming conflict. Please select a different name and then try again.
    CreateTypedLinkFacetResponse:
      type: object
      properties: {}
    TypedLinkAttributeDefinitionList:
      type: array
      items:
        $ref: '#/components/schemas/TypedLinkAttributeDefinition'
    AttributeNameList:
      type: array
      items:
        $ref: '#/components/schemas/AttributeName'
    DeleteDirectoryResponse:
      type: object
      required:
        - DirectoryArn
      properties:
        DirectoryArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the deleted directory.
    DirectoryNotDisabledException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: An operation can only operate on a disabled directory.
    DirectoryDeletedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: 'A directory that has been deleted and to which access has been attempted. Note: The requested resource will eventually cease to exist.'
    DeleteFacetResponse:
      type: object
      properties: {}
    FacetNotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: The specified <a>Facet</a> could not be found.
    FacetInUseException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Occurs when deleting a facet that contains an attribute that is a target to an attribute reference in a different facet.
    DeleteObjectResponse:
      type: object
      properties: {}
    ObjectNotDetachedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Indicates that the requested operation cannot be completed because the object has not been detached from the tree.
    DeleteSchemaResponse:
      type: object
      properties:
        SchemaArn:
          $ref: '#/components/schemas/Arn'
          description: 'The input ARN that is returned as part of the response. For more information, see <a>arns</a>.'
    StillContainsLinksException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: The object could not be deleted because links still exist. Remove the links and then try the operation again.
    DeleteTypedLinkFacetResponse:
      type: object
      properties: {}
    DetachFromIndexResponse:
      type: object
      properties:
        DetachedObjectIdentifier:
          $ref: '#/components/schemas/ObjectIdentifier'
          description: The <code>ObjectIdentifier</code> of the object that was detached from the index.
    ObjectAlreadyDetachedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Indicates that the object is not attached to the index.
    DetachObjectResponse:
      type: object
      properties:
        DetachedObjectIdentifier:
          $ref: '#/components/schemas/ObjectIdentifier'
          description: The <code>ObjectIdentifier</code> that was detached from the object.
    NotNodeException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: 'Occurs when any invalid operations are performed on an object that is not a node, such as calling <code>ListObjectChildren</code> for a leaf node object.'
    DetachPolicyResponse:
      type: object
      properties: {}
    TypedLinkSchemaAndFacetName:
      type: object
      required:
        - SchemaArn
        - TypedLinkName
      properties:
        SchemaArn:
          $ref: '#/components/schemas/Arn'
          description: 'The Amazon Resource Name (ARN) that is associated with the schema. For more information, see <a>arns</a>.'
        TypedLinkName:
          $ref: '#/components/schemas/TypedLinkName'
          description: The unique name of the typed link facet.
      description: Identifies the schema Amazon Resource Name (ARN) and facet name for the typed link.
    ObjectReference:
      type: object
      properties:
        Selector:
          $ref: '#/components/schemas/SelectorObjectReference'
          description: '<p>A path selector supports easy selection of an object by the parent/child links leading to it from the directory root. Use the link names from each parent/child link to construct the path. Path selectors start with a slash (/) and link names are separated by slashes. For more information about paths, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#accessingobjects">Accessing Objects</a>. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - An object identifier is an opaque string provided by Amazon Cloud Directory. When creating objects, the system will provide you with the identifier of the created object. An object’s identifier is immutable and no two objects will ever share the same object identifier</p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>'
      description: The reference that identifies an object.
    AttributeNameAndValueList:
      type: array
      items:
        $ref: '#/components/schemas/AttributeNameAndValue'
    DisableDirectoryResponse:
      type: object
      required:
        - DirectoryArn
      properties:
        DirectoryArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the directory that has been disabled.
    EnableDirectoryResponse:
      type: object
      required:
        - DirectoryArn
      properties:
        DirectoryArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the enabled directory.
    GetAppliedSchemaVersionResponse:
      type: object
      properties:
        AppliedSchemaArn:
          $ref: '#/components/schemas/Arn'
          description: 'Current applied schema ARN, including the minor version in use if one was provided.'
    GetDirectoryResponse:
      type: object
      required:
        - Directory
      properties:
        Directory:
          $ref: '#/components/schemas/Directory'
          description: Metadata about the directory.
    GetFacetResponse:
      type: object
      properties:
        Facet:
          $ref: '#/components/schemas/Facet'
          description: The <a>Facet</a> structure that is associated with the facet.
    GetLinkAttributesResponse:
      type: object
      properties:
        Attributes:
          $ref: '#/components/schemas/AttributeKeyAndValueList'
          description: The attributes that are associated with the typed link.
    AttributeName:
      type: string
      pattern: '^[a-zA-Z0-9._-]*$'
      minLength: 1
      maxLength: 64
    GetObjectAttributesResponse:
      type: object
      properties:
        Attributes:
          $ref: '#/components/schemas/AttributeKeyAndValueList'
          description: The attributes that are associated with the object.
    GetObjectInformationResponse:
      type: object
      properties:
        SchemaFacets:
          $ref: '#/components/schemas/SchemaFacetList'
          description: 'The facets attached to the specified object. Although the response does not include minor version information, the most recently applied minor version of each Facet is in effect. See <a>GetAppliedSchemaVersion</a> for details.'
        ObjectIdentifier:
          $ref: '#/components/schemas/ObjectIdentifier'
          description: The <code>ObjectIdentifier</code> of the specified object.
    GetSchemaAsJsonResponse:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/SchemaName'
          description: The name of the retrieved schema.
        Document:
          $ref: '#/components/schemas/SchemaJsonDocument'
          description: The JSON representation of the schema document.
    GetTypedLinkFacetInformationResponse:
      type: object
      properties:
        IdentityAttributeOrder:
          $ref: '#/components/schemas/AttributeNameList'
          description: 'The order of identity attributes for the facet, from most significant to least significant. The ability to filter typed links considers the order that the attributes are defined on the typed link facet. When providing ranges to typed link selection, any inexact ranges must be specified at the end. Any attributes that do not have a range specified are presumed to match the entire range. Filters are interpreted in the order of the attributes on the typed link facet, not the order in which they are supplied to any API calls. For more information about identity attributes, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
    InvalidNextTokenException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Indicates that the <code>NextToken</code> value is not valid.
    ListAppliedSchemaArnsResponse:
      type: object
      properties:
        SchemaArns:
          $ref: '#/components/schemas/Arns'
          description: The ARNs of schemas that are applied to the directory.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
    ListAttachedIndicesResponse:
      type: object
      properties:
        IndexAttachments:
          $ref: '#/components/schemas/IndexAttachmentList'
          description: The indices attached to the specified object.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
    ListDevelopmentSchemaArnsResponse:
      type: object
      properties:
        SchemaArns:
          $ref: '#/components/schemas/Arns'
          description: The ARNs of retrieved development schemas.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
    ListDirectoriesResponse:
      type: object
      required:
        - Directories
      properties:
        Directories:
          $ref: '#/components/schemas/DirectoryList'
          description: Lists all directories that are associated with your account in pagination fashion.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
    ListFacetAttributesResponse:
      type: object
      properties:
        Attributes:
          $ref: '#/components/schemas/FacetAttributeList'
          description: The attributes attached to the facet.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
    ListFacetNamesResponse:
      type: object
      properties:
        FacetNames:
          $ref: '#/components/schemas/FacetNameList'
          description: The names of facets that exist within the schema.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
    ListIncomingTypedLinksResponse:
      type: object
      properties:
        LinkSpecifiers:
          $ref: '#/components/schemas/TypedLinkSpecifierList'
          description: Returns one or more typed link specifiers as output.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
    TypedLinkAttributeRange:
      type: object
      required:
        - Range
      properties:
        AttributeName:
          $ref: '#/components/schemas/AttributeName'
          description: The unique name of the typed link attribute.
        Range:
          $ref: '#/components/schemas/TypedAttributeValueRange'
          description: The range of attribute values that are being selected.
      description: Identifies the range of attributes that are used by a specified filter.
    ListIndexResponse:
      type: object
      properties:
        IndexAttachments:
          $ref: '#/components/schemas/IndexAttachmentList'
          description: The objects and indexed values attached to the index.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
    ObjectAttributeRange:
      type: object
      properties:
        AttributeKey:
          $ref: '#/components/schemas/AttributeKey'
          description: The key of the attribute that the attribute range covers.
        Range:
          $ref: '#/components/schemas/TypedAttributeValueRange'
          description: The range of attribute values being selected.
      description: A range of attributes.
    ListObjectAttributesResponse:
      type: object
      properties:
        Attributes:
          $ref: '#/components/schemas/AttributeKeyAndValueList'
          description: 'Attributes map that is associated with the object. <code>AttributeArn</code> is the key, and attribute value is the value.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
    ListObjectChildrenResponse:
      type: object
      properties:
        Children:
          $ref: '#/components/schemas/LinkNameToObjectIdentifierMap'
          description: 'Children structure, which is a map with key as the <code>LinkName</code> and <code>ObjectIdentifier</code> as the value.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
    ListObjectParentPathsResponse:
      type: object
      properties:
        PathToObjectIdentifiersList:
          $ref: '#/components/schemas/PathToObjectIdentifiersList'
          description: Returns the path to the <code>ObjectIdentifiers</code> that are associated with the directory.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
    ListObjectParentsResponse:
      type: object
      properties:
        Parents:
          $ref: '#/components/schemas/ObjectIdentifierToLinkNameMap'
          description: 'The parent structure, which is a map with key as the <code>ObjectIdentifier</code> and LinkName as the value.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
    CannotListParentOfRootException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Cannot list the parents of a <a>Directory</a> root.
    ListObjectPoliciesResponse:
      type: object
      properties:
        AttachedPolicyIds:
          $ref: '#/components/schemas/ObjectIdentifierList'
          description: 'A list of policy <code>ObjectIdentifiers</code>, that are attached to the object.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
    ListOutgoingTypedLinksResponse:
      type: object
      properties:
        TypedLinkSpecifiers:
          $ref: '#/components/schemas/TypedLinkSpecifierList'
          description: Returns a typed link specifier as output.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
    ListPolicyAttachmentsResponse:
      type: object
      properties:
        ObjectIdentifiers:
          $ref: '#/components/schemas/ObjectIdentifierList'
          description: A list of <code>ObjectIdentifiers</code> to which the policy is attached.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
    ListPublishedSchemaArnsResponse:
      type: object
      properties:
        SchemaArns:
          $ref: '#/components/schemas/Arns'
          description: The ARNs of published schemas.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A list of tag key value pairs that are associated with the response.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token to use to retrieve the next page of results. This value is null when there are no more results to return.
    InvalidTaggingRequestException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Can occur for multiple reasons such as when you tag a resource that doesn’t exist or if you specify a higher number of tags for a resource than the allowed limit. Allowed limit is 50 tags per resource.
    ListTypedLinkFacetAttributesResponse:
      type: object
      properties:
        Attributes:
          $ref: '#/components/schemas/TypedLinkAttributeDefinitionList'
          description: An ordered set of attributes associate with the typed link.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
    ListTypedLinkFacetNamesResponse:
      type: object
      properties:
        FacetNames:
          $ref: '#/components/schemas/TypedLinkNameList'
          description: The names of typed link facets that exist within the schema.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
    LookupPolicyResponse:
      type: object
      properties:
        PolicyToPathList:
          $ref: '#/components/schemas/PolicyToPathList'
          description: 'Provides list of path to policies. Policies contain <code>PolicyId</code>, <code>ObjectIdentifier</code>, and <code>PolicyType</code>. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_key_concepts.html#policies">Policies</a>.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
    PublishSchemaResponse:
      type: object
      properties:
        PublishedSchemaArn:
          $ref: '#/components/schemas/Arn'
          description: 'The ARN that is associated with the published schema. For more information, see <a>arns</a>.'
    SchemaAlreadyPublishedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Indicates that a schema is already published.
    PutSchemaFromJsonResponse:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the schema to update.
    InvalidSchemaDocException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Indicates that the provided <code>SchemaDoc</code> value is not valid.
    RemoveFacetFromObjectResponse:
      type: object
      properties: {}
    TagResourceResponse:
      type: object
      properties: {}
    Tag:
      type: object
      properties:
        Key:
          $ref: '#/components/schemas/TagKey'
          description: The key that is associated with the tag.
        Value:
          $ref: '#/components/schemas/TagValue'
          description: The value that is associated with the tag.
      description: The tag structure that contains a tag key and value.
    UntagResourceResponse:
      type: object
      properties: {}
    TagKey:
      type: string
    UpdateFacetResponse:
      type: object
      properties: {}
    FacetAttributeUpdate:
      type: object
      properties:
        Attribute:
          $ref: '#/components/schemas/FacetAttribute'
          description: The attribute to update.
        Action:
          $ref: '#/components/schemas/UpdateActionType'
          description: The action to perform when updating the attribute.
      description: A structure that contains information used to update an attribute.
    InvalidFacetUpdateException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: An attempt to modify a <a>Facet</a> resulted in an invalid schema exception.
    UpdateLinkAttributesResponse:
      type: object
      properties: {}
    LinkAttributeUpdate:
      type: object
      properties:
        AttributeKey:
          $ref: '#/components/schemas/AttributeKey'
          description: The key of the attribute being updated.
        AttributeAction:
          $ref: '#/components/schemas/LinkAttributeAction'
          description: The action to perform as part of the attribute update.
      description: Structure that contains attribute update information.
    UpdateObjectAttributesResponse:
      type: object
      properties:
        ObjectIdentifier:
          $ref: '#/components/schemas/ObjectIdentifier'
          description: The <code>ObjectIdentifier</code> of the updated object.
    ObjectAttributeUpdate:
      type: object
      properties:
        ObjectAttributeKey:
          $ref: '#/components/schemas/AttributeKey'
          description: The key of the attribute being updated.
        ObjectAttributeAction:
          $ref: '#/components/schemas/ObjectAttributeAction'
          description: The action to perform as part of the attribute update.
      description: Structure that contains attribute update information.
    UpdateSchemaResponse:
      type: object
      properties:
        SchemaArn:
          $ref: '#/components/schemas/Arn'
          description: 'The ARN that is associated with the updated schema. For more information, see <a>arns</a>.'
    UpdateTypedLinkFacetResponse:
      type: object
      properties: {}
    TypedLinkFacetAttributeUpdate:
      type: object
      required:
        - Attribute
        - Action
      properties:
        Attribute:
          $ref: '#/components/schemas/TypedLinkAttributeDefinition'
          description: The attribute to update.
        Action:
          $ref: '#/components/schemas/UpdateActionType'
          description: The action to perform when updating the attribute.
      description: A typed link facet attribute update.
    UpgradeAppliedSchemaResponse:
      type: object
      properties:
        UpgradedSchemaArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the upgraded schema that is returned as part of the response.
        DirectoryArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the directory that is returned as part of the response.
    IncompatibleSchemaException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Indicates a failure occurred while performing a check for backward compatibility between the specified schema and the schema that is currently applied to the directory.
    UpgradePublishedSchemaResponse:
      type: object
      properties:
        UpgradedSchemaArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the upgraded schema that is returned as part of the response.
    ExceptionMessage:
      type: string
    AttributeKeyAndValueList:
      type: array
      items:
        $ref: '#/components/schemas/AttributeKeyAndValue'
    AddFacetToObjectRequest:
      type: object
      required:
        - SchemaFacet
        - ObjectReference
      title: AddFacetToObjectRequest
      properties:
        SchemaFacet:
          $ref: '#/components/schemas/SchemaFacet'
          description: Identifiers for the facet that you are adding to the object. See <a>SchemaFacet</a> for details.
        ObjectAttributeList:
          $ref: '#/components/schemas/AttributeKeyAndValueList'
          description: Attributes on the facet that you are adding to the object.
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
          description: A reference to the object you are adding the specified facet to.
    ApplySchemaRequest:
      type: object
      required:
        - PublishedSchemaArn
      title: ApplySchemaRequest
      properties:
        PublishedSchemaArn:
          $ref: '#/components/schemas/Arn'
          description: 'Published schema Amazon Resource Name (ARN) that needs to be copied. For more information, see <a>arns</a>.'
    Arns:
      type: array
      items:
        $ref: '#/components/schemas/Arn'
    LinkName:
      type: string
      pattern: '[^\/\[\]\(\):\{\}#@!?\s\\;]+'
      minLength: 1
      maxLength: 64
    AttachObjectRequest:
      type: object
      required:
        - ParentReference
        - ChildReference
        - LinkName
      title: AttachObjectRequest
      properties:
        ParentReference:
          $ref: '#/components/schemas/ObjectReference'
          description: The parent object reference.
        ChildReference:
          $ref: '#/components/schemas/ObjectReference'
          description: The child object reference to be attached to the object.
        LinkName:
          $ref: '#/components/schemas/LinkName'
          description: The link name with which the child object is attached to the parent.
    ObjectIdentifier:
      type: string
    AttachPolicyRequest:
      type: object
      required:
        - PolicyReference
        - ObjectReference
      title: AttachPolicyRequest
      properties:
        PolicyReference:
          $ref: '#/components/schemas/ObjectReference'
          description: The reference that is associated with the policy object.
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
          description: The reference that identifies the object to which the policy will be attached.
    AttachToIndexRequest:
      type: object
      required:
        - IndexReference
        - TargetReference
      title: AttachToIndexRequest
      properties:
        IndexReference:
          $ref: '#/components/schemas/ObjectReference'
          description: A reference to the index that you are attaching the object to.
        TargetReference:
          $ref: '#/components/schemas/ObjectReference'
          description: A reference to the object that you are attaching to the index.
    AttachTypedLinkRequest:
      type: object
      required:
        - SourceObjectReference
        - TargetObjectReference
        - TypedLinkFacet
        - Attributes
      title: AttachTypedLinkRequest
      properties:
        SourceObjectReference:
          $ref: '#/components/schemas/ObjectReference'
          description: Identifies the source object that the typed link will attach to.
        TargetObjectReference:
          $ref: '#/components/schemas/ObjectReference'
          description: Identifies the target object that the typed link will attach to.
        TypedLinkFacet:
          $ref: '#/components/schemas/TypedLinkSchemaAndFacetName'
          description: Identifies the typed link facet that is associated with the typed link.
        Attributes:
          $ref: '#/components/schemas/AttributeNameAndValueList'
          description: A set of attributes that are associated with the typed link.
    TypedLinkSpecifier:
      type: object
      required:
        - TypedLinkFacet
        - SourceObjectReference
        - TargetObjectReference
        - IdentityAttributeValues
      properties:
        TypedLinkFacet:
          $ref: '#/components/schemas/TypedLinkSchemaAndFacetName'
          description: Identifies the typed link facet that is associated with the typed link.
        SourceObjectReference:
          $ref: '#/components/schemas/ObjectReference'
          description: Identifies the source object that the typed link will attach to.
        TargetObjectReference:
          $ref: '#/components/schemas/ObjectReference'
          description: Identifies the target object that the typed link will attach to.
        IdentityAttributeValues:
          $ref: '#/components/schemas/AttributeNameAndValueList'
          description: Identifies the attribute value to update.
      description: 'Contains all the information that is used to uniquely identify a typed link. The parameters discussed in this topic are used to uniquely specify the typed link being operated on. The <a>AttachTypedLink</a> API returns a typed link specifier while the <a>DetachTypedLink</a> API accepts one as input. Similarly, the <a>ListIncomingTypedLinks</a> and <a>ListOutgoingTypedLinks</a> API operations provide typed link specifiers as output. You can also construct a typed link specifier from scratch.'
    TypedAttributeValue:
      type: object
      properties:
        StringValue:
          $ref: '#/components/schemas/StringAttributeValue'
          description: A string data value.
        BinaryValue:
          $ref: '#/components/schemas/BinaryAttributeValue'
          description: A binary data value.
        BooleanValue:
          $ref: '#/components/schemas/BooleanAttributeValue'
          description: A Boolean data value.
        NumberValue:
          $ref: '#/components/schemas/NumberAttributeValue'
          description: A number data value.
        DatetimeValue:
          $ref: '#/components/schemas/DatetimeAttributeValue'
          description: A date and time value.
      description: 'Represents the data for a typed attribute. You can set one, and only one, of the elements. Each attribute in an item is a name-value pair. Attributes have a single value.'
    AttributeKeyList:
      type: array
      items:
        $ref: '#/components/schemas/AttributeKey'
    BatchAddFacetToObject:
      type: object
      required:
        - SchemaFacet
        - ObjectAttributeList
        - ObjectReference
      properties:
        SchemaFacet:
          $ref: '#/components/schemas/SchemaFacet'
          description: Represents the facet being added to the object.
        ObjectAttributeList:
          $ref: '#/components/schemas/AttributeKeyAndValueList'
          description: The attributes to set on the object.
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
          description: A reference to the object being mutated.
      description: Represents the output of a batch add facet to object operation.
    BatchAddFacetToObjectResponse:
      type: object
      properties: {}
      description: The result of a batch add facet to object operation.
    BatchAttachObject:
      type: object
      required:
        - ParentReference
        - ChildReference
        - LinkName
      properties:
        ParentReference:
          $ref: '#/components/schemas/ObjectReference'
          description: The parent object reference.
        ChildReference:
          $ref: '#/components/schemas/ObjectReference'
          description: The child object reference that is to be attached to the object.
        LinkName:
          $ref: '#/components/schemas/LinkName'
          description: The name of the link.
      description: Represents the output of an <a>AttachObject</a> operation.
    BatchAttachObjectResponse:
      type: object
      properties:
        attachedObjectIdentifier:
          $ref: '#/components/schemas/ObjectIdentifier'
          description: The <code>ObjectIdentifier</code> of the object that has been attached.
      description: Represents the output batch <a>AttachObject</a> response operation.
    BatchAttachPolicy:
      type: object
      required:
        - PolicyReference
        - ObjectReference
      properties:
        PolicyReference:
          $ref: '#/components/schemas/ObjectReference'
          description: The reference that is associated with the policy object.
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
          description: The reference that identifies the object to which the policy will be attached.
      description: "Attaches a policy object to a regular object inside a <a>BatchRead</a> operation.\_For more information, see <a>AttachPolicy</a> and <a>BatchReadRequest$Operations</a>."
    BatchAttachPolicyResponse:
      type: object
      properties: {}
      description: Represents the output of an <a>AttachPolicy</a> response operation.
    BatchAttachToIndex:
      type: object
      required:
        - IndexReference
        - TargetReference
      properties:
        IndexReference:
          $ref: '#/components/schemas/ObjectReference'
          description: A reference to the index that you are attaching the object to.
        TargetReference:
          $ref: '#/components/schemas/ObjectReference'
          description: A reference to the object that you are attaching to the index.
      description: 'Attaches the specified object to the specified index inside a <a>BatchRead</a> operation. For more information, see <a>AttachToIndex</a> and <a>BatchReadRequest$Operations</a>.'
    BatchAttachToIndexResponse:
      type: object
      properties:
        AttachedObjectIdentifier:
          $ref: '#/components/schemas/ObjectIdentifier'
          description: The <code>ObjectIdentifier</code> of the object that was attached to the index.
      description: Represents the output of a <a>AttachToIndex</a> response operation.
    BatchAttachTypedLink:
      type: object
      required:
        - SourceObjectReference
        - TargetObjectReference
        - TypedLinkFacet
        - Attributes
      properties:
        SourceObjectReference:
          $ref: '#/components/schemas/ObjectReference'
          description: Identifies the source object that the typed link will attach to.
        TargetObjectReference:
          $ref: '#/components/schemas/ObjectReference'
          description: Identifies the target object that the typed link will attach to.
        TypedLinkFacet:
          $ref: '#/components/schemas/TypedLinkSchemaAndFacetName'
          description: Identifies the typed link facet that is associated with the typed link.
        Attributes:
          $ref: '#/components/schemas/AttributeNameAndValueList'
          description: A set of attributes that are associated with the typed link.
      description: 'Attaches a typed link to a specified source and target object inside a <a>BatchRead</a> operation. For more information, see <a>AttachTypedLink</a> and <a>BatchReadRequest$Operations</a>.'
    BatchAttachTypedLinkResponse:
      type: object
      properties:
        TypedLinkSpecifier:
          $ref: '#/components/schemas/TypedLinkSpecifier'
          description: Returns a typed link specifier as output.
      description: Represents the output of a <a>AttachTypedLink</a> response operation.
    Bool:
      type: boolean
    BatchReferenceName:
      type: string
    BatchCreateIndex:
      type: object
      required:
        - OrderedIndexedAttributeList
        - IsUnique
      properties:
        OrderedIndexedAttributeList:
          $ref: '#/components/schemas/AttributeKeyList'
          description: Specifies the attributes that should be indexed on. Currently only a single attribute is supported.
        IsUnique:
          $ref: '#/components/schemas/Bool'
          description: Indicates whether the attribute that is being indexed has unique values or not.
        ParentReference:
          $ref: '#/components/schemas/ObjectReference'
          description: A reference to the parent object that contains the index object.
        LinkName:
          $ref: '#/components/schemas/LinkName'
          description: The name of the link between the parent object and the index object.
        BatchReferenceName:
          $ref: '#/components/schemas/BatchReferenceName'
          description: 'The batch reference name. See <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_advanced.html#batches">Batches</a> for more information.'
      description: 'Creates an index object inside of a <a>BatchRead</a> operation. For more information, see <a>CreateIndex</a> and <a>BatchReadRequest$Operations</a>.'
    BatchCreateIndexResponse:
      type: object
      properties:
        ObjectIdentifier:
          $ref: '#/components/schemas/ObjectIdentifier'
          description: The <code>ObjectIdentifier</code> of the index created by this operation.
      description: Represents the output of a <a>CreateIndex</a> response operation.
    SchemaFacetList:
      type: array
      items:
        $ref: '#/components/schemas/SchemaFacet'
    BatchCreateObject:
      type: object
      required:
        - SchemaFacet
        - ObjectAttributeList
      properties:
        SchemaFacet:
          $ref: '#/components/schemas/SchemaFacetList'
          description: 'A list of <code>FacetArns</code> that will be associated with the object. For more information, see <a>arns</a>.'
        ObjectAttributeList:
          $ref: '#/components/schemas/AttributeKeyAndValueList'
          description: 'An attribute map, which contains an attribute ARN as the key and attribute value as the map value.'
        ParentReference:
          $ref: '#/components/schemas/ObjectReference'
          description: 'If specified, the parent reference to which this object will be attached.'
        LinkName:
          $ref: '#/components/schemas/LinkName'
          description: The name of the link.
        BatchReferenceName:
          $ref: '#/components/schemas/BatchReferenceName'
          description: 'The batch reference name. See <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_advanced.html#batches">Batches</a> for more information.'
      description: Represents the output of a <a>CreateObject</a> operation.
    BatchCreateObjectResponse:
      type: object
      properties:
        ObjectIdentifier:
          $ref: '#/components/schemas/ObjectIdentifier'
          description: The ID that is associated with the object.
      description: Represents the output of a <a>CreateObject</a> response operation.
    BatchDeleteObject:
      type: object
      required:
        - ObjectReference
      properties:
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
          description: The reference that identifies the object.
      description: Represents the output of a <a>DeleteObject</a> operation.
    BatchDeleteObjectResponse:
      type: object
      properties: {}
      description: Represents the output of a <a>DeleteObject</a> response operation.
    BatchDetachFromIndex:
      type: object
      required:
        - IndexReference
        - TargetReference
      properties:
        IndexReference:
          $ref: '#/components/schemas/ObjectReference'
          description: A reference to the index object.
        TargetReference:
          $ref: '#/components/schemas/ObjectReference'
          description: A reference to the object being detached from the index.
      description: 'Detaches the specified object from the specified index inside a <a>BatchRead</a> operation. For more information, see <a>DetachFromIndex</a> and <a>BatchReadRequest$Operations</a>.'
    BatchDetachFromIndexResponse:
      type: object
      properties:
        DetachedObjectIdentifier:
          $ref: '#/components/schemas/ObjectIdentifier'
          description: The <code>ObjectIdentifier</code> of the object that was detached from the index.
      description: Represents the output of a <a>DetachFromIndex</a> response operation.
    BatchDetachObject:
      type: object
      required:
        - ParentReference
        - LinkName
      properties:
        ParentReference:
          $ref: '#/components/schemas/ObjectReference'
          description: Parent reference from which the object with the specified link name is detached.
        LinkName:
          $ref: '#/components/schemas/LinkName'
          description: The name of the link.
        BatchReferenceName:
          $ref: '#/components/schemas/BatchReferenceName'
          description: 'The batch reference name. See <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_advanced.html#batches">Batches</a> for more information.'
      description: Represents the output of a <a>DetachObject</a> operation.
    BatchDetachObjectResponse:
      type: object
      properties:
        detachedObjectIdentifier:
          $ref: '#/components/schemas/ObjectIdentifier'
          description: The <code>ObjectIdentifier</code> of the detached object.
      description: Represents the output of a <a>DetachObject</a> response operation.
    BatchDetachPolicy:
      type: object
      required:
        - PolicyReference
        - ObjectReference
      properties:
        PolicyReference:
          $ref: '#/components/schemas/ObjectReference'
          description: Reference that identifies the policy object.
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
          description: Reference that identifies the object whose policy object will be detached.
      description: 'Detaches the specified policy from the specified directory inside a <a>BatchWrite</a> operation. For more information, see <a>DetachPolicy</a> and <a>BatchWriteRequest$Operations</a>.'
    BatchDetachPolicyResponse:
      type: object
      properties: {}
      description: Represents the output of a <a>DetachPolicy</a> response operation.
    BatchDetachTypedLink:
      type: object
      required:
        - TypedLinkSpecifier
      properties:
        TypedLinkSpecifier:
          $ref: '#/components/schemas/TypedLinkSpecifier'
          description: Used to accept a typed link specifier as input.
      description: 'Detaches a typed link from a specified source and target object inside a <a>BatchRead</a> operation. For more information, see <a>DetachTypedLink</a> and <a>BatchReadRequest$Operations</a>.'
    BatchDetachTypedLinkResponse:
      type: object
      properties: {}
      description: Represents the output of a <a>DetachTypedLink</a> response operation.
    BatchGetLinkAttributes:
      type: object
      required:
        - TypedLinkSpecifier
        - AttributeNames
      properties:
        TypedLinkSpecifier:
          $ref: '#/components/schemas/TypedLinkSpecifier'
          description: Allows a typed link specifier to be accepted as input.
        AttributeNames:
          $ref: '#/components/schemas/AttributeNameList'
          description: A list of attribute names whose values will be retrieved.
      description: 'Retrieves attributes that are associated with a typed link inside a <a>BatchRead</a> operation. For more information, see <a>GetLinkAttributes</a> and <a>BatchReadRequest$Operations</a>.'
    BatchGetLinkAttributesResponse:
      type: object
      properties:
        Attributes:
          $ref: '#/components/schemas/AttributeKeyAndValueList'
          description: The attributes that are associated with the typed link.
      description: Represents the output of a <a>GetLinkAttributes</a> response operation.
    BatchGetObjectAttributes:
      type: object
      required:
        - ObjectReference
        - SchemaFacet
        - AttributeNames
      properties:
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
          description: Reference that identifies the object whose attributes will be retrieved.
        SchemaFacet:
          $ref: '#/components/schemas/SchemaFacet'
          description: Identifier for the facet whose attributes will be retrieved. See <a>SchemaFacet</a> for details.
        AttributeNames:
          $ref: '#/components/schemas/AttributeNameList'
          description: List of attribute names whose values will be retrieved.
      description: 'Retrieves attributes within a facet that are associated with an object inside an <a>BatchRead</a> operation. For more information, see <a>GetObjectAttributes</a> and <a>BatchReadRequest$Operations</a>.'
    BatchGetObjectAttributesResponse:
      type: object
      properties:
        Attributes:
          $ref: '#/components/schemas/AttributeKeyAndValueList'
          description: The attribute values that are associated with an object.
      description: Represents the output of a <a>GetObjectAttributes</a> response operation.
    BatchGetObjectInformation:
      type: object
      required:
        - ObjectReference
      properties:
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
          description: A reference to the object.
      description: 'Retrieves metadata about an object inside a <a>BatchRead</a> operation. For more information, see <a>GetObjectInformation</a> and <a>BatchReadRequest$Operations</a>.'
    BatchGetObjectInformationResponse:
      type: object
      properties:
        SchemaFacets:
          $ref: '#/components/schemas/SchemaFacetList'
          description: The facets attached to the specified object.
        ObjectIdentifier:
          $ref: '#/components/schemas/ObjectIdentifier'
          description: The <code>ObjectIdentifier</code> of the specified object.
      description: Represents the output of a <a>GetObjectInformation</a> response operation.
    NextToken:
      type: string
    NumberResults:
      type: integer
      minimum: 1
    BatchListAttachedIndices:
      type: object
      required:
        - TargetReference
      properties:
        TargetReference:
          $ref: '#/components/schemas/ObjectReference'
          description: A reference to the object that has indices attached.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
          description: The maximum number of results to retrieve.
      description: 'Lists indices attached to an object inside a <a>BatchRead</a> operation. For more information, see <a>ListAttachedIndices</a> and <a>BatchReadRequest$Operations</a>.'
    IndexAttachmentList:
      type: array
      items:
        $ref: '#/components/schemas/IndexAttachment'
    BatchListAttachedIndicesResponse:
      type: object
      properties:
        IndexAttachments:
          $ref: '#/components/schemas/IndexAttachmentList'
          description: The indices attached to the specified object.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
      description: Represents the output of a <a>ListAttachedIndices</a> response operation.
    TypedLinkAttributeRangeList:
      type: array
      items:
        $ref: '#/components/schemas/TypedLinkAttributeRange'
    BatchListIncomingTypedLinks:
      type: object
      required:
        - ObjectReference
      properties:
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
          description: The reference that identifies the object whose attributes will be listed.
        FilterAttributeRanges:
          $ref: '#/components/schemas/TypedLinkAttributeRangeList'
          description: 'Provides range filters for multiple attributes. When providing ranges to typed link selection, any inexact ranges must be specified at the end. Any attributes that do not have a range specified are presumed to match the entire range.'
        FilterTypedLink:
          $ref: '#/components/schemas/TypedLinkSchemaAndFacetName'
          description: 'Filters are interpreted in the order of the attributes on the typed link facet, not the order in which they are supplied to any API calls.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
          description: The maximum number of results to retrieve.
      description: 'Returns a paginated list of all the incoming <a>TypedLinkSpecifier</a> information for an object inside a <a>BatchRead</a> operation. For more information, see <a>ListIncomingTypedLinks</a> and <a>BatchReadRequest$Operations</a>.'
    TypedLinkSpecifierList:
      type: array
      items:
        $ref: '#/components/schemas/TypedLinkSpecifier'
    BatchListIncomingTypedLinksResponse:
      type: object
      properties:
        LinkSpecifiers:
          $ref: '#/components/schemas/TypedLinkSpecifierList'
          description: Returns one or more typed link specifiers as output.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
      description: Represents the output of a <a>ListIncomingTypedLinks</a> response operation.
    ObjectAttributeRangeList:
      type: array
      items:
        $ref: '#/components/schemas/ObjectAttributeRange'
    BatchListIndex:
      type: object
      required:
        - IndexReference
      properties:
        RangesOnIndexedValues:
          $ref: '#/components/schemas/ObjectAttributeRangeList'
          description: Specifies the ranges of indexed values that you want to query.
        IndexReference:
          $ref: '#/components/schemas/ObjectReference'
          description: The reference to the index to list.
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
          description: The maximum number of results to retrieve.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
      description: 'Lists objects attached to the specified index inside a <a>BatchRead</a> operation. For more information, see <a>ListIndex</a> and <a>BatchReadRequest$Operations</a>.'
    BatchListIndexResponse:
      type: object
      properties:
        IndexAttachments:
          $ref: '#/components/schemas/IndexAttachmentList'
          description: The objects and indexed values attached to the index.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
      description: Represents the output of a <a>ListIndex</a> response operation.
    BatchListObjectAttributes:
      type: object
      required:
        - ObjectReference
      properties:
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
          description: Reference of the object whose attributes need to be listed.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
          description: The maximum number of items to be retrieved in a single call. This is an approximate number.
        FacetFilter:
          $ref: '#/components/schemas/SchemaFacet'
          description: Used to filter the list of object attributes that are associated with a certain facet.
      description: Represents the output of a <a>ListObjectAttributes</a> operation.
    BatchListObjectAttributesResponse:
      type: object
      properties:
        Attributes:
          $ref: '#/components/schemas/AttributeKeyAndValueList'
          description: The attributes map that is associated with the object. <code>AttributeArn</code> is the key; attribute value is the value.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
      description: Represents the output of a <a>ListObjectAttributes</a> response operation.
    BatchListObjectChildren:
      type: object
      required:
        - ObjectReference
      properties:
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
          description: Reference of the object for which child objects are being listed.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
          description: Maximum number of items to be retrieved in a single call. This is an approximate number.
      description: Represents the output of a <a>ListObjectChildren</a> operation.
    LinkNameToObjectIdentifierMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ObjectIdentifier'
    BatchListObjectChildrenResponse:
      type: object
      properties:
        Children:
          $ref: '#/components/schemas/LinkNameToObjectIdentifierMap'
          description: 'The children structure, which is a map with the key as the <code>LinkName</code> and <code>ObjectIdentifier</code> as the value.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
      description: Represents the output of a <a>ListObjectChildren</a> response operation.
    BatchListObjectParentPaths:
      type: object
      required:
        - ObjectReference
      properties:
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
          description: The reference that identifies the object whose attributes will be listed.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
          description: The maximum number of results to retrieve.
      description: 'Retrieves all available parent paths for any object type such as node, leaf node, policy node, and index node objects inside a <a>BatchRead</a> operation. For more information, see <a>ListObjectParentPaths</a> and <a>BatchReadRequest$Operations</a>.'
    PathToObjectIdentifiersList:
      type: array
      items:
        $ref: '#/components/schemas/PathToObjectIdentifiers'
    BatchListObjectParentPathsResponse:
      type: object
      properties:
        PathToObjectIdentifiersList:
          $ref: '#/components/schemas/PathToObjectIdentifiersList'
          description: Returns the path to the <code>ObjectIdentifiers</code> that are associated with the directory.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
      description: Represents the output of a <a>ListObjectParentPaths</a> response operation.
    BatchListObjectPolicies:
      type: object
      required:
        - ObjectReference
      properties:
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
          description: The reference that identifies the object whose attributes will be listed.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
          description: The maximum number of results to retrieve.
      description: 'Returns policies attached to an object in pagination fashion inside a <a>BatchRead</a> operation. For more information, see <a>ListObjectPolicies</a> and <a>BatchReadRequest$Operations</a>.'
    ObjectIdentifierList:
      type: array
      items:
        $ref: '#/components/schemas/ObjectIdentifier'
    BatchListObjectPoliciesResponse:
      type: object
      properties:
        AttachedPolicyIds:
          $ref: '#/components/schemas/ObjectIdentifierList'
          description: 'A list of policy <code>ObjectIdentifiers</code>, that are attached to the object.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
      description: Represents the output of a <a>ListObjectPolicies</a> response operation.
    BatchListOutgoingTypedLinks:
      type: object
      required:
        - ObjectReference
      properties:
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
          description: The reference that identifies the object whose attributes will be listed.
        FilterAttributeRanges:
          $ref: '#/components/schemas/TypedLinkAttributeRangeList'
          description: 'Provides range filters for multiple attributes. When providing ranges to typed link selection, any inexact ranges must be specified at the end. Any attributes that do not have a range specified are presumed to match the entire range.'
        FilterTypedLink:
          $ref: '#/components/schemas/TypedLinkSchemaAndFacetName'
          description: 'Filters are interpreted in the order of the attributes defined on the typed link facet, not the order they are supplied to any API calls.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
          description: The maximum number of results to retrieve.
      description: 'Returns a paginated list of all the outgoing <a>TypedLinkSpecifier</a> information for an object inside a <a>BatchRead</a> operation. For more information, see <a>ListOutgoingTypedLinks</a> and <a>BatchReadRequest$Operations</a>.'
    BatchListOutgoingTypedLinksResponse:
      type: object
      properties:
        TypedLinkSpecifiers:
          $ref: '#/components/schemas/TypedLinkSpecifierList'
          description: Returns a typed link specifier as output.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
      description: Represents the output of a <a>ListOutgoingTypedLinks</a> response operation.
    BatchListPolicyAttachments:
      type: object
      required:
        - PolicyReference
      properties:
        PolicyReference:
          $ref: '#/components/schemas/ObjectReference'
          description: The reference that identifies the policy object.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
          description: The maximum number of results to retrieve.
      description: 'Returns all of the <code>ObjectIdentifiers</code> to which a given policy is attached inside a <a>BatchRead</a> operation. For more information, see <a>ListPolicyAttachments</a> and <a>BatchReadRequest$Operations</a>.'
    BatchListPolicyAttachmentsResponse:
      type: object
      properties:
        ObjectIdentifiers:
          $ref: '#/components/schemas/ObjectIdentifierList'
          description: A list of <code>ObjectIdentifiers</code> to which the policy is attached.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
      description: Represents the output of a <a>ListPolicyAttachments</a> response operation.
    BatchLookupPolicy:
      type: object
      required:
        - ObjectReference
      properties:
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
          description: Reference that identifies the object whose policies will be looked up.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
          description: The maximum number of results to retrieve.
      description: 'Lists all policies from the root of the Directory to the object specified inside a <a>BatchRead</a> operation. For more information, see <a>LookupPolicy</a> and <a>BatchReadRequest$Operations</a>.'
    PolicyToPathList:
      type: array
      items:
        $ref: '#/components/schemas/PolicyToPath'
    BatchLookupPolicyResponse:
      type: object
      properties:
        PolicyToPathList:
          $ref: '#/components/schemas/PolicyToPathList'
          description: 'Provides list of path to policies. Policies contain <code>PolicyId</code>, <code>ObjectIdentifier</code>, and <code>PolicyType</code>. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_key_concepts.html#policies">Policies</a>.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
      description: Represents the output of a <a>LookupPolicy</a> response operation.
    BatchOperationIndex:
      type: integer
    BatchReadExceptionType:
      type: string
      enum:
        - ValidationException
        - InvalidArnException
        - ResourceNotFoundException
        - InvalidNextTokenException
        - AccessDeniedException
        - NotNodeException
        - FacetValidationException
        - CannotListParentOfRootException
        - NotIndexException
        - NotPolicyException
        - DirectoryNotEnabledException
        - LimitExceededException
        - InternalServiceException
    BatchReadException:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/BatchReadExceptionType'
          description: 'A type of exception, such as <code>InvalidArnException</code>.'
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
          description: An exception message that is associated with the failure.
      description: 'The batch read exception structure, which contains the exception type and message.'
    BatchReadOperationList:
      type: array
      items:
        $ref: '#/components/schemas/BatchReadOperation'
    BatchReadSuccessfulResponse:
      type: object
      properties:
        ListObjectAttributes:
          $ref: '#/components/schemas/BatchListObjectAttributesResponse'
          description: Lists all attributes that are associated with an object.
        ListObjectChildren:
          $ref: '#/components/schemas/BatchListObjectChildrenResponse'
          description: Returns a paginated list of child objects that are associated with a given object.
        GetObjectInformation:
          $ref: '#/components/schemas/BatchGetObjectInformationResponse'
          description: Retrieves metadata about an object.
        GetObjectAttributes:
          $ref: '#/components/schemas/BatchGetObjectAttributesResponse'
          description: Retrieves attributes within a facet that are associated with an object.
        ListAttachedIndices:
          $ref: '#/components/schemas/BatchListAttachedIndicesResponse'
          description: Lists indices attached to an object.
        ListObjectParentPaths:
          $ref: '#/components/schemas/BatchListObjectParentPathsResponse'
          description: 'Retrieves all available parent paths for any object type such as node, leaf node, policy node, and index node objects. For more information about objects, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_key_concepts.html#dirstructure">Directory Structure</a>.'
        ListObjectPolicies:
          $ref: '#/components/schemas/BatchListObjectPoliciesResponse'
          description: Returns policies attached to an object in pagination fashion.
        ListPolicyAttachments:
          $ref: '#/components/schemas/BatchListPolicyAttachmentsResponse'
          description: Returns all of the <code>ObjectIdentifiers</code> to which a given policy is attached.
        LookupPolicy:
          $ref: '#/components/schemas/BatchLookupPolicyResponse'
          description: 'Lists all policies from the root of the <a>Directory</a> to the object specified. If there are no policies present, an empty list is returned. If policies are present, and if some objects don''t have the policies attached, it returns the <code>ObjectIdentifier</code> for such objects. If policies are present, it returns <code>ObjectIdentifier</code>, <code>policyId</code>, and <code>policyType</code>. Paths that don''t lead to the root from the target object are ignored. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_key_concepts.html#policies">Policies</a>.'
        ListIndex:
          $ref: '#/components/schemas/BatchListIndexResponse'
          description: Lists objects attached to the specified index.
        ListOutgoingTypedLinks:
          $ref: '#/components/schemas/BatchListOutgoingTypedLinksResponse'
          description: 'Returns a paginated list of all the outgoing <a>TypedLinkSpecifier</a> information for an object. It also supports filtering by typed link facet and identity attributes. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
        ListIncomingTypedLinks:
          $ref: '#/components/schemas/BatchListIncomingTypedLinksResponse'
          description: 'Returns a paginated list of all the incoming <a>TypedLinkSpecifier</a> information for an object. It also supports filtering by typed link facet and identity attributes. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
        GetLinkAttributes:
          $ref: '#/components/schemas/BatchGetLinkAttributesResponse'
          description: The list of attributes to retrieve from the typed link.
      description: Represents the output of a <code>BatchRead</code> success response operation.
    BatchReadOperationResponse:
      type: object
      properties:
        SuccessfulResponse:
          $ref: '#/components/schemas/BatchReadSuccessfulResponse'
          description: Identifies which operation in a batch has succeeded.
        ExceptionResponse:
          $ref: '#/components/schemas/BatchReadException'
          description: Identifies which operation in a batch has failed.
      description: Represents the output of a <code>BatchRead</code> response operation.
    BatchReadOperationResponseList:
      type: array
      items:
        $ref: '#/components/schemas/BatchReadOperationResponse'
    ConsistencyLevel:
      type: string
      enum:
        - SERIALIZABLE
        - EVENTUAL
    BatchReadRequest:
      type: object
      required:
        - Operations
      title: BatchReadRequest
      properties:
        Operations:
          $ref: '#/components/schemas/BatchReadOperationList'
          description: A list of operations that are part of the batch.
    BatchRemoveFacetFromObject:
      type: object
      required:
        - SchemaFacet
        - ObjectReference
      properties:
        SchemaFacet:
          $ref: '#/components/schemas/SchemaFacet'
          description: The facet to remove from the object.
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
          description: A reference to the object whose facet will be removed.
      description: A batch operation to remove a facet from an object.
    BatchRemoveFacetFromObjectResponse:
      type: object
      properties: {}
      description: An empty result that represents success.
    LinkAttributeUpdateList:
      type: array
      items:
        $ref: '#/components/schemas/LinkAttributeUpdate'
    BatchUpdateLinkAttributes:
      type: object
      required:
        - TypedLinkSpecifier
        - AttributeUpdates
      properties:
        TypedLinkSpecifier:
          $ref: '#/components/schemas/TypedLinkSpecifier'
          description: Allows a typed link specifier to be accepted as input.
        AttributeUpdates:
          $ref: '#/components/schemas/LinkAttributeUpdateList'
          description: The attributes update structure.
      description: 'Updates a given typed link’s attributes inside a <a>BatchRead</a> operation. Attributes to be updated must not contribute to the typed link’s identity, as defined by its <code>IdentityAttributeOrder</code>. For more information, see <a>UpdateLinkAttributes</a> and <a>BatchReadRequest$Operations</a>.'
    BatchUpdateLinkAttributesResponse:
      type: object
      properties: {}
      description: Represents the output of a <a>UpdateLinkAttributes</a> response operation.
    ObjectAttributeUpdateList:
      type: array
      items:
        $ref: '#/components/schemas/ObjectAttributeUpdate'
    BatchUpdateObjectAttributes:
      type: object
      required:
        - ObjectReference
        - AttributeUpdates
      properties:
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
          description: Reference that identifies the object.
        AttributeUpdates:
          $ref: '#/components/schemas/ObjectAttributeUpdateList'
          description: Attributes update structure.
      description: 'Represents the output of a <code>BatchUpdate</code> operation. '
    BatchUpdateObjectAttributesResponse:
      type: object
      properties:
        ObjectIdentifier:
          $ref: '#/components/schemas/ObjectIdentifier'
          description: ID that is associated with the object.
      description: Represents the output of a <code>BatchUpdate</code> response operation.
    BatchWriteExceptionType:
      type: string
      enum:
        - InternalServiceException
        - ValidationException
        - InvalidArnException
        - LinkNameAlreadyInUseException
        - StillContainsLinksException
        - FacetValidationException
        - ObjectNotDetachedException
        - ResourceNotFoundException
        - AccessDeniedException
        - InvalidAttachmentException
        - NotIndexException
        - NotNodeException
        - IndexedAttributeMissingException
        - ObjectAlreadyDetachedException
        - NotPolicyException
        - DirectoryNotEnabledException
        - LimitExceededException
        - UnsupportedIndexTypeException
    BatchWriteOperationList:
      type: array
      items:
        $ref: '#/components/schemas/BatchWriteOperation'
    BatchWriteOperationResponse:
      type: object
      properties:
        CreateObject:
          $ref: '#/components/schemas/BatchCreateObjectResponse'
          description: Creates an object in a <a>Directory</a>.
        AttachObject:
          $ref: '#/components/schemas/BatchAttachObjectResponse'
          description: Attaches an object to a <a>Directory</a>.
        DetachObject:
          $ref: '#/components/schemas/BatchDetachObjectResponse'
          description: Detaches an object from a <a>Directory</a>.
        UpdateObjectAttributes:
          $ref: '#/components/schemas/BatchUpdateObjectAttributesResponse'
          description: Updates a given object’s attributes.
        DeleteObject:
          $ref: '#/components/schemas/BatchDeleteObjectResponse'
          description: Deletes an object in a <a>Directory</a>.
        AddFacetToObject:
          $ref: '#/components/schemas/BatchAddFacetToObjectResponse'
          description: The result of an add facet to object batch operation.
        RemoveFacetFromObject:
          $ref: '#/components/schemas/BatchRemoveFacetFromObjectResponse'
          description: The result of a batch remove facet from object operation.
        AttachPolicy:
          $ref: '#/components/schemas/BatchAttachPolicyResponse'
          description: Attaches a policy object to a regular object. An object can have a limited number of attached policies.
        DetachPolicy:
          $ref: '#/components/schemas/BatchDetachPolicyResponse'
          description: Detaches a policy from a <a>Directory</a>.
        CreateIndex:
          $ref: '#/components/schemas/BatchCreateIndexResponse'
          description: 'Creates an index object. See <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_indexing.html">Indexing</a> for more information.'
        AttachToIndex:
          $ref: '#/components/schemas/BatchAttachToIndexResponse'
          description: Attaches the specified object to the specified index.
        DetachFromIndex:
          $ref: '#/components/schemas/BatchDetachFromIndexResponse'
          description: Detaches the specified object from the specified index.
        AttachTypedLink:
          $ref: '#/components/schemas/BatchAttachTypedLinkResponse'
          description: 'Attaches a typed link to a specified source and target object. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
        DetachTypedLink:
          $ref: '#/components/schemas/BatchDetachTypedLinkResponse'
          description: 'Detaches a typed link from a specified source and target object. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
        UpdateLinkAttributes:
          $ref: '#/components/schemas/BatchUpdateLinkAttributesResponse'
          description: Represents the output of a <code>BatchWrite</code> response operation.
      description: Represents the output of a <code>BatchWrite</code> response operation.
    BatchWriteOperationResponseList:
      type: array
      items:
        $ref: '#/components/schemas/BatchWriteOperationResponse'
    BatchWriteRequest:
      type: object
      required:
        - Operations
      title: BatchWriteRequest
      properties:
        Operations:
          $ref: '#/components/schemas/BatchWriteOperationList'
          description: A list of operations that are part of the batch.
    BinaryAttributeValue:
      type: string
    BooleanAttributeValue:
      type: boolean
    DirectoryName:
      type: string
      pattern: '^[a-zA-Z0-9._-]*$'
      minLength: 1
      maxLength: 64
    CreateDirectoryRequest:
      type: object
      required:
        - Name
      title: CreateDirectoryRequest
      properties:
        Name:
          $ref: '#/components/schemas/DirectoryName'
          description: 'The name of the <a>Directory</a>. Should be unique per account, per region.'
    DirectoryArn:
      type: string
    FacetAttributeList:
      type: array
      items:
        $ref: '#/components/schemas/FacetAttribute'
    ObjectType:
      type: string
      enum:
        - NODE
        - LEAF_NODE
        - POLICY
        - INDEX
    CreateFacetRequest:
      type: object
      required:
        - Name
        - ObjectType
      title: CreateFacetRequest
      properties:
        Name:
          $ref: '#/components/schemas/FacetName'
          description: 'The name of the <a>Facet</a>, which is unique for a given schema.'
        Attributes:
          $ref: '#/components/schemas/FacetAttributeList'
          description: The attributes that are associated with the <a>Facet</a>.
        ObjectType:
          $ref: '#/components/schemas/ObjectType'
          description: '<p>Specifies whether a given object created from this facet is of type node, leaf node, policy or index.</p> <ul> <li> <p>Node: Can have multiple children but one parent.</p> </li> </ul> <ul> <li> <p>Leaf node: Cannot have children but can have multiple parents.</p> </li> </ul> <ul> <li> <p>Policy: Allows you to store a policy document and policy type. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_key_concepts.html#policies">Policies</a>.</p> </li> </ul> <ul> <li> <p>Index: Can be created with the Index API.</p> </li> </ul>'
    CreateIndexRequest:
      type: object
      required:
        - OrderedIndexedAttributeList
        - IsUnique
      title: CreateIndexRequest
      properties:
        OrderedIndexedAttributeList:
          $ref: '#/components/schemas/AttributeKeyList'
          description: Specifies the attributes that should be indexed on. Currently only a single attribute is supported.
        IsUnique:
          $ref: '#/components/schemas/Bool'
          description: Indicates whether the attribute that is being indexed has unique values or not.
        ParentReference:
          $ref: '#/components/schemas/ObjectReference'
          description: A reference to the parent object that contains the index object.
        LinkName:
          $ref: '#/components/schemas/LinkName'
          description: The name of the link between the parent object and the index object.
    CreateObjectRequest:
      type: object
      required:
        - SchemaFacets
      title: CreateObjectRequest
      properties:
        SchemaFacets:
          $ref: '#/components/schemas/SchemaFacetList'
          description: A list of schema facets to be associated with the object. Do not provide minor version components. See <a>SchemaFacet</a> for details.
        ObjectAttributeList:
          $ref: '#/components/schemas/AttributeKeyAndValueList'
          description: The attribute map whose attribute ARN contains the key and attribute value as the map value.
        ParentReference:
          $ref: '#/components/schemas/ObjectReference'
          description: 'If specified, the parent reference to which this object will be attached.'
        LinkName:
          $ref: '#/components/schemas/LinkName'
          description: The name of link that is used to attach this object to a parent.
    SchemaName:
      type: string
      pattern: '^[a-zA-Z0-9._-]*$'
      minLength: 1
      maxLength: 32
    CreateSchemaRequest:
      type: object
      required:
        - Name
      title: CreateSchemaRequest
      properties:
        Name:
          $ref: '#/components/schemas/SchemaName'
          description: The name that is associated with the schema. This is unique to each account and in each region.
    TypedLinkFacet:
      type: object
      required:
        - Name
        - Attributes
        - IdentityAttributeOrder
      properties:
        Name:
          $ref: '#/components/schemas/TypedLinkName'
          description: The unique name of the typed link facet.
        Attributes:
          $ref: '#/components/schemas/TypedLinkAttributeDefinitionList'
          description: 'A set of key-value pairs associated with the typed link. Typed link attributes are used when you have data values that are related to the link itself, and not to one of the two objects being linked. Identity attributes also serve to distinguish the link from others of the same type between the same objects.'
        IdentityAttributeOrder:
          $ref: '#/components/schemas/AttributeNameList'
          description: 'The set of attributes that distinguish links made from this facet from each other, in the order of significance. Listing typed links can filter on the values of these attributes. See <a>ListOutgoingTypedLinks</a> and <a>ListIncomingTypedLinks</a> for details.'
      description: 'Defines the typed links structure and its attributes. To create a typed link facet, use the <a>CreateTypedLinkFacet</a> API.'
    CreateTypedLinkFacetRequest:
      type: object
      required:
        - Facet
      title: CreateTypedLinkFacetRequest
      properties:
        Facet:
          $ref: '#/components/schemas/TypedLinkFacet'
          description: ' <a>Facet</a> structure that is associated with the typed link facet.'
    Date:
      type: string
      format: date-time
    DatetimeAttributeValue:
      type: string
      format: date-time
    DeleteDirectoryRequest:
      type: object
      title: DeleteDirectoryRequest
      properties: {}
    DeleteFacetRequest:
      type: object
      required:
        - Name
      title: DeleteFacetRequest
      properties:
        Name:
          $ref: '#/components/schemas/FacetName'
          description: The name of the facet to delete.
    DeleteObjectRequest:
      type: object
      required:
        - ObjectReference
      title: DeleteObjectRequest
      properties:
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
          description: A reference that identifies the object.
    DeleteSchemaRequest:
      type: object
      title: DeleteSchemaRequest
      properties: {}
    DeleteTypedLinkFacetRequest:
      type: object
      required:
        - Name
      title: DeleteTypedLinkFacetRequest
      properties:
        Name:
          $ref: '#/components/schemas/TypedLinkName'
          description: The unique name of the typed link facet.
    DetachFromIndexRequest:
      type: object
      required:
        - IndexReference
        - TargetReference
      title: DetachFromIndexRequest
      properties:
        IndexReference:
          $ref: '#/components/schemas/ObjectReference'
          description: A reference to the index object.
        TargetReference:
          $ref: '#/components/schemas/ObjectReference'
          description: A reference to the object being detached from the index.
    DetachObjectRequest:
      type: object
      required:
        - ParentReference
        - LinkName
      title: DetachObjectRequest
      properties:
        ParentReference:
          $ref: '#/components/schemas/ObjectReference'
          description: The parent reference from which the object with the specified link name is detached.
        LinkName:
          $ref: '#/components/schemas/LinkName'
          description: The link name associated with the object that needs to be detached.
    DetachPolicyRequest:
      type: object
      required:
        - PolicyReference
        - ObjectReference
      title: DetachPolicyRequest
      properties:
        PolicyReference:
          $ref: '#/components/schemas/ObjectReference'
          description: Reference that identifies the policy object.
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
          description: Reference that identifies the object whose policy object will be detached.
    DetachTypedLinkRequest:
      type: object
      required:
        - TypedLinkSpecifier
      title: DetachTypedLinkRequest
      properties:
        TypedLinkSpecifier:
          $ref: '#/components/schemas/TypedLinkSpecifier'
          description: Used to accept a typed link specifier as input.
    DirectoryState:
      type: string
      enum:
        - ENABLED
        - DISABLED
        - DELETED
    Directory:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/DirectoryName'
          description: The name of the directory.
        DirectoryArn:
          $ref: '#/components/schemas/DirectoryArn'
          description: 'The Amazon Resource Name (ARN) that is associated with the directory. For more information, see <a>arns</a>.'
        State:
          $ref: '#/components/schemas/DirectoryState'
          description: 'The state of the directory. Can be either <code>Enabled</code>, <code>Disabled</code>, or <code>Deleted</code>.'
        CreationDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time when the directory was created.
      description: Directory structure that includes the directory name and directory ARN.
    DirectoryList:
      type: array
      items:
        $ref: '#/components/schemas/Directory'
    DisableDirectoryRequest:
      type: object
      title: DisableDirectoryRequest
      properties: {}
    EnableDirectoryRequest:
      type: object
      title: EnableDirectoryRequest
      properties: {}
    Facet:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/FacetName'
          description: The name of the <a>Facet</a>.
        ObjectType:
          $ref: '#/components/schemas/ObjectType'
          description: The object type that is associated with the facet. See <a>CreateFacetRequest$ObjectType</a> for more details.
      description: 'A structure that contains <code>Name</code>, <code>ARN</code>, <code>Attributes</code>, <code> <a>Rule</a>s</code>, and <code>ObjectTypes</code>. See <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/whatarefacets.html">Facets</a> for more information.'
    FacetAttributeDefinition:
      type: object
      required:
        - Type
      properties:
        Type:
          $ref: '#/components/schemas/FacetAttributeType'
          description: The type of the attribute.
        DefaultValue:
          $ref: '#/components/schemas/TypedAttributeValue'
          description: The default value of the attribute (if configured).
        IsImmutable:
          $ref: '#/components/schemas/Bool'
          description: Whether the attribute is mutable or not.
        Rules:
          $ref: '#/components/schemas/RuleMap'
          description: Validation rules attached to the attribute definition.
      description: 'A facet attribute definition. See <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_advanced.html#attributereferences">Attribute References</a> for more information.'
    FacetAttributeReference:
      type: object
      required:
        - TargetFacetName
        - TargetAttributeName
      properties:
        TargetFacetName:
          $ref: '#/components/schemas/FacetName'
          description: 'The target facet name that is associated with the facet reference. See <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_advanced.html#attributereferences">Attribute References</a> for more information.'
        TargetAttributeName:
          $ref: '#/components/schemas/AttributeName'
          description: 'The target attribute name that is associated with the facet reference. See <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_advanced.html#attributereferences">Attribute References</a> for more information.'
      description: The facet attribute reference that specifies the attribute definition that contains the attribute facet name and attribute name.
    RequiredAttributeBehavior:
      type: string
      enum:
        - REQUIRED_ALWAYS
        - NOT_REQUIRED
    FacetAttributeType:
      type: string
      enum:
        - STRING
        - BINARY
        - BOOLEAN
        - NUMBER
        - DATETIME
    RuleMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Rule'
    UpdateActionType:
      type: string
      enum:
        - CREATE_OR_UPDATE
        - DELETE
    FacetAttributeUpdateList:
      type: array
      items:
        $ref: '#/components/schemas/FacetAttributeUpdate'
    FacetNameList:
      type: array
      items:
        $ref: '#/components/schemas/FacetName'
    GetAppliedSchemaVersionRequest:
      type: object
      required:
        - SchemaArn
      title: GetAppliedSchemaVersionRequest
      properties:
        SchemaArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the applied schema.
    GetDirectoryRequest:
      type: object
      title: GetDirectoryRequest
      properties: {}
    GetFacetRequest:
      type: object
      required:
        - Name
      title: GetFacetRequest
      properties:
        Name:
          $ref: '#/components/schemas/FacetName'
          description: The name of the facet to retrieve.
    GetLinkAttributesRequest:
      type: object
      required:
        - TypedLinkSpecifier
        - AttributeNames
      title: GetLinkAttributesRequest
      properties:
        TypedLinkSpecifier:
          $ref: '#/components/schemas/TypedLinkSpecifier'
          description: Allows a typed link specifier to be accepted as input.
        AttributeNames:
          $ref: '#/components/schemas/AttributeNameList'
          description: A list of attribute names whose values will be retrieved.
        ConsistencyLevel:
          $ref: '#/components/schemas/ConsistencyLevel'
          description: The consistency level at which to retrieve the attributes on a typed link.
    GetObjectAttributesRequest:
      type: object
      required:
        - ObjectReference
        - SchemaFacet
        - AttributeNames
      title: GetObjectAttributesRequest
      properties:
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
          description: Reference that identifies the object whose attributes will be retrieved.
        SchemaFacet:
          $ref: '#/components/schemas/SchemaFacet'
          description: Identifier for the facet whose attributes will be retrieved. See <a>SchemaFacet</a> for details.
        AttributeNames:
          $ref: '#/components/schemas/AttributeNameList'
          description: List of attribute names whose values will be retrieved.
    GetObjectInformationRequest:
      type: object
      required:
        - ObjectReference
      title: GetObjectInformationRequest
      properties:
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
          description: A reference to the object.
    GetSchemaAsJsonRequest:
      type: object
      title: GetSchemaAsJsonRequest
      properties: {}
    SchemaJsonDocument:
      type: string
    GetTypedLinkFacetInformationRequest:
      type: object
      required:
        - Name
      title: GetTypedLinkFacetInformationRequest
      properties:
        Name:
          $ref: '#/components/schemas/TypedLinkName'
          description: The unique name of the typed link facet.
    IndexAttachment:
      type: object
      properties:
        IndexedAttributes:
          $ref: '#/components/schemas/AttributeKeyAndValueList'
          description: The indexed attribute values.
        ObjectIdentifier:
          $ref: '#/components/schemas/ObjectIdentifier'
          description: 'In response to <a>ListIndex</a>, the <code>ObjectIdentifier</code> of the object attached to the index. In response to <a>ListAttachedIndices</a>, the <code>ObjectIdentifier</code> of the index attached to the object. This field will always contain the <code>ObjectIdentifier</code> of the object on the opposite side of the attachment specified in the query.'
      description: Represents an index and an attached object.
    LinkAttributeAction:
      type: object
      properties:
        AttributeActionType:
          $ref: '#/components/schemas/UpdateActionType'
          description: A type that can be either <code>UPDATE_OR_CREATE</code> or <code>DELETE</code>.
        AttributeUpdateValue:
          $ref: '#/components/schemas/TypedAttributeValue'
          description: The value that you want to update to.
      description: The action to take on a typed link attribute value. Updates are only supported for attributes which don’t contribute to link identity.
    ListAppliedSchemaArnsRequest:
      type: object
      required:
        - DirectoryArn
      title: ListAppliedSchemaArnsRequest
      properties:
        DirectoryArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the directory you are listing.
        SchemaArn:
          $ref: '#/components/schemas/Arn'
          description: The response for <code>ListAppliedSchemaArns</code> when this parameter is used will list all minor version ARNs for a major version.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
          description: The maximum number of results to retrieve.
    ListAttachedIndicesRequest:
      type: object
      required:
        - TargetReference
      title: ListAttachedIndicesRequest
      properties:
        TargetReference:
          $ref: '#/components/schemas/ObjectReference'
          description: A reference to the object that has indices attached.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
          description: The maximum number of results to retrieve.
    ListDevelopmentSchemaArnsRequest:
      type: object
      title: ListDevelopmentSchemaArnsRequest
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
          description: The maximum number of results to retrieve.
    ListDirectoriesRequest:
      type: object
      title: ListDirectoriesRequest
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
          description: The maximum number of results to retrieve.
        state:
          $ref: '#/components/schemas/DirectoryState'
          description: 'The state of the directories in the list. Can be either Enabled, Disabled, or Deleted.'
    ListFacetAttributesRequest:
      type: object
      required:
        - Name
      title: ListFacetAttributesRequest
      properties:
        Name:
          $ref: '#/components/schemas/FacetName'
          description: The name of the facet whose attributes will be retrieved.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
          description: The maximum number of results to retrieve.
    ListFacetNamesRequest:
      type: object
      title: ListFacetNamesRequest
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
          description: The maximum number of results to retrieve.
    ListIncomingTypedLinksRequest:
      type: object
      required:
        - ObjectReference
      title: ListIncomingTypedLinksRequest
      properties:
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
          description: Reference that identifies the object whose attributes will be listed.
        FilterAttributeRanges:
          $ref: '#/components/schemas/TypedLinkAttributeRangeList'
          description: 'Provides range filters for multiple attributes. When providing ranges to typed link selection, any inexact ranges must be specified at the end. Any attributes that do not have a range specified are presumed to match the entire range.'
        FilterTypedLink:
          $ref: '#/components/schemas/TypedLinkSchemaAndFacetName'
          description: 'Filters are interpreted in the order of the attributes on the typed link facet, not the order in which they are supplied to any API calls.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
          description: The maximum number of results to retrieve.
        ConsistencyLevel:
          $ref: '#/components/schemas/ConsistencyLevel'
          description: The consistency level to execute the request at.
    ListIndexRequest:
      type: object
      required:
        - IndexReference
      title: ListIndexRequest
      properties:
        RangesOnIndexedValues:
          $ref: '#/components/schemas/ObjectAttributeRangeList'
          description: Specifies the ranges of indexed values that you want to query.
        IndexReference:
          $ref: '#/components/schemas/ObjectReference'
          description: The reference to the index to list.
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
          description: 'The maximum number of objects in a single page to retrieve from the index during a request. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/limits.html#limits_cd">AWS Directory Service Limits</a>.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
    ListObjectAttributesRequest:
      type: object
      required:
        - ObjectReference
      title: ListObjectAttributesRequest
      properties:
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
          description: The reference that identifies the object whose attributes will be listed.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
          description: The maximum number of items to be retrieved in a single call. This is an approximate number.
        FacetFilter:
          $ref: '#/components/schemas/SchemaFacet'
          description: Used to filter the list of object attributes that are associated with a certain facet.
    ListObjectChildrenRequest:
      type: object
      required:
        - ObjectReference
      title: ListObjectChildrenRequest
      properties:
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
          description: The reference that identifies the object for which child objects are being listed.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
          description: The maximum number of items to be retrieved in a single call. This is an approximate number.
    ListObjectParentPathsRequest:
      type: object
      required:
        - ObjectReference
      title: ListObjectParentPathsRequest
      properties:
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
          description: The reference that identifies the object whose parent paths are listed.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
          description: The maximum number of items to be retrieved in a single call. This is an approximate number.
    ListObjectParentsRequest:
      type: object
      required:
        - ObjectReference
      title: ListObjectParentsRequest
      properties:
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
          description: The reference that identifies the object for which parent objects are being listed.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
          description: The maximum number of items to be retrieved in a single call. This is an approximate number.
    ObjectIdentifierToLinkNameMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/LinkName'
    ListObjectPoliciesRequest:
      type: object
      required:
        - ObjectReference
      title: ListObjectPoliciesRequest
      properties:
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
          description: Reference that identifies the object for which policies will be listed.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
          description: The maximum number of items to be retrieved in a single call. This is an approximate number.
    ListOutgoingTypedLinksRequest:
      type: object
      required:
        - ObjectReference
      title: ListOutgoingTypedLinksRequest
      properties:
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
          description: A reference that identifies the object whose attributes will be listed.
        FilterAttributeRanges:
          $ref: '#/components/schemas/TypedLinkAttributeRangeList'
          description: 'Provides range filters for multiple attributes. When providing ranges to typed link selection, any inexact ranges must be specified at the end. Any attributes that do not have a range specified are presumed to match the entire range.'
        FilterTypedLink:
          $ref: '#/components/schemas/TypedLinkSchemaAndFacetName'
          description: 'Filters are interpreted in the order of the attributes defined on the typed link facet, not the order they are supplied to any API calls.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
          description: The maximum number of results to retrieve.
        ConsistencyLevel:
          $ref: '#/components/schemas/ConsistencyLevel'
          description: The consistency level to execute the request at.
    ListPolicyAttachmentsRequest:
      type: object
      required:
        - PolicyReference
      title: ListPolicyAttachmentsRequest
      properties:
        PolicyReference:
          $ref: '#/components/schemas/ObjectReference'
          description: The reference that identifies the policy object.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
          description: The maximum number of items to be retrieved in a single call. This is an approximate number.
    ListPublishedSchemaArnsRequest:
      type: object
      title: ListPublishedSchemaArnsRequest
      properties:
        SchemaArn:
          $ref: '#/components/schemas/Arn'
          description: The response for <code>ListPublishedSchemaArns</code> when this parameter is used will list all minor version ARNs for a major version.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
          description: The maximum number of results to retrieve.
    TagsNumberResults:
      type: integer
      minimum: 50
    ListTagsForResourceRequest:
      type: object
      required:
        - ResourceArn
      title: ListTagsForResourceRequest
      properties:
        ResourceArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource. Tagging is only supported for directories.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token. This is for future use. Currently pagination is not supported for tagging.
        MaxResults:
          $ref: '#/components/schemas/TagsNumberResults'
          description: The <code>MaxResults</code> parameter sets the maximum number of results returned in a single page. This is for future use and is not supported currently.
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    ListTypedLinkFacetAttributesRequest:
      type: object
      required:
        - Name
      title: ListTypedLinkFacetAttributesRequest
      properties:
        Name:
          $ref: '#/components/schemas/TypedLinkName'
          description: The unique name of the typed link facet.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
          description: The maximum number of results to retrieve.
    ListTypedLinkFacetNamesRequest:
      type: object
      title: ListTypedLinkFacetNamesRequest
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
          description: The maximum number of results to retrieve.
    TypedLinkNameList:
      type: array
      items:
        $ref: '#/components/schemas/TypedLinkName'
    LookupPolicyRequest:
      type: object
      required:
        - ObjectReference
      title: LookupPolicyRequest
      properties:
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
          description: Reference that identifies the object whose policies will be looked up.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token to request the next page of results.
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
          description: The maximum number of items to be retrieved in a single call. This is an approximate number.
    NumberAttributeValue:
      type: string
    ObjectAttributeAction:
      type: object
      properties:
        ObjectAttributeActionType:
          $ref: '#/components/schemas/UpdateActionType'
          description: A type that can be either <code>Update</code> or <code>Delete</code>.
        ObjectAttributeUpdateValue:
          $ref: '#/components/schemas/TypedAttributeValue'
          description: The value that you want to update to.
      description: The action to take on the object attribute.
    TypedAttributeValueRange:
      type: object
      required:
        - StartMode
        - EndMode
      properties:
        StartMode:
          $ref: '#/components/schemas/RangeMode'
          description: The inclusive or exclusive range start.
        StartValue:
          $ref: '#/components/schemas/TypedAttributeValue'
          description: The value to start the range at.
        EndMode:
          $ref: '#/components/schemas/RangeMode'
          description: The inclusive or exclusive range end.
        EndValue:
          $ref: '#/components/schemas/TypedAttributeValue'
          description: The attribute value to terminate the range at.
      description: 'A range of attribute values. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#rangefilters">Range Filters</a>.'
    PathString:
      type: string
    PathToObjectIdentifiers:
      type: object
      properties:
        Path:
          $ref: '#/components/schemas/PathString'
          description: The path that is used to identify the object starting from directory root.
        ObjectIdentifiers:
          $ref: '#/components/schemas/ObjectIdentifierList'
          description: Lists <code>ObjectIdentifiers</code> starting from directory root to the object in the request.
      description: Returns the path to the <code>ObjectIdentifiers</code> that is associated with the directory.
    PolicyType:
      type: string
    PolicyAttachment:
      type: object
      properties:
        PolicyId:
          $ref: '#/components/schemas/ObjectIdentifier'
          description: The ID of <code>PolicyAttachment</code>.
        ObjectIdentifier:
          $ref: '#/components/schemas/ObjectIdentifier'
          description: The <code>ObjectIdentifier</code> that is associated with <code>PolicyAttachment</code>.
        PolicyType:
          $ref: '#/components/schemas/PolicyType'
          description: The type of policy that can be associated with <code>PolicyAttachment</code>.
      description: 'Contains the <code>PolicyType</code>, <code>PolicyId</code>, and the <code>ObjectIdentifier</code> to which it is attached. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_key_concepts.html#policies">Policies</a>.'
    PolicyAttachmentList:
      type: array
      items:
        $ref: '#/components/schemas/PolicyAttachment'
    PolicyToPath:
      type: object
      properties:
        Path:
          $ref: '#/components/schemas/PathString'
          description: The path that is referenced from the root.
        Policies:
          $ref: '#/components/schemas/PolicyAttachmentList'
          description: List of policy objects.
      description: Used when a regular object exists in a <a>Directory</a> and you want to find all of the policies that are associated with that object and the parent to that object.
    Version:
      type: string
      pattern: '^[a-zA-Z0-9._-]*$'
      minLength: 1
      maxLength: 10
    PublishSchemaRequest:
      type: object
      required:
        - Version
      title: PublishSchemaRequest
      properties:
        Version:
          $ref: '#/components/schemas/Version'
          description: The major version under which the schema will be published. Schemas have both a major and minor version associated with them.
        MinorVersion:
          $ref: '#/components/schemas/Version'
          description: The minor version under which the schema will be published. This parameter is recommended. Schemas have both a major and minor version associated with them.
        Name:
          $ref: '#/components/schemas/SchemaName'
          description: 'The new name under which the schema will be published. If this is not provided, the development schema is considered.'
    PutSchemaFromJsonRequest:
      type: object
      required:
        - Document
      title: PutSchemaFromJsonRequest
      properties:
        Document:
          $ref: '#/components/schemas/SchemaJsonDocument'
          description: The replacement JSON schema.
    RangeMode:
      type: string
      enum:
        - FIRST
        - LAST
        - LAST_BEFORE_MISSING_VALUES
        - INCLUSIVE
        - EXCLUSIVE
    RemoveFacetFromObjectRequest:
      type: object
      required:
        - SchemaFacet
        - ObjectReference
      title: RemoveFacetFromObjectRequest
      properties:
        SchemaFacet:
          $ref: '#/components/schemas/SchemaFacet'
          description: The facet to remove. See <a>SchemaFacet</a> for details.
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
          description: A reference to the object to remove the facet from.
    RuleType:
      type: string
      enum:
        - BINARY_LENGTH
        - NUMBER_COMPARISON
        - STRING_FROM_SET
        - STRING_LENGTH
    RuleParameterMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/RuleParameterValue'
    Rule:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/RuleType'
          description: The type of attribute validation rule.
        Parameters:
          $ref: '#/components/schemas/RuleParameterMap'
          description: The minimum and maximum parameters that are associated with the rule.
      description: Contains an Amazon Resource Name (ARN) and parameters that are associated with the rule.
    RuleKey:
      type: string
      pattern: '^[a-zA-Z0-9._-]*$'
      minLength: 1
      maxLength: 64
    RuleParameterKey:
      type: string
    RuleParameterValue:
      type: string
    StringAttributeValue:
      type: string
    TagValue:
      type: string
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagResourceRequest:
      type: object
      required:
        - ResourceArn
        - Tags
      title: TagResourceRequest
      properties:
        ResourceArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource. Tagging is only supported for directories.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A list of tag key-value pairs.
    TypedLinkAttributeDefinition:
      type: object
      required:
        - Name
        - Type
        - RequiredBehavior
      properties:
        Name:
          $ref: '#/components/schemas/AttributeName'
          description: The unique name of the typed link attribute.
        Type:
          $ref: '#/components/schemas/FacetAttributeType'
          description: The type of the attribute.
        DefaultValue:
          $ref: '#/components/schemas/TypedAttributeValue'
          description: The default value of the attribute (if configured).
        IsImmutable:
          $ref: '#/components/schemas/Bool'
          description: Whether the attribute is mutable or not.
        Rules:
          $ref: '#/components/schemas/RuleMap'
          description: Validation rules that are attached to the attribute definition.
        RequiredBehavior:
          $ref: '#/components/schemas/RequiredAttributeBehavior'
          description: The required behavior of the <code>TypedLinkAttributeDefinition</code>.
      description: A typed link attribute definition.
    TypedLinkFacetAttributeUpdateList:
      type: array
      items:
        $ref: '#/components/schemas/TypedLinkFacetAttributeUpdate'
    UntagResourceRequest:
      type: object
      required:
        - ResourceArn
        - TagKeys
      title: UntagResourceRequest
      properties:
        ResourceArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource. Tagging is only supported for directories.
        TagKeys:
          $ref: '#/components/schemas/TagKeyList'
          description: Keys of the tag that need to be removed from the resource.
    UpdateFacetRequest:
      type: object
      required:
        - Name
      title: UpdateFacetRequest
      properties:
        Name:
          $ref: '#/components/schemas/FacetName'
          description: The name of the facet.
        AttributeUpdates:
          $ref: '#/components/schemas/FacetAttributeUpdateList'
          description: 'List of attributes that need to be updated in a given schema <a>Facet</a>. Each attribute is followed by <code>AttributeAction</code>, which specifies the type of update operation to perform. '
        ObjectType:
          $ref: '#/components/schemas/ObjectType'
          description: The object type that is associated with the facet. See <a>CreateFacetRequest$ObjectType</a> for more details.
    UpdateLinkAttributesRequest:
      type: object
      required:
        - TypedLinkSpecifier
        - AttributeUpdates
      title: UpdateLinkAttributesRequest
      properties:
        TypedLinkSpecifier:
          $ref: '#/components/schemas/TypedLinkSpecifier'
          description: Allows a typed link specifier to be accepted as input.
        AttributeUpdates:
          $ref: '#/components/schemas/LinkAttributeUpdateList'
          description: The attributes update structure.
    UpdateObjectAttributesRequest:
      type: object
      required:
        - ObjectReference
        - AttributeUpdates
      title: UpdateObjectAttributesRequest
      properties:
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
          description: The reference that identifies the object.
        AttributeUpdates:
          $ref: '#/components/schemas/ObjectAttributeUpdateList'
          description: The attributes update structure.
    UpdateSchemaRequest:
      type: object
      required:
        - Name
      title: UpdateSchemaRequest
      properties:
        Name:
          $ref: '#/components/schemas/SchemaName'
          description: The name of the schema.
    UpdateTypedLinkFacetRequest:
      type: object
      required:
        - Name
        - AttributeUpdates
        - IdentityAttributeOrder
      title: UpdateTypedLinkFacetRequest
      properties:
        Name:
          $ref: '#/components/schemas/TypedLinkName'
          description: The unique name of the typed link facet.
        AttributeUpdates:
          $ref: '#/components/schemas/TypedLinkFacetAttributeUpdateList'
          description: Attributes update structure.
        IdentityAttributeOrder:
          $ref: '#/components/schemas/AttributeNameList'
          description: 'The order of identity attributes for the facet, from most significant to least significant. The ability to filter typed links considers the order that the attributes are defined on the typed link facet. When providing ranges to a typed link selection, any inexact ranges must be specified at the end. Any attributes that do not have a range specified are presumed to match the entire range. Filters are interpreted in the order of the attributes on the typed link facet, not the order in which they are supplied to any API calls. For more information about identity attributes, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
    UpgradeAppliedSchemaRequest:
      type: object
      required:
        - PublishedSchemaArn
        - DirectoryArn
      title: UpgradeAppliedSchemaRequest
      properties:
        PublishedSchemaArn:
          $ref: '#/components/schemas/Arn'
          description: The revision of the published schema to upgrade the directory to.
        DirectoryArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN for the directory to which the upgraded schema will be applied.
        DryRun:
          $ref: '#/components/schemas/Bool'
          description: 'Used for testing whether the major version schemas are backward compatible or not. If schema compatibility fails, an exception would be thrown else the call would succeed but no changes will be saved. This parameter is optional.'
    UpgradePublishedSchemaRequest:
      type: object
      required:
        - DevelopmentSchemaArn
        - PublishedSchemaArn
        - MinorVersion
      title: UpgradePublishedSchemaRequest
      properties:
        DevelopmentSchemaArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the development schema with the changes used for the upgrade.
        PublishedSchemaArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the published schema to be upgraded.
        MinorVersion:
          $ref: '#/components/schemas/Version'
          description: Identifies the minor version of the published schema that will be created. This parameter is NOT optional.
        DryRun:
          $ref: '#/components/schemas/Bool'
          description: 'Used for testing whether the Development schema provided is backwards compatible, or not, with the publish schema provided by the user to be upgraded. If schema compatibility fails, an exception would be thrown else the call would succeed. This parameter is optional and defaults to false.'
security:
  - hmac: []
