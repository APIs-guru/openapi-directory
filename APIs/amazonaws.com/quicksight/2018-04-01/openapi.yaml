openapi: 3.0.0
info:
  version: '2018-04-01'
  x-release: v4
  title: Amazon QuickSight
  description: '<fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: quicksight
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/quicksight-2018-04-01.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/quicksight/'
servers:
  - url: 'http://quicksight.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon QuickSight multi-region endpoint
  - url: 'https://quicksight.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon QuickSight multi-region endpoint
  - url: 'http://quicksight.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon QuickSight endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://quicksight.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon QuickSight endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  '/accounts/{AwsAccountId}/data-sets/{DataSetId}/ingestions/{IngestionId}':
    delete:
      operationId: CancelIngestion
      description: Cancels an ongoing ingestion of data into SPICE.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelIngestionResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account; ID.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: DataSetId
          in: path
          required: true
          description: The ID of the dataset used in the ingestion.
          schema:
            type: string
        - name: IngestionId
          in: path
          required: true
          description: An ID for the ingestion.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9-_]+$'
            minLength: 1
            maxLength: 128
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: CreateIngestion
      description: '<p>Creates and starts a new SPICE ingestion on a dataset</p> <p>Any ingestions operating on tagged datasets inherit the same tags automatically for use in access control. For an example, see <a href="http://aws.amazon.com/premiumsupport/knowledge-center/iam-ec2-resource-tags/">How do I create an IAM policy to control access to Amazon EC2 resources using tags?</a> in the Amazon Web Services Knowledge Center. Tags are visible on the tagged dataset, but not on the ingestion resource.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateIngestionResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
        '486':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: DataSetId
          in: path
          required: true
          description: The ID of the dataset used in the ingestion.
          schema:
            type: string
        - name: IngestionId
          in: path
          required: true
          description: An ID for the ingestion.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9-_]+$'
            minLength: 1
            maxLength: 128
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account; ID.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
    get:
      operationId: DescribeIngestion
      description: Describes a SPICE ingestion.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeIngestionResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account; ID.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: DataSetId
          in: path
          required: true
          description: The ID of the dataset used in the ingestion.
          schema:
            type: string
        - name: IngestionId
          in: path
          required: true
          description: An ID for the ingestion.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9-_]+$'
            minLength: 1
            maxLength: 128
  '/accounts/{AwsAccountId}/customizations':
    post:
      operationId: CreateAccountCustomization
      description: '<p>Creates Amazon QuickSight customizations the current Amazon Web Services Region;. Currently, you can add a custom default theme by using the <code>CreateAccountCustomization</code> or <code>UpdateAccountCustomization</code> API operation. To further customize QuickSight by removing QuickSight sample assets and videos for all new users, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/customizing-quicksight.html">Customizing QuickSight</a> in the <i>Amazon QuickSight User Guide.</i> </p> <p>You can create customizations for your Amazon Web Services account; or, if you specify a namespace, for a QuickSight namespace instead. Customizations that apply to a namespace always override customizations that apply to an Amazon Web Services account;. To find out which customizations apply, use the <code>DescribeAccountCustomization</code> API operation.</p> <p>Before you use the <code>CreateAccountCustomization</code> API operation to add a theme as the namespace default, make sure that you first share the theme with the namespace. If you don''t share it with the namespace, the theme isn''t visible to your users even if you make it the default theme. To check if the theme is shared, view the current permissions by using the <code> <a>DescribeThemePermissions</a> </code> API operation. To share the theme, grant permissions by using the <code> <a>UpdateThemePermissions</a> </code> API operation. </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAccountCustomizationResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '486':
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account; that you want to customize QuickSight for.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: namespace
          in: query
          required: false
          description: The QuickSight namespace that you want to add customizations to.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9._-]*$'
            maxLength: 64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - AccountCustomization
              properties:
                AccountCustomization:
                  description: The Amazon QuickSight customizations associated with your Amazon Web Services account; or a QuickSight namespace in a specific Amazon Web Services Region;.
                  type: object
                  properties:
                    DefaultTheme:
                      $ref: '#/components/schemas/Arn'
                      description: The default theme for this QuickSight subscription.
                Tags:
                  description: A list of the tags that you want to attach to this resource.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                  minItems: 1
                  maxItems: 200
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteAccountCustomization
      description: Deletes all Amazon QuickSight customizations in this Amazon Web Services Region; for the specified Amazon Web Services account; and QuickSight namespace.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAccountCustomizationResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '485':
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account; that you want to delete QuickSight customizations from in this Amazon Web Services Region;.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: namespace
          in: query
          required: false
          description: The QuickSight namespace that you're deleting the customizations from.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9._-]*$'
            maxLength: 64
    get:
      operationId: DescribeAccountCustomization
      description: '<p>Describes the customizations associated with the provided Amazon Web Services account; and Amazon QuickSight namespace in an Amazon Web Services Region;. The QuickSight console evaluates which customizations to apply by running this API operation with the <code>Resolved</code> flag included. </p> <p>To determine what customizations display when you run this command, it can help to visualize the relationship of the entities involved. </p> <ul> <li> <p> <code>Amazon Web Services account;</code> - The Amazon Web Services account; exists at the top of the hierarchy. It has the potential to use all of the Amazon Web Services Regions; and AWS Services. When you subscribe to QuickSight, you choose one Amazon Web Services Region; to use as your home Region. That''s where your free SPICE capacity is located. You can use QuickSight in any supported Amazon Web Services Region;. </p> </li> <li> <p> <code>Amazon Web Services Region;</code> - In each Amazon Web Services Region; where you sign in to QuickSight at least once, QuickSight acts as a separate instance of the same service. If you have a user directory, it resides in us-east-1, which is the US East (N. Virginia). Generally speaking, these users have access to QuickSight in any Amazon Web Services Region;, unless they are constrained to a namespace. </p> <p>To run the command in a different Amazon Web Services Region;, you change your Region settings. If you''re using the AWS CLI, you can use one of the following options:</p> <ul> <li> <p>Use <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-options.html">command line options</a>. </p> </li> <li> <p>Use <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-profiles.html">named profiles</a>. </p> </li> <li> <p>Run <code>aws configure</code> to change your default Amazon Web Services Region;. Use Enter to key the same settings for your keys. For more information, see <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-configure.html">Configuring the AWS CLI</a>.</p> </li> </ul> </li> <li> <p> <code>Namespace</code> - A QuickSight namespace is a partition that contains users and assets (data sources, datasets, dashboards, and so on). To access assets that are in a specific namespace, users and groups must also be part of the same namespace. People who share a namespace are completely isolated from users and assets in other namespaces, even if they are in the same Amazon Web Services account; and Amazon Web Services Region;.</p> </li> <li> <p> <code>Applied customizations</code> - Within an Amazon Web Services Region;, a set of QuickSight customizations can apply to an Amazon Web Services account; or to a namespace. Settings that you apply to a namespace override settings that you apply to an Amazon Web Services account;. All settings are isolated to a single Amazon Web Services Region;. To apply them in other Amazon Web Services Regions;, run the <code>CreateAccountCustomization</code> command in each Amazon Web Services Region; where you want to apply the same customizations. </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAccountCustomizationResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '485':
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account; that you want to describe QuickSight customizations for.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: namespace
          in: query
          required: false
          description: The QuickSight namespace that you want to describe QuickSight customizations for.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9._-]*$'
            maxLength: 64
        - name: resolved
          in: query
          required: false
          description: 'The <code>Resolved</code> flag works with the other parameters to determine which view of QuickSight customizations is returned. You can add this flag to your command to use the same view that QuickSight uses to identify which customizations to apply to the console. Omit this flag, or set it to <code>no-resolved</code>, to reveal customizations that are configured at different levels. '
          schema:
            type: boolean
    put:
      operationId: UpdateAccountCustomization
      description: '<p>Updates Amazon QuickSight customizations the current Amazon Web Services Region;. Currently, the only customization you can use is a theme.</p> <p>You can use customizations for your Amazon Web Services account; or, if you specify a namespace, for a QuickSight namespace instead. Customizations that apply to a namespace override customizations that apply to an Amazon Web Services account;. To find out which customizations apply, use the <code>DescribeAccountCustomization</code> API operation. </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAccountCustomizationResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '485':
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account; that you want to update QuickSight customizations for.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: namespace
          in: query
          required: false
          description: The namespace that you want to update QuickSight customizations for.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9._-]*$'
            maxLength: 64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - AccountCustomization
              properties:
                AccountCustomization:
                  description: The Amazon QuickSight customizations associated with your Amazon Web Services account; or a QuickSight namespace in a specific Amazon Web Services Region;.
                  type: object
                  properties:
                    DefaultTheme:
                      $ref: '#/components/schemas/Arn'
                      description: The default theme for this QuickSight subscription.
  '/accounts/{AwsAccountId}/analyses/{AnalysisId}':
    post:
      operationId: CreateAnalysis
      description: Creates an analysis in Amazon QuickSight.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAnalysisResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '486':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account; where you are creating an analysis.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: AnalysisId
          in: path
          required: true
          description: The ID for the analysis that you're creating. This ID displays in the URL of the analysis.
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
                - SourceEntity
              properties:
                Name:
                  description: 'A descriptive name for the analysis that you''re creating. This name displays for the analysis in the QuickSight console. '
                  type: string
                  minLength: 1
                  maxLength: 2048
                Parameters:
                  description: A list of QuickSight parameters and the list's override values.
                  type: object
                  properties:
                    StringParameters:
                      $ref: '#/components/schemas/StringParameterList'
                      description: String parameters.
                    IntegerParameters:
                      $ref: '#/components/schemas/IntegerParameterList'
                      description: Integer parameters.
                    DecimalParameters:
                      $ref: '#/components/schemas/DecimalParameterList'
                      description: Decimal parameters.
                    DateTimeParameters:
                      $ref: '#/components/schemas/DateTimeParameterList'
                      description: Date-time parameters.
                Permissions:
                  description: '<p>A structure that describes the principals and the resource-level permissions on an analysis. You can use the <code>Permissions</code> structure to grant permissions by providing a list of Identity and Access Management (IAM) action information for each principal listed by Amazon Resource Name (ARN). </p> <p>To specify no permissions, omit <code>Permissions</code>.</p>'
                  type: array
                  items:
                    $ref: '#/components/schemas/ResourcePermission'
                  minItems: 1
                  maxItems: 64
                SourceEntity:
                  description: The source entity of an analysis.
                  type: object
                  properties:
                    SourceTemplate:
                      $ref: '#/components/schemas/AnalysisSourceTemplate'
                      description: The source template for the source entity of the analysis.
                ThemeArn:
                  description: 'The ARN for the theme to apply to the analysis that you''re creating. To see the theme in the QuickSight console, make sure that you have access to it.'
                  type: string
                Tags:
                  description: Contains a map of the key-value pairs for the resource tag or tags assigned to the analysis.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                  minItems: 1
                  maxItems: 200
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteAnalysis
      description: '<p>Deletes an analysis from Amazon QuickSight. You can optionally include a recovery window during which you can restore the analysis. If you don''t specify a recovery window value, the operation defaults to 30 days. QuickSight attaches a <code>DeletionTime</code> stamp to the response that specifies the end of the recovery window. At the end of the recovery window, QuickSight deletes the analysis permanently.</p> <p>At any time before recovery window ends, you can use the <code>RestoreAnalysis</code> API operation to remove the <code>DeletionTime</code> stamp and cancel the deletion of the analysis. The analysis remains visible in the API until it''s deleted, so you can describe it but you can''t make a template from it.</p> <p>An analysis that''s scheduled for deletion isn''t accessible in the QuickSight console. To access it in the console, restore it. Deleting an analysis doesn''t delete the dashboards that you publish from it.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAnalysisResponse'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account; where you want to delete an analysis.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: AnalysisId
          in: path
          required: true
          description: The ID of the analysis that you're deleting.
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
        - name: recovery-window-in-days
          in: query
          required: false
          description: A value that specifies the number of days that QuickSight waits before it deletes the analysis. You can't use this parameter with the <code>ForceDeleteWithoutRecovery</code> option in the same API call. The default value is 30.
          schema:
            type: integer
            minimum: 7
            maximum: 30
        - name: force-delete-without-recovery
          in: query
          required: false
          description: 'This option defaults to the value <code>NoForceDeleteWithoutRecovery</code>. To immediately delete the analysis, add the <code>ForceDeleteWithoutRecovery</code> option. You can''t restore an analysis after it''s deleted. '
          schema:
            type: boolean
    get:
      operationId: DescribeAnalysis
      description: Provides a summary of the metadata for an analysis.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAnalysisResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account; that contains the analysis. You must be using the Amazon Web Services account; that the analysis is in.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: AnalysisId
          in: path
          required: true
          description: The ID of the analysis that you're describing. The ID is part of the URL of the analysis.
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
    put:
      operationId: UpdateAnalysis
      description: Updates an analysis in Amazon QuickSight
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAnalysisResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '486':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account; that contains the analysis that you're updating.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: AnalysisId
          in: path
          required: true
          description: The ID for the analysis that you're updating. This ID displays in the URL of the analysis.
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
                - SourceEntity
              properties:
                Name:
                  description: A descriptive name for the analysis that you're updating. This name displays for the analysis in the QuickSight console.
                  type: string
                  minLength: 1
                  maxLength: 2048
                Parameters:
                  description: A list of QuickSight parameters and the list's override values.
                  type: object
                  properties:
                    StringParameters:
                      $ref: '#/components/schemas/StringParameterList'
                      description: String parameters.
                    IntegerParameters:
                      $ref: '#/components/schemas/IntegerParameterList'
                      description: Integer parameters.
                    DecimalParameters:
                      $ref: '#/components/schemas/DecimalParameterList'
                      description: Decimal parameters.
                    DateTimeParameters:
                      $ref: '#/components/schemas/DateTimeParameterList'
                      description: Date-time parameters.
                SourceEntity:
                  description: The source entity of an analysis.
                  type: object
                  properties:
                    SourceTemplate:
                      $ref: '#/components/schemas/AnalysisSourceTemplate'
                      description: The source template for the source entity of the analysis.
                ThemeArn:
                  description: 'The Amazon Resource Name (ARN) for the theme to apply to the analysis that you''re creating. To see the theme in the QuickSight console, make sure that you have access to it.'
                  type: string
  '/accounts/{AwsAccountId}/dashboards/{DashboardId}':
    post:
      operationId: CreateDashboard
      description: '<p>Creates a dashboard from a template. To first create a template, see the <code> <a>CreateTemplate</a> </code> API operation.</p> <p>A dashboard is an entity in QuickSight that identifies QuickSight reports, created from analyses. You can share QuickSight dashboards. With the right permissions, you can create scheduled email reports from them. If you have the correct permissions, you can create a dashboard from a template that exists in a different Amazon Web Services account;.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDashboardResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '486':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account; where you want to create the dashboard.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: DashboardId
          in: path
          required: true
          description: 'The ID for the dashboard, also added to the IAM policy.'
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
                - SourceEntity
              properties:
                Name:
                  description: The display name of the dashboard.
                  type: string
                  minLength: 1
                  maxLength: 2048
                Parameters:
                  description: A list of QuickSight parameters and the list's override values.
                  type: object
                  properties:
                    StringParameters:
                      $ref: '#/components/schemas/StringParameterList'
                      description: String parameters.
                    IntegerParameters:
                      $ref: '#/components/schemas/IntegerParameterList'
                      description: Integer parameters.
                    DecimalParameters:
                      $ref: '#/components/schemas/DecimalParameterList'
                      description: Decimal parameters.
                    DateTimeParameters:
                      $ref: '#/components/schemas/DateTimeParameterList'
                      description: Date-time parameters.
                Permissions:
                  description: '<p>A structure that contains the permissions of the dashboard. You can use this structure for granting permissions by providing a list of IAM action information for each principal ARN. </p> <p>To specify no permissions, omit the permissions list.</p>'
                  type: array
                  items:
                    $ref: '#/components/schemas/ResourcePermission'
                  minItems: 1
                  maxItems: 64
                SourceEntity:
                  description: Dashboard source entity.
                  type: object
                  properties:
                    SourceTemplate:
                      $ref: '#/components/schemas/DashboardSourceTemplate'
                      description: Source template.
                Tags:
                  description: Contains a map of the key-value pairs for the resource tag or tags assigned to the dashboard.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                  minItems: 1
                  maxItems: 200
                VersionDescription:
                  description: A description for the first version of the dashboard being created.
                  type: string
                  minLength: 1
                  maxLength: 512
                DashboardPublishOptions:
                  description: Dashboard publish options.
                  type: object
                  properties:
                    AdHocFilteringOption:
                      $ref: '#/components/schemas/AdHocFilteringOption'
                      description: Ad hoc (one-time) filtering option.
                    ExportToCSVOption:
                      $ref: '#/components/schemas/ExportToCSVOption'
                      description: Export to .csv option.
                    SheetControlsOption:
                      $ref: '#/components/schemas/SheetControlsOption'
                      description: Sheet controls option.
                ThemeArn:
                  description: 'The Amazon Resource Name (ARN) of the theme that is being used for this dashboard. If you add a value for this field, it overrides the value that is used in the source entity. The theme ARN must exist in the same Amazon Web Services account; where you create the dashboard.'
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteDashboard
      description: Deletes a dashboard.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDashboardResponse'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account; that contains the dashboard that you're deleting.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: DashboardId
          in: path
          required: true
          description: The ID for the dashboard.
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
        - name: version-number
          in: query
          required: false
          description: 'The version number of the dashboard. If the version number property is provided, only the specified version of the dashboard is deleted.'
          schema:
            type: integer
            minimum: 1
    get:
      operationId: DescribeDashboard
      description: Provides a summary for a dashboard.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDashboardResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account; that contains the dashboard that you're describing.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: DashboardId
          in: path
          required: true
          description: The ID for the dashboard.
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
        - name: version-number
          in: query
          required: false
          description: 'The version number for the dashboard. If a version number isn''t passed, the latest published dashboard version is described. '
          schema:
            type: integer
            minimum: 1
        - name: alias-name
          in: query
          required: false
          description: The alias name.
          schema:
            type: string
            pattern: '[\w\-]+|(\$LATEST)|(\$PUBLISHED)'
            minLength: 1
            maxLength: 2048
    put:
      operationId: UpdateDashboard
      description: <p>Updates a dashboard in an Amazon Web Services account;.</p> <note> <p>Updating a Dashboard creates a new dashboard version but does not immediately publish the new version. You can update the published version of a dashboard by using the <a>UpdateDashboardPublishedVersion</a> API operation.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDashboardResponse'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '486':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account; that contains the dashboard that you're updating.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: DashboardId
          in: path
          required: true
          description: The ID for the dashboard.
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
                - SourceEntity
              properties:
                Name:
                  description: The display name of the dashboard.
                  type: string
                  minLength: 1
                  maxLength: 2048
                SourceEntity:
                  description: Dashboard source entity.
                  type: object
                  properties:
                    SourceTemplate:
                      $ref: '#/components/schemas/DashboardSourceTemplate'
                      description: Source template.
                Parameters:
                  description: A list of QuickSight parameters and the list's override values.
                  type: object
                  properties:
                    StringParameters:
                      $ref: '#/components/schemas/StringParameterList'
                      description: String parameters.
                    IntegerParameters:
                      $ref: '#/components/schemas/IntegerParameterList'
                      description: Integer parameters.
                    DecimalParameters:
                      $ref: '#/components/schemas/DecimalParameterList'
                      description: Decimal parameters.
                    DateTimeParameters:
                      $ref: '#/components/schemas/DateTimeParameterList'
                      description: Date-time parameters.
                VersionDescription:
                  description: A description for the first version of the dashboard being created.
                  type: string
                  minLength: 1
                  maxLength: 512
                DashboardPublishOptions:
                  description: Dashboard publish options.
                  type: object
                  properties:
                    AdHocFilteringOption:
                      $ref: '#/components/schemas/AdHocFilteringOption'
                      description: Ad hoc (one-time) filtering option.
                    ExportToCSVOption:
                      $ref: '#/components/schemas/ExportToCSVOption'
                      description: Export to .csv option.
                    SheetControlsOption:
                      $ref: '#/components/schemas/SheetControlsOption'
                      description: Sheet controls option.
                ThemeArn:
                  description: 'The Amazon Resource Name (ARN) of the theme that is being used for this dashboard. If you add a value for this field, it overrides the value that was originally associated with the entity. The theme ARN must exist in the same Amazon Web Services account; where you create the dashboard.'
                  type: string
  '/accounts/{AwsAccountId}/data-sets':
    post:
      operationId: CreateDataSet
      description: Creates a dataset.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDataSetResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
        '485':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '486':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '487':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '488':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account; ID.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - DataSetId
                - Name
                - PhysicalTableMap
                - ImportMode
              properties:
                DataSetId:
                  description: An ID for the dataset that you want to create. This ID is unique per Amazon Web Services Region; for each Amazon Web Services account;.
                  type: string
                Name:
                  description: The display name for the dataset.
                  type: string
                  minLength: 1
                  maxLength: 128
                PhysicalTableMap:
                  description: Declares the physical tables that are available in the underlying data sources.
                  type: object
                  minProperties: 1
                  maxProperties: 32
                  additionalProperties:
                    $ref: '#/components/schemas/PhysicalTable'
                LogicalTableMap:
                  description: Configures the combination and transformation of the data from the physical tables.
                  type: object
                  minProperties: 1
                  maxProperties: 64
                  additionalProperties:
                    $ref: '#/components/schemas/LogicalTable'
                ImportMode:
                  description: Indicates whether you want to import the data into SPICE.
                  type: string
                  enum:
                    - SPICE
                    - DIRECT_QUERY
                ColumnGroups:
                  description: 'Groupings of columns that work together in certain QuickSight features. Currently, only geospatial hierarchy is supported.'
                  type: array
                  items:
                    $ref: '#/components/schemas/ColumnGroup'
                  minItems: 1
                  maxItems: 8
                FieldFolders:
                  description: The folder that contains fields and nested subfolders for your dataset.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/FieldFolder'
                Permissions:
                  description: A list of resource permissions on the dataset.
                  type: array
                  items:
                    $ref: '#/components/schemas/ResourcePermission'
                  minItems: 1
                  maxItems: 64
                RowLevelPermissionDataSet:
                  description: '<p>Information about a dataset that contains permissions for row-level security (RLS). The permissions dataset maps fields to users or groups. For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/restrict-access-to-a-data-set-using-row-level-security.html">Using Row-Level Security (RLS) to Restrict Access to a Dataset</a> in the <i>Amazon QuickSight User Guide</i>.</p> <p>The option to deny permissions by setting <code>PermissionPolicy</code> to <code>DENY_ACCESS</code> is not supported for new RLS datasets.</p>'
                  type: object
                  properties:
                    Namespace:
                      $ref: '#/components/schemas/Namespace'
                      description: The namespace associated with the dataset that contains permissions for RLS.
                    Arn:
                      $ref: '#/components/schemas/Arn'
                      description: The Amazon Resource Name (ARN) of the dataset that contains permissions for RLS.
                    PermissionPolicy:
                      $ref: '#/components/schemas/RowLevelPermissionPolicy'
                      description: The type of permissions to use when interpretting the permissions for RLS. <code>DENY_ACCESS</code> is included for backward compatibility only.
                    FormatVersion:
                      $ref: '#/components/schemas/RowLevelPermissionFormatVersion'
                      description: '<p>The user or group rules associated with the dataset that contains permissions for RLS.</p> <p>By default, <code>FormatVersion</code> is <code>VERSION_1</code>. When <code>FormatVersion</code> is <code>VERSION_1</code>, <code>UserName</code> and <code>GroupName</code> are required. When <code>FormatVersion</code> is <code>VERSION_2</code>, <code>UserARN</code> and <code>GroupARN</code> are required, and <code>Namespace</code> must not exist.</p>'
                    Status:
                      $ref: '#/components/schemas/Status'
                      description: 'The status of the row-level security permission dataset. If enabled, the status is <code>ENABLED</code>. If disabled, the status is <code>DISABLED</code>.'
                RowLevelPermissionTagConfiguration:
                  description: 'The configuration of tags on a dataset to set row-level security. '
                  type: object
                  properties:
                    Status:
                      $ref: '#/components/schemas/Status'
                      description: 'The status of row-level security tags. If enabled, the status is <code>ENABLED</code>. If disabled, the status is <code>DISABLED</code>.'
                    TagRules:
                      $ref: '#/components/schemas/RowLevelPermissionTagRuleList'
                      description: 'A set of rules associated with row-level security, such as the tag names and columns that they are assigned to.'
                ColumnLevelPermissionRules:
                  description: A set of one or more definitions of a <code> <a>ColumnLevelPermissionRule</a> </code>.
                  type: array
                  items:
                    $ref: '#/components/schemas/ColumnLevelPermissionRule'
                  minItems: 1
                Tags:
                  description: Contains a map of the key-value pairs for the resource tag or tags assigned to the dataset.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                  minItems: 1
                  maxItems: 200
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListDataSets
      description: '<p>Lists all of the datasets belonging to the current Amazon Web Services account; in an Amazon Web Services Region;.</p> <p>The permissions resource is <code>arn:aws:quicksight:region:aws-account-id:dataset/*</code>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDataSetsResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account; ID.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: next-token
          in: query
          required: false
          description: 'The token for the next set of results, or null if there are no more results.'
          schema:
            type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  '/accounts/{AwsAccountId}/data-sources':
    post:
      operationId: CreateDataSource
      description: Creates a data source.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDataSourceResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
        '486':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '487':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account; ID.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - DataSourceId
                - Name
                - Type
              properties:
                DataSourceId:
                  description: 'An ID for the data source. This ID is unique per Amazon Web Services Region; for each Amazon Web Services account;. '
                  type: string
                Name:
                  description: A display name for the data source.
                  type: string
                  minLength: 1
                  maxLength: 128
                Type:
                  description: '<p>The type of the data source. Currently, the supported types for this operation are: <code>ATHENA, AURORA, AURORA_POSTGRESQL, AMAZON_ELASTICSEARCH, MARIADB, MYSQL, POSTGRESQL, PRESTO, REDSHIFT, S3, SNOWFLAKE, SPARK, SQLSERVER, TERADATA</code>. Use <code>ListDataSources</code> to return a list of all data sources.</p> <p> <code>AMAZON_ELASTICSEARCH</code> is for Amazon managed Elasticsearch Service.</p>'
                  type: string
                  enum:
                    - ADOBE_ANALYTICS
                    - AMAZON_ELASTICSEARCH
                    - ATHENA
                    - AURORA
                    - AURORA_POSTGRESQL
                    - AWS_IOT_ANALYTICS
                    - GITHUB
                    - JIRA
                    - MARIADB
                    - MYSQL
                    - ORACLE
                    - POSTGRESQL
                    - PRESTO
                    - REDSHIFT
                    - S3
                    - SALESFORCE
                    - SERVICENOW
                    - SNOWFLAKE
                    - SPARK
                    - SQLSERVER
                    - TERADATA
                    - TWITTER
                    - TIMESTREAM
                DataSourceParameters:
                  description: 'The parameters that Amazon QuickSight uses to connect to your underlying data source. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.'
                  type: object
                  properties:
                    AmazonElasticsearchParameters:
                      $ref: '#/components/schemas/AmazonElasticsearchParameters'
                      description: Amazon Elasticsearch Service parameters.
                    AthenaParameters:
                      $ref: '#/components/schemas/AthenaParameters'
                      description: Amazon Athena parameters.
                    AuroraParameters:
                      $ref: '#/components/schemas/AuroraParameters'
                      description: Amazon Aurora MySQL parameters.
                    AuroraPostgreSqlParameters:
                      $ref: '#/components/schemas/AuroraPostgreSqlParameters'
                      description: Aurora PostgreSQL parameters.
                    AwsIotAnalyticsParameters:
                      $ref: '#/components/schemas/AwsIotAnalyticsParameters'
                      description: Amazon Web Services IoT Analytics parameters.
                    JiraParameters:
                      $ref: '#/components/schemas/JiraParameters'
                      description: Jira parameters.
                    MariaDbParameters:
                      $ref: '#/components/schemas/MariaDbParameters'
                      description: MariaDB parameters.
                    MySqlParameters:
                      $ref: '#/components/schemas/MySqlParameters'
                      description: MySQL parameters.
                    OracleParameters:
                      $ref: '#/components/schemas/OracleParameters'
                      description: Oracle parameters.
                    PostgreSqlParameters:
                      $ref: '#/components/schemas/PostgreSqlParameters'
                      description: PostgreSQL parameters.
                    PrestoParameters:
                      $ref: '#/components/schemas/PrestoParameters'
                      description: Presto parameters.
                    RdsParameters:
                      $ref: '#/components/schemas/RdsParameters'
                      description: Amazon RDS parameters.
                    RedshiftParameters:
                      $ref: '#/components/schemas/RedshiftParameters'
                      description: Amazon Redshift parameters.
                    S3Parameters:
                      $ref: '#/components/schemas/S3Parameters'
                      description: S3 parameters.
                    ServiceNowParameters:
                      $ref: '#/components/schemas/ServiceNowParameters'
                      description: ServiceNow parameters.
                    SnowflakeParameters:
                      $ref: '#/components/schemas/SnowflakeParameters'
                      description: Snowflake parameters.
                    SparkParameters:
                      $ref: '#/components/schemas/SparkParameters'
                      description: Spark parameters.
                    SqlServerParameters:
                      $ref: '#/components/schemas/SqlServerParameters'
                      description: SQL Server parameters.
                    TeradataParameters:
                      $ref: '#/components/schemas/TeradataParameters'
                      description: Teradata parameters.
                    TwitterParameters:
                      $ref: '#/components/schemas/TwitterParameters'
                      description: Twitter parameters.
                Credentials:
                  description: 'Data source credentials. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.'
                  type: object
                  properties:
                    CredentialPair:
                      $ref: '#/components/schemas/CredentialPair'
                      description: 'Credential pair. For more information, see <a>CredentialPair</a>.'
                    CopySourceArn:
                      $ref: '#/components/schemas/CopySourceArn'
                      description: 'The Amazon Resource Name (ARN) of a data source that has the credential pair that you want to use. When <code>CopySourceArn</code> is not null, the credential pair from the data source in the ARN is used as the credentials for the <code>DataSourceCredentials</code> structure.'
                Permissions:
                  description: A list of resource permissions on the data source.
                  type: array
                  items:
                    $ref: '#/components/schemas/ResourcePermission'
                  minItems: 1
                  maxItems: 64
                VpcConnectionProperties:
                  description: VPC connection properties.
                  type: object
                  properties:
                    VpcConnectionArn:
                      $ref: '#/components/schemas/Arn'
                      description: The Amazon Resource Name (ARN) for the VPC connection.
                SslProperties:
                  description: Secure Socket Layer (SSL) properties that apply when QuickSight connects to your underlying data source.
                  type: object
                  properties:
                    DisableSsl:
                      $ref: '#/components/schemas/Boolean'
                      description: A Boolean option to control whether SSL should be disabled.
                Tags:
                  description: Contains a map of the key-value pairs for the resource tag or tags assigned to the data source.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                  minItems: 1
                  maxItems: 200
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListDataSources
      description: Lists data sources in current Amazon Web Services Region; that belong to this Amazon Web Services account;.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDataSourcesResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account; ID.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: next-token
          in: query
          required: false
          description: 'The token for the next set of results, or null if there are no more results.'
          schema:
            type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  '/accounts/{AwsAccountId}/folders/{FolderId}':
    post:
      operationId: CreateFolder
      description: Creates an empty shared folder.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFolderResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '486':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '487':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '488':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The AWS Account ID.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: FolderId
          in: path
          required: true
          description: The folder ID.
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  description: The name of the folder.
                  type: string
                  minLength: 1
                  maxLength: 200
                FolderType:
                  description: 'The type of folder. By default, <code>folderType</code> is <code>SHARED</code>.'
                  type: string
                  enum:
                    - SHARED
                ParentFolderArn:
                  description: <p>The Amazon Resource Name (ARN) for the parent folder.</p> <p> <code>ParentFolderArn</code> can be null. An empty <code>parentFolderArn</code> creates a root-level folder.</p>
                  type: string
                Permissions:
                  description: '<p>A structure that describes the principals and the resource-level permissions of a folder.</p> <p>To specify no permissions, omit <code>Permissions</code>.</p>'
                  type: array
                  items:
                    $ref: '#/components/schemas/ResourcePermission'
                  minItems: 1
                  maxItems: 64
                Tags:
                  description: Tags for the folder.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                  minItems: 1
                  maxItems: 200
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteFolder
      description: Deletes an empty folder.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFolderResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: PreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionNotMetException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '487':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The AWS Account ID for the folder.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: FolderId
          in: path
          required: true
          description: The folder ID.
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
    get:
      operationId: DescribeFolder
      description: Describes a folder.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeFolderResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The AWS account ID.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: FolderId
          in: path
          required: true
          description: The folder ID.
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
    put:
      operationId: UpdateFolder
      description: Updates the name of a folder.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFolderResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '487':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The AWS account ID.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: FolderId
          in: path
          required: true
          description: The folder ID.
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
              properties:
                Name:
                  description: The name of the folder.
                  type: string
                  minLength: 1
                  maxLength: 200
  '/accounts/{AwsAccountId}/folders/{FolderId}/members/{MemberType}/{MemberId}':
    put:
      operationId: CreateFolderMembership
      description: 'Adds an asset, such as a dashboard, analysis, or dataset into a folder.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFolderMembershipResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '486':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '487':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The AWS Account ID.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: FolderId
          in: path
          required: true
          description: The folder ID.
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
        - name: MemberId
          in: path
          required: true
          description: 'The ID of the asset (the dashboard, analysis, or dataset).'
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
        - name: MemberType
          in: path
          required: true
          description: 'The type of the member, including <code>DASHBOARD</code>, <code>ANALYSIS</code>, and <code>DATASET</code>.'
          schema:
            type: string
            enum:
              - DASHBOARD
              - ANALYSIS
              - DATASET
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteFolderMembership
      description: 'Removes an asset, such as a dashboard, analysis, or dataset, from a folder.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFolderMembershipResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The AWS Account ID.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: FolderId
          in: path
          required: true
          description: The Folder ID.
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
        - name: MemberId
          in: path
          required: true
          description: 'The ID of the asset (the dashboard, analysis, or dataset) that you want to delete.'
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
        - name: MemberType
          in: path
          required: true
          description: 'The type of the member, including <code>DASHBOARD</code>, <code>ANALYSIS</code>, and <code>DATASET</code> '
          schema:
            type: string
            enum:
              - DASHBOARD
              - ANALYSIS
              - DATASET
  '/accounts/{AwsAccountId}/namespaces/{Namespace}/groups':
    post:
      operationId: CreateGroup
      description: '<p>Creates an Amazon QuickSight group.</p> <p>The permissions resource is <code>arn:aws:quicksight:us-east-1:<i>&lt;relevant-aws-account-id&gt;</i>:group/default/<i>&lt;group-name&gt;</i> </code>.</p> <p>The response is a group object.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGroupResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: PreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionNotMetException'
        '486':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '487':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '488':
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: 'The ID for the Amazon Web Services account; that the group is in. Currently, you use the ID for the Amazon Web Services account; that contains your Amazon QuickSight account.'
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: 'The namespace. Currently, you should set this to <code>default</code>.'
          schema:
            type: string
            pattern: '^[a-zA-Z0-9._-]*$'
            maxLength: 64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - GroupName
              properties:
                GroupName:
                  description: A name for the group that you want to create.
                  type: string
                  pattern: '[\u0020-\u00FF]+'
                  minLength: 1
                Description:
                  description: A description for the group that you want to create.
                  type: string
                  minLength: 1
                  maxLength: 512
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListGroups
      description: 'Lists all user groups in Amazon QuickSight. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGroupsResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '485':
          description: PreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionNotMetException'
        '486':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '487':
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: 'The ID for the Amazon Web Services account; that the group is in. Currently, you use the ID for the Amazon Web Services account; that contains your Amazon QuickSight account.'
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: next-token
          in: query
          required: false
          description: A pagination token that can be used in a subsequent request.
          schema:
            type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to return.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: Namespace
          in: path
          required: true
          description: 'The namespace. Currently, you should set this to <code>default</code>.'
          schema:
            type: string
            pattern: '^[a-zA-Z0-9._-]*$'
            maxLength: 64
  '/accounts/{AwsAccountId}/namespaces/{Namespace}/groups/{GroupName}/members/{MemberName}':
    put:
      operationId: CreateGroupMembership
      description: 'Adds an Amazon QuickSight user to an Amazon QuickSight group. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGroupMembershipResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: PreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionNotMetException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '486':
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
      parameters:
        - name: MemberName
          in: path
          required: true
          description: The name of the user that you want to add to the group membership.
          schema:
            type: string
            pattern: '[\u0020-\u00FF]+'
            minLength: 1
            maxLength: 256
        - name: GroupName
          in: path
          required: true
          description: The name of the group that you want to add the user to.
          schema:
            type: string
            pattern: '[\u0020-\u00FF]+'
            minLength: 1
        - name: AwsAccountId
          in: path
          required: true
          description: 'The ID for the Amazon Web Services account; that the group is in. Currently, you use the ID for the Amazon Web Services account; that contains your Amazon QuickSight account.'
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: 'The namespace. Currently, you should set this to <code>default</code>.'
          schema:
            type: string
            pattern: '^[a-zA-Z0-9._-]*$'
            maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteGroupMembership
      description: Removes a user from a group so that the user is no longer a member of the group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteGroupMembershipResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: PreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionNotMetException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '486':
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
      parameters:
        - name: MemberName
          in: path
          required: true
          description: The name of the user that you want to delete from the group membership.
          schema:
            type: string
            pattern: '[\u0020-\u00FF]+'
            minLength: 1
            maxLength: 256
        - name: GroupName
          in: path
          required: true
          description: The name of the group that you want to delete the user from.
          schema:
            type: string
            pattern: '[\u0020-\u00FF]+'
            minLength: 1
        - name: AwsAccountId
          in: path
          required: true
          description: 'The ID for the Amazon Web Services account; that the group is in. Currently, you use the ID for the Amazon Web Services account; that contains your Amazon QuickSight account.'
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: 'The namespace. Currently, you should set this to <code>default</code>.'
          schema:
            type: string
            pattern: '^[a-zA-Z0-9._-]*$'
            maxLength: 64
  '/accounts/{AwsAccountId}/namespaces/{Namespace}/iam-policy-assignments/':
    post:
      operationId: CreateIAMPolicyAssignment
      description: 'Creates an assignment with one specified IAM policy, identified by its Amazon Resource Name (ARN). This policy assignment is attached to the specified groups or users of Amazon QuickSight. Assignment names are unique per Amazon Web Services account;. To avoid overwriting rules in other namespaces, use assignment names that are unique.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateIAMPolicyAssignmentResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: ConcurrentUpdatingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentUpdatingException'
        '486':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account; where you want to assign an IAM policy to QuickSight users or groups.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: The namespace that contains the assignment.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9._-]*$'
            maxLength: 64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - AssignmentName
                - AssignmentStatus
              properties:
                AssignmentName:
                  description: 'The name of the assignment, also called a rule. It must be unique within an Amazon Web Services account;.'
                  type: string
                  pattern: '(?=^.{2,256}$)(?!.*\s)[0-9a-zA-Z-_.:=+@]*$'
                  minLength: 1
                AssignmentStatus:
                  description: '<p>The status of the assignment. Possible values are as follows:</p> <ul> <li> <p> <code>ENABLED</code> - Anything specified in this assignment is used when creating the data source.</p> </li> <li> <p> <code>DISABLED</code> - This assignment isn''t used when creating the data source.</p> </li> <li> <p> <code>DRAFT</code> - This assignment is an unfinished draft and isn''t used when creating the data source.</p> </li> </ul>'
                  type: string
                  enum:
                    - ENABLED
                    - DRAFT
                    - DISABLED
                PolicyArn:
                  description: The ARN for the IAM policy to apply to the QuickSight users and groups specified in this assignment.
                  type: string
                Identities:
                  description: 'The QuickSight users, groups, or both that you want to assign the policy to.'
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/IdentityNameList'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/accounts/{AwsAccountId}':
    post:
      operationId: CreateNamespace
      description: '<p>(Enterprise edition only) Creates a new namespace for you to use with Amazon QuickSight.</p> <p>A namespace allows you to isolate the QuickSight users and groups that are registered for that namespace. Users that access the namespace can share assets only with other users or groups in the same namespace. They can''t see users and groups in other namespaces. You can create a namespace after your Amazon Web Services account; is subscribed to QuickSight. The namespace must be unique within the Amazon Web Services account;. By default, there is a limit of 100 namespaces per Amazon Web Services account;. To increase your limit, create a ticket with Amazon Web Services Support. </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateNamespaceResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
        '486':
          description: PreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionNotMetException'
        '487':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '488':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '489':
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account; that you want to create the QuickSight namespace in.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Namespace
                - IdentityStore
              properties:
                Namespace:
                  description: The name that you want to use to describe the new namespace.
                  type: string
                  pattern: '^[a-zA-Z0-9._-]*$'
                  maxLength: 64
                IdentityStore:
                  description: 'Specifies the type of your user identity directory. Currently, this supports users with an identity type of <code>QUICKSIGHT</code>.'
                  type: string
                  enum:
                    - QUICKSIGHT
                Tags:
                  description: The tags that you want to associate with the namespace that you're creating.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                  minItems: 1
                  maxItems: 200
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/accounts/{AwsAccountId}/templates/{TemplateId}':
    post:
      operationId: CreateTemplate
      description: <p>Creates a template from an existing Amazon QuickSight analysis or template. You can use the resulting template to create a dashboard.</p> <p>A <i>template</i> is an entity in QuickSight that encapsulates the metadata required to create an analysis and that you can use to create s dashboard. A template adds a layer of abstraction by using placeholders to replace the dataset associated with the analysis. You can use templates to create dashboards by replacing dataset placeholders with datasets that follow the same schema that was used to create the source analysis and template.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTemplateResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '486':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '487':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '488':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: 'The ID for the Amazon Web Services account; that the group is in. Currently, you use the ID for the Amazon Web Services account; that contains your Amazon QuickSight account.'
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: TemplateId
          in: path
          required: true
          description: An ID for the template that you want to create. This template is unique per Amazon Web Services Region; in each Amazon Web Services account;.
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - SourceEntity
              properties:
                Name:
                  description: A display name for the template.
                  type: string
                  minLength: 1
                  maxLength: 2048
                Permissions:
                  description: 'A list of resource permissions to be set on the template. '
                  type: array
                  items:
                    $ref: '#/components/schemas/ResourcePermission'
                  minItems: 1
                  maxItems: 64
                SourceEntity:
                  description: The source entity of the template.
                  type: object
                  properties:
                    SourceAnalysis:
                      $ref: '#/components/schemas/TemplateSourceAnalysis'
                      description: 'The source analysis, if it is based on an analysis.'
                    SourceTemplate:
                      $ref: '#/components/schemas/TemplateSourceTemplate'
                      description: 'The source template, if it is based on an template.'
                Tags:
                  description: Contains a map of the key-value pairs for the resource tag or tags assigned to the resource.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                  minItems: 1
                  maxItems: 200
                VersionDescription:
                  description: 'A description of the current template version being created. This API operation creates the first version of the template. Every time <code>UpdateTemplate</code> is called, a new version is created. Each version of the template maintains a description of the version in the <code>VersionDescription</code> field.'
                  type: string
                  minLength: 1
                  maxLength: 512
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteTemplate
      description: Deletes a template.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTemplateResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '486':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account; that contains the template that you're deleting.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: TemplateId
          in: path
          required: true
          description: An ID for the template you want to delete.
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
        - name: version-number
          in: query
          required: false
          description: 'Specifies the version of the template that you want to delete. If you don''t provide a version number, <code>DeleteTemplate</code> deletes all versions of the template. '
          schema:
            type: integer
            minimum: 1
    get:
      operationId: DescribeTemplate
      description: Describes a template's metadata.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeTemplateResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '486':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '487':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account; that contains the template that you're describing.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: TemplateId
          in: path
          required: true
          description: The ID for the template.
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
        - name: version-number
          in: query
          required: false
          description: '(Optional) The number for the version to describe. If a <code>VersionNumber</code> parameter value isn''t provided, the latest version of the template is described.'
          schema:
            type: integer
            minimum: 1
        - name: alias-name
          in: query
          required: false
          description: 'The alias of the template that you want to describe. If you name a specific alias, you describe the version that the alias points to. You can specify the latest version of the template by providing the keyword <code>$LATEST</code> in the <code>AliasName</code> parameter. The keyword <code>$PUBLISHED</code> doesn''t apply to templates.'
          schema:
            type: string
            pattern: '[\w\-]+|(\$LATEST)|(\$PUBLISHED)'
            minLength: 1
            maxLength: 2048
    put:
      operationId: UpdateTemplate
      description: Updates a template from an existing Amazon QuickSight analysis or another template.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTemplateResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '486':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '487':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account; that contains the template that you're updating.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: TemplateId
          in: path
          required: true
          description: The ID for the template.
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - SourceEntity
              properties:
                SourceEntity:
                  description: The source entity of the template.
                  type: object
                  properties:
                    SourceAnalysis:
                      $ref: '#/components/schemas/TemplateSourceAnalysis'
                      description: 'The source analysis, if it is based on an analysis.'
                    SourceTemplate:
                      $ref: '#/components/schemas/TemplateSourceTemplate'
                      description: 'The source template, if it is based on an template.'
                VersionDescription:
                  description: 'A description of the current template version that is being updated. Every time you call <code>UpdateTemplate</code>, you create a new version of the template. Each version of the template maintains a description of the version in the <code>VersionDescription</code> field.'
                  type: string
                  minLength: 1
                  maxLength: 512
                Name:
                  description: The name for the template.
                  type: string
                  minLength: 1
                  maxLength: 2048
  '/accounts/{AwsAccountId}/templates/{TemplateId}/aliases/{AliasName}':
    post:
      operationId: CreateTemplateAlias
      description: Creates a template alias for a template.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTemplateAliasResponse'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '487':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account; that contains the template that you creating an alias for.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: TemplateId
          in: path
          required: true
          description: An ID for the template.
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
        - name: AliasName
          in: path
          required: true
          description: 'The name that you want to give to the template alias that you''re creating. Don''t start the alias name with the <code>$</code> character. Alias names that start with <code>$</code> are reserved by Amazon QuickSight. '
          schema:
            type: string
            pattern: '[\w\-]+|(\$LATEST)|(\$PUBLISHED)'
            minLength: 1
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - TemplateVersionNumber
              properties:
                TemplateVersionNumber:
                  description: The version number of the template.
                  type: integer
                  minimum: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteTemplateAlias
      description: 'Deletes the item that the specified template alias points to. If you provide a specific alias, you delete the version of the template that the alias points to.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTemplateAliasResponse'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account; that contains the item to delete.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: TemplateId
          in: path
          required: true
          description: The ID for the template that the specified alias is for.
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
        - name: AliasName
          in: path
          required: true
          description: 'The name for the template alias. To delete a specific alias, you delete the version that the alias points to. You can specify the alias name, or specify the latest version of the template by providing the keyword <code>$LATEST</code> in the <code>AliasName</code> parameter. '
          schema:
            type: string
            pattern: '[\w\-]+|(\$LATEST)|(\$PUBLISHED)'
            minLength: 1
            maxLength: 2048
    get:
      operationId: DescribeTemplateAlias
      description: Describes the template alias for a template.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeTemplateAliasResponse'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account; that contains the template alias that you're describing.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: TemplateId
          in: path
          required: true
          description: The ID for the template.
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
        - name: AliasName
          in: path
          required: true
          description: 'The name of the template alias that you want to describe. If you name a specific alias, you describe the version that the alias points to. You can specify the latest version of the template by providing the keyword <code>$LATEST</code> in the <code>AliasName</code> parameter. The keyword <code>$PUBLISHED</code> doesn''t apply to templates.'
          schema:
            type: string
            pattern: '[\w\-]+|(\$LATEST)|(\$PUBLISHED)'
            minLength: 1
            maxLength: 2048
    put:
      operationId: UpdateTemplateAlias
      description: Updates the template alias of a template.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTemplateAliasResponse'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account; that contains the template alias that you're updating.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: TemplateId
          in: path
          required: true
          description: The ID for the template.
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
        - name: AliasName
          in: path
          required: true
          description: 'The alias of the template that you want to update. If you name a specific alias, you update the version that the alias points to. You can specify the latest version of the template by providing the keyword <code>$LATEST</code> in the <code>AliasName</code> parameter. The keyword <code>$PUBLISHED</code> doesn''t apply to templates.'
          schema:
            type: string
            pattern: '[\w\-]+|(\$LATEST)|(\$PUBLISHED)'
            minLength: 1
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - TemplateVersionNumber
              properties:
                TemplateVersionNumber:
                  description: The version number of the template.
                  type: integer
                  minimum: 1
  '/accounts/{AwsAccountId}/themes/{ThemeId}':
    post:
      operationId: CreateTheme
      description: '<p>Creates a theme.</p> <p>A <i>theme</i> is set of configuration options for color and layout. Themes apply to analyses and dashboards. For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/themes-in-quicksight.html">Using Themes in Amazon QuickSight</a> in the <i>Amazon QuickSight User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateThemeResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '486':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '487':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: 'The ID of the Amazon Web Services account; where you want to store the new theme. '
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: ThemeId
          in: path
          required: true
          description: An ID for the theme that you want to create. The theme ID is unique per Amazon Web Services Region; in each Amazon Web Services account;.
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
                - BaseThemeId
                - Configuration
              properties:
                Name:
                  description: A display name for the theme.
                  type: string
                  minLength: 1
                  maxLength: 2048
                BaseThemeId:
                  description: 'The ID of the theme that a custom theme will inherit from. All themes inherit from one of the starting themes defined by Amazon QuickSight. For a list of the starting themes, use <code>ListThemes</code> or choose <b>Themes</b> from within a QuickSight analysis. '
                  type: string
                  pattern: '[\w\-]+'
                  minLength: 1
                  maxLength: 2048
                VersionDescription:
                  description: 'A description of the first version of the theme that you''re creating. Every time <code>UpdateTheme</code> is called, a new version is created. Each version of the theme has a description of the version in the <code>VersionDescription</code> field.'
                  type: string
                  minLength: 1
                  maxLength: 512
                Configuration:
                  description: The theme configuration. This configuration contains all of the display properties for a theme.
                  type: object
                  properties:
                    DataColorPalette:
                      $ref: '#/components/schemas/DataColorPalette'
                      description: Color properties that apply to chart data colors.
                    UIColorPalette:
                      $ref: '#/components/schemas/UIColorPalette'
                      description: 'Color properties that apply to the UI and to charts, excluding the colors that apply to data. '
                    Sheet:
                      $ref: '#/components/schemas/SheetStyle'
                      description: Display options related to sheets.
                Permissions:
                  description: 'A valid grouping of resource permissions to apply to the new theme. '
                  type: array
                  items:
                    $ref: '#/components/schemas/ResourcePermission'
                  minItems: 1
                  maxItems: 64
                Tags:
                  description: A map of the key-value pairs for the resource tag or tags that you want to add to the resource.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                  minItems: 1
                  maxItems: 200
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteTheme
      description: Deletes a theme.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteThemeResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '486':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account; that contains the theme that you're deleting.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: ThemeId
          in: path
          required: true
          description: An ID for the theme that you want to delete.
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
        - name: version-number
          in: query
          required: false
          description: '<p>The version of the theme that you want to delete. </p> <p> <b>Note:</b> If you don''t provide a version number, you''re using this call to <code>DeleteTheme</code> to delete all versions of the theme.</p>'
          schema:
            type: integer
            minimum: 1
    get:
      operationId: DescribeTheme
      description: Describes a theme.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeThemeResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '486':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account; that contains the theme that you're describing.
          schema:
            type: string
            pattern: '^(aws|[0-9]{12})$'
        - name: ThemeId
          in: path
          required: true
          description: The ID for the theme.
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
        - name: version-number
          in: query
          required: false
          description: 'The version number for the version to describe. If a <code>VersionNumber</code> parameter value isn''t provided, the latest version of the theme is described.'
          schema:
            type: integer
            minimum: 1
        - name: alias-name
          in: query
          required: false
          description: 'The alias of the theme that you want to describe. If you name a specific alias, you describe the version that the alias points to. You can specify the latest version of the theme by providing the keyword <code>$LATEST</code> in the <code>AliasName</code> parameter. The keyword <code>$PUBLISHED</code> doesn''t apply to themes.'
          schema:
            type: string
            pattern: '[\w\-]+|(\$LATEST)|(\$PUBLISHED)'
            minLength: 1
            maxLength: 2048
    put:
      operationId: UpdateTheme
      description: Updates a theme.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateThemeResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '487':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account; that contains the theme that you're updating.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: ThemeId
          in: path
          required: true
          description: The ID for the theme.
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - BaseThemeId
              properties:
                Name:
                  description: The name for the theme.
                  type: string
                  minLength: 1
                  maxLength: 2048
                BaseThemeId:
                  description: 'The theme ID, defined by Amazon QuickSight, that a custom theme inherits from. All themes initially inherit from a default Amazon QuickSight theme.'
                  type: string
                  pattern: '[\w\-]+'
                  minLength: 1
                  maxLength: 2048
                VersionDescription:
                  description: 'A description of the theme version that you''re updating Every time that you call <code>UpdateTheme</code>, you create a new version of the theme. Each version of the theme maintains a description of the version in <code>VersionDescription</code>.'
                  type: string
                  minLength: 1
                  maxLength: 512
                Configuration:
                  description: The theme configuration. This configuration contains all of the display properties for a theme.
                  type: object
                  properties:
                    DataColorPalette:
                      $ref: '#/components/schemas/DataColorPalette'
                      description: Color properties that apply to chart data colors.
                    UIColorPalette:
                      $ref: '#/components/schemas/UIColorPalette'
                      description: 'Color properties that apply to the UI and to charts, excluding the colors that apply to data. '
                    Sheet:
                      $ref: '#/components/schemas/SheetStyle'
                      description: Display options related to sheets.
  '/accounts/{AwsAccountId}/themes/{ThemeId}/aliases/{AliasName}':
    post:
      operationId: CreateThemeAlias
      description: Creates a theme alias for a theme.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateThemeAliasResponse'
        '480':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '487':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account; that contains the theme for the new theme alias.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: ThemeId
          in: path
          required: true
          description: An ID for the theme alias.
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
        - name: AliasName
          in: path
          required: true
          description: 'The name that you want to give to the theme alias that you are creating. The alias name can''t begin with a <code>$</code>. Alias names that start with <code>$</code> are reserved by Amazon QuickSight. '
          schema:
            type: string
            pattern: '[\w\-]+|(\$LATEST)|(\$PUBLISHED)'
            minLength: 1
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ThemeVersionNumber
              properties:
                ThemeVersionNumber:
                  description: The version number of the theme.
                  type: integer
                  minimum: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteThemeAlias
      description: 'Deletes the version of the theme that the specified theme alias points to. If you provide a specific alias, you delete the version of the theme that the alias points to.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteThemeAliasResponse'
        '480':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account; that contains the theme alias to delete.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: ThemeId
          in: path
          required: true
          description: The ID for the theme that the specified alias is for.
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
        - name: AliasName
          in: path
          required: true
          description: The unique name for the theme alias to delete.
          schema:
            type: string
            pattern: '[\w\-]+|(\$LATEST)|(\$PUBLISHED)'
            minLength: 1
            maxLength: 2048
    get:
      operationId: DescribeThemeAlias
      description: Describes the alias for a theme.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeThemeAliasResponse'
        '480':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account; that contains the theme alias that you're describing.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: ThemeId
          in: path
          required: true
          description: The ID for the theme.
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
        - name: AliasName
          in: path
          required: true
          description: The name of the theme alias that you want to describe.
          schema:
            type: string
            pattern: '[\w\-]+|(\$LATEST)|(\$PUBLISHED)'
            minLength: 1
            maxLength: 2048
    put:
      operationId: UpdateThemeAlias
      description: Updates an alias of a theme.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateThemeAliasResponse'
        '480':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '486':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account; that contains the theme alias that you're updating.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: ThemeId
          in: path
          required: true
          description: The ID for the theme.
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
        - name: AliasName
          in: path
          required: true
          description: The name of the theme alias that you want to update.
          schema:
            type: string
            pattern: '[\w\-]+|(\$LATEST)|(\$PUBLISHED)'
            minLength: 1
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ThemeVersionNumber
              properties:
                ThemeVersionNumber:
                  description: The version number of the theme that the alias should reference.
                  type: integer
                  minimum: 1
  '/accounts/{AwsAccountId}/data-sets/{DataSetId}':
    delete:
      operationId: DeleteDataSet
      description: Deletes a dataset.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDataSetResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account; ID.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: DataSetId
          in: path
          required: true
          description: The ID for the dataset that you want to create. This ID is unique per Amazon Web Services Region; for each Amazon Web Services account;.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeDataSet
      description: 'Describes a dataset. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDataSetResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account; ID.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: DataSetId
          in: path
          required: true
          description: The ID for the dataset that you want to create. This ID is unique per Amazon Web Services Region; for each Amazon Web Services account;.
          schema:
            type: string
    put:
      operationId: UpdateDataSet
      description: Updates a dataset.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDataSetResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '486':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '487':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account; ID.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: DataSetId
          in: path
          required: true
          description: The ID for the dataset that you want to update. This ID is unique per Amazon Web Services Region; for each Amazon Web Services account;.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
                - PhysicalTableMap
                - ImportMode
              properties:
                Name:
                  description: The display name for the dataset.
                  type: string
                  minLength: 1
                  maxLength: 128
                PhysicalTableMap:
                  description: Declares the physical tables that are available in the underlying data sources.
                  type: object
                  minProperties: 1
                  maxProperties: 32
                  additionalProperties:
                    $ref: '#/components/schemas/PhysicalTable'
                LogicalTableMap:
                  description: Configures the combination and transformation of the data from the physical tables.
                  type: object
                  minProperties: 1
                  maxProperties: 64
                  additionalProperties:
                    $ref: '#/components/schemas/LogicalTable'
                ImportMode:
                  description: Indicates whether you want to import the data into SPICE.
                  type: string
                  enum:
                    - SPICE
                    - DIRECT_QUERY
                ColumnGroups:
                  description: 'Groupings of columns that work together in certain QuickSight features. Currently, only geospatial hierarchy is supported.'
                  type: array
                  items:
                    $ref: '#/components/schemas/ColumnGroup'
                  minItems: 1
                  maxItems: 8
                FieldFolders:
                  description: The folder that contains fields and nested subfolders for your dataset.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/FieldFolder'
                RowLevelPermissionDataSet:
                  description: '<p>Information about a dataset that contains permissions for row-level security (RLS). The permissions dataset maps fields to users or groups. For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/restrict-access-to-a-data-set-using-row-level-security.html">Using Row-Level Security (RLS) to Restrict Access to a Dataset</a> in the <i>Amazon QuickSight User Guide</i>.</p> <p>The option to deny permissions by setting <code>PermissionPolicy</code> to <code>DENY_ACCESS</code> is not supported for new RLS datasets.</p>'
                  type: object
                  properties:
                    Namespace:
                      $ref: '#/components/schemas/Namespace'
                      description: The namespace associated with the dataset that contains permissions for RLS.
                    Arn:
                      $ref: '#/components/schemas/Arn'
                      description: The Amazon Resource Name (ARN) of the dataset that contains permissions for RLS.
                    PermissionPolicy:
                      $ref: '#/components/schemas/RowLevelPermissionPolicy'
                      description: The type of permissions to use when interpretting the permissions for RLS. <code>DENY_ACCESS</code> is included for backward compatibility only.
                    FormatVersion:
                      $ref: '#/components/schemas/RowLevelPermissionFormatVersion'
                      description: '<p>The user or group rules associated with the dataset that contains permissions for RLS.</p> <p>By default, <code>FormatVersion</code> is <code>VERSION_1</code>. When <code>FormatVersion</code> is <code>VERSION_1</code>, <code>UserName</code> and <code>GroupName</code> are required. When <code>FormatVersion</code> is <code>VERSION_2</code>, <code>UserARN</code> and <code>GroupARN</code> are required, and <code>Namespace</code> must not exist.</p>'
                    Status:
                      $ref: '#/components/schemas/Status'
                      description: 'The status of the row-level security permission dataset. If enabled, the status is <code>ENABLED</code>. If disabled, the status is <code>DISABLED</code>.'
                RowLevelPermissionTagConfiguration:
                  description: 'The configuration of tags on a dataset to set row-level security. '
                  type: object
                  properties:
                    Status:
                      $ref: '#/components/schemas/Status'
                      description: 'The status of row-level security tags. If enabled, the status is <code>ENABLED</code>. If disabled, the status is <code>DISABLED</code>.'
                    TagRules:
                      $ref: '#/components/schemas/RowLevelPermissionTagRuleList'
                      description: 'A set of rules associated with row-level security, such as the tag names and columns that they are assigned to.'
                ColumnLevelPermissionRules:
                  description: A set of one or more definitions of a <code> <a>ColumnLevelPermissionRule</a> </code>.
                  type: array
                  items:
                    $ref: '#/components/schemas/ColumnLevelPermissionRule'
                  minItems: 1
  '/accounts/{AwsAccountId}/data-sources/{DataSourceId}':
    delete:
      operationId: DeleteDataSource
      description: Deletes the data source permanently. This operation breaks all the datasets that reference the deleted data source.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDataSourceResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account; ID.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: DataSourceId
          in: path
          required: true
          description: The ID of the data source. This ID is unique per Amazon Web Services Region; for each Amazon Web Services account;.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeDataSource
      description: Describes a data source.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDataSourceResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account; ID.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: DataSourceId
          in: path
          required: true
          description: The ID of the data source. This ID is unique per Amazon Web Services Region; for each Amazon Web Services account;.
          schema:
            type: string
    put:
      operationId: UpdateDataSource
      description: Updates a data source.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDataSourceResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account; ID.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: DataSourceId
          in: path
          required: true
          description: 'The ID of the data source. This ID is unique per Amazon Web Services Region; for each Amazon Web Services account;. '
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
              properties:
                Name:
                  description: A display name for the data source.
                  type: string
                  minLength: 1
                  maxLength: 128
                DataSourceParameters:
                  description: 'The parameters that Amazon QuickSight uses to connect to your underlying data source. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.'
                  type: object
                  properties:
                    AmazonElasticsearchParameters:
                      $ref: '#/components/schemas/AmazonElasticsearchParameters'
                      description: Amazon Elasticsearch Service parameters.
                    AthenaParameters:
                      $ref: '#/components/schemas/AthenaParameters'
                      description: Amazon Athena parameters.
                    AuroraParameters:
                      $ref: '#/components/schemas/AuroraParameters'
                      description: Amazon Aurora MySQL parameters.
                    AuroraPostgreSqlParameters:
                      $ref: '#/components/schemas/AuroraPostgreSqlParameters'
                      description: Aurora PostgreSQL parameters.
                    AwsIotAnalyticsParameters:
                      $ref: '#/components/schemas/AwsIotAnalyticsParameters'
                      description: Amazon Web Services IoT Analytics parameters.
                    JiraParameters:
                      $ref: '#/components/schemas/JiraParameters'
                      description: Jira parameters.
                    MariaDbParameters:
                      $ref: '#/components/schemas/MariaDbParameters'
                      description: MariaDB parameters.
                    MySqlParameters:
                      $ref: '#/components/schemas/MySqlParameters'
                      description: MySQL parameters.
                    OracleParameters:
                      $ref: '#/components/schemas/OracleParameters'
                      description: Oracle parameters.
                    PostgreSqlParameters:
                      $ref: '#/components/schemas/PostgreSqlParameters'
                      description: PostgreSQL parameters.
                    PrestoParameters:
                      $ref: '#/components/schemas/PrestoParameters'
                      description: Presto parameters.
                    RdsParameters:
                      $ref: '#/components/schemas/RdsParameters'
                      description: Amazon RDS parameters.
                    RedshiftParameters:
                      $ref: '#/components/schemas/RedshiftParameters'
                      description: Amazon Redshift parameters.
                    S3Parameters:
                      $ref: '#/components/schemas/S3Parameters'
                      description: S3 parameters.
                    ServiceNowParameters:
                      $ref: '#/components/schemas/ServiceNowParameters'
                      description: ServiceNow parameters.
                    SnowflakeParameters:
                      $ref: '#/components/schemas/SnowflakeParameters'
                      description: Snowflake parameters.
                    SparkParameters:
                      $ref: '#/components/schemas/SparkParameters'
                      description: Spark parameters.
                    SqlServerParameters:
                      $ref: '#/components/schemas/SqlServerParameters'
                      description: SQL Server parameters.
                    TeradataParameters:
                      $ref: '#/components/schemas/TeradataParameters'
                      description: Teradata parameters.
                    TwitterParameters:
                      $ref: '#/components/schemas/TwitterParameters'
                      description: Twitter parameters.
                Credentials:
                  description: 'Data source credentials. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.'
                  type: object
                  properties:
                    CredentialPair:
                      $ref: '#/components/schemas/CredentialPair'
                      description: 'Credential pair. For more information, see <a>CredentialPair</a>.'
                    CopySourceArn:
                      $ref: '#/components/schemas/CopySourceArn'
                      description: 'The Amazon Resource Name (ARN) of a data source that has the credential pair that you want to use. When <code>CopySourceArn</code> is not null, the credential pair from the data source in the ARN is used as the credentials for the <code>DataSourceCredentials</code> structure.'
                VpcConnectionProperties:
                  description: VPC connection properties.
                  type: object
                  properties:
                    VpcConnectionArn:
                      $ref: '#/components/schemas/Arn'
                      description: The Amazon Resource Name (ARN) for the VPC connection.
                SslProperties:
                  description: Secure Socket Layer (SSL) properties that apply when QuickSight connects to your underlying data source.
                  type: object
                  properties:
                    DisableSsl:
                      $ref: '#/components/schemas/Boolean'
                      description: A Boolean option to control whether SSL should be disabled.
  '/accounts/{AwsAccountId}/namespaces/{Namespace}/groups/{GroupName}':
    delete:
      operationId: DeleteGroup
      description: 'Removes a user group from Amazon QuickSight. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteGroupResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: PreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionNotMetException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '486':
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
      parameters:
        - name: GroupName
          in: path
          required: true
          description: The name of the group that you want to delete.
          schema:
            type: string
            pattern: '[\u0020-\u00FF]+'
            minLength: 1
        - name: AwsAccountId
          in: path
          required: true
          description: 'The ID for the Amazon Web Services account; that the group is in. Currently, you use the ID for the Amazon Web Services account; that contains your Amazon QuickSight account.'
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: 'The namespace. Currently, you should set this to <code>default</code>.'
          schema:
            type: string
            pattern: '^[a-zA-Z0-9._-]*$'
            maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeGroup
      description: 'Returns an Amazon QuickSight group''s description and Amazon Resource Name (ARN). '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeGroupResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: PreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionNotMetException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '486':
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
      parameters:
        - name: GroupName
          in: path
          required: true
          description: The name of the group that you want to describe.
          schema:
            type: string
            pattern: '[\u0020-\u00FF]+'
            minLength: 1
        - name: AwsAccountId
          in: path
          required: true
          description: 'The ID for the Amazon Web Services account; that the group is in. Currently, you use the ID for the Amazon Web Services account; that contains your Amazon QuickSight account.'
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: 'The namespace. Currently, you should set this to <code>default</code>.'
          schema:
            type: string
            pattern: '^[a-zA-Z0-9._-]*$'
            maxLength: 64
    put:
      operationId: UpdateGroup
      description: 'Changes a group description. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateGroupResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: PreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionNotMetException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '486':
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
      parameters:
        - name: GroupName
          in: path
          required: true
          description: The name of the group that you want to update.
          schema:
            type: string
            pattern: '[\u0020-\u00FF]+'
            minLength: 1
        - name: AwsAccountId
          in: path
          required: true
          description: 'The ID for the Amazon Web Services account; that the group is in. Currently, you use the ID for the Amazon Web Services account; that contains your Amazon QuickSight account.'
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: 'The namespace. Currently, you should set this to <code>default</code>.'
          schema:
            type: string
            pattern: '^[a-zA-Z0-9._-]*$'
            maxLength: 64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  description: The description for the group that you want to update.
                  type: string
                  minLength: 1
                  maxLength: 512
  '/accounts/{AwsAccountId}/namespace/{Namespace}/iam-policy-assignments/{AssignmentName}':
    delete:
      operationId: DeleteIAMPolicyAssignment
      description: Deletes an existing IAM policy assignment.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteIAMPolicyAssignmentResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: ConcurrentUpdatingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentUpdatingException'
        '486':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account; ID where you want to delete the IAM policy assignment.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: AssignmentName
          in: path
          required: true
          description: 'The name of the assignment. '
          schema:
            type: string
            pattern: '(?=^.{2,256}$)(?!.*\s)[0-9a-zA-Z-_.:=+@]*$'
            minLength: 1
        - name: Namespace
          in: path
          required: true
          description: The namespace that contains the assignment.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9._-]*$'
            maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/accounts/{AwsAccountId}/namespaces/{Namespace}':
    delete:
      operationId: DeleteNamespace
      description: 'Deletes a namespace and the users and groups that are associated with the namespace. This is an asynchronous process. Assets including dashboards, analyses, datasets and data sources are not deleted. To delete these assets, you use the API operations for the relevant asset. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteNamespaceResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: PreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionNotMetException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '486':
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account; that you want to delete the QuickSight namespace from.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: The namespace that you want to delete.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9._-]*$'
            maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeNamespace
      description: Describes the current namespace.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeNamespaceResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '485':
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account; that contains the QuickSight namespace that you want to describe.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: The namespace that you want to describe.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9._-]*$'
            maxLength: 64
  '/accounts/{AwsAccountId}/namespaces/{Namespace}/users/{UserName}':
    delete:
      operationId: DeleteUser
      description: 'Deletes the Amazon QuickSight user that is associated with the identity of the Identity and Access Management (IAM) user or role that''s making the call. The IAM user isn''t deleted as a result of this call. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteUserResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: PreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionNotMetException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '486':
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
      parameters:
        - name: UserName
          in: path
          required: true
          description: The name of the user that you want to delete.
          schema:
            type: string
            pattern: '[\u0020-\u00FF]+'
            minLength: 1
        - name: AwsAccountId
          in: path
          required: true
          description: 'The ID for the Amazon Web Services account; that the user is in. Currently, you use the ID for the Amazon Web Services account; that contains your Amazon QuickSight account.'
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: 'The namespace. Currently, you should set this to <code>default</code>.'
          schema:
            type: string
            pattern: '^[a-zA-Z0-9._-]*$'
            maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeUser
      description: 'Returns information about a user, given the user name. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeUserResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: PreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionNotMetException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '486':
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
      parameters:
        - name: UserName
          in: path
          required: true
          description: The name of the user that you want to describe.
          schema:
            type: string
            pattern: '[\u0020-\u00FF]+'
            minLength: 1
        - name: AwsAccountId
          in: path
          required: true
          description: 'The ID for the Amazon Web Services account; that the user is in. Currently, you use the ID for the Amazon Web Services account; that contains your Amazon QuickSight account.'
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: 'The namespace. Currently, you should set this to <code>default</code>.'
          schema:
            type: string
            pattern: '^[a-zA-Z0-9._-]*$'
            maxLength: 64
    put:
      operationId: UpdateUser
      description: Updates an Amazon QuickSight user.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUserResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: PreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionNotMetException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '486':
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
      parameters:
        - name: UserName
          in: path
          required: true
          description: The Amazon QuickSight user name that you want to update.
          schema:
            type: string
            pattern: '[\u0020-\u00FF]+'
            minLength: 1
        - name: AwsAccountId
          in: path
          required: true
          description: 'The ID for the Amazon Web Services account; that the user is in. Currently, you use the ID for the Amazon Web Services account; that contains your Amazon QuickSight account.'
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: 'The namespace. Currently, you should set this to <code>default</code>.'
          schema:
            type: string
            pattern: '^[a-zA-Z0-9._-]*$'
            maxLength: 64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Email
                - Role
              properties:
                Email:
                  description: The email address of the user that you want to update.
                  type: string
                Role:
                  description: '<p>The Amazon QuickSight role of the user. The role can be one of the following default security cohorts:</p> <ul> <li> <p> <code>READER</code>: A user who has read-only access to dashboards.</p> </li> <li> <p> <code>AUTHOR</code>: A user who can create data sources, datasets, analyses, and dashboards.</p> </li> <li> <p> <code>ADMIN</code>: A user who is an author, who can also manage Amazon QuickSight settings.</p> </li> </ul> <p>The name of the QuickSight role is invisible to the user except for the console screens dealing with permissions.</p>'
                  type: string
                  enum:
                    - ADMIN
                    - AUTHOR
                    - READER
                    - RESTRICTED_AUTHOR
                    - RESTRICTED_READER
                CustomPermissionsName:
                  description: '<p>(Enterprise edition only) The name of the custom permissions profile that you want to assign to this user. Customized permissions allows you to control a user''s access by restricting access the following operations:</p> <ul> <li> <p>Create and update data sources</p> </li> <li> <p>Create and update datasets</p> </li> <li> <p>Create and update email reports</p> </li> <li> <p>Subscribe to email reports</p> </li> </ul> <p>A set of custom permissions includes any combination of these restrictions. Currently, you need to create the profile names for custom permission sets by using the QuickSight console. Then, you use the <code>RegisterUser</code> API operation to assign the named set of permissions to a QuickSight user. </p> <p>QuickSight custom permissions are applied through IAM policies. Therefore, they override the permissions typically granted by assigning QuickSight users to one of the default security cohorts in QuickSight (admin, author, reader).</p> <p>This feature is available only to QuickSight Enterprise edition subscriptions.</p>'
                  type: string
                  pattern: '^[a-zA-Z0-9+=,.@_-]+$'
                  minLength: 1
                  maxLength: 64
                UnapplyCustomPermissions:
                  description: A flag that you use to indicate that you want to remove all custom permissions from this user. Using this parameter resets the user to the state it was in before a custom permissions profile was applied. This parameter defaults to NULL and it doesn't accept any other value.
                  type: boolean
                ExternalLoginFederationProviderType:
                  description: '<p>The type of supported external login provider that provides identity to let a user federate into QuickSight with an associated AWS Identity and Access Management (IAM) role. The type of supported external login provider can be one of the following.</p> <ul> <li> <p> <code>COGNITO</code>: Amazon Cognito. The provider URL is cognito-identity.amazonaws.com. When choosing the <code>COGNITO</code> provider type, don’t use the "CustomFederationProviderUrl" parameter which is only needed when the external provider is custom.</p> </li> <li> <p> <code>CUSTOM_OIDC</code>: Custom OpenID Connect (OIDC) provider. When choosing <code>CUSTOM_OIDC</code> type, use the <code>CustomFederationProviderUrl</code> parameter to provide the custom OIDC provider URL.</p> </li> <li> <p> <code>NONE</code>: This clears all the previously saved external login information for a user. Use <code> <a>DescribeUser</a> </code> API to check the external login information.</p> </li> </ul>'
                  type: string
                CustomFederationProviderUrl:
                  description: The URL of the custom OpenID Connect (OIDC) provider that provides identity to let a user federate into QuickSight with an associated AWS Identity and Access Management (IAM) role. This parameter should only be used when <code>ExternalLoginFederationProviderType</code> parameter is set to <code>CUSTOM_OIDC</code>.
                  type: string
                ExternalLoginId:
                  description: The identity ID for a user in the external login provider.
                  type: string
  '/accounts/{AwsAccountId}/namespaces/{Namespace}/user-principals/{PrincipalId}':
    delete:
      operationId: DeleteUserByPrincipalId
      description: 'Deletes a user identified by its principal ID. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteUserByPrincipalIdResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: PreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionNotMetException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '486':
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
      parameters:
        - name: PrincipalId
          in: path
          required: true
          description: The principal ID of the user.
          schema:
            type: string
        - name: AwsAccountId
          in: path
          required: true
          description: 'The ID for the Amazon Web Services account; that the user is in. Currently, you use the ID for the Amazon Web Services account; that contains your Amazon QuickSight account.'
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: 'The namespace. Currently, you should set this to <code>default</code>.'
          schema:
            type: string
            pattern: '^[a-zA-Z0-9._-]*$'
            maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/accounts/{AwsAccountId}/settings':
    get:
      operationId: DescribeAccountSettings
      description: Describes the settings that were used when your QuickSight subscription was first created in this Amazon Web Services account;.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAccountSettingsResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '485':
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account; that contains the settings that you want to list.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdateAccountSettings
      description: Updates the Amazon QuickSight settings in your Amazon Web Services account;.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAccountSettingsResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '485':
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account; that contains the QuickSight settings that you want to list.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - DefaultNamespace
              properties:
                DefaultNamespace:
                  description: 'The default namespace for this Amazon Web Services account;. Currently, the default is <code>default</code>. Identity and Access Management (IAM) users that register for the first time with QuickSight provide an email that becomes associated with the default namespace.'
                  type: string
                  pattern: '^[a-zA-Z0-9._-]*$'
                  maxLength: 64
                NotificationEmail:
                  description: The email address that you want QuickSight to send notifications to regarding your Amazon Web Services account; or QuickSight subscription.
                  type: string
  '/accounts/{AwsAccountId}/analyses/{AnalysisId}/permissions':
    get:
      operationId: DescribeAnalysisPermissions
      description: Provides the read and write permissions for an analysis.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAnalysisPermissionsResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account; that contains the analysis whose permissions you're describing. You must be using the Amazon Web Services account; that the analysis is in.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: AnalysisId
          in: path
          required: true
          description: The ID of the analysis whose permissions you're describing. The ID is part of the analysis URL.
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdateAnalysisPermissions
      description: Updates the read and write permissions for an analysis.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAnalysisPermissionsResponse'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account; that contains the analysis whose permissions you're updating. You must be using the Amazon Web Services account; that the analysis is in.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: AnalysisId
          in: path
          required: true
          description: The ID of the analysis whose permissions you're updating. The ID is part of the analysis URL.
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                GrantPermissions:
                  description: A structure that describes the permissions to add and the principal to add them to.
                  type: array
                  items:
                    $ref: '#/components/schemas/ResourcePermission'
                  maxItems: 100
                RevokePermissions:
                  description: A structure that describes the permissions to remove and the principal to remove them from.
                  type: array
                  items:
                    $ref: '#/components/schemas/ResourcePermission'
                  maxItems: 100
  '/accounts/{AwsAccountId}/dashboards/{DashboardId}/permissions':
    get:
      operationId: DescribeDashboardPermissions
      description: Describes read and write permissions for a dashboard.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDashboardPermissionsResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account; that contains the dashboard that you're describing permissions for.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: DashboardId
          in: path
          required: true
          description: 'The ID for the dashboard, also added to the IAM policy.'
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdateDashboardPermissions
      description: Updates read and write permissions on a dashboard.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDashboardPermissionsResponse'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account; that contains the dashboard whose permissions you're updating.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: DashboardId
          in: path
          required: true
          description: The ID for the dashboard.
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                GrantPermissions:
                  description: The permissions that you want to grant on this resource.
                  type: array
                  items:
                    $ref: '#/components/schemas/ResourcePermission'
                  maxItems: 100
                RevokePermissions:
                  description: The permissions that you want to revoke from this resource.
                  type: array
                  items:
                    $ref: '#/components/schemas/ResourcePermission'
                  maxItems: 100
  '/accounts/{AwsAccountId}/data-sets/{DataSetId}/permissions':
    get:
      operationId: DescribeDataSetPermissions
      description: '<p>Describes the permissions on a dataset.</p> <p>The permissions resource is <code>arn:aws:quicksight:region:aws-account-id:dataset/data-set-id</code>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDataSetPermissionsResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account; ID.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: DataSetId
          in: path
          required: true
          description: The ID for the dataset that you want to create. This ID is unique per Amazon Web Services Region; for each Amazon Web Services account;.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateDataSetPermissions
      description: '<p>Updates the permissions on a dataset.</p> <p>The permissions resource is <code>arn:aws:quicksight:region:aws-account-id:dataset/data-set-id</code>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDataSetPermissionsResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account; ID.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: DataSetId
          in: path
          required: true
          description: The ID for the dataset whose permissions you want to update. This ID is unique per Amazon Web Services Region; for each Amazon Web Services account;.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                GrantPermissions:
                  description: The resource permissions that you want to grant to the dataset.
                  type: array
                  items:
                    $ref: '#/components/schemas/ResourcePermission'
                  minItems: 1
                  maxItems: 64
                RevokePermissions:
                  description: The resource permissions that you want to revoke from the dataset.
                  type: array
                  items:
                    $ref: '#/components/schemas/ResourcePermission'
                  minItems: 1
                  maxItems: 64
  '/accounts/{AwsAccountId}/data-sources/{DataSourceId}/permissions':
    get:
      operationId: DescribeDataSourcePermissions
      description: Describes the resource permissions for a data source.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDataSourcePermissionsResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account; ID.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: DataSourceId
          in: path
          required: true
          description: The ID of the data source. This ID is unique per Amazon Web Services Region; for each Amazon Web Services account;.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateDataSourcePermissions
      description: Updates the permissions to a data source.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDataSourcePermissionsResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account; ID.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: DataSourceId
          in: path
          required: true
          description: 'The ID of the data source. This ID is unique per Amazon Web Services Region; for each Amazon Web Services account;. '
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                GrantPermissions:
                  description: A list of resource permissions that you want to grant on the data source.
                  type: array
                  items:
                    $ref: '#/components/schemas/ResourcePermission'
                  minItems: 1
                  maxItems: 64
                RevokePermissions:
                  description: A list of resource permissions that you want to revoke on the data source.
                  type: array
                  items:
                    $ref: '#/components/schemas/ResourcePermission'
                  minItems: 1
                  maxItems: 64
  '/accounts/{AwsAccountId}/folders/{FolderId}/permissions':
    get:
      operationId: DescribeFolderPermissions
      description: Describes permissions for a folder.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeFolderPermissionsResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The AWS Account ID.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: FolderId
          in: path
          required: true
          description: The folder ID.
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdateFolderPermissions
      description: Updates permissions of a folder.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFolderPermissionsResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '486':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The AWS account ID.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: FolderId
          in: path
          required: true
          description: The folder ID.
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                GrantPermissions:
                  description: The permissions that you want to grant on a resource.
                  type: array
                  items:
                    $ref: '#/components/schemas/ResourcePermission'
                  minItems: 1
                  maxItems: 64
                RevokePermissions:
                  description: The permissions that you want to revoke from a resource.
                  type: array
                  items:
                    $ref: '#/components/schemas/ResourcePermission'
                  minItems: 1
                  maxItems: 64
  '/accounts/{AwsAccountId}/folders/{FolderId}/resolved-permissions':
    get:
      operationId: DescribeFolderResolvedPermissions
      description: Describes the folder resolved permissions. Permissions consists of both folder direct permissions and the inherited permissions from the ancestor folders.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeFolderResolvedPermissionsResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The AWS account ID.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: FolderId
          in: path
          required: true
          description: The folder ID.
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/accounts/{AwsAccountId}/namespaces/{Namespace}/iam-policy-assignments/{AssignmentName}':
    get:
      operationId: DescribeIAMPolicyAssignment
      description: 'Describes an existing IAM policy assignment, as specified by the assignment name.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeIAMPolicyAssignmentResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account; that contains the assignment that you want to describe.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: AssignmentName
          in: path
          required: true
          description: 'The name of the assignment, also called a rule.'
          schema:
            type: string
            pattern: '(?=^.{2,256}$)(?!.*\s)[0-9a-zA-Z-_.:=+@]*$'
            minLength: 1
        - name: Namespace
          in: path
          required: true
          description: The namespace that contains the assignment.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9._-]*$'
            maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdateIAMPolicyAssignment
      description: 'Updates an existing IAM policy assignment. This operation updates only the optional parameter or parameters that are specified in the request. This overwrites all of the users included in <code>Identities</code>. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateIAMPolicyAssignmentResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: ConcurrentUpdatingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentUpdatingException'
        '486':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: 'The ID of the Amazon Web Services account; that contains the IAM policy assignment. '
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: AssignmentName
          in: path
          required: true
          description: 'The name of the assignment, also called a rule. This name must be unique within an Amazon Web Services account;.'
          schema:
            type: string
            pattern: '(?=^.{2,256}$)(?!.*\s)[0-9a-zA-Z-_.:=+@]*$'
            minLength: 1
        - name: Namespace
          in: path
          required: true
          description: The namespace of the assignment.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9._-]*$'
            maxLength: 64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AssignmentStatus:
                  description: '<p>The status of the assignment. Possible values are as follows:</p> <ul> <li> <p> <code>ENABLED</code> - Anything specified in this assignment is used when creating the data source.</p> </li> <li> <p> <code>DISABLED</code> - This assignment isn''t used when creating the data source.</p> </li> <li> <p> <code>DRAFT</code> - This assignment is an unfinished draft and isn''t used when creating the data source.</p> </li> </ul>'
                  type: string
                  enum:
                    - ENABLED
                    - DRAFT
                    - DISABLED
                PolicyArn:
                  description: The ARN for the IAM policy to apply to the QuickSight users and groups specified in this assignment.
                  type: string
                Identities:
                  description: 'The QuickSight users, groups, or both that you want to assign the policy to.'
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/IdentityNameList'
  '/accounts/{AwsAccountId}/templates/{TemplateId}/permissions':
    get:
      operationId: DescribeTemplatePermissions
      description: Describes read and write permissions on a template.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeTemplatePermissionsResponse'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account; that contains the template that you're describing.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: TemplateId
          in: path
          required: true
          description: The ID for the template.
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdateTemplatePermissions
      description: Updates the resource permissions for a template.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTemplatePermissionsResponse'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account; that contains the template.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: TemplateId
          in: path
          required: true
          description: The ID for the template.
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                GrantPermissions:
                  description: 'A list of resource permissions to be granted on the template. '
                  type: array
                  items:
                    $ref: '#/components/schemas/ResourcePermission'
                  maxItems: 100
                RevokePermissions:
                  description: 'A list of resource permissions to be revoked from the template. '
                  type: array
                  items:
                    $ref: '#/components/schemas/ResourcePermission'
                  maxItems: 100
  '/accounts/{AwsAccountId}/themes/{ThemeId}/permissions':
    get:
      operationId: DescribeThemePermissions
      description: Describes the read and write permissions for a theme.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeThemePermissionsResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account; that contains the theme that you're describing.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: ThemeId
          in: path
          required: true
          description: The ID for the theme that you want to describe permissions for.
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdateThemePermissions
      description: '<p>Updates the resource permissions for a theme. Permissions apply to the action to grant or revoke permissions on, for example <code>"quicksight:DescribeTheme"</code>.</p> <p>Theme permissions apply in groupings. Valid groupings include the following for the three levels of permissions, which are user, owner, or no permissions: </p> <ul> <li> <p>User</p> <ul> <li> <p> <code>"quicksight:DescribeTheme"</code> </p> </li> <li> <p> <code>"quicksight:DescribeThemeAlias"</code> </p> </li> <li> <p> <code>"quicksight:ListThemeAliases"</code> </p> </li> <li> <p> <code>"quicksight:ListThemeVersions"</code> </p> </li> </ul> </li> <li> <p>Owner</p> <ul> <li> <p> <code>"quicksight:DescribeTheme"</code> </p> </li> <li> <p> <code>"quicksight:DescribeThemeAlias"</code> </p> </li> <li> <p> <code>"quicksight:ListThemeAliases"</code> </p> </li> <li> <p> <code>"quicksight:ListThemeVersions"</code> </p> </li> <li> <p> <code>"quicksight:DeleteTheme"</code> </p> </li> <li> <p> <code>"quicksight:UpdateTheme"</code> </p> </li> <li> <p> <code>"quicksight:CreateThemeAlias"</code> </p> </li> <li> <p> <code>"quicksight:DeleteThemeAlias"</code> </p> </li> <li> <p> <code>"quicksight:UpdateThemeAlias"</code> </p> </li> <li> <p> <code>"quicksight:UpdateThemePermissions"</code> </p> </li> <li> <p> <code>"quicksight:DescribeThemePermissions"</code> </p> </li> </ul> </li> <li> <p>To specify no permissions, omit the permissions list.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateThemePermissionsResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account; that contains the theme.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: ThemeId
          in: path
          required: true
          description: The ID for the theme.
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                GrantPermissions:
                  description: A list of resource permissions to be granted for the theme.
                  type: array
                  items:
                    $ref: '#/components/schemas/ResourcePermission'
                  maxItems: 100
                RevokePermissions:
                  description: A list of resource permissions to be revoked from the theme.
                  type: array
                  items:
                    $ref: '#/components/schemas/ResourcePermission'
                  maxItems: 100
  '/accounts/{AwsAccountId}/embed-url/anonymous-user':
    post:
      operationId: GenerateEmbedUrlForAnonymousUser
      description: '<p>Generates an embed URL that you can use to embed an Amazon QuickSight dashboard in your website, without having to register any reader users. Before you use this action, make sure that you have configured the dashboards and permissions.</p> <p>The following rules apply to the generated URL:</p> <ul> <li> <p>It contains a temporary bearer token. It is valid for 5 minutes after it is generated. Once redeemed within this period, it cannot be re-used again.</p> </li> <li> <p>The URL validity period should not be confused with the actual session lifetime that can be customized using the <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_GenerateEmbedUrlForAnonymousUser.html#QS-GenerateEmbedUrlForAnonymousUser-request-SessionLifetimeInMinutes">SessionLifetimeInMinutes</a> </code> parameter.</p> <p>The resulting user session is valid for 15 minutes (default) to 10 hours (maximum).</p> </li> <li> <p>You are charged only when the URL is used or there is interaction with Amazon QuickSight.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/embedded-analytics.html">Embedded Analytics</a> in the <i>Amazon QuickSight User Guide</i>.</p> <p>For more information about the high-level steps for embedding and for an interactive demo of the ways you can customize embedding, visit the <a href="https://docs.aws.amazon.com/quicksight/latest/user/quicksight-dev-portal.html">Amazon QuickSight Developer Portal</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateEmbedUrlForAnonymousUserResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: SessionLifetimeInMinutesInvalidException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionLifetimeInMinutesInvalidException'
        '485':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '486':
          description: UnsupportedPricingPlanException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedPricingPlanException'
        '487':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account that contains the dashboard that you're embedding.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Namespace
                - AuthorizedResourceArns
                - ExperienceConfiguration
              properties:
                SessionLifetimeInMinutes:
                  description: 'How many minutes the session is valid. The session lifetime must be in [15-600] minutes range.'
                  type: integer
                  minimum: 15
                  maximum: 600
                Namespace:
                  description: 'The Amazon QuickSight namespace that the anonymous user virtually belongs to. If you are not using an Amazon QuickSight custom namespace, set this to <code>default</code>.'
                  type: string
                  pattern: '^[a-zA-Z0-9._-]*$'
                  maxLength: 64
                SessionTags:
                  description: '<p>The session tags used for row-level security. Before you use this parameter, make sure that you have configured the relevant datasets using the <code>DataSet$RowLevelPermissionTagConfiguration</code> parameter so that session tags can be used to provide row-level security.</p> <p>These are not the tags used for the Amazon Web Services resource tagging feature. For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/quicksight-dev-rls-tags.html">Using Row-Level Security (RLS) with Tags</a>.</p>'
                  type: array
                  items:
                    $ref: '#/components/schemas/SessionTag'
                  minItems: 1
                  maxItems: 50
                AuthorizedResourceArns:
                  description: 'The Amazon Resource Names for the Amazon QuickSight resources that the user is authorized to access during the lifetime of the session. If you choose <code>Dashboard</code> embedding experience, pass the list of dashboard ARNs in the account that you want the user to be able to view.'
                  type: array
                  items:
                    $ref: '#/components/schemas/Arn'
                ExperienceConfiguration:
                  description: 'The type of experience you want to embed. For anonymous users, you can embed an Amazon QuickSight dashboard.'
                  type: object
                  properties:
                    Dashboard:
                      $ref: '#/components/schemas/AnonymousUserDashboardEmbeddingConfiguration'
                      description: 'The type of embedding experience. In this case, an Amazon QuickSight dashboard.'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/accounts/{AwsAccountId}/embed-url/registered-user':
    post:
      operationId: GenerateEmbedUrlForRegisteredUser
      description: '<p>Generates an embed URL that you can use to embed an Amazon QuickSight experience in your website. This action can be used for any type of user registered in an Amazon QuickSight account. Before you use this action, make sure that you have configured the relevant Amazon QuickSight resource and permissions.</p> <p>The following rules apply to the generated URL:</p> <ul> <li> <p>It contains a temporary bearer token. It is valid for 5 minutes after it is generated. Once redeemed within this period, it cannot be re-used again.</p> </li> <li> <p>The URL validity period should not be confused with the actual session lifetime that can be customized using the <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_GenerateEmbedUrlForRegisteredUser.html#QS-GenerateEmbedUrlForRegisteredUser-request-SessionLifetimeInMinutes">SessionLifetimeInMinutes</a> </code> parameter.</p> <p>The resulting user session is valid for 15 minutes (default) to 10 hours (maximum).</p> </li> <li> <p>You are charged only when the URL is used or there is interaction with Amazon QuickSight.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/embedded-analytics.html">Embedded Analytics</a> in the <i>Amazon QuickSight User Guide</i>.</p> <p>For more information about the high-level steps for embedding and for an interactive demo of the ways you can customize embedding, visit the <a href="https://docs.aws.amazon.com/quicksight/latest/user/quicksight-dev-portal.html">Amazon QuickSight Developer Portal</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateEmbedUrlForRegisteredUserResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: QuickSightUserNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuickSightUserNotFoundException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: SessionLifetimeInMinutesInvalidException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionLifetimeInMinutesInvalidException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '487':
          description: UnsupportedPricingPlanException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedPricingPlanException'
        '488':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account that contains the dashboard that you're embedding.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - UserArn
                - ExperienceConfiguration
              properties:
                SessionLifetimeInMinutes:
                  description: 'How many minutes the session is valid. The session lifetime must be in [15-600] minutes range.'
                  type: integer
                  minimum: 15
                  maximum: 600
                UserArn:
                  description: The Amazon Resource Name for the registered user.
                  type: string
                ExperienceConfiguration:
                  description: '<p>The type of experience you want to embed. For registered users, you can embed an Amazon QuickSight dashboard or the Amazon QuickSight console.</p> <note> <p>Exactly one of the experience configurations is required. You can choose <code>Dashboard</code> or <code>QuickSightConsole</code>. You cannot choose more than one experience configuraton.</p> </note>'
                  type: object
                  properties:
                    Dashboard:
                      $ref: '#/components/schemas/RegisteredUserDashboardEmbeddingConfiguration'
                      description: The configuration details for providing a dashboard embedding experience.
                    QuickSightConsole:
                      $ref: '#/components/schemas/RegisteredUserQuickSightConsoleEmbeddingConfiguration'
                      description: '<p>The configuration details for providing an Amazon QuickSight console embedding experience. This can be used along with custom permissions to restrict access to certain features. For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/customizing-permissions-to-the-quicksight-console.html">Customizing Access to the Amazon QuickSight Console</a> in the <i>Amazon QuickSight User Guide</i>.</p> <p>Use <code>GenerateEmbedUrlForRegisteredUser</code> where you want to provide an authoring portal that allows users to create data sources, datasets, analyses, and dashboards. The users who accesses an embedded Amazon QuickSight console needs to belong to the author or admin security cohort. If you want to restrict permissions to some of these features, add a custom permissions profile to the user with the <code> <a>UpdateUser</a> </code> API operation. Use <code> <a>RegisterUser</a> </code> API operation to add a new user with a custom permission profile attached. For more information, see the following sections in the <i>Amazon QuickSight User Guide</i>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/quicksight/latest/user/embedded-analytics-full-console-for-authenticated-users.html">Embedding the Full Functionality of the Amazon QuickSight Console for Authenticated Users</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/quicksight/latest/user/customizing-permissions-to-the-quicksight-console.html">Customizing Access to the Amazon QuickSight Console</a> </p> </li> </ul> <p>For more information about the high-level steps for embedding and for an interactive demo of the ways you can customize embedding, visit the <a href="https://docs.aws.amazon.com/quicksight/latest/user/quicksight-dev-portal.html">Amazon QuickSight Developer Portal</a>.</p>'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/accounts/{AwsAccountId}/dashboards/{DashboardId}/embed-url#creds-type':
    get:
      operationId: GetDashboardEmbedUrl
      description: '<p>Generates a session URL and authorization code that you can use to embed an Amazon QuickSight read-only dashboard in your web server code. Before you use this command, make sure that you have configured the dashboards and permissions. </p> <p>Currently, you can use <code>GetDashboardEmbedURL</code> only from the server, not from the user''s browser. The following rules apply to the combination of URL and authorization code:</p> <ul> <li> <p>They must be used together.</p> </li> <li> <p>They can be used one time only.</p> </li> <li> <p>They are valid for 5 minutes after you run this command.</p> </li> <li> <p>The resulting user session is valid for 10 hours.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/embedded-analytics-deprecated.html">Embedding Analytics Using GetDashboardEmbedUrl</a> in the <i>Amazon QuickSight User Guide</i>.</p> <p>For more information about the high-level steps for embedding and for an interactive demo of the ways you can customize embedding, visit the <a href="https://docs.aws.amazon.com/quicksight/latest/user/quicksight-dev-portal.html">Amazon QuickSight Developer Portal</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDashboardEmbedUrlResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: DomainNotWhitelistedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainNotWhitelistedException'
        '486':
          description: QuickSightUserNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuickSightUserNotFoundException'
        '487':
          description: IdentityTypeNotSupportedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityTypeNotSupportedException'
        '488':
          description: SessionLifetimeInMinutesInvalidException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionLifetimeInMinutesInvalidException'
        '489':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '490':
          description: UnsupportedPricingPlanException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedPricingPlanException'
        '491':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account; that contains the dashboard that you're embedding.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: DashboardId
          in: path
          required: true
          description: 'The ID for the dashboard, also added to the Identity and Access Management (IAM) policy.'
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
        - name: creds-type
          in: query
          required: true
          description: The authentication method that the user uses to sign in.
          schema:
            type: string
            enum:
              - IAM
              - QUICKSIGHT
              - ANONYMOUS
        - name: session-lifetime
          in: query
          required: false
          description: How many minutes the session is valid. The session lifetime must be 15-600 minutes.
          schema:
            type: integer
            minimum: 15
            maximum: 600
        - name: undo-redo-disabled
          in: query
          required: false
          description: 'Remove the undo/redo button on the embedded dashboard. The default is FALSE, which enables the undo/redo button.'
          schema:
            type: boolean
        - name: reset-disabled
          in: query
          required: false
          description: 'Remove the reset button on the embedded dashboard. The default is FALSE, which enables the reset button.'
          schema:
            type: boolean
        - name: state-persistence-enabled
          in: query
          required: false
          description: 'Adds persistence of state for the user session in an embedded dashboard. Persistence applies to the sheet and the parameter settings. These are control settings that the dashboard subscriber (QuickSight reader) chooses while viewing the dashboard. If this is set to <code>TRUE</code>, the settings are the same when the subscriber reopens the same dashboard URL. The state is stored in QuickSight, not in a browser cookie. If this is set to FALSE, the state of the user session is not persisted. The default is <code>FALSE</code>.'
          schema:
            type: boolean
        - name: user-arn
          in: query
          required: false
          description: '<p>The Amazon QuickSight user''s Amazon Resource Name (ARN), for use with <code>QUICKSIGHT</code> identity type. You can use this for any Amazon QuickSight users in your account (readers, authors, or admins) authenticated as one of the following:</p> <ul> <li> <p>Active Directory (AD) users or group members</p> </li> <li> <p>Invited nonfederated users</p> </li> <li> <p>IAM users and IAM role-based sessions authenticated through Federated Single Sign-On using SAML, OpenID Connect, or IAM federation.</p> </li> </ul> <p>Omit this parameter for users in the third group – IAM users and IAM role-based sessions.</p>'
          schema:
            type: string
        - name: namespace
          in: query
          required: false
          description: 'The Amazon QuickSight namespace that the user virtually belongs to. If you are not using an Amazon QuickSight custom namespace, set this to <code>default</code>.'
          schema:
            type: string
            pattern: '^[a-zA-Z0-9._-]*$'
            maxLength: 64
        - name: additional-dashboard-ids
          in: query
          required: false
          description: 'A list of one or more dashboard IDs that you want to add to a session that includes anonymous users. The <code>IdentityType</code> parameter must be set to <code>ANONYMOUS</code> for this to work, because other identity types authenticate as QuickSight or IAM users. For example, if you set "<code>--dashboard-id dash_id1 --dashboard-id dash_id2 dash_id3 identity-type ANONYMOUS</code>", the session can access all three dashboards. '
          schema:
            type: array
            items:
              $ref: '#/components/schemas/RestrictiveResourceId'
            minItems: 1
            maxItems: 20
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/accounts/{AwsAccountId}/session-embed-url':
    get:
      operationId: GetSessionEmbedUrl
      description: '<p>Generates a session URL and authorization code that you can use to embed the Amazon QuickSight console in your web server code. Use <code>GetSessionEmbedUrl</code> where you want to provide an authoring portal that allows users to create data sources, datasets, analyses, and dashboards. The users who access an embedded QuickSight console need belong to the author or admin security cohort. If you want to restrict permissions to some of these features, add a custom permissions profile to the user with the <code> <a>UpdateUser</a> </code> API operation. Use <code> <a>RegisterUser</a> </code> API operation to add a new user with a custom permission profile attached. For more information, see the following sections in the <i>Amazon QuickSight User Guide</i>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/quicksight/latest/user/embedded-analytics-full-console-for-authenticated-users-get.html">Embedding the Amazon QuickSight Console Using GetSessionEmbedUrl</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/quicksight/latest/user/customizing-permissions-to-the-quicksight-console.html">Customizing Access to the Amazon QuickSight Console</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSessionEmbedUrlResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: QuickSightUserNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuickSightUserNotFoundException'
        '486':
          description: SessionLifetimeInMinutesInvalidException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionLifetimeInMinutesInvalidException'
        '487':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '488':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account; associated with your QuickSight subscription.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: entry-point
          in: query
          required: false
          description: '<p>The URL you use to access the embedded session. The entry point URL is constrained to the following paths:</p> <ul> <li> <p> <code>/start</code> </p> </li> <li> <p> <code>/start/analyses</code> </p> </li> <li> <p> <code>/start/dashboards</code> </p> </li> <li> <p> <code>/start/favorites</code> </p> </li> <li> <p> <code>/dashboards/<i>DashboardId</i> </code> - where <code>DashboardId</code> is the actual ID key from the QuickSight console URL of the dashboard</p> </li> <li> <p> <code>/analyses/<i>AnalysisId</i> </code> - where <code>AnalysisId</code> is the actual ID key from the QuickSight console URL of the analysis</p> </li> </ul>'
          schema:
            type: string
            minLength: 1
            maxLength: 1000
        - name: session-lifetime
          in: query
          required: false
          description: How many minutes the session is valid. The session lifetime must be 15-600 minutes.
          schema:
            type: integer
            minimum: 15
            maximum: 600
        - name: user-arn
          in: query
          required: false
          description: '<p>The Amazon QuickSight user''s Amazon Resource Name (ARN), for use with <code>QUICKSIGHT</code> identity type. You can use this for any type of Amazon QuickSight users in your account (readers, authors, or admins). They need to be authenticated as one of the following:</p> <ol> <li> <p>Active Directory (AD) users or group members</p> </li> <li> <p>Invited nonfederated users</p> </li> <li> <p>Identity and Access Management (IAM) users and IAM role-based sessions authenticated through Federated Single Sign-On using SAML, OpenID Connect, or IAM federation</p> </li> </ol> <p>Omit this parameter for users in the third group, IAM users and IAM role-based sessions.</p>'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/accounts/{AwsAccountId}/analyses':
    get:
      operationId: ListAnalyses
      description: Lists Amazon QuickSight analyses that exist in the specified Amazon Web Services account;.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAnalysesResponse'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '482':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account; that contains the analyses.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: next-token
          in: query
          required: false
          description: A pagination token that can be used in a subsequent request.
          schema:
            type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to return.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/accounts/{AwsAccountId}/dashboards/{DashboardId}/versions':
    get:
      operationId: ListDashboardVersions
      description: Lists all the versions of the dashboards in the QuickSight subscription.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDashboardVersionsResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '484':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account; that contains the dashboard that you're listing versions for.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: DashboardId
          in: path
          required: true
          description: The ID for the dashboard.
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
        - name: next-token
          in: query
          required: false
          description: 'The token for the next set of results, or null if there are no more results.'
          schema:
            type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/accounts/{AwsAccountId}/dashboards':
    get:
      operationId: ListDashboards
      description: Lists dashboards in an Amazon Web Services account;.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDashboardsResponse'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '482':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account; that contains the dashboards that you're listing.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: next-token
          in: query
          required: false
          description: 'The token for the next set of results, or null if there are no more results.'
          schema:
            type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/accounts/{AwsAccountId}/folders/{FolderId}/members':
    get:
      operationId: ListFolderMembers
      description: 'List all assets (<code>DASHBOARD</code>, <code>ANALYSIS</code>, and <code>DATASET</code>) in a folder. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFolderMembersResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '485':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '486':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The AWS account ID.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: FolderId
          in: path
          required: true
          description: The folder ID.
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
        - name: next-token
          in: query
          required: false
          description: 'The token for the next set of results, or null if there are no more results.'
          schema:
            type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          schema:
            type: integer
            minimum: 1
            maximum: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/accounts/{AwsAccountId}/folders':
    get:
      operationId: ListFolders
      description: Lists all folders in an account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFoldersResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '485':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '486':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The AWS account ID.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: next-token
          in: query
          required: false
          description: 'The token for the next set of results, or null if there are no more results.'
          schema:
            type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          schema:
            type: integer
            minimum: 1
            maximum: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/accounts/{AwsAccountId}/namespaces/{Namespace}/groups/{GroupName}/members':
    get:
      operationId: ListGroupMemberships
      description: Lists member users in a group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGroupMembershipsResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '485':
          description: PreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionNotMetException'
        '486':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '487':
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
      parameters:
        - name: GroupName
          in: path
          required: true
          description: The name of the group that you want to see a membership list of.
          schema:
            type: string
            pattern: '[\u0020-\u00FF]+'
            minLength: 1
        - name: next-token
          in: query
          required: false
          description: A pagination token that can be used in a subsequent request.
          schema:
            type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to return from this request.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: AwsAccountId
          in: path
          required: true
          description: 'The ID for the Amazon Web Services account; that the group is in. Currently, you use the ID for the Amazon Web Services account; that contains your Amazon QuickSight account.'
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: 'The namespace. Currently, you should set this to <code>default</code>.'
          schema:
            type: string
            pattern: '^[a-zA-Z0-9._-]*$'
            maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/accounts/{AwsAccountId}/namespaces/{Namespace}/iam-policy-assignments':
    get:
      operationId: ListIAMPolicyAssignments
      description: Lists IAM policy assignments in the current Amazon QuickSight account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListIAMPolicyAssignmentsResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account; that contains these IAM policy assignments.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: The namespace for the assignments.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9._-]*$'
            maxLength: 64
        - name: next-token
          in: query
          required: false
          description: 'The token for the next set of results, or null if there are no more results.'
          schema:
            type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          schema:
            type: integer
            minimum: 1
            maximum: 100
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AssignmentStatus:
                  description: The status of the assignments.
                  type: string
                  enum:
                    - ENABLED
                    - DRAFT
                    - DISABLED
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/accounts/{AwsAccountId}/namespaces/{Namespace}/users/{UserName}/iam-policy-assignments':
    get:
      operationId: ListIAMPolicyAssignmentsForUser
      description: 'Lists all the IAM policy assignments, including the Amazon Resource Names (ARNs) for the IAM policies assigned to the specified user and group or groups that the user belongs to.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListIAMPolicyAssignmentsForUserResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: ConcurrentUpdatingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentUpdatingException'
        '486':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account; that contains the assignments.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: UserName
          in: path
          required: true
          description: The name of the user.
          schema:
            type: string
            pattern: '[\u0020-\u00FF]+'
            minLength: 1
        - name: next-token
          in: query
          required: false
          description: 'The token for the next set of results, or null if there are no more results.'
          schema:
            type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: Namespace
          in: path
          required: true
          description: The namespace of the assignment.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9._-]*$'
            maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/accounts/{AwsAccountId}/data-sets/{DataSetId}/ingestions':
    get:
      operationId: ListIngestions
      description: Lists the history of SPICE ingestions for a dataset.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListIngestionsResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
        '485':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '486':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: DataSetId
          in: path
          required: true
          description: The ID of the dataset used in the ingestion.
          schema:
            type: string
        - name: next-token
          in: query
          required: false
          description: 'The token for the next set of results, or null if there are no more results.'
          schema:
            type: string
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account; ID.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/accounts/{AwsAccountId}/namespaces':
    get:
      operationId: ListNamespaces
      description: Lists the namespaces for the specified Amazon Web Services account;.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNamespacesResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '485':
          description: PreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionNotMetException'
        '486':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '487':
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account; that contains the QuickSight namespaces that you want to list.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: next-token
          in: query
          required: false
          description: A pagination token that can be used in a subsequent request.
          schema:
            type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to return.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/resources/{ResourceArn}/tags':
    get:
      operationId: ListTagsForResource
      description: Lists the tags assigned to a resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: ResourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the resource that you want a list of tags for.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: TagResource
      description: '<p>Assigns one or more tags (key-value pairs) to the specified QuickSight resource. </p> <p>Tags can help you organize and categorize your resources. You can also use them to scope user permissions, by granting a user permission to access or change only resources with certain tag values. You can use the <code>TagResource</code> operation with a resource that already has tags. If you specify a new tag key for the resource, this tag is appended to the list of tags associated with the resource. If you specify a tag key that is already associated with the resource, the new tag value that you specify replaces the previous value for that tag.</p> <p>You can associate as many as 50 tags with a resource. QuickSight supports tagging on data set, data source, dashboard, and template. </p> <p>Tagging for QuickSight works in a similar way to tagging for other AWS services, except for the following:</p> <ul> <li> <p>You can''t use tags to track AWS costs for QuickSight. This restriction is because QuickSight costs are based on users and SPICE capacity, which aren''t taggable resources.</p> </li> <li> <p>QuickSight doesn''t currently support the Tag Editor for Resource Groups.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
        '480':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: ResourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the resource that you want to tag.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Tags
              properties:
                Tags:
                  description: Contains a map of the key-value pairs for the resource tag or tags assigned to the resource.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                  minItems: 1
                  maxItems: 200
  '/accounts/{AwsAccountId}/templates/{TemplateId}/aliases':
    get:
      operationId: ListTemplateAliases
      description: Lists all the aliases of a template.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTemplateAliasesResponse'
        '480':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account; that contains the template aliases that you're listing.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: TemplateId
          in: path
          required: true
          description: The ID for the template.
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
        - name: next-token
          in: query
          required: false
          description: 'The token for the next set of results, or null if there are no more results.'
          schema:
            type: string
        - name: max-result
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/accounts/{AwsAccountId}/templates/{TemplateId}/versions':
    get:
      operationId: ListTemplateVersions
      description: Lists all the versions of the templates in the current Amazon QuickSight account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTemplateVersionsResponse'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '484':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account; that contains the templates that you're listing.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: TemplateId
          in: path
          required: true
          description: The ID for the template.
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
        - name: next-token
          in: query
          required: false
          description: 'The token for the next set of results, or null if there are no more results.'
          schema:
            type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/accounts/{AwsAccountId}/templates':
    get:
      operationId: ListTemplates
      description: Lists all the templates in the current Amazon QuickSight account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTemplatesResponse'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '484':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account; that contains the templates that you're listing.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: next-token
          in: query
          required: false
          description: 'The token for the next set of results, or null if there are no more results.'
          schema:
            type: string
        - name: max-result
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/accounts/{AwsAccountId}/themes/{ThemeId}/aliases':
    get:
      operationId: ListThemeAliases
      description: Lists all the aliases of a theme.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListThemeAliasesResponse'
        '480':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '481':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '482':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '486':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account; that contains the theme aliases that you're listing.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: ThemeId
          in: path
          required: true
          description: The ID for the theme.
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
        - name: next-token
          in: query
          required: false
          description: 'The token for the next set of results, or null if there are no more results.'
          schema:
            type: string
        - name: max-result
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          schema:
            type: integer
            minimum: 1
            maximum: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/accounts/{AwsAccountId}/themes/{ThemeId}/versions':
    get:
      operationId: ListThemeVersions
      description: Lists all the versions of the themes in the current Amazon Web Services account;.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListThemeVersionsResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '482':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '486':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account; that contains the themes that you're listing.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: ThemeId
          in: path
          required: true
          description: The ID for the theme.
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
        - name: next-token
          in: query
          required: false
          description: 'The token for the next set of results, or null if there are no more results.'
          schema:
            type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/accounts/{AwsAccountId}/themes':
    get:
      operationId: ListThemes
      description: Lists all the themes in the current Amazon Web Services account;.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListThemesResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '486':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account; that contains the themes that you're listing.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: next-token
          in: query
          required: false
          description: 'The token for the next set of results, or null if there are no more results.'
          schema:
            type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: type
          in: query
          required: false
          description: '<p>The type of themes that you want to list. Valid options include the following:</p> <ul> <li> <p> <code>ALL (default)</code>- Display all existing themes.</p> </li> <li> <p> <code>CUSTOM</code> - Display only the themes created by people using Amazon QuickSight.</p> </li> <li> <p> <code>QUICKSIGHT</code> - Display only the starting themes defined by Amazon QuickSight.</p> </li> </ul>'
          schema:
            type: string
            enum:
              - QUICKSIGHT
              - CUSTOM
              - ALL
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/accounts/{AwsAccountId}/namespaces/{Namespace}/users/{UserName}/groups':
    get:
      operationId: ListUserGroups
      description: Lists the Amazon QuickSight groups that an Amazon QuickSight user is a member of.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUserGroupsResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: PreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionNotMetException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '486':
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
      parameters:
        - name: UserName
          in: path
          required: true
          description: The Amazon QuickSight user name that you want to list group memberships for.
          schema:
            type: string
            pattern: '[\u0020-\u00FF]+'
            minLength: 1
        - name: AwsAccountId
          in: path
          required: true
          description: 'The Amazon Web Services account; ID that the user is in. Currently, you use the ID for the Amazon Web Services account; that contains your Amazon QuickSight account.'
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: 'The namespace. Currently, you should set this to <code>default</code>.'
          schema:
            type: string
            pattern: '^[a-zA-Z0-9._-]*$'
            maxLength: 64
        - name: next-token
          in: query
          required: false
          description: A pagination token that can be used in a subsequent request.
          schema:
            type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to return from this request.
          schema:
            type: integer
            minimum: 1
            maximum: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/accounts/{AwsAccountId}/namespaces/{Namespace}/users':
    get:
      operationId: ListUsers
      description: 'Returns a list of all of the Amazon QuickSight users belonging to this account. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsersResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '485':
          description: PreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionNotMetException'
        '486':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '487':
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: 'The ID for the Amazon Web Services account; that the user is in. Currently, you use the ID for the Amazon Web Services account; that contains your Amazon QuickSight account.'
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: next-token
          in: query
          required: false
          description: A pagination token that can be used in a subsequent request.
          schema:
            type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to return from this request.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: Namespace
          in: path
          required: true
          description: 'The namespace. Currently, you should set this to <code>default</code>.'
          schema:
            type: string
            pattern: '^[a-zA-Z0-9._-]*$'
            maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: RegisterUser
      description: 'Creates an Amazon QuickSight user, whose identity is associated with the AWS Identity and Access Management (IAM) identity or role specified in the request. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterUserResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
        '486':
          description: PreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionNotMetException'
        '487':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '488':
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: 'The ID for the Amazon Web Services account; that the user is in. Currently, you use the ID for the Amazon Web Services account; that contains your Amazon QuickSight account.'
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: 'The namespace. Currently, you should set this to <code>default</code>.'
          schema:
            type: string
            pattern: '^[a-zA-Z0-9._-]*$'
            maxLength: 64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - IdentityType
                - Email
                - UserRole
              properties:
                IdentityType:
                  description: '<p>Amazon QuickSight supports several ways of managing the identity of users. This parameter accepts two values:</p> <ul> <li> <p> <code>IAM</code>: A user whose identity maps to an existing IAM user or role. </p> </li> <li> <p> <code>QUICKSIGHT</code>: A user whose identity is owned and managed internally by Amazon QuickSight. </p> </li> </ul>'
                  type: string
                  enum:
                    - IAM
                    - QUICKSIGHT
                Email:
                  description: The email address of the user that you want to register.
                  type: string
                UserRole:
                  description: '<p>The Amazon QuickSight role for the user. The user role can be one of the following:</p> <ul> <li> <p> <code>READER</code>: A user who has read-only access to dashboards.</p> </li> <li> <p> <code>AUTHOR</code>: A user who can create data sources, datasets, analyses, and dashboards.</p> </li> <li> <p> <code>ADMIN</code>: A user who is an author, who can also manage Amazon QuickSight settings.</p> </li> <li> <p> <code>RESTRICTED_READER</code>: This role isn''t currently available for use.</p> </li> <li> <p> <code>RESTRICTED_AUTHOR</code>: This role isn''t currently available for use.</p> </li> </ul>'
                  type: string
                  enum:
                    - ADMIN
                    - AUTHOR
                    - READER
                    - RESTRICTED_AUTHOR
                    - RESTRICTED_READER
                IamArn:
                  description: 'The ARN of the IAM user or role that you are registering with Amazon QuickSight. '
                  type: string
                SessionName:
                  description: 'You need to use this parameter only when you register one or more users using an assumed IAM role. You don''t need to provide the session name for other scenarios, for example when you are registering an IAM user or an Amazon QuickSight user. You can register multiple users using the same IAM role if each user has a different session name. For more information on assuming IAM roles, see <a href="https://docs.aws.amazon.com/cli/latest/reference/sts/assume-role.html"> <code>assume-role</code> </a> in the <i>AWS CLI Reference.</i> '
                  type: string
                  pattern: '[\w+=.@-]*'
                  minLength: 2
                  maxLength: 64
                UserName:
                  description: The Amazon QuickSight user name that you want to create for the user you are registering.
                  type: string
                  pattern: '[\u0020-\u00FF]+'
                  minLength: 1
                CustomPermissionsName:
                  description: '<p>(Enterprise edition only) The name of the custom permissions profile that you want to assign to this user. Customized permissions allows you to control a user''s access by restricting access the following operations:</p> <ul> <li> <p>Create and update data sources</p> </li> <li> <p>Create and update datasets</p> </li> <li> <p>Create and update email reports</p> </li> <li> <p>Subscribe to email reports</p> </li> </ul> <p>To add custom permissions to an existing user, use <code> <a>UpdateUser</a> </code> instead.</p> <p>A set of custom permissions includes any combination of these restrictions. Currently, you need to create the profile names for custom permission sets by using the QuickSight console. Then, you use the <code>RegisterUser</code> API operation to assign the named set of permissions to a QuickSight user. </p> <p>QuickSight custom permissions are applied through IAM policies. Therefore, they override the permissions typically granted by assigning QuickSight users to one of the default security cohorts in QuickSight (admin, author, reader).</p> <p>This feature is available only to QuickSight Enterprise edition subscriptions.</p>'
                  type: string
                  pattern: '^[a-zA-Z0-9+=,.@_-]+$'
                  minLength: 1
                  maxLength: 64
                ExternalLoginFederationProviderType:
                  description: '<p>The type of supported external login provider that provides identity to let a user federate into Amazon QuickSight with an associated AWS Identity and Access Management (IAM) role. The type of supported external login provider can be one of the following.</p> <ul> <li> <p> <code>COGNITO</code>: Amazon Cognito. The provider URL is cognito-identity.amazonaws.com. When choosing the <code>COGNITO</code> provider type, don’t use the "CustomFederationProviderUrl" parameter which is only needed when the external provider is custom.</p> </li> <li> <p> <code>CUSTOM_OIDC</code>: Custom OpenID Connect (OIDC) provider. When choosing <code>CUSTOM_OIDC</code> type, use the <code>CustomFederationProviderUrl</code> parameter to provide the custom OIDC provider URL.</p> </li> </ul>'
                  type: string
                CustomFederationProviderUrl:
                  description: The URL of the custom OpenID Connect (OIDC) provider that provides identity to let a user federate into QuickSight with an associated AWS Identity and Access Management (IAM) role. This parameter should only be used when <code>ExternalLoginFederationProviderType</code> parameter is set to <code>CUSTOM_OIDC</code>.
                  type: string
                ExternalLoginId:
                  description: The identity ID for a user in the external login provider.
                  type: string
  '/accounts/{AwsAccountId}/restore/analyses/{AnalysisId}':
    post:
      operationId: RestoreAnalysis
      description: Restores an analysis.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestoreAnalysisResponse'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account; that contains the analysis.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: AnalysisId
          in: path
          required: true
          description: The ID of the analysis that you're restoring.
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/accounts/{AwsAccountId}/search/analyses':
    post:
      operationId: SearchAnalyses
      description: <p>Searches for analyses that belong to the user specified in the filter.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchAnalysesResponse'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '483':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '484':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account; that contains the analyses that you're searching for.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Filters
              properties:
                Filters:
                  description: 'The structure for the search filters that you want to apply to your search. '
                  type: array
                  items:
                    $ref: '#/components/schemas/AnalysisSearchFilter'
                  minItems: 1
                  maxItems: 1
                NextToken:
                  description: A pagination token that can be used in a subsequent request.
                  type: string
                MaxResults:
                  description: The maximum number of results to return.
                  type: integer
                  minimum: 1
                  maximum: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/accounts/{AwsAccountId}/search/dashboards':
    post:
      operationId: SearchDashboards
      description: <p>Searches for dashboards that belong to a user. </p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchDashboardsResponse'
        '480':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '483':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '484':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: 'The ID of the Amazon Web Services account; that contains the user whose dashboards you''re searching for. '
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Filters
              properties:
                Filters:
                  description: 'The filters to apply to the search. Currently, you can search only by user name, for example, <code>"Filters": [ { "Name": "QUICKSIGHT_USER", "Operator": "StringEquals", "Value": "arn:aws:quicksight:us-east-1:1:user/default/UserName1" } ]</code> '
                  type: array
                  items:
                    $ref: '#/components/schemas/DashboardSearchFilter'
                  minItems: 1
                  maxItems: 1
                NextToken:
                  description: 'The token for the next set of results, or null if there are no more results.'
                  type: string
                MaxResults:
                  description: The maximum number of results to be returned per request.
                  type: integer
                  minimum: 1
                  maximum: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/accounts/{AwsAccountId}/search/folders':
    post:
      operationId: SearchFolders
      description: Searches the subfolders in a folder.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchFoldersResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '485':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '486':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The AWS account ID.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Filters
              properties:
                Filters:
                  description: 'The filters to apply to the search. Currently, you can search only by the parent folder ARN. For example, <code>"Filters": [ { "Name": "PARENT_FOLDER_ARN", "Operator": "StringEquals", "Value": "arn:aws:quicksight:us-east-1:1:folder/folderId" } ]</code>.'
                  type: array
                  items:
                    $ref: '#/components/schemas/FolderSearchFilter'
                  maxItems: 100
                NextToken:
                  description: 'The token for the next set of results, or null if there are no more results.'
                  type: string
                MaxResults:
                  description: The maximum number of results to be returned per request.
                  type: integer
                  minimum: 1
                  maximum: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/resources/{ResourceArn}/tags#keys':
    delete:
      operationId: UntagResource
      description: Removes a tag or tags from a resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: ResourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the resource that you want to untag.
          schema:
            type: string
        - name: keys
          in: query
          required: true
          description: The keys of the key-value pairs for the resource tag or tags assigned to the resource.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TagKey'
            minItems: 1
            maxItems: 200
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/accounts/{AwsAccountId}/dashboards/{DashboardId}/versions/{VersionNumber}':
    put:
      operationId: UpdateDashboardPublishedVersion
      description: Updates the published version of a dashboard.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDashboardPublishedVersionResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedUserEditionException'
        '485':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account; that contains the dashboard that you're updating.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
            minLength: 12
            maxLength: 12
        - name: DashboardId
          in: path
          required: true
          description: The ID for the dashboard.
          schema:
            type: string
            pattern: '[\w\-]+'
            minLength: 1
            maxLength: 2048
        - name: VersionNumber
          in: path
          required: true
          description: The version number of the dashboard.
          schema:
            type: integer
            minimum: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CancelIngestionResponse:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) for the data ingestion.
        IngestionId:
          $ref: '#/components/schemas/IngestionId'
          description: An ID for the ingestion.
        RequestId:
          $ref: '#/components/schemas/string'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    AccessDeniedException: {}
    InvalidParameterValueException: {}
    ResourceNotFoundException: {}
    ThrottlingException: {}
    ResourceExistsException: {}
    InternalFailureException: {}
    CreateAccountCustomizationResponse:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) for the customization that you created for this Amazon Web Services account;.
        AwsAccountId:
          $ref: '#/components/schemas/AwsAccountId'
          description: The ID for the Amazon Web Services account; that you want to customize QuickSight for.
        Namespace:
          $ref: '#/components/schemas/Namespace'
          description: 'The namespace associated with the customization you''re creating. '
        AccountCustomization:
          $ref: '#/components/schemas/AccountCustomization'
          description: 'The QuickSight customizations you''re adding in the current Amazon Web Services Region;. '
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    Arn:
      type: string
    Tag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          $ref: '#/components/schemas/TagKey'
          description: Tag key.
        Value:
          $ref: '#/components/schemas/TagValue'
          description: Tag value.
      description: The key or keys of the key-value pairs for the resource tag or tags assigned to the resource.
    ResourceUnavailableException: {}
    CreateAnalysisResponse:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The ARN for the analysis.
        AnalysisId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: The ID of the analysis.
        CreationStatus:
          $ref: '#/components/schemas/ResourceStatus'
          description: 'The status of the creation of the analysis. '
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
    StringParameterList:
      type: array
      items:
        $ref: '#/components/schemas/StringParameter'
      maxItems: 100
    IntegerParameterList:
      type: array
      items:
        $ref: '#/components/schemas/IntegerParameter'
      maxItems: 100
    DecimalParameterList:
      type: array
      items:
        $ref: '#/components/schemas/DecimalParameter'
      maxItems: 100
    DateTimeParameterList:
      type: array
      items:
        $ref: '#/components/schemas/DateTimeParameter'
      maxItems: 100
    ResourcePermission:
      type: object
      required:
        - Principal
        - Actions
      properties:
        Principal:
          $ref: '#/components/schemas/Principal'
          description: '<p>The Amazon Resource Name (ARN) of the principal. This can be one of the following:</p> <ul> <li> <p>The ARN of an Amazon QuickSight user or group associated with a data source or dataset. (This is common.)</p> </li> <li> <p>The ARN of an Amazon QuickSight user, group, or namespace associated with an analysis, dashboard, template, or theme. (This is common.)</p> </li> <li> <p>The ARN of an Amazon Web Services account; root: This is an IAM ARN rather than a QuickSight ARN. Use this option only to share resources (templates) across Amazon Web Services accounts. (This is less common.) </p> </li> </ul>'
        Actions:
          $ref: '#/components/schemas/ActionList'
          description: The IAM action to grant or revoke permissions on.
      description: Permission for the resource.
    AnalysisSourceTemplate:
      type: object
      required:
        - DataSetReferences
        - Arn
      properties:
        DataSetReferences:
          $ref: '#/components/schemas/DataSetReferenceList'
          description: The dataset references of the source template of an analysis.
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the source template of an analysis.
      description: The source template of an analysis.
    ConflictException: {}
    UnsupportedUserEditionException: {}
    CreateDashboardResponse:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the dashboard.
        VersionArn:
          $ref: '#/components/schemas/Arn'
          description: 'The ARN of the dashboard, including the version number of the first version that is created.'
        DashboardId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: The ID for the dashboard.
        CreationStatus:
          $ref: '#/components/schemas/ResourceStatus'
          description: The status of the dashboard creation request.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
    DashboardSourceTemplate:
      type: object
      required:
        - DataSetReferences
        - Arn
      properties:
        DataSetReferences:
          $ref: '#/components/schemas/DataSetReferenceList'
          description: Dataset references.
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource.
      description: Dashboard source template.
    AdHocFilteringOption:
      type: object
      properties:
        AvailabilityStatus:
          $ref: '#/components/schemas/DashboardBehavior'
          description: Availability status.
      description: Ad hoc (one-time) filtering option.
    ExportToCSVOption:
      type: object
      properties:
        AvailabilityStatus:
          $ref: '#/components/schemas/DashboardBehavior'
          description: Availability status.
      description: Export to .csv option.
    SheetControlsOption:
      type: object
      properties:
        VisibilityState:
          $ref: '#/components/schemas/DashboardUIState'
          description: Visibility state.
      description: Sheet controls option.
    CreateDataSetResponse:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset.
        DataSetId:
          $ref: '#/components/schemas/ResourceId'
          description: The ID for the dataset that you want to create. This ID is unique per Amazon Web Services Region; for each Amazon Web Services account;.
        IngestionArn:
          $ref: '#/components/schemas/Arn'
          description: 'The ARN for the ingestion, which is triggered as a result of dataset creation if the import mode is SPICE.'
        IngestionId:
          $ref: '#/components/schemas/ResourceId'
          description: 'The ID of the ingestion, which is triggered as a result of dataset creation if the import mode is SPICE.'
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    PhysicalTable:
      type: object
      properties:
        RelationalTable:
          $ref: '#/components/schemas/RelationalTable'
          description: A physical table type for relational data sources.
        CustomSql:
          $ref: '#/components/schemas/CustomSql'
          description: A physical table type built from the results of the custom SQL query.
        S3Source:
          $ref: '#/components/schemas/S3Source'
          description: A physical table type for as S3 data source.
      description: 'A view of a data source that contains information about the shape of the data in the underlying source. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.'
    LogicalTable:
      type: object
      required:
        - Alias
        - Source
      properties:
        Alias:
          $ref: '#/components/schemas/LogicalTableAlias'
          description: A display name for the logical table.
        DataTransforms:
          $ref: '#/components/schemas/TransformOperationList'
          description: Transform operations that act on this logical table.
        Source:
          $ref: '#/components/schemas/LogicalTableSource'
          description: Source of this logical table.
      description: 'A <i>logical table</i> is a unit that joins and that data transformations operate on. A logical table has a source, which can be either a physical table or result of a join. When a logical table points to a physical table, the logical table acts as a mutable copy of that physical table through transform operations.'
    ColumnGroup:
      type: object
      properties:
        GeoSpatialColumnGroup:
          $ref: '#/components/schemas/GeoSpatialColumnGroup'
          description: Geospatial column group that denotes a hierarchy.
      description: 'Groupings of columns that work together in certain Amazon QuickSight features. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.'
    FieldFolder:
      type: object
      properties:
        description:
          $ref: '#/components/schemas/FieldFolderDescription'
          description: The description for a field folder.
        columns:
          $ref: '#/components/schemas/FolderColumnList'
          description: A folder has a list of columns. A column can only be in one folder.
      description: A FieldFolder element is a folder that contains fields and nested subfolders.
    Namespace:
      type: string
      pattern: '^[a-zA-Z0-9._-]*$'
      maxLength: 64
    RowLevelPermissionPolicy:
      type: string
      enum:
        - GRANT_ACCESS
        - DENY_ACCESS
    RowLevelPermissionFormatVersion:
      type: string
      enum:
        - VERSION_1
        - VERSION_2
    Status:
      type: string
      enum:
        - ENABLED
        - DISABLED
    RowLevelPermissionTagRuleList:
      type: array
      items:
        $ref: '#/components/schemas/RowLevelPermissionTagRule'
      minItems: 1
      maxItems: 50
    ColumnLevelPermissionRule:
      type: object
      properties:
        Principals:
          $ref: '#/components/schemas/PrincipalList'
          description: An array of Amazon Resource Names (ARNs) for QuickSight users or groups.
        ColumnNames:
          $ref: '#/components/schemas/ColumnNameList'
          description: An array of column names.
      description: 'A rule defined to grant access on one or more restricted columns. Each dataset can have multiple rules. To create a restricted column, you add it to one or more rules. Each rule must contain at least one column and at least one user or group. To be able to see a restricted column, a user or group needs to be added to a rule for that column.'
    LimitExceededException: {}
    CreateDataSourceResponse:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the data source.
        DataSourceId:
          $ref: '#/components/schemas/ResourceId'
          description: The ID of the data source. This ID is unique per Amazon Web Services Region; for each Amazon Web Services account;.
        CreationStatus:
          $ref: '#/components/schemas/ResourceStatus'
          description: The status of creating the data source.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    AmazonElasticsearchParameters:
      type: object
      required:
        - Domain
      properties:
        Domain:
          $ref: '#/components/schemas/Domain'
          description: The Amazon Elasticsearch Service domain.
      description: Amazon Elasticsearch Service parameters.
    AthenaParameters:
      type: object
      properties:
        WorkGroup:
          $ref: '#/components/schemas/WorkGroup'
          description: The workgroup that Amazon Athena uses.
      description: Amazon Athena parameters.
    AuroraParameters:
      type: object
      required:
        - Host
        - Port
        - Database
      properties:
        Host:
          $ref: '#/components/schemas/Host'
          description: Host.
        Port:
          $ref: '#/components/schemas/Port'
          description: Port.
        Database:
          $ref: '#/components/schemas/Database'
          description: Database.
      description: Amazon Aurora parameters.
    AuroraPostgreSqlParameters:
      type: object
      required:
        - Host
        - Port
        - Database
      properties:
        Host:
          $ref: '#/components/schemas/Host'
          description: Host.
        Port:
          $ref: '#/components/schemas/Port'
          description: Port.
        Database:
          $ref: '#/components/schemas/Database'
          description: Database.
      description: Amazon Aurora with PostgreSQL compatibility parameters.
    AwsIotAnalyticsParameters:
      type: object
      required:
        - DataSetName
      properties:
        DataSetName:
          $ref: '#/components/schemas/DataSetName'
          description: Dataset name.
      description: Amazon Web Services IoT Analytics parameters.
    JiraParameters:
      type: object
      required:
        - SiteBaseUrl
      properties:
        SiteBaseUrl:
          $ref: '#/components/schemas/SiteBaseUrl'
          description: The base URL of the Jira site.
      description: Jira parameters.
    MariaDbParameters:
      type: object
      required:
        - Host
        - Port
        - Database
      properties:
        Host:
          $ref: '#/components/schemas/Host'
          description: Host.
        Port:
          $ref: '#/components/schemas/Port'
          description: Port.
        Database:
          $ref: '#/components/schemas/Database'
          description: Database.
      description: MariaDB parameters.
    MySqlParameters:
      type: object
      required:
        - Host
        - Port
        - Database
      properties:
        Host:
          $ref: '#/components/schemas/Host'
          description: Host.
        Port:
          $ref: '#/components/schemas/Port'
          description: Port.
        Database:
          $ref: '#/components/schemas/Database'
          description: Database.
      description: MySQL parameters.
    OracleParameters:
      type: object
      required:
        - Host
        - Port
        - Database
      properties:
        Host:
          $ref: '#/components/schemas/Host'
          description: An Oracle host.
        Port:
          $ref: '#/components/schemas/Port'
          description: Port.
        Database:
          $ref: '#/components/schemas/Database'
          description: Database.
      description: Oracle parameters.
    PostgreSqlParameters:
      type: object
      required:
        - Host
        - Port
        - Database
      properties:
        Host:
          $ref: '#/components/schemas/Host'
          description: Host.
        Port:
          $ref: '#/components/schemas/Port'
          description: Port.
        Database:
          $ref: '#/components/schemas/Database'
          description: Database.
      description: PostgreSQL parameters.
    PrestoParameters:
      type: object
      required:
        - Host
        - Port
        - Catalog
      properties:
        Host:
          $ref: '#/components/schemas/Host'
          description: Host.
        Port:
          $ref: '#/components/schemas/Port'
          description: Port.
        Catalog:
          $ref: '#/components/schemas/Catalog'
          description: Catalog.
      description: Presto parameters.
    RdsParameters:
      type: object
      required:
        - InstanceId
        - Database
      properties:
        InstanceId:
          $ref: '#/components/schemas/InstanceId'
          description: Instance ID.
        Database:
          $ref: '#/components/schemas/Database'
          description: Database.
      description: Amazon RDS parameters.
    RedshiftParameters:
      type: object
      required:
        - Database
      properties:
        Host:
          $ref: '#/components/schemas/Host'
          description: Host. This field can be blank if <code>ClusterId</code> is provided.
        Port:
          $ref: '#/components/schemas/OptionalPort'
          description: Port. This field can be blank if the <code>ClusterId</code> is provided.
        Database:
          $ref: '#/components/schemas/Database'
          description: Database.
        ClusterId:
          $ref: '#/components/schemas/ClusterId'
          description: Cluster ID. This field can be blank if the <code>Host</code> and <code>Port</code> are provided.
      description: Amazon Redshift parameters. The <code>ClusterId</code> field can be blank if <code>Host</code> and <code>Port</code> are both set. The <code>Host</code> and <code>Port</code> fields can be blank if the <code>ClusterId</code> field is set.
    S3Parameters:
      type: object
      required:
        - ManifestFileLocation
      properties:
        ManifestFileLocation:
          $ref: '#/components/schemas/ManifestFileLocation'
          description: Location of the Amazon S3 manifest file. This is NULL if the manifest file was uploaded into QuickSight.
      description: S3 parameters.
    ServiceNowParameters:
      type: object
      required:
        - SiteBaseUrl
      properties:
        SiteBaseUrl:
          $ref: '#/components/schemas/SiteBaseUrl'
          description: URL of the base site.
      description: ServiceNow parameters.
    SnowflakeParameters:
      type: object
      required:
        - Host
        - Database
        - Warehouse
      properties:
        Host:
          $ref: '#/components/schemas/Host'
          description: Host.
        Database:
          $ref: '#/components/schemas/Database'
          description: Database.
        Warehouse:
          $ref: '#/components/schemas/Warehouse'
          description: Warehouse.
      description: Snowflake parameters.
    SparkParameters:
      type: object
      required:
        - Host
        - Port
      properties:
        Host:
          $ref: '#/components/schemas/Host'
          description: Host.
        Port:
          $ref: '#/components/schemas/Port'
          description: Port.
      description: Spark parameters.
    SqlServerParameters:
      type: object
      required:
        - Host
        - Port
        - Database
      properties:
        Host:
          $ref: '#/components/schemas/Host'
          description: Host.
        Port:
          $ref: '#/components/schemas/Port'
          description: Port.
        Database:
          $ref: '#/components/schemas/Database'
          description: Database.
      description: SQL Server parameters.
    TeradataParameters:
      type: object
      required:
        - Host
        - Port
        - Database
      properties:
        Host:
          $ref: '#/components/schemas/Host'
          description: Host.
        Port:
          $ref: '#/components/schemas/Port'
          description: Port.
        Database:
          $ref: '#/components/schemas/Database'
          description: Database.
      description: Teradata parameters.
    TwitterParameters:
      type: object
      required:
        - Query
        - MaxRows
      properties:
        Query:
          $ref: '#/components/schemas/Query'
          description: Twitter query string.
        MaxRows:
          $ref: '#/components/schemas/PositiveInteger'
          description: Maximum number of rows to query Twitter.
      description: Twitter parameters.
    CredentialPair:
      type: object
      required:
        - Username
        - Password
      properties:
        Username:
          $ref: '#/components/schemas/Username'
          description: User name.
        Password:
          $ref: '#/components/schemas/Password'
          description: Password.
        AlternateDataSourceParameters:
          $ref: '#/components/schemas/DataSourceParametersList'
          description: 'A set of alternate data source parameters that you want to share for these credentials. The credentials are applied in tandem with the data source parameters when you copy a data source by using a create or update request. The API operation compares the <code>DataSourceParameters</code> structure that''s in the request with the structures in the <code>AlternateDataSourceParameters</code> allow list. If the structures are an exact match, the request is allowed to use the new data source with the existing credentials. If the <code>AlternateDataSourceParameters</code> list is null, the <code>DataSourceParameters</code> originally used with these <code>Credentials</code> is automatically allowed.'
      description: The combination of user name and password that are used as credentials.
    CopySourceArn:
      type: string
      pattern: '^arn:[-a-z0-9]*:quicksight:[-a-z0-9]*:[0-9]{12}:datasource/.+'
    Boolean:
      type: boolean
    CreateFolderResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: 'The status of the newly created folder. If succeeded, the status is <code>SC_OK (200)</code>.'
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) for the newly created folder.
        FolderId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: The folder ID for the newly created folder.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The request ID for the newly created folder.
    CreateFolderMembershipResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: 'The status of the folder membership. If succeeded, the status is <code>SC_OK (200)</code>.'
        FolderMember:
          $ref: '#/components/schemas/FolderMember'
          description: Information about the member in the folder.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The request ID.
    CreateGroupResponse:
      type: object
      properties:
        Group:
          $ref: '#/components/schemas/Group'
          description: The name of the group.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
      description: The response object for this operation.
    PreconditionNotMetException: {}
    CreateGroupMembershipResponse:
      type: object
      properties:
        GroupMember:
          $ref: '#/components/schemas/GroupMember'
          description: The group member.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    CreateIAMPolicyAssignmentResponse:
      type: object
      properties:
        AssignmentName:
          $ref: '#/components/schemas/IAMPolicyAssignmentName'
          description: The name of the assignment. This name must be unique within the Amazon Web Services account;.
        AssignmentId:
          $ref: '#/components/schemas/String'
          description: The ID for the assignment.
        AssignmentStatus:
          $ref: '#/components/schemas/AssignmentStatus'
          description: '<p>The status of the assignment. Possible values are as follows:</p> <ul> <li> <p> <code>ENABLED</code> - Anything specified in this assignment is used when creating the data source.</p> </li> <li> <p> <code>DISABLED</code> - This assignment isn''t used when creating the data source.</p> </li> <li> <p> <code>DRAFT</code> - This assignment is an unfinished draft and isn''t used when creating the data source.</p> </li> </ul>'
        PolicyArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN for the IAM policy that is applied to the QuickSight users and groups specified in this assignment.
        Identities:
          $ref: '#/components/schemas/IdentityMap'
          description: 'The QuickSight users, groups, or both that the IAM policy is assigned to.'
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    IdentityNameList:
      type: array
      items:
        $ref: '#/components/schemas/IdentityName'
    ConcurrentUpdatingException: {}
    CreateIngestionResponse:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) for the data ingestion.
        IngestionId:
          $ref: '#/components/schemas/IngestionId'
          description: An ID for the ingestion.
        IngestionStatus:
          $ref: '#/components/schemas/IngestionStatus'
          description: The ingestion status.
        RequestId:
          $ref: '#/components/schemas/string'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    CreateNamespaceResponse:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: 'The ARN of the QuickSight namespace you created. '
        Name:
          $ref: '#/components/schemas/Namespace'
          description: The name of the new namespace that you created.
        CapacityRegion:
          $ref: '#/components/schemas/String'
          description: 'The Amazon Web Services Region; that you want to use for the free SPICE capacity for the new namespace. This is set to the region that you run CreateNamespace in. '
        CreationStatus:
          $ref: '#/components/schemas/NamespaceStatus'
          description: 'The status of the creation of the namespace. This is an asynchronous process. A status of <code>CREATED</code> means that your namespace is ready to use. If an error occurs, it indicates if the process is <code>retryable</code> or <code>non-retryable</code>. In the case of a non-retryable error, refer to the error message for follow-up tasks.'
        IdentityStore:
          $ref: '#/components/schemas/IdentityStore'
          description: 'Specifies the type of your user identity directory. Currently, this supports users with an identity type of <code>QUICKSIGHT</code>.'
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    CreateTemplateResponse:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The ARN for the template.
        VersionArn:
          $ref: '#/components/schemas/Arn'
          description: 'The ARN for the template, including the version information of the first version.'
        TemplateId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: The ID of the template.
        CreationStatus:
          $ref: '#/components/schemas/ResourceStatus'
          description: The template creation status.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
    TemplateSourceAnalysis:
      type: object
      required:
        - Arn
        - DataSetReferences
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource.
        DataSetReferences:
          $ref: '#/components/schemas/DataSetReferenceList'
          description: A structure containing information about the dataset references used as placeholders in the template.
      description: The source analysis of the template.
    TemplateSourceTemplate:
      type: object
      required:
        - Arn
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource.
      description: The source template of the template.
    CreateTemplateAliasResponse:
      type: object
      properties:
        TemplateAlias:
          $ref: '#/components/schemas/TemplateAlias'
          description: Information about the template alias.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
    CreateThemeResponse:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) for the theme.
        VersionArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) for the new theme.
        ThemeId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: The ID of the theme.
        CreationStatus:
          $ref: '#/components/schemas/ResourceStatus'
          description: The theme creation status.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
    DataColorPalette:
      type: object
      properties:
        Colors:
          $ref: '#/components/schemas/ColorList'
          description: The hexadecimal codes for the colors.
        MinMaxGradient:
          $ref: '#/components/schemas/ColorList'
          description: 'The minimum and maximum hexadecimal codes that describe a color gradient. '
        EmptyFillColor:
          $ref: '#/components/schemas/HexColor'
          description: The hexadecimal code of a color that applies to charts where a lack of data is highlighted.
      description: 'The theme colors that are used for data colors in charts. The colors description is a hexadecimal color code that consists of six alphanumerical characters, prefixed with <code>#</code>, for example #37BFF5. '
    UIColorPalette:
      type: object
      properties:
        PrimaryForeground:
          $ref: '#/components/schemas/HexColor'
          description: 'The color of text and other foreground elements that appear over the primary background regions, such as grid lines, borders, table banding, icons, and so on.'
        PrimaryBackground:
          $ref: '#/components/schemas/HexColor'
          description: The background color that applies to visuals and other high emphasis UI.
        SecondaryForeground:
          $ref: '#/components/schemas/HexColor'
          description: 'The foreground color that applies to any sheet title, sheet control text, or UI that appears over the secondary background.'
        SecondaryBackground:
          $ref: '#/components/schemas/HexColor'
          description: The background color that applies to the sheet background and sheet controls.
        Accent:
          $ref: '#/components/schemas/HexColor'
          description: This color is that applies to selected states and buttons.
        AccentForeground:
          $ref: '#/components/schemas/HexColor'
          description: The foreground color that applies to any text or other elements that appear over the accent color.
        Danger:
          $ref: '#/components/schemas/HexColor'
          description: The color that applies to error messages.
        DangerForeground:
          $ref: '#/components/schemas/HexColor'
          description: The foreground color that applies to any text or other elements that appear over the error color.
        Warning:
          $ref: '#/components/schemas/HexColor'
          description: This color that applies to warning and informational messages.
        WarningForeground:
          $ref: '#/components/schemas/HexColor'
          description: The foreground color that applies to any text or other elements that appear over the warning color.
        Success:
          $ref: '#/components/schemas/HexColor'
          description: 'The color that applies to success messages, for example the check mark for a successful download.'
        SuccessForeground:
          $ref: '#/components/schemas/HexColor'
          description: The foreground color that applies to any text or other elements that appear over the success color.
        Dimension:
          $ref: '#/components/schemas/HexColor'
          description: The color that applies to the names of fields that are identified as dimensions.
        DimensionForeground:
          $ref: '#/components/schemas/HexColor'
          description: The foreground color that applies to any text or other elements that appear over the dimension color.
        Measure:
          $ref: '#/components/schemas/HexColor'
          description: The color that applies to the names of fields that are identified as measures.
        MeasureForeground:
          $ref: '#/components/schemas/HexColor'
          description: The foreground color that applies to any text or other elements that appear over the measure color.
      description: 'The theme colors that apply to UI and to charts, excluding data colors. The colors description is a hexadecimal color code that consists of six alphanumerical characters, prefixed with <code>#</code>, for example #37BFF5. For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/themes-in-quicksight.html">Using Themes in Amazon QuickSight</a> in the <i>Amazon QuickSight User Guide.</i> '
    SheetStyle:
      type: object
      properties:
        Tile:
          $ref: '#/components/schemas/TileStyle'
          description: The display options for tiles.
        TileLayout:
          $ref: '#/components/schemas/TileLayoutStyle'
          description: The layout options for tiles.
      description: 'The theme display options for sheets. '
    CreateThemeAliasResponse:
      type: object
      properties:
        ThemeAlias:
          $ref: '#/components/schemas/ThemeAlias'
          description: Information about the theme alias.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
    DeleteAccountCustomizationResponse:
      type: object
      properties:
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    DeleteAnalysisResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the deleted analysis.
        AnalysisId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: The ID of the deleted analysis.
        DeletionTime:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time that the analysis is scheduled to be deleted.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
    DeleteDashboardResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Secure Socket Layer (SSL) properties that apply for the resource.
        DashboardId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: The ID of the dashboard.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
    DeleteDataSetResponse:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset.
        DataSetId:
          $ref: '#/components/schemas/ResourceId'
          description: The ID for the dataset that you want to create. This ID is unique per Amazon Web Services Region; for each Amazon Web Services account;.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    DeleteDataSourceResponse:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the data source that you deleted.
        DataSourceId:
          $ref: '#/components/schemas/ResourceId'
          description: The ID of the data source. This ID is unique per Amazon Web Services Region; for each Amazon Web Services account;.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    DeleteFolderResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: 'The status of deleting the folder. If succeeded, the status is <code>SC_OK (200)</code>.'
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name of the deleted folder.
        FolderId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: The folder ID.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The request ID.
    DeleteFolderMembershipResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: 'The status of deleting the asset. If succeeded, the status is <code>SC_OK (200)</code>.'
        RequestId:
          $ref: '#/components/schemas/String'
          description: The request ID.
    DeleteGroupResponse:
      type: object
      properties:
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    DeleteGroupMembershipResponse:
      type: object
      properties:
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    DeleteIAMPolicyAssignmentResponse:
      type: object
      properties:
        AssignmentName:
          $ref: '#/components/schemas/IAMPolicyAssignmentName'
          description: 'The name of the assignment. '
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    DeleteNamespaceResponse:
      type: object
      properties:
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    DeleteTemplateResponse:
      type: object
      properties:
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource.
        TemplateId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: An ID for the template.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    DeleteTemplateAliasResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
        TemplateId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: An ID for the template associated with the deletion.
        AliasName:
          $ref: '#/components/schemas/AliasName'
          description: The name for the template alias.
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the template you want to delete.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
    DeleteThemeResponse:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
        ThemeId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: An ID for the theme.
    DeleteThemeAliasResponse:
      type: object
      properties:
        AliasName:
          $ref: '#/components/schemas/AliasName'
          description: The name for the theme alias.
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the theme resource using the deleted alias.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
        ThemeId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: An ID for the theme associated with the deletion.
    DeleteUserResponse:
      type: object
      properties:
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    DeleteUserByPrincipalIdResponse:
      type: object
      properties:
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    DescribeAccountCustomizationResponse:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the customization that's associated with this Amazon Web Services account;.
        AwsAccountId:
          $ref: '#/components/schemas/AwsAccountId'
          description: The ID for the Amazon Web Services account; that you're describing.
        Namespace:
          $ref: '#/components/schemas/Namespace'
          description: 'The QuickSight namespace that you''re describing. '
        AccountCustomization:
          $ref: '#/components/schemas/AccountCustomization'
          description: 'The QuickSight customizations that exist in the current Amazon Web Services Region;. '
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    DescribeAccountSettingsResponse:
      type: object
      properties:
        AccountSettings:
          $ref: '#/components/schemas/AccountSettings'
          description: 'The QuickSight settings for this Amazon Web Services account;. This information includes the edition of Amazon QuickSight that you subscribed to (Standard or Enterprise) and the notification email for the QuickSight subscription. In the QuickSight console, the QuickSight subscription is sometimes referred to as a QuickSight "account" even though it''s technically not an account by itself. Instead, it''s a subscription to the QuickSight service for your Amazon Web Services account;. The edition that you subscribe to applies to QuickSight in every Amazon Web Services Region; where you use it.'
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    DescribeAnalysisResponse:
      type: object
      properties:
        Analysis:
          $ref: '#/components/schemas/Analysis'
          description: A metadata structure that contains summary information for the analysis that you're describing.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
    DescribeAnalysisPermissionsResponse:
      type: object
      properties:
        AnalysisId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: The ID of the analysis whose permissions you're describing.
        AnalysisArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the analysis whose permissions you're describing.
        Permissions:
          $ref: '#/components/schemas/ResourcePermissionList'
          description: A structure that describes the principals and the resource-level permissions on an analysis.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
    DescribeDashboardResponse:
      type: object
      properties:
        Dashboard:
          $ref: '#/components/schemas/Dashboard'
          description: Information about the dashboard.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of this request.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
    DescribeDashboardPermissionsResponse:
      type: object
      properties:
        DashboardId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: The ID for the dashboard.
        DashboardArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dashboard.
        Permissions:
          $ref: '#/components/schemas/ResourcePermissionList'
          description: A structure that contains the permissions for the dashboard.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
    DescribeDataSetResponse:
      type: object
      properties:
        DataSet:
          $ref: '#/components/schemas/DataSet'
          description: Information on the dataset.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    DescribeDataSetPermissionsResponse:
      type: object
      properties:
        DataSetArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset.
        DataSetId:
          $ref: '#/components/schemas/ResourceId'
          description: The ID for the dataset that you want to create. This ID is unique per Amazon Web Services Region; for each Amazon Web Services account;.
        Permissions:
          $ref: '#/components/schemas/ResourcePermissionList'
          description: A list of resource permissions on the dataset.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    DescribeDataSourceResponse:
      type: object
      properties:
        DataSource:
          $ref: '#/components/schemas/DataSource'
          description: The information on the data source.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    DescribeDataSourcePermissionsResponse:
      type: object
      properties:
        DataSourceArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the data source.
        DataSourceId:
          $ref: '#/components/schemas/ResourceId'
          description: The ID of the data source. This ID is unique per Amazon Web Services Region; for each Amazon Web Services account;.
        Permissions:
          $ref: '#/components/schemas/ResourcePermissionList'
          description: A list of resource permissions on the data source.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    DescribeFolderResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: 'The status. If succeeded, the status is <code>SC_OK (200)</code>.'
        Folder:
          $ref: '#/components/schemas/Folder'
          description: Information about the folder.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The request ID.
    DescribeFolderPermissionsResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: 'The status. If succeeded, the status is <code>SC_OK</code>.'
        FolderId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: The folder ID.
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) for the folder.
        Permissions:
          $ref: '#/components/schemas/ResourcePermissionList'
          description: Information about the permissions on the folder.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The request ID.
    DescribeFolderResolvedPermissionsResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: 'The status. If succeeded, the status is <code>SC_OK</code> '
        FolderId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: The folder ID.
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN).
        Permissions:
          $ref: '#/components/schemas/ResourcePermissionList'
          description: Information about the permissions on the dashboard.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The request ID.
    DescribeGroupResponse:
      type: object
      properties:
        Group:
          $ref: '#/components/schemas/Group'
          description: The name of the group.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    DescribeIAMPolicyAssignmentResponse:
      type: object
      properties:
        IAMPolicyAssignment:
          $ref: '#/components/schemas/IAMPolicyAssignment'
          description: Information describing the IAM policy assignment.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    InvalidNextTokenException: {}
    DescribeIngestionResponse:
      type: object
      properties:
        Ingestion:
          $ref: '#/components/schemas/Ingestion'
          description: Information about the ingestion.
        RequestId:
          $ref: '#/components/schemas/string'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    DescribeNamespaceResponse:
      type: object
      properties:
        Namespace:
          $ref: '#/components/schemas/NamespaceInfoV2'
          description: 'The information about the namespace that you''re describing. The response includes the namespace ARN, name, Amazon Web Services Region;, creation status, and identity store. <code>DescribeNamespace</code> also works for namespaces that are in the process of being created. For incomplete namespaces, this API operation lists the namespace error types and messages associated with the creation process.'
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    DescribeTemplateResponse:
      type: object
      properties:
        Template:
          $ref: '#/components/schemas/Template'
          description: The template structure for the object you want to describe.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
    DescribeTemplateAliasResponse:
      type: object
      properties:
        TemplateAlias:
          $ref: '#/components/schemas/TemplateAlias'
          description: Information about the template alias.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
    DescribeTemplatePermissionsResponse:
      type: object
      properties:
        TemplateId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: The ID for the template.
        TemplateArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the template.
        Permissions:
          $ref: '#/components/schemas/ResourcePermissionList'
          description: 'A list of resource permissions to be set on the template. '
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    DescribeThemeResponse:
      type: object
      properties:
        Theme:
          $ref: '#/components/schemas/Theme'
          description: The information about the theme that you are describing.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
    DescribeThemeAliasResponse:
      type: object
      properties:
        ThemeAlias:
          $ref: '#/components/schemas/ThemeAlias'
          description: Information about the theme alias.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
    DescribeThemePermissionsResponse:
      type: object
      properties:
        ThemeId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: The ID for the theme.
        ThemeArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the theme.
        Permissions:
          $ref: '#/components/schemas/ResourcePermissionList'
          description: 'A list of resource permissions set on the theme. '
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    DescribeUserResponse:
      type: object
      properties:
        User:
          $ref: '#/components/schemas/User'
          description: The user name.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    GenerateEmbedUrlForAnonymousUserResponse:
      type: object
      required:
        - EmbedUrl
        - Status
        - RequestId
      properties:
        EmbedUrl:
          $ref: '#/components/schemas/EmbeddingUrl'
          description: The embed URL for the dashboard.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
    SessionTag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          $ref: '#/components/schemas/SessionTagKey'
          description: The key for the tag.
        Value:
          $ref: '#/components/schemas/SessionTagValue'
          description: The value that you want to assign the tag.
      description: The key-value pair used for the row-level security tags feature.
    AnonymousUserDashboardEmbeddingConfiguration:
      type: object
      required:
        - InitialDashboardId
      properties:
        InitialDashboardId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: '<p>The dashboard ID for the dashboard that you want the user to see first. This ID is included in the output URL. When the URL in response is accessed, Amazon QuickSight renders this dashboard.</p> <p>The Amazon Resource Name (ARN) of this dashboard must be included in the <code>AuthorizedResourceArns</code> parameter. Otherwise, the request will fail with <code>InvalidParameterValueException</code>.</p>'
      description: Information about the dashboard that you want to embed.
    SessionLifetimeInMinutesInvalidException: {}
    UnsupportedPricingPlanException: {}
    GenerateEmbedUrlForRegisteredUserResponse:
      type: object
      required:
        - EmbedUrl
        - Status
        - RequestId
      properties:
        EmbedUrl:
          $ref: '#/components/schemas/EmbeddingUrl'
          description: The embed URL for the Amazon QuickSight dashboard or console.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
    RegisteredUserDashboardEmbeddingConfiguration:
      type: object
      required:
        - InitialDashboardId
      properties:
        InitialDashboardId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: '<p>The dashboard ID for the dashboard that you want the user to see first. This ID is included in the output URL. When the URL in response is accessed, Amazon QuickSight renders this dashboard if the user has permissions to view it.</p> <p>If the user does not have permission to view this dashboard, they see a permissions error message.</p>'
      description: Information about the dashboard you want to embed.
    RegisteredUserQuickSightConsoleEmbeddingConfiguration:
      type: object
      properties:
        InitialPath:
          $ref: '#/components/schemas/EntryPath'
          description: '<p>The initial URL path for the Amazon QuickSight console. <code>InitialPath</code> is required.</p> <p>The entry point URL is constrained to the following paths:</p> <ul> <li> <p> <code>/start</code> </p> </li> <li> <p> <code>/start/analyses</code> </p> </li> <li> <p> <code>/start/dashboards</code> </p> </li> <li> <p> <code>/start/favorites</code> </p> </li> <li> <p> <code>/dashboards/DashboardId</code>. <i>DashboardId</i> is the actual ID key from the Amazon QuickSight console URL of the dashboard.</p> </li> <li> <p> <code>/analyses/AnalysisId</code>. <i>AnalysisId</i> is the actual ID key from the Amazon QuickSight console URL of the analysis.</p> </li> </ul>'
      description: Information about the Amazon QuickSight console that you want to embed.
    QuickSightUserNotFoundException: {}
    GetDashboardEmbedUrlResponse:
      type: object
      properties:
        EmbedUrl:
          $ref: '#/components/schemas/EmbeddingUrl'
          description: 'A single-use URL that you can put into your server-side webpage to embed your dashboard. This URL is valid for 5 minutes. The API operation provides the URL with an <code>auth_code</code> value that enables one (and only one) sign-on to a user session that is valid for 10 hours. '
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
      description: Output returned from the <code>GetDashboardEmbedUrl</code> operation.
    RestrictiveResourceId:
      type: string
      pattern: '[\w\-]+'
      minLength: 1
      maxLength: 2048
    DomainNotWhitelistedException: {}
    IdentityTypeNotSupportedException: {}
    GetSessionEmbedUrlResponse:
      type: object
      properties:
        EmbedUrl:
          $ref: '#/components/schemas/EmbeddingUrl'
          description: 'A single-use URL that you can put into your server-side web page to embed your QuickSight session. This URL is valid for 5 minutes. The API operation provides the URL with an <code>auth_code</code> value that enables one (and only one) sign-on to a user session that is valid for 10 hours. '
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
    ListAnalysesResponse:
      type: object
      properties:
        AnalysisSummaryList:
          $ref: '#/components/schemas/AnalysisSummaryList'
          description: Metadata describing each of the analyses that are listed.
        NextToken:
          $ref: '#/components/schemas/String'
          description: A pagination token that can be used in a subsequent request.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
    ListDashboardVersionsResponse:
      type: object
      properties:
        DashboardVersionSummaryList:
          $ref: '#/components/schemas/DashboardVersionSummaryList'
          description: A structure that contains information about each version of the dashboard.
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'The token for the next set of results, or null if there are no more results.'
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
    ListDashboardsResponse:
      type: object
      properties:
        DashboardSummaryList:
          $ref: '#/components/schemas/DashboardSummaryList'
          description: A structure that contains all of the dashboards in your Amazon Web Services account;. This structure provides basic information about the dashboards.
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'The token for the next set of results, or null if there are no more results.'
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
    ListDataSetsResponse:
      type: object
      properties:
        DataSetSummaries:
          $ref: '#/components/schemas/DataSetSummaryList'
          description: The list of dataset summaries.
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'The token for the next set of results, or null if there are no more results.'
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    ListDataSourcesResponse:
      type: object
      properties:
        DataSources:
          $ref: '#/components/schemas/DataSourceList'
          description: A list of data sources.
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'The token for the next set of results, or null if there are no more results.'
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    ListFolderMembersResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: 'The status. If succeeded, the status is <code>SC_OK</code> '
        FolderMemberList:
          $ref: '#/components/schemas/FolderMemberList'
          description: 'A structure that contains all of the folder members (dashboards, analyses, and datasets) in the folder.'
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'The token for the next set of results, or null if there are no more results.'
        RequestId:
          $ref: '#/components/schemas/String'
          description: The request ID.
    ListFoldersResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: 'The status. If succeeded, the status is <code>SC_OK</code> '
        FolderSummaryList:
          $ref: '#/components/schemas/FolderSummaryList'
          description: A structure that contains all of the folders in your AWS account. This structure provides basic information about the folders.
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'The token for the next set of results, or null if there are no more results.'
        RequestId:
          $ref: '#/components/schemas/String'
          description: The request ID.
    ListGroupMembershipsResponse:
      type: object
      properties:
        GroupMemberList:
          $ref: '#/components/schemas/GroupMemberList'
          description: The list of the members of the group.
        NextToken:
          $ref: '#/components/schemas/String'
          description: A pagination token that can be used in a subsequent request.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    ListGroupsResponse:
      type: object
      properties:
        GroupList:
          $ref: '#/components/schemas/GroupList'
          description: The list of the groups.
        NextToken:
          $ref: '#/components/schemas/String'
          description: A pagination token that can be used in a subsequent request.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    ListIAMPolicyAssignmentsResponse:
      type: object
      properties:
        IAMPolicyAssignments:
          $ref: '#/components/schemas/IAMPolicyAssignmentSummaryList'
          description: Information describing the IAM policy assignments.
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'The token for the next set of results, or null if there are no more results.'
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    ListIAMPolicyAssignmentsForUserResponse:
      type: object
      properties:
        ActiveAssignments:
          $ref: '#/components/schemas/ActiveIAMPolicyAssignmentList'
          description: The active assignments for this user.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'The token for the next set of results, or null if there are no more results.'
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    ListIngestionsResponse:
      type: object
      properties:
        Ingestions:
          $ref: '#/components/schemas/Ingestions'
          description: A list of the ingestions.
        NextToken:
          $ref: '#/components/schemas/string'
          description: 'The token for the next set of results, or null if there are no more results.'
        RequestId:
          $ref: '#/components/schemas/string'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    ListNamespacesResponse:
      type: object
      properties:
        Namespaces:
          $ref: '#/components/schemas/Namespaces'
          description: 'The information about the namespaces in this Amazon Web Services account;. The response includes the namespace ARN, name, Amazon Web Services Region;, notification email address, creation status, and identity store.'
        NextToken:
          $ref: '#/components/schemas/String'
          description: A pagination token that can be used in a subsequent request.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          $ref: '#/components/schemas/TagList'
          description: Contains a map of the key-value pairs for the resource tag or tags assigned to the resource.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    ListTemplateAliasesResponse:
      type: object
      properties:
        TemplateAliasList:
          $ref: '#/components/schemas/TemplateAliasList'
          description: A structure containing the list of the template's aliases.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'The token for the next set of results, or null if there are no more results.'
    ListTemplateVersionsResponse:
      type: object
      properties:
        TemplateVersionSummaryList:
          $ref: '#/components/schemas/TemplateVersionSummaryList'
          description: A structure containing a list of all the versions of the specified template.
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'The token for the next set of results, or null if there are no more results.'
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
    ListTemplatesResponse:
      type: object
      properties:
        TemplateSummaryList:
          $ref: '#/components/schemas/TemplateSummaryList'
          description: A structure containing information about the templates in the list.
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'The token for the next set of results, or null if there are no more results.'
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
    ListThemeAliasesResponse:
      type: object
      properties:
        ThemeAliasList:
          $ref: '#/components/schemas/ThemeAliasList'
          description: A structure containing the list of the theme's aliases.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'The token for the next set of results, or null if there are no more results.'
    ListThemeVersionsResponse:
      type: object
      properties:
        ThemeVersionSummaryList:
          $ref: '#/components/schemas/ThemeVersionSummaryList'
          description: A structure containing a list of all the versions of the specified theme.
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'The token for the next set of results, or null if there are no more results.'
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
    ListThemesResponse:
      type: object
      properties:
        ThemeSummaryList:
          $ref: '#/components/schemas/ThemeSummaryList'
          description: Information about the themes in the list.
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'The token for the next set of results, or null if there are no more results.'
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
    ListUserGroupsResponse:
      type: object
      properties:
        GroupList:
          $ref: '#/components/schemas/GroupList'
          description: The list of groups the user is a member of.
        NextToken:
          $ref: '#/components/schemas/String'
          description: A pagination token that can be used in a subsequent request.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    ListUsersResponse:
      type: object
      properties:
        UserList:
          $ref: '#/components/schemas/UserList'
          description: The list of users.
        NextToken:
          $ref: '#/components/schemas/String'
          description: A pagination token that can be used in a subsequent request.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    RegisterUserResponse:
      type: object
      properties:
        User:
          $ref: '#/components/schemas/User'
          description: The user's user name.
        UserInvitationUrl:
          $ref: '#/components/schemas/String'
          description: The URL the user visits to complete registration and provide a password. This is returned only for users with an identity type of <code>QUICKSIGHT</code>.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    RestoreAnalysisResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the analysis that you're restoring.
        AnalysisId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: 'The ID of the analysis that you''re restoring. '
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
    SearchAnalysesResponse:
      type: object
      properties:
        AnalysisSummaryList:
          $ref: '#/components/schemas/AnalysisSummaryList'
          description: Metadata describing the analyses that you searched for.
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'A pagination token that can be used in a subsequent request. '
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
    AnalysisSearchFilter:
      type: object
      properties:
        Operator:
          $ref: '#/components/schemas/FilterOperator'
          description: 'The comparison operator that you want to use as a filter, for example <code>"Operator": "StringEquals"</code>.'
        Name:
          $ref: '#/components/schemas/AnalysisFilterAttribute'
          description: 'The name of the value that you want to use as a filter, for example <code>"Name": "QUICKSIGHT_USER"</code>.'
        Value:
          $ref: '#/components/schemas/String'
          description: 'The value of the named item, in this case <code>QUICKSIGHT_USER</code>, that you want to use as a filter, for example <code>"Value"</code>. An example is <code>"arn:aws:quicksight:us-east-1:1:user/default/UserName1"</code>.'
      description: A filter that you apply when searching for one or more analyses.
    SearchDashboardsResponse:
      type: object
      properties:
        DashboardSummaryList:
          $ref: '#/components/schemas/DashboardSummaryList'
          description: The list of dashboards owned by the user specified in <code>Filters</code> in your request.
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'The token for the next set of results, or null if there are no more results.'
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
    DashboardSearchFilter:
      type: object
      required:
        - Operator
      properties:
        Operator:
          $ref: '#/components/schemas/FilterOperator'
          description: 'The comparison operator that you want to use as a filter, for example, <code>"Operator": "StringEquals"</code>.'
        Name:
          $ref: '#/components/schemas/DashboardFilterAttribute'
          description: 'The name of the value that you want to use as a filter, for example, <code>"Name": "QUICKSIGHT_USER"</code>. '
        Value:
          $ref: '#/components/schemas/String'
          description: 'The value of the named item, in this case <code>QUICKSIGHT_USER</code>, that you want to use as a filter, for example, <code>"Value": "arn:aws:quicksight:us-east-1:1:user/default/UserName1"</code>. '
      description: 'A filter that you apply when searching for dashboards. '
    SearchFoldersResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: 'The status. If succeeded, the status is <code>SC_OK</code>.'
        FolderSummaryList:
          $ref: '#/components/schemas/FolderSummaryList'
          description: A structure that contains all of the folders in your AWS account. This structure provides basic information about the folders.
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'The token for the next set of results, or null if there are no more results.'
        RequestId:
          $ref: '#/components/schemas/String'
          description: The request ID.
    FolderSearchFilter:
      type: object
      properties:
        Operator:
          $ref: '#/components/schemas/FilterOperator'
          description: 'The comparison operator that you want to use as a filter. For example, <code>"Operator": "StringEquals"</code>.'
        Name:
          $ref: '#/components/schemas/FolderFilterAttribute'
          description: 'The name of the value that you want to use as a filter. For example, <code>"Name": "PARENT_FOLDER_ARN"</code>.'
        Value:
          $ref: '#/components/schemas/String'
          description: 'The value of the named item (in this example, <code>PARENT_FOLDER_ARN</code>), that you want to use as a filter. For example, <code>"Value": "arn:aws:quicksight:us-east-1:1:folder/folderId"</code>.'
      description: Searches a folder by a filter.
    TagResourceResponse:
      type: object
      properties:
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    UntagResourceResponse:
      type: object
      properties:
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    UpdateAccountCustomizationResponse:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) for the updated customization for this Amazon Web Services account;.
        AwsAccountId:
          $ref: '#/components/schemas/AwsAccountId'
          description: The ID for the Amazon Web Services account; that you want to update QuickSight customizations for.
        Namespace:
          $ref: '#/components/schemas/Namespace'
          description: The namespace associated with the customization that you're updating.
        AccountCustomization:
          $ref: '#/components/schemas/AccountCustomization'
          description: 'The QuickSight customizations you''re updating in the current Amazon Web Services Region;. '
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    UpdateAccountSettingsResponse:
      type: object
      properties:
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    UpdateAnalysisResponse:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the analysis that you're updating.
        AnalysisId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: The ID of the analysis.
        UpdateStatus:
          $ref: '#/components/schemas/ResourceStatus'
          description: The update status of the last update that was made to the analysis.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
    UpdateAnalysisPermissionsResponse:
      type: object
      properties:
        AnalysisArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the analysis that you updated.
        AnalysisId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: The ID of the analysis that you updated permissions for.
        Permissions:
          $ref: '#/components/schemas/ResourcePermissionList'
          description: A structure that describes the principals and the resource-level permissions on an analysis.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    UpdateDashboardResponse:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource.
        VersionArn:
          $ref: '#/components/schemas/Arn'
          description: 'The ARN of the dashboard, including the version number.'
        DashboardId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: The ID for the dashboard.
        CreationStatus:
          $ref: '#/components/schemas/ResourceStatus'
          description: The creation status of the request.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
    UpdateDashboardPermissionsResponse:
      type: object
      properties:
        DashboardArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dashboard.
        DashboardId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: The ID for the dashboard.
        Permissions:
          $ref: '#/components/schemas/ResourcePermissionList'
          description: Information about the permissions on the dashboard.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    UpdateDashboardPublishedVersionResponse:
      type: object
      properties:
        DashboardId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: The ID for the dashboard.
        DashboardArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dashboard.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
    UpdateDataSetResponse:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset.
        DataSetId:
          $ref: '#/components/schemas/ResourceId'
          description: The ID for the dataset that you want to create. This ID is unique per Amazon Web Services Region; for each Amazon Web Services account;.
        IngestionArn:
          $ref: '#/components/schemas/Arn'
          description: 'The ARN for the ingestion, which is triggered as a result of dataset creation if the import mode is SPICE.'
        IngestionId:
          $ref: '#/components/schemas/ResourceId'
          description: 'The ID of the ingestion, which is triggered as a result of dataset creation if the import mode is SPICE.'
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    UpdateDataSetPermissionsResponse:
      type: object
      properties:
        DataSetArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset.
        DataSetId:
          $ref: '#/components/schemas/ResourceId'
          description: The ID for the dataset whose permissions you want to update. This ID is unique per Amazon Web Services Region; for each Amazon Web Services account;.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    UpdateDataSourceResponse:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the data source.
        DataSourceId:
          $ref: '#/components/schemas/ResourceId'
          description: The ID of the data source. This ID is unique per Amazon Web Services Region; for each Amazon Web Services account;.
        UpdateStatus:
          $ref: '#/components/schemas/ResourceStatus'
          description: The update status of the data source's last update.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    UpdateDataSourcePermissionsResponse:
      type: object
      properties:
        DataSourceArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the data source.
        DataSourceId:
          $ref: '#/components/schemas/ResourceId'
          description: The ID of the data source. This ID is unique per Amazon Web Services Region; for each Amazon Web Services account;.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    UpdateFolderResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: 'The status. If succeeded, the status is <code>SC_OK</code>.'
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN).
        FolderId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: The folder ID.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The request ID.
    UpdateFolderPermissionsResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: 'The status. If succeeded, the status is <code>SC_OK</code>.'
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN).
        FolderId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: The folder ID.
        Permissions:
          $ref: '#/components/schemas/ResourcePermissionList'
          description: Information about the permissions on the dashboard.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The request ID.
    UpdateGroupResponse:
      type: object
      properties:
        Group:
          $ref: '#/components/schemas/Group'
          description: The name of the group.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    UpdateIAMPolicyAssignmentResponse:
      type: object
      properties:
        AssignmentName:
          $ref: '#/components/schemas/IAMPolicyAssignmentName'
          description: The name of the assignment or rule.
        AssignmentId:
          $ref: '#/components/schemas/String'
          description: The ID of the assignment.
        PolicyArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN for the IAM policy applied to the QuickSight users and groups specified in this assignment.
        Identities:
          $ref: '#/components/schemas/IdentityMap'
          description: 'The QuickSight users, groups, or both that the IAM policy is assigned to.'
        AssignmentStatus:
          $ref: '#/components/schemas/AssignmentStatus'
          description: '<p>The status of the assignment. Possible values are as follows:</p> <ul> <li> <p> <code>ENABLED</code> - Anything specified in this assignment is used when creating the data source.</p> </li> <li> <p> <code>DISABLED</code> - This assignment isn''t used when creating the data source.</p> </li> <li> <p> <code>DRAFT</code> - This assignment is an unfinished draft and isn''t used when creating the data source.</p> </li> </ul>'
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    UpdateTemplateResponse:
      type: object
      properties:
        TemplateId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: The ID for the template.
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) for the template.
        VersionArn:
          $ref: '#/components/schemas/Arn'
          description: 'The ARN for the template, including the version information of the first version.'
        CreationStatus:
          $ref: '#/components/schemas/ResourceStatus'
          description: The creation status of the template.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
    UpdateTemplateAliasResponse:
      type: object
      properties:
        TemplateAlias:
          $ref: '#/components/schemas/TemplateAlias'
          description: The template alias.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
    UpdateTemplatePermissionsResponse:
      type: object
      properties:
        TemplateId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: The ID for the template.
        TemplateArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the template.
        Permissions:
          $ref: '#/components/schemas/ResourcePermissionList'
          description: A list of resource permissions to be set on the template.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    UpdateThemeResponse:
      type: object
      properties:
        ThemeId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: The ID for the theme.
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) for the theme.
        VersionArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) for the new version of the theme.
        CreationStatus:
          $ref: '#/components/schemas/ResourceStatus'
          description: The creation status of the theme.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
    UpdateThemeAliasResponse:
      type: object
      properties:
        ThemeAlias:
          $ref: '#/components/schemas/ThemeAlias'
          description: Information about the theme alias.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
    UpdateThemePermissionsResponse:
      type: object
      properties:
        ThemeId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: The ID for the theme.
        ThemeArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the theme.
        Permissions:
          $ref: '#/components/schemas/ResourcePermissionList'
          description: The resulting list of resource permissions for the theme.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    UpdateUserResponse:
      type: object
      properties:
        User:
          $ref: '#/components/schemas/User'
          description: The Amazon QuickSight user.
        RequestId:
          $ref: '#/components/schemas/String'
          description: The Amazon Web Services request ID for this operation.
        Status:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status of the request.
    AccountCustomization:
      type: object
      properties:
        DefaultTheme:
          $ref: '#/components/schemas/Arn'
          description: The default theme for this QuickSight subscription.
      description: The Amazon QuickSight customizations associated with your Amazon Web Services account; or a QuickSight namespace in a specific Amazon Web Services Region;.
    String:
      type: string
    Edition:
      type: string
      enum:
        - STANDARD
        - ENTERPRISE
    AccountSettings:
      type: object
      properties:
        AccountName:
          $ref: '#/components/schemas/String'
          description: The "account name" you provided for the QuickSight subscription in your Amazon Web Services account;. You create this name when you sign up for QuickSight. It is unique in all of Amazon Web Services and it appears only when users sign in.
        Edition:
          $ref: '#/components/schemas/Edition'
          description: 'The edition of QuickSight that you''re currently subscribed to: Enterprise edition or Standard edition.'
        DefaultNamespace:
          $ref: '#/components/schemas/Namespace'
          description: 'The default QuickSight namespace for your Amazon Web Services account;. '
        NotificationEmail:
          $ref: '#/components/schemas/String'
          description: The main notification email for your QuickSight subscription.
      description: The QuickSight settings associated with your Amazon Web Services account;.
    ActionList:
      type: array
      items:
        $ref: '#/components/schemas/String'
      minItems: 1
      maxItems: 16
    IAMPolicyAssignmentName:
      type: string
      pattern: '(?=^.{2,256}$)(?!.*\s)[0-9a-zA-Z-_.:=+@]*$'
      minLength: 1
    ActiveIAMPolicyAssignment:
      type: object
      properties:
        AssignmentName:
          $ref: '#/components/schemas/IAMPolicyAssignmentName'
          description: A name for the IAM policy assignment.
        PolicyArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource.
      description: The active Identity and Access Management (IAM) policy assignment.
    ActiveIAMPolicyAssignmentList:
      type: array
      items:
        $ref: '#/components/schemas/ActiveIAMPolicyAssignment'
    DashboardBehavior:
      type: string
      enum:
        - ENABLED
        - DISABLED
    AdditionalDashboardIdList:
      type: array
      items:
        $ref: '#/components/schemas/RestrictiveResourceId'
      minItems: 1
      maxItems: 20
    AliasName:
      type: string
      pattern: '[\w\-]+|(\$LATEST)|(\$PUBLISHED)'
      minLength: 1
      maxLength: 2048
    Domain:
      type: string
      minLength: 1
      maxLength: 64
    AnalysisName:
      type: string
      minLength: 1
      maxLength: 2048
    ResourceStatus:
      type: string
      enum:
        - CREATION_IN_PROGRESS
        - CREATION_SUCCESSFUL
        - CREATION_FAILED
        - UPDATE_IN_PROGRESS
        - UPDATE_SUCCESSFUL
        - UPDATE_FAILED
        - DELETED
    AnalysisErrorList:
      type: array
      items:
        $ref: '#/components/schemas/AnalysisError'
      minItems: 1
    DataSetArnsList:
      type: array
      items:
        $ref: '#/components/schemas/Arn'
      maxItems: 100
    Timestamp:
      type: string
      format: date-time
    SheetList:
      type: array
      items:
        $ref: '#/components/schemas/Sheet'
      maxItems: 20
    Analysis:
      type: object
      properties:
        AnalysisId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: The ID of the analysis.
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the analysis.
        Name:
          $ref: '#/components/schemas/AnalysisName'
          description: The descriptive name of the analysis.
        Status:
          $ref: '#/components/schemas/ResourceStatus'
          description: Status associated with the analysis.
        Errors:
          $ref: '#/components/schemas/AnalysisErrorList'
          description: Errors associated with the analysis.
        DataSetArns:
          $ref: '#/components/schemas/DataSetArnsList'
          description: The ARNs of the datasets of the analysis.
        ThemeArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the theme of the analysis.
        CreatedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the analysis was created.
        LastUpdatedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the analysis was last updated.
        Sheets:
          $ref: '#/components/schemas/SheetList'
          description: A list of the associated sheets with the unique identifier and name of each sheet.
      description: Metadata structure for an analysis in Amazon QuickSight
    AnalysisErrorType:
      type: string
      enum:
        - ACCESS_DENIED
        - SOURCE_NOT_FOUND
        - DATA_SET_NOT_FOUND
        - INTERNAL_FAILURE
        - PARAMETER_VALUE_INCOMPATIBLE
        - PARAMETER_TYPE_INVALID
        - PARAMETER_NOT_FOUND
        - COLUMN_TYPE_MISMATCH
        - COLUMN_GEOGRAPHIC_ROLE_MISMATCH
        - COLUMN_REPLACEMENT_MISSING
    NonEmptyString:
      type: string
      pattern: .*\S.*
    AnalysisError:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/AnalysisErrorType'
          description: The type of the analysis error.
        Message:
          $ref: '#/components/schemas/NonEmptyString'
          description: The message associated with the analysis error.
      description: A metadata error structure for an analysis.
    AnalysisFilterAttribute:
      type: string
      enum:
        - QUICKSIGHT_USER
    FilterOperator:
      type: string
      enum:
        - StringEquals
    AnalysisSearchFilterList:
      type: array
      items:
        $ref: '#/components/schemas/AnalysisSearchFilter'
      minItems: 1
      maxItems: 1
    AnalysisSourceEntity:
      type: object
      properties:
        SourceTemplate:
          $ref: '#/components/schemas/AnalysisSourceTemplate'
          description: The source template for the source entity of the analysis.
      description: The source entity of an analysis.
    DataSetReferenceList:
      type: array
      items:
        $ref: '#/components/schemas/DataSetReference'
      minItems: 1
    AnalysisSummary:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) for the analysis.
        AnalysisId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: The ID of the analysis. This ID displays in the URL.
        Name:
          $ref: '#/components/schemas/AnalysisName'
          description: The name of the analysis. This name is displayed in the QuickSight console.
        Status:
          $ref: '#/components/schemas/ResourceStatus'
          description: The last known status for the analysis.
        CreatedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the analysis was created.
        LastUpdatedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the analysis was last updated.
      description: The summary metadata that describes an analysis.
    AnalysisSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/AnalysisSummary'
      maxItems: 100
    AnonymousUserEmbeddingExperienceConfiguration:
      type: object
      properties:
        Dashboard:
          $ref: '#/components/schemas/AnonymousUserDashboardEmbeddingConfiguration'
          description: 'The type of embedding experience. In this case, an Amazon QuickSight dashboard.'
      description: 'The type of experience you want to embed. For anonymous users, you can embed an Amazon QuickSight dashboard.'
    ArnList:
      type: array
      items:
        $ref: '#/components/schemas/Arn'
    AssignmentStatus:
      type: string
      enum:
        - ENABLED
        - DRAFT
        - DISABLED
    WorkGroup:
      type: string
      minLength: 1
      maxLength: 128
    Host:
      type: string
      minLength: 1
      maxLength: 256
    Port:
      type: integer
      minimum: 1
      maximum: 65535
    Database:
      type: string
      minLength: 1
      maxLength: 128
    AwsAccountId:
      type: string
      pattern: '^[0-9]{12}$'
      minLength: 12
      maxLength: 12
    AwsAndAccountId:
      type: string
      pattern: '^(aws|[0-9]{12})$'
    DataSetName:
      type: string
      minLength: 1
      maxLength: 128
    boolean:
      type: boolean
    BorderStyle:
      type: object
      properties:
        Show:
          $ref: '#/components/schemas/boolean'
          description: The option to enable display of borders for visuals.
      description: The display options for tile borders for visuals.
    ColumnName:
      type: string
      minLength: 1
      maxLength: 128
    ColumnId:
      type: string
      minLength: 1
      maxLength: 64
    Expression:
      type: string
      minLength: 1
      maxLength: 4096
    CalculatedColumn:
      type: object
      required:
        - ColumnName
        - ColumnId
        - Expression
      properties:
        ColumnName:
          $ref: '#/components/schemas/ColumnName'
          description: Column name.
        ColumnId:
          $ref: '#/components/schemas/ColumnId'
          description: 'A unique ID to identify a calculated column. During a dataset update, if the column ID of a calculated column matches that of an existing calculated column, Amazon QuickSight preserves the existing calculated column.'
        Expression:
          $ref: '#/components/schemas/Expression'
          description: An expression that defines the calculated column.
      description: A calculated column for a dataset.
    CalculatedColumnList:
      type: array
      items:
        $ref: '#/components/schemas/CalculatedColumn'
      minItems: 1
      maxItems: 128
    string:
      type: string
    IngestionId:
      type: string
      pattern: '^[a-zA-Z0-9-_]+$'
      minLength: 1
      maxLength: 128
    CancelIngestionRequest:
      type: object
      title: CancelIngestionRequest
      properties: {}
    StatusCode:
      type: integer
    ColumnDataType:
      type: string
      enum:
        - STRING
        - INTEGER
        - DECIMAL
        - DATETIME
    TypeCastFormat:
      type: string
      maxLength: 32
    CastColumnTypeOperation:
      type: object
      required:
        - ColumnName
        - NewColumnType
      properties:
        ColumnName:
          $ref: '#/components/schemas/ColumnName'
          description: Column name.
        NewColumnType:
          $ref: '#/components/schemas/ColumnDataType'
          description: New column data type.
        Format:
          $ref: '#/components/schemas/TypeCastFormat'
          description: 'When casting a column from string to datetime type, you can supply a string in a format supported by Amazon QuickSight to denote the source data format.'
      description: A transform operation that casts a column to a different type.
    Catalog:
      type: string
      maxLength: 128
    ClusterId:
      type: string
      minLength: 1
      maxLength: 64
    HexColor:
      type: string
      pattern: '^#[A-F0-9]{6}$'
    ColorList:
      type: array
      items:
        $ref: '#/components/schemas/HexColor'
      maxItems: 100
    ColumnDescriptiveText:
      type: string
      minLength: 0
      maxLength: 500
    ColumnDescription:
      type: object
      properties:
        Text:
          $ref: '#/components/schemas/ColumnDescriptiveText'
          description: The text of a description for a column.
      description: Metadata that contains a description for a column.
    GeoSpatialColumnGroup:
      type: object
      required:
        - Name
        - CountryCode
        - Columns
      properties:
        Name:
          $ref: '#/components/schemas/ColumnGroupName'
          description: A display name for the hierarchy.
        CountryCode:
          $ref: '#/components/schemas/GeoSpatialCountryCode'
          description: Country code.
        Columns:
          $ref: '#/components/schemas/ColumnList'
          description: Columns in this hierarchy.
      description: Geospatial column group that denotes a hierarchy.
    ColumnGroupColumnSchema:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/String'
          description: The name of the column group's column schema.
      description: 'A structure describing the name, data type, and geographic role of the columns.'
    ColumnGroupColumnSchemaList:
      type: array
      items:
        $ref: '#/components/schemas/ColumnGroupColumnSchema'
      maxItems: 500
    ColumnGroupList:
      type: array
      items:
        $ref: '#/components/schemas/ColumnGroup'
      minItems: 1
      maxItems: 8
    ColumnGroupName:
      type: string
      minLength: 1
      maxLength: 64
    ColumnGroupSchema:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/String'
          description: The name of the column group schema.
        ColumnGroupColumnSchemaList:
          $ref: '#/components/schemas/ColumnGroupColumnSchemaList'
          description: A structure containing the list of schemas for column group columns.
      description: The column group schema.
    ColumnGroupSchemaList:
      type: array
      items:
        $ref: '#/components/schemas/ColumnGroupSchema'
      maxItems: 500
    PrincipalList:
      type: array
      items:
        $ref: '#/components/schemas/String'
      minItems: 1
      maxItems: 100
    ColumnNameList:
      type: array
      items:
        $ref: '#/components/schemas/String'
      minItems: 1
    ColumnLevelPermissionRuleList:
      type: array
      items:
        $ref: '#/components/schemas/ColumnLevelPermissionRule'
      minItems: 1
    ColumnList:
      type: array
      items:
        $ref: '#/components/schemas/ColumnName'
      minItems: 1
      maxItems: 16
    ColumnSchema:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/String'
          description: The name of the column schema.
        DataType:
          $ref: '#/components/schemas/String'
          description: The data type of the column schema.
        GeographicRole:
          $ref: '#/components/schemas/String'
          description: The geographic role of the column schema.
      description: The column schema.
    ColumnSchemaList:
      type: array
      items:
        $ref: '#/components/schemas/ColumnSchema'
      maxItems: 500
    GeoSpatialDataRole:
      type: string
      enum:
        - COUNTRY
        - STATE
        - COUNTY
        - CITY
        - POSTCODE
        - LONGITUDE
        - LATITUDE
    ColumnTag:
      type: object
      properties:
        ColumnGeographicRole:
          $ref: '#/components/schemas/GeoSpatialDataRole'
          description: A geospatial role for a column.
        ColumnDescription:
          $ref: '#/components/schemas/ColumnDescription'
          description: A description for a column.
      description: 'A tag for a column in a <a>TagColumnOperation</a> structure. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.'
    ColumnTagList:
      type: array
      items:
        $ref: '#/components/schemas/ColumnTag'
      minItems: 1
      maxItems: 16
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
      minItems: 1
      maxItems: 200
    CreateAccountCustomizationRequest:
      type: object
      required:
        - AccountCustomization
      title: CreateAccountCustomizationRequest
      properties:
        AccountCustomization:
          $ref: '#/components/schemas/AccountCustomization'
          description: '<p>The QuickSight customizations you''re adding in the current Amazon Web Services Region;. You can add these to an Amazon Web Services account; and a QuickSight namespace. </p> <p>For example, you can add a default theme by setting <code>AccountCustomization</code> to the midnight theme: <code>"AccountCustomization": { "DefaultTheme": "arn:aws:quicksight::aws:theme/MIDNIGHT" }</code>. Or, you can add a custom theme by specifying <code>"AccountCustomization": { "DefaultTheme": "arn:aws:quicksight:us-west-2:111122223333:theme/bdb844d0-0fe9-4d9d-b520-0fe602d93639" }</code>. </p>'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A list of the tags that you want to attach to this resource.
    Parameters:
      type: object
      properties:
        StringParameters:
          $ref: '#/components/schemas/StringParameterList'
          description: String parameters.
        IntegerParameters:
          $ref: '#/components/schemas/IntegerParameterList'
          description: Integer parameters.
        DecimalParameters:
          $ref: '#/components/schemas/DecimalParameterList'
          description: Decimal parameters.
        DateTimeParameters:
          $ref: '#/components/schemas/DateTimeParameterList'
          description: Date-time parameters.
      description: A list of QuickSight parameters and the list's override values.
    ResourcePermissionList:
      type: array
      items:
        $ref: '#/components/schemas/ResourcePermission'
      minItems: 1
      maxItems: 64
    CreateAnalysisRequest:
      type: object
      required:
        - Name
        - SourceEntity
      title: CreateAnalysisRequest
      properties:
        Name:
          $ref: '#/components/schemas/AnalysisName'
          description: 'A descriptive name for the analysis that you''re creating. This name displays for the analysis in the QuickSight console. '
        Parameters:
          $ref: '#/components/schemas/Parameters'
          description: 'The parameter names and override values that you want to use. An analysis can have any parameter type, and some parameters might accept multiple values. '
        Permissions:
          $ref: '#/components/schemas/ResourcePermissionList'
          description: '<p>A structure that describes the principals and the resource-level permissions on an analysis. You can use the <code>Permissions</code> structure to grant permissions by providing a list of Identity and Access Management (IAM) action information for each principal listed by Amazon Resource Name (ARN). </p> <p>To specify no permissions, omit <code>Permissions</code>.</p>'
        SourceEntity:
          $ref: '#/components/schemas/AnalysisSourceEntity'
          description: A source entity to use for the analysis that you're creating. This metadata structure contains details that describe a source template and one or more datasets.
        ThemeArn:
          $ref: '#/components/schemas/Arn'
          description: 'The ARN for the theme to apply to the analysis that you''re creating. To see the theme in the QuickSight console, make sure that you have access to it.'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: Contains a map of the key-value pairs for the resource tag or tags assigned to the analysis.
    CreateColumnsOperation:
      type: object
      required:
        - Columns
      properties:
        Columns:
          $ref: '#/components/schemas/CalculatedColumnList'
          description: Calculated columns to create.
      description: A transform operation that creates calculated columns. Columns created in one such operation form a lexical closure.
    DashboardName:
      type: string
      minLength: 1
      maxLength: 2048
    DashboardSourceEntity:
      type: object
      properties:
        SourceTemplate:
          $ref: '#/components/schemas/DashboardSourceTemplate'
          description: Source template.
      description: Dashboard source entity.
    VersionDescription:
      type: string
      minLength: 1
      maxLength: 512
    DashboardPublishOptions:
      type: object
      properties:
        AdHocFilteringOption:
          $ref: '#/components/schemas/AdHocFilteringOption'
          description: Ad hoc (one-time) filtering option.
        ExportToCSVOption:
          $ref: '#/components/schemas/ExportToCSVOption'
          description: Export to .csv option.
        SheetControlsOption:
          $ref: '#/components/schemas/SheetControlsOption'
          description: Sheet controls option.
      description: Dashboard publish options.
    CreateDashboardRequest:
      type: object
      required:
        - Name
        - SourceEntity
      title: CreateDashboardRequest
      properties:
        Name:
          $ref: '#/components/schemas/DashboardName'
          description: The display name of the dashboard.
        Parameters:
          $ref: '#/components/schemas/Parameters'
          description: 'The parameters for the creation of the dashboard, which you want to use to override the default settings. A dashboard can have any type of parameters, and some parameters might accept multiple values. '
        Permissions:
          $ref: '#/components/schemas/ResourcePermissionList'
          description: '<p>A structure that contains the permissions of the dashboard. You can use this structure for granting permissions by providing a list of IAM action information for each principal ARN. </p> <p>To specify no permissions, omit the permissions list.</p>'
        SourceEntity:
          $ref: '#/components/schemas/DashboardSourceEntity'
          description: '<p>The entity that you are using as a source when you create the dashboard. In <code>SourceEntity</code>, you specify the type of object you''re using as source. You can only create a dashboard from a template, so you use a <code>SourceTemplate</code> entity. If you need to create a dashboard from an analysis, first convert the analysis to a template by using the <a>CreateTemplate</a> API operation. For <code>SourceTemplate</code>, specify the Amazon Resource Name (ARN) of the source template. The <code>SourceTemplate</code>ARN can contain any Amazon Web Services account; and any QuickSight-supported Amazon Web Services Region;. </p> <p>Use the <code>DataSetReferences</code> entity within <code>SourceTemplate</code> to list the replacement datasets for the placeholders listed in the original. The schema in each dataset must match its placeholder. </p>'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: Contains a map of the key-value pairs for the resource tag or tags assigned to the dashboard.
        VersionDescription:
          $ref: '#/components/schemas/VersionDescription'
          description: A description for the first version of the dashboard being created.
        DashboardPublishOptions:
          $ref: '#/components/schemas/DashboardPublishOptions'
          description: '<p>Options for publishing the dashboard when you create it:</p> <ul> <li> <p> <code>AvailabilityStatus</code> for <code>AdHocFilteringOption</code> - This status can be either <code>ENABLED</code> or <code>DISABLED</code>. When this is set to <code>DISABLED</code>, QuickSight disables the left filter pane on the published dashboard, which can be used for ad hoc (one-time) filtering. This option is <code>ENABLED</code> by default. </p> </li> <li> <p> <code>AvailabilityStatus</code> for <code>ExportToCSVOption</code> - This status can be either <code>ENABLED</code> or <code>DISABLED</code>. The visual option to export data to .CSV format isn''t enabled when this is set to <code>DISABLED</code>. This option is <code>ENABLED</code> by default. </p> </li> <li> <p> <code>VisibilityState</code> for <code>SheetControlsOption</code> - This visibility state can be either <code>COLLAPSED</code> or <code>EXPANDED</code>. This option is <code>COLLAPSED</code> by default. </p> </li> </ul>'
        ThemeArn:
          $ref: '#/components/schemas/Arn'
          description: 'The Amazon Resource Name (ARN) of the theme that is being used for this dashboard. If you add a value for this field, it overrides the value that is used in the source entity. The theme ARN must exist in the same Amazon Web Services account; where you create the dashboard.'
    ResourceId:
      type: string
    ResourceName:
      type: string
      minLength: 1
      maxLength: 128
    PhysicalTableMap:
      type: object
      minProperties: 1
      maxProperties: 32
      additionalProperties:
        $ref: '#/components/schemas/PhysicalTable'
    LogicalTableMap:
      type: object
      minProperties: 1
      maxProperties: 64
      additionalProperties:
        $ref: '#/components/schemas/LogicalTable'
    DataSetImportMode:
      type: string
      enum:
        - SPICE
        - DIRECT_QUERY
    FieldFolderMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/FieldFolder'
    RowLevelPermissionDataSet:
      type: object
      required:
        - Arn
        - PermissionPolicy
      properties:
        Namespace:
          $ref: '#/components/schemas/Namespace'
          description: The namespace associated with the dataset that contains permissions for RLS.
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset that contains permissions for RLS.
        PermissionPolicy:
          $ref: '#/components/schemas/RowLevelPermissionPolicy'
          description: The type of permissions to use when interpretting the permissions for RLS. <code>DENY_ACCESS</code> is included for backward compatibility only.
        FormatVersion:
          $ref: '#/components/schemas/RowLevelPermissionFormatVersion'
          description: '<p>The user or group rules associated with the dataset that contains permissions for RLS.</p> <p>By default, <code>FormatVersion</code> is <code>VERSION_1</code>. When <code>FormatVersion</code> is <code>VERSION_1</code>, <code>UserName</code> and <code>GroupName</code> are required. When <code>FormatVersion</code> is <code>VERSION_2</code>, <code>UserARN</code> and <code>GroupARN</code> are required, and <code>Namespace</code> must not exist.</p>'
        Status:
          $ref: '#/components/schemas/Status'
          description: 'The status of the row-level security permission dataset. If enabled, the status is <code>ENABLED</code>. If disabled, the status is <code>DISABLED</code>.'
      description: '<p>Information about a dataset that contains permissions for row-level security (RLS). The permissions dataset maps fields to users or groups. For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/restrict-access-to-a-data-set-using-row-level-security.html">Using Row-Level Security (RLS) to Restrict Access to a Dataset</a> in the <i>Amazon QuickSight User Guide</i>.</p> <p>The option to deny permissions by setting <code>PermissionPolicy</code> to <code>DENY_ACCESS</code> is not supported for new RLS datasets.</p>'
    RowLevelPermissionTagConfiguration:
      type: object
      required:
        - TagRules
      properties:
        Status:
          $ref: '#/components/schemas/Status'
          description: 'The status of row-level security tags. If enabled, the status is <code>ENABLED</code>. If disabled, the status is <code>DISABLED</code>.'
        TagRules:
          $ref: '#/components/schemas/RowLevelPermissionTagRuleList'
          description: 'A set of rules associated with row-level security, such as the tag names and columns that they are assigned to.'
      description: 'The configuration of tags on a dataset to set row-level security. '
    CreateDataSetRequest:
      type: object
      required:
        - DataSetId
        - Name
        - PhysicalTableMap
        - ImportMode
      title: CreateDataSetRequest
      properties:
        DataSetId:
          $ref: '#/components/schemas/ResourceId'
          description: An ID for the dataset that you want to create. This ID is unique per Amazon Web Services Region; for each Amazon Web Services account;.
        Name:
          $ref: '#/components/schemas/ResourceName'
          description: The display name for the dataset.
        PhysicalTableMap:
          $ref: '#/components/schemas/PhysicalTableMap'
          description: Declares the physical tables that are available in the underlying data sources.
        LogicalTableMap:
          $ref: '#/components/schemas/LogicalTableMap'
          description: Configures the combination and transformation of the data from the physical tables.
        ImportMode:
          $ref: '#/components/schemas/DataSetImportMode'
          description: Indicates whether you want to import the data into SPICE.
        ColumnGroups:
          $ref: '#/components/schemas/ColumnGroupList'
          description: 'Groupings of columns that work together in certain QuickSight features. Currently, only geospatial hierarchy is supported.'
        FieldFolders:
          $ref: '#/components/schemas/FieldFolderMap'
          description: The folder that contains fields and nested subfolders for your dataset.
        Permissions:
          $ref: '#/components/schemas/ResourcePermissionList'
          description: A list of resource permissions on the dataset.
        RowLevelPermissionDataSet:
          $ref: '#/components/schemas/RowLevelPermissionDataSet'
          description: The row-level security configuration for the data that you want to create.
        RowLevelPermissionTagConfiguration:
          $ref: '#/components/schemas/RowLevelPermissionTagConfiguration'
          description: The configuration of tags on a dataset to set row-level security. Row-level security tags are currently supported for anonymous embedding only.
        ColumnLevelPermissionRules:
          $ref: '#/components/schemas/ColumnLevelPermissionRuleList'
          description: A set of one or more definitions of a <code> <a>ColumnLevelPermissionRule</a> </code>.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: Contains a map of the key-value pairs for the resource tag or tags assigned to the dataset.
    DataSourceType:
      type: string
      enum:
        - ADOBE_ANALYTICS
        - AMAZON_ELASTICSEARCH
        - ATHENA
        - AURORA
        - AURORA_POSTGRESQL
        - AWS_IOT_ANALYTICS
        - GITHUB
        - JIRA
        - MARIADB
        - MYSQL
        - ORACLE
        - POSTGRESQL
        - PRESTO
        - REDSHIFT
        - S3
        - SALESFORCE
        - SERVICENOW
        - SNOWFLAKE
        - SPARK
        - SQLSERVER
        - TERADATA
        - TWITTER
        - TIMESTREAM
    DataSourceParameters:
      type: object
      properties:
        AmazonElasticsearchParameters:
          $ref: '#/components/schemas/AmazonElasticsearchParameters'
          description: Amazon Elasticsearch Service parameters.
        AthenaParameters:
          $ref: '#/components/schemas/AthenaParameters'
          description: Amazon Athena parameters.
        AuroraParameters:
          $ref: '#/components/schemas/AuroraParameters'
          description: Amazon Aurora MySQL parameters.
        AuroraPostgreSqlParameters:
          $ref: '#/components/schemas/AuroraPostgreSqlParameters'
          description: Aurora PostgreSQL parameters.
        AwsIotAnalyticsParameters:
          $ref: '#/components/schemas/AwsIotAnalyticsParameters'
          description: Amazon Web Services IoT Analytics parameters.
        JiraParameters:
          $ref: '#/components/schemas/JiraParameters'
          description: Jira parameters.
        MariaDbParameters:
          $ref: '#/components/schemas/MariaDbParameters'
          description: MariaDB parameters.
        MySqlParameters:
          $ref: '#/components/schemas/MySqlParameters'
          description: MySQL parameters.
        OracleParameters:
          $ref: '#/components/schemas/OracleParameters'
          description: Oracle parameters.
        PostgreSqlParameters:
          $ref: '#/components/schemas/PostgreSqlParameters'
          description: PostgreSQL parameters.
        PrestoParameters:
          $ref: '#/components/schemas/PrestoParameters'
          description: Presto parameters.
        RdsParameters:
          $ref: '#/components/schemas/RdsParameters'
          description: Amazon RDS parameters.
        RedshiftParameters:
          $ref: '#/components/schemas/RedshiftParameters'
          description: Amazon Redshift parameters.
        S3Parameters:
          $ref: '#/components/schemas/S3Parameters'
          description: S3 parameters.
        ServiceNowParameters:
          $ref: '#/components/schemas/ServiceNowParameters'
          description: ServiceNow parameters.
        SnowflakeParameters:
          $ref: '#/components/schemas/SnowflakeParameters'
          description: Snowflake parameters.
        SparkParameters:
          $ref: '#/components/schemas/SparkParameters'
          description: Spark parameters.
        SqlServerParameters:
          $ref: '#/components/schemas/SqlServerParameters'
          description: SQL Server parameters.
        TeradataParameters:
          $ref: '#/components/schemas/TeradataParameters'
          description: Teradata parameters.
        TwitterParameters:
          $ref: '#/components/schemas/TwitterParameters'
          description: Twitter parameters.
      description: 'The parameters that Amazon QuickSight uses to connect to your underlying data source. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.'
    DataSourceCredentials:
      type: object
      properties:
        CredentialPair:
          $ref: '#/components/schemas/CredentialPair'
          description: 'Credential pair. For more information, see <a>CredentialPair</a>.'
        CopySourceArn:
          $ref: '#/components/schemas/CopySourceArn'
          description: 'The Amazon Resource Name (ARN) of a data source that has the credential pair that you want to use. When <code>CopySourceArn</code> is not null, the credential pair from the data source in the ARN is used as the credentials for the <code>DataSourceCredentials</code> structure.'
      description: 'Data source credentials. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.'
    VpcConnectionProperties:
      type: object
      required:
        - VpcConnectionArn
      properties:
        VpcConnectionArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) for the VPC connection.
      description: VPC connection properties.
    SslProperties:
      type: object
      properties:
        DisableSsl:
          $ref: '#/components/schemas/Boolean'
          description: A Boolean option to control whether SSL should be disabled.
      description: Secure Socket Layer (SSL) properties that apply when QuickSight connects to your underlying data source.
    CreateDataSourceRequest:
      type: object
      required:
        - DataSourceId
        - Name
        - Type
      title: CreateDataSourceRequest
      properties:
        DataSourceId:
          $ref: '#/components/schemas/ResourceId'
          description: 'An ID for the data source. This ID is unique per Amazon Web Services Region; for each Amazon Web Services account;. '
        Name:
          $ref: '#/components/schemas/ResourceName'
          description: A display name for the data source.
        Type:
          $ref: '#/components/schemas/DataSourceType'
          description: '<p>The type of the data source. Currently, the supported types for this operation are: <code>ATHENA, AURORA, AURORA_POSTGRESQL, AMAZON_ELASTICSEARCH, MARIADB, MYSQL, POSTGRESQL, PRESTO, REDSHIFT, S3, SNOWFLAKE, SPARK, SQLSERVER, TERADATA</code>. Use <code>ListDataSources</code> to return a list of all data sources.</p> <p> <code>AMAZON_ELASTICSEARCH</code> is for Amazon managed Elasticsearch Service.</p>'
        DataSourceParameters:
          $ref: '#/components/schemas/DataSourceParameters'
          description: The parameters that QuickSight uses to connect to your underlying source.
        Credentials:
          $ref: '#/components/schemas/DataSourceCredentials'
          description: 'The credentials QuickSight that uses to connect to your underlying source. Currently, only credentials based on user name and password are supported.'
        Permissions:
          $ref: '#/components/schemas/ResourcePermissionList'
          description: A list of resource permissions on the data source.
        VpcConnectionProperties:
          $ref: '#/components/schemas/VpcConnectionProperties'
          description: Use this parameter only when you want QuickSight to use a VPC connection when connecting to your underlying source.
        SslProperties:
          $ref: '#/components/schemas/SslProperties'
          description: Secure Socket Layer (SSL) properties that apply when QuickSight connects to your underlying source.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: Contains a map of the key-value pairs for the resource tag or tags assigned to the data source.
    MemberType:
      type: string
      enum:
        - DASHBOARD
        - ANALYSIS
        - DATASET
    CreateFolderMembershipRequest:
      type: object
      title: CreateFolderMembershipRequest
      properties: {}
    FolderMember:
      type: object
      properties:
        MemberId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: The ID of the asset.
        MemberType:
          $ref: '#/components/schemas/MemberType'
          description: The type of the asset.
      description: 'An asset in a folder, such as a dashboard, analysis, or dataset.'
    FolderName:
      type: string
      minLength: 1
      maxLength: 200
    FolderType:
      type: string
      enum:
        - SHARED
    CreateFolderRequest:
      type: object
      title: CreateFolderRequest
      properties:
        Name:
          $ref: '#/components/schemas/FolderName'
          description: The name of the folder.
        FolderType:
          $ref: '#/components/schemas/FolderType'
          description: 'The type of folder. By default, <code>folderType</code> is <code>SHARED</code>.'
        ParentFolderArn:
          $ref: '#/components/schemas/Arn'
          description: <p>The Amazon Resource Name (ARN) for the parent folder.</p> <p> <code>ParentFolderArn</code> can be null. An empty <code>parentFolderArn</code> creates a root-level folder.</p>
        Permissions:
          $ref: '#/components/schemas/ResourcePermissionList'
          description: '<p>A structure that describes the principals and the resource-level permissions of a folder.</p> <p>To specify no permissions, omit <code>Permissions</code>.</p>'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: Tags for the folder.
    GroupMemberName:
      type: string
      pattern: '[\u0020-\u00FF]+'
      minLength: 1
      maxLength: 256
    GroupName:
      type: string
      pattern: '[\u0020-\u00FF]+'
      minLength: 1
    CreateGroupMembershipRequest:
      type: object
      title: CreateGroupMembershipRequest
      properties: {}
    GroupMember:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) for the group member (user).
        MemberName:
          $ref: '#/components/schemas/GroupMemberName'
          description: The name of the group member (user).
      description: 'A member of an Amazon QuickSight group. Currently, group members must be users. Groups can''t be members of another group. .'
    GroupDescription:
      type: string
      minLength: 1
      maxLength: 512
    CreateGroupRequest:
      type: object
      required:
        - GroupName
      title: CreateGroupRequest
      properties:
        GroupName:
          $ref: '#/components/schemas/GroupName'
          description: A name for the group that you want to create.
        Description:
          $ref: '#/components/schemas/GroupDescription'
          description: A description for the group that you want to create.
      description: 'The request object for this operation. '
    Group:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) for the group.
        GroupName:
          $ref: '#/components/schemas/GroupName'
          description: The name of the group.
        Description:
          $ref: '#/components/schemas/GroupDescription'
          description: The group description.
        PrincipalId:
          $ref: '#/components/schemas/String'
          description: The principal ID of the group.
      description: 'A <i>group</i> in Amazon QuickSight consists of a set of users. You can use groups to make it easier to manage access and security. '
    IdentityMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/IdentityNameList'
    CreateIAMPolicyAssignmentRequest:
      type: object
      required:
        - AssignmentName
        - AssignmentStatus
      title: CreateIAMPolicyAssignmentRequest
      properties:
        AssignmentName:
          $ref: '#/components/schemas/IAMPolicyAssignmentName'
          description: 'The name of the assignment, also called a rule. It must be unique within an Amazon Web Services account;.'
        AssignmentStatus:
          $ref: '#/components/schemas/AssignmentStatus'
          description: '<p>The status of the assignment. Possible values are as follows:</p> <ul> <li> <p> <code>ENABLED</code> - Anything specified in this assignment is used when creating the data source.</p> </li> <li> <p> <code>DISABLED</code> - This assignment isn''t used when creating the data source.</p> </li> <li> <p> <code>DRAFT</code> - This assignment is an unfinished draft and isn''t used when creating the data source.</p> </li> </ul>'
        PolicyArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN for the IAM policy to apply to the QuickSight users and groups specified in this assignment.
        Identities:
          $ref: '#/components/schemas/IdentityMap'
          description: 'The QuickSight users, groups, or both that you want to assign the policy to.'
    CreateIngestionRequest:
      type: object
      title: CreateIngestionRequest
      properties: {}
    IngestionStatus:
      type: string
      enum:
        - INITIALIZED
        - QUEUED
        - RUNNING
        - FAILED
        - COMPLETED
        - CANCELLED
    IdentityStore:
      type: string
      enum:
        - QUICKSIGHT
    CreateNamespaceRequest:
      type: object
      required:
        - Namespace
        - IdentityStore
      title: CreateNamespaceRequest
      properties:
        Namespace:
          $ref: '#/components/schemas/Namespace'
          description: The name that you want to use to describe the new namespace.
        IdentityStore:
          $ref: '#/components/schemas/IdentityStore'
          description: 'Specifies the type of your user identity directory. Currently, this supports users with an identity type of <code>QUICKSIGHT</code>.'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: The tags that you want to associate with the namespace that you're creating.
    NamespaceStatus:
      type: string
      enum:
        - CREATED
        - CREATING
        - DELETING
        - RETRYABLE_FAILURE
        - NON_RETRYABLE_FAILURE
    VersionNumber:
      type: integer
      minimum: 1
    CreateTemplateAliasRequest:
      type: object
      required:
        - TemplateVersionNumber
      title: CreateTemplateAliasRequest
      properties:
        TemplateVersionNumber:
          $ref: '#/components/schemas/VersionNumber'
          description: The version number of the template.
    TemplateAlias:
      type: object
      properties:
        AliasName:
          $ref: '#/components/schemas/AliasName'
          description: The display name of the template alias.
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the template alias.
        TemplateVersionNumber:
          $ref: '#/components/schemas/VersionNumber'
          description: The version number of the template alias.
      description: The template alias.
    TemplateName:
      type: string
      minLength: 1
      maxLength: 2048
    TemplateSourceEntity:
      type: object
      properties:
        SourceAnalysis:
          $ref: '#/components/schemas/TemplateSourceAnalysis'
          description: 'The source analysis, if it is based on an analysis.'
        SourceTemplate:
          $ref: '#/components/schemas/TemplateSourceTemplate'
          description: 'The source template, if it is based on an template.'
      description: The source entity of the template.
    CreateTemplateRequest:
      type: object
      required:
        - SourceEntity
      title: CreateTemplateRequest
      properties:
        Name:
          $ref: '#/components/schemas/TemplateName'
          description: A display name for the template.
        Permissions:
          $ref: '#/components/schemas/ResourcePermissionList'
          description: 'A list of resource permissions to be set on the template. '
        SourceEntity:
          $ref: '#/components/schemas/TemplateSourceEntity'
          description: '<p>The entity that you are using as a source when you create the template. In <code>SourceEntity</code>, you specify the type of object you''re using as source: <code>SourceTemplate</code> for a template or <code>SourceAnalysis</code> for an analysis. Both of these require an Amazon Resource Name (ARN). For <code>SourceTemplate</code>, specify the ARN of the source template. For <code>SourceAnalysis</code>, specify the ARN of the source analysis. The <code>SourceTemplate</code> ARN can contain any Amazon Web Services account; and any QuickSight-supported Amazon Web Services Region;. </p> <p>Use the <code>DataSetReferences</code> entity within <code>SourceTemplate</code> or <code>SourceAnalysis</code> to list the replacement datasets for the placeholders listed in the original. The schema in each dataset must match its placeholder. </p>'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: Contains a map of the key-value pairs for the resource tag or tags assigned to the resource.
        VersionDescription:
          $ref: '#/components/schemas/VersionDescription'
          description: 'A description of the current template version being created. This API operation creates the first version of the template. Every time <code>UpdateTemplate</code> is called, a new version is created. Each version of the template maintains a description of the version in the <code>VersionDescription</code> field.'
    CreateThemeAliasRequest:
      type: object
      required:
        - ThemeVersionNumber
      title: CreateThemeAliasRequest
      properties:
        ThemeVersionNumber:
          $ref: '#/components/schemas/VersionNumber'
          description: The version number of the theme.
    ThemeAlias:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the theme alias.
        AliasName:
          $ref: '#/components/schemas/AliasName'
          description: The display name of the theme alias.
        ThemeVersionNumber:
          $ref: '#/components/schemas/VersionNumber'
          description: The version number of the theme alias.
      description: An alias for a theme.
    ThemeName:
      type: string
      minLength: 1
      maxLength: 2048
    ThemeConfiguration:
      type: object
      properties:
        DataColorPalette:
          $ref: '#/components/schemas/DataColorPalette'
          description: Color properties that apply to chart data colors.
        UIColorPalette:
          $ref: '#/components/schemas/UIColorPalette'
          description: 'Color properties that apply to the UI and to charts, excluding the colors that apply to data. '
        Sheet:
          $ref: '#/components/schemas/SheetStyle'
          description: Display options related to sheets.
      description: The theme configuration. This configuration contains all of the display properties for a theme.
    CreateThemeRequest:
      type: object
      required:
        - Name
        - BaseThemeId
        - Configuration
      title: CreateThemeRequest
      properties:
        Name:
          $ref: '#/components/schemas/ThemeName'
          description: A display name for the theme.
        BaseThemeId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: 'The ID of the theme that a custom theme will inherit from. All themes inherit from one of the starting themes defined by Amazon QuickSight. For a list of the starting themes, use <code>ListThemes</code> or choose <b>Themes</b> from within a QuickSight analysis. '
        VersionDescription:
          $ref: '#/components/schemas/VersionDescription'
          description: 'A description of the first version of the theme that you''re creating. Every time <code>UpdateTheme</code> is called, a new version is created. Each version of the theme has a description of the version in the <code>VersionDescription</code> field.'
        Configuration:
          $ref: '#/components/schemas/ThemeConfiguration'
          description: 'The theme configuration, which contains the theme display properties.'
        Permissions:
          $ref: '#/components/schemas/ResourcePermissionList'
          description: 'A valid grouping of resource permissions to apply to the new theme. '
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A map of the key-value pairs for the resource tag or tags that you want to add to the resource.
    Username:
      type: string
      minLength: 1
      maxLength: 64
    Password:
      type: string
      minLength: 1
      maxLength: 1024
    DataSourceParametersList:
      type: array
      items:
        $ref: '#/components/schemas/DataSourceParameters'
      minItems: 1
      maxItems: 50
    CustomSqlName:
      type: string
      minLength: 1
      maxLength: 64
    SqlQuery:
      type: string
      minLength: 1
      maxLength: 65536
    InputColumnList:
      type: array
      items:
        $ref: '#/components/schemas/InputColumn'
      minItems: 1
      maxItems: 2048
    CustomSql:
      type: object
      required:
        - DataSourceArn
        - Name
        - SqlQuery
      properties:
        DataSourceArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the data source.
        Name:
          $ref: '#/components/schemas/CustomSqlName'
          description: A display name for the SQL query result.
        SqlQuery:
          $ref: '#/components/schemas/SqlQuery'
          description: The SQL query.
        Columns:
          $ref: '#/components/schemas/InputColumnList'
          description: The column schema from the SQL query result set.
      description: A physical table type built from the results of the custom SQL query.
    DashboardVersion:
      type: object
      properties:
        CreatedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that this dashboard version was created.
        Errors:
          $ref: '#/components/schemas/DashboardErrorList'
          description: Errors associated with this dashboard version.
        VersionNumber:
          $ref: '#/components/schemas/VersionNumber'
          description: Version number for this version of the dashboard.
        Status:
          $ref: '#/components/schemas/ResourceStatus'
          description: The HTTP status of the request.
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource.
        SourceEntityArn:
          $ref: '#/components/schemas/Arn'
          description: Source entity ARN.
        DataSetArns:
          $ref: '#/components/schemas/DataSetArnsList'
          description: The Amazon Resource Numbers (ARNs) for the datasets that are associated with this version of the dashboard.
        Description:
          $ref: '#/components/schemas/VersionDescription'
          description: Description.
        ThemeArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the theme associated with a version of the dashboard.
        Sheets:
          $ref: '#/components/schemas/SheetList'
          description: A list of the associated sheets with the unique identifier and name of each sheet.
      description: Dashboard version.
    Dashboard:
      type: object
      properties:
        DashboardId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: Dashboard ID.
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource.
        Name:
          $ref: '#/components/schemas/DashboardName'
          description: A display name for the dashboard.
        Version:
          $ref: '#/components/schemas/DashboardVersion'
          description: Version.
        CreatedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that this dataset was created.
        LastPublishedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The last time that this dataset was published.
        LastUpdatedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The last time that this dataset was updated.
      description: Dashboard.
    DashboardErrorType:
      type: string
      enum:
        - ACCESS_DENIED
        - SOURCE_NOT_FOUND
        - DATA_SET_NOT_FOUND
        - INTERNAL_FAILURE
        - PARAMETER_VALUE_INCOMPATIBLE
        - PARAMETER_TYPE_INVALID
        - PARAMETER_NOT_FOUND
        - COLUMN_TYPE_MISMATCH
        - COLUMN_GEOGRAPHIC_ROLE_MISMATCH
        - COLUMN_REPLACEMENT_MISSING
    DashboardError:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/DashboardErrorType'
          description: Type.
        Message:
          $ref: '#/components/schemas/NonEmptyString'
          description: Message.
      description: Dashboard error.
    DashboardErrorList:
      type: array
      items:
        $ref: '#/components/schemas/DashboardError'
      minItems: 1
    DashboardFilterAttribute:
      type: string
      enum:
        - QUICKSIGHT_USER
    DashboardSearchFilterList:
      type: array
      items:
        $ref: '#/components/schemas/DashboardSearchFilter'
      minItems: 1
      maxItems: 1
    DashboardSummary:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource.
        DashboardId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: Dashboard ID.
        Name:
          $ref: '#/components/schemas/DashboardName'
          description: A display name for the dashboard.
        CreatedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that this dashboard was created.
        LastUpdatedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The last time that this dashboard was updated.
        PublishedVersionNumber:
          $ref: '#/components/schemas/VersionNumber'
          description: Published version number.
        LastPublishedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The last time that this dashboard was published.
      description: Dashboard summary.
    DashboardSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/DashboardSummary'
      maxItems: 100
    DashboardUIState:
      type: string
      enum:
        - EXPANDED
        - COLLAPSED
    DashboardVersionSummary:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource.
        CreatedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that this dashboard version was created.
        VersionNumber:
          $ref: '#/components/schemas/VersionNumber'
          description: Version number.
        Status:
          $ref: '#/components/schemas/ResourceStatus'
          description: The HTTP status of the request.
        SourceEntityArn:
          $ref: '#/components/schemas/Arn'
          description: Source entity ARN.
        Description:
          $ref: '#/components/schemas/VersionDescription'
          description: Description.
      description: Dashboard version summary.
    DashboardVersionSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/DashboardVersionSummary'
      maxItems: 100
    OutputColumnList:
      type: array
      items:
        $ref: '#/components/schemas/OutputColumn'
    Long:
      type: integer
    DataSet:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource.
        DataSetId:
          $ref: '#/components/schemas/ResourceId'
          description: The ID of the dataset.
        Name:
          $ref: '#/components/schemas/ResourceName'
          description: A display name for the dataset.
        CreatedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that this dataset was created.
        LastUpdatedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The last time that this dataset was updated.
        PhysicalTableMap:
          $ref: '#/components/schemas/PhysicalTableMap'
          description: Declares the physical tables that are available in the underlying data sources.
        LogicalTableMap:
          $ref: '#/components/schemas/LogicalTableMap'
          description: Configures the combination and transformation of the data from the physical tables.
        OutputColumns:
          $ref: '#/components/schemas/OutputColumnList'
          description: 'The list of columns after all transforms. These columns are available in templates, analyses, and dashboards.'
        ImportMode:
          $ref: '#/components/schemas/DataSetImportMode'
          description: A value that indicates whether you want to import the data into SPICE.
        ConsumedSpiceCapacityInBytes:
          $ref: '#/components/schemas/Long'
          description: The amount of SPICE capacity used by this dataset. This is 0 if the dataset isn't imported into SPICE.
        ColumnGroups:
          $ref: '#/components/schemas/ColumnGroupList'
          description: 'Groupings of columns that work together in certain Amazon QuickSight features. Currently, only geospatial hierarchy is supported.'
        FieldFolders:
          $ref: '#/components/schemas/FieldFolderMap'
          description: The folder that contains fields and nested subfolders for your dataset.
        RowLevelPermissionDataSet:
          $ref: '#/components/schemas/RowLevelPermissionDataSet'
          description: The row-level security configuration for the dataset.
        RowLevelPermissionTagConfiguration:
          $ref: '#/components/schemas/RowLevelPermissionTagConfiguration'
          description: The element you can use to define tags for row-level security.
        ColumnLevelPermissionRules:
          $ref: '#/components/schemas/ColumnLevelPermissionRuleList'
          description: A set of one or more definitions of a <code> <a>ColumnLevelPermissionRule</a> </code>.
      description: Dataset.
    DataSetSchema:
      type: object
      properties:
        ColumnSchemaList:
          $ref: '#/components/schemas/ColumnSchemaList'
          description: A structure containing the list of column schemas.
      description: Dataset schema.
    DataSetConfiguration:
      type: object
      properties:
        Placeholder:
          $ref: '#/components/schemas/String'
          description: Placeholder.
        DataSetSchema:
          $ref: '#/components/schemas/DataSetSchema'
          description: Dataset schema.
        ColumnGroupSchemaList:
          $ref: '#/components/schemas/ColumnGroupSchemaList'
          description: A structure containing the list of column group schemas.
      description: Dataset configuration.
    DataSetConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/DataSetConfiguration'
      maxItems: 30
    DataSetReference:
      type: object
      required:
        - DataSetPlaceholder
        - DataSetArn
      properties:
        DataSetPlaceholder:
          $ref: '#/components/schemas/NonEmptyString'
          description: Dataset placeholder.
        DataSetArn:
          $ref: '#/components/schemas/Arn'
          description: Dataset Amazon Resource Name (ARN).
      description: Dataset reference.
    DataSetSummary:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset.
        DataSetId:
          $ref: '#/components/schemas/ResourceId'
          description: The ID of the dataset.
        Name:
          $ref: '#/components/schemas/ResourceName'
          description: A display name for the dataset.
        CreatedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that this dataset was created.
        LastUpdatedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The last time that this dataset was updated.
        ImportMode:
          $ref: '#/components/schemas/DataSetImportMode'
          description: A value that indicates whether you want to import the data into SPICE.
        RowLevelPermissionDataSet:
          $ref: '#/components/schemas/RowLevelPermissionDataSet'
          description: The row-level security configuration for the dataset.
        RowLevelPermissionTagConfigurationApplied:
          $ref: '#/components/schemas/Boolean'
          description: Whether or not the row level permission tags are applied.
        ColumnLevelPermissionRulesApplied:
          $ref: '#/components/schemas/Boolean'
          description: A value that indicates if the dataset has column level permission configured.
      description: Dataset summary.
    DataSetSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/DataSetSummary'
    DataSourceErrorInfo:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/DataSourceErrorInfoType'
          description: Error type.
        Message:
          $ref: '#/components/schemas/String'
          description: Error message.
      description: Error information for the data source creation or update.
    DataSource:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the data source.
        DataSourceId:
          $ref: '#/components/schemas/ResourceId'
          description: The ID of the data source. This ID is unique per Amazon Web Services Region; for each Amazon Web Services account;.
        Name:
          $ref: '#/components/schemas/ResourceName'
          description: A display name for the data source.
        Type:
          $ref: '#/components/schemas/DataSourceType'
          description: The type of the data source. This type indicates which database engine the data source connects to.
        Status:
          $ref: '#/components/schemas/ResourceStatus'
          description: The HTTP status of the request.
        CreatedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that this data source was created.
        LastUpdatedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The last time that this data source was updated.
        DataSourceParameters:
          $ref: '#/components/schemas/DataSourceParameters'
          description: 'The parameters that Amazon QuickSight uses to connect to your underlying source. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.'
        AlternateDataSourceParameters:
          $ref: '#/components/schemas/DataSourceParametersList'
          description: 'A set of alternate data source parameters that you want to share for the credentials stored with this data source. The credentials are applied in tandem with the data source parameters when you copy a data source by using a create or update request. The API operation compares the <code>DataSourceParameters</code> structure that''s in the request with the structures in the <code>AlternateDataSourceParameters</code> allow list. If the structures are an exact match, the request is allowed to use the credentials from this existing data source. If the <code>AlternateDataSourceParameters</code> list is null, the <code>Credentials</code> originally used with this <code>DataSourceParameters</code> are automatically allowed.'
        VpcConnectionProperties:
          $ref: '#/components/schemas/VpcConnectionProperties'
          description: The VPC connection information. You need to use this parameter only when you want QuickSight to use a VPC connection when connecting to your underlying source.
        SslProperties:
          $ref: '#/components/schemas/SslProperties'
          description: Secure Socket Layer (SSL) properties that apply when QuickSight connects to your underlying source.
        ErrorInfo:
          $ref: '#/components/schemas/DataSourceErrorInfo'
          description: Error information from the last update or the creation of the data source.
      description: The structure of a data source.
    DataSourceErrorInfoType:
      type: string
      enum:
        - ACCESS_DENIED
        - COPY_SOURCE_NOT_FOUND
        - TIMEOUT
        - ENGINE_VERSION_NOT_SUPPORTED
        - UNKNOWN_HOST
        - GENERIC_SQL_FAILURE
        - CONFLICT
        - UNKNOWN
    DataSourceList:
      type: array
      items:
        $ref: '#/components/schemas/DataSource'
    TimestampList:
      type: array
      items:
        $ref: '#/components/schemas/Timestamp'
    DateTimeParameter:
      type: object
      required:
        - Name
        - Values
      properties:
        Name:
          $ref: '#/components/schemas/NonEmptyString'
          description: A display name for the date-time parameter.
        Values:
          $ref: '#/components/schemas/TimestampList'
          description: The values for the date-time parameter.
      description: A date-time parameter.
    DoubleList:
      type: array
      items:
        $ref: '#/components/schemas/Double'
    DecimalParameter:
      type: object
      required:
        - Name
        - Values
      properties:
        Name:
          $ref: '#/components/schemas/NonEmptyString'
          description: A display name for the decimal parameter.
        Values:
          $ref: '#/components/schemas/DoubleList'
          description: The values for the decimal parameter.
      description: A decimal parameter.
    DeleteAccountCustomizationRequest:
      type: object
      title: DeleteAccountCustomizationRequest
      properties: {}
    RecoveryWindowInDays:
      type: integer
      minimum: 7
      maximum: 30
    DeleteAnalysisRequest:
      type: object
      title: DeleteAnalysisRequest
      properties: {}
    DeleteDashboardRequest:
      type: object
      title: DeleteDashboardRequest
      properties: {}
    DeleteDataSetRequest:
      type: object
      title: DeleteDataSetRequest
      properties: {}
    DeleteDataSourceRequest:
      type: object
      title: DeleteDataSourceRequest
      properties: {}
    DeleteFolderMembershipRequest:
      type: object
      title: DeleteFolderMembershipRequest
      properties: {}
    DeleteFolderRequest:
      type: object
      title: DeleteFolderRequest
      properties: {}
    DeleteGroupMembershipRequest:
      type: object
      title: DeleteGroupMembershipRequest
      properties: {}
    DeleteGroupRequest:
      type: object
      title: DeleteGroupRequest
      properties: {}
    DeleteIAMPolicyAssignmentRequest:
      type: object
      title: DeleteIAMPolicyAssignmentRequest
      properties: {}
    DeleteNamespaceRequest:
      type: object
      title: DeleteNamespaceRequest
      properties: {}
    DeleteTemplateAliasRequest:
      type: object
      title: DeleteTemplateAliasRequest
      properties: {}
    DeleteTemplateRequest:
      type: object
      title: DeleteTemplateRequest
      properties: {}
    DeleteThemeAliasRequest:
      type: object
      title: DeleteThemeAliasRequest
      properties: {}
    DeleteThemeRequest:
      type: object
      title: DeleteThemeRequest
      properties: {}
    DeleteUserByPrincipalIdRequest:
      type: object
      title: DeleteUserByPrincipalIdRequest
      properties: {}
      description: <p/>
    UserName:
      type: string
      pattern: '[\u0020-\u00FF]+'
      minLength: 1
    DeleteUserRequest:
      type: object
      title: DeleteUserRequest
      properties: {}
    Delimiter:
      type: string
      minLength: 1
      maxLength: 1
    DescribeAccountCustomizationRequest:
      type: object
      title: DescribeAccountCustomizationRequest
      properties: {}
    DescribeAccountSettingsRequest:
      type: object
      title: DescribeAccountSettingsRequest
      properties: {}
    DescribeAnalysisPermissionsRequest:
      type: object
      title: DescribeAnalysisPermissionsRequest
      properties: {}
    DescribeAnalysisRequest:
      type: object
      title: DescribeAnalysisRequest
      properties: {}
    DescribeDashboardPermissionsRequest:
      type: object
      title: DescribeDashboardPermissionsRequest
      properties: {}
    DescribeDashboardRequest:
      type: object
      title: DescribeDashboardRequest
      properties: {}
    DescribeDataSetPermissionsRequest:
      type: object
      title: DescribeDataSetPermissionsRequest
      properties: {}
    DescribeDataSetRequest:
      type: object
      title: DescribeDataSetRequest
      properties: {}
    DescribeDataSourcePermissionsRequest:
      type: object
      title: DescribeDataSourcePermissionsRequest
      properties: {}
    DescribeDataSourceRequest:
      type: object
      title: DescribeDataSourceRequest
      properties: {}
    DescribeFolderPermissionsRequest:
      type: object
      title: DescribeFolderPermissionsRequest
      properties: {}
    DescribeFolderRequest:
      type: object
      title: DescribeFolderRequest
      properties: {}
    DescribeFolderResolvedPermissionsRequest:
      type: object
      title: DescribeFolderResolvedPermissionsRequest
      properties: {}
    Folder:
      type: object
      properties:
        FolderId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: The folder ID.
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The folder Amazon Resource Name (ARN).
        Name:
          $ref: '#/components/schemas/FolderName'
          description: A display name for the folder.
        FolderType:
          $ref: '#/components/schemas/FolderType'
          description: The type of the folder.
        FolderPath:
          $ref: '#/components/schemas/Path'
          description: An array of ancestor folder ARN strings.
        CreatedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the folder was created.
        LastUpdatedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the folder was last updated.
      description: A folder.
    DescribeGroupRequest:
      type: object
      title: DescribeGroupRequest
      properties: {}
    DescribeIAMPolicyAssignmentRequest:
      type: object
      title: DescribeIAMPolicyAssignmentRequest
      properties: {}
    IAMPolicyAssignment:
      type: object
      properties:
        AwsAccountId:
          $ref: '#/components/schemas/AwsAccountId'
          description: The Amazon Web Services account; ID.
        AssignmentId:
          $ref: '#/components/schemas/String'
          description: Assignment ID.
        AssignmentName:
          $ref: '#/components/schemas/IAMPolicyAssignmentName'
          description: Assignment name.
        PolicyArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) for the IAM policy.
        Identities:
          $ref: '#/components/schemas/IdentityMap'
          description: Identities.
        AssignmentStatus:
          $ref: '#/components/schemas/AssignmentStatus'
          description: Assignment status.
      description: An Identity and Access Management (IAM) policy assignment.
    DescribeIngestionRequest:
      type: object
      title: DescribeIngestionRequest
      properties: {}
    Ingestion:
      type: object
      required:
        - Arn
        - IngestionStatus
        - CreatedTime
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource.
        IngestionId:
          $ref: '#/components/schemas/IngestionId'
          description: Ingestion ID.
        IngestionStatus:
          $ref: '#/components/schemas/IngestionStatus'
          description: Ingestion status.
        ErrorInfo:
          $ref: '#/components/schemas/ErrorInfo'
          description: Error information for this ingestion.
        RowInfo:
          $ref: '#/components/schemas/RowInfo'
        QueueInfo:
          $ref: '#/components/schemas/QueueInfo'
        CreatedTime:
          $ref: '#/components/schemas/timestamp'
          description: The time that this ingestion started.
        IngestionTimeInSeconds:
          $ref: '#/components/schemas/long'
          description: 'The time that this ingestion took, measured in seconds.'
        IngestionSizeInBytes:
          $ref: '#/components/schemas/long'
          description: 'The size of the data ingested, in bytes.'
        RequestSource:
          $ref: '#/components/schemas/IngestionRequestSource'
          description: Event source for this ingestion.
        RequestType:
          $ref: '#/components/schemas/IngestionRequestType'
          description: Type of this ingestion.
      description: Information about the SPICE ingestion for a dataset.
    DescribeNamespaceRequest:
      type: object
      title: DescribeNamespaceRequest
      properties: {}
    NamespaceInfoV2:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/Namespace'
          description: The name of the error.
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The namespace ARN.
        CapacityRegion:
          $ref: '#/components/schemas/String'
          description: The namespace Amazon Web Services Region;.
        CreationStatus:
          $ref: '#/components/schemas/NamespaceStatus'
          description: The creation status of a namespace that is not yet completely created.
        IdentityStore:
          $ref: '#/components/schemas/IdentityStore'
          description: The identity store used for the namespace.
        NamespaceError:
          $ref: '#/components/schemas/NamespaceError'
          description: An error that occurred when the namespace was created.
      description: The error type.
    DescribeTemplateAliasRequest:
      type: object
      title: DescribeTemplateAliasRequest
      properties: {}
    DescribeTemplatePermissionsRequest:
      type: object
      title: DescribeTemplatePermissionsRequest
      properties: {}
    DescribeTemplateRequest:
      type: object
      title: DescribeTemplateRequest
      properties: {}
    Template:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the template.
        Name:
          $ref: '#/components/schemas/TemplateName'
          description: The display name of the template.
        Version:
          $ref: '#/components/schemas/TemplateVersion'
          description: A structure describing the versions of the template.
        TemplateId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: The ID for the template. This is unique per Amazon Web Services Region; for each Amazon Web Services account;.
        LastUpdatedTime:
          $ref: '#/components/schemas/Timestamp'
          description: Time when this was last updated.
        CreatedTime:
          $ref: '#/components/schemas/Timestamp'
          description: Time when this was created.
      description: <p>A template object. A <i>template</i> is an entity in QuickSight that encapsulates the metadata required to create an analysis and that you can use to create a dashboard. A template adds a layer of abstraction by using placeholders to replace the dataset associated with an analysis. You can use templates to create dashboards by replacing dataset placeholders with datasets that follow the same schema that was used to create the source analysis and template.</p> <p>You can share templates across Amazon Web Services accounts by allowing users in other Amazon Web Services accounts to create a template or a dashboard from an existing template.</p>
    DescribeThemeAliasRequest:
      type: object
      title: DescribeThemeAliasRequest
      properties: {}
    DescribeThemePermissionsRequest:
      type: object
      title: DescribeThemePermissionsRequest
      properties: {}
    DescribeThemeRequest:
      type: object
      title: DescribeThemeRequest
      properties: {}
    Theme:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the theme.
        Name:
          $ref: '#/components/schemas/ThemeName'
          description: The name that the user gives to the theme.
        ThemeId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: The identifier that the user gives to the theme.
        Version:
          $ref: '#/components/schemas/ThemeVersion'
        CreatedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time that the theme was created.
        LastUpdatedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time that the theme was last updated.
        Type:
          $ref: '#/components/schemas/ThemeType'
          description: 'The type of theme, based on how it was created. Valid values include: <code>QUICKSIGHT</code> and <code>CUSTOM</code>.'
      description: Summary information about a theme.
    DescribeUserRequest:
      type: object
      title: DescribeUserRequest
      properties: {}
    User:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) for the user.
        UserName:
          $ref: '#/components/schemas/UserName'
          description: The user's user name.
        Email:
          $ref: '#/components/schemas/String'
          description: The user's email address.
        Role:
          $ref: '#/components/schemas/UserRole'
          description: '<p>The Amazon QuickSight role for the user. The user role can be one of the following:.</p> <ul> <li> <p> <code>READER</code>: A user who has read-only access to dashboards.</p> </li> <li> <p> <code>AUTHOR</code>: A user who can create data sources, datasets, analyses, and dashboards.</p> </li> <li> <p> <code>ADMIN</code>: A user who is an author, who can also manage Amazon QuickSight settings.</p> </li> <li> <p> <code>RESTRICTED_READER</code>: This role isn''t currently available for use.</p> </li> <li> <p> <code>RESTRICTED_AUTHOR</code>: This role isn''t currently available for use.</p> </li> </ul>'
        IdentityType:
          $ref: '#/components/schemas/IdentityType'
          description: The type of identity authentication used by the user.
        Active:
          $ref: '#/components/schemas/Boolean'
          description: 'The active status of user. When you create an Amazon QuickSight user that’s not an IAM user or an Active Directory user, that user is inactive until they sign in and provide a password.'
        PrincipalId:
          $ref: '#/components/schemas/String'
          description: The principal ID of the user.
        CustomPermissionsName:
          $ref: '#/components/schemas/RoleName'
          description: The custom permissions profile associated with this user.
        ExternalLoginFederationProviderType:
          $ref: '#/components/schemas/String'
          description: '<p>The type of supported external login provider that provides identity to let the user federate into Amazon QuickSight with an associated IAM role. The type can be one of the following.</p> <ul> <li> <p> <code>COGNITO</code>: Amazon Cognito. The provider URL is cognito-identity.amazonaws.com.</p> </li> <li> <p> <code>CUSTOM_OIDC</code>: Custom OpenID Connect (OIDC) provider.</p> </li> </ul>'
        ExternalLoginFederationProviderUrl:
          $ref: '#/components/schemas/String'
          description: The URL of the external login provider.
        ExternalLoginId:
          $ref: '#/components/schemas/String'
          description: The identity ID for the user in the external login provider.
      description: 'A registered user of Amazon QuickSight. '
    Double:
      type: number
      format: double
    EmbeddingIdentityType:
      type: string
      enum:
        - IAM
        - QUICKSIGHT
        - ANONYMOUS
    EmbeddingUrl:
      type: string
      format: password
    EntryPath:
      type: string
      minLength: 1
      maxLength: 1000
    EntryPoint:
      type: string
      minLength: 1
      maxLength: 1000
    IngestionErrorType:
      type: string
      enum:
        - FAILURE_TO_ASSUME_ROLE
        - INGESTION_SUPERSEDED
        - INGESTION_CANCELED
        - DATA_SET_DELETED
        - DATA_SET_NOT_SPICE
        - S3_UPLOADED_FILE_DELETED
        - S3_MANIFEST_ERROR
        - DATA_TOLERANCE_EXCEPTION
        - SPICE_TABLE_NOT_FOUND
        - DATA_SET_SIZE_LIMIT_EXCEEDED
        - ROW_SIZE_LIMIT_EXCEEDED
        - ACCOUNT_CAPACITY_LIMIT_EXCEEDED
        - CUSTOMER_ERROR
        - DATA_SOURCE_NOT_FOUND
        - IAM_ROLE_NOT_AVAILABLE
        - CONNECTION_FAILURE
        - SQL_TABLE_NOT_FOUND
        - PERMISSION_DENIED
        - SSL_CERTIFICATE_VALIDATION_FAILURE
        - OAUTH_TOKEN_FAILURE
        - SOURCE_API_LIMIT_EXCEEDED_FAILURE
        - PASSWORD_AUTHENTICATION_FAILURE
        - SQL_SCHEMA_MISMATCH_ERROR
        - INVALID_DATE_FORMAT
        - INVALID_DATAPREP_SYNTAX
        - SOURCE_RESOURCE_LIMIT_EXCEEDED
        - SQL_INVALID_PARAMETER_VALUE
        - QUERY_TIMEOUT
        - SQL_NUMERIC_OVERFLOW
        - UNRESOLVABLE_HOST
        - UNROUTABLE_HOST
        - SQL_EXCEPTION
        - S3_FILE_INACCESSIBLE
        - IOT_FILE_NOT_FOUND
        - IOT_DATA_SET_FILE_EMPTY
        - INVALID_DATA_SOURCE_CONFIG
        - DATA_SOURCE_AUTH_FAILED
        - DATA_SOURCE_CONNECTION_FAILED
        - FAILURE_TO_PROCESS_JSON_FILE
        - INTERNAL_SERVICE_ERROR
    ErrorInfo:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/IngestionErrorType'
          description: Error type.
        Message:
          $ref: '#/components/schemas/string'
          description: Error message.
      description: Error information for the SPICE ingestion of a dataset.
    FieldFolderDescription:
      type: string
      maxLength: 500
    FolderColumnList:
      type: array
      items:
        $ref: '#/components/schemas/String'
      maxItems: 5000
    FieldFolderPath:
      type: string
      minLength: 1
      maxLength: 1000
    FileFormat:
      type: string
      enum:
        - CSV
        - TSV
        - CLF
        - ELF
        - XLSX
        - JSON
    FilterOperation:
      type: object
      required:
        - ConditionExpression
      properties:
        ConditionExpression:
          $ref: '#/components/schemas/Expression'
          description: An expression that must evaluate to a Boolean value. Rows for which the expression evaluates to true are kept in the dataset.
      description: A transform operation that filters rows based on a condition.
    Path:
      type: array
      items:
        $ref: '#/components/schemas/Arn'
      minItems: 1
      maxItems: 10
    FolderFilterAttribute:
      type: string
      enum:
        - PARENT_FOLDER_ARN
    MemberIdArnPair:
      type: object
      properties:
        MemberId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: The ID of the member.
        MemberArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the member.
      description: An object that consists of the member Amazon Resource Name (ARN) and member ID.
    FolderMemberList:
      type: array
      items:
        $ref: '#/components/schemas/MemberIdArnPair'
      maxItems: 100
    FolderSearchFilterList:
      type: array
      items:
        $ref: '#/components/schemas/FolderSearchFilter'
      maxItems: 100
    FolderSummary:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN).
        FolderId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: The folder ID.
        Name:
          $ref: '#/components/schemas/FolderName'
          description: The display name of the folder.
        FolderType:
          $ref: '#/components/schemas/FolderType'
          description: The type of folder.
        CreatedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the folder was created.
        LastUpdatedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the folder was last updated.
      description: 'A summary of the folder. '
    FolderSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/FolderSummary'
      maxItems: 100
    SessionLifetimeInMinutes:
      type: integer
      minimum: 15
      maximum: 600
    SessionTagList:
      type: array
      items:
        $ref: '#/components/schemas/SessionTag'
      minItems: 1
      maxItems: 50
    GenerateEmbedUrlForAnonymousUserRequest:
      type: object
      required:
        - Namespace
        - AuthorizedResourceArns
        - ExperienceConfiguration
      title: GenerateEmbedUrlForAnonymousUserRequest
      properties:
        SessionLifetimeInMinutes:
          $ref: '#/components/schemas/SessionLifetimeInMinutes'
          description: 'How many minutes the session is valid. The session lifetime must be in [15-600] minutes range.'
        Namespace:
          $ref: '#/components/schemas/Namespace'
          description: 'The Amazon QuickSight namespace that the anonymous user virtually belongs to. If you are not using an Amazon QuickSight custom namespace, set this to <code>default</code>.'
        SessionTags:
          $ref: '#/components/schemas/SessionTagList'
          description: '<p>The session tags used for row-level security. Before you use this parameter, make sure that you have configured the relevant datasets using the <code>DataSet$RowLevelPermissionTagConfiguration</code> parameter so that session tags can be used to provide row-level security.</p> <p>These are not the tags used for the Amazon Web Services resource tagging feature. For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/quicksight-dev-rls-tags.html">Using Row-Level Security (RLS) with Tags</a>.</p>'
        AuthorizedResourceArns:
          $ref: '#/components/schemas/ArnList'
          description: 'The Amazon Resource Names for the Amazon QuickSight resources that the user is authorized to access during the lifetime of the session. If you choose <code>Dashboard</code> embedding experience, pass the list of dashboard ARNs in the account that you want the user to be able to view.'
        ExperienceConfiguration:
          $ref: '#/components/schemas/AnonymousUserEmbeddingExperienceConfiguration'
          description: The configuration of the experience you are embedding.
    RegisteredUserEmbeddingExperienceConfiguration:
      type: object
      properties:
        Dashboard:
          $ref: '#/components/schemas/RegisteredUserDashboardEmbeddingConfiguration'
          description: The configuration details for providing a dashboard embedding experience.
        QuickSightConsole:
          $ref: '#/components/schemas/RegisteredUserQuickSightConsoleEmbeddingConfiguration'
          description: '<p>The configuration details for providing an Amazon QuickSight console embedding experience. This can be used along with custom permissions to restrict access to certain features. For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/customizing-permissions-to-the-quicksight-console.html">Customizing Access to the Amazon QuickSight Console</a> in the <i>Amazon QuickSight User Guide</i>.</p> <p>Use <code>GenerateEmbedUrlForRegisteredUser</code> where you want to provide an authoring portal that allows users to create data sources, datasets, analyses, and dashboards. The users who accesses an embedded Amazon QuickSight console needs to belong to the author or admin security cohort. If you want to restrict permissions to some of these features, add a custom permissions profile to the user with the <code> <a>UpdateUser</a> </code> API operation. Use <code> <a>RegisterUser</a> </code> API operation to add a new user with a custom permission profile attached. For more information, see the following sections in the <i>Amazon QuickSight User Guide</i>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/quicksight/latest/user/embedded-analytics-full-console-for-authenticated-users.html">Embedding the Full Functionality of the Amazon QuickSight Console for Authenticated Users</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/quicksight/latest/user/customizing-permissions-to-the-quicksight-console.html">Customizing Access to the Amazon QuickSight Console</a> </p> </li> </ul> <p>For more information about the high-level steps for embedding and for an interactive demo of the ways you can customize embedding, visit the <a href="https://docs.aws.amazon.com/quicksight/latest/user/quicksight-dev-portal.html">Amazon QuickSight Developer Portal</a>.</p>'
      description: '<p>The type of experience you want to embed. For registered users, you can embed an Amazon QuickSight dashboard or the Amazon QuickSight console.</p> <note> <p>Exactly one of the experience configurations is required. You can choose <code>Dashboard</code> or <code>QuickSightConsole</code>. You cannot choose more than one experience configuraton.</p> </note>'
    GenerateEmbedUrlForRegisteredUserRequest:
      type: object
      required:
        - UserArn
        - ExperienceConfiguration
      title: GenerateEmbedUrlForRegisteredUserRequest
      properties:
        SessionLifetimeInMinutes:
          $ref: '#/components/schemas/SessionLifetimeInMinutes'
          description: 'How many minutes the session is valid. The session lifetime must be in [15-600] minutes range.'
        UserArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name for the registered user.
        ExperienceConfiguration:
          $ref: '#/components/schemas/RegisteredUserEmbeddingExperienceConfiguration'
          description: 'The experience you are embedding. For registered users, you can embed Amazon QuickSight dashboards or the entire Amazon QuickSight console.'
    GeoSpatialCountryCode:
      type: string
      enum:
        - US
    GetDashboardEmbedUrlRequest:
      type: object
      title: GetDashboardEmbedUrlRequest
      properties: {}
    GetSessionEmbedUrlRequest:
      type: object
      title: GetSessionEmbedUrlRequest
      properties: {}
    GroupList:
      type: array
      items:
        $ref: '#/components/schemas/Group'
    GroupMemberList:
      type: array
      items:
        $ref: '#/components/schemas/GroupMember'
    GutterStyle:
      type: object
      properties:
        Show:
          $ref: '#/components/schemas/boolean'
          description: 'This Boolean value controls whether to display a gutter space between sheet tiles. '
      description: The display options for gutter spacing between tiles on a sheet.
    IAMPolicyAssignmentSummary:
      type: object
      properties:
        AssignmentName:
          $ref: '#/components/schemas/IAMPolicyAssignmentName'
          description: Assignment name.
        AssignmentStatus:
          $ref: '#/components/schemas/AssignmentStatus'
          description: Assignment status.
      description: IAM policy assignment summary.
    IAMPolicyAssignmentSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/IAMPolicyAssignmentSummary'
    IdentityName:
      type: string
      pattern: '[\u0020-\u00FF]+'
      minLength: 1
    IdentityType:
      type: string
      enum:
        - IAM
        - QUICKSIGHT
    RowInfo:
      type: object
      properties:
        RowsIngested:
          $ref: '#/components/schemas/long'
          description: The number of rows that were ingested.
        RowsDropped:
          $ref: '#/components/schemas/long'
          description: The number of rows that were not ingested.
      description: Information about rows for a data set SPICE ingestion.
    QueueInfo:
      type: object
      required:
        - WaitingOnIngestion
        - QueuedIngestion
      properties:
        WaitingOnIngestion:
          $ref: '#/components/schemas/string'
          description: The ID of the queued ingestion.
        QueuedIngestion:
          $ref: '#/components/schemas/string'
          description: The ID of the ongoing ingestion. The queued ingestion is waiting for the ongoing ingestion to complete.
      description: Information about a queued dataset SPICE ingestion.
    timestamp:
      type: string
      format: date-time
    long:
      type: integer
    IngestionRequestSource:
      type: string
      enum:
        - MANUAL
        - SCHEDULED
    IngestionRequestType:
      type: string
      enum:
        - INITIAL_INGESTION
        - EDIT
        - INCREMENTAL_REFRESH
        - FULL_REFRESH
    IngestionMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    Ingestions:
      type: array
      items:
        $ref: '#/components/schemas/Ingestion'
    InputColumnDataType:
      type: string
      enum:
        - STRING
        - INTEGER
        - DECIMAL
        - DATETIME
        - BIT
        - BOOLEAN
        - JSON
    InputColumn:
      type: object
      required:
        - Name
        - Type
      properties:
        Name:
          $ref: '#/components/schemas/ColumnName'
          description: The name of this column in the underlying data source.
        Type:
          $ref: '#/components/schemas/InputColumnDataType'
          description: The data type of the column.
      description: Metadata for a column that is used as the input of a transform operation.
    InstanceId:
      type: string
      minLength: 1
      maxLength: 64
    LongList:
      type: array
      items:
        $ref: '#/components/schemas/Long'
    IntegerParameter:
      type: object
      required:
        - Name
        - Values
      properties:
        Name:
          $ref: '#/components/schemas/NonEmptyString'
          description: The name of the integer parameter.
        Values:
          $ref: '#/components/schemas/LongList'
          description: The values for the integer parameter.
      description: An integer parameter.
    SiteBaseUrl:
      type: string
      minLength: 1
      maxLength: 1024
    LogicalTableId:
      type: string
      pattern: '[0-9a-zA-Z-]*'
      minLength: 1
      maxLength: 64
    JoinKeyProperties:
      type: object
      properties:
        UniqueKey:
          $ref: '#/components/schemas/Boolean'
          description: A value that indicates that a row in a table is uniquely identified by the columns in a join key. This is used by QuickSight to optimize query performance.
      description: Properties associated with the columns participating in a join.
    JoinType:
      type: string
      enum:
        - INNER
        - OUTER
        - LEFT
        - RIGHT
    OnClause:
      type: string
      minLength: 1
      maxLength: 512
    JoinInstruction:
      type: object
      required:
        - LeftOperand
        - RightOperand
        - Type
        - OnClause
      properties:
        LeftOperand:
          $ref: '#/components/schemas/LogicalTableId'
          description: The operand on the left side of a join.
        RightOperand:
          $ref: '#/components/schemas/LogicalTableId'
          description: The operand on the right side of a join.
        LeftJoinKeyProperties:
          $ref: '#/components/schemas/JoinKeyProperties'
          description: Join key properties of the left operand.
        RightJoinKeyProperties:
          $ref: '#/components/schemas/JoinKeyProperties'
          description: Join key properties of the right operand.
        Type:
          $ref: '#/components/schemas/JoinType'
          description: The type of join that it is.
        OnClause:
          $ref: '#/components/schemas/OnClause'
          description: The join instructions provided in the <code>ON</code> clause of a join.
      description: 'The instructions associated with a join. '
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    ListAnalysesRequest:
      type: object
      title: ListAnalysesRequest
      properties: {}
    ListDashboardVersionsRequest:
      type: object
      title: ListDashboardVersionsRequest
      properties: {}
    ListDashboardsRequest:
      type: object
      title: ListDashboardsRequest
      properties: {}
    ListDataSetsRequest:
      type: object
      title: ListDataSetsRequest
      properties: {}
    ListDataSourcesRequest:
      type: object
      title: ListDataSourcesRequest
      properties: {}
    ListFolderMembersRequest:
      type: object
      title: ListFolderMembersRequest
      properties: {}
    ListFoldersRequest:
      type: object
      title: ListFoldersRequest
      properties: {}
    ListGroupMembershipsRequest:
      type: object
      title: ListGroupMembershipsRequest
      properties: {}
    ListGroupsRequest:
      type: object
      title: ListGroupsRequest
      properties: {}
    ListIAMPolicyAssignmentsForUserRequest:
      type: object
      title: ListIAMPolicyAssignmentsForUserRequest
      properties: {}
    ListIAMPolicyAssignmentsRequest:
      type: object
      title: ListIAMPolicyAssignmentsRequest
      properties:
        AssignmentStatus:
          $ref: '#/components/schemas/AssignmentStatus'
          description: The status of the assignments.
    ListIngestionsRequest:
      type: object
      title: ListIngestionsRequest
      properties: {}
    ListNamespacesRequest:
      type: object
      title: ListNamespacesRequest
      properties: {}
    Namespaces:
      type: array
      items:
        $ref: '#/components/schemas/NamespaceInfoV2'
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
    ListTemplateAliasesRequest:
      type: object
      title: ListTemplateAliasesRequest
      properties: {}
    TemplateAliasList:
      type: array
      items:
        $ref: '#/components/schemas/TemplateAlias'
      maxItems: 100
    ListTemplateVersionsRequest:
      type: object
      title: ListTemplateVersionsRequest
      properties: {}
    TemplateVersionSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/TemplateVersionSummary'
      maxItems: 100
    ListTemplatesRequest:
      type: object
      title: ListTemplatesRequest
      properties: {}
    TemplateSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/TemplateSummary'
      maxItems: 100
    ListThemeAliasesRequest:
      type: object
      title: ListThemeAliasesRequest
      properties: {}
    ThemeAliasList:
      type: array
      items:
        $ref: '#/components/schemas/ThemeAlias'
      maxItems: 100
    ListThemeVersionsRequest:
      type: object
      title: ListThemeVersionsRequest
      properties: {}
    ThemeVersionSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ThemeVersionSummary'
      maxItems: 100
    ThemeType:
      type: string
      enum:
        - QUICKSIGHT
        - CUSTOM
        - ALL
    ListThemesRequest:
      type: object
      title: ListThemesRequest
      properties: {}
    ThemeSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ThemeSummary'
      maxItems: 100
    ListUserGroupsRequest:
      type: object
      title: ListUserGroupsRequest
      properties: {}
    ListUsersRequest:
      type: object
      title: ListUsersRequest
      properties: {}
    UserList:
      type: array
      items:
        $ref: '#/components/schemas/User'
    LogicalTableAlias:
      type: string
      minLength: 1
      maxLength: 64
    TransformOperationList:
      type: array
      items:
        $ref: '#/components/schemas/TransformOperation'
      minItems: 1
      maxItems: 2048
    LogicalTableSource:
      type: object
      properties:
        JoinInstruction:
          $ref: '#/components/schemas/JoinInstruction'
          description: Specifies the result of a join of two logical tables.
        PhysicalTableId:
          $ref: '#/components/schemas/PhysicalTableId'
          description: Physical table ID.
      description: 'Information about the source of a logical table. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.'
    PhysicalTableId:
      type: string
      pattern: '[0-9a-zA-Z-]*'
      minLength: 1
      maxLength: 64
    S3Bucket:
      type: string
      minLength: 1
      maxLength: 1024
    S3Key:
      type: string
      minLength: 1
      maxLength: 1024
    ManifestFileLocation:
      type: object
      required:
        - Bucket
        - Key
      properties:
        Bucket:
          $ref: '#/components/schemas/S3Bucket'
          description: Amazon S3 bucket.
        Key:
          $ref: '#/components/schemas/S3Key'
          description: Amazon S3 key that identifies an object.
      description: Amazon S3 manifest file location.
    MarginStyle:
      type: object
      properties:
        Show:
          $ref: '#/components/schemas/boolean'
          description: This Boolean value controls whether to display sheet margins.
      description: The display options for margins around the outside edge of sheets.
    NamespaceErrorType:
      type: string
      enum:
        - PERMISSION_DENIED
        - INTERNAL_SERVICE_ERROR
    NamespaceError:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/NamespaceErrorType'
          description: The error type.
        Message:
          $ref: '#/components/schemas/String'
          description: The message for the error.
      description: Errors that occur during namespace creation.
    OptionalPort:
      type: integer
      minimum: 0
      maximum: 65535
    OutputColumn:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/ColumnName'
          description: A display name for the dataset.
        Description:
          $ref: '#/components/schemas/ColumnDescriptiveText'
          description: A description for a column.
        Type:
          $ref: '#/components/schemas/ColumnDataType'
          description: Type.
      description: Output column.
    RelationalTable:
      type: object
      required:
        - DataSourceArn
        - Name
        - InputColumns
      properties:
        DataSourceArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) for the data source.
        Catalog:
          $ref: '#/components/schemas/RelationalTableCatalog'
          description: The catalog associated with a table.
        Schema:
          $ref: '#/components/schemas/RelationalTableSchema'
          description: The schema name. This name applies to certain relational database engines.
        Name:
          $ref: '#/components/schemas/RelationalTableName'
          description: The name of the relational table.
        InputColumns:
          $ref: '#/components/schemas/InputColumnList'
          description: The column schema of the table.
      description: A physical table type for relational data sources.
    S3Source:
      type: object
      required:
        - DataSourceArn
        - InputColumns
      properties:
        DataSourceArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) for the data source.
        UploadSettings:
          $ref: '#/components/schemas/UploadSettings'
          description: Information about the format for the S3 source file or files.
        InputColumns:
          $ref: '#/components/schemas/InputColumnList'
          description: '<p>A physical table type for an S3 data source.</p> <note> <p>For non-JSON files, only <code>STRING</code> data types are supported in input columns.</p> </note>'
      description: A physical table type for an S3 data source.
    PositiveInteger:
      type: integer
      minimum: 1
    Principal:
      type: string
      minLength: 1
      maxLength: 256
    ProjectedColumnList:
      type: array
      items:
        $ref: '#/components/schemas/String'
      minItems: 1
      maxItems: 2000
    ProjectOperation:
      type: object
      required:
        - ProjectedColumns
      properties:
        ProjectedColumns:
          $ref: '#/components/schemas/ProjectedColumnList'
          description: Projected columns.
      description: A transform operation that projects columns. Operations that come after a projection can only refer to projected columns.
    Query:
      type: string
      minLength: 1
      maxLength: 256
    UserRole:
      type: string
      enum:
        - ADMIN
        - AUTHOR
        - READER
        - RESTRICTED_AUTHOR
        - RESTRICTED_READER
    RoleSessionName:
      type: string
      pattern: '[\w+=.@-]*'
      minLength: 2
      maxLength: 64
    RoleName:
      type: string
      pattern: '^[a-zA-Z0-9+=,.@_-]+$'
      minLength: 1
      maxLength: 64
    RegisterUserRequest:
      type: object
      required:
        - IdentityType
        - Email
        - UserRole
      title: RegisterUserRequest
      properties:
        IdentityType:
          $ref: '#/components/schemas/IdentityType'
          description: '<p>Amazon QuickSight supports several ways of managing the identity of users. This parameter accepts two values:</p> <ul> <li> <p> <code>IAM</code>: A user whose identity maps to an existing IAM user or role. </p> </li> <li> <p> <code>QUICKSIGHT</code>: A user whose identity is owned and managed internally by Amazon QuickSight. </p> </li> </ul>'
        Email:
          $ref: '#/components/schemas/String'
          description: The email address of the user that you want to register.
        UserRole:
          $ref: '#/components/schemas/UserRole'
          description: '<p>The Amazon QuickSight role for the user. The user role can be one of the following:</p> <ul> <li> <p> <code>READER</code>: A user who has read-only access to dashboards.</p> </li> <li> <p> <code>AUTHOR</code>: A user who can create data sources, datasets, analyses, and dashboards.</p> </li> <li> <p> <code>ADMIN</code>: A user who is an author, who can also manage Amazon QuickSight settings.</p> </li> <li> <p> <code>RESTRICTED_READER</code>: This role isn''t currently available for use.</p> </li> <li> <p> <code>RESTRICTED_AUTHOR</code>: This role isn''t currently available for use.</p> </li> </ul>'
        IamArn:
          $ref: '#/components/schemas/String'
          description: 'The ARN of the IAM user or role that you are registering with Amazon QuickSight. '
        SessionName:
          $ref: '#/components/schemas/RoleSessionName'
          description: 'You need to use this parameter only when you register one or more users using an assumed IAM role. You don''t need to provide the session name for other scenarios, for example when you are registering an IAM user or an Amazon QuickSight user. You can register multiple users using the same IAM role if each user has a different session name. For more information on assuming IAM roles, see <a href="https://docs.aws.amazon.com/cli/latest/reference/sts/assume-role.html"> <code>assume-role</code> </a> in the <i>AWS CLI Reference.</i> '
        UserName:
          $ref: '#/components/schemas/UserName'
          description: The Amazon QuickSight user name that you want to create for the user you are registering.
        CustomPermissionsName:
          $ref: '#/components/schemas/RoleName'
          description: '<p>(Enterprise edition only) The name of the custom permissions profile that you want to assign to this user. Customized permissions allows you to control a user''s access by restricting access the following operations:</p> <ul> <li> <p>Create and update data sources</p> </li> <li> <p>Create and update datasets</p> </li> <li> <p>Create and update email reports</p> </li> <li> <p>Subscribe to email reports</p> </li> </ul> <p>To add custom permissions to an existing user, use <code> <a>UpdateUser</a> </code> instead.</p> <p>A set of custom permissions includes any combination of these restrictions. Currently, you need to create the profile names for custom permission sets by using the QuickSight console. Then, you use the <code>RegisterUser</code> API operation to assign the named set of permissions to a QuickSight user. </p> <p>QuickSight custom permissions are applied through IAM policies. Therefore, they override the permissions typically granted by assigning QuickSight users to one of the default security cohorts in QuickSight (admin, author, reader).</p> <p>This feature is available only to QuickSight Enterprise edition subscriptions.</p>'
        ExternalLoginFederationProviderType:
          $ref: '#/components/schemas/String'
          description: '<p>The type of supported external login provider that provides identity to let a user federate into Amazon QuickSight with an associated AWS Identity and Access Management (IAM) role. The type of supported external login provider can be one of the following.</p> <ul> <li> <p> <code>COGNITO</code>: Amazon Cognito. The provider URL is cognito-identity.amazonaws.com. When choosing the <code>COGNITO</code> provider type, don’t use the "CustomFederationProviderUrl" parameter which is only needed when the external provider is custom.</p> </li> <li> <p> <code>CUSTOM_OIDC</code>: Custom OpenID Connect (OIDC) provider. When choosing <code>CUSTOM_OIDC</code> type, use the <code>CustomFederationProviderUrl</code> parameter to provide the custom OIDC provider URL.</p> </li> </ul>'
        CustomFederationProviderUrl:
          $ref: '#/components/schemas/String'
          description: The URL of the custom OpenID Connect (OIDC) provider that provides identity to let a user federate into QuickSight with an associated AWS Identity and Access Management (IAM) role. This parameter should only be used when <code>ExternalLoginFederationProviderType</code> parameter is set to <code>CUSTOM_OIDC</code>.
        ExternalLoginId:
          $ref: '#/components/schemas/String'
          description: The identity ID for a user in the external login provider.
    RelationalTableCatalog:
      type: string
      maxLength: 256
    RelationalTableSchema:
      type: string
      maxLength: 64
    RelationalTableName:
      type: string
      minLength: 1
      maxLength: 64
    RenameColumnOperation:
      type: object
      required:
        - ColumnName
        - NewColumnName
      properties:
        ColumnName:
          $ref: '#/components/schemas/ColumnName'
          description: The name of the column to be renamed.
        NewColumnName:
          $ref: '#/components/schemas/ColumnName'
          description: The new name for the column.
      description: A transform operation that renames a column.
    RestoreAnalysisRequest:
      type: object
      title: RestoreAnalysisRequest
      properties: {}
    RowLevelPermissionTagDelimiter:
      type: string
      maxLength: 10
    SessionTagKey:
      type: string
      minLength: 1
      maxLength: 128
    SessionTagValue:
      type: string
      minLength: 1
      maxLength: 256
      format: password
    RowLevelPermissionTagRule:
      type: object
      required:
        - TagKey
        - ColumnName
      properties:
        TagKey:
          $ref: '#/components/schemas/SessionTagKey'
          description: The unique key for a tag.
        ColumnName:
          $ref: '#/components/schemas/String'
          description: The column name that a tag key is assigned to.
        TagMultiValueDelimiter:
          $ref: '#/components/schemas/RowLevelPermissionTagDelimiter'
          description: 'A string that you want to use to delimit the values when you pass the values at run time. For example, you can delimit the values with a comma.'
        MatchAllValue:
          $ref: '#/components/schemas/SessionTagValue'
          description: 'A string that you want to use to filter by all the values in a column in the dataset and don’t want to list the values one by one. For example, you can use an asterisk as your match all value.'
      description: A set of rules associated with a tag.
    UploadSettings:
      type: object
      properties:
        Format:
          $ref: '#/components/schemas/FileFormat'
          description: File format.
        StartFromRow:
          $ref: '#/components/schemas/PositiveInteger'
          description: A row number to start reading data from.
        ContainsHeader:
          $ref: '#/components/schemas/Boolean'
          description: 'Whether the file has a header row, or the files each have a header row.'
        TextQualifier:
          $ref: '#/components/schemas/TextQualifier'
          description: Text qualifier.
        Delimiter:
          $ref: '#/components/schemas/Delimiter'
          description: The delimiter between values in the file.
      description: Information about the format for a source file or files.
    SearchAnalysesRequest:
      type: object
      required:
        - Filters
      title: SearchAnalysesRequest
      properties:
        Filters:
          $ref: '#/components/schemas/AnalysisSearchFilterList'
          description: 'The structure for the search filters that you want to apply to your search. '
        NextToken:
          $ref: '#/components/schemas/String'
          description: A pagination token that can be used in a subsequent request.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return.
    SearchDashboardsRequest:
      type: object
      required:
        - Filters
      title: SearchDashboardsRequest
      properties:
        Filters:
          $ref: '#/components/schemas/DashboardSearchFilterList'
          description: 'The filters to apply to the search. Currently, you can search only by user name, for example, <code>"Filters": [ { "Name": "QUICKSIGHT_USER", "Operator": "StringEquals", "Value": "arn:aws:quicksight:us-east-1:1:user/default/UserName1" } ]</code> '
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'The token for the next set of results, or null if there are no more results.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to be returned per request.
    SearchFoldersRequest:
      type: object
      required:
        - Filters
      title: SearchFoldersRequest
      properties:
        Filters:
          $ref: '#/components/schemas/FolderSearchFilterList'
          description: 'The filters to apply to the search. Currently, you can search only by the parent folder ARN. For example, <code>"Filters": [ { "Name": "PARENT_FOLDER_ARN", "Operator": "StringEquals", "Value": "arn:aws:quicksight:us-east-1:1:folder/folderId" } ]</code>.'
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'The token for the next set of results, or null if there are no more results.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to be returned per request.
    Sheet:
      type: object
      properties:
        SheetId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: The unique identifier associated with a sheet.
        Name:
          $ref: '#/components/schemas/NonEmptyString'
          description: The name of a sheet. This name is displayed on the sheet's tab in the QuickSight console.
      description: 'A <i>sheet</i>, which is an object that contains a set of visuals that are viewed together on one page in Amazon QuickSight. Every analysis and dashboard contains at least one sheet. Each sheet contains at least one visualization widget, for example a chart, pivot table, or narrative insight. Sheets can be associated with other components, such as controls, filters, and so on.'
    TileStyle:
      type: object
      properties:
        Border:
          $ref: '#/components/schemas/BorderStyle'
          description: The border around a tile.
      description: Display options related to tiles on a sheet.
    TileLayoutStyle:
      type: object
      properties:
        Gutter:
          $ref: '#/components/schemas/GutterStyle'
          description: 'The gutter settings that apply between tiles. '
        Margin:
          $ref: '#/components/schemas/MarginStyle'
          description: The margin settings that apply around the outside edge of sheets.
      description: The display options for the layout of tiles on a sheet.
    Warehouse:
      type: string
      maxLength: 128
    StringList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    StringParameter:
      type: object
      required:
        - Name
        - Values
      properties:
        Name:
          $ref: '#/components/schemas/NonEmptyString'
          description: A display name for a string parameter.
        Values:
          $ref: '#/components/schemas/StringList'
          description: The values of a string parameter.
      description: A string parameter.
    TagValue:
      type: string
      minLength: 1
      maxLength: 256
    TagColumnOperation:
      type: object
      required:
        - ColumnName
        - Tags
      properties:
        ColumnName:
          $ref: '#/components/schemas/ColumnName'
          description: The column that this operation acts on.
        Tags:
          $ref: '#/components/schemas/ColumnTagList'
          description: '<p>The dataset column tag, currently only used for geospatial type tagging.</p> <note> <p>This is not tags for the Amazon Web Services tagging feature.</p> </note>'
      description: A transform operation that tags a column with additional information.
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      minItems: 1
      maxItems: 200
    TagResourceRequest:
      type: object
      required:
        - Tags
      title: TagResourceRequest
      properties:
        Tags:
          $ref: '#/components/schemas/TagList'
          description: Contains a map of the key-value pairs for the resource tag or tags assigned to the resource.
    TemplateVersion:
      type: object
      properties:
        CreatedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that this template version was created.
        Errors:
          $ref: '#/components/schemas/TemplateErrorList'
          description: Errors associated with this template version.
        VersionNumber:
          $ref: '#/components/schemas/VersionNumber'
          description: The version number of the template version.
        Status:
          $ref: '#/components/schemas/ResourceStatus'
          description: The HTTP status of the request.
        DataSetConfigurations:
          $ref: '#/components/schemas/DataSetConfigurationList'
          description: Schema of the dataset identified by the placeholder. Any dashboard created from this template should be bound to new datasets matching the same schema described through this API operation.
        Description:
          $ref: '#/components/schemas/VersionDescription'
          description: The description of the template.
        SourceEntityArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of an analysis or template that was used to create this template.
        ThemeArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the theme associated with this version of the template.
        Sheets:
          $ref: '#/components/schemas/SheetList'
          description: A list of the associated sheets with the unique identifier and name of each sheet.
      description: A version of a template.
    TemplateErrorType:
      type: string
      enum:
        - SOURCE_NOT_FOUND
        - DATA_SET_NOT_FOUND
        - INTERNAL_FAILURE
        - ACCESS_DENIED
    TemplateError:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/TemplateErrorType'
          description: Type of error.
        Message:
          $ref: '#/components/schemas/NonEmptyString'
          description: Description of the error type.
      description: List of errors that occurred when the template version creation failed.
    TemplateErrorList:
      type: array
      items:
        $ref: '#/components/schemas/TemplateError'
      minItems: 1
    TemplateSummary:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: A summary of a template.
        TemplateId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: The ID of the template. This ID is unique per Amazon Web Services Region; for each Amazon Web Services account;.
        Name:
          $ref: '#/components/schemas/TemplateName'
          description: A display name for the template.
        LatestVersionNumber:
          $ref: '#/components/schemas/VersionNumber'
          description: A structure containing a list of version numbers for the template summary.
        CreatedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The last time that this template was created.
        LastUpdatedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The last time that this template was updated.
      description: The template summary.
    TemplateVersionSummary:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the template version.
        VersionNumber:
          $ref: '#/components/schemas/VersionNumber'
          description: The version number of the template version.
        CreatedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that this template version was created.
        Status:
          $ref: '#/components/schemas/ResourceStatus'
          description: The status of the template version.
        Description:
          $ref: '#/components/schemas/VersionDescription'
          description: The description of the template version.
      description: The template version.
    TextQualifier:
      type: string
      enum:
        - DOUBLE_QUOTE
        - SINGLE_QUOTE
    ThemeVersion:
      type: object
      properties:
        VersionNumber:
          $ref: '#/components/schemas/VersionNumber'
          description: The version number of the theme.
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource.
        Description:
          $ref: '#/components/schemas/VersionDescription'
          description: The description of the theme.
        BaseThemeId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: The Amazon QuickSight-defined ID of the theme that a custom theme inherits from. All themes initially inherit from a default QuickSight theme.
        CreatedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time that this theme version was created.
        Configuration:
          $ref: '#/components/schemas/ThemeConfiguration'
          description: 'The theme configuration, which contains all the theme display properties.'
        Errors:
          $ref: '#/components/schemas/ThemeErrorList'
          description: Errors associated with the theme.
        Status:
          $ref: '#/components/schemas/ResourceStatus'
          description: The status of the theme version.
      description: A version of a theme.
    ThemeErrorType:
      type: string
      enum:
        - INTERNAL_FAILURE
    ThemeError:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/ThemeErrorType'
          description: The type of error.
        Message:
          $ref: '#/components/schemas/NonEmptyString'
          description: The error message.
      description: Theme error.
    ThemeErrorList:
      type: array
      items:
        $ref: '#/components/schemas/ThemeError'
      minItems: 1
    ThemeSummary:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource.
        Name:
          $ref: '#/components/schemas/ThemeName'
          description: the display name for the theme.
        ThemeId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: The ID of the theme. This ID is unique per Amazon Web Services Region; for each Amazon Web Services account;.
        LatestVersionNumber:
          $ref: '#/components/schemas/VersionNumber'
          description: 'The latest version number for the theme. '
        CreatedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time that this theme was created.
        LastUpdatedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The last date and time that this theme was updated.
      description: The theme summary.
    ThemeVersionSummary:
      type: object
      properties:
        VersionNumber:
          $ref: '#/components/schemas/VersionNumber'
          description: The version number of the theme version.
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the theme version.
        Description:
          $ref: '#/components/schemas/VersionDescription'
          description: The description of the theme version.
        CreatedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time that this theme version was created.
        Status:
          $ref: '#/components/schemas/ResourceStatus'
          description: The status of the theme version.
      description: The theme version.
    TransformOperation:
      type: object
      properties:
        ProjectOperation:
          $ref: '#/components/schemas/ProjectOperation'
          description: An operation that projects columns. Operations that come after a projection can only refer to projected columns.
        FilterOperation:
          $ref: '#/components/schemas/FilterOperation'
          description: An operation that filters rows based on some condition.
        CreateColumnsOperation:
          $ref: '#/components/schemas/CreateColumnsOperation'
          description: An operation that creates calculated columns. Columns created in one such operation form a lexical closure.
        RenameColumnOperation:
          $ref: '#/components/schemas/RenameColumnOperation'
          description: An operation that renames a column.
        CastColumnTypeOperation:
          $ref: '#/components/schemas/CastColumnTypeOperation'
          description: A transform operation that casts a column to a different type.
        TagColumnOperation:
          $ref: '#/components/schemas/TagColumnOperation'
          description: An operation that tags a column with additional information.
      description: 'A data transformation on a logical table. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.'
    UntagResourceRequest:
      type: object
      title: UntagResourceRequest
      properties: {}
    UpdateAccountCustomizationRequest:
      type: object
      required:
        - AccountCustomization
      title: UpdateAccountCustomizationRequest
      properties:
        AccountCustomization:
          $ref: '#/components/schemas/AccountCustomization'
          description: 'The QuickSight customizations you''re updating in the current Amazon Web Services Region;. '
    UpdateAccountSettingsRequest:
      type: object
      required:
        - DefaultNamespace
      title: UpdateAccountSettingsRequest
      properties:
        DefaultNamespace:
          $ref: '#/components/schemas/Namespace'
          description: 'The default namespace for this Amazon Web Services account;. Currently, the default is <code>default</code>. Identity and Access Management (IAM) users that register for the first time with QuickSight provide an email that becomes associated with the default namespace.'
        NotificationEmail:
          $ref: '#/components/schemas/String'
          description: The email address that you want QuickSight to send notifications to regarding your Amazon Web Services account; or QuickSight subscription.
    UpdateResourcePermissionList:
      type: array
      items:
        $ref: '#/components/schemas/ResourcePermission'
      maxItems: 100
    UpdateAnalysisPermissionsRequest:
      type: object
      title: UpdateAnalysisPermissionsRequest
      properties:
        GrantPermissions:
          $ref: '#/components/schemas/UpdateResourcePermissionList'
          description: A structure that describes the permissions to add and the principal to add them to.
        RevokePermissions:
          $ref: '#/components/schemas/UpdateResourcePermissionList'
          description: A structure that describes the permissions to remove and the principal to remove them from.
    UpdateAnalysisRequest:
      type: object
      required:
        - Name
        - SourceEntity
      title: UpdateAnalysisRequest
      properties:
        Name:
          $ref: '#/components/schemas/AnalysisName'
          description: A descriptive name for the analysis that you're updating. This name displays for the analysis in the QuickSight console.
        Parameters:
          $ref: '#/components/schemas/Parameters'
          description: 'The parameter names and override values that you want to use. An analysis can have any parameter type, and some parameters might accept multiple values. '
        SourceEntity:
          $ref: '#/components/schemas/AnalysisSourceEntity'
          description: A source entity to use for the analysis that you're updating. This metadata structure contains details that describe a source template and one or more datasets.
        ThemeArn:
          $ref: '#/components/schemas/Arn'
          description: 'The Amazon Resource Name (ARN) for the theme to apply to the analysis that you''re creating. To see the theme in the QuickSight console, make sure that you have access to it.'
    UpdateDashboardPermissionsRequest:
      type: object
      title: UpdateDashboardPermissionsRequest
      properties:
        GrantPermissions:
          $ref: '#/components/schemas/UpdateResourcePermissionList'
          description: The permissions that you want to grant on this resource.
        RevokePermissions:
          $ref: '#/components/schemas/UpdateResourcePermissionList'
          description: The permissions that you want to revoke from this resource.
    UpdateDashboardPublishedVersionRequest:
      type: object
      title: UpdateDashboardPublishedVersionRequest
      properties: {}
    UpdateDashboardRequest:
      type: object
      required:
        - Name
        - SourceEntity
      title: UpdateDashboardRequest
      properties:
        Name:
          $ref: '#/components/schemas/DashboardName'
          description: The display name of the dashboard.
        SourceEntity:
          $ref: '#/components/schemas/DashboardSourceEntity'
          description: '<p>The entity that you are using as a source when you update the dashboard. In <code>SourceEntity</code>, you specify the type of object you''re using as source. You can only update a dashboard from a template, so you use a <code>SourceTemplate</code> entity. If you need to update a dashboard from an analysis, first convert the analysis to a template by using the <a>CreateTemplate</a> API operation. For <code>SourceTemplate</code>, specify the Amazon Resource Name (ARN) of the source template. The <code>SourceTemplate</code> ARN can contain any Amazon Web Services account; and any QuickSight-supported Amazon Web Services Region;. </p> <p>Use the <code>DataSetReferences</code> entity within <code>SourceTemplate</code> to list the replacement datasets for the placeholders listed in the original. The schema in each dataset must match its placeholder. </p>'
        Parameters:
          $ref: '#/components/schemas/Parameters'
          description: 'A structure that contains the parameters of the dashboard. These are parameter overrides for a dashboard. A dashboard can have any type of parameters, and some parameters might accept multiple values.'
        VersionDescription:
          $ref: '#/components/schemas/VersionDescription'
          description: A description for the first version of the dashboard being created.
        DashboardPublishOptions:
          $ref: '#/components/schemas/DashboardPublishOptions'
          description: '<p>Options for publishing the dashboard when you create it:</p> <ul> <li> <p> <code>AvailabilityStatus</code> for <code>AdHocFilteringOption</code> - This status can be either <code>ENABLED</code> or <code>DISABLED</code>. When this is set to <code>DISABLED</code>, QuickSight disables the left filter pane on the published dashboard, which can be used for ad hoc (one-time) filtering. This option is <code>ENABLED</code> by default. </p> </li> <li> <p> <code>AvailabilityStatus</code> for <code>ExportToCSVOption</code> - This status can be either <code>ENABLED</code> or <code>DISABLED</code>. The visual option to export data to .CSV format isn''t enabled when this is set to <code>DISABLED</code>. This option is <code>ENABLED</code> by default. </p> </li> <li> <p> <code>VisibilityState</code> for <code>SheetControlsOption</code> - This visibility state can be either <code>COLLAPSED</code> or <code>EXPANDED</code>. This option is <code>COLLAPSED</code> by default. </p> </li> </ul>'
        ThemeArn:
          $ref: '#/components/schemas/Arn'
          description: 'The Amazon Resource Name (ARN) of the theme that is being used for this dashboard. If you add a value for this field, it overrides the value that was originally associated with the entity. The theme ARN must exist in the same Amazon Web Services account; where you create the dashboard.'
    UpdateDataSetPermissionsRequest:
      type: object
      title: UpdateDataSetPermissionsRequest
      properties:
        GrantPermissions:
          $ref: '#/components/schemas/ResourcePermissionList'
          description: The resource permissions that you want to grant to the dataset.
        RevokePermissions:
          $ref: '#/components/schemas/ResourcePermissionList'
          description: The resource permissions that you want to revoke from the dataset.
    UpdateDataSetRequest:
      type: object
      required:
        - Name
        - PhysicalTableMap
        - ImportMode
      title: UpdateDataSetRequest
      properties:
        Name:
          $ref: '#/components/schemas/ResourceName'
          description: The display name for the dataset.
        PhysicalTableMap:
          $ref: '#/components/schemas/PhysicalTableMap'
          description: Declares the physical tables that are available in the underlying data sources.
        LogicalTableMap:
          $ref: '#/components/schemas/LogicalTableMap'
          description: Configures the combination and transformation of the data from the physical tables.
        ImportMode:
          $ref: '#/components/schemas/DataSetImportMode'
          description: Indicates whether you want to import the data into SPICE.
        ColumnGroups:
          $ref: '#/components/schemas/ColumnGroupList'
          description: 'Groupings of columns that work together in certain QuickSight features. Currently, only geospatial hierarchy is supported.'
        FieldFolders:
          $ref: '#/components/schemas/FieldFolderMap'
          description: The folder that contains fields and nested subfolders for your dataset.
        RowLevelPermissionDataSet:
          $ref: '#/components/schemas/RowLevelPermissionDataSet'
          description: The row-level security configuration for the data you want to create.
        RowLevelPermissionTagConfiguration:
          $ref: '#/components/schemas/RowLevelPermissionTagConfiguration'
          description: The configuration of tags on a dataset to set row-level security. Row-level security tags are currently supported for anonymous embedding only.
        ColumnLevelPermissionRules:
          $ref: '#/components/schemas/ColumnLevelPermissionRuleList'
          description: A set of one or more definitions of a <code> <a>ColumnLevelPermissionRule</a> </code>.
    UpdateDataSourcePermissionsRequest:
      type: object
      title: UpdateDataSourcePermissionsRequest
      properties:
        GrantPermissions:
          $ref: '#/components/schemas/ResourcePermissionList'
          description: A list of resource permissions that you want to grant on the data source.
        RevokePermissions:
          $ref: '#/components/schemas/ResourcePermissionList'
          description: A list of resource permissions that you want to revoke on the data source.
    UpdateDataSourceRequest:
      type: object
      required:
        - Name
      title: UpdateDataSourceRequest
      properties:
        Name:
          $ref: '#/components/schemas/ResourceName'
          description: A display name for the data source.
        DataSourceParameters:
          $ref: '#/components/schemas/DataSourceParameters'
          description: The parameters that QuickSight uses to connect to your underlying source.
        Credentials:
          $ref: '#/components/schemas/DataSourceCredentials'
          description: 'The credentials that QuickSight that uses to connect to your underlying source. Currently, only credentials based on user name and password are supported.'
        VpcConnectionProperties:
          $ref: '#/components/schemas/VpcConnectionProperties'
          description: Use this parameter only when you want QuickSight to use a VPC connection when connecting to your underlying source.
        SslProperties:
          $ref: '#/components/schemas/SslProperties'
          description: Secure Socket Layer (SSL) properties that apply when QuickSight connects to your underlying source.
    UpdateFolderPermissionsRequest:
      type: object
      title: UpdateFolderPermissionsRequest
      properties:
        GrantPermissions:
          $ref: '#/components/schemas/ResourcePermissionList'
          description: The permissions that you want to grant on a resource.
        RevokePermissions:
          $ref: '#/components/schemas/ResourcePermissionList'
          description: The permissions that you want to revoke from a resource.
    UpdateFolderRequest:
      type: object
      required:
        - Name
      title: UpdateFolderRequest
      properties:
        Name:
          $ref: '#/components/schemas/FolderName'
          description: The name of the folder.
    UpdateGroupRequest:
      type: object
      title: UpdateGroupRequest
      properties:
        Description:
          $ref: '#/components/schemas/GroupDescription'
          description: The description for the group that you want to update.
    UpdateIAMPolicyAssignmentRequest:
      type: object
      title: UpdateIAMPolicyAssignmentRequest
      properties:
        AssignmentStatus:
          $ref: '#/components/schemas/AssignmentStatus'
          description: '<p>The status of the assignment. Possible values are as follows:</p> <ul> <li> <p> <code>ENABLED</code> - Anything specified in this assignment is used when creating the data source.</p> </li> <li> <p> <code>DISABLED</code> - This assignment isn''t used when creating the data source.</p> </li> <li> <p> <code>DRAFT</code> - This assignment is an unfinished draft and isn''t used when creating the data source.</p> </li> </ul>'
        PolicyArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN for the IAM policy to apply to the QuickSight users and groups specified in this assignment.
        Identities:
          $ref: '#/components/schemas/IdentityMap'
          description: 'The QuickSight users, groups, or both that you want to assign the policy to.'
    UpdateTemplateAliasRequest:
      type: object
      required:
        - TemplateVersionNumber
      title: UpdateTemplateAliasRequest
      properties:
        TemplateVersionNumber:
          $ref: '#/components/schemas/VersionNumber'
          description: The version number of the template.
    UpdateTemplatePermissionsRequest:
      type: object
      title: UpdateTemplatePermissionsRequest
      properties:
        GrantPermissions:
          $ref: '#/components/schemas/UpdateResourcePermissionList'
          description: 'A list of resource permissions to be granted on the template. '
        RevokePermissions:
          $ref: '#/components/schemas/UpdateResourcePermissionList'
          description: 'A list of resource permissions to be revoked from the template. '
    UpdateTemplateRequest:
      type: object
      required:
        - SourceEntity
      title: UpdateTemplateRequest
      properties:
        SourceEntity:
          $ref: '#/components/schemas/TemplateSourceEntity'
          description: '<p>The entity that you are using as a source when you update the template. In <code>SourceEntity</code>, you specify the type of object you''re using as source: <code>SourceTemplate</code> for a template or <code>SourceAnalysis</code> for an analysis. Both of these require an Amazon Resource Name (ARN). For <code>SourceTemplate</code>, specify the ARN of the source template. For <code>SourceAnalysis</code>, specify the ARN of the source analysis. The <code>SourceTemplate</code> ARN can contain any Amazon Web Services account; and any QuickSight-supported Amazon Web Services Region;. </p> <p>Use the <code>DataSetReferences</code> entity within <code>SourceTemplate</code> or <code>SourceAnalysis</code> to list the replacement datasets for the placeholders listed in the original. The schema in each dataset must match its placeholder. </p>'
        VersionDescription:
          $ref: '#/components/schemas/VersionDescription'
          description: 'A description of the current template version that is being updated. Every time you call <code>UpdateTemplate</code>, you create a new version of the template. Each version of the template maintains a description of the version in the <code>VersionDescription</code> field.'
        Name:
          $ref: '#/components/schemas/TemplateName'
          description: The name for the template.
    UpdateThemeAliasRequest:
      type: object
      required:
        - ThemeVersionNumber
      title: UpdateThemeAliasRequest
      properties:
        ThemeVersionNumber:
          $ref: '#/components/schemas/VersionNumber'
          description: The version number of the theme that the alias should reference.
    UpdateThemePermissionsRequest:
      type: object
      title: UpdateThemePermissionsRequest
      properties:
        GrantPermissions:
          $ref: '#/components/schemas/UpdateResourcePermissionList'
          description: A list of resource permissions to be granted for the theme.
        RevokePermissions:
          $ref: '#/components/schemas/UpdateResourcePermissionList'
          description: A list of resource permissions to be revoked from the theme.
    UpdateThemeRequest:
      type: object
      required:
        - BaseThemeId
      title: UpdateThemeRequest
      properties:
        Name:
          $ref: '#/components/schemas/ThemeName'
          description: The name for the theme.
        BaseThemeId:
          $ref: '#/components/schemas/RestrictiveResourceId'
          description: 'The theme ID, defined by Amazon QuickSight, that a custom theme inherits from. All themes initially inherit from a default Amazon QuickSight theme.'
        VersionDescription:
          $ref: '#/components/schemas/VersionDescription'
          description: 'A description of the theme version that you''re updating Every time that you call <code>UpdateTheme</code>, you create a new version of the theme. Each version of the theme maintains a description of the version in <code>VersionDescription</code>.'
        Configuration:
          $ref: '#/components/schemas/ThemeConfiguration'
          description: 'The theme configuration, which contains the theme display properties.'
    UpdateUserRequest:
      type: object
      required:
        - Email
        - Role
      title: UpdateUserRequest
      properties:
        Email:
          $ref: '#/components/schemas/String'
          description: The email address of the user that you want to update.
        Role:
          $ref: '#/components/schemas/UserRole'
          description: '<p>The Amazon QuickSight role of the user. The role can be one of the following default security cohorts:</p> <ul> <li> <p> <code>READER</code>: A user who has read-only access to dashboards.</p> </li> <li> <p> <code>AUTHOR</code>: A user who can create data sources, datasets, analyses, and dashboards.</p> </li> <li> <p> <code>ADMIN</code>: A user who is an author, who can also manage Amazon QuickSight settings.</p> </li> </ul> <p>The name of the QuickSight role is invisible to the user except for the console screens dealing with permissions.</p>'
        CustomPermissionsName:
          $ref: '#/components/schemas/RoleName'
          description: '<p>(Enterprise edition only) The name of the custom permissions profile that you want to assign to this user. Customized permissions allows you to control a user''s access by restricting access the following operations:</p> <ul> <li> <p>Create and update data sources</p> </li> <li> <p>Create and update datasets</p> </li> <li> <p>Create and update email reports</p> </li> <li> <p>Subscribe to email reports</p> </li> </ul> <p>A set of custom permissions includes any combination of these restrictions. Currently, you need to create the profile names for custom permission sets by using the QuickSight console. Then, you use the <code>RegisterUser</code> API operation to assign the named set of permissions to a QuickSight user. </p> <p>QuickSight custom permissions are applied through IAM policies. Therefore, they override the permissions typically granted by assigning QuickSight users to one of the default security cohorts in QuickSight (admin, author, reader).</p> <p>This feature is available only to QuickSight Enterprise edition subscriptions.</p>'
        UnapplyCustomPermissions:
          $ref: '#/components/schemas/Boolean'
          description: A flag that you use to indicate that you want to remove all custom permissions from this user. Using this parameter resets the user to the state it was in before a custom permissions profile was applied. This parameter defaults to NULL and it doesn't accept any other value.
        ExternalLoginFederationProviderType:
          $ref: '#/components/schemas/String'
          description: '<p>The type of supported external login provider that provides identity to let a user federate into QuickSight with an associated AWS Identity and Access Management (IAM) role. The type of supported external login provider can be one of the following.</p> <ul> <li> <p> <code>COGNITO</code>: Amazon Cognito. The provider URL is cognito-identity.amazonaws.com. When choosing the <code>COGNITO</code> provider type, don’t use the "CustomFederationProviderUrl" parameter which is only needed when the external provider is custom.</p> </li> <li> <p> <code>CUSTOM_OIDC</code>: Custom OpenID Connect (OIDC) provider. When choosing <code>CUSTOM_OIDC</code> type, use the <code>CustomFederationProviderUrl</code> parameter to provide the custom OIDC provider URL.</p> </li> <li> <p> <code>NONE</code>: This clears all the previously saved external login information for a user. Use <code> <a>DescribeUser</a> </code> API to check the external login information.</p> </li> </ul>'
        CustomFederationProviderUrl:
          $ref: '#/components/schemas/String'
          description: The URL of the custom OpenID Connect (OIDC) provider that provides identity to let a user federate into QuickSight with an associated AWS Identity and Access Management (IAM) role. This parameter should only be used when <code>ExternalLoginFederationProviderType</code> parameter is set to <code>CUSTOM_OIDC</code>.
        ExternalLoginId:
          $ref: '#/components/schemas/String'
          description: The identity ID for a user in the external login provider.
security:
  - hmac: []
