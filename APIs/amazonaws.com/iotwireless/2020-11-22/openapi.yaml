openapi: 3.0.0
info:
  version: '2020-11-22'
  x-release: v4
  title: AWS IoT Wireless
  description: AWS IoT Wireless API documentation
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: iotwireless
  x-aws-signingName: iotwireless
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/iotwireless-2020-11-22.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/iotwireless/'
servers:
  - url: 'http://api.iotwireless.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS IoT Wireless multi-region endpoint
  - url: 'https://api.iotwireless.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS IoT Wireless multi-region endpoint
  - url: 'http://api.iotwireless.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS IoT Wireless endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://api.iotwireless.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS IoT Wireless endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /partner-accounts:
    post:
      operationId: AssociateAwsAccountWithPartnerAccount
      description: Associates a partner account with your AWS account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateAwsAccountWithPartnerAccountResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Sidewalk
              properties:
                Sidewalk:
                  description: Information about a Sidewalk account.
                  type: object
                  properties:
                    AmazonId:
                      $ref: '#/components/schemas/AmazonId'
                      description: The Sidewalk Amazon ID.
                    AppServerPrivateKey:
                      $ref: '#/components/schemas/AppServerPrivateKey'
                      description: The Sidewalk application server private key.
                ClientRequestToken:
                  description: 'Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request. '
                  type: string
                  pattern: '^[a-zA-Z0-9-_]+$'
                  minLength: 1
                  maxLength: 64
                Tags:
                  description: The tags to attach to the specified resource. Tags are metadata that you can use to manage a resource.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                  minItems: 0
                  maxItems: 200
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListPartnerAccounts
      description: Lists the partner accounts associated with your AWS account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPartnerAccountsResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: 'To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.'
          schema:
            type: string
            maxLength: 4096
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return in this operation.
          schema:
            type: integer
            minimum: 0
            maximum: 250
  '/wireless-devices/{Id}/thing':
    put:
      operationId: AssociateWirelessDeviceWithThing
      description: Associates a wireless device with a thing.
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateWirelessDeviceWithThingResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the resource to update.
          schema:
            type: string
            maxLength: 256
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ThingArn
              properties:
                ThingArn:
                  description: The ARN of the thing to associate with the wireless device.
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DisassociateWirelessDeviceFromThing
      description: Disassociates a wireless device from its currently associated thing.
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateWirelessDeviceFromThingResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the resource to update.
          schema:
            type: string
            maxLength: 256
  '/wireless-gateways/{Id}/certificate':
    put:
      operationId: AssociateWirelessGatewayWithCertificate
      description: Associates a wireless gateway with a certificate.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateWirelessGatewayWithCertificateResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the resource to update.
          schema:
            type: string
            maxLength: 256
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - IotCertificateId
              properties:
                IotCertificateId:
                  description: The ID of the certificate to associate with the wireless gateway.
                  type: string
                  minLength: 1
                  maxLength: 4096
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DisassociateWirelessGatewayFromCertificate
      description: Disassociates a wireless gateway from its currently associated certificate.
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateWirelessGatewayFromCertificateResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the resource to update.
          schema:
            type: string
            maxLength: 256
    get:
      operationId: GetWirelessGatewayCertificate
      description: Gets the ID of the certificate that is currently associated with a wireless gateway.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWirelessGatewayCertificateResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the resource to get.
          schema:
            type: string
            maxLength: 256
  '/wireless-gateways/{Id}/thing':
    put:
      operationId: AssociateWirelessGatewayWithThing
      description: Associates a wireless gateway with a thing.
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateWirelessGatewayWithThingResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the resource to update.
          schema:
            type: string
            maxLength: 256
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ThingArn
              properties:
                ThingArn:
                  description: The ARN of the thing to associate with the wireless gateway.
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DisassociateWirelessGatewayFromThing
      description: Disassociates a wireless gateway from its currently associated thing.
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateWirelessGatewayFromThingResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the resource to update.
          schema:
            type: string
            maxLength: 256
  /destinations:
    post:
      operationId: CreateDestination
      description: Creates a new destination that maps a device message to an AWS IoT rule.
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDestinationResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
                - ExpressionType
                - Expression
                - RoleArn
              properties:
                Name:
                  description: The name of the new resource.
                  type: string
                  pattern: '[a-zA-Z0-9-_]+'
                  maxLength: 128
                ExpressionType:
                  description: The type of value in <code>Expression</code>.
                  type: string
                  enum:
                    - RuleName
                    - MqttTopic
                Expression:
                  description: The rule name or topic rule to send messages to.
                  type: string
                  maxLength: 2048
                Description:
                  description: The description of the new resource.
                  type: string
                  maxLength: 2048
                RoleArn:
                  description: The ARN of the IAM Role that authorizes the destination.
                  type: string
                  minLength: 20
                  maxLength: 2048
                Tags:
                  description: The tags to attach to the new destination. Tags are metadata that you can use to manage a resource.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                  minItems: 0
                  maxItems: 200
                ClientRequestToken:
                  description: 'Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request. '
                  type: string
                  pattern: '^[a-zA-Z0-9-_]+$'
                  minLength: 1
                  maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListDestinations
      description: Lists the destinations registered to your AWS account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDestinationsResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return in this operation.
          schema:
            type: integer
            minimum: 0
            maximum: 250
        - name: nextToken
          in: query
          required: false
          description: 'To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.'
          schema:
            type: string
            maxLength: 4096
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /device-profiles:
    post:
      operationId: CreateDeviceProfile
      description: Creates a new device profile.
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDeviceProfileResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  description: The name of the new resource.
                  type: string
                  maxLength: 256
                LoRaWAN:
                  description: LoRaWANDeviceProfile object.
                  type: object
                  properties:
                    SupportsClassB:
                      $ref: '#/components/schemas/SupportsClassB'
                      description: The SupportsClassB value.
                    ClassBTimeout:
                      $ref: '#/components/schemas/ClassBTimeout'
                      description: The ClassBTimeout value.
                    PingSlotPeriod:
                      $ref: '#/components/schemas/PingSlotPeriod'
                      description: The PingSlotPeriod value.
                    PingSlotDr:
                      $ref: '#/components/schemas/PingSlotDr'
                      description: The PingSlotDR value.
                    PingSlotFreq:
                      $ref: '#/components/schemas/PingSlotFreq'
                      description: The PingSlotFreq value.
                    SupportsClassC:
                      $ref: '#/components/schemas/SupportsClassC'
                      description: The SupportsClassC value.
                    ClassCTimeout:
                      $ref: '#/components/schemas/ClassCTimeout'
                      description: The ClassCTimeout value.
                    MacVersion:
                      $ref: '#/components/schemas/MacVersion'
                      description: The MAC version (such as OTAA 1.1 or OTAA 1.0.3) to use with this device profile.
                    RegParamsRevision:
                      $ref: '#/components/schemas/RegParamsRevision'
                      description: The version of regional parameters.
                    RxDelay1:
                      $ref: '#/components/schemas/RxDelay1'
                      description: The RXDelay1 value.
                    RxDrOffset1:
                      $ref: '#/components/schemas/RxDrOffset1'
                      description: The RXDROffset1 value.
                    RxDataRate2:
                      $ref: '#/components/schemas/RxDataRate2'
                      description: The RXDataRate2 value.
                    RxFreq2:
                      $ref: '#/components/schemas/RxFreq2'
                      description: The RXFreq2 value.
                    FactoryPresetFreqsList:
                      $ref: '#/components/schemas/FactoryPresetFreqsList'
                      description: The list of values that make up the FactoryPresetFreqs value.
                    MaxEirp:
                      $ref: '#/components/schemas/MaxEirp'
                      description: The MaxEIRP value.
                    MaxDutyCycle:
                      $ref: '#/components/schemas/MaxDutyCycle'
                      description: The MaxDutyCycle value.
                    RfRegion:
                      $ref: '#/components/schemas/RfRegion'
                      description: The frequency band (RFRegion) value.
                    SupportsJoin:
                      $ref: '#/components/schemas/SupportsJoin'
                      description: The SupportsJoin value.
                    Supports32BitFCnt:
                      $ref: '#/components/schemas/Supports32BitFCnt'
                      description: The Supports32BitFCnt value.
                Tags:
                  description: The tags to attach to the new device profile. Tags are metadata that you can use to manage a resource.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                  minItems: 0
                  maxItems: 200
                ClientRequestToken:
                  description: 'Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request. '
                  type: string
                  pattern: '^[a-zA-Z0-9-_]+$'
                  minLength: 1
                  maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListDeviceProfiles
      description: Lists the device profiles registered to your AWS account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDeviceProfilesResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: 'To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.'
          schema:
            type: string
            maxLength: 4096
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return in this operation.
          schema:
            type: integer
            minimum: 0
            maximum: 250
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /service-profiles:
    post:
      operationId: CreateServiceProfile
      description: Creates a new service profile.
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateServiceProfileResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  description: The name of the new resource.
                  type: string
                  maxLength: 256
                LoRaWAN:
                  description: LoRaWANServiceProfile object.
                  type: object
                  properties:
                    AddGwMetadata:
                      $ref: '#/components/schemas/AddGwMetadata'
                      description: The AddGWMetaData value.
                Tags:
                  description: The tags to attach to the new service profile. Tags are metadata that you can use to manage a resource.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                  minItems: 0
                  maxItems: 200
                ClientRequestToken:
                  description: 'Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request. '
                  type: string
                  pattern: '^[a-zA-Z0-9-_]+$'
                  minLength: 1
                  maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListServiceProfiles
      description: Lists the service profiles registered to your AWS account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServiceProfilesResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: 'To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.'
          schema:
            type: string
            maxLength: 4096
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return in this operation.
          schema:
            type: integer
            minimum: 0
            maximum: 250
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /wireless-devices:
    post:
      operationId: CreateWirelessDevice
      description: Provisions a wireless device.
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWirelessDeviceResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Type
                - DestinationName
              properties:
                Type:
                  description: The wireless device type.
                  type: string
                  enum:
                    - Sidewalk
                    - LoRaWAN
                Name:
                  description: The name of the new resource.
                  type: string
                  maxLength: 256
                Description:
                  description: The description of the new resource.
                  type: string
                  maxLength: 2048
                DestinationName:
                  description: The name of the destination to assign to the new wireless device.
                  type: string
                  pattern: '[a-zA-Z0-9-_]+'
                  maxLength: 128
                ClientRequestToken:
                  description: 'Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request. '
                  type: string
                  pattern: '^[a-zA-Z0-9-_]+$'
                  minLength: 1
                  maxLength: 64
                LoRaWAN:
                  description: LoRaWAN object for create functions.
                  type: object
                  properties:
                    DevEui:
                      $ref: '#/components/schemas/DevEui'
                      description: The DevEUI value.
                    DeviceProfileId:
                      $ref: '#/components/schemas/DeviceProfileId'
                      description: The ID of the device profile for the new wireless device.
                    ServiceProfileId:
                      $ref: '#/components/schemas/ServiceProfileId'
                      description: The ID of the service profile.
                    OtaaV1_1:
                      $ref: '#/components/schemas/OtaaV1_1'
                      description: OTAA device object for v1.1 for create APIs
                    OtaaV1_0_x:
                      $ref: '#/components/schemas/OtaaV1_0_x'
                      description: OTAA device object for create APIs for v1.0.x
                    AbpV1_1:
                      $ref: '#/components/schemas/AbpV1_1'
                      description: ABP device object for create APIs for v1.1
                    AbpV1_0_x:
                      $ref: '#/components/schemas/AbpV1_0_x'
                      description: LoRaWAN object for create APIs
                Tags:
                  description: The tags to attach to the new wireless device. Tags are metadata that you can use to manage a resource.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                  minItems: 0
                  maxItems: 200
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListWirelessDevices
      description: Lists the wireless devices registered to your AWS account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWirelessDevicesResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return in this operation.
          schema:
            type: integer
            minimum: 0
            maximum: 250
        - name: nextToken
          in: query
          required: false
          description: 'To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.'
          schema:
            type: string
            maxLength: 4096
        - name: destinationName
          in: query
          required: false
          description: A filter to list only the wireless devices that use this destination.
          schema:
            type: string
            pattern: '[a-zA-Z0-9-_]+'
            maxLength: 128
        - name: deviceProfileId
          in: query
          required: false
          description: A filter to list only the wireless devices that use this device profile.
          schema:
            type: string
            maxLength: 256
        - name: serviceProfileId
          in: query
          required: false
          description: A filter to list only the wireless devices that use this service profile.
          schema:
            type: string
            maxLength: 256
        - name: wirelessDeviceType
          in: query
          required: false
          description: A filter to list only the wireless devices that use this wireless device type.
          schema:
            type: string
            enum:
              - Sidewalk
              - LoRaWAN
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /wireless-gateways:
    post:
      operationId: CreateWirelessGateway
      description: Provisions a wireless gateway.
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWirelessGatewayResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - LoRaWAN
              properties:
                Name:
                  description: The name of the new resource.
                  type: string
                  maxLength: 256
                Description:
                  description: The description of the new resource.
                  type: string
                  maxLength: 2048
                LoRaWAN:
                  description: LoRaWANGateway object.
                  type: object
                  properties:
                    GatewayEui:
                      $ref: '#/components/schemas/GatewayEui'
                      description: The gateway's EUI value.
                    RfRegion:
                      $ref: '#/components/schemas/RfRegion'
                      description: The frequency band (RFRegion) value.
                    JoinEuiFilters:
                      $ref: '#/components/schemas/JoinEuiFilters'
                    NetIdFilters:
                      $ref: '#/components/schemas/NetIdFilters'
                    SubBands:
                      $ref: '#/components/schemas/SubBands'
                Tags:
                  description: The tags to attach to the new wireless gateway. Tags are metadata that you can use to manage a resource.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                  minItems: 0
                  maxItems: 200
                ClientRequestToken:
                  description: 'Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request. '
                  type: string
                  pattern: '^[a-zA-Z0-9-_]+$'
                  minLength: 1
                  maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListWirelessGateways
      description: Lists the wireless gateways registered to your AWS account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWirelessGatewaysResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: 'To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.'
          schema:
            type: string
            maxLength: 4096
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return in this operation.
          schema:
            type: integer
            minimum: 0
            maximum: 250
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  '/wireless-gateways/{Id}/tasks':
    post:
      operationId: CreateWirelessGatewayTask
      description: Creates a task for a wireless gateway.
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWirelessGatewayTaskResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the resource to update.
          schema:
            type: string
            maxLength: 256
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - WirelessGatewayTaskDefinitionId
              properties:
                WirelessGatewayTaskDefinitionId:
                  description: The ID of the WirelessGatewayTaskDefinition.
                  type: string
                  pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
                  maxLength: 36
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteWirelessGatewayTask
      description: Deletes a wireless gateway task.
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteWirelessGatewayTaskResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the resource to delete.
          schema:
            type: string
            maxLength: 256
    get:
      operationId: GetWirelessGatewayTask
      description: Gets information about a wireless gateway task.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWirelessGatewayTaskResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the resource to get.
          schema:
            type: string
            maxLength: 256
  /wireless-gateway-task-definitions:
    post:
      operationId: CreateWirelessGatewayTaskDefinition
      description: Creates a gateway task definition.
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWirelessGatewayTaskDefinitionResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - AutoCreateTasks
              properties:
                AutoCreateTasks:
                  description: 'Whether to automatically create tasks using this task definition for all gateways with the specified current version. If <code>false</code>, the task must me created by calling <code>CreateWirelessGatewayTask</code>.'
                  type: boolean
                Name:
                  description: The name of the new resource.
                  type: string
                  minLength: 1
                  maxLength: 2048
                Update:
                  description: UpdateWirelessGatewayTaskCreate object.
                  type: object
                  properties:
                    UpdateDataSource:
                      $ref: '#/components/schemas/UpdateDataSource'
                      description: The link to the S3 bucket.
                    UpdateDataRole:
                      $ref: '#/components/schemas/UpdateDataSource'
                      description: The IAM role used to read data from the S3 bucket.
                    LoRaWAN:
                      $ref: '#/components/schemas/LoRaWANUpdateGatewayTaskCreate'
                      description: The properties that relate to the LoRaWAN wireless gateway.
                ClientRequestToken:
                  description: 'Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request. '
                  type: string
                  pattern: '^[a-zA-Z0-9-_]+$'
                  minLength: 1
                  maxLength: 64
                Tags:
                  description: The tags to attach to the specified resource. Tags are metadata that you can use to manage a resource.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                  minItems: 0
                  maxItems: 200
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListWirelessGatewayTaskDefinitions
      description: List the wireless gateway tasks definitions registered to your AWS account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWirelessGatewayTaskDefinitionsResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return in this operation.
          schema:
            type: integer
            minimum: 0
            maximum: 250
        - name: nextToken
          in: query
          required: false
          description: 'To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.'
          schema:
            type: string
            maxLength: 4096
        - name: taskDefinitionType
          in: query
          required: false
          description: A filter to list only the wireless gateway task definitions that use this task definition type.
          schema:
            type: string
            enum:
              - UPDATE
  '/destinations/{Name}':
    delete:
      operationId: DeleteDestination
      description: Deletes a destination.
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDestinationResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: Name
          in: path
          required: true
          description: The name of the resource to delete.
          schema:
            type: string
            pattern: '[a-zA-Z0-9-_]+'
            maxLength: 128
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetDestination
      description: Gets information about a destination.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDestinationResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: Name
          in: path
          required: true
          description: The name of the resource to get.
          schema:
            type: string
            pattern: '[a-zA-Z0-9-_]+'
            maxLength: 128
    patch:
      operationId: UpdateDestination
      description: Updates properties of a destination.
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDestinationResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: Name
          in: path
          required: true
          description: The new name of the resource.
          schema:
            type: string
            pattern: '[a-zA-Z0-9-_]+'
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ExpressionType:
                  description: The type of value in <code>Expression</code>.
                  type: string
                  enum:
                    - RuleName
                    - MqttTopic
                Expression:
                  description: The new rule name or topic rule to send messages to.
                  type: string
                  maxLength: 2048
                Description:
                  description: A new description of the resource.
                  type: string
                  maxLength: 2048
                RoleArn:
                  description: The ARN of the IAM Role that authorizes the destination.
                  type: string
                  minLength: 20
                  maxLength: 2048
  '/device-profiles/{Id}':
    delete:
      operationId: DeleteDeviceProfile
      description: Deletes a device profile.
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDeviceProfileResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the resource to delete.
          schema:
            type: string
            maxLength: 256
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetDeviceProfile
      description: Gets information about a device profile.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDeviceProfileResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the resource to get.
          schema:
            type: string
            maxLength: 256
  '/service-profiles/{Id}':
    delete:
      operationId: DeleteServiceProfile
      description: Deletes a service profile.
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteServiceProfileResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the resource to delete.
          schema:
            type: string
            maxLength: 256
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetServiceProfile
      description: Gets information about a service profile.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServiceProfileResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the resource to get.
          schema:
            type: string
            maxLength: 256
  '/wireless-devices/{Id}':
    delete:
      operationId: DeleteWirelessDevice
      description: Deletes a wireless device.
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteWirelessDeviceResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the resource to delete.
          schema:
            type: string
            maxLength: 256
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    patch:
      operationId: UpdateWirelessDevice
      description: Updates properties of a wireless device.
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateWirelessDeviceResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the resource to update.
          schema:
            type: string
            maxLength: 256
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DestinationName:
                  description: The name of the new destination for the device.
                  type: string
                  pattern: '[a-zA-Z0-9-_]+'
                  maxLength: 128
                Name:
                  description: The new name of the resource.
                  type: string
                  maxLength: 256
                Description:
                  description: A new description of the resource.
                  type: string
                  maxLength: 2048
                LoRaWAN:
                  description: LoRaWAN object for update functions.
                  type: object
                  properties:
                    DeviceProfileId:
                      $ref: '#/components/schemas/DeviceProfileId'
                      description: The ID of the device profile for the wireless device.
                    ServiceProfileId:
                      $ref: '#/components/schemas/ServiceProfileId'
                      description: The ID of the service profile.
  '/wireless-gateways/{Id}':
    delete:
      operationId: DeleteWirelessGateway
      description: Deletes a wireless gateway.
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteWirelessGatewayResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the resource to delete.
          schema:
            type: string
            maxLength: 256
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    patch:
      operationId: UpdateWirelessGateway
      description: Updates properties of a wireless gateway.
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateWirelessGatewayResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the resource to update.
          schema:
            type: string
            maxLength: 256
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  description: The new name of the resource.
                  type: string
                  maxLength: 256
                Description:
                  description: A new description of the resource.
                  type: string
                  maxLength: 2048
                JoinEuiFilters:
                  description: A list of JoinEuiRange used by LoRa gateways to filter LoRa frames.
                  type: array
                  items:
                    $ref: '#/components/schemas/JoinEuiRange'
                  minItems: 0
                  maxItems: 3
                NetIdFilters:
                  description: A list of NetId values that are used by LoRa gateways to filter the uplink frames.
                  type: array
                  items:
                    $ref: '#/components/schemas/NetId'
                  minItems: 0
                  maxItems: 10
  '/wireless-gateway-task-definitions/{Id}':
    delete:
      operationId: DeleteWirelessGatewayTaskDefinition
      description: Deletes a wireless gateway task definition. Deleting this task definition does not affect tasks that are currently in progress.
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteWirelessGatewayTaskDefinitionResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the resource to delete.
          schema:
            type: string
            pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
            maxLength: 36
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetWirelessGatewayTaskDefinition
      description: Gets information about a wireless gateway task definition.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWirelessGatewayTaskDefinitionResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the resource to get.
          schema:
            type: string
            pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
            maxLength: 36
  '/partner-accounts/{PartnerAccountId}#partnerType':
    delete:
      operationId: DisassociateAwsAccountFromPartnerAccount
      description: 'Disassociates your AWS account from a partner account. If <code>PartnerAccountId</code> and <code>PartnerType</code> are <code>null</code>, disassociates your AWS account from all partner accounts.'
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateAwsAccountFromPartnerAccountResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: PartnerAccountId
          in: path
          required: true
          description: The partner account ID to disassociate from the AWS account.
          schema:
            type: string
            maxLength: 256
        - name: partnerType
          in: query
          required: true
          description: The partner type.
          schema:
            type: string
            enum:
              - Sidewalk
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetPartnerAccount
      description: 'Gets information about a partner account. If <code>PartnerAccountId</code> and <code>PartnerType</code> are <code>null</code>, returns all partner accounts.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPartnerAccountResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: PartnerAccountId
          in: path
          required: true
          description: The partner account ID to disassociate from the AWS account.
          schema:
            type: string
            maxLength: 256
        - name: partnerType
          in: query
          required: true
          description: The partner type.
          schema:
            type: string
            enum:
              - Sidewalk
    patch:
      operationId: UpdatePartnerAccount
      description: Updates properties of a partner account.
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePartnerAccountResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: PartnerAccountId
          in: path
          required: true
          description: The ID of the partner account to update.
          schema:
            type: string
            maxLength: 256
        - name: partnerType
          in: query
          required: true
          description: The partner type.
          schema:
            type: string
            enum:
              - Sidewalk
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Sidewalk
              properties:
                Sidewalk:
                  description: Sidewalk update.
                  type: object
                  properties:
                    AppServerPrivateKey:
                      $ref: '#/components/schemas/AppServerPrivateKey'
                      description: The new Sidewalk application server private key.
  /log-levels:
    get:
      operationId: GetLogLevelsByResourceTypes
      description: 'Returns current default log levels or log levels by resource types. Based on resource types, log levels can be for wireless device log options or wireless gateway log options.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLogLevelsByResourceTypesResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters: []
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: ResetAllResourceLogLevels
      description: Removes the log-level overrides for all resources; both wireless devices and wireless gateways.
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetAllResourceLogLevelsResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters: []
    post:
      operationId: UpdateLogLevelsByResourceTypes
      description: 'Set default log level, or log levels by resource types. This can be for wireless device log options or wireless gateways log options and is used to control the log messages that''ll be displayed in CloudWatch.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateLogLevelsByResourceTypesResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DefaultLogLevel:
                  description: The log level for a log message.
                  type: string
                  enum:
                    - INFO
                    - ERROR
                    - DISABLED
                WirelessDeviceLogOptions:
                  description: The list of wireless device log options.
                  type: array
                  items:
                    $ref: '#/components/schemas/WirelessDeviceLogOption'
                WirelessGatewayLogOptions:
                  description: The list of wireless gateway log options.
                  type: array
                  items:
                    $ref: '#/components/schemas/WirelessGatewayLogOption'
  '/log-levels/{ResourceIdentifier}#resourceType':
    get:
      operationId: GetResourceLogLevel
      description: 'Fetches the log-level override, if any, for a given resource-ID and resource-type. It can be used for a wireless device or a wireless gateway.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResourceLogLevelResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: ResourceIdentifier
          in: path
          required: true
          description: ''
          schema:
            type: string
            description: 'The identifier of the resource. For a Wireless Device, it is the wireless device ID. For a wireless gateway, it is the wireless gateway ID.'
            maxLength: 256
        - name: resourceType
          in: query
          required: true
          description: 'The type of the resource, which can be <code>WirelessDevice</code> or <code>WirelessGateway</code>.'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: PutResourceLogLevel
      description: Sets the log-level override for a resource-ID and resource-type. This option can be specified for a wireless gateway or a wireless device. A limit of 200 log level override can be set per account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutResourceLogLevelResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: ResourceIdentifier
          in: path
          required: true
          description: ''
          schema:
            type: string
            description: 'The identifier of the resource. For a Wireless Device, it is the wireless device ID. For a wireless gateway, it is the wireless gateway ID.'
            maxLength: 256
        - name: resourceType
          in: query
          required: true
          description: 'The type of the resource, which can be <code>WirelessDevice</code> or <code>WirelessGateway</code>.'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - LogLevel
              properties:
                LogLevel:
                  description: The log level for a log message.
                  type: string
                  enum:
                    - INFO
                    - ERROR
                    - DISABLED
    delete:
      operationId: ResetResourceLogLevel
      description: 'Removes the log-level override, if any, for a specific resource-ID and resource-type. It can be used for a wireless device or a wireless gateway.'
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetResourceLogLevelResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: ResourceIdentifier
          in: path
          required: true
          description: ''
          schema:
            type: string
            description: 'The identifier of the resource. For a Wireless Device, it is the wireless device ID. For a wireless gateway, it is the wireless gateway ID.'
            maxLength: 256
        - name: resourceType
          in: query
          required: true
          description: 'The type of the resource, which can be <code>WirelessDevice</code> or <code>WirelessGateway</code>.'
          schema:
            type: string
  /service-endpoint:
    get:
      operationId: GetServiceEndpoint
      description: Gets the account-specific endpoint for Configuration and Update Server (CUPS) protocol or LoRaWAN Network Server (LNS) connections.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServiceEndpointResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: serviceType
          in: query
          required: false
          description: 'The service type for which to get endpoint information about. Can be <code>CUPS</code> for the Configuration and Update Server endpoint, or <code>LNS</code> for the LoRaWAN Network Server endpoint.'
          schema:
            type: string
            enum:
              - CUPS
              - LNS
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/wireless-devices/{Identifier}#identifierType':
    get:
      operationId: GetWirelessDevice
      description: Gets information about a wireless device.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWirelessDeviceResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: Identifier
          in: path
          required: true
          description: The identifier of the wireless device to get.
          schema:
            type: string
            maxLength: 256
        - name: identifierType
          in: query
          required: true
          description: The type of identifier used in <code>identifier</code>.
          schema:
            type: string
            enum:
              - WirelessDeviceId
              - DevEui
              - ThingName
              - SidewalkManufacturingSn
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/wireless-devices/{Id}/statistics':
    get:
      operationId: GetWirelessDeviceStatistics
      description: Gets operating information about a wireless device.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWirelessDeviceStatisticsResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the wireless device for which to get the data.
          schema:
            type: string
            maxLength: 256
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/wireless-gateways/{Identifier}#identifierType':
    get:
      operationId: GetWirelessGateway
      description: Gets information about a wireless gateway.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWirelessGatewayResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: Identifier
          in: path
          required: true
          description: The identifier of the wireless gateway to get.
          schema:
            type: string
            maxLength: 256
        - name: identifierType
          in: query
          required: true
          description: The type of identifier used in <code>identifier</code>.
          schema:
            type: string
            enum:
              - GatewayEui
              - WirelessGatewayId
              - ThingName
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/wireless-gateways/{Id}/firmware-information':
    get:
      operationId: GetWirelessGatewayFirmwareInformation
      description: Gets the firmware version and other information about a wireless gateway.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWirelessGatewayFirmwareInformationResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the resource to get.
          schema:
            type: string
            maxLength: 256
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/wireless-gateways/{Id}/statistics':
    get:
      operationId: GetWirelessGatewayStatistics
      description: Gets operating information about a wireless gateway.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWirelessGatewayStatisticsResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the wireless gateway for which to get the data.
          schema:
            type: string
            maxLength: 256
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /tags#resourceArn:
    get:
      operationId: ListTagsForResource
      description: Lists the tags (metadata) you have assigned to the resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: resourceArn
          in: query
          required: true
          description: The ARN of the resource for which you want to list tags.
          schema:
            type: string
            minLength: 1
            maxLength: 1011
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: TagResource
      description: Adds a tag to a resource.
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: TooManyTagsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
      parameters:
        - name: resourceArn
          in: query
          required: true
          description: The ARN of the resource to add tags to.
          schema:
            type: string
            minLength: 1
            maxLength: 1011
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Tags
              properties:
                Tags:
                  description: Adds to or modifies the tags of the given resource. Tags are metadata that you can use to manage a resource.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                  minItems: 0
                  maxItems: 200
  '/wireless-devices/{Id}/data':
    post:
      operationId: SendDataToWirelessDevice
      description: Sends a decrypted application data frame to a device.
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendDataToWirelessDeviceResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the wireless device to receive the data.
          schema:
            type: string
            maxLength: 256
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - TransmitMode
                - PayloadData
              properties:
                TransmitMode:
                  description: 'The transmit mode to use to send data to the wireless device. Can be: <code>0</code> for UM (unacknowledge mode) or <code>1</code> for AM (acknowledge mode).'
                  type: integer
                  minimum: 0
                  maximum: 1
                PayloadData:
                  description: 'The binary to be sent to the end device, encoded in base64.'
                  type: string
                  pattern: '^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$'
                  maxLength: 2048
                WirelessMetadata:
                  description: WirelessMetadata object.
                  type: object
                  properties:
                    LoRaWAN:
                      $ref: '#/components/schemas/LoRaWANSendDataToDevice'
                      description: LoRaWAN device info.
                    Sidewalk:
                      $ref: '#/components/schemas/SidewalkSendDataToDevice'
                      description: The Sidewalk account credentials.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/wireless-devices/{Id}/test':
    post:
      operationId: TestWirelessDevice
      description: Simulates a provisioned device by sending an uplink data payload of <code>Hello</code>.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestWirelessDeviceResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the wireless device to test.
          schema:
            type: string
            maxLength: 256
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /tags#resourceArn&tagKeys:
    delete:
      operationId: UntagResource
      description: Removes one or more tags from a resource.
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: resourceArn
          in: query
          required: true
          description: The ARN of the resource to remove tags from.
          schema:
            type: string
            minLength: 1
            maxLength: 1011
        - name: tagKeys
          in: query
          required: true
          description: A list of the keys of the tags to remove from the resource.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TagKey'
            minItems: 0
            maxItems: 200
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AssociateAwsAccountWithPartnerAccountResponse:
      type: object
      properties:
        Sidewalk:
          $ref: '#/components/schemas/SidewalkAccountInfo'
          description: The Sidewalk account credentials.
        Arn:
          $ref: '#/components/schemas/PartnerAccountArn'
          description: The Amazon Resource Name of the resource.
    AmazonId:
      type: string
      description: The Sidewalk Amazon ID.
      maxLength: 2048
    AppServerPrivateKey:
      type: string
      pattern: '[a-fA-F0-9]{64}'
      minLength: 1
      maxLength: 4096
      format: password
    Tag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          $ref: '#/components/schemas/TagKey'
          description: The tag's key value.
        Value:
          $ref: '#/components/schemas/TagValue'
          description: The tag's value.
      description: A simple label consisting of a customer-defined key-value pair
    ValidationException: {}
    ResourceNotFoundException: {}
    InternalServerException: {}
    ThrottlingException: {}
    ConflictException: {}
    AccessDeniedException: {}
    AssociateWirelessDeviceWithThingResponse:
      type: object
      properties: {}
    AssociateWirelessGatewayWithCertificateResponse:
      type: object
      properties:
        IotCertificateId:
          $ref: '#/components/schemas/IotCertificateId'
          description: The ID of the certificate associated with the wireless gateway.
    AssociateWirelessGatewayWithThingResponse:
      type: object
      properties: {}
    CreateDestinationResponse:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/DestinationArn'
          description: The Amazon Resource Name of the new resource.
        Name:
          $ref: '#/components/schemas/DestinationName'
          description: The name of the new resource.
    CreateDeviceProfileResponse:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/DeviceProfileArn'
          description: The Amazon Resource Name of the new resource.
        Id:
          $ref: '#/components/schemas/DeviceProfileId'
          description: The ID of the new device profile.
    SupportsClassB:
      type: boolean
    ClassBTimeout:
      type: integer
      minimum: 0
      maximum: 1000
    PingSlotPeriod:
      type: integer
      minimum: 128
      maximum: 4096
    PingSlotDr:
      type: integer
      minimum: 0
      maximum: 15
    PingSlotFreq:
      type: integer
      minimum: 1000000
      maximum: 16700000
    SupportsClassC:
      type: boolean
    ClassCTimeout:
      type: integer
      minimum: 0
      maximum: 1000
    MacVersion:
      type: string
      maxLength: 64
    RegParamsRevision:
      type: string
      maxLength: 64
    RxDelay1:
      type: integer
      minimum: 0
      maximum: 15
    RxDrOffset1:
      type: integer
      minimum: 0
      maximum: 7
    RxDataRate2:
      type: integer
      minimum: 0
      maximum: 15
    RxFreq2:
      type: integer
      minimum: 1000000
      maximum: 16700000
    FactoryPresetFreqsList:
      type: array
      items:
        $ref: '#/components/schemas/PresetFreq'
      minItems: 0
      maxItems: 20
    MaxEirp:
      type: integer
      minimum: 0
      maximum: 15
    MaxDutyCycle:
      type: integer
      minimum: 0
      maximum: 100
    RfRegion:
      type: string
      maxLength: 64
    SupportsJoin:
      type: boolean
    Supports32BitFCnt:
      type: boolean
    CreateServiceProfileResponse:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/ServiceProfileArn'
          description: The Amazon Resource Name of the new resource.
        Id:
          $ref: '#/components/schemas/ServiceProfileId'
          description: The ID of the new service profile.
    AddGwMetadata:
      type: boolean
    CreateWirelessDeviceResponse:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/WirelessDeviceArn'
          description: The Amazon Resource Name of the new resource.
        Id:
          $ref: '#/components/schemas/WirelessDeviceId'
          description: The ID of the new wireless device.
    DevEui:
      type: string
      pattern: '[a-fA-F0-9]{16}'
    DeviceProfileId:
      type: string
      maxLength: 256
    ServiceProfileId:
      type: string
      maxLength: 256
    OtaaV1_1:
      type: object
      properties:
        AppKey:
          $ref: '#/components/schemas/AppKey'
          description: The AppKey value.
        NwkKey:
          $ref: '#/components/schemas/NwkKey'
          description: The NwkKey value.
        JoinEui:
          $ref: '#/components/schemas/JoinEui'
          description: The JoinEUI value.
      description: OTAA device object for v1.1
    OtaaV1_0_x:
      type: object
      properties:
        AppKey:
          $ref: '#/components/schemas/AppKey'
          description: The AppKey value.
        AppEui:
          $ref: '#/components/schemas/AppEui'
          description: The AppEUI value.
      description: OTAA device object for v1.0.x
    AbpV1_1:
      type: object
      properties:
        DevAddr:
          $ref: '#/components/schemas/DevAddr'
          description: The DevAddr value.
        SessionKeys:
          $ref: '#/components/schemas/SessionKeysAbpV1_1'
          description: Session keys for ABP v1.1
      description: ABP device object for LoRaWAN specification v1.1
    AbpV1_0_x:
      type: object
      properties:
        DevAddr:
          $ref: '#/components/schemas/DevAddr'
          description: The DevAddr value.
        SessionKeys:
          $ref: '#/components/schemas/SessionKeysAbpV1_0_x'
          description: Session keys for ABP v1.0.x
      description: ABP device object for LoRaWAN specification v1.0.x
    CreateWirelessGatewayResponse:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/WirelessGatewayArn'
          description: The Amazon Resource Name of the new resource.
        Id:
          $ref: '#/components/schemas/WirelessDeviceId'
          description: The ID of the new wireless gateway.
    GatewayEui:
      type: string
      pattern: '^(([0-9A-Fa-f]{2}-){7}|([0-9A-Fa-f]{2}:){7}|([0-9A-Fa-f]{2}\s){7}|([0-9A-Fa-f]{2}){7})([0-9A-Fa-f]{2})$'
    JoinEuiFilters:
      type: array
      description: A list of JoinEuiRange used by LoRa gateways to filter LoRa frames.
      items:
        $ref: '#/components/schemas/JoinEuiRange'
      minItems: 0
      maxItems: 3
    NetIdFilters:
      type: array
      description: A list of NetId values that are used by LoRa gateways to filter the uplink frames.
      items:
        $ref: '#/components/schemas/NetId'
      minItems: 0
      maxItems: 10
    SubBands:
      type: array
      description: A list of integer indicating which sub bands are supported by LoRa gateway.
      items:
        $ref: '#/components/schemas/SubBand'
      minItems: 0
      maxItems: 8
    CreateWirelessGatewayTaskResponse:
      type: object
      properties:
        WirelessGatewayTaskDefinitionId:
          $ref: '#/components/schemas/WirelessGatewayTaskDefinitionId'
          description: The ID of the WirelessGatewayTaskDefinition.
        Status:
          $ref: '#/components/schemas/WirelessGatewayTaskStatus'
          description: The status of the request.
    CreateWirelessGatewayTaskDefinitionResponse:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/WirelessGatewayTaskDefinitionId'
          description: The ID of the new wireless gateway task definition.
        Arn:
          $ref: '#/components/schemas/WirelessGatewayTaskDefinitionArn'
          description: The Amazon Resource Name of the resource.
    UpdateDataSource:
      type: string
      minLength: 1
      maxLength: 4096
    LoRaWANUpdateGatewayTaskCreate:
      type: object
      properties:
        UpdateSignature:
          $ref: '#/components/schemas/UpdateSignature'
          description: The signature used to verify the update firmware.
        SigKeyCrc:
          $ref: '#/components/schemas/Crc'
          description: The CRC of the signature private key to check.
        CurrentVersion:
          $ref: '#/components/schemas/LoRaWANGatewayVersion'
          description: The version of the gateways that should receive the update.
        UpdateVersion:
          $ref: '#/components/schemas/LoRaWANGatewayVersion'
          description: The firmware version to update the gateway to.
      description: LoRaWANUpdateGatewayTaskCreate object.
    DeleteDestinationResponse:
      type: object
      properties: {}
    DeleteDeviceProfileResponse:
      type: object
      properties: {}
    DeleteServiceProfileResponse:
      type: object
      properties: {}
    DeleteWirelessDeviceResponse:
      type: object
      properties: {}
    DeleteWirelessGatewayResponse:
      type: object
      properties: {}
    DeleteWirelessGatewayTaskResponse:
      type: object
      properties: {}
    DeleteWirelessGatewayTaskDefinitionResponse:
      type: object
      properties: {}
    DisassociateAwsAccountFromPartnerAccountResponse:
      type: object
      properties: {}
    DisassociateWirelessDeviceFromThingResponse:
      type: object
      properties: {}
    DisassociateWirelessGatewayFromCertificateResponse:
      type: object
      properties: {}
    DisassociateWirelessGatewayFromThingResponse:
      type: object
      properties: {}
    GetDestinationResponse:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/DestinationArn'
          description: The Amazon Resource Name of the resource.
        Name:
          $ref: '#/components/schemas/DestinationName'
          description: The name of the resource.
        Expression:
          $ref: '#/components/schemas/Expression'
          description: The rule name or topic rule to send messages to.
        ExpressionType:
          $ref: '#/components/schemas/ExpressionType'
          description: The type of value in <code>Expression</code>.
        Description:
          $ref: '#/components/schemas/Description'
          description: The description of the resource.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The ARN of the IAM Role that authorizes the destination.
    GetDeviceProfileResponse:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/DeviceProfileArn'
          description: The Amazon Resource Name of the resource.
        Name:
          $ref: '#/components/schemas/DeviceProfileName'
          description: The name of the resource.
        Id:
          $ref: '#/components/schemas/DeviceProfileId'
          description: The ID of the device profile.
        LoRaWAN:
          $ref: '#/components/schemas/LoRaWANDeviceProfile'
          description: Information about the device profile.
    GetLogLevelsByResourceTypesResponse:
      type: object
      properties:
        DefaultLogLevel:
          $ref: '#/components/schemas/LogLevel'
        WirelessGatewayLogOptions:
          $ref: '#/components/schemas/WirelessGatewayLogOptionList'
        WirelessDeviceLogOptions:
          $ref: '#/components/schemas/WirelessDeviceLogOptionList'
    GetPartnerAccountResponse:
      type: object
      properties:
        Sidewalk:
          $ref: '#/components/schemas/SidewalkAccountInfoWithFingerprint'
          description: The Sidewalk account credentials.
        AccountLinked:
          $ref: '#/components/schemas/AccountLinked'
          description: Whether the partner account is linked to the AWS account.
    GetResourceLogLevelResponse:
      type: object
      properties:
        LogLevel:
          $ref: '#/components/schemas/LogLevel'
    GetServiceEndpointResponse:
      type: object
      properties:
        ServiceType:
          $ref: '#/components/schemas/WirelessGatewayServiceType'
          description: The endpoint's service type.
        ServiceEndpoint:
          $ref: '#/components/schemas/EndPoint'
          description: The service endpoint value.
        ServerTrust:
          $ref: '#/components/schemas/CertificatePEM'
          description: The Root CA of the server trust certificate.
    GetServiceProfileResponse:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/ServiceProfileArn'
          description: The Amazon Resource Name of the resource.
        Name:
          $ref: '#/components/schemas/ServiceProfileName'
          description: The name of the resource.
        Id:
          $ref: '#/components/schemas/ServiceProfileId'
          description: The ID of the service profile.
        LoRaWAN:
          $ref: '#/components/schemas/LoRaWANGetServiceProfileInfo'
          description: Information about the service profile.
    GetWirelessDeviceResponse:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/WirelessDeviceType'
          description: The wireless device type.
        Name:
          $ref: '#/components/schemas/WirelessDeviceName'
          description: The name of the resource.
        Description:
          $ref: '#/components/schemas/Description'
          description: The description of the resource.
        DestinationName:
          $ref: '#/components/schemas/DestinationName'
          description: The name of the destination to which the device is assigned.
        Id:
          $ref: '#/components/schemas/WirelessDeviceId'
          description: The ID of the wireless device.
        Arn:
          $ref: '#/components/schemas/WirelessDeviceArn'
          description: The Amazon Resource Name of the resource.
        ThingName:
          $ref: '#/components/schemas/ThingName'
          description: The name of the thing associated with the wireless device. The value is empty if a thing isn't associated with the device.
        ThingArn:
          $ref: '#/components/schemas/ThingArn'
          description: The ARN of the thing associated with the wireless device.
        LoRaWAN:
          $ref: '#/components/schemas/LoRaWANDevice'
          description: Information about the wireless device.
        Sidewalk:
          $ref: '#/components/schemas/SidewalkDevice'
          description: Sidewalk device object.
    GetWirelessDeviceStatisticsResponse:
      type: object
      properties:
        WirelessDeviceId:
          $ref: '#/components/schemas/WirelessDeviceId'
          description: The ID of the wireless device.
        LastUplinkReceivedAt:
          $ref: '#/components/schemas/ISODateTimeString'
          description: The date and time when the most recent uplink was received.
        LoRaWAN:
          $ref: '#/components/schemas/LoRaWANDeviceMetadata'
          description: Information about the wireless device's operations.
        Sidewalk:
          $ref: '#/components/schemas/SidewalkDeviceMetadata'
          description: MetaData for Sidewalk device.
    GetWirelessGatewayResponse:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/WirelessGatewayName'
          description: The name of the resource.
        Id:
          $ref: '#/components/schemas/WirelessGatewayId'
          description: The ID of the wireless gateway.
        Description:
          $ref: '#/components/schemas/Description'
          description: The description of the resource.
        LoRaWAN:
          $ref: '#/components/schemas/LoRaWANGateway'
          description: Information about the wireless gateway.
        Arn:
          $ref: '#/components/schemas/WirelessGatewayArn'
          description: The Amazon Resource Name of the resource.
        ThingName:
          $ref: '#/components/schemas/ThingName'
          description: The name of the thing associated with the wireless gateway. The value is empty if a thing isn't associated with the gateway.
        ThingArn:
          $ref: '#/components/schemas/ThingArn'
          description: The ARN of the thing associated with the wireless gateway.
    GetWirelessGatewayCertificateResponse:
      type: object
      properties:
        IotCertificateId:
          $ref: '#/components/schemas/IotCertificateId'
          description: The ID of the certificate associated with the wireless gateway.
        LoRaWANNetworkServerCertificateId:
          $ref: '#/components/schemas/IotCertificateId'
          description: The ID of the certificate that is associated with the wireless gateway and used for the LoRaWANNetworkServer endpoint.
    GetWirelessGatewayFirmwareInformationResponse:
      type: object
      properties:
        LoRaWAN:
          $ref: '#/components/schemas/LoRaWANGatewayCurrentVersion'
          description: Information about the wireless gateway's firmware.
    GetWirelessGatewayStatisticsResponse:
      type: object
      properties:
        WirelessGatewayId:
          $ref: '#/components/schemas/WirelessGatewayId'
          description: The ID of the wireless gateway.
        LastUplinkReceivedAt:
          $ref: '#/components/schemas/ISODateTimeString'
          description: The date and time when the most recent uplink was received.
        ConnectionStatus:
          $ref: '#/components/schemas/ConnectionStatus'
          description: The connection status of the wireless gateway.
    GetWirelessGatewayTaskResponse:
      type: object
      properties:
        WirelessGatewayId:
          $ref: '#/components/schemas/WirelessGatewayId'
          description: The ID of the wireless gateway.
        WirelessGatewayTaskDefinitionId:
          $ref: '#/components/schemas/WirelessGatewayTaskDefinitionId'
          description: The ID of the WirelessGatewayTask.
        LastUplinkReceivedAt:
          $ref: '#/components/schemas/ISODateTimeString'
          description: The date and time when the most recent uplink was received.
        TaskCreatedAt:
          $ref: '#/components/schemas/ISODateTimeString'
          description: The date and time when the task was created.
        Status:
          $ref: '#/components/schemas/WirelessGatewayTaskStatus'
          description: The status of the request.
    GetWirelessGatewayTaskDefinitionResponse:
      type: object
      properties:
        AutoCreateTasks:
          $ref: '#/components/schemas/AutoCreateTasks'
          description: 'Whether to automatically create tasks using this task definition for all gateways with the specified current version. If <code>false</code>, the task must me created by calling <code>CreateWirelessGatewayTask</code>.'
        Name:
          $ref: '#/components/schemas/WirelessGatewayTaskName'
          description: The name of the resource.
        Update:
          $ref: '#/components/schemas/UpdateWirelessGatewayTaskCreate'
          description: Information about the gateways to update.
        Arn:
          $ref: '#/components/schemas/WirelessGatewayTaskDefinitionArn'
          description: The Amazon Resource Name of the resource.
    ListDestinationsResponse:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token to use to get the next set of results, or <b>null</b> if there are no additional results.'
        DestinationList:
          $ref: '#/components/schemas/DestinationList'
          description: The list of destinations.
    ListDeviceProfilesResponse:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token to use to get the next set of results, or <b>null</b> if there are no additional results.'
        DeviceProfileList:
          $ref: '#/components/schemas/DeviceProfileList'
          description: The list of device profiles.
    ListPartnerAccountsResponse:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token to use to get the next set of results, or <b>null</b> if there are no additional results.'
        Sidewalk:
          $ref: '#/components/schemas/SidewalkAccountList'
          description: The Sidewalk account credentials.
    ListServiceProfilesResponse:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token to use to get the next set of results, or <b>null</b> if there are no additional results.'
        ServiceProfileList:
          $ref: '#/components/schemas/ServiceProfileList'
          description: The list of service profiles.
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          $ref: '#/components/schemas/TagList'
          description: The tags to attach to the specified resource. Tags are metadata that you can use to manage a resource.
    ListWirelessDevicesResponse:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token to use to get the next set of results, or <b>null</b> if there are no additional results.'
        WirelessDeviceList:
          $ref: '#/components/schemas/WirelessDeviceStatisticsList'
          description: The ID of the wireless device.
    ListWirelessGatewayTaskDefinitionsResponse:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token to use to get the next set of results, or <b>null</b> if there are no additional results.'
        TaskDefinitions:
          $ref: '#/components/schemas/WirelessGatewayTaskDefinitionList'
          description: The list of task definitions.
    ListWirelessGatewaysResponse:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token to use to get the next set of results, or <b>null</b> if there are no additional results.'
        WirelessGatewayList:
          $ref: '#/components/schemas/WirelessGatewayStatisticsList'
          description: The ID of the wireless gateway.
    PutResourceLogLevelResponse:
      type: object
      properties: {}
    ResetAllResourceLogLevelsResponse:
      type: object
      properties: {}
    ResetResourceLogLevelResponse:
      type: object
      properties: {}
    SendDataToWirelessDeviceResponse:
      type: object
      properties:
        MessageId:
          $ref: '#/components/schemas/MessageId'
          description: The ID of the message sent to the wireless device.
    LoRaWANSendDataToDevice:
      type: object
      properties:
        FPort:
          $ref: '#/components/schemas/FPort'
          description: The Fport value.
      description: LoRaWAN router info.
    SidewalkSendDataToDevice:
      type: object
      properties:
        Seq:
          $ref: '#/components/schemas/Seq'
          description: The sequence number.
        MessageType:
          $ref: '#/components/schemas/MessageType'
      description: Information about a Sidewalk router.
    TagResourceResponse:
      type: object
      properties: {}
    TooManyTagsException: {}
    TestWirelessDeviceResponse:
      type: object
      properties:
        Result:
          $ref: '#/components/schemas/Result'
          description: The result returned by the test.
    UntagResourceResponse:
      type: object
      properties: {}
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    UpdateDestinationResponse:
      type: object
      properties: {}
    UpdateLogLevelsByResourceTypesResponse:
      type: object
      properties: {}
    WirelessDeviceLogOption:
      type: object
      required:
        - Type
        - LogLevel
      properties:
        Type:
          $ref: '#/components/schemas/WirelessDeviceType'
          description: The wireless device type.
        LogLevel:
          $ref: '#/components/schemas/LogLevel'
        Events:
          $ref: '#/components/schemas/WirelessDeviceEventLogOptionList'
      description: The log options for wireless devices and can be used to set log levels for a specific type of wireless device.
    WirelessGatewayLogOption:
      type: object
      required:
        - Type
        - LogLevel
      properties:
        Type:
          $ref: '#/components/schemas/WirelessGatewayType'
        LogLevel:
          $ref: '#/components/schemas/LogLevel'
        Events:
          $ref: '#/components/schemas/WirelessGatewayEventLogOptionList'
      description: The log options for wireless gateways and can be used to set log levels for a specific type of wireless gateway.
    UpdatePartnerAccountResponse:
      type: object
      properties: {}
    UpdateWirelessDeviceResponse:
      type: object
      properties: {}
    UpdateWirelessGatewayResponse:
      type: object
      properties: {}
    JoinEuiRange:
      type: array
      description: 'A pair of join EUI describing a range [BegEui, EndEui], both ends are inclusive.'
      items:
        $ref: '#/components/schemas/JoinEui'
      minItems: 2
      maxItems: 2
    NetId:
      type: string
      pattern: '[a-fA-F0-9]{6}'
      description: LoRaWAN network ID.
    DevAddr:
      type: string
      pattern: '[a-fA-F0-9]{8}'
    SessionKeysAbpV1_0_x:
      type: object
      properties:
        NwkSKey:
          $ref: '#/components/schemas/NwkSKey'
          description: The NwkSKey value.
        AppSKey:
          $ref: '#/components/schemas/AppSKey'
          description: The AppSKey value.
      description: Session keys for ABP v1.1
    SessionKeysAbpV1_1:
      type: object
      properties:
        FNwkSIntKey:
          $ref: '#/components/schemas/FNwkSIntKey'
          description: The FNwkSIntKey value.
        SNwkSIntKey:
          $ref: '#/components/schemas/SNwkSIntKey'
          description: The SNwkSIntKey value.
        NwkSEncKey:
          $ref: '#/components/schemas/NwkSEncKey'
          description: The NwkSEncKey value.
        AppSKey:
          $ref: '#/components/schemas/AppSKey'
          description: The AppSKey value.
      description: Session keys for ABP v1.1
    AccountLinked:
      type: boolean
    AmazonResourceName:
      type: string
      minLength: 1
      maxLength: 1011
    AppEui:
      type: string
      pattern: '[a-fA-F0-9]{16}'
    AppKey:
      type: string
      pattern: '[a-fA-F0-9]{32}'
    AppSKey:
      type: string
      pattern: '[a-fA-F0-9]{32}'
    SidewalkAccountInfo:
      type: object
      properties:
        AmazonId:
          $ref: '#/components/schemas/AmazonId'
          description: The Sidewalk Amazon ID.
        AppServerPrivateKey:
          $ref: '#/components/schemas/AppServerPrivateKey'
          description: The Sidewalk application server private key.
      description: Information about a Sidewalk account.
    ClientRequestToken:
      type: string
      pattern: '^[a-zA-Z0-9-_]+$'
      minLength: 1
      maxLength: 64
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
      minItems: 0
      maxItems: 200
    AssociateAwsAccountWithPartnerAccountRequest:
      type: object
      required:
        - Sidewalk
      title: AssociateAwsAccountWithPartnerAccountRequest
      properties:
        Sidewalk:
          $ref: '#/components/schemas/SidewalkAccountInfo'
          description: The Sidewalk account credentials.
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
          description: 'Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request. '
        Tags:
          $ref: '#/components/schemas/TagList'
          description: The tags to attach to the specified resource. Tags are metadata that you can use to manage a resource.
    PartnerAccountArn:
      type: string
    WirelessDeviceId:
      type: string
      maxLength: 256
    ThingArn:
      type: string
    AssociateWirelessDeviceWithThingRequest:
      type: object
      required:
        - ThingArn
      title: AssociateWirelessDeviceWithThingRequest
      properties:
        ThingArn:
          $ref: '#/components/schemas/ThingArn'
          description: The ARN of the thing to associate with the wireless device.
    WirelessGatewayId:
      type: string
      maxLength: 256
    IotCertificateId:
      type: string
      minLength: 1
      maxLength: 4096
    AssociateWirelessGatewayWithCertificateRequest:
      type: object
      required:
        - IotCertificateId
      title: AssociateWirelessGatewayWithCertificateRequest
      properties:
        IotCertificateId:
          $ref: '#/components/schemas/IotCertificateId'
          description: The ID of the certificate to associate with the wireless gateway.
    AssociateWirelessGatewayWithThingRequest:
      type: object
      required:
        - ThingArn
      title: AssociateWirelessGatewayWithThingRequest
      properties:
        ThingArn:
          $ref: '#/components/schemas/ThingArn'
          description: The ARN of the thing to associate with the wireless gateway.
    AutoCreateTasks:
      type: boolean
    BatteryLevel:
      type: string
      enum:
        - normal
        - low
        - critical
      description: Sidewalk device battery level.
    SigningAlg:
      type: string
      enum:
        - Ed25519
        - P256r1
      description: The certificate chain algorithm provided by sidewalk.
    CertificateValue:
      type: string
      description: Certificate value.
      minLength: 0
      maxLength: 2048
    CertificateList:
      type: object
      required:
        - SigningAlg
        - Value
      properties:
        SigningAlg:
          $ref: '#/components/schemas/SigningAlg'
          description: The certificate chain algorithm provided by sidewalk.
        Value:
          $ref: '#/components/schemas/CertificateValue'
          description: The value of the chosen sidewalk certificate.
      description: List of sidewalk certificates.
    CertificatePEM:
      type: string
      pattern: '[^-A-Za-z0-9\+/=]\|=[^=]\|=\{3,\}$\{1,4096\}'
      minLength: 1
      maxLength: 4096
    ChannelMask:
      type: string
      maxLength: 2048
    ConnectionStatus:
      type: string
      enum:
        - Connected
        - Disconnected
    Crc:
      type: integer
      minimum: 1
      maximum: 4294967295
    DestinationName:
      type: string
      pattern: '[a-zA-Z0-9-_]+'
      maxLength: 128
    ExpressionType:
      type: string
      enum:
        - RuleName
        - MqttTopic
    Expression:
      type: string
      maxLength: 2048
    Description:
      type: string
      maxLength: 2048
    RoleArn:
      type: string
      minLength: 20
      maxLength: 2048
    CreateDestinationRequest:
      type: object
      required:
        - Name
        - ExpressionType
        - Expression
        - RoleArn
      title: CreateDestinationRequest
      properties:
        Name:
          $ref: '#/components/schemas/DestinationName'
          description: The name of the new resource.
        ExpressionType:
          $ref: '#/components/schemas/ExpressionType'
          description: The type of value in <code>Expression</code>.
        Expression:
          $ref: '#/components/schemas/Expression'
          description: The rule name or topic rule to send messages to.
        Description:
          $ref: '#/components/schemas/Description'
          description: The description of the new resource.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The ARN of the IAM Role that authorizes the destination.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: The tags to attach to the new destination. Tags are metadata that you can use to manage a resource.
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
          description: 'Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request. '
    DestinationArn:
      type: string
    DeviceProfileName:
      type: string
      maxLength: 256
    LoRaWANDeviceProfile:
      type: object
      properties:
        SupportsClassB:
          $ref: '#/components/schemas/SupportsClassB'
          description: The SupportsClassB value.
        ClassBTimeout:
          $ref: '#/components/schemas/ClassBTimeout'
          description: The ClassBTimeout value.
        PingSlotPeriod:
          $ref: '#/components/schemas/PingSlotPeriod'
          description: The PingSlotPeriod value.
        PingSlotDr:
          $ref: '#/components/schemas/PingSlotDr'
          description: The PingSlotDR value.
        PingSlotFreq:
          $ref: '#/components/schemas/PingSlotFreq'
          description: The PingSlotFreq value.
        SupportsClassC:
          $ref: '#/components/schemas/SupportsClassC'
          description: The SupportsClassC value.
        ClassCTimeout:
          $ref: '#/components/schemas/ClassCTimeout'
          description: The ClassCTimeout value.
        MacVersion:
          $ref: '#/components/schemas/MacVersion'
          description: The MAC version (such as OTAA 1.1 or OTAA 1.0.3) to use with this device profile.
        RegParamsRevision:
          $ref: '#/components/schemas/RegParamsRevision'
          description: The version of regional parameters.
        RxDelay1:
          $ref: '#/components/schemas/RxDelay1'
          description: The RXDelay1 value.
        RxDrOffset1:
          $ref: '#/components/schemas/RxDrOffset1'
          description: The RXDROffset1 value.
        RxDataRate2:
          $ref: '#/components/schemas/RxDataRate2'
          description: The RXDataRate2 value.
        RxFreq2:
          $ref: '#/components/schemas/RxFreq2'
          description: The RXFreq2 value.
        FactoryPresetFreqsList:
          $ref: '#/components/schemas/FactoryPresetFreqsList'
          description: The list of values that make up the FactoryPresetFreqs value.
        MaxEirp:
          $ref: '#/components/schemas/MaxEirp'
          description: The MaxEIRP value.
        MaxDutyCycle:
          $ref: '#/components/schemas/MaxDutyCycle'
          description: The MaxDutyCycle value.
        RfRegion:
          $ref: '#/components/schemas/RfRegion'
          description: The frequency band (RFRegion) value.
        SupportsJoin:
          $ref: '#/components/schemas/SupportsJoin'
          description: The SupportsJoin value.
        Supports32BitFCnt:
          $ref: '#/components/schemas/Supports32BitFCnt'
          description: The Supports32BitFCnt value.
      description: LoRaWANDeviceProfile object.
    CreateDeviceProfileRequest:
      type: object
      title: CreateDeviceProfileRequest
      properties:
        Name:
          $ref: '#/components/schemas/DeviceProfileName'
          description: The name of the new resource.
        LoRaWAN:
          $ref: '#/components/schemas/LoRaWANDeviceProfile'
          description: The device profile information to use to create the device profile.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: The tags to attach to the new device profile. Tags are metadata that you can use to manage a resource.
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
          description: 'Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request. '
    DeviceProfileArn:
      type: string
    ServiceProfileName:
      type: string
      maxLength: 256
    LoRaWANServiceProfile:
      type: object
      properties:
        AddGwMetadata:
          $ref: '#/components/schemas/AddGwMetadata'
          description: The AddGWMetaData value.
      description: LoRaWANServiceProfile object.
    CreateServiceProfileRequest:
      type: object
      title: CreateServiceProfileRequest
      properties:
        Name:
          $ref: '#/components/schemas/ServiceProfileName'
          description: The name of the new resource.
        LoRaWAN:
          $ref: '#/components/schemas/LoRaWANServiceProfile'
          description: The service profile information to use to create the service profile.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: The tags to attach to the new service profile. Tags are metadata that you can use to manage a resource.
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
          description: 'Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request. '
    ServiceProfileArn:
      type: string
    WirelessDeviceType:
      type: string
      enum:
        - Sidewalk
        - LoRaWAN
    WirelessDeviceName:
      type: string
      maxLength: 256
    LoRaWANDevice:
      type: object
      properties:
        DevEui:
          $ref: '#/components/schemas/DevEui'
          description: The DevEUI value.
        DeviceProfileId:
          $ref: '#/components/schemas/DeviceProfileId'
          description: The ID of the device profile for the new wireless device.
        ServiceProfileId:
          $ref: '#/components/schemas/ServiceProfileId'
          description: The ID of the service profile.
        OtaaV1_1:
          $ref: '#/components/schemas/OtaaV1_1'
          description: OTAA device object for v1.1 for create APIs
        OtaaV1_0_x:
          $ref: '#/components/schemas/OtaaV1_0_x'
          description: OTAA device object for create APIs for v1.0.x
        AbpV1_1:
          $ref: '#/components/schemas/AbpV1_1'
          description: ABP device object for create APIs for v1.1
        AbpV1_0_x:
          $ref: '#/components/schemas/AbpV1_0_x'
          description: LoRaWAN object for create APIs
      description: LoRaWAN object for create functions.
    CreateWirelessDeviceRequest:
      type: object
      required:
        - Type
        - DestinationName
      title: CreateWirelessDeviceRequest
      properties:
        Type:
          $ref: '#/components/schemas/WirelessDeviceType'
          description: The wireless device type.
        Name:
          $ref: '#/components/schemas/WirelessDeviceName'
          description: The name of the new resource.
        Description:
          $ref: '#/components/schemas/Description'
          description: The description of the new resource.
        DestinationName:
          $ref: '#/components/schemas/DestinationName'
          description: The name of the destination to assign to the new wireless device.
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
          description: 'Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request. '
        LoRaWAN:
          $ref: '#/components/schemas/LoRaWANDevice'
          description: The device configuration information to use to create the wireless device.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: The tags to attach to the new wireless device. Tags are metadata that you can use to manage a resource.
    WirelessDeviceArn:
      type: string
    WirelessGatewayName:
      type: string
      maxLength: 256
    LoRaWANGateway:
      type: object
      properties:
        GatewayEui:
          $ref: '#/components/schemas/GatewayEui'
          description: The gateway's EUI value.
        RfRegion:
          $ref: '#/components/schemas/RfRegion'
          description: The frequency band (RFRegion) value.
        JoinEuiFilters:
          $ref: '#/components/schemas/JoinEuiFilters'
        NetIdFilters:
          $ref: '#/components/schemas/NetIdFilters'
        SubBands:
          $ref: '#/components/schemas/SubBands'
      description: LoRaWANGateway object.
    CreateWirelessGatewayRequest:
      type: object
      required:
        - LoRaWAN
      title: CreateWirelessGatewayRequest
      properties:
        Name:
          $ref: '#/components/schemas/WirelessGatewayName'
          description: The name of the new resource.
        Description:
          $ref: '#/components/schemas/Description'
          description: The description of the new resource.
        LoRaWAN:
          $ref: '#/components/schemas/LoRaWANGateway'
          description: The gateway configuration information to use to create the wireless gateway.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: The tags to attach to the new wireless gateway. Tags are metadata that you can use to manage a resource.
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
          description: 'Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request. '
    WirelessGatewayArn:
      type: string
    WirelessGatewayTaskName:
      type: string
      minLength: 1
      maxLength: 2048
    UpdateWirelessGatewayTaskCreate:
      type: object
      properties:
        UpdateDataSource:
          $ref: '#/components/schemas/UpdateDataSource'
          description: The link to the S3 bucket.
        UpdateDataRole:
          $ref: '#/components/schemas/UpdateDataSource'
          description: The IAM role used to read data from the S3 bucket.
        LoRaWAN:
          $ref: '#/components/schemas/LoRaWANUpdateGatewayTaskCreate'
          description: The properties that relate to the LoRaWAN wireless gateway.
      description: UpdateWirelessGatewayTaskCreate object.
    CreateWirelessGatewayTaskDefinitionRequest:
      type: object
      required:
        - AutoCreateTasks
      title: CreateWirelessGatewayTaskDefinitionRequest
      properties:
        AutoCreateTasks:
          $ref: '#/components/schemas/AutoCreateTasks'
          description: 'Whether to automatically create tasks using this task definition for all gateways with the specified current version. If <code>false</code>, the task must me created by calling <code>CreateWirelessGatewayTask</code>.'
        Name:
          $ref: '#/components/schemas/WirelessGatewayTaskName'
          description: The name of the new resource.
        Update:
          $ref: '#/components/schemas/UpdateWirelessGatewayTaskCreate'
          description: Information about the gateways to update.
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
          description: 'Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request. '
        Tags:
          $ref: '#/components/schemas/TagList'
          description: The tags to attach to the specified resource. Tags are metadata that you can use to manage a resource.
    WirelessGatewayTaskDefinitionId:
      type: string
      pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
      maxLength: 36
    WirelessGatewayTaskDefinitionArn:
      type: string
    CreateWirelessGatewayTaskRequest:
      type: object
      required:
        - WirelessGatewayTaskDefinitionId
      title: CreateWirelessGatewayTaskRequest
      properties:
        WirelessGatewayTaskDefinitionId:
          $ref: '#/components/schemas/WirelessGatewayTaskDefinitionId'
          description: The ID of the WirelessGatewayTaskDefinition.
    WirelessGatewayTaskStatus:
      type: string
      enum:
        - PENDING
        - IN_PROGRESS
        - FIRST_RETRY
        - SECOND_RETRY
        - COMPLETED
        - FAILED
    DeleteDestinationRequest:
      type: object
      title: DeleteDestinationRequest
      properties: {}
    DeleteDeviceProfileRequest:
      type: object
      title: DeleteDeviceProfileRequest
      properties: {}
    DeleteServiceProfileRequest:
      type: object
      title: DeleteServiceProfileRequest
      properties: {}
    DeleteWirelessDeviceRequest:
      type: object
      title: DeleteWirelessDeviceRequest
      properties: {}
    DeleteWirelessGatewayRequest:
      type: object
      title: DeleteWirelessGatewayRequest
      properties: {}
    DeleteWirelessGatewayTaskDefinitionRequest:
      type: object
      title: DeleteWirelessGatewayTaskDefinitionRequest
      properties: {}
    DeleteWirelessGatewayTaskRequest:
      type: object
      title: DeleteWirelessGatewayTaskRequest
      properties: {}
    Destinations:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/DestinationArn'
          description: The Amazon Resource Name of the resource.
        Name:
          $ref: '#/components/schemas/DestinationName'
          description: The name of the resource.
        ExpressionType:
          $ref: '#/components/schemas/ExpressionType'
          description: The type of value in <code>Expression</code>.
        Expression:
          $ref: '#/components/schemas/Expression'
          description: The rule name or topic rule to send messages to.
        Description:
          $ref: '#/components/schemas/Description'
          description: The description of the resource.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The ARN of the IAM Role that authorizes the destination.
      description: Describes a destination.
    DestinationList:
      type: array
      items:
        $ref: '#/components/schemas/Destinations'
    DevStatusReqFreq:
      type: integer
      minimum: 0
      maximum: 2147483647
    DeviceCertificateList:
      type: array
      description: List of device certificate chain.
      items:
        $ref: '#/components/schemas/CertificateList'
    DeviceProfile:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/DeviceProfileArn'
          description: The Amazon Resource Name of the resource.
        Name:
          $ref: '#/components/schemas/DeviceProfileName'
          description: The name of the resource.
        Id:
          $ref: '#/components/schemas/DeviceProfileId'
          description: The ID of the device profile.
      description: Describes a device profile.
    DeviceProfileList:
      type: array
      items:
        $ref: '#/components/schemas/DeviceProfile'
    DeviceState:
      type: string
      enum:
        - Provisioned
        - RegisteredNotSeen
        - RegisteredReachable
        - RegisteredUnreachable
      description: Device state defines the device status of sidewalk device.
    PartnerAccountId:
      type: string
      maxLength: 256
    PartnerType:
      type: string
      enum:
        - Sidewalk
    DisassociateAwsAccountFromPartnerAccountRequest:
      type: object
      title: DisassociateAwsAccountFromPartnerAccountRequest
      properties: {}
    DisassociateWirelessDeviceFromThingRequest:
      type: object
      title: DisassociateWirelessDeviceFromThingRequest
      properties: {}
    DisassociateWirelessGatewayFromCertificateRequest:
      type: object
      title: DisassociateWirelessGatewayFromCertificateRequest
      properties: {}
    DisassociateWirelessGatewayFromThingRequest:
      type: object
      title: DisassociateWirelessGatewayFromThingRequest
      properties: {}
    DlBucketSize:
      type: integer
      minimum: 0
      maximum: 2147483647
    DlRate:
      type: integer
      minimum: 0
      maximum: 2147483647
    DlRatePolicy:
      type: string
      maxLength: 256
    Double:
      type: number
      format: double
    DrMax:
      type: integer
      minimum: 0
      maximum: 15
    DrMin:
      type: integer
      minimum: 0
      maximum: 15
    EndPoint:
      type: string
      minLength: 1
      maxLength: 256
    Event:
      type: string
      enum:
        - discovered
        - lost
        - ack
        - nack
        - passthrough
      description: Sidewalk device status notification.
    FNwkSIntKey:
      type: string
      pattern: '[a-fA-F0-9]{32}'
    FPort:
      type: integer
      minimum: 1
      maximum: 223
    PresetFreq:
      type: integer
      minimum: 1000000
      maximum: 16700000
    Fingerprint:
      type: string
      pattern: '[a-fA-F0-9]{64}'
      minLength: 64
      maxLength: 64
      format: password
    GetDestinationRequest:
      type: object
      title: GetDestinationRequest
      properties: {}
    GetDeviceProfileRequest:
      type: object
      title: GetDeviceProfileRequest
      properties: {}
    GetLogLevelsByResourceTypesRequest:
      type: object
      title: GetLogLevelsByResourceTypesRequest
      properties: {}
    LogLevel:
      type: string
      enum:
        - INFO
        - ERROR
        - DISABLED
      description: The log level for a log message.
    WirelessGatewayLogOptionList:
      type: array
      description: The list of wireless gateway log options.
      items:
        $ref: '#/components/schemas/WirelessGatewayLogOption'
    WirelessDeviceLogOptionList:
      type: array
      description: The list of wireless device log options.
      items:
        $ref: '#/components/schemas/WirelessDeviceLogOption'
    GetPartnerAccountRequest:
      type: object
      title: GetPartnerAccountRequest
      properties: {}
    SidewalkAccountInfoWithFingerprint:
      type: object
      properties:
        AmazonId:
          $ref: '#/components/schemas/AmazonId'
          description: The Sidewalk Amazon ID.
        Fingerprint:
          $ref: '#/components/schemas/Fingerprint'
          description: The fingerprint of the Sidewalk application server private key.
        Arn:
          $ref: '#/components/schemas/PartnerAccountArn'
          description: The Amazon Resource Name of the resource.
      description: Information about a Sidewalk account.
    ResourceIdentifier:
      type: string
      description: 'The identifier of the resource. For a Wireless Device, it is the wireless device ID. For a wireless gateway, it is the wireless gateway ID.'
      maxLength: 256
    ResourceType:
      type: string
    GetResourceLogLevelRequest:
      type: object
      title: GetResourceLogLevelRequest
      properties: {}
    WirelessGatewayServiceType:
      type: string
      enum:
        - CUPS
        - LNS
    GetServiceEndpointRequest:
      type: object
      title: GetServiceEndpointRequest
      properties: {}
    GetServiceProfileRequest:
      type: object
      title: GetServiceProfileRequest
      properties: {}
    LoRaWANGetServiceProfileInfo:
      type: object
      properties:
        UlRate:
          $ref: '#/components/schemas/UlRate'
          description: The ULRate value.
        UlBucketSize:
          $ref: '#/components/schemas/UlBucketSize'
          description: The ULBucketSize value.
        UlRatePolicy:
          $ref: '#/components/schemas/UlRatePolicy'
          description: The ULRatePolicy value.
        DlRate:
          $ref: '#/components/schemas/DlRate'
          description: The DLRate value.
        DlBucketSize:
          $ref: '#/components/schemas/DlBucketSize'
          description: The DLBucketSize value.
        DlRatePolicy:
          $ref: '#/components/schemas/DlRatePolicy'
          description: The DLRatePolicy value.
        AddGwMetadata:
          $ref: '#/components/schemas/AddGwMetadata'
          description: The AddGWMetaData value.
        DevStatusReqFreq:
          $ref: '#/components/schemas/DevStatusReqFreq'
          description: The DevStatusReqFreq value.
        ReportDevStatusBattery:
          $ref: '#/components/schemas/ReportDevStatusBattery'
          description: The ReportDevStatusBattery value.
        ReportDevStatusMargin:
          $ref: '#/components/schemas/ReportDevStatusMargin'
          description: The ReportDevStatusMargin value.
        DrMin:
          $ref: '#/components/schemas/DrMin'
          description: The DRMin value.
        DrMax:
          $ref: '#/components/schemas/DrMax'
          description: The DRMax value.
        ChannelMask:
          $ref: '#/components/schemas/ChannelMask'
          description: The ChannelMask value.
        PrAllowed:
          $ref: '#/components/schemas/PrAllowed'
          description: The PRAllowed value that describes whether passive roaming is allowed.
        HrAllowed:
          $ref: '#/components/schemas/HrAllowed'
          description: The HRAllowed value that describes whether handover roaming is allowed.
        RaAllowed:
          $ref: '#/components/schemas/RaAllowed'
          description: The RAAllowed value that describes whether roaming activation is allowed.
        NwkGeoLoc:
          $ref: '#/components/schemas/NwkGeoLoc'
          description: The NwkGeoLoc value.
        TargetPer:
          $ref: '#/components/schemas/TargetPer'
          description: The TargetPER value.
        MinGwDiversity:
          $ref: '#/components/schemas/MinGwDiversity'
          description: The MinGwDiversity value.
      description: LoRaWANGetServiceProfileInfo object.
    Identifier:
      type: string
      maxLength: 256
    WirelessDeviceIdType:
      type: string
      enum:
        - WirelessDeviceId
        - DevEui
        - ThingName
        - SidewalkManufacturingSn
    GetWirelessDeviceRequest:
      type: object
      title: GetWirelessDeviceRequest
      properties: {}
    ThingName:
      type: string
    SidewalkDevice:
      type: object
      properties:
        AmazonId:
          $ref: '#/components/schemas/AmazonId'
        SidewalkId:
          $ref: '#/components/schemas/SidewalkId'
          description: The sidewalk device identification.
        SidewalkManufacturingSn:
          $ref: '#/components/schemas/SidewalkManufacturingSn'
          description: The Sidewalk manufacturing series number.
        DeviceCertificates:
          $ref: '#/components/schemas/DeviceCertificateList'
          description: The sidewalk device certificates for Ed25519 and P256r1.
      description: Sidewalk device object.
    GetWirelessDeviceStatisticsRequest:
      type: object
      title: GetWirelessDeviceStatisticsRequest
      properties: {}
    ISODateTimeString:
      type: string
      pattern: '^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$'
    LoRaWANDeviceMetadata:
      type: object
      properties:
        DevEui:
          $ref: '#/components/schemas/DevEui'
          description: The DevEUI value.
        FPort:
          $ref: '#/components/schemas/Integer'
          description: The FPort value.
        DataRate:
          $ref: '#/components/schemas/Integer'
          description: The DataRate value.
        Frequency:
          $ref: '#/components/schemas/Integer'
          description: The device's channel frequency in Hz.
        Timestamp:
          $ref: '#/components/schemas/ISODateTimeString'
          description: The date and time of the metadata.
        Gateways:
          $ref: '#/components/schemas/LoRaWANGatewayMetadataList'
          description: Information about the gateways accessed by the device.
      description: LoRaWAN device metatdata.
    SidewalkDeviceMetadata:
      type: object
      properties:
        Rssi:
          $ref: '#/components/schemas/Integer'
          description: The RSSI value.
        BatteryLevel:
          $ref: '#/components/schemas/BatteryLevel'
          description: Sidewalk device battery level.
        Event:
          $ref: '#/components/schemas/Event'
          description: Sidewalk device status notification.
        DeviceState:
          $ref: '#/components/schemas/DeviceState'
          description: Device state defines the device status of sidewalk device.
      description: MetaData for Sidewalk device.
    GetWirelessGatewayCertificateRequest:
      type: object
      title: GetWirelessGatewayCertificateRequest
      properties: {}
    GetWirelessGatewayFirmwareInformationRequest:
      type: object
      title: GetWirelessGatewayFirmwareInformationRequest
      properties: {}
    LoRaWANGatewayCurrentVersion:
      type: object
      properties:
        CurrentVersion:
          $ref: '#/components/schemas/LoRaWANGatewayVersion'
          description: The version of the gateways that should receive the update.
      description: LoRaWANGatewayCurrentVersion object.
    WirelessGatewayIdType:
      type: string
      enum:
        - GatewayEui
        - WirelessGatewayId
        - ThingName
    GetWirelessGatewayRequest:
      type: object
      title: GetWirelessGatewayRequest
      properties: {}
    GetWirelessGatewayStatisticsRequest:
      type: object
      title: GetWirelessGatewayStatisticsRequest
      properties: {}
    GetWirelessGatewayTaskDefinitionRequest:
      type: object
      title: GetWirelessGatewayTaskDefinitionRequest
      properties: {}
    GetWirelessGatewayTaskRequest:
      type: object
      title: GetWirelessGatewayTaskRequest
      properties: {}
    HrAllowed:
      type: boolean
    Integer:
      type: integer
    JoinEui:
      type: string
      pattern: '[a-fA-F0-9]{16}'
    MaxResults:
      type: integer
      minimum: 0
      maximum: 250
    NextToken:
      type: string
      maxLength: 4096
    ListDestinationsRequest:
      type: object
      title: ListDestinationsRequest
      properties: {}
    ListDeviceProfilesRequest:
      type: object
      title: ListDeviceProfilesRequest
      properties: {}
    ListPartnerAccountsRequest:
      type: object
      title: ListPartnerAccountsRequest
      properties: {}
    SidewalkAccountList:
      type: array
      items:
        $ref: '#/components/schemas/SidewalkAccountInfoWithFingerprint'
    ListServiceProfilesRequest:
      type: object
      title: ListServiceProfilesRequest
      properties: {}
    ServiceProfileList:
      type: array
      items:
        $ref: '#/components/schemas/ServiceProfile'
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
    ListWirelessDevicesRequest:
      type: object
      title: ListWirelessDevicesRequest
      properties: {}
    WirelessDeviceStatisticsList:
      type: array
      items:
        $ref: '#/components/schemas/WirelessDeviceStatistics'
    WirelessGatewayTaskDefinitionType:
      type: string
      enum:
        - UPDATE
    ListWirelessGatewayTaskDefinitionsRequest:
      type: object
      title: ListWirelessGatewayTaskDefinitionsRequest
      properties: {}
    WirelessGatewayTaskDefinitionList:
      type: array
      items:
        $ref: '#/components/schemas/UpdateWirelessGatewayTaskEntry'
    ListWirelessGatewaysRequest:
      type: object
      title: ListWirelessGatewaysRequest
      properties: {}
    WirelessGatewayStatisticsList:
      type: array
      items:
        $ref: '#/components/schemas/WirelessGatewayStatistics'
    LoRaWANGatewayMetadataList:
      type: array
      items:
        $ref: '#/components/schemas/LoRaWANGatewayMetadata'
    LoRaWANGatewayVersion:
      type: object
      properties:
        PackageVersion:
          $ref: '#/components/schemas/PackageVersion'
          description: The version of the wireless gateway firmware.
        Model:
          $ref: '#/components/schemas/Model'
          description: The model number of the wireless gateway.
        Station:
          $ref: '#/components/schemas/Station'
          description: The basic station version of the wireless gateway.
      description: LoRaWANGatewayVersion object.
    LoRaWANGatewayMetadata:
      type: object
      properties:
        GatewayEui:
          $ref: '#/components/schemas/GatewayEui'
          description: The gateway's EUI value.
        Snr:
          $ref: '#/components/schemas/Double'
          description: The SNR value.
        Rssi:
          $ref: '#/components/schemas/Double'
          description: The RSSI value.
      description: LoRaWAN gateway metatdata.
    PackageVersion:
      type: string
      minLength: 1
      maxLength: 32
    Model:
      type: string
      minLength: 1
      maxLength: 4096
    Station:
      type: string
      minLength: 1
      maxLength: 4096
    UlRate:
      type: integer
      minimum: 0
      maximum: 2147483647
    UlBucketSize:
      type: integer
      minimum: 0
      maximum: 2147483647
    UlRatePolicy:
      type: string
      maxLength: 256
    ReportDevStatusBattery:
      type: boolean
    ReportDevStatusMargin:
      type: boolean
    PrAllowed:
      type: boolean
    RaAllowed:
      type: boolean
    NwkGeoLoc:
      type: boolean
    TargetPer:
      type: integer
      minimum: 0
      maximum: 100
    MinGwDiversity:
      type: integer
      minimum: 1
      maximum: 100
    LoRaWANListDevice:
      type: object
      properties:
        DevEui:
          $ref: '#/components/schemas/DevEui'
          description: The DevEUI value.
      description: LoRaWAN object for list functions.
    LoRaWANUpdateDevice:
      type: object
      properties:
        DeviceProfileId:
          $ref: '#/components/schemas/DeviceProfileId'
          description: The ID of the device profile for the wireless device.
        ServiceProfileId:
          $ref: '#/components/schemas/ServiceProfileId'
          description: The ID of the service profile.
      description: LoRaWAN object for update functions.
    UpdateSignature:
      type: string
      minLength: 1
      maxLength: 4096
    LoRaWANUpdateGatewayTaskEntry:
      type: object
      properties:
        CurrentVersion:
          $ref: '#/components/schemas/LoRaWANGatewayVersion'
          description: The version of the gateways that should receive the update.
        UpdateVersion:
          $ref: '#/components/schemas/LoRaWANGatewayVersion'
          description: The firmware version to update the gateway to.
      description: LoRaWANUpdateGatewayTaskEntry object.
    MessageId:
      type: string
    MessageType:
      type: string
      enum:
        - CUSTOM_COMMAND_ID_NOTIFY
        - CUSTOM_COMMAND_ID_GET
        - CUSTOM_COMMAND_ID_SET
        - CUSTOM_COMMAND_ID_RESP
      description: Sidewalk device message type. Default value is <code>CUSTOM_COMMAND_ID_NOTIFY</code>.
    NwkKey:
      type: string
      pattern: '[a-fA-F0-9]{32}'
    NwkSEncKey:
      type: string
      pattern: '[a-fA-F0-9]{32}'
    NwkSKey:
      type: string
      pattern: '[a-fA-F0-9]{32}'
    PayloadData:
      type: string
      pattern: '^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$'
      maxLength: 2048
    PutResourceLogLevelRequest:
      type: object
      required:
        - LogLevel
      title: PutResourceLogLevelRequest
      properties:
        LogLevel:
          $ref: '#/components/schemas/LogLevel'
    ResetAllResourceLogLevelsRequest:
      type: object
      title: ResetAllResourceLogLevelsRequest
      properties: {}
    ResetResourceLogLevelRequest:
      type: object
      title: ResetResourceLogLevelRequest
      properties: {}
    Result:
      type: string
      maxLength: 2048
    SNwkSIntKey:
      type: string
      pattern: '[a-fA-F0-9]{32}'
    TransmitMode:
      type: integer
      minimum: 0
      maximum: 1
    WirelessMetadata:
      type: object
      properties:
        LoRaWAN:
          $ref: '#/components/schemas/LoRaWANSendDataToDevice'
          description: LoRaWAN device info.
        Sidewalk:
          $ref: '#/components/schemas/SidewalkSendDataToDevice'
          description: The Sidewalk account credentials.
      description: WirelessMetadata object.
    SendDataToWirelessDeviceRequest:
      type: object
      required:
        - TransmitMode
        - PayloadData
      title: SendDataToWirelessDeviceRequest
      properties:
        TransmitMode:
          $ref: '#/components/schemas/TransmitMode'
          description: 'The transmit mode to use to send data to the wireless device. Can be: <code>0</code> for UM (unacknowledge mode) or <code>1</code> for AM (acknowledge mode).'
        PayloadData:
          $ref: '#/components/schemas/PayloadData'
          description: 'The binary to be sent to the end device, encoded in base64.'
        WirelessMetadata:
          $ref: '#/components/schemas/WirelessMetadata'
          description: Metadata about the message request.
    Seq:
      type: integer
      minimum: 0
      maximum: 16383
    ServiceProfile:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/ServiceProfileArn'
          description: The Amazon Resource Name of the resource.
        Name:
          $ref: '#/components/schemas/ServiceProfileName'
          description: The name of the resource.
        Id:
          $ref: '#/components/schemas/ServiceProfileId'
          description: The ID of the service profile.
      description: Information about a service profile.
    SidewalkId:
      type: string
      description: The sidewalk device identification.
      maxLength: 256
    SidewalkManufacturingSn:
      type: string
      maxLength: 64
    SidewalkListDevice:
      type: object
      properties:
        AmazonId:
          $ref: '#/components/schemas/AmazonId'
          description: The Sidewalk Amazon ID.
        SidewalkId:
          $ref: '#/components/schemas/SidewalkId'
          description: The sidewalk device identification.
        SidewalkManufacturingSn:
          $ref: '#/components/schemas/SidewalkManufacturingSn'
          description: The Sidewalk manufacturing series number.
        DeviceCertificates:
          $ref: '#/components/schemas/DeviceCertificateList'
          description: The sidewalk device certificates for Ed25519 and P256r1.
      description: Sidewalk object used by list functions.
    SidewalkUpdateAccount:
      type: object
      properties:
        AppServerPrivateKey:
          $ref: '#/components/schemas/AppServerPrivateKey'
          description: The new Sidewalk application server private key.
      description: Sidewalk update.
    SubBand:
      type: integer
      description: A subset of supported frequency channels in a certain RFRegion.
      minimum: 1
      maximum: 8
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      minItems: 0
      maxItems: 200
    TagResourceRequest:
      type: object
      required:
        - Tags
      title: TagResourceRequest
      properties:
        Tags:
          $ref: '#/components/schemas/TagList'
          description: Adds to or modifies the tags of the given resource. Tags are metadata that you can use to manage a resource.
    TestWirelessDeviceRequest:
      type: object
      title: TestWirelessDeviceRequest
      properties: {}
    UntagResourceRequest:
      type: object
      title: UntagResourceRequest
      properties: {}
    UpdateDestinationRequest:
      type: object
      title: UpdateDestinationRequest
      properties:
        ExpressionType:
          $ref: '#/components/schemas/ExpressionType'
          description: The type of value in <code>Expression</code>.
        Expression:
          $ref: '#/components/schemas/Expression'
          description: The new rule name or topic rule to send messages to.
        Description:
          $ref: '#/components/schemas/Description'
          description: A new description of the resource.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The ARN of the IAM Role that authorizes the destination.
    UpdateLogLevelsByResourceTypesRequest:
      type: object
      title: UpdateLogLevelsByResourceTypesRequest
      properties:
        DefaultLogLevel:
          $ref: '#/components/schemas/LogLevel'
        WirelessDeviceLogOptions:
          $ref: '#/components/schemas/WirelessDeviceLogOptionList'
        WirelessGatewayLogOptions:
          $ref: '#/components/schemas/WirelessGatewayLogOptionList'
    UpdatePartnerAccountRequest:
      type: object
      required:
        - Sidewalk
      title: UpdatePartnerAccountRequest
      properties:
        Sidewalk:
          $ref: '#/components/schemas/SidewalkUpdateAccount'
          description: The Sidewalk account credentials.
    UpdateWirelessDeviceRequest:
      type: object
      title: UpdateWirelessDeviceRequest
      properties:
        DestinationName:
          $ref: '#/components/schemas/DestinationName'
          description: The name of the new destination for the device.
        Name:
          $ref: '#/components/schemas/WirelessDeviceName'
          description: The new name of the resource.
        Description:
          $ref: '#/components/schemas/Description'
          description: A new description of the resource.
        LoRaWAN:
          $ref: '#/components/schemas/LoRaWANUpdateDevice'
          description: The updated wireless device's configuration.
    UpdateWirelessGatewayRequest:
      type: object
      title: UpdateWirelessGatewayRequest
      properties:
        Name:
          $ref: '#/components/schemas/WirelessGatewayName'
          description: The new name of the resource.
        Description:
          $ref: '#/components/schemas/Description'
          description: A new description of the resource.
        JoinEuiFilters:
          $ref: '#/components/schemas/JoinEuiFilters'
        NetIdFilters:
          $ref: '#/components/schemas/NetIdFilters'
    UpdateWirelessGatewayTaskEntry:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/WirelessGatewayTaskDefinitionId'
          description: The ID of the new wireless gateway task entry.
        LoRaWAN:
          $ref: '#/components/schemas/LoRaWANUpdateGatewayTaskEntry'
          description: The properties that relate to the LoRaWAN wireless gateway.
        Arn:
          $ref: '#/components/schemas/WirelessGatewayTaskDefinitionArn'
          description: The Amazon Resource Name of the resource.
      description: UpdateWirelessGatewayTaskEntry object.
    WirelessDeviceEvent:
      type: string
      enum:
        - Join
        - Rejoin
        - Uplink_Data
        - Downlink_Data
        - Registration
      description: 'The event for a log message, if the log message is tied to a wireless device.'
    WirelessDeviceEventLogOption:
      type: object
      required:
        - Event
        - LogLevel
      properties:
        Event:
          $ref: '#/components/schemas/WirelessDeviceEvent'
        LogLevel:
          $ref: '#/components/schemas/LogLevel'
      description: '<p>The log options for a wireless device event and can be used to set log levels for a specific wireless device event.</p> <p>For a LoRaWAN device, possible events for a log messsage are: <code>Join</code>, <code>Rejoin</code>, <code>Downlink_Data</code>, and <code>Uplink_Data</code>. For a Sidewalk device, possible events for a log message are <code>Registration</code>, <code>Downlink_Data</code>, and <code>Uplink_Data</code>.</p>'
    WirelessDeviceEventLogOptionList:
      type: array
      description: The list of wireless device event log options.
      items:
        $ref: '#/components/schemas/WirelessDeviceEventLogOption'
    WirelessDeviceStatistics:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/WirelessDeviceArn'
          description: The Amazon Resource Name of the resource.
        Id:
          $ref: '#/components/schemas/WirelessDeviceId'
          description: The ID of the wireless device reporting the data.
        Type:
          $ref: '#/components/schemas/WirelessDeviceType'
          description: The wireless device type.
        Name:
          $ref: '#/components/schemas/WirelessDeviceName'
          description: The name of the resource.
        DestinationName:
          $ref: '#/components/schemas/DestinationName'
          description: The name of the destination to which the device is assigned.
        LastUplinkReceivedAt:
          $ref: '#/components/schemas/ISODateTimeString'
          description: The date and time when the most recent uplink was received.
        LoRaWAN:
          $ref: '#/components/schemas/LoRaWANListDevice'
          description: LoRaWAN device info.
        Sidewalk:
          $ref: '#/components/schemas/SidewalkListDevice'
          description: The Sidewalk account credentials.
      description: Information about a wireless device's operation.
    WirelessGatewayEvent:
      type: string
      enum:
        - CUPS_Request
        - Certificate
      description: 'The event for a log message, if the log message is tied to a wireless gateway.'
    WirelessGatewayEventLogOption:
      type: object
      required:
        - Event
        - LogLevel
      properties:
        Event:
          $ref: '#/components/schemas/WirelessGatewayEvent'
        LogLevel:
          $ref: '#/components/schemas/LogLevel'
      description: '<p>The log options for a wireless gateway event and can be used to set log levels for a specific wireless gateway event.</p> <p>For a LoRaWAN gateway, possible events for a log message are <code>CUPS_Request</code> and <code>Certificate</code>.</p>'
    WirelessGatewayEventLogOptionList:
      type: array
      description: The list of wireless gateway event log options.
      items:
        $ref: '#/components/schemas/WirelessGatewayEventLogOption'
    WirelessGatewayType:
      type: string
      enum:
        - LoRaWAN
      description: The wireless gateway type.
    WirelessGatewayStatistics:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/WirelessGatewayArn'
          description: The Amazon Resource Name of the resource.
        Id:
          $ref: '#/components/schemas/WirelessGatewayId'
          description: The ID of the wireless gateway reporting the data.
        Name:
          $ref: '#/components/schemas/WirelessGatewayName'
          description: The name of the resource.
        Description:
          $ref: '#/components/schemas/Description'
          description: The description of the resource.
        LoRaWAN:
          $ref: '#/components/schemas/LoRaWANGateway'
          description: LoRaWAN gateway info.
        LastUplinkReceivedAt:
          $ref: '#/components/schemas/ISODateTimeString'
          description: The date and time when the most recent uplink was received.
      description: Information about a wireless gateway's operation.
security:
  - hmac: []
