openapi: 3.0.0
info:
  version: '2020-07-20'
  x-release: v4
  title: AWS Proton
  description: '<p>This is the AWS Proton Service API Reference. It provides descriptions, syntax and usage examples for each of the <a href="https://docs.aws.amazon.com/proton/latest/APIReference/API_Operations.html">actions</a> and <a href="https://docs.aws.amazon.com/proton/latest/APIReference/API_Types.html">data types</a> for the AWS Proton service.</p> <p>The documentation for each action shows the Query API request parameters and the XML response.</p> <p>Alternatively, you can use the AWS CLI to access an API. For more information, see the <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-welcome.html">AWS Command Line Interface User Guide</a>.</p> <p>The AWS Proton service is a two-pronged automation framework. Administrators create service templates to provide standardized infrastructure and deployment tooling for serverless and container based applications. Developers, in turn, select from the available service templates to automate their application or service deployments.</p> <p>Because administrators define the infrastructure and tooling that AWS Proton deploys and manages, they need permissions to use all of the listed API operations.</p> <p>When developers select a specific infrastructure and tooling set, AWS Proton deploys their applications. To monitor their applications that are running on AWS Proton, developers need permissions to the service <i>create</i>, <i>list</i>, <i>update</i> and <i>delete</i> API operations and the service instance <i>list</i> and <i>update</i> API operations.</p> <p>To learn more about AWS Proton administration, see the <a href="https://docs.aws.amazon.com/proton/latest/adminguide/Welcome.html">AWS Proton Administrator Guide</a>.</p> <p>To learn more about deploying serverless and containerized applications on AWS Proton, see the <a href="https://docs.aws.amazon.com/proton/latest/userguide/Welcome.html">AWS Proton User Guide</a>.</p> <p> <b>Ensuring Idempotency</b> </p> <p>When you make a mutating API request, the request typically returns a result before the asynchronous workflows of the operation are complete. Operations might also time out or encounter other server issues before they''re complete, even if the request already returned a result. This might make it difficult to determine whether the request succeeded. Moreover, you might need to retry the request multiple times to ensure that the operation completes successfully. However, if the original request and the subsequent retries are successful, the operation occurs multiple times. This means that you might create more resources than you intended.</p> <p> <i>Idempotency</i> ensures that an API request action completes no more than one time. With an idempotent request, if the original request action completes successfully, any subsequent retries complete successfully without performing any further actions. However, the result might contain updated information, such as the current creation status.</p> <p>The following lists of APIs are grouped according to methods that ensure idempotency.</p> <p> <b>Idempotent create APIs with a client token</b> </p> <p>The API actions in this list support idempotency with the use of a <i>client token</i>. The corresponding AWS CLI commands also support idempotency using a client token. A client token is a unique, case-sensitive string of up to 64 ASCII characters. To make an idempotent API request using one of these actions, specify a client token in the request. We recommend that you <i>don''t</i> reuse the same client token for other API requests. If you donâ€™t provide a client token for these APIs, a default client token is automatically provided by SDKs.</p> <p>Given a request action that has succeeded:</p> <p>If you retry the request using the same client token and the same parameters, the retry succeeds without performing any further actions other than returning the original resource detail data in the response.</p> <p>If you retry the request using the same client token, but one or more of the parameters are different, the retry throws a <code>ValidationException</code> with an <code>IdempotentParameterMismatch</code> error.</p> <p>Client tokens expire eight hours after a request is made. If you retry the request with the expired token, a new resource is created.</p> <p>If the original resource is deleted and you retry the request, a new resource is created.</p> <p>Idempotent create APIs with a client token:</p> <ul> <li> <p>CreateEnvironmentTemplateVersion</p> </li> <li> <p>CreateServiceTemplateVersion</p> </li> <li> <p>CreateEnvironmentAccountConnection</p> </li> </ul> <p> <b>Idempotent create APIs</b> </p> <p>Given a request action that has succeeded:</p> <p>If you retry the request with an API from this group, and the original resource <i>hasn''t</i> been modified, the retry succeeds without performing any further actions other than returning the original resource detail data in the response.</p> <p>If the original resource has been modified, the retry throws a <code>ConflictException</code>.</p> <p>If you retry with different input parameters, the retry throws a <code>ValidationException</code> with an <code>IdempotentParameterMismatch</code> error.</p> <p>Idempotent create APIs:</p> <ul> <li> <p>CreateEnvironmentTemplate</p> </li> <li> <p>CreateServiceTemplate</p> </li> <li> <p>CreateEnvironment</p> </li> <li> <p>CreateService</p> </li> </ul> <p> <b>Idempotent delete APIs</b> </p> <p>Given a request action that has succeeded:</p> <p>When you retry the request with an API from this group and the resource was deleted, its metadata is returned in the response.</p> <p>If you retry and the resource doesn''t exist, the response is empty.</p> <p>In both cases, the retry succeeds.</p> <p>Idempotent delete APIs:</p> <ul> <li> <p>DeleteEnvironmentTemplate</p> </li> <li> <p>DeleteEnvironmentTemplateVersion</p> </li> <li> <p>DeleteServiceTemplate</p> </li> <li> <p>DeleteServiceTemplateVersion</p> </li> <li> <p>DeleteEnvironmentAccountConnection</p> </li> </ul> <p> <b>Asynchronous idempotent delete APIs</b> </p> <p>Given a request action that has succeeded:</p> <p>If you retry the request with an API from this group, if the original request delete operation status is <code>DELETE_IN_PROGRESS</code>, the retry returns the resource detail data in the response without performing any further actions.</p> <p>If the original request delete operation is complete, a retry returns an empty response.</p> <p>Asynchronous idempotent delete APIs:</p> <ul> <li> <p>DeleteEnvironment</p> </li> <li> <p>DeleteService</p> </li> </ul>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: proton
  x-aws-signingName: proton
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/proton-2020-07-20.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/proton/'
servers:
  - url: 'http://proton.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS Proton multi-region endpoint
  - url: 'https://proton.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS Proton multi-region endpoint
  - url: 'http://proton.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Proton endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://proton.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Proton endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /#X-Amz-Target=AwsProton20200720.AcceptEnvironmentAccountConnection:
    post:
      operationId: AcceptEnvironmentAccountConnection
      description: '<p>In a management account, an environment account connection request is accepted. When the environment account connection request is accepted, AWS Proton can use the associated IAM role to provision environment infrastructure resources in the associated environment account.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-env-account-connections.html">Environment account connections</a> in the <i>AWS Proton Administrator guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptEnvironmentAccountConnectionOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptEnvironmentAccountConnectionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.AcceptEnvironmentAccountConnection
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.CancelEnvironmentDeployment:
    post:
      operationId: CancelEnvironmentDeployment
      description: '<p>Attempts to cancel an environment deployment on an <a>UpdateEnvironment</a> action, if the deployment is <code>IN_PROGRESS</code>. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-env-update.html">Update an environment</a> in the <i>AWS Proton Administrator guide</i>.</p> <p>The following list includes potential cancellation scenarios.</p> <ul> <li> <p>If the cancellation attempt succeeds, the resulting deployment state is <code>CANCELLED</code>.</p> </li> <li> <p>If the cancellation attempt fails, the resulting deployment state is <code>FAILED</code>.</p> </li> <li> <p>If the current <a>UpdateEnvironment</a> action succeeds before the cancellation attempt starts, the resulting deployment state is <code>SUCCEEDED</code> and the cancellation attempt has no effect.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelEnvironmentDeploymentOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelEnvironmentDeploymentInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.CancelEnvironmentDeployment
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.CancelServiceInstanceDeployment:
    post:
      operationId: CancelServiceInstanceDeployment
      description: '<p>Attempts to cancel a service instance deployment on an <a>UpdateServiceInstance</a> action, if the deployment is <code>IN_PROGRESS</code>. For more information, see <i>Update a service instance</i> in the <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-svc-instance-update.html">AWS Proton Administrator guide</a> or the <a href="https://docs.aws.amazon.com/proton/latest/userguide/ug-svc-instance-update.html">AWS Proton User guide</a>.</p> <p>The following list includes potential cancellation scenarios.</p> <ul> <li> <p>If the cancellation attempt succeeds, the resulting deployment state is <code>CANCELLED</code>.</p> </li> <li> <p>If the cancellation attempt fails, the resulting deployment state is <code>FAILED</code>.</p> </li> <li> <p>If the current <a>UpdateServiceInstance</a> action succeeds before the cancellation attempt starts, the resulting deployment state is <code>SUCCEEDED</code> and the cancellation attempt has no effect.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelServiceInstanceDeploymentOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelServiceInstanceDeploymentInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.CancelServiceInstanceDeployment
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.CancelServicePipelineDeployment:
    post:
      operationId: CancelServicePipelineDeployment
      description: '<p>Attempts to cancel a service pipeline deployment on an <a>UpdateServicePipeline</a> action, if the deployment is <code>IN_PROGRESS</code>. For more information, see <i>Update a service pipeline</i> in the <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-svc-pipeline-update.html">AWS Proton Administrator guide</a> or the <a href="https://docs.aws.amazon.com/proton/latest/userguide/ug-svc-pipeline-update.html">AWS Proton User guide</a>.</p> <p>The following list includes potential cancellation scenarios.</p> <ul> <li> <p>If the cancellation attempt succeeds, the resulting deployment state is <code>CANCELLED</code>.</p> </li> <li> <p>If the cancellation attempt fails, the resulting deployment state is <code>FAILED</code>.</p> </li> <li> <p>If the current <a>UpdateServicePipeline</a> action succeeds before the cancellation attempt starts, the resulting deployment state is <code>SUCCEEDED</code> and the cancellation attempt has no effect.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelServicePipelineDeploymentOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelServicePipelineDeploymentInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.CancelServicePipelineDeployment
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.CreateEnvironment:
    post:
      operationId: CreateEnvironment
      description: 'Deploy a new environment. An AWS Proton environment is created from an environment template that defines infrastructure and resources that can be shared across services. For more information, see the <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-environments.html">Environments</a> in the <i>AWS Proton Administrator Guide.</i> '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEnvironmentOutput'
        '480':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '486':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEnvironmentInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.CreateEnvironment
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.CreateEnvironmentAccountConnection:
    post:
      operationId: CreateEnvironmentAccountConnection
      description: '<p>Create an environment account connection in an environment account so that environment infrastructure resources can be provisioned in the environment account from a management account.</p> <p>An environment account connection is a secure bi-directional connection between a <i>management account</i> and an <i>environment account</i> that maintains authorization and permissions. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-env-account-connections.html">Environment account connections</a> in the <i>AWS Proton Administrator guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEnvironmentAccountConnectionOutput'
        '480':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEnvironmentAccountConnectionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.CreateEnvironmentAccountConnection
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.CreateEnvironmentTemplate:
    post:
      operationId: CreateEnvironmentTemplate
      description: '<p>Create an environment template for AWS Proton. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-templates.html">Environment Templates</a> in the <i>AWS Proton Administrator Guide</i>.</p> <p>You can create an environment template in one of the two following ways:</p> <ul> <li> <p>Register and publish a <i>standard</i> environment template that instructs AWS Proton to deploy and manage environment infrastructure.</p> </li> <li> <p>Register and publish a <i>customer managed</i> environment template that connects AWS Proton to your existing provisioned infrastructure that you manage. AWS Proton <i>doesn''t</i> manage your existing provisioned infrastructure. To create an environment template for customer provisioned and managed infrastructure, include the <code>provisioning</code> parameter and set the value to <code>CUSTOMER_MANAGED</code>. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/template-create.html">Register and publish an environment template</a> in the <i>AWS Proton Administrator Guide</i>.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEnvironmentTemplateOutput'
        '480':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEnvironmentTemplateInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.CreateEnvironmentTemplate
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.CreateEnvironmentTemplateVersion:
    post:
      operationId: CreateEnvironmentTemplateVersion
      description: Create a new major or minor version of an environment template. A major version of an environment template is a version that <i>isn't</i> backwards compatible. A minor version of an environment template is a version that's backwards compatible within its major version.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEnvironmentTemplateVersionOutput'
        '480':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '486':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEnvironmentTemplateVersionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.CreateEnvironmentTemplateVersion
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.CreateService:
    post:
      operationId: CreateService
      description: 'Create an AWS Proton service. An AWS Proton service is an instantiation of a service template and often includes several service instances and pipeline. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-services.html">Services</a> in the <i>AWS Proton Administrator Guide</i> and <a href="https://docs.aws.amazon.com/proton/latest/userguide/ug-service.html">Services</a> in the <i>AWS Proton User Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateServiceOutput'
        '480':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '486':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServiceInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.CreateService
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.CreateServiceTemplate:
    post:
      operationId: CreateServiceTemplate
      description: 'Create a service template. The administrator creates a service template to define standardized infrastructure and an optional CICD service pipeline. Developers, in turn, select the service template from AWS Proton. If the selected service template includes a service pipeline definition, they provide a link to their source code repository. AWS Proton then deploys and manages the infrastructure defined by the selected service template. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/managing-svc-templates.html">Service Templates</a> in the <i>AWS Proton Administrator Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateServiceTemplateOutput'
        '480':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServiceTemplateInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.CreateServiceTemplate
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.CreateServiceTemplateVersion:
    post:
      operationId: CreateServiceTemplateVersion
      description: Create a new major or minor version of a service template. A major version of a service template is a version that <i>isn't</i> backwards compatible. A minor version of a service template is a version that's backwards compatible within its major version.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateServiceTemplateVersionOutput'
        '480':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '486':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServiceTemplateVersionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.CreateServiceTemplateVersion
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.DeleteEnvironment:
    post:
      operationId: DeleteEnvironment
      description: Delete an environment.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteEnvironmentOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteEnvironmentInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.DeleteEnvironment
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.DeleteEnvironmentAccountConnection:
    post:
      operationId: DeleteEnvironmentAccountConnection
      description: '<p>In an environment account, delete an environment account connection.</p> <p>After you delete an environment account connection thatâ€™s in use by an AWS Proton environment, AWS Proton <i>canâ€™t</i> manage the environment infrastructure resources until a new environment account connection is accepted for the environment account and associated environment. You''re responsible for cleaning up provisioned resources that remain without an environment connection.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-env-account-connections.html">Environment account connections</a> in the <i>AWS Proton Administrator guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteEnvironmentAccountConnectionOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteEnvironmentAccountConnectionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.DeleteEnvironmentAccountConnection
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.DeleteEnvironmentTemplate:
    post:
      operationId: DeleteEnvironmentTemplate
      description: 'If no other major or minor versions of an environment template exist, delete the environment template.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteEnvironmentTemplateOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteEnvironmentTemplateInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.DeleteEnvironmentTemplate
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.DeleteEnvironmentTemplateVersion:
    post:
      operationId: DeleteEnvironmentTemplateVersion
      description: '<p>If no other minor versions of an environment template exist, delete a major version of the environment template if it''s not the <code>Recommended</code> version. Delete the <code>Recommended</code> version of the environment template if no other major versions or minor versions of the environment template exist. A major version of an environment template is a version that''s not backwards compatible.</p> <p>Delete a minor version of an environment template if it <i>isn''t</i> the <code>Recommended</code> version. Delete a <code>Recommended</code> minor version of the environment template if no other minor versions of the environment template exist. A minor version of an environment template is a version that''s backwards compatible.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteEnvironmentTemplateVersionOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteEnvironmentTemplateVersionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.DeleteEnvironmentTemplateVersion
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.DeleteService:
    post:
      operationId: DeleteService
      description: Delete a service.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteServiceOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteServiceInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.DeleteService
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.DeleteServiceTemplate:
    post:
      operationId: DeleteServiceTemplate
      description: 'If no other major or minor versions of the service template exist, delete the service template.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteServiceTemplateOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteServiceTemplateInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.DeleteServiceTemplate
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.DeleteServiceTemplateVersion:
    post:
      operationId: DeleteServiceTemplateVersion
      description: '<p>If no other minor versions of a service template exist, delete a major version of the service template if it''s not the <code>Recommended</code> version. Delete the <code>Recommended</code> version of the service template if no other major versions or minor versions of the service template exist. A major version of a service template is a version that <i>isn''t</i> backwards compatible.</p> <p>Delete a minor version of a service template if it''s not the <code>Recommended</code> version. Delete a <code>Recommended</code> minor version of the service template if no other minor versions of the service template exist. A minor version of a service template is a version that''s backwards compatible.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteServiceTemplateVersionOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteServiceTemplateVersionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.DeleteServiceTemplateVersion
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.GetAccountSettings:
    post:
      operationId: GetAccountSettings
      description: Get detail data for the AWS Proton pipeline service role.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountSettingsOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAccountSettingsInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.GetAccountSettings
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.GetEnvironment:
    post:
      operationId: GetEnvironment
      description: Get detail data for an environment.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEnvironmentOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetEnvironmentInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.GetEnvironment
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.GetEnvironmentAccountConnection:
    post:
      operationId: GetEnvironmentAccountConnection
      description: '<p>In an environment account, view the detail data for an environment account connection.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-env-account-connections.html">Environment account connections</a> in the <i>AWS Proton Administrator guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEnvironmentAccountConnectionOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetEnvironmentAccountConnectionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.GetEnvironmentAccountConnection
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.GetEnvironmentTemplate:
    post:
      operationId: GetEnvironmentTemplate
      description: Get detail data for an environment template.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEnvironmentTemplateOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetEnvironmentTemplateInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.GetEnvironmentTemplate
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.GetEnvironmentTemplateVersion:
    post:
      operationId: GetEnvironmentTemplateVersion
      description: View detail data for a major or minor version of an environment template.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEnvironmentTemplateVersionOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetEnvironmentTemplateVersionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.GetEnvironmentTemplateVersion
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.GetService:
    post:
      operationId: GetService
      description: Get detail data for a service.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServiceOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetServiceInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.GetService
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.GetServiceInstance:
    post:
      operationId: GetServiceInstance
      description: 'Get detail data for a service instance. A service instance is an instantiation of service template, which is running in a specific environment.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServiceInstanceOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetServiceInstanceInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.GetServiceInstance
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.GetServiceTemplate:
    post:
      operationId: GetServiceTemplate
      description: Get detail data for a service template.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServiceTemplateOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetServiceTemplateInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.GetServiceTemplate
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.GetServiceTemplateVersion:
    post:
      operationId: GetServiceTemplateVersion
      description: View detail data for a major or minor version of a service template.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServiceTemplateVersionOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetServiceTemplateVersionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.GetServiceTemplateVersion
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.ListEnvironmentAccountConnections:
    post:
      operationId: ListEnvironmentAccountConnections
      description: '<p>View a list of environment account connections.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-env-account-connections.html">Environment account connections</a> in the <i>AWS Proton Administrator guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEnvironmentAccountConnectionsOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListEnvironmentAccountConnectionsInput'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.ListEnvironmentAccountConnections
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.ListEnvironmentTemplateVersions:
    post:
      operationId: ListEnvironmentTemplateVersions
      description: List major or minor versions of an environment template with detail data.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEnvironmentTemplateVersionsOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListEnvironmentTemplateVersionsInput'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.ListEnvironmentTemplateVersions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.ListEnvironmentTemplates:
    post:
      operationId: ListEnvironmentTemplates
      description: List environment templates.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEnvironmentTemplatesOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListEnvironmentTemplatesInput'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.ListEnvironmentTemplates
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.ListEnvironments:
    post:
      operationId: ListEnvironments
      description: List environments with detail data summaries.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEnvironmentsOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListEnvironmentsInput'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.ListEnvironments
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.ListServiceInstances:
    post:
      operationId: ListServiceInstances
      description: List service instances with summaries of detail data.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServiceInstancesOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListServiceInstancesInput'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.ListServiceInstances
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.ListServiceTemplateVersions:
    post:
      operationId: ListServiceTemplateVersions
      description: List major or minor versions of a service template with detail data.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServiceTemplateVersionsOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListServiceTemplateVersionsInput'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.ListServiceTemplateVersions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.ListServiceTemplates:
    post:
      operationId: ListServiceTemplates
      description: List service templates with detail data.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServiceTemplatesOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListServiceTemplatesInput'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.ListServiceTemplates
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.ListServices:
    post:
      operationId: ListServices
      description: List services with summaries of detail data.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServicesOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListServicesInput'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.ListServices
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.ListTagsForResource:
    post:
      operationId: ListTagsForResource
      description: 'List tags for a resource. For more information, see <i>AWS Proton resources and tagging</i> in the <a href="https://docs.aws.amazon.com/proton/latest/adminguide/resources.html">AWS Proton Administrator Guide</a> or <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">AWS Proton User Guide</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceInput'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.ListTagsForResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.RejectEnvironmentAccountConnection:
    post:
      operationId: RejectEnvironmentAccountConnection
      description: '<p>In a management account, reject an environment account connection from another environment account.</p> <p>After you reject an environment account connection request, you <i>wonâ€™t</i> be able to accept or use the rejected environment account connection.</p> <p>You <i>canâ€™t</i> reject an environment account connection that is connected to an environment.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-env-account-connections.html">Environment account connections</a> in the <i>AWS Proton Administrator guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RejectEnvironmentAccountConnectionOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RejectEnvironmentAccountConnectionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.RejectEnvironmentAccountConnection
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.TagResource:
    post:
      operationId: TagResource
      description: 'Tag a resource. For more information, see <i>AWS Proton resources and tagging</i> in the <a href="https://docs.aws.amazon.com/proton/latest/adminguide/resources.html">AWS Proton Administrator Guide</a> or <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">AWS Proton User Guide</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourceInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.TagResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.UntagResource:
    post:
      operationId: UntagResource
      description: 'Remove a tag from a resource. For more information, see <i>AWS Proton resources and tagging</i> in the <a href="https://docs.aws.amazon.com/proton/latest/adminguide/resources.html">AWS Proton Administrator Guide</a> or <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">AWS Proton User Guide</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourceInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.UntagResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.UpdateAccountSettings:
    post:
      operationId: UpdateAccountSettings
      description: Update the AWS Proton pipeline service account settings.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAccountSettingsOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccountSettingsInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.UpdateAccountSettings
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.UpdateEnvironment:
    post:
      operationId: UpdateEnvironment
      description: '<p>Update an environment.</p> <p>If the environment is associated with an environment account connection, <i>don''t</i> update or include the <code>protonServiceRoleArn</code> parameter to update or connect to an environment account connection. </p> <p>You can only update to a new environment account connection if it was created in the same environment account that the current environment account connection was created in and is associated with the current environment.</p> <p>If the environment <i>isn''t</i> associated with an environment account connection, <i>don''t</i> update or include the <code>environmentAccountConnectionId</code> parameter to update or connect to an environment account connection.</p> <p>You can update either the <code>environmentAccountConnectionId</code> or <code>protonServiceRoleArn</code> parameter and value. You canâ€™t update both.</p> <p>There are four modes for updating an environment as described in the following. The <code>deploymentType</code> field defines the mode.</p> <dl> <dt/> <dd> <p> <code>NONE</code> </p> <p>In this mode, a deployment <i>doesn''t</i> occur. Only the requested metadata parameters are updated.</p> </dd> <dt/> <dd> <p> <code>CURRENT_VERSION</code> </p> <p>In this mode, the environment is deployed and updated with the new spec that you provide. Only requested parameters are updated. <i>Donâ€™t</i> include minor or major version parameters when you use this <code>deployment-type</code>.</p> </dd> <dt/> <dd> <p> <code>MINOR_VERSION</code> </p> <p>In this mode, the environment is deployed and updated with the published, recommended (latest) minor version of the current major version in use, by default. You can also specify a different minor version of the current major version in use.</p> </dd> <dt/> <dd> <p> <code>MAJOR_VERSION</code> </p> <p>In this mode, the environment is deployed and updated with the published, recommended (latest) major and minor version of the current template, by default. You can also specify a different major version that''s higher than the major version in use and a minor version (optional).</p> </dd> </dl>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEnvironmentOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEnvironmentInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.UpdateEnvironment
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.UpdateEnvironmentAccountConnection:
    post:
      operationId: UpdateEnvironmentAccountConnection
      description: '<p>In an environment account, update an environment account connection to use a new IAM role.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-env-account-connections.html">Environment account connections</a> in the <i>AWS Proton Administrator guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEnvironmentAccountConnectionOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEnvironmentAccountConnectionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.UpdateEnvironmentAccountConnection
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.UpdateEnvironmentTemplate:
    post:
      operationId: UpdateEnvironmentTemplate
      description: Update an environment template.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEnvironmentTemplateOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEnvironmentTemplateInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.UpdateEnvironmentTemplate
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.UpdateEnvironmentTemplateVersion:
    post:
      operationId: UpdateEnvironmentTemplateVersion
      description: Update a major or minor version of an environment template.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEnvironmentTemplateVersionOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEnvironmentTemplateVersionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.UpdateEnvironmentTemplateVersion
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.UpdateService:
    post:
      operationId: UpdateService
      description: <p>Edit a service description or use a spec to add and delete service instances.</p> <note> <p>Existing service instances and the service pipeline <i>can't</i> be edited using this API. They can only be deleted.</p> </note> <p>Use the <code>description</code> parameter to modify the description.</p> <p>Edit the <code>spec</code> parameter to add or delete instances.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateServiceOutput'
        '480':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '486':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServiceInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.UpdateService
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.UpdateServiceInstance:
    post:
      operationId: UpdateServiceInstance
      description: '<p>Update a service instance.</p> <p>There are four modes for updating a service instance as described in the following. The <code>deploymentType</code> field defines the mode.</p> <dl> <dt/> <dd> <p> <code>NONE</code> </p> <p>In this mode, a deployment <i>doesn''t</i> occur. Only the requested metadata parameters are updated.</p> </dd> <dt/> <dd> <p> <code>CURRENT_VERSION</code> </p> <p>In this mode, the service instance is deployed and updated with the new spec that you provide. Only requested parameters are updated. <i>Donâ€™t</i> include minor or major version parameters when you use this <code>deployment-type</code>.</p> </dd> <dt/> <dd> <p> <code>MINOR_VERSION</code> </p> <p>In this mode, the service instance is deployed and updated with the published, recommended (latest) minor version of the current major version in use, by default. You can also specify a different minor version of the current major version in use.</p> </dd> <dt/> <dd> <p> <code>MAJOR_VERSION</code> </p> <p>In this mode, the service instance is deployed and updated with the published, recommended (latest) major and minor version of the current template, by default. You can also specify a different major version that is higher than the major version in use and a minor version (optional).</p> </dd> </dl>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateServiceInstanceOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServiceInstanceInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.UpdateServiceInstance
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.UpdateServicePipeline:
    post:
      operationId: UpdateServicePipeline
      description: '<p>Update the service pipeline.</p> <p>There are four modes for updating a service pipeline as described in the following. The <code>deploymentType</code> field defines the mode.</p> <dl> <dt/> <dd> <p> <code>NONE</code> </p> <p>In this mode, a deployment <i>doesn''t</i> occur. Only the requested metadata parameters are updated.</p> </dd> <dt/> <dd> <p> <code>CURRENT_VERSION</code> </p> <p>In this mode, the service pipeline is deployed and updated with the new spec that you provide. Only requested parameters are updated. <i>Donâ€™t</i> include minor or major version parameters when you use this <code>deployment-type</code>.</p> </dd> <dt/> <dd> <p> <code>MINOR_VERSION</code> </p> <p>In this mode, the service pipeline is deployed and updated with the published, recommended (latest) minor version of the current major version in use, by default. You can also specify a different minor version of the current major version in use.</p> </dd> <dt/> <dd> <p> <code>MAJOR_VERSION</code> </p> <p>In this mode, the service pipeline is deployed and updated with the published, recommended (latest) major and minor version of the current template by default. You can also specify a different major version that is higher than the major version in use and a minor version (optional).</p> </dd> </dl>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateServicePipelineOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServicePipelineInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.UpdateServicePipeline
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.UpdateServiceTemplate:
    post:
      operationId: UpdateServiceTemplate
      description: Update a service template.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateServiceTemplateOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServiceTemplateInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.UpdateServiceTemplate
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=AwsProton20200720.UpdateServiceTemplateVersion:
    post:
      operationId: UpdateServiceTemplateVersion
      description: Update a major or minor version of a service template.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateServiceTemplateVersionOutput'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServiceTemplateVersionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.UpdateServiceTemplateVersion
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AcceptEnvironmentAccountConnectionOutput:
      type: object
      required:
        - environmentAccountConnection
      properties:
        environmentAccountConnection:
          $ref: '#/components/schemas/EnvironmentAccountConnection'
          description: The environment account connection data that's returned by AWS Proton.
    AcceptEnvironmentAccountConnectionInput:
      type: object
      required:
        - id
      title: AcceptEnvironmentAccountConnectionInput
      properties:
        id:
          $ref: '#/components/schemas/EnvironmentAccountConnectionId'
          description: The ID of the environment account connection.
    ValidationException: {}
    AccessDeniedException: {}
    ThrottlingException: {}
    ConflictException: {}
    ResourceNotFoundException: {}
    InternalServerException: {}
    CancelEnvironmentDeploymentOutput:
      type: object
      required:
        - environment
      properties:
        environment:
          $ref: '#/components/schemas/Environment'
          description: The environment summary data that's returned by AWS Proton.
    CancelEnvironmentDeploymentInput:
      type: object
      required:
        - environmentName
      title: CancelEnvironmentDeploymentInput
      properties:
        environmentName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the environment with the deployment to cancel.
    CancelServiceInstanceDeploymentOutput:
      type: object
      required:
        - serviceInstance
      properties:
        serviceInstance:
          $ref: '#/components/schemas/ServiceInstance'
          description: The service instance summary data that's returned by AWS Proton.
    CancelServiceInstanceDeploymentInput:
      type: object
      required:
        - serviceInstanceName
        - serviceName
      title: CancelServiceInstanceDeploymentInput
      properties:
        serviceInstanceName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the service instance with the deployment to cancel.
        serviceName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the service with the service instance deployment to cancel.
    CancelServicePipelineDeploymentOutput:
      type: object
      required:
        - pipeline
      properties:
        pipeline:
          $ref: '#/components/schemas/ServicePipeline'
          description: The service pipeline detail data that's returned by AWS Proton.
    CancelServicePipelineDeploymentInput:
      type: object
      required:
        - serviceName
      title: CancelServicePipelineDeploymentInput
      properties:
        serviceName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the service with the service pipeline deployment to cancel.
    CreateEnvironmentOutput:
      type: object
      required:
        - environment
      properties:
        environment:
          $ref: '#/components/schemas/Environment'
          description: The environment detail data that's returned by AWS Proton.
    CreateEnvironmentInput:
      type: object
      required:
        - name
        - spec
        - templateMajorVersion
        - templateName
      title: CreateEnvironmentInput
      properties:
        description:
          $ref: '#/components/schemas/Description'
          description: A description of the environment that's being created and deployed.
        environmentAccountConnectionId:
          $ref: '#/components/schemas/EnvironmentAccountConnectionId'
          description: 'The ID of the environment account connection that you provide if you''re provisioning your environment infrastructure resources to an environment account. You must include either the <code>environmentAccountConnectionId</code> or <code>protonServiceRoleArn</code> parameter and value. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-env-account-connections.html">Environment account connections</a> in the <i>AWS Proton Administrator guide</i>.'
        name:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the environment.
        protonServiceRoleArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the AWS Proton service role that allows AWS Proton to make calls to other services on your behalf. You must include either the <code>environmentAccountConnectionId</code> or <code>protonServiceRoleArn</code> parameter and value.
        spec:
          $ref: '#/components/schemas/SpecContents'
          description: 'A link to a YAML formatted spec file that provides inputs as defined in the environment template bundle schema file. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-environments.html">Environments</a> in the <i>AWS Proton Administrator Guide</i>.'
        tags:
          $ref: '#/components/schemas/TagList'
          description: 'Create tags for your environment. For more information, see <i>AWS Proton resources and tagging</i> in the <a href="https://docs.aws.amazon.com/proton/latest/adminguide/resources.html">AWS Proton Administrator Guide</a> or <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">AWS Proton User Guide</a>.'
        templateMajorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: The ID of the major version of the environment template.
        templateMinorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: The ID of the minor version of the environment template.
        templateName:
          $ref: '#/components/schemas/ResourceName'
          description: 'The name of the environment template. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-templates.html">Environment Templates</a> in the <i>AWS Proton Administrator Guide</i>.'
    ServiceQuotaExceededException: {}
    CreateEnvironmentAccountConnectionOutput:
      type: object
      required:
        - environmentAccountConnection
      properties:
        environmentAccountConnection:
          $ref: '#/components/schemas/EnvironmentAccountConnection'
          description: The environment account connection detail data that's returned by AWS Proton.
    CreateEnvironmentAccountConnectionInput:
      type: object
      required:
        - environmentName
        - managementAccountId
        - roleArn
      title: CreateEnvironmentAccountConnectionInput
      properties:
        clientToken:
          $ref: '#/components/schemas/ClientToken'
          description: 'When included, if two identicial requests are made with the same client token, AWS Proton returns the environment account connection that the first request created.'
        environmentName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the AWS Proton environment that's created in the associated management account.
        managementAccountId:
          $ref: '#/components/schemas/AwsAccountId'
          description: 'The ID of the management account that accepts or rejects the environment account connection. You create an manage the AWS Proton environment in this account. If the management account accepts the environment account connection, AWS Proton can use the associated IAM role to provision environment infrastructure resources in the associated environment account.'
        roleArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the IAM service role that's created in the environment account. AWS Proton uses this role to provision infrastructure resources in the associated environment account.
    CreateEnvironmentTemplateOutput:
      type: object
      required:
        - environmentTemplate
      properties:
        environmentTemplate:
          $ref: '#/components/schemas/EnvironmentTemplate'
          description: The environment template detail data that's returned by AWS Proton.
    CreateEnvironmentTemplateInput:
      type: object
      required:
        - name
      title: CreateEnvironmentTemplateInput
      properties:
        description:
          $ref: '#/components/schemas/Description'
          description: A description of the environment template.
        displayName:
          $ref: '#/components/schemas/DisplayName'
          description: The environment template name as displayed in the developer interface.
        encryptionKey:
          $ref: '#/components/schemas/Arn'
          description: A customer provided encryption key that AWS Proton uses to encrypt data.
        name:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the environment template.
        provisioning:
          $ref: '#/components/schemas/Provisioning'
          description: 'When included, indicates that the environment template is for customer provisioned and managed infrastructure.'
        tags:
          $ref: '#/components/schemas/TagList'
          description: 'Create tags for your environment template. For more information, see <i>AWS Proton resources and tagging</i> in the <a href="https://docs.aws.amazon.com/proton/latest/adminguide/resources.html">AWS Proton Administrator Guide</a> or <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">AWS Proton User Guide</a>.'
    CreateEnvironmentTemplateVersionOutput:
      type: object
      required:
        - environmentTemplateVersion
      properties:
        environmentTemplateVersion:
          $ref: '#/components/schemas/EnvironmentTemplateVersion'
          description: The environment template detail data that's returned by AWS Proton.
    CreateEnvironmentTemplateVersionInput:
      type: object
      required:
        - source
        - templateName
      title: CreateEnvironmentTemplateVersionInput
      properties:
        clientToken:
          $ref: '#/components/schemas/ClientToken'
          description: 'When included, if two identicial requests are made with the same client token, AWS Proton returns the environment template version that the first request created.'
        description:
          $ref: '#/components/schemas/Description'
          description: A description of the new version of an environment template.
        majorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: '<p>To create a new minor version of the environment template, include a <code>majorVersion</code>.</p> <p>To create a new major and minor version of the environment template, <i>exclude</i> <code>majorVersion</code>.</p>'
        source:
          $ref: '#/components/schemas/TemplateVersionSourceInput'
          description: An object that includes the template bundle S3 bucket path and name for the new version of an template.
        tags:
          $ref: '#/components/schemas/TagList'
          description: Create tags for a new version of an environment template.
        templateName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the environment template.
    CreateServiceOutput:
      type: object
      required:
        - service
      properties:
        service:
          $ref: '#/components/schemas/Service'
          description: The service detail data that's returned by AWS Proton.
    CreateServiceInput:
      type: object
      required:
        - name
        - spec
        - templateMajorVersion
        - templateName
      title: CreateServiceInput
      properties:
        branchName:
          $ref: '#/components/schemas/GitBranchName'
          description: The name of the code repository branch that holds the code that's deployed in AWS Proton. <i>Don't</i> include this parameter if your service template <i>doesn't</i> include a service pipeline.
        description:
          $ref: '#/components/schemas/Description'
          description: A description of the AWS Proton service.
        name:
          $ref: '#/components/schemas/ResourceName'
          description: The service name.
        repositoryConnectionArn:
          $ref: '#/components/schemas/Arn'
          description: 'The Amazon Resource Name (ARN) of the repository connection. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/setting-up-for-service.html#setting-up-vcontrol">Set up repository connection</a> in the <i>AWS Proton Administrator Guide</i> and <a href="https://docs.aws.amazon.com/proton/latest/userguide/proton-setup.html#setup-repo-connection">Setting up with AWS Proton</a> in the <i>AWS Proton User Guide</i>. <i>Don''t</i> include this parameter if your service template <i>doesn''t</i> include a service pipeline.'
        repositoryId:
          $ref: '#/components/schemas/RepositoryId'
          description: The ID of the code repository. <i>Don't</i> include this parameter if your service template <i>doesn't</i> include a service pipeline.
        spec:
          $ref: '#/components/schemas/SpecContents'
          description: 'A link to a spec file that provides inputs as defined in the service template bundle schema file. The spec file is in YAML format. Donâ€™t include pipeline inputs in the spec if your service template <i>doesnâ€™t</i> include a service pipeline. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-create-svc.html.html">Create a service</a> in the <i>AWS Proton Administrator Guide</i> and <a href="https://docs.aws.amazon.com/proton/latest/userguide/ug-svc-create.html">Create a service</a> in the <i>AWS Proton User Guide</i>.'
        tags:
          $ref: '#/components/schemas/TagList'
          description: 'Create tags for your service. For more information, see <i>AWS Proton resources and tagging</i> in the <a href="https://docs.aws.amazon.com/proton/latest/adminguide/resources.html">AWS Proton Administrator Guide</a> or <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">AWS Proton User Guide</a>.'
        templateMajorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: The ID of the major version of the service template that was used to create the service.
        templateMinorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: The ID of the minor version of the service template that was used to create the service.
        templateName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the service template that's used to create the service.
    CreateServiceTemplateOutput:
      type: object
      required:
        - serviceTemplate
      properties:
        serviceTemplate:
          $ref: '#/components/schemas/ServiceTemplate'
          description: The service template detail data that's returned by AWS Proton.
    CreateServiceTemplateInput:
      type: object
      required:
        - name
      title: CreateServiceTemplateInput
      properties:
        description:
          $ref: '#/components/schemas/Description'
          description: A description of the service template.
        displayName:
          $ref: '#/components/schemas/DisplayName'
          description: The name of the service template as displayed in the developer interface.
        encryptionKey:
          $ref: '#/components/schemas/Arn'
          description: A customer provided encryption key that's used to encrypt data.
        name:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the service template.
        pipelineProvisioning:
          $ref: '#/components/schemas/Provisioning'
          description: 'AWS Proton includes a service pipeline for your service by default. When included, this parameter indicates that an AWS Proton service pipeline <i>won''t</i> be included for your service. Once specified, this parameter <i>can''t</i> be changed. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-template-bundles.html">Service template bundles</a> in the <i>AWS Proton Administrator Guide</i>.'
        tags:
          $ref: '#/components/schemas/TagList'
          description: 'Create tags for your service template. For more information, see <i>AWS Proton resources and tagging</i> in the <a href="https://docs.aws.amazon.com/proton/latest/adminguide/resources.html">AWS Proton Administrator Guide</a> or <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">AWS Proton User Guide</a>.'
    CreateServiceTemplateVersionOutput:
      type: object
      required:
        - serviceTemplateVersion
      properties:
        serviceTemplateVersion:
          $ref: '#/components/schemas/ServiceTemplateVersion'
          description: The service template version summary of detail data that's returned by AWS Proton.
    CreateServiceTemplateVersionInput:
      type: object
      required:
        - compatibleEnvironmentTemplates
        - source
        - templateName
      title: CreateServiceTemplateVersionInput
      properties:
        clientToken:
          $ref: '#/components/schemas/ClientToken'
          description: 'When included, if two identicial requests are made with the same client token, AWS Proton returns the service template version that the first request created.'
        compatibleEnvironmentTemplates:
          $ref: '#/components/schemas/CompatibleEnvironmentTemplateInputList'
          description: An array of compatible environment template objects for the new version of a service template.
        description:
          $ref: '#/components/schemas/Description'
          description: A description of the new version of a service template.
        majorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: '<p>To create a new minor version of the service template, include a <code>majorVersion</code>.</p> <p>To create a new major and minor version of the service template, <i>exclude</i> <code>majorVersion</code>.</p>'
        source:
          $ref: '#/components/schemas/TemplateVersionSourceInput'
          description: An object that includes the template bundle S3 bucket path and name for the new version of a service template.
        tags:
          $ref: '#/components/schemas/TagList'
          description: Create tags for a new version of a service template.
        templateName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the service template.
    DeleteEnvironmentOutput:
      type: object
      properties:
        environment:
          $ref: '#/components/schemas/Environment'
          description: The environment detail data that's returned by AWS Proton.
    DeleteEnvironmentInput:
      type: object
      required:
        - name
      title: DeleteEnvironmentInput
      properties:
        name:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the environment to delete.
    DeleteEnvironmentAccountConnectionOutput:
      type: object
      properties:
        environmentAccountConnection:
          $ref: '#/components/schemas/EnvironmentAccountConnection'
          description: The environment account connection detail data that's returned by AWS Proton.
    DeleteEnvironmentAccountConnectionInput:
      type: object
      required:
        - id
      title: DeleteEnvironmentAccountConnectionInput
      properties:
        id:
          $ref: '#/components/schemas/EnvironmentAccountConnectionId'
          description: The ID of the environment account connection to delete.
    DeleteEnvironmentTemplateOutput:
      type: object
      properties:
        environmentTemplate:
          $ref: '#/components/schemas/EnvironmentTemplate'
          description: The environment template detail data that's returned by AWS Proton.
    DeleteEnvironmentTemplateInput:
      type: object
      required:
        - name
      title: DeleteEnvironmentTemplateInput
      properties:
        name:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the environment template to delete.
    DeleteEnvironmentTemplateVersionOutput:
      type: object
      properties:
        environmentTemplateVersion:
          $ref: '#/components/schemas/EnvironmentTemplateVersion'
          description: The environment template version detail data that's returned by AWS Proton.
    DeleteEnvironmentTemplateVersionInput:
      type: object
      required:
        - majorVersion
        - minorVersion
        - templateName
      title: DeleteEnvironmentTemplateVersionInput
      properties:
        majorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: The environment template major version to delete.
        minorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: The environment template minor version to delete.
        templateName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the environment template.
    DeleteServiceOutput:
      type: object
      properties:
        service:
          $ref: '#/components/schemas/Service'
          description: The service detail data that's returned by AWS Proton.
    DeleteServiceInput:
      type: object
      required:
        - name
      title: DeleteServiceInput
      properties:
        name:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the service to delete.
    DeleteServiceTemplateOutput:
      type: object
      properties:
        serviceTemplate:
          $ref: '#/components/schemas/ServiceTemplate'
          description: The service template detail data that's returned by AWS Proton.
    DeleteServiceTemplateInput:
      type: object
      required:
        - name
      title: DeleteServiceTemplateInput
      properties:
        name:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the service template to delete.
    DeleteServiceTemplateVersionOutput:
      type: object
      properties:
        serviceTemplateVersion:
          $ref: '#/components/schemas/ServiceTemplateVersion'
          description: The service template version detail data that's returned by AWS Proton.
    DeleteServiceTemplateVersionInput:
      type: object
      required:
        - majorVersion
        - minorVersion
        - templateName
      title: DeleteServiceTemplateVersionInput
      properties:
        majorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: The service template major version to delete.
        minorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: The service template minor version to delete.
        templateName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the service template.
    GetAccountSettingsOutput:
      type: object
      properties:
        accountSettings:
          $ref: '#/components/schemas/AccountSettings'
          description: The AWS Proton pipeline service role detail data that's returned by AWS Proton.
    GetAccountSettingsInput:
      type: object
      title: GetAccountSettingsInput
      properties: {}
    GetEnvironmentOutput:
      type: object
      required:
        - environment
      properties:
        environment:
          $ref: '#/components/schemas/Environment'
          description: The environment detail data that's returned by AWS Proton.
    GetEnvironmentInput:
      type: object
      required:
        - name
      title: GetEnvironmentInput
      properties:
        name:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the environment that you want to get the detail data for.
    GetEnvironmentAccountConnectionOutput:
      type: object
      required:
        - environmentAccountConnection
      properties:
        environmentAccountConnection:
          $ref: '#/components/schemas/EnvironmentAccountConnection'
          description: The environment account connection detail data that's returned by AWS Proton.
    GetEnvironmentAccountConnectionInput:
      type: object
      required:
        - id
      title: GetEnvironmentAccountConnectionInput
      properties:
        id:
          $ref: '#/components/schemas/EnvironmentAccountConnectionId'
          description: The ID of the environment account connection.
    GetEnvironmentTemplateOutput:
      type: object
      required:
        - environmentTemplate
      properties:
        environmentTemplate:
          $ref: '#/components/schemas/EnvironmentTemplate'
          description: The environment template detail data that's returned by AWS Proton.
    GetEnvironmentTemplateInput:
      type: object
      required:
        - name
      title: GetEnvironmentTemplateInput
      properties:
        name:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the environment template that you want to get the detail data for.
    GetEnvironmentTemplateVersionOutput:
      type: object
      required:
        - environmentTemplateVersion
      properties:
        environmentTemplateVersion:
          $ref: '#/components/schemas/EnvironmentTemplateVersion'
          description: The environment template version detail data that's returned by AWS Proton.
    GetEnvironmentTemplateVersionInput:
      type: object
      required:
        - majorVersion
        - minorVersion
        - templateName
      title: GetEnvironmentTemplateVersionInput
      properties:
        majorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: 'To view environment template major version detail data, include <code>majorVersion</code>.'
        minorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: 'To view environment template minor version detail data, include <code>minorVersion</code>.'
        templateName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the environment template.
    GetServiceOutput:
      type: object
      properties:
        service:
          $ref: '#/components/schemas/Service'
          description: The service detail data that's returned by AWS Proton.
    GetServiceInput:
      type: object
      required:
        - name
      title: GetServiceInput
      properties:
        name:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the service that you want to get the detail data for.
    GetServiceInstanceOutput:
      type: object
      required:
        - serviceInstance
      properties:
        serviceInstance:
          $ref: '#/components/schemas/ServiceInstance'
          description: The service instance detail data that's returned by AWS Proton.
    GetServiceInstanceInput:
      type: object
      required:
        - name
        - serviceName
      title: GetServiceInstanceInput
      properties:
        name:
          $ref: '#/components/schemas/ResourceName'
          description: The name of a service instance that you want to get the detail data for.
        serviceName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the service that the service instance belongs to.
    GetServiceTemplateOutput:
      type: object
      required:
        - serviceTemplate
      properties:
        serviceTemplate:
          $ref: '#/components/schemas/ServiceTemplate'
          description: The service template detail data that's returned by AWS Proton.
    GetServiceTemplateInput:
      type: object
      required:
        - name
      title: GetServiceTemplateInput
      properties:
        name:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the service template that you want to get detail data for.
    GetServiceTemplateVersionOutput:
      type: object
      required:
        - serviceTemplateVersion
      properties:
        serviceTemplateVersion:
          $ref: '#/components/schemas/ServiceTemplateVersion'
          description: The service template version detail data that's returned by AWS Proton.
    GetServiceTemplateVersionInput:
      type: object
      required:
        - majorVersion
        - minorVersion
        - templateName
      title: GetServiceTemplateVersionInput
      properties:
        majorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: 'To view service template major version detail data, include <code>majorVersion</code>.'
        minorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: 'To view service template minor version detail data, include <code>minorVersion</code>.'
        templateName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the service template.
    ListEnvironmentAccountConnectionsOutput:
      type: object
      required:
        - environmentAccountConnections
      properties:
        environmentAccountConnections:
          $ref: '#/components/schemas/EnvironmentAccountConnectionSummaryList'
          description: 'An array of environment account connections with details that''s returned by AWS Proton. '
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token to indicate the location of the next environment account connection in the array of environment account connections, after the current requested list of environment account connections.'
    ListEnvironmentAccountConnectionsInput:
      type: object
      required:
        - requestedBy
      title: ListEnvironmentAccountConnectionsInput
      properties:
        environmentName:
          $ref: '#/components/schemas/ResourceName'
          description: The environment name that's associated with each listed environment account connection.
        maxResults:
          $ref: '#/components/schemas/MaxPageResults'
          description: The maximum number of environment account connections to list.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token to indicate the location of the next environment account connection in the array of environment account connections, after the list of environment account connections that was previously requested.'
        requestedBy:
          $ref: '#/components/schemas/EnvironmentAccountConnectionRequesterAccountType'
          description: The type of account making the <code>ListEnvironmentAccountConnections</code> request.
        statuses:
          $ref: '#/components/schemas/EnvironmentAccountConnectionStatusList'
          description: The status details for each listed environment account connection.
    ListEnvironmentTemplateVersionsOutput:
      type: object
      required:
        - templateVersions
      properties:
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token to indicate the location of the next major or minor version in the array of major or minor versions of an environment template, after the list of major or minor versions that was previously requested.'
        templateVersions:
          $ref: '#/components/schemas/EnvironmentTemplateVersionSummaryList'
          description: An array of major or minor versions of an environment template detail data.
    ListEnvironmentTemplateVersionsInput:
      type: object
      required:
        - templateName
      title: ListEnvironmentTemplateVersionsInput
      properties:
        majorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: '<p>To view a list of minor of versions under a major version of an environment template, include <code>majorVersion</code>.</p> <p>To view a list of major versions of an environment template, <i>exclude</i> <code>majorVersion</code>.</p>'
        maxResults:
          $ref: '#/components/schemas/MaxPageResults'
          description: The maximum number of major or minor versions of an environment template to list.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token to indicate the location of the next major or minor version in the array of major or minor versions of an environment template, after the list of major or minor versions that was previously requested.'
        templateName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the environment template.
    ListEnvironmentTemplatesOutput:
      type: object
      required:
        - templates
      properties:
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token to indicate the location of the next environment template in the array of environment templates, after the current requested list of environment templates.'
        templates:
          $ref: '#/components/schemas/EnvironmentTemplateSummaryList'
          description: An array of environment templates with detail data.
    ListEnvironmentTemplatesInput:
      type: object
      title: ListEnvironmentTemplatesInput
      properties:
        maxResults:
          $ref: '#/components/schemas/MaxPageResults'
          description: The maximum number of environment templates to list.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token to indicate the location of the next environment template in the array of environment templates, after the list of environment templates that was previously requested.'
    ListEnvironmentsOutput:
      type: object
      required:
        - environments
      properties:
        environments:
          $ref: '#/components/schemas/EnvironmentSummaryList'
          description: An array of environment detail data summaries.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token to indicate the location of the next environment in the array of environments, after the current requested list of environments.'
    ListEnvironmentsInput:
      type: object
      title: ListEnvironmentsInput
      properties:
        environmentTemplates:
          $ref: '#/components/schemas/EnvironmentTemplateFilterList'
          description: An array of the versions of the environment template.
        maxResults:
          $ref: '#/components/schemas/MaxPageResults'
          description: The maximum number of environments to list.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token to indicate the location of the next environment in the array of environments, after the list of environments that was previously requested.'
    ListServiceInstancesOutput:
      type: object
      required:
        - serviceInstances
      properties:
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token to indicate the location of the next service instance in the array of service instances, after the current requested list of service instances.'
        serviceInstances:
          $ref: '#/components/schemas/ServiceInstanceSummaryList'
          description: An array of service instances with summaries of detail data.
    ListServiceInstancesInput:
      type: object
      title: ListServiceInstancesInput
      properties:
        maxResults:
          $ref: '#/components/schemas/MaxPageResults'
          description: The maximum number of service instances to list.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token to indicate the location of the next service in the array of service instances, after the list of service instances that was previously requested.'
        serviceName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the service that the service instance belongs to.
    ListServiceTemplateVersionsOutput:
      type: object
      required:
        - templateVersions
      properties:
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token to indicate the location of the next major or minor version in the array of major or minor versions of a service template, after the list of major or minor versions that was previously requested.'
        templateVersions:
          $ref: '#/components/schemas/ServiceTemplateVersionSummaryList'
          description: An array of major or minor versions of a service template with detail data.
    ListServiceTemplateVersionsInput:
      type: object
      required:
        - templateName
      title: ListServiceTemplateVersionsInput
      properties:
        majorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: '<p>To view a list of minor of versions under a major version of a service template, include <code>majorVersion</code>.</p> <p>To view a list of major versions of a service template, <i>exclude</i> <code>majorVersion</code>.</p>'
        maxResults:
          $ref: '#/components/schemas/MaxPageResults'
          description: The maximum number of major or minor versions of a service template to list.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token to indicate the location of the next major or minor version in the array of major or minor versions of a service template, after the list of major or minor versions that was previously requested.'
        templateName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the service template.
    ListServiceTemplatesOutput:
      type: object
      required:
        - templates
      properties:
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token to indicate the location of the next service template in the array of service templates, after the current requested list of service templates.'
        templates:
          $ref: '#/components/schemas/ServiceTemplateSummaryList'
          description: An array of service templates with detail data.
    ListServiceTemplatesInput:
      type: object
      title: ListServiceTemplatesInput
      properties:
        maxResults:
          $ref: '#/components/schemas/MaxPageResults'
          description: The maximum number of service templates to list.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token to indicate the location of the next service template in the array of service templates, after the list of service templates previously requested.'
    ListServicesOutput:
      type: object
      required:
        - services
      properties:
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token to indicate the location of the next service in the array of services, after the current requested list of services.'
        services:
          $ref: '#/components/schemas/ServiceSummaryList'
          description: An array of services with summaries of detail data.
    ListServicesInput:
      type: object
      title: ListServicesInput
      properties:
        maxResults:
          $ref: '#/components/schemas/MaxPageResults'
          description: The maximum number of services to list.
        nextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token to indicate the location of the next service in the array of services, after the list of services that was previously requested.'
    ListTagsForResourceOutput:
      type: object
      required:
        - tags
      properties:
        nextToken:
          $ref: '#/components/schemas/String'
          description: 'A token to indicate the location of the next resource tag in the array of resource tags, after the current requested list of resource tags.'
        tags:
          $ref: '#/components/schemas/TagList'
          description: An array of resource tags with detail data.
    ListTagsForResourceInput:
      type: object
      required:
        - resourceArn
      title: ListTagsForResourceInput
      properties:
        maxResults:
          $ref: '#/components/schemas/MaxPageResults'
          description: The maximum number of tags to list.
        nextToken:
          $ref: '#/components/schemas/String'
          description: 'A token to indicate the location of the next resource tag in the array of resource tags, after the list of resource tags that was previously requested.'
        resourceArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource for the listed tags.
    RejectEnvironmentAccountConnectionOutput:
      type: object
      required:
        - environmentAccountConnection
      properties:
        environmentAccountConnection:
          $ref: '#/components/schemas/EnvironmentAccountConnection'
          description: The environment connection account detail data that's returned by AWS Proton.
    RejectEnvironmentAccountConnectionInput:
      type: object
      required:
        - id
      title: RejectEnvironmentAccountConnectionInput
      properties:
        id:
          $ref: '#/components/schemas/EnvironmentAccountConnectionId'
          description: The ID of the environment account connection to reject.
    TagResourceOutput:
      type: object
      properties: {}
    TagResourceInput:
      type: object
      required:
        - resourceArn
        - tags
      title: TagResourceInput
      properties:
        resourceArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource that the resource tag is applied to.
        tags:
          $ref: '#/components/schemas/TagList'
          description: An array of resource tags to apply to a resource.
    UntagResourceOutput:
      type: object
      properties: {}
    UntagResourceInput:
      type: object
      required:
        - resourceArn
        - tagKeys
      title: UntagResourceInput
      properties:
        resourceArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource that the tag is to be removed from.
        tagKeys:
          $ref: '#/components/schemas/TagKeyList'
          description: An array of tag keys indicating the resource tags to be removed from the resource.
    UpdateAccountSettingsOutput:
      type: object
      required:
        - accountSettings
      properties:
        accountSettings:
          $ref: '#/components/schemas/AccountSettings'
          description: The AWS Proton pipeline service role detail data that's returned by AWS Proton.
    UpdateAccountSettingsInput:
      type: object
      title: UpdateAccountSettingsInput
      properties:
        pipelineServiceRoleArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the AWS Proton pipeline service role.
    UpdateEnvironmentOutput:
      type: object
      required:
        - environment
      properties:
        environment:
          $ref: '#/components/schemas/Environment'
          description: The environment detail data that's returned by AWS Proton.
    UpdateEnvironmentInput:
      type: object
      required:
        - deploymentType
        - name
      title: UpdateEnvironmentInput
      properties:
        deploymentType:
          $ref: '#/components/schemas/DeploymentUpdateType'
          description: '<p>There are four modes for updating an environment as described in the following. The <code>deploymentType</code> field defines the mode.</p> <dl> <dt/> <dd> <p> <code>NONE</code> </p> <p>In this mode, a deployment <i>doesn''t</i> occur. Only the requested metadata parameters are updated.</p> </dd> <dt/> <dd> <p> <code>CURRENT_VERSION</code> </p> <p>In this mode, the environment is deployed and updated with the new spec that you provide. Only requested parameters are updated. <i>Donâ€™t</i> include minor or major version parameters when you use this <code>deployment-type</code>.</p> </dd> <dt/> <dd> <p> <code>MINOR_VERSION</code> </p> <p>In this mode, the environment is deployed and updated with the published, recommended (latest) minor version of the current major version in use, by default. You can also specify a different minor version of the current major version in use.</p> </dd> <dt/> <dd> <p> <code>MAJOR_VERSION</code> </p> <p>In this mode, the environment is deployed and updated with the published, recommended (latest) major and minor version of the current template, by default. You can also specify a different major version that is higher than the major version in use and a minor version (optional).</p> </dd> </dl>'
        description:
          $ref: '#/components/schemas/Description'
          description: A description of the environment update.
        environmentAccountConnectionId:
          $ref: '#/components/schemas/EnvironmentAccountConnectionId'
          description: <p>The ID of the environment account connection.</p> <p>You can only update to a new environment account connection if it was created in the same environment account that the current environment account connection was created in and is associated with the current environment.</p>
        name:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the environment to update.
        protonServiceRoleArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the AWS Proton service role that allows AWS Proton to make API calls to other services your behalf.
        spec:
          $ref: '#/components/schemas/SpecContents'
          description: The formatted specification that defines the update.
        templateMajorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: The ID of the major version of the environment to update.
        templateMinorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: The ID of the minor version of the environment to update.
    UpdateEnvironmentAccountConnectionOutput:
      type: object
      required:
        - environmentAccountConnection
      properties:
        environmentAccountConnection:
          $ref: '#/components/schemas/EnvironmentAccountConnection'
          description: The environment account connection detail data that's returned by AWS Proton.
    UpdateEnvironmentAccountConnectionInput:
      type: object
      required:
        - id
        - roleArn
      title: UpdateEnvironmentAccountConnectionInput
      properties:
        id:
          $ref: '#/components/schemas/EnvironmentAccountConnectionId'
          description: The ID of the environment account connection to update.
        roleArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the IAM service role that is associated with the environment account connection to update.
    UpdateEnvironmentTemplateOutput:
      type: object
      required:
        - environmentTemplate
      properties:
        environmentTemplate:
          $ref: '#/components/schemas/EnvironmentTemplate'
          description: The environment template detail data that's returned by AWS Proton.
    UpdateEnvironmentTemplateInput:
      type: object
      required:
        - name
      title: UpdateEnvironmentTemplateInput
      properties:
        description:
          $ref: '#/components/schemas/Description'
          description: A description of the environment template update.
        displayName:
          $ref: '#/components/schemas/DisplayName'
          description: The name of the environment template to update as displayed in the developer interface.
        name:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the environment template to update.
    UpdateEnvironmentTemplateVersionOutput:
      type: object
      required:
        - environmentTemplateVersion
      properties:
        environmentTemplateVersion:
          $ref: '#/components/schemas/EnvironmentTemplateVersion'
          description: The environment template version detail data that's returned by AWS Proton.
    UpdateEnvironmentTemplateVersionInput:
      type: object
      required:
        - majorVersion
        - minorVersion
        - templateName
      title: UpdateEnvironmentTemplateVersionInput
      properties:
        description:
          $ref: '#/components/schemas/Description'
          description: A description of environment template version to update.
        majorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: 'To update a major version of an environment template, include <code>majorVersion</code>.'
        minorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: 'To update a minor version of an environment template, include <code>minorVersion</code>.'
        status:
          $ref: '#/components/schemas/TemplateVersionStatus'
          description: The status of the environment template minor version to update.
        templateName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the environment template.
    UpdateServiceOutput:
      type: object
      required:
        - service
      properties:
        service:
          $ref: '#/components/schemas/Service'
          description: The service detail data that's returned by AWS Proton.
    UpdateServiceInput:
      type: object
      required:
        - name
      title: UpdateServiceInput
      properties:
        description:
          $ref: '#/components/schemas/Description'
          description: The edited service description.
        name:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the service to edit.
        spec:
          $ref: '#/components/schemas/SpecContents'
          description: 'Lists the service instances to add and the existing service instances to remain. Omit the existing service instances to delete from the list. <i>Don''t</i> include edits to the existing service instances or pipeline. For more information, see <i>Edit a service</i> in the <a href="https://docs.aws.amazon.com/proton/latest/adminguide/ag-svc-update.html">AWS Proton Administrator Guide</a> or the <a href="https://docs.aws.amazon.com/proton/latest/userguide/ug-svc-update.html">AWS Proton User Guide</a>.'
    UpdateServiceInstanceOutput:
      type: object
      required:
        - serviceInstance
      properties:
        serviceInstance:
          $ref: '#/components/schemas/ServiceInstance'
          description: The service instance summary data returned by AWS Proton.
    UpdateServiceInstanceInput:
      type: object
      required:
        - deploymentType
        - name
        - serviceName
      title: UpdateServiceInstanceInput
      properties:
        deploymentType:
          $ref: '#/components/schemas/DeploymentUpdateType'
          description: '<p>The deployment type.</p> <p>There are four modes for updating a service instance as described in the following. The <code>deploymentType</code> field defines the mode.</p> <dl> <dt/> <dd> <p> <code>NONE</code> </p> <p>In this mode, a deployment <i>doesn''t</i> occur. Only the requested metadata parameters are updated.</p> </dd> <dt/> <dd> <p> <code>CURRENT_VERSION</code> </p> <p>In this mode, the service instance is deployed and updated with the new spec that you provide. Only requested parameters are updated. <i>Donâ€™t</i> include minor or major version parameters when you use this <code>deployment-type</code>.</p> </dd> <dt/> <dd> <p> <code>MINOR_VERSION</code> </p> <p>In this mode, the service instance is deployed and updated with the published, recommended (latest) minor version of the current major version in use, by default. You can also specify a different minor version of the current major version in use.</p> </dd> <dt/> <dd> <p> <code>MAJOR_VERSION</code> </p> <p>In this mode, the service instance is deployed and updated with the published, recommended (latest) major and minor version of the current template, by default. You can also specify a different major version that is higher than the major version in use and a minor version (optional).</p> </dd> </dl>'
        name:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the service instance to update.
        serviceName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the service that the service instance belongs to.
        spec:
          $ref: '#/components/schemas/SpecContents'
          description: The formatted specification that defines the service instance update.
        templateMajorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: The major version of the service template to update.
        templateMinorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: The minor version of the service template to update.
    UpdateServicePipelineOutput:
      type: object
      required:
        - pipeline
      properties:
        pipeline:
          $ref: '#/components/schemas/ServicePipeline'
          description: The pipeline details returned by AWS Proton.
    UpdateServicePipelineInput:
      type: object
      required:
        - deploymentType
        - serviceName
        - spec
      title: UpdateServicePipelineInput
      properties:
        deploymentType:
          $ref: '#/components/schemas/DeploymentUpdateType'
          description: '<p>The deployment type.</p> <p>There are four modes for updating a service pipeline as described in the following. The <code>deploymentType</code> field defines the mode.</p> <dl> <dt/> <dd> <p> <code>NONE</code> </p> <p>In this mode, a deployment <i>doesn''t</i> occur. Only the requested metadata parameters are updated.</p> </dd> <dt/> <dd> <p> <code>CURRENT_VERSION</code> </p> <p>In this mode, the service pipeline is deployed and updated with the new spec that you provide. Only requested parameters are updated. <i>Donâ€™t</i> include minor or major version parameters when you use this <code>deployment-type</code>.</p> </dd> <dt/> <dd> <p> <code>MINOR_VERSION</code> </p> <p>In this mode, the service pipeline is deployed and updated with the published, recommended (latest) minor version of the current major version in use, by default. You can also specify a different minor version of the current major version in use.</p> </dd> <dt/> <dd> <p> <code>MAJOR_VERSION</code> </p> <p>In this mode, the service pipeline is deployed and updated with the published, recommended (latest) major and minor version of the current template, by default. You can also specify a different major version that is higher than the major version in use and a minor version (optional).</p> </dd> </dl>'
        serviceName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the service to that the pipeline is associated with.
        spec:
          $ref: '#/components/schemas/SpecContents'
          description: The spec for the service pipeline to update.
        templateMajorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: The major version of the service template that was used to create the service that the pipeline is associated with.
        templateMinorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: The minor version of the service template that was used to create the service that the pipeline is associated with.
    UpdateServiceTemplateOutput:
      type: object
      required:
        - serviceTemplate
      properties:
        serviceTemplate:
          $ref: '#/components/schemas/ServiceTemplate'
          description: The service template detail data that's returned by AWS Proton.
    UpdateServiceTemplateInput:
      type: object
      required:
        - name
      title: UpdateServiceTemplateInput
      properties:
        description:
          $ref: '#/components/schemas/Description'
          description: A description of the service template update.
        displayName:
          $ref: '#/components/schemas/DisplayName'
          description: The name of the service template to update as displayed in the developer interface.
        name:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the service template to update.
    UpdateServiceTemplateVersionOutput:
      type: object
      required:
        - serviceTemplateVersion
      properties:
        serviceTemplateVersion:
          $ref: '#/components/schemas/ServiceTemplateVersion'
          description: The service template version detail data that's returned by AWS Proton.
    UpdateServiceTemplateVersionInput:
      type: object
      required:
        - majorVersion
        - minorVersion
        - templateName
      title: UpdateServiceTemplateVersionInput
      properties:
        compatibleEnvironmentTemplates:
          $ref: '#/components/schemas/CompatibleEnvironmentTemplateInputList'
          description: An array of compatible environment names for a service template major or minor version to update.
        description:
          $ref: '#/components/schemas/Description'
          description: A description of a service template version to update.
        majorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: 'To update a major version of a service template, include <code>majorVersion</code>.'
        minorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: 'To update a minor version of a service template, include <code>minorVersion</code>.'
        status:
          $ref: '#/components/schemas/TemplateVersionStatus'
          description: The status of the service template minor version to update.
        templateName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the service template.
    EnvironmentAccountConnectionId:
      type: string
      pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
    EnvironmentAccountConnection:
      type: object
      required:
        - arn
        - environmentAccountId
        - environmentName
        - id
        - lastModifiedAt
        - managementAccountId
        - requestedAt
        - roleArn
        - status
      properties:
        arn:
          $ref: '#/components/schemas/EnvironmentAccountConnectionArn'
          description: The Amazon Resource Name (ARN) of the environment account connection.
        environmentAccountId:
          $ref: '#/components/schemas/AwsAccountId'
          description: The environment account that's connected to the environment account connection.
        environmentName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the environment that's associated with the environment account connection.
        id:
          $ref: '#/components/schemas/EnvironmentAccountConnectionId'
          description: The ID of the environment account connection.
        lastModifiedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the environment account connection was last modified.
        managementAccountId:
          $ref: '#/components/schemas/AwsAccountId'
          description: The ID of the management account that's connected to the environment account connection.
        requestedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the environment account connection request was made.
        roleArn:
          $ref: '#/components/schemas/Arn'
          description: The IAM service role that's associated with the environment account connection.
        status:
          $ref: '#/components/schemas/EnvironmentAccountConnectionStatus'
          description: The status of the environment account connection.
      description: The environment account connection detail data.
    Arn:
      type: string
      minLength: 1
      maxLength: 200
    AccountSettings:
      type: object
      properties:
        pipelineServiceRoleArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the AWS Proton pipeline service role.
      description: The AWS Proton pipeline service role data.
    AwsAccountId:
      type: string
      pattern: '^\d{12}$'
    ResourceName:
      type: string
      pattern: '^[0-9A-Za-z]+[0-9A-Za-z_\-]*$'
      minLength: 1
      maxLength: 100
    Environment:
      type: object
      required:
        - arn
        - createdAt
        - deploymentStatus
        - lastDeploymentAttemptedAt
        - lastDeploymentSucceededAt
        - name
        - templateMajorVersion
        - templateMinorVersion
        - templateName
      properties:
        arn:
          $ref: '#/components/schemas/EnvironmentArn'
          description: The Amazon Resource Name (ARN) of the environment.
        createdAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the environment was created.
        deploymentStatus:
          $ref: '#/components/schemas/DeploymentStatus'
          description: The environment deployment status.
        deploymentStatusMessage:
          $ref: '#/components/schemas/StatusMessage'
          description: An environment deployment status message.
        description:
          $ref: '#/components/schemas/Description'
          description: The description of the environment.
        environmentAccountConnectionId:
          $ref: '#/components/schemas/EnvironmentAccountConnectionId'
          description: The ID of the environment account connection that's used to provision infrastructure resources in an environment account.
        environmentAccountId:
          $ref: '#/components/schemas/AwsAccountId'
          description: The ID of the environment account that the environment infrastructure resources are provisioned in.
        lastDeploymentAttemptedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time when a deployment of the environment was last attempted.
        lastDeploymentSucceededAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the environment was last deployed successfully.
        name:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the environment.
        protonServiceRoleArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the AWS Proton service role that allows AWS Proton to make calls to other services on your behalf.
        provisioning:
          $ref: '#/components/schemas/Provisioning'
          description: 'When included, indicates that the environment template is for customer provisioned and managed infrastructure.'
        spec:
          $ref: '#/components/schemas/SpecContents'
          description: The environment spec.
        templateMajorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: The ID of the major version of the environment template.
        templateMinorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: The ID of the minor version of the environment template.
        templateName:
          $ref: '#/components/schemas/ResourceName'
          description: The Amazon Resource Name (ARN) of the environment template.
      description: The environment detail data. An AWS Proton environment is a set resources shared across an AWS Proton service.
    ServiceInstance:
      type: object
      required:
        - arn
        - createdAt
        - deploymentStatus
        - environmentName
        - lastDeploymentAttemptedAt
        - lastDeploymentSucceededAt
        - name
        - serviceName
        - templateMajorVersion
        - templateMinorVersion
        - templateName
      properties:
        arn:
          $ref: '#/components/schemas/ServiceInstanceArn'
          description: The Amazon Resource Name (ARN) of the service instance.
        createdAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the service instance was created.
        deploymentStatus:
          $ref: '#/components/schemas/DeploymentStatus'
          description: The service instance deployment status.
        deploymentStatusMessage:
          $ref: '#/components/schemas/StatusMessage'
          description: A service instance deployment status message.
        environmentName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the environment that the service instance was deployed into.
        lastDeploymentAttemptedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time when a deployment of the service instance was last attempted.
        lastDeploymentSucceededAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the service instance was last deployed successfully.
        name:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the service instance.
        serviceName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the service that the service instance belongs to.
        spec:
          $ref: '#/components/schemas/SpecContents'
          description: The service spec that was used to create the service instance.
        templateMajorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: The ID of the major version of the service template that was used to create the service instance.
        templateMinorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: The ID of the minor version of the service template that was used to create the service instance.
        templateName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the service template that was used to create the service instance.
      description: The service instance detail data.
    ServicePipeline:
      type: object
      required:
        - arn
        - createdAt
        - deploymentStatus
        - lastDeploymentAttemptedAt
        - lastDeploymentSucceededAt
        - templateMajorVersion
        - templateMinorVersion
        - templateName
      properties:
        arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the service pipeline.
        createdAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the service pipeline was created.
        deploymentStatus:
          $ref: '#/components/schemas/DeploymentStatus'
          description: The deployment status of the service pipeline.
        deploymentStatusMessage:
          $ref: '#/components/schemas/StatusMessage'
          description: A service pipeline deployment status message.
        lastDeploymentAttemptedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time when a deployment of the service pipeline was last attempted.
        lastDeploymentSucceededAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the service pipeline was last deployed successfully.
        spec:
          $ref: '#/components/schemas/SpecContents'
          description: The service spec that was used to create the service pipeline.
        templateMajorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: The ID of the major version of the service template that was used to create the service pipeline.
        templateMinorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: The ID of the minor version of the service template that was used to create the service pipeline.
        templateName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the service template that was used to create the service pipeline.
      description: The service pipeline detail data.
    ClientToken:
      type: string
      pattern: '^[!-~]*$'
      minLength: 0
      maxLength: 64
    TemplateVersionPart:
      type: string
      pattern: '^(0|([1-9]{1}\d*))$'
      minLength: 1
      maxLength: 20
    CompatibleEnvironmentTemplate:
      type: object
      required:
        - majorVersion
        - templateName
      properties:
        majorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: The major version of the compatible environment template.
        templateName:
          $ref: '#/components/schemas/ResourceName'
          description: The compatible environment template name.
      description: Compatible environment template data.
    CompatibleEnvironmentTemplateInput:
      type: object
      required:
        - majorVersion
        - templateName
      properties:
        majorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: The major version of the compatible environment template.
        templateName:
          $ref: '#/components/schemas/ResourceName'
          description: The compatible environment template name.
      description: Compatible environment template data.
    CompatibleEnvironmentTemplateInputList:
      type: array
      items:
        $ref: '#/components/schemas/CompatibleEnvironmentTemplateInput'
      minItems: 1
      maxItems: 10
    CompatibleEnvironmentTemplateList:
      type: array
      items:
        $ref: '#/components/schemas/CompatibleEnvironmentTemplate'
    Description:
      type: string
      minLength: 0
      maxLength: 500
      format: password
    SpecContents:
      type: string
      minLength: 1
      maxLength: 51200
      format: password
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
      minItems: 0
      maxItems: 50
    DisplayName:
      type: string
      minLength: 1
      maxLength: 100
      format: password
    Provisioning:
      type: string
      enum:
        - CUSTOMER_MANAGED
    EnvironmentTemplate:
      type: object
      required:
        - arn
        - createdAt
        - lastModifiedAt
        - name
      properties:
        arn:
          $ref: '#/components/schemas/EnvironmentTemplateArn'
          description: The Amazon Resource Name (ARN) of the environment template.
        createdAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the environment template was created.
        description:
          $ref: '#/components/schemas/Description'
          description: A description of the environment template.
        displayName:
          $ref: '#/components/schemas/DisplayName'
          description: The name of the environment template as displayed in the developer interface.
        encryptionKey:
          $ref: '#/components/schemas/Arn'
          description: The customer provided encryption key for the environment template.
        lastModifiedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the environment template was last modified.
        name:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the environment template.
        provisioning:
          $ref: '#/components/schemas/Provisioning'
          description: 'When included, indicates that the environment template is for customer provisioned and managed infrastructure.'
        recommendedVersion:
          $ref: '#/components/schemas/FullTemplateVersionNumber'
          description: The ID of the recommended version of the environment template.
      description: The environment template data.
    TemplateVersionSourceInput:
      type: object
      properties:
        s3:
          $ref: '#/components/schemas/S3ObjectSource'
          description: An S3 source object that includes the template bundle S3 path and name for a template minor version.
      description: Template version source data.
    EnvironmentTemplateVersion:
      type: object
      required:
        - arn
        - createdAt
        - lastModifiedAt
        - majorVersion
        - minorVersion
        - status
        - templateName
      properties:
        arn:
          $ref: '#/components/schemas/EnvironmentTemplateVersionArn'
          description: The Amazon Resource Name (ARN) of the version of an environment template.
        createdAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the version of an environment template was created.
        description:
          $ref: '#/components/schemas/Description'
          description: A description of the minor version of an environment template.
        lastModifiedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the version of an environment template was last modified.
        majorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: The ID of the latest major version that's associated with the version of an environment template.
        minorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: The ID of the minor version of an environment template.
        recommendedMinorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: The ID of the recommended minor version of the environment template.
        schema:
          $ref: '#/components/schemas/TemplateSchema'
          description: The schema of the version of an environment template.
        status:
          $ref: '#/components/schemas/TemplateVersionStatus'
          description: The status of the version of an environment template.
        statusMessage:
          $ref: '#/components/schemas/StatusMessage'
          description: The status message of the version of an environment template.
        templateName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the version of an environment template.
      description: The environment template version data.
    GitBranchName:
      type: string
      minLength: 1
      maxLength: 200
    RepositoryId:
      type: string
      minLength: 1
      maxLength: 200
    Service:
      type: object
      required:
        - arn
        - createdAt
        - lastModifiedAt
        - name
        - spec
        - status
        - templateName
      properties:
        arn:
          $ref: '#/components/schemas/ServiceArn'
          description: The Amazon Resource Name (ARN) of the service.
        branchName:
          $ref: '#/components/schemas/GitBranchName'
          description: The name of the code repository branch that holds the code that's deployed in AWS Proton.
        createdAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the service was created.
        description:
          $ref: '#/components/schemas/Description'
          description: A description of a service.
        lastModifiedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the service was last modified.
        name:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the service.
        pipeline:
          $ref: '#/components/schemas/ServicePipeline'
          description: The service pipeline detail data.
        repositoryConnectionArn:
          $ref: '#/components/schemas/Arn'
          description: 'The Amazon Resource Name (ARN) of the repository connection. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/adminguide/setting-up-for-service.html#setting-up-vcontrol">Set up a repository connection</a> in the <i>AWS Proton Administrator Guide</i> and <a href="https://docs.aws.amazon.com/proton/latest/userguide/proton-setup.html#setup-repo-connection">Setting up with AWS Proton</a> in the <i>AWS Proton User Guide</i>.'
        repositoryId:
          $ref: '#/components/schemas/RepositoryId'
          description: The ID of the code repository.
        spec:
          $ref: '#/components/schemas/SpecContents'
          description: The formatted specification that defines the service.
        status:
          $ref: '#/components/schemas/ServiceStatus'
          description: The status of the service.
        statusMessage:
          $ref: '#/components/schemas/StatusMessage'
          description: A service status message.
        templateName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the service template.
      description: The service detail data.
    ServiceTemplate:
      type: object
      required:
        - arn
        - createdAt
        - lastModifiedAt
        - name
      properties:
        arn:
          $ref: '#/components/schemas/ServiceTemplateArn'
          description: The Amazon Resource Name (ARN) of the service template.
        createdAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the service template was created.
        description:
          $ref: '#/components/schemas/Description'
          description: A description of the service template.
        displayName:
          $ref: '#/components/schemas/DisplayName'
          description: The service template name as displayed in the developer interface.
        encryptionKey:
          $ref: '#/components/schemas/Arn'
          description: The customer provided service template encryption key that's used to encrypt data.
        lastModifiedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the service template was last modified.
        name:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the service template.
        pipelineProvisioning:
          $ref: '#/components/schemas/Provisioning'
          description: 'If <code>pipelineProvisioning</code> is <code>true</code>, a service pipeline is included in the service template. Otherwise, a service pipeline <i>isn''t</i> included in the service template.'
        recommendedVersion:
          $ref: '#/components/schemas/FullTemplateVersionNumber'
          description: The ID of the recommended version of the service template.
      description: The service template detail data.
    ServiceTemplateVersion:
      type: object
      required:
        - arn
        - compatibleEnvironmentTemplates
        - createdAt
        - lastModifiedAt
        - majorVersion
        - minorVersion
        - status
        - templateName
      properties:
        arn:
          $ref: '#/components/schemas/ServiceTemplateVersionArn'
          description: The Amazon Resource Name (ARN) of the version of a service template.
        compatibleEnvironmentTemplates:
          $ref: '#/components/schemas/CompatibleEnvironmentTemplateList'
          description: An array of compatible environment template names for the major version of a service template.
        createdAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the version of a service template was created.
        description:
          $ref: '#/components/schemas/Description'
          description: A description of the version of a service template.
        lastModifiedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the version of a service template was last modified.
        majorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: The ID of the latest major version that's associated with the version of a service template.
        minorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: The ID of the minor version of a service template.
        recommendedMinorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: The ID of the recommended minor version of the service template.
        schema:
          $ref: '#/components/schemas/TemplateSchema'
          description: The schema of the version of a service template.
        status:
          $ref: '#/components/schemas/TemplateVersionStatus'
          description: The service template version status.
        statusMessage:
          $ref: '#/components/schemas/StatusMessage'
          description: A service template version status message.
        templateName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the version of a service template.
      description: The version of a service template detail data.
    DeploymentStatus:
      type: string
      enum:
        - IN_PROGRESS
        - FAILED
        - SUCCEEDED
        - DELETE_IN_PROGRESS
        - DELETE_FAILED
        - DELETE_COMPLETE
        - CANCELLING
        - CANCELLED
    DeploymentUpdateType:
      type: string
      enum:
        - NONE
        - CURRENT_VERSION
        - MINOR_VERSION
        - MAJOR_VERSION
    EnvironmentArn:
      type: string
    Timestamp:
      type: string
      format: date-time
    StatusMessage:
      type: string
      format: password
    EnvironmentAccountConnectionArn:
      type: string
    EnvironmentAccountConnectionStatus:
      type: string
      enum:
        - PENDING
        - CONNECTED
        - REJECTED
    EnvironmentAccountConnectionRequesterAccountType:
      type: string
      enum:
        - MANAGEMENT_ACCOUNT
        - ENVIRONMENT_ACCOUNT
    EnvironmentAccountConnectionStatusList:
      type: array
      items:
        $ref: '#/components/schemas/EnvironmentAccountConnectionStatus'
    EnvironmentAccountConnectionSummary:
      type: object
      required:
        - arn
        - environmentAccountId
        - environmentName
        - id
        - lastModifiedAt
        - managementAccountId
        - requestedAt
        - roleArn
        - status
      properties:
        arn:
          $ref: '#/components/schemas/EnvironmentAccountConnectionArn'
          description: The Amazon Resource Name (ARN) of the environment account connection.
        environmentAccountId:
          $ref: '#/components/schemas/AwsAccountId'
          description: The ID of the environment account that's connected to the environment account connection.
        environmentName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the environment that's associated with the environment account connection.
        id:
          $ref: '#/components/schemas/EnvironmentAccountConnectionId'
          description: The ID of the environment account connection.
        lastModifiedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the environment account connection was last modified.
        managementAccountId:
          $ref: '#/components/schemas/AwsAccountId'
          description: The ID of the management account that's connected to the environment account connection.
        requestedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the environment account connection request was made.
        roleArn:
          $ref: '#/components/schemas/Arn'
          description: The IAM service role that's associated with the environment account connection.
        status:
          $ref: '#/components/schemas/EnvironmentAccountConnectionStatus'
          description: The status of the environment account connection.
      description: A summary of the environment account connection detail data.
    EnvironmentAccountConnectionSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/EnvironmentAccountConnectionSummary'
    EnvironmentSummary:
      type: object
      required:
        - arn
        - createdAt
        - deploymentStatus
        - lastDeploymentAttemptedAt
        - lastDeploymentSucceededAt
        - name
        - templateMajorVersion
        - templateMinorVersion
        - templateName
      properties:
        arn:
          $ref: '#/components/schemas/EnvironmentArn'
          description: The Amazon Resource Name (ARN) of the environment.
        createdAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the environment was created.
        deploymentStatus:
          $ref: '#/components/schemas/DeploymentStatus'
          description: The environment deployment status.
        deploymentStatusMessage:
          $ref: '#/components/schemas/StatusMessage'
          description: An environment deployment status message.
        description:
          $ref: '#/components/schemas/Description'
          description: The description of the environment.
        environmentAccountConnectionId:
          $ref: '#/components/schemas/EnvironmentAccountConnectionId'
          description: The ID of the environment account connection that the environment is associated with.
        environmentAccountId:
          $ref: '#/components/schemas/AwsAccountId'
          description: The ID of the environment account that the environment infrastructure resources are provisioned in.
        lastDeploymentAttemptedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time when a deployment of the environment was last attempted.
        lastDeploymentSucceededAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the environment was last deployed successfully.
        name:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the environment.
        protonServiceRoleArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the AWS Proton service role that allows AWS Proton to make calls to other services on your behalf.
        provisioning:
          $ref: '#/components/schemas/Provisioning'
          description: 'When included, indicates that the environment template is for customer provisioned and managed infrastructure.'
        templateMajorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: The ID of the major version of the environment template.
        templateMinorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: The ID of the minor version of the environment template.
        templateName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the environment template.
      description: A summary of the environment detail data.
    EnvironmentSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/EnvironmentSummary'
    EnvironmentTemplateArn:
      type: string
    FullTemplateVersionNumber:
      type: string
      pattern: '^(0|([1-9]{1}\d*)).(0|([1-9]{1}\d*))$'
      minLength: 1
      maxLength: 10
    EnvironmentTemplateFilter:
      type: object
      required:
        - majorVersion
        - templateName
      properties:
        majorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: Include <code>majorVersion</code> to filter search for a major version.
        templateName:
          $ref: '#/components/schemas/ResourceName'
          description: Include <code>templateName</code> to filter search for a template name.
      description: A search filter for environment templates.
    EnvironmentTemplateFilterList:
      type: array
      items:
        $ref: '#/components/schemas/EnvironmentTemplateFilter'
    EnvironmentTemplateSummary:
      type: object
      required:
        - arn
        - createdAt
        - lastModifiedAt
        - name
      properties:
        arn:
          $ref: '#/components/schemas/EnvironmentTemplateArn'
          description: The Amazon Resource Name (ARN) of the environment template.
        createdAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the environment template was created.
        description:
          $ref: '#/components/schemas/Description'
          description: A description of the environment template.
        displayName:
          $ref: '#/components/schemas/DisplayName'
          description: The name of the environment template as displayed in the developer interface.
        lastModifiedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the environment template was last modified.
        name:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the environment template.
        provisioning:
          $ref: '#/components/schemas/Provisioning'
          description: 'When included, indicates that the environment template is for customer provisioned and managed infrastructure.'
        recommendedVersion:
          $ref: '#/components/schemas/FullTemplateVersionNumber'
          description: The ID of the recommended version of the environment template.
      description: The environment template data.
    EnvironmentTemplateSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/EnvironmentTemplateSummary'
    EnvironmentTemplateVersionArn:
      type: string
    TemplateSchema:
      type: string
      minLength: 1
      maxLength: 51200
      format: password
    TemplateVersionStatus:
      type: string
      enum:
        - REGISTRATION_IN_PROGRESS
        - REGISTRATION_FAILED
        - DRAFT
        - PUBLISHED
    EnvironmentTemplateVersionSummary:
      type: object
      required:
        - arn
        - createdAt
        - lastModifiedAt
        - majorVersion
        - minorVersion
        - status
        - templateName
      properties:
        arn:
          $ref: '#/components/schemas/EnvironmentTemplateVersionArn'
          description: The Amazon Resource Name (ARN) of the version of an environment template.
        createdAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the version of an environment template was created.
        description:
          $ref: '#/components/schemas/Description'
          description: A description of the version of an environment template.
        lastModifiedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the version of an environment template was last modified.
        majorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: The ID of the latest major version that's associated with the version of an environment template.
        minorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: The ID of the version of an environment template.
        recommendedMinorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: The ID of the recommended minor version of the environment template.
        status:
          $ref: '#/components/schemas/TemplateVersionStatus'
          description: The status of the version of an environment template.
        statusMessage:
          $ref: '#/components/schemas/StatusMessage'
          description: The status message of the version of an environment template.
        templateName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the version of an environment template.
      description: A summary of the version of an environment template detail data.
    EnvironmentTemplateVersionSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/EnvironmentTemplateVersionSummary'
    MaxPageResults:
      type: integer
      minimum: 1
      maximum: 100
    NextToken:
      type: string
      pattern: '^[A-Za-z0-9+=/]+$'
    ServiceInstanceSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ServiceInstanceSummary'
    ServiceTemplateVersionSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ServiceTemplateVersionSummary'
    ServiceTemplateSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ServiceTemplateSummary'
    ServiceSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ServiceSummary'
    String:
      type: string
    S3Bucket:
      type: string
      pattern: '^[a-z0-9]+[a-z0-9-\.]+[a-z0-9]+$'
      minLength: 3
      maxLength: 63
    S3Key:
      type: string
      minLength: 1
      maxLength: 1024
    S3ObjectSource:
      type: object
      required:
        - bucket
        - key
      properties:
        bucket:
          $ref: '#/components/schemas/S3Bucket'
          description: The name of the S3 bucket that contains a template bundle.
        key:
          $ref: '#/components/schemas/S3Key'
          description: The path to the S3 bucket that contains a template bundle.
      description: Template bundle S3 bucket data.
    ServiceArn:
      type: string
    ServiceStatus:
      type: string
      enum:
        - CREATE_IN_PROGRESS
        - CREATE_FAILED_CLEANUP_IN_PROGRESS
        - CREATE_FAILED_CLEANUP_COMPLETE
        - CREATE_FAILED_CLEANUP_FAILED
        - CREATE_FAILED
        - ACTIVE
        - DELETE_IN_PROGRESS
        - DELETE_FAILED
        - UPDATE_IN_PROGRESS
        - UPDATE_FAILED_CLEANUP_IN_PROGRESS
        - UPDATE_FAILED_CLEANUP_COMPLETE
        - UPDATE_FAILED_CLEANUP_FAILED
        - UPDATE_FAILED
        - UPDATE_COMPLETE_CLEANUP_FAILED
    ServiceInstanceArn:
      type: string
    ServiceInstanceSummary:
      type: object
      required:
        - arn
        - createdAt
        - deploymentStatus
        - environmentName
        - lastDeploymentAttemptedAt
        - lastDeploymentSucceededAt
        - name
        - serviceName
        - templateMajorVersion
        - templateMinorVersion
        - templateName
      properties:
        arn:
          $ref: '#/components/schemas/ServiceInstanceArn'
          description: The Amazon Resource Name (ARN) of the service instance.
        createdAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the service instance was created.
        deploymentStatus:
          $ref: '#/components/schemas/DeploymentStatus'
          description: The service instance deployment status.
        deploymentStatusMessage:
          $ref: '#/components/schemas/StatusMessage'
          description: A service instance deployment status message.
        environmentName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the environment that the service instance was deployed into.
        lastDeploymentAttemptedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time when a deployment of the service was last attempted.
        lastDeploymentSucceededAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the service was last deployed successfully.
        name:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the service instance.
        serviceName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the service that the service instance belongs to.
        templateMajorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: The ID of the major version of a service template.
        templateMinorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: The ID of the minor version of a service template.
        templateName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the service template.
      description: A summary of the service instance detail data.
    ServiceSummary:
      type: object
      required:
        - arn
        - createdAt
        - lastModifiedAt
        - name
        - status
        - templateName
      properties:
        arn:
          $ref: '#/components/schemas/ServiceArn'
          description: The Amazon Resource Name (ARN) of the service.
        createdAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the service was created.
        description:
          $ref: '#/components/schemas/Description'
          description: A description of the service.
        lastModifiedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the service was last modified.
        name:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the service.
        status:
          $ref: '#/components/schemas/ServiceStatus'
          description: The status of the service.
        statusMessage:
          $ref: '#/components/schemas/StatusMessage'
          description: A service status message.
        templateName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the service template.
      description: A summary of the service detail data.
    ServiceTemplateArn:
      type: string
    ServiceTemplateSummary:
      type: object
      required:
        - arn
        - createdAt
        - lastModifiedAt
        - name
      properties:
        arn:
          $ref: '#/components/schemas/ServiceTemplateArn'
          description: The Amazon Resource Name (ARN) of the service template.
        createdAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the service template was created.
        description:
          $ref: '#/components/schemas/Description'
          description: A description of the service template.
        displayName:
          $ref: '#/components/schemas/DisplayName'
          description: The service template name as displayed in the developer interface.
        lastModifiedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the service template was last modified.
        name:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the service template.
        pipelineProvisioning:
          $ref: '#/components/schemas/Provisioning'
          description: 'If <code>pipelineProvisioning</code> is <code>true</code>, a service pipeline is included in the service template, otherwise a service pipeline <i>isn''t</i> included in the service template.'
        recommendedVersion:
          $ref: '#/components/schemas/FullTemplateVersionNumber'
          description: The ID of the recommended version of the service template.
      description: The service template summary data.
    ServiceTemplateVersionArn:
      type: string
    ServiceTemplateVersionSummary:
      type: object
      required:
        - arn
        - createdAt
        - lastModifiedAt
        - majorVersion
        - minorVersion
        - status
        - templateName
      properties:
        arn:
          $ref: '#/components/schemas/ServiceTemplateVersionArn'
          description: The Amazon Resource Name (ARN) of the version of a service template.
        createdAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the version of a service template was created.
        description:
          $ref: '#/components/schemas/Description'
          description: A description of the version of a service template.
        lastModifiedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the version of a service template was last modified.
        majorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: The ID of the latest major version that's associated with the version of a service template.
        minorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: The ID of the minor version of a service template.
        recommendedMinorVersion:
          $ref: '#/components/schemas/TemplateVersionPart'
          description: The ID of the recommended minor version of the service template.
        status:
          $ref: '#/components/schemas/TemplateVersionStatus'
          description: The service template minor version status.
        statusMessage:
          $ref: '#/components/schemas/StatusMessage'
          description: A service template minor version status message.
        templateName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the service template.
      description: A summary of the service template version detail data.
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    Tag:
      type: object
      required:
        - key
        - value
      properties:
        key:
          $ref: '#/components/schemas/TagKey'
          description: The key of the resource tag.
        value:
          $ref: '#/components/schemas/TagValue'
          description: The value of the resource tag.
      description: A description of a resource tag.
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      minItems: 0
      maxItems: 50
security:
  - hmac: []
