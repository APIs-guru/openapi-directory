openapi: 3.0.0
info:
  version: '2020-08-01'
  x-release: v4
  title: AmazonNimbleStudio
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: nimble
  x-aws-signingName: nimble
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/nimble-2020-08-01.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/nimble/'
servers:
  - url: 'http://nimble.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AmazonNimbleStudio multi-region endpoint
  - url: 'https://nimble.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AmazonNimbleStudio multi-region endpoint
  - url: 'http://nimble.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AmazonNimbleStudio endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://nimble.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AmazonNimbleStudio endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  '/2020-08-01/studios/{studioId}/eula-acceptances':
    post:
      operationId: AcceptEulas
      description: Accept EULAs.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptEulasResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: X-Amz-Client-Token
          in: header
          required: false
          description: 'To make an idempotent API request using one of these actions, specify a client token in the request. You should not reuse the same client token for other API requests. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails with a ValidationException error.'
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: studioId
          in: path
          required: true
          description: The studio ID.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                eulaIds:
                  description: ''
                  type: array
                  items:
                    $ref: '#/components/schemas/__string'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListEulaAcceptances
      description: List Eula Acceptances.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEulaAcceptancesResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: eulaIds
          in: query
          required: false
          description: A collection of EULA IDs.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/__string'
        - name: nextToken
          in: query
          required: false
          description: 'The token for the next set of results, or null if there are no more results.'
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: The studio ID.
          schema:
            type: string
  '/2020-08-01/studios/{studioId}/launch-profiles':
    post:
      operationId: CreateLaunchProfile
      description: Create a launch profile.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLaunchProfileResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: X-Amz-Client-Token
          in: header
          required: false
          description: 'To make an idempotent API request using one of these actions, specify a client token in the request. You should not reuse the same client token for other API requests. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails with a ValidationException error.'
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: studioId
          in: path
          required: true
          description: The studio ID.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ec2SubnetIds
                - launchProfileProtocolVersions
                - name
                - streamConfiguration
                - studioComponentIds
              properties:
                description:
                  description: The description.
                  type: string
                  maxLength: 256
                ec2SubnetIds:
                  description: ''
                  type: array
                  items:
                    $ref: '#/components/schemas/EC2SubnetId'
                  maxItems: 6
                launchProfileProtocolVersions:
                  description: ''
                  type: array
                  items:
                    $ref: '#/components/schemas/LaunchProfileProtocolVersion'
                name:
                  description: The name for the launch profile.
                  type: string
                  maxLength: 64
                streamConfiguration:
                  description: ''
                  type: object
                  properties:
                    clipboardMode:
                      $ref: '#/components/schemas/StreamingClipboardMode'
                      description: Enable or disable the use of the system clipboard to copy and paste between the streaming session and streaming client.
                    ec2InstanceTypes:
                      $ref: '#/components/schemas/StreamingInstanceTypeList'
                      description: The EC2 instance types that users can select from when launching a streaming session with this launch profile.
                    maxSessionLengthInMinutes:
                      $ref: '#/components/schemas/StreamConfigurationMaxSessionLengthInMinutes'
                      description: 'The length of time, in minutes, that a streaming session can run. After this point, Nimble Studio automatically terminates the session.'
                    streamingImageIds:
                      $ref: '#/components/schemas/StreamingImageIdList'
                      description: The streaming images that users can select from when launching a streaming session with this launch profile.
                studioComponentIds:
                  description: ''
                  type: array
                  items:
                    $ref: '#/components/schemas/__string'
                  minItems: 1
                  maxItems: 100
                tags:
                  description: ''
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/__string'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListLaunchProfiles
      description: List all the launch profiles a studio.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLaunchProfilesResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: 'The token for the next set of results, or null if there are no more results.'
          schema:
            type: string
        - name: principalId
          in: query
          required: false
          description: The principal ID.
          schema:
            type: string
        - name: states
          in: query
          required: false
          description: A list of states.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/__string'
        - name: studioId
          in: path
          required: true
          description: The studio ID.
          schema:
            type: string
  '/2020-08-01/studios/{studioId}/streaming-images':
    post:
      operationId: CreateStreamingImage
      description: Creates a streaming image resource in a studio.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateStreamingImageResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: X-Amz-Client-Token
          in: header
          required: false
          description: 'To make an idempotent API request using one of these actions, specify a client token in the request. You should not reuse the same client token for other API requests. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails with a ValidationException error.'
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: studioId
          in: path
          required: true
          description: The studio ID.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ec2ImageId
                - name
              properties:
                description:
                  description: The description.
                  type: string
                  maxLength: 256
                ec2ImageId:
                  description: ''
                  type: string
                  pattern: '^ami-[0-9A-z]+$'
                name:
                  description: A friendly name for a streaming image resource.
                  type: string
                  maxLength: 64
                tags:
                  description: ''
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/__string'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListStreamingImages
      description: '<p>List the streaming image resources available to this studio.</p> <p>This list will contain both images provided by Amazon Web Services, as well as streaming images that you have created in your studio.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStreamingImagesResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: 'The token for the next set of results, or null if there are no more results.'
          schema:
            type: string
        - name: owner
          in: query
          required: false
          description: The owner.
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: The studio ID.
          schema:
            type: string
  '/2020-08-01/studios/{studioId}/streaming-sessions':
    post:
      operationId: CreateStreamingSession
      description: '<p>Creates a streaming session in a studio.</p> <p>After invoking this operation, you must poll GetStreamingSession until the streaming session is in state READY.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateStreamingSessionResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: X-Amz-Client-Token
          in: header
          required: false
          description: 'To make an idempotent API request using one of these actions, specify a client token in the request. You should not reuse the same client token for other API requests. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails with a ValidationException error.'
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: studioId
          in: path
          required: true
          description: The studio ID.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ec2InstanceType:
                  description: ''
                  type: string
                  enum:
                    - g4dn.xlarge
                    - g4dn.2xlarge
                    - g4dn.4xlarge
                    - g4dn.8xlarge
                    - g4dn.12xlarge
                    - g4dn.16xlarge
                launchProfileId:
                  description: The launch profile ID.
                  type: string
                ownedBy:
                  description: The user ID of the user that owns the streaming session.
                  type: string
                streamingImageId:
                  description: ''
                  type: string
                  pattern: '^[a-zA-Z0-9-_]*$'
                  maxLength: 22
                tags:
                  description: ''
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/__string'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListStreamingSessions
      description: Lists the streaming image resources in a studio.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStreamingSessionsResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: createdBy
          in: query
          required: false
          description: The user ID of the user that created the streaming session.
          schema:
            type: string
        - name: nextToken
          in: query
          required: false
          description: 'The token for the next set of results, or null if there are no more results.'
          schema:
            type: string
        - name: ownedBy
          in: query
          required: false
          description: The user ID of the user that owns the streaming session.
          schema:
            type: string
        - name: sessionIds
          in: query
          required: false
          description: A collection of session IDs.
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: The studio ID.
          schema:
            type: string
  '/2020-08-01/studios/{studioId}/streaming-sessions/{sessionId}/streams':
    post:
      operationId: CreateStreamingSessionStream
      description: '<p>Creates a streaming session stream for a streaming session.</p> <p>After invoking this API, invoke GetStreamingSessionStream with the returned streamId to poll the resource until it is in state READY.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateStreamingSessionStreamResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: X-Amz-Client-Token
          in: header
          required: false
          description: 'To make an idempotent API request using one of these actions, specify a client token in the request. You should not reuse the same client token for other API requests. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails with a ValidationException error.'
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: sessionId
          in: path
          required: true
          description: The session ID.
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: The studio ID.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                expirationInSeconds:
                  description: ''
                  type: integer
                  minimum: 60
                  maximum: 3600
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2020-08-01/studios:
    post:
      operationId: CreateStudio
      description: '<p>Create a new Studio.</p> <p>When creating a Studio, two IAM roles must be provided: the admin role and the user Role. These roles are assumed by your users when they log in to the Nimble Studio portal.</p> <p>The user role must have the AmazonNimbleStudio-StudioUser managed policy attached for the portal to function properly.</p> <p>The Admin Role must have the AmazonNimbleStudio-StudioAdmin managed policy attached for the portal to function properly.</p> <p>You may optionally specify a KMS key in the StudioEncryptionConfiguration.</p> <p>In Nimble Studio, resource names, descriptions, initialization scripts, and other data you provide are always encrypted at rest using an KMS key. By default, this key is owned by Amazon Web Services and managed on your behalf. You may provide your own KMS key when calling CreateStudio to encrypt this data using a key you own and manage.</p> <p>When providing an KMS key during studio creation, Nimble Studio creates KMS grants in your account to provide your studio user and admin roles access to these KMS keys.</p> <p>If you delete this grant, the studio will no longer be accessible to your portal users.</p> <p>If you delete the studio KMS key, your studio will no longer be accessible.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateStudioResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: X-Amz-Client-Token
          in: header
          required: false
          description: 'To make an idempotent API request using one of these actions, specify a client token in the request. You should not reuse the same client token for other API requests. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails with a ValidationException error.'
          schema:
            type: string
            minLength: 1
            maxLength: 64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - adminRoleArn
                - displayName
                - studioName
                - userRoleArn
              properties:
                adminRoleArn:
                  description: The IAM role that Studio Admins will assume when logging in to the Nimble Studio portal.
                  type: string
                displayName:
                  description: A friendly name for the studio.
                  type: string
                  maxLength: 64
                studioEncryptionConfiguration:
                  description: Configuration of the encryption method that is used for the studio.
                  type: object
                  properties:
                    keyArn:
                      $ref: '#/components/schemas/StudioEncryptionConfigurationKeyArn'
                      description: The ARN for a KMS key that is used to encrypt studio data.
                    keyType:
                      $ref: '#/components/schemas/StudioEncryptionConfigurationKeyType'
                      description: The type of KMS key that is used to encrypt studio data.
                studioName:
                  description: ''
                  type: string
                  pattern: '^[a-z0-9]*$'
                  minLength: 3
                  maxLength: 64
                tags:
                  description: ''
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/__string'
                userRoleArn:
                  description: The IAM role that Studio Users will assume when logging in to the Nimble Studio portal.
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListStudios
      description: List studios in your Amazon Web Services account in the requested Amazon Web Services Region.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStudiosResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: 'The token for the next set of results, or null if there are no more results.'
          schema:
            type: string
  '/2020-08-01/studios/{studioId}/studio-components':
    post:
      operationId: CreateStudioComponent
      description: Creates a studio component resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateStudioComponentResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: X-Amz-Client-Token
          in: header
          required: false
          description: 'To make an idempotent API request using one of these actions, specify a client token in the request. You should not reuse the same client token for other API requests. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails with a ValidationException error.'
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: studioId
          in: path
          required: true
          description: The studio ID.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - type
              properties:
                configuration:
                  description: 'The configuration of the studio component, based on component type.'
                  type: object
                  properties:
                    activeDirectoryConfiguration:
                      $ref: '#/components/schemas/ActiveDirectoryConfiguration'
                      description: The configuration for a Microsoft Active Directory (Microsoft AD) studio resource.
                    computeFarmConfiguration:
                      $ref: '#/components/schemas/ComputeFarmConfiguration'
                      description: The configuration for a render farm that is associated with a studio resource.
                    licenseServiceConfiguration:
                      $ref: '#/components/schemas/LicenseServiceConfiguration'
                      description: The configuration for a license service that is associated with a studio resource.
                    sharedFileSystemConfiguration:
                      $ref: '#/components/schemas/SharedFileSystemConfiguration'
                      description: The configuration for a shared file storage system that is associated with a studio resource.
                description:
                  description: ''
                  type: string
                  maxLength: 256
                ec2SecurityGroupIds:
                  description: ''
                  type: array
                  items:
                    $ref: '#/components/schemas/SecurityGroupId'
                  minItems: 1
                  maxItems: 30
                initializationScripts:
                  description: ''
                  type: array
                  items:
                    $ref: '#/components/schemas/StudioComponentInitializationScript'
                name:
                  description: ''
                  type: string
                  maxLength: 64
                scriptParameters:
                  description: ''
                  type: array
                  items:
                    $ref: '#/components/schemas/ScriptParameterKeyValue'
                  maxItems: 30
                subtype:
                  description: ''
                  type: string
                  enum:
                    - AWS_MANAGED_MICROSOFT_AD
                    - AMAZON_FSX_FOR_WINDOWS
                    - AMAZON_FSX_FOR_LUSTRE
                    - CUSTOM
                tags:
                  description: ''
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/__string'
                type:
                  description: ''
                  type: string
                  enum:
                    - ACTIVE_DIRECTORY
                    - SHARED_FILE_SYSTEM
                    - COMPUTE_FARM
                    - LICENSE_SERVICE
                    - CUSTOM
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListStudioComponents
      description: Lists the StudioComponents in a studio.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStudioComponentsResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: 'The token for the next set of results, or null if there are no more results.'
          schema:
            type: string
        - name: states
          in: query
          required: false
          description: A list of states.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/__string'
        - name: studioId
          in: path
          required: true
          description: The studio ID.
          schema:
            type: string
        - name: types
          in: query
          required: false
          description: The types.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/__string'
  '/2020-08-01/studios/{studioId}/launch-profiles/{launchProfileId}':
    delete:
      operationId: DeleteLaunchProfile
      description: Permanently delete a launch profile.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteLaunchProfileResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: X-Amz-Client-Token
          in: header
          required: false
          description: 'To make an idempotent API request using one of these actions, specify a client token in the request. You should not reuse the same client token for other API requests. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails with a ValidationException error.'
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: launchProfileId
          in: path
          required: true
          description: The launch profile ID.
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: The studio ID.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetLaunchProfile
      description: Get a launch profile.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLaunchProfileResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: launchProfileId
          in: path
          required: true
          description: The launch profile ID.
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: The studio ID.
          schema:
            type: string
    patch:
      operationId: UpdateLaunchProfile
      description: Update a launch profile.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateLaunchProfileResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: X-Amz-Client-Token
          in: header
          required: false
          description: 'To make an idempotent API request using one of these actions, specify a client token in the request. You should not reuse the same client token for other API requests. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails with a ValidationException error.'
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: launchProfileId
          in: path
          required: true
          description: The launch profile ID.
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: The studio ID.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  description: The description.
                  type: string
                  maxLength: 256
                launchProfileProtocolVersions:
                  description: ''
                  type: array
                  items:
                    $ref: '#/components/schemas/LaunchProfileProtocolVersion'
                name:
                  description: The name for the launch profile.
                  type: string
                  maxLength: 64
                streamConfiguration:
                  description: ''
                  type: object
                  properties:
                    clipboardMode:
                      $ref: '#/components/schemas/StreamingClipboardMode'
                      description: Enable or disable the use of the system clipboard to copy and paste between the streaming session and streaming client.
                    ec2InstanceTypes:
                      $ref: '#/components/schemas/StreamingInstanceTypeList'
                      description: The EC2 instance types that users can select from when launching a streaming session with this launch profile.
                    maxSessionLengthInMinutes:
                      $ref: '#/components/schemas/StreamConfigurationMaxSessionLengthInMinutes'
                      description: 'The length of time, in minutes, that a streaming session can run. After this point, Nimble Studio automatically terminates the session.'
                    streamingImageIds:
                      $ref: '#/components/schemas/StreamingImageIdList'
                      description: The streaming images that users can select from when launching a streaming session with this launch profile.
                studioComponentIds:
                  description: ''
                  type: array
                  items:
                    $ref: '#/components/schemas/__string'
                  minItems: 1
                  maxItems: 100
  '/2020-08-01/studios/{studioId}/launch-profiles/{launchProfileId}/membership/{principalId}':
    delete:
      operationId: DeleteLaunchProfileMember
      description: Delete a user from launch profile membership.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteLaunchProfileMemberResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: X-Amz-Client-Token
          in: header
          required: false
          description: 'To make an idempotent API request using one of these actions, specify a client token in the request. You should not reuse the same client token for other API requests. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails with a ValidationException error.'
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: launchProfileId
          in: path
          required: true
          description: The launch profile ID.
          schema:
            type: string
        - name: principalId
          in: path
          required: true
          description: The principal ID.
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: The studio ID.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetLaunchProfileMember
      description: Get a user persona in launch profile membership.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLaunchProfileMemberResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: launchProfileId
          in: path
          required: true
          description: The launch profile ID.
          schema:
            type: string
        - name: principalId
          in: path
          required: true
          description: The principal ID.
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: The studio ID.
          schema:
            type: string
    patch:
      operationId: UpdateLaunchProfileMember
      description: Update a user persona in launch profile membership.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateLaunchProfileMemberResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: X-Amz-Client-Token
          in: header
          required: false
          description: 'To make an idempotent API request using one of these actions, specify a client token in the request. You should not reuse the same client token for other API requests. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails with a ValidationException error.'
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: launchProfileId
          in: path
          required: true
          description: The launch profile ID.
          schema:
            type: string
        - name: principalId
          in: path
          required: true
          description: The principal ID.
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: The studio ID.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - persona
              properties:
                persona:
                  description: ''
                  type: string
                  enum:
                    - USER
  '/2020-08-01/studios/{studioId}/streaming-images/{streamingImageId}':
    delete:
      operationId: DeleteStreamingImage
      description: Delete streaming image.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteStreamingImageResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: X-Amz-Client-Token
          in: header
          required: false
          description: 'To make an idempotent API request using one of these actions, specify a client token in the request. You should not reuse the same client token for other API requests. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails with a ValidationException error.'
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: streamingImageId
          in: path
          required: true
          description: The streaming image ID.
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: The studio ID.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetStreamingImage
      description: Get streaming image.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStreamingImageResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: streamingImageId
          in: path
          required: true
          description: The streaming image ID.
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: The studio ID.
          schema:
            type: string
    patch:
      operationId: UpdateStreamingImage
      description: Update streaming image.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateStreamingImageResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: X-Amz-Client-Token
          in: header
          required: false
          description: 'To make an idempotent API request using one of these actions, specify a client token in the request. You should not reuse the same client token for other API requests. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails with a ValidationException error.'
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: streamingImageId
          in: path
          required: true
          description: The streaming image ID.
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: The studio ID.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  description: The description.
                  type: string
                  maxLength: 256
                name:
                  description: A friendly name for a streaming image resource.
                  type: string
                  maxLength: 64
  '/2020-08-01/studios/{studioId}/streaming-sessions/{sessionId}':
    delete:
      operationId: DeleteStreamingSession
      description: '<p>Deletes streaming session resource.</p> <p>After invoking this operation, use GetStreamingSession to poll the resource until it transitions to a DELETED state.</p> <p>A streaming session will count against your streaming session quota until it is marked DELETED.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteStreamingSessionResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: X-Amz-Client-Token
          in: header
          required: false
          description: 'To make an idempotent API request using one of these actions, specify a client token in the request. You should not reuse the same client token for other API requests. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails with a ValidationException error.'
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: sessionId
          in: path
          required: true
          description: The session ID.
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: The studio ID.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetStreamingSession
      description: <p>Gets StreamingSession resource.</p> <p>Invoke this operation to poll for a streaming session state while creating or deleting a session.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStreamingSessionResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: sessionId
          in: path
          required: true
          description: The session ID.
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: The studio ID.
          schema:
            type: string
  '/2020-08-01/studios/{studioId}':
    delete:
      operationId: DeleteStudio
      description: Delete a studio resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteStudioResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: X-Amz-Client-Token
          in: header
          required: false
          description: 'To make an idempotent API request using one of these actions, specify a client token in the request. You should not reuse the same client token for other API requests. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails with a ValidationException error.'
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: studioId
          in: path
          required: true
          description: The studio ID.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetStudio
      description: Get a Studio resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStudioResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: studioId
          in: path
          required: true
          description: The studio ID.
          schema:
            type: string
    patch:
      operationId: UpdateStudio
      description: '<p>Update a Studio resource.</p> <p>Currently, this operation only supports updating the displayName of your studio.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateStudioResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: X-Amz-Client-Token
          in: header
          required: false
          description: 'To make an idempotent API request using one of these actions, specify a client token in the request. You should not reuse the same client token for other API requests. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails with a ValidationException error.'
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: studioId
          in: path
          required: true
          description: The studio ID.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                adminRoleArn:
                  description: The IAM role that Studio Admins will assume when logging in to the Nimble Studio portal.
                  type: string
                displayName:
                  description: A friendly name for the studio.
                  type: string
                  maxLength: 64
                userRoleArn:
                  description: The IAM role that Studio Users will assume when logging in to the Nimble Studio portal.
                  type: string
  '/2020-08-01/studios/{studioId}/studio-components/{studioComponentId}':
    delete:
      operationId: DeleteStudioComponent
      description: Deletes a studio component resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteStudioComponentResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: X-Amz-Client-Token
          in: header
          required: false
          description: 'To make an idempotent API request using one of these actions, specify a client token in the request. You should not reuse the same client token for other API requests. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails with a ValidationException error.'
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: studioComponentId
          in: path
          required: true
          description: The studio component ID.
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: The studio ID.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetStudioComponent
      description: Gets a studio component resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStudioComponentResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: studioComponentId
          in: path
          required: true
          description: The studio component ID.
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: The studio ID.
          schema:
            type: string
    patch:
      operationId: UpdateStudioComponent
      description: Updates a studio component resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateStudioComponentResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: X-Amz-Client-Token
          in: header
          required: false
          description: 'To make an idempotent API request using one of these actions, specify a client token in the request. You should not reuse the same client token for other API requests. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails with a ValidationException error.'
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: studioComponentId
          in: path
          required: true
          description: The studio component ID.
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: The studio ID.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                configuration:
                  description: 'The configuration of the studio component, based on component type.'
                  type: object
                  properties:
                    activeDirectoryConfiguration:
                      $ref: '#/components/schemas/ActiveDirectoryConfiguration'
                      description: The configuration for a Microsoft Active Directory (Microsoft AD) studio resource.
                    computeFarmConfiguration:
                      $ref: '#/components/schemas/ComputeFarmConfiguration'
                      description: The configuration for a render farm that is associated with a studio resource.
                    licenseServiceConfiguration:
                      $ref: '#/components/schemas/LicenseServiceConfiguration'
                      description: The configuration for a license service that is associated with a studio resource.
                    sharedFileSystemConfiguration:
                      $ref: '#/components/schemas/SharedFileSystemConfiguration'
                      description: The configuration for a shared file storage system that is associated with a studio resource.
                description:
                  description: ''
                  type: string
                  maxLength: 256
                ec2SecurityGroupIds:
                  description: ''
                  type: array
                  items:
                    $ref: '#/components/schemas/SecurityGroupId'
                  minItems: 1
                  maxItems: 30
                initializationScripts:
                  description: ''
                  type: array
                  items:
                    $ref: '#/components/schemas/StudioComponentInitializationScript'
                name:
                  description: ''
                  type: string
                  maxLength: 64
                scriptParameters:
                  description: ''
                  type: array
                  items:
                    $ref: '#/components/schemas/ScriptParameterKeyValue'
                  maxItems: 30
                subtype:
                  description: ''
                  type: string
                  enum:
                    - AWS_MANAGED_MICROSOFT_AD
                    - AMAZON_FSX_FOR_WINDOWS
                    - AMAZON_FSX_FOR_LUSTRE
                    - CUSTOM
                type:
                  description: ''
                  type: string
                  enum:
                    - ACTIVE_DIRECTORY
                    - SHARED_FILE_SYSTEM
                    - COMPUTE_FARM
                    - LICENSE_SERVICE
                    - CUSTOM
  '/2020-08-01/studios/{studioId}/membership/{principalId}':
    delete:
      operationId: DeleteStudioMember
      description: Delete a user from studio membership.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteStudioMemberResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: X-Amz-Client-Token
          in: header
          required: false
          description: 'To make an idempotent API request using one of these actions, specify a client token in the request. You should not reuse the same client token for other API requests. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails with a ValidationException error.'
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: principalId
          in: path
          required: true
          description: The principal ID.
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: The studio ID.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetStudioMember
      description: Get a user's membership in a studio.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStudioMemberResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: principalId
          in: path
          required: true
          description: The principal ID.
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: The studio ID.
          schema:
            type: string
  '/2020-08-01/eulas/{eulaId}':
    get:
      operationId: GetEula
      description: Get Eula.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEulaResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: eulaId
          in: path
          required: true
          description: The EULA ID.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2020-08-01/studios/{studioId}/launch-profiles/{launchProfileId}/details':
    get:
      operationId: GetLaunchProfileDetails
      description: 'Launch profile details include the launch profile resource and summary information of resources that are used by, or available to, the launch profile. This includes the name and description of all studio components used by the launch profiles, and the name and description of streaming images that can be used with this launch profile.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLaunchProfileDetailsResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: launchProfileId
          in: path
          required: true
          description: The launch profile ID.
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: The studio ID.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2020-08-01/studios/{studioId}/launch-profiles/{launchProfileId}/init#launchProfileProtocolVersions&launchPurpose&platform':
    get:
      operationId: GetLaunchProfileInitialization
      description: Get a launch profile initialization.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLaunchProfileInitializationResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: launchProfileId
          in: path
          required: true
          description: The launch profile ID.
          schema:
            type: string
        - name: launchProfileProtocolVersions
          in: query
          required: true
          description: A collection of launch profile protocol versions.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/__string'
        - name: launchPurpose
          in: query
          required: true
          description: The launch purpose.
          schema:
            type: string
        - name: platform
          in: query
          required: true
          description: The platform.
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: The studio ID.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2020-08-01/studios/{studioId}/streaming-sessions/{sessionId}/streams/{streamId}':
    get:
      operationId: GetStreamingSessionStream
      description: '<p>Gets a StreamingSessionStream for a streaming session.</p> <p>Invoke this operation to poll the resource after invoking CreateStreamingSessionStream.</p> <p>After the StreamingSessionStream changes to the state READY, the url property will contain a stream to be used with the DCV streaming client.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStreamingSessionStreamResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: sessionId
          in: path
          required: true
          description: The session ID.
          schema:
            type: string
        - name: streamId
          in: path
          required: true
          description: The stream ID.
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: The studio ID.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2020-08-01/eulas:
    get:
      operationId: ListEulas
      description: List Eulas.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEulasResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: eulaIds
          in: query
          required: false
          description: A collection of EULA IDs.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/__string'
        - name: nextToken
          in: query
          required: false
          description: 'The token for the next set of results, or null if there are no more results.'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2020-08-01/studios/{studioId}/launch-profiles/{launchProfileId}/membership':
    get:
      operationId: ListLaunchProfileMembers
      description: Get all users in a given launch profile membership.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLaunchProfileMembersResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: launchProfileId
          in: path
          required: true
          description: The launch profile ID.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: 'The token for the next set of results, or null if there are no more results.'
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: The studio ID.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: PutLaunchProfileMembers
      description: Add/update users with given persona to launch profile membership.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutLaunchProfileMembersResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: X-Amz-Client-Token
          in: header
          required: false
          description: 'To make an idempotent API request using one of these actions, specify a client token in the request. You should not reuse the same client token for other API requests. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails with a ValidationException error.'
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: launchProfileId
          in: path
          required: true
          description: The launch profile ID.
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: The studio ID.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - identityStoreId
                - members
              properties:
                identityStoreId:
                  description: The ID of the identity store.
                  type: string
                members:
                  description: ''
                  type: array
                  items:
                    $ref: '#/components/schemas/NewLaunchProfileMember'
                  minItems: 1
                  maxItems: 20
  '/2020-08-01/studios/{studioId}/membership':
    get:
      operationId: ListStudioMembers
      description: Get all users in a given studio membership.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStudioMembersResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: 'The token for the next set of results, or null if there are no more results.'
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: The studio ID.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: PutStudioMembers
      description: Add/update users with given persona to studio membership.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutStudioMembersResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: X-Amz-Client-Token
          in: header
          required: false
          description: 'To make an idempotent API request using one of these actions, specify a client token in the request. You should not reuse the same client token for other API requests. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails with a ValidationException error.'
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: studioId
          in: path
          required: true
          description: The studio ID.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - identityStoreId
                - members
              properties:
                identityStoreId:
                  description: The ID of the identity store.
                  type: string
                members:
                  description: ''
                  type: array
                  items:
                    $ref: '#/components/schemas/NewStudioMember'
                  minItems: 1
                  maxItems: 20
  '/2020-08-01/tags/{resourceArn}':
    get:
      operationId: ListTagsForResource
      description: '<p>Gets the tags for a resource, given its Amazon Resource Names (ARN).</p> <p>This operation supports ARNs for all resource types in Nimble Studio that support tags, including studio, studio component, launch profile, streaming image, and streaming session. All resources that can be tagged will contain an ARN property, so you do not have to create this ARN yourself.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The ARN of the target resource for tagging operations.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: TagResource
      description: 'Creates tags for a resource, given its ARN.'
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The ARN of the target resource for tagging operations.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  description: ''
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/__string'
  '/2020-08-01/studios/{studioId}/sso-configuration':
    put:
      operationId: StartStudioSSOConfigurationRepair
      description: '<p>Repairs the SSO configuration for a given studio.</p> <p>If the studio has a valid Amazon Web Services SSO configuration currently associated with it, this operation will fail with a validation error.</p> <p>If the studio does not have a valid Amazon Web Services SSO configuration currently associated with it, then a new Amazon Web Services SSO application is created for the studio and the studio is changed to the READY state.</p> <p>After the Amazon Web Services SSO application is repaired, you must use the Amazon Nimble Studio console to add administrators and users to your studio.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartStudioSSOConfigurationRepairResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: X-Amz-Client-Token
          in: header
          required: false
          description: 'To make an idempotent API request using one of these actions, specify a client token in the request. You should not reuse the same client token for other API requests. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails with a ValidationException error.'
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: studioId
          in: path
          required: true
          description: The studio ID.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2020-08-01/tags/{resourceArn}#tagKeys':
    delete:
      operationId: UntagResource
      description: Deletes the tags for a resource.
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The ARN of the target resource for tagging operations.
          schema:
            type: string
        - name: tagKeys
          in: query
          required: true
          description: An array of tag keys to delete.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/__string'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AcceptEulasResponse:
      type: object
      properties:
        eulaAcceptances:
          $ref: '#/components/schemas/EulaAcceptanceList'
          description: A collection of EULA acceptances.
    __string:
      type: string
    ValidationException: {}
    InternalServerErrorException: {}
    ServiceQuotaExceededException: {}
    AccessDeniedException: {}
    ResourceNotFoundException: {}
    ThrottlingException: {}
    ConflictException: {}
    CreateLaunchProfileResponse:
      type: object
      properties:
        launchProfile:
          $ref: '#/components/schemas/LaunchProfile'
          description: The launch profile.
    EC2SubnetId:
      type: string
    LaunchProfileProtocolVersion:
      type: string
      pattern: ^2021\-03\-31$
      description: The version number of the protocol that is used by the launch profile. The only valid version is "2021-03-31".
      maxLength: 10
    StreamingClipboardMode:
      type: string
      enum:
        - ENABLED
        - DISABLED
      description: ''
    StreamingInstanceTypeList:
      type: array
      description: The EC2 instance types that users can select from when launching a streaming session with this launch profile.
      items:
        $ref: '#/components/schemas/StreamingInstanceType'
      minItems: 1
      maxItems: 30
    StreamConfigurationMaxSessionLengthInMinutes:
      type: integer
      minimum: 1
      maximum: 690
      description: ''
    StreamingImageIdList:
      type: array
      description: A list of streaming image IDs that users can select from when launching a streaming session with this launch profile.
      items:
        $ref: '#/components/schemas/StreamingImageId'
      maxItems: 20
    CreateStreamingImageResponse:
      type: object
      properties:
        streamingImage:
          $ref: '#/components/schemas/StreamingImage'
          description: ''
    CreateStreamingSessionResponse:
      type: object
      properties:
        session:
          $ref: '#/components/schemas/StreamingSession'
          description: The session.
    CreateStreamingSessionStreamResponse:
      type: object
      properties:
        stream:
          $ref: '#/components/schemas/StreamingSessionStream'
          description: The stream.
    CreateStudioResponse:
      type: object
      properties:
        studio:
          $ref: '#/components/schemas/Studio'
          description: Information about a studio.
    StudioEncryptionConfigurationKeyArn:
      type: string
      pattern: '^arn:.*'
      description: The Amazon Resource Name (ARN) for a KMS key that is used to encrypt studio data.
      minLength: 4
    StudioEncryptionConfigurationKeyType:
      type: string
      enum:
        - AWS_OWNED_KEY
        - CUSTOMER_MANAGED_KEY
      description: The type of KMS key that is used to encrypt studio data.
    CreateStudioComponentResponse:
      type: object
      properties:
        studioComponent:
          $ref: '#/components/schemas/StudioComponent'
          description: Information about the studio component.
    ActiveDirectoryConfiguration:
      type: object
      properties:
        computerAttributes:
          $ref: '#/components/schemas/ActiveDirectoryComputerAttributeList'
          description: A collection of custom attributes for an Active Directory computer.
        directoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The directory ID of the Directory Service for Microsoft Active Directory to access using this studio component.
        organizationalUnitDistinguishedName:
          $ref: '#/components/schemas/ActiveDirectoryOrganizationalUnitDistinguishedName'
          description: The distinguished name (DN) and organizational unit (OU) of an Active Directory computer.
      description: The configuration for a Microsoft Active Directory (Microsoft AD) studio resource.
    ComputeFarmConfiguration:
      type: object
      properties:
        activeDirectoryUser:
          $ref: '#/components/schemas/__string'
          description: The name of an Active Directory user that is used on ComputeFarm worker instances.
        endpoint:
          $ref: '#/components/schemas/__string'
          description: The endpoint of the ComputeFarm that is accessed by the studio component resource.
      description: The configuration for a render farm that is associated with a studio resource.
    LicenseServiceConfiguration:
      type: object
      properties:
        endpoint:
          $ref: '#/components/schemas/__string'
          description: The endpoint of the license service that is accessed by the studio component resource.
      description: The configuration for a license service that is associated with a studio resource.
    SharedFileSystemConfiguration:
      type: object
      properties:
        endpoint:
          $ref: '#/components/schemas/__string'
          description: The endpoint of the shared file system that is accessed by the studio component resource.
        fileSystemId:
          $ref: '#/components/schemas/__string'
          description: The unique identifier for a file system.
        linuxMountPoint:
          $ref: '#/components/schemas/LinuxMountPoint'
          description: The mount location for a shared file system on a Linux virtual workstation.
        shareName:
          $ref: '#/components/schemas/__string'
          description: The name of the file share.
        windowsMountDrive:
          $ref: '#/components/schemas/WindowsMountDrive'
          description: The mount location for a shared file system on a Windows virtual workstation.
      description: The configuration for a shared file storage system that is associated with a studio resource.
    SecurityGroupId:
      type: string
      description: ''
    StudioComponentInitializationScript:
      type: object
      properties:
        launchProfileProtocolVersion:
          $ref: '#/components/schemas/LaunchProfileProtocolVersion'
          description: The version number of the protocol that is used by the launch profile. The only valid version is "2021-03-31".
        platform:
          $ref: '#/components/schemas/LaunchProfilePlatform'
          description: 'The platform of the initialization script, either WINDOWS or LINUX.'
        runContext:
          $ref: '#/components/schemas/StudioComponentInitializationScriptRunContext'
          description: The method to use when running the initialization script.
        script:
          $ref: '#/components/schemas/StudioComponentInitializationScriptContent'
          description: The initialization script.
      description: Initialization scripts for studio components.
    ScriptParameterKeyValue:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/ScriptParameterKey'
          description: A script parameter key.
        value:
          $ref: '#/components/schemas/ScriptParameterValue'
          description: A script parameter value.
      description: 'A parameter for a studio component script, in the form of a key:value pair.'
    DeleteLaunchProfileResponse:
      type: object
      properties:
        launchProfile:
          $ref: '#/components/schemas/LaunchProfile'
          description: The launch profile.
    DeleteLaunchProfileMemberResponse:
      type: object
      properties: {}
    DeleteStreamingImageResponse:
      type: object
      properties:
        streamingImage:
          $ref: '#/components/schemas/StreamingImage'
          description: The streaming image.
    DeleteStreamingSessionResponse:
      type: object
      properties:
        session:
          $ref: '#/components/schemas/StreamingSession'
          description: The session.
    DeleteStudioResponse:
      type: object
      properties:
        studio:
          $ref: '#/components/schemas/Studio'
          description: Information about a studio.
    DeleteStudioComponentResponse:
      type: object
      properties:
        studioComponent:
          $ref: '#/components/schemas/StudioComponent'
          description: Information about the studio component.
    DeleteStudioMemberResponse:
      type: object
      properties: {}
    GetEulaResponse:
      type: object
      properties:
        eula:
          $ref: '#/components/schemas/Eula'
          description: The EULA.
    GetLaunchProfileResponse:
      type: object
      properties:
        launchProfile:
          $ref: '#/components/schemas/LaunchProfile'
          description: The launch profile.
    GetLaunchProfileDetailsResponse:
      type: object
      properties:
        launchProfile:
          $ref: '#/components/schemas/LaunchProfile'
          description: The launch profile.
        streamingImages:
          $ref: '#/components/schemas/StreamingImageList'
          description: A collection of streaming images.
        studioComponentSummaries:
          $ref: '#/components/schemas/StudioComponentSummaryList'
          description: A collection of studio component summaries.
    GetLaunchProfileInitializationResponse:
      type: object
      properties:
        launchProfileInitialization:
          $ref: '#/components/schemas/LaunchProfileInitialization'
          description: The launch profile initialization.
    GetLaunchProfileMemberResponse:
      type: object
      properties:
        member:
          $ref: '#/components/schemas/LaunchProfileMembership'
          description: The member.
    GetStreamingImageResponse:
      type: object
      properties:
        streamingImage:
          $ref: '#/components/schemas/StreamingImage'
          description: The streaming image.
    GetStreamingSessionResponse:
      type: object
      properties:
        session:
          $ref: '#/components/schemas/StreamingSession'
          description: The session.
    GetStreamingSessionStreamResponse:
      type: object
      properties:
        stream:
          $ref: '#/components/schemas/StreamingSessionStream'
          description: The stream.
    GetStudioResponse:
      type: object
      properties:
        studio:
          $ref: '#/components/schemas/Studio'
          description: Information about a studio.
    GetStudioComponentResponse:
      type: object
      properties:
        studioComponent:
          $ref: '#/components/schemas/StudioComponent'
          description: Information about the studio component.
    GetStudioMemberResponse:
      type: object
      properties:
        member:
          $ref: '#/components/schemas/StudioMembership'
          description: The member.
    ListEulaAcceptancesResponse:
      type: object
      properties:
        eulaAcceptances:
          $ref: '#/components/schemas/EulaAcceptanceList'
          description: A collection of EULA acceptances.
        nextToken:
          $ref: '#/components/schemas/__string'
          description: 'The token for the next set of results, or null if there are no more results.'
    ListEulasResponse:
      type: object
      properties:
        eulas:
          $ref: '#/components/schemas/EulaList'
          description: A collection of EULA resources.
        nextToken:
          $ref: '#/components/schemas/__string'
          description: 'The token for the next set of results, or null if there are no more results.'
    ListLaunchProfileMembersResponse:
      type: object
      properties:
        members:
          $ref: '#/components/schemas/LaunchProfileMembershipList'
          description: A list of members.
        nextToken:
          $ref: '#/components/schemas/__string'
          description: 'The token for the next set of results, or null if there are no more results.'
    ListLaunchProfilesResponse:
      type: object
      properties:
        launchProfiles:
          $ref: '#/components/schemas/LaunchProfileList'
          description: A collection of launch profiles.
        nextToken:
          $ref: '#/components/schemas/__string'
          description: 'The token for the next set of results, or null if there are no more results.'
    ListStreamingImagesResponse:
      type: object
      properties:
        nextToken:
          $ref: '#/components/schemas/__string'
          description: 'The token for the next set of results, or null if there are no more results.'
        streamingImages:
          $ref: '#/components/schemas/StreamingImageList'
          description: A collection of streaming images.
    ListStreamingSessionsResponse:
      type: object
      properties:
        nextToken:
          $ref: '#/components/schemas/__string'
          description: 'The token for the next set of results, or null if there are no more results.'
        sessions:
          $ref: '#/components/schemas/StreamingSessionList'
          description: A collection of streaming sessions.
    ListStudioComponentsResponse:
      type: object
      properties:
        nextToken:
          $ref: '#/components/schemas/__string'
          description: 'The token for the next set of results, or null if there are no more results.'
        studioComponents:
          $ref: '#/components/schemas/StudioComponentList'
          description: A collection of studio components.
    ListStudioMembersResponse:
      type: object
      properties:
        members:
          $ref: '#/components/schemas/StudioMembershipList'
          description: A list of members.
        nextToken:
          $ref: '#/components/schemas/__string'
          description: 'The token for the next set of results, or null if there are no more results.'
    ListStudiosResponse:
      type: object
      properties:
        nextToken:
          $ref: '#/components/schemas/__string'
          description: 'The token for the next set of results, or null if there are no more results.'
        studios:
          $ref: '#/components/schemas/StudioList'
          description: A collection of studios.
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          $ref: '#/components/schemas/Tags'
          description: 'A collection of labels, in the form of key:value pairs, that apply to this resource.'
    PutLaunchProfileMembersResponse:
      type: object
      properties: {}
    NewLaunchProfileMember:
      type: object
      required:
        - persona
        - principalId
      properties:
        persona:
          $ref: '#/components/schemas/LaunchProfilePersona'
          description: The persona.
        principalId:
          $ref: '#/components/schemas/__string'
          description: The principal ID.
      description: ''
    PutStudioMembersResponse:
      type: object
      properties: {}
    NewStudioMember:
      type: object
      required:
        - persona
        - principalId
      properties:
        persona:
          $ref: '#/components/schemas/StudioPersona'
          description: The persona.
        principalId:
          $ref: '#/components/schemas/__string'
          description: The principal ID.
      description: ''
    StartStudioSSOConfigurationRepairResponse:
      type: object
      properties:
        studio:
          $ref: '#/components/schemas/Studio'
          description: Information about a studio.
    TagResourceResponse:
      type: object
      properties: {}
    UntagResourceResponse:
      type: object
      properties: {}
    UpdateLaunchProfileResponse:
      type: object
      properties:
        launchProfile:
          $ref: '#/components/schemas/LaunchProfile'
          description: The launch profile.
    UpdateLaunchProfileMemberResponse:
      type: object
      properties:
        member:
          $ref: '#/components/schemas/LaunchProfileMembership'
          description: The member.
    UpdateStreamingImageResponse:
      type: object
      properties:
        streamingImage:
          $ref: '#/components/schemas/StreamingImage'
          description: ''
    UpdateStudioResponse:
      type: object
      properties:
        studio:
          $ref: '#/components/schemas/Studio'
          description: Information about a studio.
    UpdateStudioComponentResponse:
      type: object
      properties:
        studioComponent:
          $ref: '#/components/schemas/StudioComponent'
          description: Information about the studio component.
    ClientToken:
      type: string
      minLength: 1
      maxLength: 64
    EulaIdList:
      type: array
      items:
        $ref: '#/components/schemas/__string'
      description: ''
    AcceptEulasRequest:
      type: object
      title: AcceptEulasRequest
      properties:
        eulaIds:
          $ref: '#/components/schemas/EulaIdList'
          description: The EULA ID.
      description: A collection of EULA acceptances.
    EulaAcceptanceList:
      type: array
      items:
        $ref: '#/components/schemas/EulaAcceptance'
      description: ''
    ActiveDirectoryComputerAttributeName:
      type: string
      description: The name for the LDAP attribute.
      minLength: 1
      maxLength: 40
    ActiveDirectoryComputerAttributeValue:
      type: string
      description: The value for the LDAP attribute.
      minLength: 1
      maxLength: 64
    ActiveDirectoryComputerAttribute:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/ActiveDirectoryComputerAttributeName'
          description: The name for the LDAP attribute.
        value:
          $ref: '#/components/schemas/ActiveDirectoryComputerAttributeValue'
          description: The value for the LDAP attribute.
      description: 'An LDAP attribute of an Active Directory computer account, in the form of a name:value pair.'
    ActiveDirectoryComputerAttributeList:
      type: array
      description: A collection of LDAP attributes to apply to Active Directory computer accounts that are created for streaming sessions.
      items:
        $ref: '#/components/schemas/ActiveDirectoryComputerAttribute'
      maxItems: 50
    DirectoryId:
      type: string
    ActiveDirectoryOrganizationalUnitDistinguishedName:
      type: string
      description: The fully-qualified distinguished name of the organizational unit to place the computer account in.
      minLength: 1
      maxLength: 2000
    ActiveDirectoryDnsIpAddress:
      type: string
    ActiveDirectoryDnsIpAddressList:
      type: array
      items:
        $ref: '#/components/schemas/ActiveDirectoryDnsIpAddress'
      maxItems: 10
      description: ''
    LaunchProfileDescription:
      type: string
      maxLength: 256
    EC2SubnetIdList:
      type: array
      items:
        $ref: '#/components/schemas/EC2SubnetId'
      maxItems: 6
      description: ''
    LaunchProfileProtocolVersionList:
      type: array
      items:
        $ref: '#/components/schemas/LaunchProfileProtocolVersion'
      description: ''
    LaunchProfileName:
      type: string
      maxLength: 64
    StreamConfigurationCreate:
      type: object
      required:
        - clipboardMode
        - streamingImageIds
        - ec2InstanceTypes
      properties:
        clipboardMode:
          $ref: '#/components/schemas/StreamingClipboardMode'
          description: Enable or disable the use of the system clipboard to copy and paste between the streaming session and streaming client.
        ec2InstanceTypes:
          $ref: '#/components/schemas/StreamingInstanceTypeList'
          description: The EC2 instance types that users can select from when launching a streaming session with this launch profile.
        maxSessionLengthInMinutes:
          $ref: '#/components/schemas/StreamConfigurationMaxSessionLengthInMinutes'
          description: 'The length of time, in minutes, that a streaming session can run. After this point, Nimble Studio automatically terminates the session.'
        streamingImageIds:
          $ref: '#/components/schemas/StreamingImageIdList'
          description: The streaming images that users can select from when launching a streaming session with this launch profile.
      description: ''
    LaunchProfileStudioComponentIdList:
      type: array
      items:
        $ref: '#/components/schemas/__string'
      minItems: 1
      maxItems: 100
      description: ''
    Tags:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/__string'
      description: ''
    CreateLaunchProfileRequest:
      type: object
      required:
        - ec2SubnetIds
        - studioComponentIds
        - launchProfileProtocolVersions
        - name
        - streamConfiguration
      title: CreateLaunchProfileRequest
      properties:
        description:
          $ref: '#/components/schemas/LaunchProfileDescription'
          description: The description.
        ec2SubnetIds:
          $ref: '#/components/schemas/EC2SubnetIdList'
          description: ''
        launchProfileProtocolVersions:
          $ref: '#/components/schemas/LaunchProfileProtocolVersionList'
          description: The version number of the protocol that is used by the launch profile. The only valid version is "2021-03-31".
        name:
          $ref: '#/components/schemas/LaunchProfileName'
          description: The name for the launch profile.
        streamConfiguration:
          $ref: '#/components/schemas/StreamConfigurationCreate'
          description: A configuration for a streaming session.
        studioComponentIds:
          $ref: '#/components/schemas/LaunchProfileStudioComponentIdList'
          description: Unique identifiers for a collection of studio components that can be used with this launch profile.
        tags:
          $ref: '#/components/schemas/Tags'
          description: 'A collection of labels, in the form of key:value pairs, that apply to this resource.'
      description: A collection of launch profiles.
    LaunchProfile:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/__string'
          description: The ARN of the resource.
        createdAt:
          $ref: '#/components/schemas/Timestamp'
          description: The Unix epoch timestamp in seconds for when the resource was created.
        createdBy:
          $ref: '#/components/schemas/__string'
          description: The user ID of the user that created the launch profile.
        description:
          $ref: '#/components/schemas/LaunchProfileDescription'
          description: A human-readable description of the launch profile.
        ec2SubnetIds:
          $ref: '#/components/schemas/EC2SubnetIdList'
          description: Unique identifiers for a collection of EC2 subnets.
        launchProfileId:
          $ref: '#/components/schemas/LaunchProfileId'
          description: The launch profile ID.
        launchProfileProtocolVersions:
          $ref: '#/components/schemas/LaunchProfileProtocolVersionList'
          description: The version number of the protocol that is used by the launch profile. The only valid version is "2021-03-31".
        name:
          $ref: '#/components/schemas/LaunchProfileName'
          description: A friendly name for the launch profile.
        state:
          $ref: '#/components/schemas/LaunchProfileState'
          description: The current state.
        statusCode:
          $ref: '#/components/schemas/LaunchProfileStatusCode'
          description: The status code.
        statusMessage:
          $ref: '#/components/schemas/__string'
          description: The status message for the launch profile.
        streamConfiguration:
          $ref: '#/components/schemas/StreamConfiguration'
          description: A configuration for a streaming session.
        studioComponentIds:
          $ref: '#/components/schemas/LaunchProfileStudioComponentIdList'
          description: Unique identifiers for a collection of studio components that can be used with this launch profile.
        tags:
          $ref: '#/components/schemas/Tags'
          description: 'A collection of labels, in the form of key:value pairs, that apply to this resource.'
        updatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The Unix epoch timestamp in seconds for when the resource was updated.
        updatedBy:
          $ref: '#/components/schemas/__string'
          description: The user ID of the user that most recently updated the resource.
      description: ''
    StreamingImageDescription:
      type: string
      description: The description.
      maxLength: 256
    EC2ImageId:
      type: string
      pattern: '^ami-[0-9A-z]+$'
      description: ''
    StreamingImageName:
      type: string
      description: A friendly name for a streaming image resource.
      maxLength: 64
    CreateStreamingImageRequest:
      type: object
      required:
        - name
        - ec2ImageId
      title: CreateStreamingImageRequest
      properties:
        description:
          $ref: '#/components/schemas/StreamingImageDescription'
          description: A human-readable description of the streaming image.
        ec2ImageId:
          $ref: '#/components/schemas/EC2ImageId'
          description: The ID of an EC2 machine image with which to create this streaming image.
        name:
          $ref: '#/components/schemas/StreamingImageName'
          description: A friendly name for a streaming image resource.
        tags:
          $ref: '#/components/schemas/Tags'
          description: 'A collection of labels, in the form of key:value pairs, that apply to this resource.'
      description: A collection of streaming images.
    StreamingImage:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/__string'
          description: The ARN of the resource.
        description:
          $ref: '#/components/schemas/StreamingImageDescription'
          description: A human-readable description of the streaming image.
        ec2ImageId:
          $ref: '#/components/schemas/EC2ImageId'
          description: The ID of an EC2 machine image with which to create the streaming image.
        encryptionConfiguration:
          $ref: '#/components/schemas/StreamingImageEncryptionConfiguration'
          description: The encryption configuration.
        eulaIds:
          $ref: '#/components/schemas/EulaIdList'
          description: The list of EULAs that must be accepted before a Streaming Session can be started using this streaming image.
        name:
          $ref: '#/components/schemas/StreamingImageName'
          description: A friendly name for a streaming image resource.
        owner:
          $ref: '#/components/schemas/StreamingImageOwner'
          description: 'The owner of the streaming image, either the studioId that contains the streaming image, or ''amazon'' for images that are provided by Amazon Nimble Studio.'
        platform:
          $ref: '#/components/schemas/StreamingImagePlatform'
          description: 'The platform of the streaming image, either WINDOWS or LINUX.'
        state:
          $ref: '#/components/schemas/StreamingImageState'
          description: The current state.
        statusCode:
          $ref: '#/components/schemas/StreamingImageStatusCode'
          description: The status code.
        statusMessage:
          $ref: '#/components/schemas/__string'
          description: The status message for the streaming image.
        streamingImageId:
          $ref: '#/components/schemas/StreamingImageId'
          description: The ID of the streaming image.
        tags:
          $ref: '#/components/schemas/Tags'
          description: 'A collection of labels, in the form of key:value pairs, that apply to this resource.'
      description: ''
    StreamingInstanceType:
      type: string
      enum:
        - g4dn.xlarge
        - g4dn.2xlarge
        - g4dn.4xlarge
        - g4dn.8xlarge
        - g4dn.12xlarge
        - g4dn.16xlarge
      description: ''
    StreamingImageId:
      type: string
      pattern: '^[a-zA-Z0-9-_]*$'
      maxLength: 22
      description: ''
    CreateStreamingSessionRequest:
      type: object
      title: CreateStreamingSessionRequest
      properties:
        ec2InstanceType:
          $ref: '#/components/schemas/StreamingInstanceType'
          description: The EC2 Instance type used for the streaming session.
        launchProfileId:
          $ref: '#/components/schemas/__string'
          description: The launch profile ID.
        ownedBy:
          $ref: '#/components/schemas/__string'
          description: The user ID of the user that owns the streaming session.
        streamingImageId:
          $ref: '#/components/schemas/StreamingImageId'
          description: The ID of the streaming image.
        tags:
          $ref: '#/components/schemas/Tags'
          description: 'A collection of labels, in the form of key:value pairs, that apply to this resource.'
      description: A collection of streaming sessions.
    StreamingSession:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/__string'
          description: The ARN of the resource.
        createdAt:
          $ref: '#/components/schemas/Timestamp'
          description: The Unix epoch timestamp in seconds for when the resource was created.
        createdBy:
          $ref: '#/components/schemas/__string'
          description: The user ID of the user that created the streaming session.
        ec2InstanceType:
          $ref: '#/components/schemas/__string'
          description: The EC2 Instance type used for the streaming session.
        launchProfileId:
          $ref: '#/components/schemas/__string'
          description: The ID of the launch profile used to control access from the streaming session.
        ownedBy:
          $ref: '#/components/schemas/__string'
          description: The user ID of the user that owns the streaming session.
        sessionId:
          $ref: '#/components/schemas/StreamingSessionId'
          description: The session ID.
        state:
          $ref: '#/components/schemas/StreamingSessionState'
          description: The current state.
        statusCode:
          $ref: '#/components/schemas/StreamingSessionStatusCode'
          description: The status code.
        statusMessage:
          $ref: '#/components/schemas/__string'
          description: The status message for the streaming session.
        streamingImageId:
          $ref: '#/components/schemas/StreamingImageId'
          description: The ID of the streaming image.
        tags:
          $ref: '#/components/schemas/Tags'
          description: 'A collection of labels, in the form of key:value pairs, that apply to this resource.'
        terminateAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time the streaming session will automatically terminate if not terminated by the user.
        updatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The Unix epoch timestamp in seconds for when the resource was updated.
        updatedBy:
          $ref: '#/components/schemas/__string'
          description: The user ID of the user that most recently updated the resource.
      description: ''
    StreamingSessionStreamExpirationInSeconds:
      type: integer
      minimum: 60
      maximum: 3600
      description: ''
    CreateStreamingSessionStreamRequest:
      type: object
      title: CreateStreamingSessionStreamRequest
      properties:
        expirationInSeconds:
          $ref: '#/components/schemas/StreamingSessionStreamExpirationInSeconds'
          description: The expiration time in seconds.
      description: A list collection streams.
    StreamingSessionStream:
      type: object
      properties:
        createdAt:
          $ref: '#/components/schemas/Timestamp'
          description: The Unix epoch timestamp in seconds for when the resource was created.
        createdBy:
          $ref: '#/components/schemas/__string'
          description: The user ID of the user that created the streaming session stream.
        expiresAt:
          $ref: '#/components/schemas/Timestamp'
          description: The Unix epoch timestamp in seconds for when the resource expires.
        ownedBy:
          $ref: '#/components/schemas/__string'
          description: The user ID of the user that owns the streaming session.
        state:
          $ref: '#/components/schemas/StreamingSessionStreamState'
          description: The current state.
        statusCode:
          $ref: '#/components/schemas/StreamingSessionStreamStatusCode'
          description: The streaming session stream status code.
        streamId:
          $ref: '#/components/schemas/__string'
          description: The stream ID.
        url:
          $ref: '#/components/schemas/__string'
          description: The URL to connect to this stream using the DCV client.
      description: ''
    StudioComponentConfiguration:
      type: object
      properties:
        activeDirectoryConfiguration:
          $ref: '#/components/schemas/ActiveDirectoryConfiguration'
          description: The configuration for a Microsoft Active Directory (Microsoft AD) studio resource.
        computeFarmConfiguration:
          $ref: '#/components/schemas/ComputeFarmConfiguration'
          description: The configuration for a render farm that is associated with a studio resource.
        licenseServiceConfiguration:
          $ref: '#/components/schemas/LicenseServiceConfiguration'
          description: The configuration for a license service that is associated with a studio resource.
        sharedFileSystemConfiguration:
          $ref: '#/components/schemas/SharedFileSystemConfiguration'
          description: The configuration for a shared file storage system that is associated with a studio resource.
      description: 'The configuration of the studio component, based on component type.'
    StudioComponentDescription:
      type: string
      maxLength: 256
      description: ''
    StudioComponentSecurityGroupIdList:
      type: array
      items:
        $ref: '#/components/schemas/SecurityGroupId'
      minItems: 1
      maxItems: 30
      description: ''
    StudioComponentInitializationScriptList:
      type: array
      items:
        $ref: '#/components/schemas/StudioComponentInitializationScript'
      description: ''
    StudioComponentName:
      type: string
      maxLength: 64
      description: ''
    StudioComponentScriptParameterKeyValueList:
      type: array
      items:
        $ref: '#/components/schemas/ScriptParameterKeyValue'
      maxItems: 30
      description: ''
    StudioComponentSubtype:
      type: string
      enum:
        - AWS_MANAGED_MICROSOFT_AD
        - AMAZON_FSX_FOR_WINDOWS
        - AMAZON_FSX_FOR_LUSTRE
        - CUSTOM
      description: ''
    StudioComponentType:
      type: string
      enum:
        - ACTIVE_DIRECTORY
        - SHARED_FILE_SYSTEM
        - COMPUTE_FARM
        - LICENSE_SERVICE
        - CUSTOM
      description: ''
    CreateStudioComponentRequest:
      type: object
      required:
        - name
        - type
      title: CreateStudioComponentRequest
      properties:
        configuration:
          $ref: '#/components/schemas/StudioComponentConfiguration'
          description: 'The configuration of the studio component, based on component type.'
        description:
          $ref: '#/components/schemas/StudioComponentDescription'
          description: The description.
        ec2SecurityGroupIds:
          $ref: '#/components/schemas/StudioComponentSecurityGroupIdList'
          description: The EC2 security groups that control access to the studio component.
        initializationScripts:
          $ref: '#/components/schemas/StudioComponentInitializationScriptList'
          description: Initialization scripts for studio components.
        name:
          $ref: '#/components/schemas/StudioComponentName'
          description: The name for the studio component.
        scriptParameters:
          $ref: '#/components/schemas/StudioComponentScriptParameterKeyValueList'
          description: Parameters for the studio component scripts.
        subtype:
          $ref: '#/components/schemas/StudioComponentSubtype'
          description: The specific subtype of a studio component.
        tags:
          $ref: '#/components/schemas/Tags'
          description: 'A collection of labels, in the form of key:value pairs, that apply to this resource.'
        type:
          $ref: '#/components/schemas/StudioComponentType'
          description: The type of the studio component.
      description: The studio components.
    StudioComponent:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/__string'
          description: The ARN of the resource.
        configuration:
          $ref: '#/components/schemas/StudioComponentConfiguration'
          description: 'The configuration of the studio component, based on component type.'
        createdAt:
          $ref: '#/components/schemas/Timestamp'
          description: The Unix epoch timestamp in seconds for when the resource was created.
        createdBy:
          $ref: '#/components/schemas/__string'
          description: The user ID of the user that created the studio component.
        description:
          $ref: '#/components/schemas/StudioComponentDescription'
          description: A human-readable description for the studio component resource.
        ec2SecurityGroupIds:
          $ref: '#/components/schemas/StudioComponentSecurityGroupIdList'
          description: The EC2 security groups that control access to the studio component.
        initializationScripts:
          $ref: '#/components/schemas/StudioComponentInitializationScriptList'
          description: Initialization scripts for studio components.
        name:
          $ref: '#/components/schemas/StudioComponentName'
          description: A friendly name for the studio component resource.
        scriptParameters:
          $ref: '#/components/schemas/StudioComponentScriptParameterKeyValueList'
          description: Parameters for the studio component scripts.
        state:
          $ref: '#/components/schemas/StudioComponentState'
          description: The current state.
        statusCode:
          $ref: '#/components/schemas/StudioComponentStatusCode'
          description: The status code.
        statusMessage:
          $ref: '#/components/schemas/__string'
          description: The status message for the studio component.
        studioComponentId:
          $ref: '#/components/schemas/StudioComponentId'
          description: The unique identifier for a studio component resource.
        subtype:
          $ref: '#/components/schemas/StudioComponentSubtype'
          description: The specific subtype of a studio component.
        tags:
          $ref: '#/components/schemas/Tags'
          description: 'A collection of labels, in the form of key:value pairs, that apply to this resource.'
        type:
          $ref: '#/components/schemas/StudioComponentType'
          description: The type of the studio component.
        updatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The Unix epoch timestamp in seconds for when the resource was updated.
        updatedBy:
          $ref: '#/components/schemas/__string'
          description: The user ID of the user that most recently updated the resource.
      description: 'A network that is used by a studio’s users and workflows, including render farm, Active Directory, licensing, and file system.'
    StudioDisplayName:
      type: string
      maxLength: 64
    StudioEncryptionConfiguration:
      type: object
      required:
        - keyType
      properties:
        keyArn:
          $ref: '#/components/schemas/StudioEncryptionConfigurationKeyArn'
          description: The ARN for a KMS key that is used to encrypt studio data.
        keyType:
          $ref: '#/components/schemas/StudioEncryptionConfigurationKeyType'
          description: The type of KMS key that is used to encrypt studio data.
      description: Configuration of the encryption method that is used for the studio.
    StudioName:
      type: string
      pattern: '^[a-z0-9]*$'
      minLength: 3
      maxLength: 64
      description: ''
    CreateStudioRequest:
      type: object
      required:
        - displayName
        - studioName
        - userRoleArn
        - adminRoleArn
      title: CreateStudioRequest
      properties:
        adminRoleArn:
          $ref: '#/components/schemas/__string'
          description: The IAM role that Studio Admins will assume when logging in to the Nimble Studio portal.
        displayName:
          $ref: '#/components/schemas/StudioDisplayName'
          description: A friendly name for the studio.
        studioEncryptionConfiguration:
          $ref: '#/components/schemas/StudioEncryptionConfiguration'
          description: The studio encryption configuration.
        studioName:
          $ref: '#/components/schemas/StudioName'
          description: The studio name that is used in the URL of the Nimble Studio portal when accessed by Nimble Studio users.
        tags:
          $ref: '#/components/schemas/Tags'
          description: 'A collection of labels, in the form of key:value pairs, that apply to this resource.'
        userRoleArn:
          $ref: '#/components/schemas/__string'
          description: The IAM role that Studio Users will assume when logging in to the Nimble Studio portal.
      description: A collection of studio resources.
    Studio:
      type: object
      properties:
        adminRoleArn:
          $ref: '#/components/schemas/__string'
          description: The IAM role that studio admins assume when logging in to the Nimble Studio portal.
        arn:
          $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) that is assigned to a studio resource and uniquely identifies it. ARNs are unique across all Regions.
        createdAt:
          $ref: '#/components/schemas/Timestamp'
          description: The Unix epoch timestamp in seconds for when the resource was created.
        displayName:
          $ref: '#/components/schemas/StudioDisplayName'
          description: A friendly name for the studio.
        homeRegion:
          $ref: '#/components/schemas/Region'
          description: The Amazon Web Services Region where the studio resource is located.
        ssoClientId:
          $ref: '#/components/schemas/__string'
          description: The Amazon Web Services SSO application client ID used to integrate with Amazon Web Services SSO to enable Amazon Web Services SSO users to log in to Nimble portal.
        state:
          $ref: '#/components/schemas/StudioState'
          description: The current state of the studio resource.
        statusCode:
          $ref: '#/components/schemas/StudioStatusCode'
          description: Status codes that provide additional detail on the studio state.
        statusMessage:
          $ref: '#/components/schemas/__string'
          description: Additional detail on the studio state.
        studioEncryptionConfiguration:
          $ref: '#/components/schemas/StudioEncryptionConfiguration'
          description: Configuration of the encryption method that is used for the studio.
        studioId:
          $ref: '#/components/schemas/__string'
          description: 'The unique identifier for a studio resource. In Nimble Studio, all other resources are contained in a studio resource.'
        studioName:
          $ref: '#/components/schemas/StudioName'
          description: 'The name of the studio, as included in the URL when accessing it in the Nimble Studio portal.'
        studioUrl:
          $ref: '#/components/schemas/__string'
          description: The address of the web page for the studio.
        tags:
          $ref: '#/components/schemas/Tags'
          description: 'A collection of labels, in the form of key:value pairs, that apply to this resource.'
        updatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The Unix epoch timestamp in seconds for when the resource was updated.
        userRoleArn:
          $ref: '#/components/schemas/__string'
          description: The IAM role that studio users assume when logging in to the Nimble Studio portal.
      description: ''
    DeleteLaunchProfileMemberRequest:
      type: object
      title: DeleteLaunchProfileMemberRequest
      properties: {}
    DeleteLaunchProfileRequest:
      type: object
      title: DeleteLaunchProfileRequest
      properties: {}
    DeleteStreamingImageRequest:
      type: object
      title: DeleteStreamingImageRequest
      properties: {}
    DeleteStreamingSessionRequest:
      type: object
      title: DeleteStreamingSessionRequest
      properties: {}
    DeleteStudioComponentRequest:
      type: object
      title: DeleteStudioComponentRequest
      properties: {}
    DeleteStudioMemberRequest:
      type: object
      title: DeleteStudioMemberRequest
      properties: {}
    DeleteStudioRequest:
      type: object
      title: DeleteStudioRequest
      properties: {}
    Timestamp:
      type: string
      format: date-time
      description: ''
    EulaId:
      type: string
      pattern: '^[a-zA-Z0-9-_]*$'
      description: Represents a EULA resource.
      maxLength: 22
    EulaName:
      type: string
      maxLength: 64
    Eula:
      type: object
      properties:
        content:
          $ref: '#/components/schemas/__string'
          description: The EULA content.
        createdAt:
          $ref: '#/components/schemas/Timestamp'
          description: The Unix epoch timestamp in seconds for when the resource was created.
        eulaId:
          $ref: '#/components/schemas/EulaId'
          description: The EULA ID.
        name:
          $ref: '#/components/schemas/EulaName'
          description: The name for the EULA.
        updatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The Unix epoch timestamp in seconds for when the resource was updated.
      description: Represents a EULA resource.
    EulaAcceptanceId:
      type: string
      pattern: '^[a-zA-Z0-9-_]*$'
      description: The EULA acceptance ID.
      maxLength: 22
    EulaAcceptance:
      type: object
      properties:
        acceptedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The Unix epoch timestamp in seconds for when the EULA was accepted.
        acceptedBy:
          $ref: '#/components/schemas/__string'
          description: The ID of the person who accepted the EULA.
        accepteeId:
          $ref: '#/components/schemas/__string'
          description: The ID of the acceptee.
        eulaAcceptanceId:
          $ref: '#/components/schemas/EulaAcceptanceId'
          description: The EULA acceptance ID.
        eulaId:
          $ref: '#/components/schemas/EulaId'
          description: The EULA ID.
      description: ''
    EulaList:
      type: array
      items:
        $ref: '#/components/schemas/Eula'
      description: ''
    GetEulaRequest:
      type: object
      title: GetEulaRequest
      properties: {}
    GetLaunchProfileDetailsRequest:
      type: object
      title: GetLaunchProfileDetailsRequest
      properties: {}
    StreamingImageList:
      type: array
      items:
        $ref: '#/components/schemas/StreamingImage'
      description: ''
    StudioComponentSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/StudioComponentSummary'
      description: ''
    multiValueQueryStringList:
      type: array
      items:
        $ref: '#/components/schemas/__string'
    GetLaunchProfileInitializationRequest:
      type: object
      title: GetLaunchProfileInitializationRequest
      properties: {}
    LaunchProfileInitialization:
      type: object
      properties:
        activeDirectory:
          $ref: '#/components/schemas/LaunchProfileInitializationActiveDirectory'
          description: A LaunchProfileInitializationActiveDirectory resource.
        ec2SecurityGroupIds:
          $ref: '#/components/schemas/LaunchProfileSecurityGroupIdList'
          description: The EC2 security groups that control access to the studio component.
        launchProfileId:
          $ref: '#/components/schemas/LaunchProfileId'
          description: The launch profile ID.
        launchProfileProtocolVersion:
          $ref: '#/components/schemas/LaunchProfileProtocolVersion'
          description: The version number of the protocol that is used by the launch profile. The only valid version is "2021-03-31".
        launchPurpose:
          $ref: '#/components/schemas/LaunchPurpose'
          description: The launch purpose.
        name:
          $ref: '#/components/schemas/LaunchProfileName'
          description: The name for the launch profile.
        platform:
          $ref: '#/components/schemas/LaunchProfilePlatform'
          description: 'The platform of the launch platform, either WINDOWS or LINUX.'
        systemInitializationScripts:
          $ref: '#/components/schemas/LaunchProfileInitializationScriptList'
          description: The system initializtion scripts.
        userInitializationScripts:
          $ref: '#/components/schemas/LaunchProfileInitializationScriptList'
          description: The user initializtion scripts.
      description: ''
    GetLaunchProfileMemberRequest:
      type: object
      title: GetLaunchProfileMemberRequest
      properties: {}
    LaunchProfileMembership:
      type: object
      properties:
        identityStoreId:
          $ref: '#/components/schemas/__string'
          description: The ID of the identity store.
        persona:
          $ref: '#/components/schemas/LaunchProfilePersona'
          description: The persona.
        principalId:
          $ref: '#/components/schemas/__string'
          description: The principal ID.
      description: ''
    GetLaunchProfileRequest:
      type: object
      title: GetLaunchProfileRequest
      properties: {}
    GetStreamingImageRequest:
      type: object
      title: GetStreamingImageRequest
      properties: {}
    GetStreamingSessionRequest:
      type: object
      title: GetStreamingSessionRequest
      properties: {}
    GetStreamingSessionStreamRequest:
      type: object
      title: GetStreamingSessionStreamRequest
      properties: {}
    GetStudioComponentRequest:
      type: object
      title: GetStudioComponentRequest
      properties: {}
    GetStudioMemberRequest:
      type: object
      title: GetStudioMemberRequest
      properties: {}
    StudioMembership:
      type: object
      properties:
        identityStoreId:
          $ref: '#/components/schemas/__string'
          description: The ID of the identity store.
        persona:
          $ref: '#/components/schemas/StudioPersona'
          description: The persona.
        principalId:
          $ref: '#/components/schemas/__string'
          description: The principal ID.
      description: ''
    GetStudioRequest:
      type: object
      title: GetStudioRequest
      properties: {}
    LaunchProfileId:
      type: string
      pattern: '^[a-zA-Z0-9-_]*$'
      maxLength: 22
    LaunchProfileState:
      type: string
      enum:
        - CREATE_IN_PROGRESS
        - READY
        - UPDATE_IN_PROGRESS
        - DELETE_IN_PROGRESS
        - DELETED
        - DELETE_FAILED
        - CREATE_FAILED
        - UPDATE_FAILED
      description: ''
    LaunchProfileStatusCode:
      type: string
      enum:
        - LAUNCH_PROFILE_CREATED
        - LAUNCH_PROFILE_UPDATED
        - LAUNCH_PROFILE_DELETED
        - LAUNCH_PROFILE_CREATE_IN_PROGRESS
        - LAUNCH_PROFILE_UPDATE_IN_PROGRESS
        - LAUNCH_PROFILE_DELETE_IN_PROGRESS
        - INTERNAL_ERROR
        - STREAMING_IMAGE_NOT_FOUND
        - STREAMING_IMAGE_NOT_READY
        - LAUNCH_PROFILE_WITH_STREAM_SESSIONS_NOT_DELETED
        - ENCRYPTION_KEY_ACCESS_DENIED
        - ENCRYPTION_KEY_NOT_FOUND
        - INVALID_SUBNETS_PROVIDED
      description: ''
    StreamConfiguration:
      type: object
      properties:
        clipboardMode:
          $ref: '#/components/schemas/StreamingClipboardMode'
          description: Enable or disable the use of the system clipboard to copy and paste between the streaming session and streaming client.
        ec2InstanceTypes:
          $ref: '#/components/schemas/StreamingInstanceTypeList'
          description: The EC2 instance types that users can select from when launching a streaming session with this launch profile.
        maxSessionLengthInMinutes:
          $ref: '#/components/schemas/StreamConfigurationMaxSessionLengthInMinutes'
          description: 'The length of time, in minutes, that a streaming session can run. After this point, Nimble Studio automatically terminates the session.'
        streamingImageIds:
          $ref: '#/components/schemas/StreamingImageIdList'
          description: The streaming images that users can select from when launching a streaming session with this launch profile.
      description: A configuration for a streaming session.
    LaunchProfileInitializationActiveDirectory:
      type: object
      properties:
        computerAttributes:
          $ref: '#/components/schemas/ActiveDirectoryComputerAttributeList'
          description: A collection of custom attributes for an Active Directory computer.
        directoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The directory ID of the Directory Service for Microsoft Active Directory to access using this launch profile.
        directoryName:
          $ref: '#/components/schemas/__string'
          description: The directory name.
        dnsIpAddresses:
          $ref: '#/components/schemas/ActiveDirectoryDnsIpAddressList'
          description: The DNS IP address.
        organizationalUnitDistinguishedName:
          $ref: '#/components/schemas/ActiveDirectoryOrganizationalUnitDistinguishedName'
          description: The name for the organizational unit distinguished name.
        studioComponentId:
          $ref: '#/components/schemas/StudioComponentId'
          description: The unique identifier for a studio component resource.
        studioComponentName:
          $ref: '#/components/schemas/StudioComponentName'
          description: The name for the studio component.
      description: ''
    LaunchProfileSecurityGroupIdList:
      type: array
      items:
        $ref: '#/components/schemas/SecurityGroupId'
      minItems: 1
      description: ''
    LaunchPurpose:
      type: string
      pattern: '^[A-Z0-9_]+$'
      description: The launch purpose.
      maxLength: 64
    LaunchProfilePlatform:
      type: string
      enum:
        - LINUX
        - WINDOWS
      description: ''
    LaunchProfileInitializationScriptList:
      type: array
      items:
        $ref: '#/components/schemas/LaunchProfileInitializationScript'
      description: ''
    StudioComponentId:
      type: string
      pattern: '^[a-zA-Z0-9-_]*$'
      maxLength: 22
    StudioComponentInitializationScriptContent:
      type: string
      minLength: 1
      maxLength: 5120
      description: ''
    LaunchProfileInitializationScript:
      type: object
      properties:
        script:
          $ref: '#/components/schemas/StudioComponentInitializationScriptContent'
          description: The initialization script.
        studioComponentId:
          $ref: '#/components/schemas/StudioComponentId'
          description: The unique identifier for a studio component resource.
        studioComponentName:
          $ref: '#/components/schemas/StudioComponentName'
          description: The name for the studio component.
      description: ''
    LaunchProfileList:
      type: array
      items:
        $ref: '#/components/schemas/LaunchProfile'
      description: ''
    LaunchProfilePersona:
      type: string
      enum:
        - USER
      description: ''
    LaunchProfileMembershipList:
      type: array
      description: ''
      items:
        $ref: '#/components/schemas/LaunchProfileMembership'
      maxItems: 20
    LinuxMountPoint:
      type: string
      pattern: '^(/?|(\$HOME)?(/[^/\n\s\\]+)*)$'
      maxLength: 128
      description: ''
    ListEulaAcceptancesRequest:
      type: object
      title: ListEulaAcceptancesRequest
      properties: {}
    ListEulasRequest:
      type: object
      title: ListEulasRequest
      properties: {}
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    ListLaunchProfileMembersRequest:
      type: object
      title: ListLaunchProfileMembersRequest
      properties: {}
    ListLaunchProfilesRequest:
      type: object
      title: ListLaunchProfilesRequest
      properties: {}
    ListStreamingImagesRequest:
      type: object
      title: ListStreamingImagesRequest
      properties: {}
    ListStreamingSessionsRequest:
      type: object
      title: ListStreamingSessionsRequest
      properties: {}
    StreamingSessionList:
      type: array
      items:
        $ref: '#/components/schemas/StreamingSession'
      description: ''
    ListStudioComponentsRequest:
      type: object
      title: ListStudioComponentsRequest
      properties: {}
    StudioComponentList:
      type: array
      items:
        $ref: '#/components/schemas/StudioComponent'
      maxItems: 50
      description: ''
    ListStudioMembersRequest:
      type: object
      title: ListStudioMembersRequest
      properties: {}
    StudioMembershipList:
      type: array
      items:
        $ref: '#/components/schemas/StudioMembership'
      maxItems: 20
      description: ''
    ListStudiosRequest:
      type: object
      title: ListStudiosRequest
      properties: {}
    StudioList:
      type: array
      items:
        $ref: '#/components/schemas/Studio'
      description: ''
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
    NewLaunchProfileMemberList:
      type: array
      items:
        $ref: '#/components/schemas/NewLaunchProfileMember'
      minItems: 1
      maxItems: 20
      description: ''
    StudioPersona:
      type: string
      enum:
        - ADMINISTRATOR
      description: ''
    NewStudioMemberList:
      type: array
      items:
        $ref: '#/components/schemas/NewStudioMember'
      minItems: 1
      maxItems: 20
      description: ''
    PutLaunchProfileMembersRequest:
      type: object
      required:
        - members
        - identityStoreId
      title: PutLaunchProfileMembersRequest
      properties:
        identityStoreId:
          $ref: '#/components/schemas/__string'
          description: The ID of the identity store.
        members:
          $ref: '#/components/schemas/NewLaunchProfileMemberList'
          description: A list of members.
      description: Information about a launch profile membership.
    PutStudioMembersRequest:
      type: object
      required:
        - members
        - identityStoreId
      title: PutStudioMembersRequest
      properties:
        identityStoreId:
          $ref: '#/components/schemas/__string'
          description: The ID of the identity store.
        members:
          $ref: '#/components/schemas/NewStudioMemberList'
          description: A list of members.
      description: A launch profile membership collection.
    Region:
      type: string
      pattern: '[a-z]{2}-?(iso|gov)?-{1}[a-z]*-{1}[0-9]'
      maxLength: 50
      description: ''
    ScriptParameterKey:
      type: string
      pattern: '^[a-zA-Z_][a-zA-Z0-9_]+$'
      description: A script parameter key.
      minLength: 1
      maxLength: 64
    ScriptParameterValue:
      type: string
      description: A script parameter value.
      minLength: 1
      maxLength: 256
    WindowsMountDrive:
      type: string
      pattern: '^[A-Z]$'
      description: ''
    StartStudioSSOConfigurationRepairRequest:
      type: object
      title: StartStudioSSOConfigurationRepairRequest
      properties: {}
    StreamingImageEncryptionConfiguration:
      type: object
      required:
        - keyType
      properties:
        keyArn:
          $ref: '#/components/schemas/StreamingImageEncryptionConfigurationKeyArn'
          description: The ARN for a KMS key that is used to encrypt studio data.
        keyType:
          $ref: '#/components/schemas/StreamingImageEncryptionConfigurationKeyType'
          description: The type of KMS key that is used to encrypt studio data.
      description: ''
    StreamingImageOwner:
      type: string
      description: '<p>StreamingImageOwner is the owner of a particular streaming image.</p> <p>This string is either the studioId that contains the streaming image, or the word ''AMAZON'' for images provided by Nimble Studio.</p>'
    StreamingImagePlatform:
      type: string
      pattern: '^[a-zA-Z]*$'
      description: 'The platform of this Streaming Image, either WINDOWS or LINUX.'
    StreamingImageState:
      type: string
      enum:
        - CREATE_IN_PROGRESS
        - READY
        - DELETE_IN_PROGRESS
        - DELETED
        - UPDATE_IN_PROGRESS
        - UPDATE_FAILED
        - CREATE_FAILED
        - DELETE_FAILED
      description: ''
    StreamingImageStatusCode:
      type: string
      enum:
        - STREAMING_IMAGE_CREATE_IN_PROGRESS
        - STREAMING_IMAGE_READY
        - STREAMING_IMAGE_DELETE_IN_PROGRESS
        - STREAMING_IMAGE_DELETED
        - STREAMING_IMAGE_UPDATE_IN_PROGRESS
        - INTERNAL_ERROR
      description: The status code.
    StreamingImageEncryptionConfigurationKeyArn:
      type: string
      pattern: '^arn:.*'
      minLength: 4
      description: ''
    StreamingImageEncryptionConfigurationKeyType:
      type: string
      enum:
        - CUSTOMER_MANAGED_KEY
      description: ''
    StreamingSessionId:
      type: string
    StreamingSessionState:
      type: string
      enum:
        - CREATE_IN_PROGRESS
        - DELETE_IN_PROGRESS
        - READY
        - DELETED
        - CREATE_FAILED
        - DELETE_FAILED
      description: The streaming session state.
    StreamingSessionStatusCode:
      type: string
      enum:
        - STREAMING_SESSION_READY
        - STREAMING_SESSION_DELETED
        - STREAMING_SESSION_CREATE_IN_PROGRESS
        - STREAMING_SESSION_DELETE_IN_PROGRESS
        - INTERNAL_ERROR
        - INSUFFICIENT_CAPACITY
        - ACTIVE_DIRECTORY_DOMAIN_JOIN_ERROR
        - NETWORK_CONNECTION_ERROR
        - INITIALIZATION_SCRIPT_ERROR
        - DECRYPT_STREAMING_IMAGE_ERROR
        - NETWORK_INTERFACE_ERROR
      description: ''
    StreamingSessionStreamState:
      type: string
      enum:
        - READY
        - CREATE_IN_PROGRESS
        - DELETE_IN_PROGRESS
        - DELETED
        - CREATE_FAILED
        - DELETE_FAILED
      description: ''
    StreamingSessionStreamStatusCode:
      type: string
      enum:
        - STREAM_CREATE_IN_PROGRESS
        - STREAM_READY
        - STREAM_DELETE_IN_PROGRESS
        - STREAM_DELETED
        - INTERNAL_ERROR
        - NETWORK_CONNECTION_ERROR
    StudioState:
      type: string
      enum:
        - CREATE_IN_PROGRESS
        - READY
        - UPDATE_IN_PROGRESS
        - DELETE_IN_PROGRESS
        - DELETED
        - DELETE_FAILED
        - CREATE_FAILED
        - UPDATE_FAILED
      description: ''
    StudioStatusCode:
      type: string
      enum:
        - STUDIO_CREATED
        - STUDIO_DELETED
        - STUDIO_UPDATED
        - STUDIO_CREATE_IN_PROGRESS
        - STUDIO_UPDATE_IN_PROGRESS
        - STUDIO_DELETE_IN_PROGRESS
        - STUDIO_WITH_LAUNCH_PROFILES_NOT_DELETED
        - STUDIO_WITH_STUDIO_COMPONENTS_NOT_DELETED
        - STUDIO_WITH_STREAMING_IMAGES_NOT_DELETED
        - AWS_SSO_NOT_ENABLED
        - AWS_SSO_ACCESS_DENIED
        - ROLE_NOT_OWNED_BY_STUDIO_OWNER
        - ROLE_COULD_NOT_BE_ASSUMED
        - INTERNAL_ERROR
        - ENCRYPTION_KEY_NOT_FOUND
        - ENCRYPTION_KEY_ACCESS_DENIED
        - AWS_SSO_CONFIGURATION_REPAIRED
        - AWS_SSO_CONFIGURATION_REPAIR_IN_PROGRESS
      description: The status code.
    StudioComponentState:
      type: string
      enum:
        - CREATE_IN_PROGRESS
        - READY
        - UPDATE_IN_PROGRESS
        - DELETE_IN_PROGRESS
        - DELETED
        - DELETE_FAILED
        - CREATE_FAILED
        - UPDATE_FAILED
      description: '<p>The current state of the studio component resource.</p> <p>While a studio component is being created, modified, or deleted, its state will equal "CREATE_IN_PROGRESS", "UPDATE_IN_PROGRESS", or "DELETE_IN_PROGRESS"</p> <p>These are called ''transition states''.</p> <p>No modifications may be made to the studio component while it is in a transition state.</p> <p>If creation of the resource fails, the state will change to `CREATE_FAILED`. The resource StatusCode and StatusMessage will provide more information of why creation failed. The resource in this state will automatically be deleted from your account after a period of time.</p> <p>If updating the resource fails, the state will change to `UPDATE_FAILED`. The resource StatusCode and StatusMessage will provide more information of why the update failed. The resource will be returned to the state it was in when the update request was invoked.</p> <p>If deleting the resource fails, the state will change to `DELETE_FAILED`. The resource StatusCode and StatusMessage will provide more information of why the update failed. The resource will be returned to the state it was in when the update request was invoked. After the resource is deleted successfully, it will change to the "DELETED" state. The resource will no longer count against service quotas and cannot be used or acted upon any futher. It will be removed from your account after a period of time.</p>'
    StudioComponentStatusCode:
      type: string
      enum:
        - ACTIVE_DIRECTORY_ALREADY_EXISTS
        - STUDIO_COMPONENT_CREATED
        - STUDIO_COMPONENT_UPDATED
        - STUDIO_COMPONENT_DELETED
        - ENCRYPTION_KEY_ACCESS_DENIED
        - ENCRYPTION_KEY_NOT_FOUND
        - STUDIO_COMPONENT_CREATE_IN_PROGRESS
        - STUDIO_COMPONENT_UPDATE_IN_PROGRESS
        - STUDIO_COMPONENT_DELETE_IN_PROGRESS
        - INTERNAL_ERROR
      description: '<p>The current status of the studio component resource.</p> <p>When the resource is in the ''READY'' state, the status code signals what the last mutation made to the resource was.</p> <p>When the resource is in a CREATE_FAILED/UPDATE_FAILED/DELETE_FAILED state, the status code signals what went wrong and why the mutation failed.</p>'
    StudioComponentInitializationScriptRunContext:
      type: string
      enum:
        - SYSTEM_INITIALIZATION
        - USER_INITIALIZATION
      description: ''
    StudioComponentSummary:
      type: object
      properties:
        createdAt:
          $ref: '#/components/schemas/Timestamp'
          description: The Unix epoch timestamp in seconds for when the resource was created.
        createdBy:
          $ref: '#/components/schemas/__string'
          description: The user ID of the user that created the studio component.
        description:
          $ref: '#/components/schemas/StudioComponentDescription'
          description: The description.
        name:
          $ref: '#/components/schemas/StudioComponentName'
          description: The name for the studio component.
        studioComponentId:
          $ref: '#/components/schemas/StudioComponentId'
          description: The unique identifier for a studio component resource.
        subtype:
          $ref: '#/components/schemas/StudioComponentSubtype'
          description: The specific subtype of a studio component.
        type:
          $ref: '#/components/schemas/StudioComponentType'
          description: The type of the studio component.
        updatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The Unix epoch timestamp in seconds for when the resource was updated.
        updatedBy:
          $ref: '#/components/schemas/__string'
          description: The user ID of the user that most recently updated the resource.
      description: ''
    TagResourceRequest:
      type: object
      title: TagResourceRequest
      properties:
        tags:
          $ref: '#/components/schemas/Tags'
          description: 'A collection of labels, in the form of key:value pairs, that apply to this resource.'
      description: The ARN for the role that manages access.
    UntagResourceRequest:
      type: object
      title: UntagResourceRequest
      properties: {}
    UpdateLaunchProfileMemberRequest:
      type: object
      required:
        - persona
      title: UpdateLaunchProfileMemberRequest
      properties:
        persona:
          $ref: '#/components/schemas/LaunchProfilePersona'
          description: The persona.
      description: The principal ID.
    UpdateLaunchProfileRequest:
      type: object
      title: UpdateLaunchProfileRequest
      properties:
        description:
          $ref: '#/components/schemas/LaunchProfileDescription'
          description: The description.
        launchProfileProtocolVersions:
          $ref: '#/components/schemas/LaunchProfileProtocolVersionList'
          description: The version number of the protocol that is used by the launch profile. The only valid version is "2021-03-31".
        name:
          $ref: '#/components/schemas/LaunchProfileName'
          description: The name for the launch profile.
        streamConfiguration:
          $ref: '#/components/schemas/StreamConfigurationCreate'
          description: A configuration for a streaming session.
        studioComponentIds:
          $ref: '#/components/schemas/LaunchProfileStudioComponentIdList'
          description: Unique identifiers for a collection of studio components that can be used with this launch profile.
      description: The launch profile ID.
    UpdateStreamingImageRequest:
      type: object
      title: UpdateStreamingImageRequest
      properties:
        description:
          $ref: '#/components/schemas/StreamingImageDescription'
          description: The description.
        name:
          $ref: '#/components/schemas/StreamingImageName'
          description: The name for the streaming image.
      description: The streaming image ID.
    UpdateStudioComponentRequest:
      type: object
      title: UpdateStudioComponentRequest
      properties:
        configuration:
          $ref: '#/components/schemas/StudioComponentConfiguration'
          description: 'The configuration of the studio component, based on component type.'
        description:
          $ref: '#/components/schemas/StudioComponentDescription'
          description: The description.
        ec2SecurityGroupIds:
          $ref: '#/components/schemas/StudioComponentSecurityGroupIdList'
          description: The EC2 security groups that control access to the studio component.
        initializationScripts:
          $ref: '#/components/schemas/StudioComponentInitializationScriptList'
          description: Initialization scripts for studio components.
        name:
          $ref: '#/components/schemas/StudioComponentName'
          description: The name for the studio component.
        scriptParameters:
          $ref: '#/components/schemas/StudioComponentScriptParameterKeyValueList'
          description: Parameters for the studio component scripts.
        subtype:
          $ref: '#/components/schemas/StudioComponentSubtype'
          description: The specific subtype of a studio component.
        type:
          $ref: '#/components/schemas/StudioComponentType'
          description: The type of the studio component.
      description: The studio component ID.
    UpdateStudioRequest:
      type: object
      title: UpdateStudioRequest
      properties:
        adminRoleArn:
          $ref: '#/components/schemas/__string'
          description: The IAM role that Studio Admins will assume when logging in to the Nimble Studio portal.
        displayName:
          $ref: '#/components/schemas/StudioDisplayName'
          description: A friendly name for the studio.
        userRoleArn:
          $ref: '#/components/schemas/__string'
          description: The IAM role that Studio Users will assume when logging in to the Nimble Studio portal.
      description: The studio ID.
security:
  - hmac: []
