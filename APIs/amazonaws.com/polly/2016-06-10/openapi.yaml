openapi: 3.0.0
info:
  version: '2016-06-10'
  x-release: v4
  title: Amazon Polly
  description: '<p>Amazon Polly is a web service that makes it easy to synthesize speech from text.</p> <p>The Amazon Polly service provides API operations for synthesizing high-quality speech from plain text and Speech Synthesis Markup Language (SSML), along with managing pronunciations lexicons that enable you to get the best results for your application domain.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: polly
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/polly-2016-06-10.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/polly/'
servers:
  - url: 'http://polly.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon Polly multi-region endpoint
  - url: 'https://polly.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon Polly multi-region endpoint
  - url: 'http://polly.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Polly endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://polly.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Polly endpoint for China (Beijing) and China (Ningxia)
paths:
  '/v1/lexicons/{LexiconName}':
    delete:
      operationId: DeleteLexicon
      description: '<p>Deletes the specified pronunciation lexicon stored in an AWS Region. A lexicon which has been deleted is not available for speech synthesis, nor is it possible to retrieve it using either the <code>GetLexicon</code> or <code>ListLexicon</code> APIs.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/polly/latest/dg/managing-lexicons.html">Managing Lexicons</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteLexiconOutput'
        '480':
          description: LexiconNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LexiconNotFoundException'
        '481':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: LexiconName
          in: path
          required: true
          description: The name of the lexicon to delete. Must be an existing lexicon in the region.
          schema:
            type: string
            pattern: '[0-9A-Za-z]{1,20}'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetLexicon
      description: 'Returns the content of the specified pronunciation lexicon stored in an AWS Region. For more information, see <a href="https://docs.aws.amazon.com/polly/latest/dg/managing-lexicons.html">Managing Lexicons</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLexiconOutput'
        '480':
          description: LexiconNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LexiconNotFoundException'
        '481':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: LexiconName
          in: path
          required: true
          description: Name of the lexicon.
          schema:
            type: string
            pattern: '[0-9A-Za-z]{1,20}'
    put:
      operationId: PutLexicon
      description: '<p>Stores a pronunciation lexicon in an AWS Region. If a lexicon with the same name already exists in the region, it is overwritten by the new lexicon. Lexicon operations have eventual consistency, therefore, it might take some time before the lexicon is available to the SynthesizeSpeech operation.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/polly/latest/dg/managing-lexicons.html">Managing Lexicons</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutLexiconOutput'
        '480':
          description: InvalidLexiconException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLexiconException'
        '481':
          description: UnsupportedPlsAlphabetException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedPlsAlphabetException'
        '482':
          description: UnsupportedPlsLanguageException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedPlsLanguageException'
        '483':
          description: LexiconSizeExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LexiconSizeExceededException'
        '484':
          description: MaxLexemeLengthExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaxLexemeLengthExceededException'
        '485':
          description: MaxLexiconsNumberExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaxLexiconsNumberExceededException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: LexiconName
          in: path
          required: true
          description: 'Name of the lexicon. The name must follow the regular express format [0-9A-Za-z]{1,20}. That is, the name is a case-sensitive alphanumeric string up to 20 characters long. '
          schema:
            type: string
            pattern: '[0-9A-Za-z]{1,20}'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Content
              properties:
                Content:
                  description: Content of the PLS lexicon as string data.
                  type: string
                  format: password
  /v1/voices:
    get:
      operationId: DescribeVoices
      description: '<p>Returns the list of voices that are available for use when requesting speech synthesis. Each voice speaks a specified language, is either male or female, and is identified by an ID, which is the ASCII version of the voice name. </p> <p>When synthesizing speech ( <code>SynthesizeSpeech</code> ), you provide the voice ID for the voice you want from the list of voices returned by <code>DescribeVoices</code>.</p> <p>For example, you want your news reader application to read news in a specific language, but giving a user the option to choose the voice. Using the <code>DescribeVoices</code> operation you can provide the user with a list of available voices to select from.</p> <p> You can optionally specify a language code to filter the available voices. For example, if you specify <code>en-US</code>, the operation returns a list of all available US English voices. </p> <p>This operation requires permissions to perform the <code>polly:DescribeVoices</code> action.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeVoicesOutput'
        '480':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '481':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: Engine
          in: query
          required: false
          description: 'Specifies the engine (<code>standard</code> or <code>neural</code>) used by Amazon Polly when processing input text for speech synthesis. '
          schema:
            type: string
            enum:
              - standard
              - neural
        - name: LanguageCode
          in: query
          required: false
          description: ' The language identification tag (ISO 639 code for the language name-ISO 3166 country code) for filtering the list of voices returned. If you don''t specify this optional parameter, all available voices are returned. '
          schema:
            type: string
            enum:
              - arb
              - cmn-CN
              - cy-GB
              - da-DK
              - de-DE
              - en-AU
              - en-GB
              - en-GB-WLS
              - en-IN
              - en-US
              - es-ES
              - es-MX
              - es-US
              - fr-CA
              - fr-FR
              - is-IS
              - it-IT
              - ja-JP
              - hi-IN
              - ko-KR
              - nb-NO
              - nl-NL
              - pl-PL
              - pt-BR
              - pt-PT
              - ro-RO
              - ru-RU
              - sv-SE
              - tr-TR
        - name: IncludeAdditionalLanguageCodes
          in: query
          required: false
          description: 'Boolean value indicating whether to return any bilingual voices that use the specified language as an additional language. For instance, if you request all languages that use US English (es-US), and there is an Italian voice that speaks both Italian (it-IT) and US English, that voice will be included if you specify <code>yes</code> but not if you specify <code>no</code>.'
          schema:
            type: boolean
        - name: NextToken
          in: query
          required: false
          description: 'An opaque pagination token returned from the previous <code>DescribeVoices</code> operation. If present, this indicates where to continue the listing.'
          schema:
            type: string
            minLength: 0
            maxLength: 4096
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/v1/synthesisTasks/{TaskId}':
    get:
      operationId: GetSpeechSynthesisTask
      description: 'Retrieves a specific SpeechSynthesisTask object based on its TaskID. This object contains information about the given speech synthesis task, including the status of the task, and a link to the S3 bucket containing the output of the task.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSpeechSynthesisTaskOutput'
        '480':
          description: InvalidTaskIdException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTaskIdException'
        '481':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '482':
          description: SynthesisTaskNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SynthesisTaskNotFoundException'
      parameters:
        - name: TaskId
          in: path
          required: true
          description: The Amazon Polly generated identifier for a speech synthesis task.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9_-]{1,100}$'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v1/lexicons:
    get:
      operationId: ListLexicons
      description: 'Returns a list of pronunciation lexicons stored in an AWS Region. For more information, see <a href="https://docs.aws.amazon.com/polly/latest/dg/managing-lexicons.html">Managing Lexicons</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLexiconsOutput'
        '480':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '481':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: NextToken
          in: query
          required: false
          description: 'An opaque pagination token returned from previous <code>ListLexicons</code> operation. If present, indicates where to continue the list of lexicons.'
          schema:
            type: string
            minLength: 0
            maxLength: 4096
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v1/synthesisTasks:
    get:
      operationId: ListSpeechSynthesisTasks
      description: 'Returns a list of SpeechSynthesisTask objects ordered by their creation date. This operation can filter the tasks by their status, for example, allowing users to list only tasks that are completed.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSpeechSynthesisTasksOutput'
        '480':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '481':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: MaxResults
          in: query
          required: false
          description: Maximum number of speech synthesis tasks returned in a List operation.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: NextToken
          in: query
          required: false
          description: 'The pagination token to use in the next request to continue the listing of speech synthesis tasks. '
          schema:
            type: string
            minLength: 0
            maxLength: 4096
        - name: Status
          in: query
          required: false
          description: Status of the speech synthesis tasks returned in a List operation
          schema:
            type: string
            enum:
              - scheduled
              - inProgress
              - completed
              - failed
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: StartSpeechSynthesisTask
      description: 'Allows the creation of an asynchronous synthesis task, by starting a new <code>SpeechSynthesisTask</code>. This operation requires all the standard information needed for speech synthesis, plus the name of an Amazon S3 bucket for the service to store the output of the synthesis task and two optional parameters (OutputS3KeyPrefix and SnsTopicArn). Once the synthesis task is created, this operation will return a SpeechSynthesisTask object, which will include an identifier of this task as well as the current status.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartSpeechSynthesisTaskOutput'
        '480':
          description: TextLengthExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextLengthExceededException'
        '481':
          description: InvalidS3BucketException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidS3BucketException'
        '482':
          description: InvalidS3KeyException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidS3KeyException'
        '483':
          description: InvalidSampleRateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSampleRateException'
        '484':
          description: InvalidSnsTopicArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSnsTopicArnException'
        '485':
          description: InvalidSsmlException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSsmlException'
        '486':
          description: EngineNotSupportedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EngineNotSupportedException'
        '487':
          description: LexiconNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LexiconNotFoundException'
        '488':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '489':
          description: MarksNotSupportedForFormatException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarksNotSupportedForFormatException'
        '490':
          description: SsmlMarksNotSupportedForTextTypeException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SsmlMarksNotSupportedForTextTypeException'
        '491':
          description: LanguageNotSupportedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LanguageNotSupportedException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - OutputFormat
                - OutputS3BucketName
                - Text
                - VoiceId
              properties:
                Engine:
                  description: Specifies the engine (<code>standard</code> or <code>neural</code>) for Amazon Polly to use when processing input text for speech synthesis. Using a voice that is not supported for the engine selected will result in an error.
                  type: string
                  enum:
                    - standard
                    - neural
                LanguageCode:
                  description: '<p>Optional language code for the Speech Synthesis request. This is only necessary if using a bilingual voice, such as Aditi, which can be used for either Indian English (en-IN) or Hindi (hi-IN). </p> <p>If a bilingual voice is used and no language code is specified, Amazon Polly will use the default language of the bilingual voice. The default language for any voice is the one returned by the <a href="https://docs.aws.amazon.com/polly/latest/dg/API_DescribeVoices.html">DescribeVoices</a> operation for the <code>LanguageCode</code> parameter. For example, if no language code is specified, Aditi will use Indian English rather than Hindi.</p>'
                  type: string
                  enum:
                    - arb
                    - cmn-CN
                    - cy-GB
                    - da-DK
                    - de-DE
                    - en-AU
                    - en-GB
                    - en-GB-WLS
                    - en-IN
                    - en-US
                    - es-ES
                    - es-MX
                    - es-US
                    - fr-CA
                    - fr-FR
                    - is-IS
                    - it-IT
                    - ja-JP
                    - hi-IN
                    - ko-KR
                    - nb-NO
                    - nl-NL
                    - pl-PL
                    - pt-BR
                    - pt-PT
                    - ro-RO
                    - ru-RU
                    - sv-SE
                    - tr-TR
                LexiconNames:
                  description: 'List of one or more pronunciation lexicon names you want the service to apply during synthesis. Lexicons are applied only if the language of the lexicon is the same as the language of the voice. '
                  type: array
                  items:
                    $ref: '#/components/schemas/LexiconName'
                  maxItems: 5
                OutputFormat:
                  description: 'The format in which the returned output will be encoded. For audio stream, this will be mp3, ogg_vorbis, or pcm. For speech marks, this will be json. '
                  type: string
                  enum:
                    - json
                    - mp3
                    - ogg_vorbis
                    - pcm
                OutputS3BucketName:
                  description: Amazon S3 bucket name to which the output file will be saved.
                  type: string
                  pattern: '^[a-z0-9][\.\-a-z0-9]{1,61}[a-z0-9]$'
                OutputS3KeyPrefix:
                  description: The Amazon S3 key prefix for the output speech file.
                  type: string
                  pattern: '^[0-9a-zA-Z\/\!\-_\.\*\''\(\):;\$@=+\,\?&]{0,800}$'
                SampleRate:
                  description: '<p>The audio frequency specified in Hz.</p> <p>The valid values for mp3 and ogg_vorbis are "8000", "16000", "22050", and "24000". The default value for standard voices is "22050". The default value for neural voices is "24000".</p> <p>Valid values for pcm are "8000" and "16000" The default value is "16000". </p>'
                  type: string
                SnsTopicArn:
                  description: ARN for the SNS topic optionally used for providing status notification for a speech synthesis task.
                  type: string
                  pattern: '^arn:aws(-(cn|iso(-b)?|us-gov))?:sns:[a-z0-9_-]{1,50}:\d{12}:[a-zA-Z0-9_-]{1,256}$'
                SpeechMarkTypes:
                  description: The type of speech marks returned for the input text.
                  type: array
                  items:
                    $ref: '#/components/schemas/SpeechMarkType'
                  maxItems: 4
                Text:
                  description: 'The input text to synthesize. If you specify ssml as the TextType, follow the SSML format for the input text. '
                  type: string
                TextType:
                  description: 'Specifies whether the input text is plain text or SSML. The default value is plain text. '
                  type: string
                  enum:
                    - ssml
                    - text
                VoiceId:
                  description: 'Voice ID to use for the synthesis. '
                  type: string
                  enum:
                    - Aditi
                    - Amy
                    - Astrid
                    - Bianca
                    - Brian
                    - Camila
                    - Carla
                    - Carmen
                    - Celine
                    - Chantal
                    - Conchita
                    - Cristiano
                    - Dora
                    - Emma
                    - Enrique
                    - Ewa
                    - Filiz
                    - Gabrielle
                    - Geraint
                    - Giorgio
                    - Gwyneth
                    - Hans
                    - Ines
                    - Ivy
                    - Jacek
                    - Jan
                    - Joanna
                    - Joey
                    - Justin
                    - Karl
                    - Kendra
                    - Kevin
                    - Kimberly
                    - Lea
                    - Liv
                    - Lotte
                    - Lucia
                    - Lupe
                    - Mads
                    - Maja
                    - Marlene
                    - Mathieu
                    - Matthew
                    - Maxim
                    - Mia
                    - Miguel
                    - Mizuki
                    - Naja
                    - Nicole
                    - Olivia
                    - Penelope
                    - Raveena
                    - Ricardo
                    - Ruben
                    - Russell
                    - Salli
                    - Seoyeon
                    - Takumi
                    - Tatyana
                    - Vicki
                    - Vitoria
                    - Zeina
                    - Zhiyu
  /v1/speech:
    post:
      operationId: SynthesizeSpeech
      description: 'Synthesizes UTF-8 input, plain text or SSML, to a stream of bytes. SSML input must be valid, well-formed SSML. Some alphabets might not be available with all the voices (for example, Cyrillic might not be read at all by English voices) unless phoneme mapping is used. For more information, see <a href="https://docs.aws.amazon.com/polly/latest/dg/how-text-to-speech-works.html">How it Works</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SynthesizeSpeechOutput'
        '480':
          description: TextLengthExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextLengthExceededException'
        '481':
          description: InvalidSampleRateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSampleRateException'
        '482':
          description: InvalidSsmlException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSsmlException'
        '483':
          description: LexiconNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LexiconNotFoundException'
        '484':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '485':
          description: MarksNotSupportedForFormatException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarksNotSupportedForFormatException'
        '486':
          description: SsmlMarksNotSupportedForTextTypeException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SsmlMarksNotSupportedForTextTypeException'
        '487':
          description: LanguageNotSupportedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LanguageNotSupportedException'
        '488':
          description: EngineNotSupportedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EngineNotSupportedException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - OutputFormat
                - Text
                - VoiceId
              properties:
                Engine:
                  description: '<p>Specifies the engine (<code>standard</code> or <code>neural</code>) for Amazon Polly to use when processing input text for speech synthesis. For information on Amazon Polly voices and which voices are available in standard-only, NTTS-only, and both standard and NTTS formats, see <a href="https://docs.aws.amazon.com/polly/latest/dg/voicelist.html">Available Voices</a>.</p> <p> <b>NTTS-only voices</b> </p> <p>When using NTTS-only voices such as Kevin (en-US), this parameter is required and must be set to <code>neural</code>. If the engine is not specified, or is set to <code>standard</code>, this will result in an error. </p> <p>Type: String</p> <p>Valid Values: <code>standard</code> | <code>neural</code> </p> <p>Required: Yes</p> <p> <b>Standard voices</b> </p> <p>For standard voices, this is not required; the engine parameter defaults to <code>standard</code>. If the engine is not specified, or is set to <code>standard</code> and an NTTS-only voice is selected, this will result in an error. </p>'
                  type: string
                  enum:
                    - standard
                    - neural
                LanguageCode:
                  description: '<p>Optional language code for the Synthesize Speech request. This is only necessary if using a bilingual voice, such as Aditi, which can be used for either Indian English (en-IN) or Hindi (hi-IN). </p> <p>If a bilingual voice is used and no language code is specified, Amazon Polly will use the default language of the bilingual voice. The default language for any voice is the one returned by the <a href="https://docs.aws.amazon.com/polly/latest/dg/API_DescribeVoices.html">DescribeVoices</a> operation for the <code>LanguageCode</code> parameter. For example, if no language code is specified, Aditi will use Indian English rather than Hindi.</p>'
                  type: string
                  enum:
                    - arb
                    - cmn-CN
                    - cy-GB
                    - da-DK
                    - de-DE
                    - en-AU
                    - en-GB
                    - en-GB-WLS
                    - en-IN
                    - en-US
                    - es-ES
                    - es-MX
                    - es-US
                    - fr-CA
                    - fr-FR
                    - is-IS
                    - it-IT
                    - ja-JP
                    - hi-IN
                    - ko-KR
                    - nb-NO
                    - nl-NL
                    - pl-PL
                    - pt-BR
                    - pt-PT
                    - ro-RO
                    - ru-RU
                    - sv-SE
                    - tr-TR
                LexiconNames:
                  description: 'List of one or more pronunciation lexicon names you want the service to apply during synthesis. Lexicons are applied only if the language of the lexicon is the same as the language of the voice. For information about storing lexicons, see <a href="https://docs.aws.amazon.com/polly/latest/dg/API_PutLexicon.html">PutLexicon</a>.'
                  type: array
                  items:
                    $ref: '#/components/schemas/LexiconName'
                  maxItems: 5
                OutputFormat:
                  description: '<p> The format in which the returned output will be encoded. For audio stream, this will be mp3, ogg_vorbis, or pcm. For speech marks, this will be json. </p> <p>When pcm is used, the content returned is audio/pcm in a signed 16-bit, 1 channel (mono), little-endian format. </p>'
                  type: string
                  enum:
                    - json
                    - mp3
                    - ogg_vorbis
                    - pcm
                SampleRate:
                  description: '<p>The audio frequency specified in Hz.</p> <p>The valid values for mp3 and ogg_vorbis are "8000", "16000", "22050", and "24000". The default value for standard voices is "22050". The default value for neural voices is "24000".</p> <p>Valid values for pcm are "8000" and "16000" The default value is "16000". </p>'
                  type: string
                SpeechMarkTypes:
                  description: The type of speech marks returned for the input text.
                  type: array
                  items:
                    $ref: '#/components/schemas/SpeechMarkType'
                  maxItems: 4
                Text:
                  description: ' Input text to synthesize. If you specify <code>ssml</code> as the <code>TextType</code>, follow the SSML format for the input text. '
                  type: string
                TextType:
                  description: ' Specifies whether the input text is plain text or SSML. The default value is plain text. For more information, see <a href="https://docs.aws.amazon.com/polly/latest/dg/ssml.html">Using SSML</a>.'
                  type: string
                  enum:
                    - ssml
                    - text
                VoiceId:
                  description: ' Voice ID to use for the synthesis. You can get a list of available voice IDs by calling the <a href="https://docs.aws.amazon.com/polly/latest/dg/API_DescribeVoices.html">DescribeVoices</a> operation. '
                  type: string
                  enum:
                    - Aditi
                    - Amy
                    - Astrid
                    - Bianca
                    - Brian
                    - Camila
                    - Carla
                    - Carmen
                    - Celine
                    - Chantal
                    - Conchita
                    - Cristiano
                    - Dora
                    - Emma
                    - Enrique
                    - Ewa
                    - Filiz
                    - Gabrielle
                    - Geraint
                    - Giorgio
                    - Gwyneth
                    - Hans
                    - Ines
                    - Ivy
                    - Jacek
                    - Jan
                    - Joanna
                    - Joey
                    - Justin
                    - Karl
                    - Kendra
                    - Kevin
                    - Kimberly
                    - Lea
                    - Liv
                    - Lotte
                    - Lucia
                    - Lupe
                    - Mads
                    - Maja
                    - Marlene
                    - Mathieu
                    - Matthew
                    - Maxim
                    - Mia
                    - Miguel
                    - Mizuki
                    - Naja
                    - Nicole
                    - Olivia
                    - Penelope
                    - Raveena
                    - Ricardo
                    - Ruben
                    - Russell
                    - Salli
                    - Seoyeon
                    - Takumi
                    - Tatyana
                    - Vicki
                    - Vitoria
                    - Zeina
                    - Zhiyu
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    DeleteLexiconOutput:
      type: object
      example: {}
      properties: {}
    LexiconNotFoundException: {}
    ServiceFailureException: {}
    DescribeVoicesOutput:
      type: object
      example:
        Voices:
          - Gender: Female
            Id: Emma
            LanguageCode: en-GB
            LanguageName: British English
            Name: Emma
          - Gender: Male
            Id: Brian
            LanguageCode: en-GB
            LanguageName: British English
            Name: Brian
          - Gender: Female
            Id: Amy
            LanguageCode: en-GB
            LanguageName: British English
            Name: Amy
      properties:
        Voices:
          $ref: '#/components/schemas/VoiceList'
          description: A list of voices with their properties.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token to use in the next request to continue the listing of voices. <code>NextToken</code> is returned only if the response is truncated.
    InvalidNextTokenException: {}
    GetLexiconOutput:
      type: object
      example:
        Lexicon:
          Content: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<lexicon version=\"1.0\" \r\n      xmlns=\"http://www.w3.org/2005/01/pronunciation-lexicon\"\r\n      xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \r\n      xsi:schemaLocation=\"http://www.w3.org/2005/01/pronunciation-lexicon \r\n        http://www.w3.org/TR/2007/CR-pronunciation-lexicon-20071212/pls.xsd\"\r\n      alphabet=\"ipa\" \r\n      xml:lang=\"en-US\">\r\n  <lexeme>\r\n    <grapheme>W3C</grapheme>\r\n    <alias>World Wide Web Consortium</alias>\r\n  </lexeme>\r\n</lexicon>"
          Name: example
        LexiconAttributes:
          Alphabet: ipa
          LanguageCode: en-US
          LastModified: 1478542980.117
          LexemesCount: 1
          LexiconArn: 'arn:aws:polly:us-east-1:123456789012:lexicon/example'
          Size: 503
      properties:
        Lexicon:
          $ref: '#/components/schemas/Lexicon'
          description: 'Lexicon object that provides name and the string content of the lexicon. '
        LexiconAttributes:
          $ref: '#/components/schemas/LexiconAttributes'
          description: 'Metadata of the lexicon, including phonetic alphabetic used, language code, lexicon ARN, number of lexemes defined in the lexicon, and size of lexicon in bytes.'
    GetSpeechSynthesisTaskOutput:
      type: object
      properties:
        SynthesisTask:
          $ref: '#/components/schemas/SynthesisTask'
          description: 'SynthesisTask object that provides information from the requested task, including output format, creation time, task status, and so on.'
    InvalidTaskIdException: {}
    SynthesisTaskNotFoundException: {}
    ListLexiconsOutput:
      type: object
      example:
        Lexicons:
          - Attributes:
              Alphabet: ipa
              LanguageCode: en-US
              LastModified: 1478542980.117
              LexemesCount: 1
              LexiconArn: 'arn:aws:polly:us-east-1:123456789012:lexicon/example'
              Size: 503
            Name: example
      properties:
        Lexicons:
          $ref: '#/components/schemas/LexiconDescriptionList'
          description: A list of lexicon names and attributes.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The pagination token to use in the next request to continue the listing of lexicons. <code>NextToken</code> is returned only if the response is truncated.
    ListSpeechSynthesisTasksOutput:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'An opaque pagination token returned from the previous List operation in this request. If present, this indicates where to continue the listing.'
        SynthesisTasks:
          $ref: '#/components/schemas/SynthesisTasks'
          description: 'List of SynthesisTask objects that provides information from the specified task in the list request, including output format, creation time, task status, and so on.'
    PutLexiconOutput:
      type: object
      example: {}
      properties: {}
    InvalidLexiconException: {}
    UnsupportedPlsAlphabetException: {}
    UnsupportedPlsLanguageException: {}
    LexiconSizeExceededException: {}
    MaxLexemeLengthExceededException: {}
    MaxLexiconsNumberExceededException: {}
    StartSpeechSynthesisTaskOutput:
      type: object
      properties:
        SynthesisTask:
          $ref: '#/components/schemas/SynthesisTask'
          description: SynthesisTask object that provides information and attributes about a newly submitted speech synthesis task.
    LexiconName:
      type: string
      pattern: '[0-9A-Za-z]{1,20}'
    SpeechMarkType:
      type: string
      enum:
        - sentence
        - ssml
        - viseme
        - word
    TextLengthExceededException: {}
    InvalidS3BucketException: {}
    InvalidS3KeyException: {}
    InvalidSampleRateException: {}
    InvalidSnsTopicArnException: {}
    InvalidSsmlException: {}
    EngineNotSupportedException: {}
    MarksNotSupportedForFormatException: {}
    SsmlMarksNotSupportedForTextTypeException: {}
    LanguageNotSupportedException: {}
    SynthesizeSpeechOutput:
      type: object
      example:
        AudioStream: TEXT
        ContentType: audio/mpeg
        RequestCharacters: 37
      properties:
        AudioStream:
          $ref: '#/components/schemas/AudioStream'
          description: ' Stream containing the synthesized speech. '
    Alphabet:
      type: string
    AudioStream:
      type: string
    ContentType:
      type: string
    DateTime:
      type: string
      format: date-time
    DeleteLexiconInput:
      type: object
      title: DeleteLexiconInput
      properties: {}
    Engine:
      type: string
      enum:
        - standard
        - neural
    LanguageCode:
      type: string
      enum:
        - arb
        - cmn-CN
        - cy-GB
        - da-DK
        - de-DE
        - en-AU
        - en-GB
        - en-GB-WLS
        - en-IN
        - en-US
        - es-ES
        - es-MX
        - es-US
        - fr-CA
        - fr-FR
        - is-IS
        - it-IT
        - ja-JP
        - hi-IN
        - ko-KR
        - nb-NO
        - nl-NL
        - pl-PL
        - pt-BR
        - pt-PT
        - ro-RO
        - ru-RU
        - sv-SE
        - tr-TR
    IncludeAdditionalLanguageCodes:
      type: boolean
    NextToken:
      type: string
      minLength: 0
      maxLength: 4096
    DescribeVoicesInput:
      type: object
      title: DescribeVoicesInput
      properties: {}
    VoiceList:
      type: array
      items:
        $ref: '#/components/schemas/Voice'
    EngineList:
      type: array
      items:
        $ref: '#/components/schemas/Engine'
    Gender:
      type: string
      enum:
        - Female
        - Male
    GetLexiconInput:
      type: object
      title: GetLexiconInput
      properties: {}
    Lexicon:
      type: object
      properties:
        Content:
          $ref: '#/components/schemas/LexiconContent'
          description: Lexicon content in string format. The content of a lexicon must be in PLS format.
        Name:
          $ref: '#/components/schemas/LexiconName'
          description: Name of the lexicon.
      description: 'Provides lexicon name and lexicon content in string format. For more information, see <a href="https://www.w3.org/TR/pronunciation-lexicon/">Pronunciation Lexicon Specification (PLS) Version 1.0</a>.'
    LexiconAttributes:
      type: object
      properties:
        Alphabet:
          $ref: '#/components/schemas/Alphabet'
          description: Phonetic alphabet used in the lexicon. Valid values are <code>ipa</code> and <code>x-sampa</code>.
        LanguageCode:
          $ref: '#/components/schemas/LanguageCode'
          description: 'Language code that the lexicon applies to. A lexicon with a language code such as "en" would be applied to all English languages (en-GB, en-US, en-AUS, en-WLS, and so on.'
        LastModified:
          $ref: '#/components/schemas/LastModified'
          description: Date lexicon was last modified (a timestamp value).
        LexiconArn:
          $ref: '#/components/schemas/LexiconArn'
          description: Amazon Resource Name (ARN) of the lexicon.
        LexemesCount:
          $ref: '#/components/schemas/LexemesCount'
          description: Number of lexemes in the lexicon.
        Size:
          $ref: '#/components/schemas/Size'
          description: 'Total size of the lexicon, in characters.'
      description: 'Contains metadata describing the lexicon such as the number of lexemes, language code, and so on. For more information, see <a href="https://docs.aws.amazon.com/polly/latest/dg/managing-lexicons.html">Managing Lexicons</a>.'
    TaskId:
      type: string
      pattern: '^[a-zA-Z0-9_-]{1,100}$'
    GetSpeechSynthesisTaskInput:
      type: object
      title: GetSpeechSynthesisTaskInput
      properties: {}
    SynthesisTask:
      type: object
      properties:
        Engine:
          $ref: '#/components/schemas/Engine'
          description: Specifies the engine (<code>standard</code> or <code>neural</code>) for Amazon Polly to use when processing input text for speech synthesis. Using a voice that is not supported for the engine selected will result in an error.
        TaskId:
          $ref: '#/components/schemas/TaskId'
          description: The Amazon Polly generated identifier for a speech synthesis task.
        TaskStatus:
          $ref: '#/components/schemas/TaskStatus'
          description: Current status of the individual speech synthesis task.
        TaskStatusReason:
          $ref: '#/components/schemas/TaskStatusReason'
          description: 'Reason for the current status of a specific speech synthesis task, including errors if the task has failed.'
        OutputUri:
          $ref: '#/components/schemas/OutputUri'
          description: Pathway for the output speech file.
        CreationTime:
          $ref: '#/components/schemas/DateTime'
          description: Timestamp for the time the synthesis task was started.
        RequestCharacters:
          $ref: '#/components/schemas/RequestCharacters'
          description: Number of billable characters synthesized.
        SnsTopicArn:
          $ref: '#/components/schemas/SnsTopicArn'
          description: ARN for the SNS topic optionally used for providing status notification for a speech synthesis task.
        LexiconNames:
          $ref: '#/components/schemas/LexiconNameList'
          description: 'List of one or more pronunciation lexicon names you want the service to apply during synthesis. Lexicons are applied only if the language of the lexicon is the same as the language of the voice. '
        OutputFormat:
          $ref: '#/components/schemas/OutputFormat'
          description: 'The format in which the returned output will be encoded. For audio stream, this will be mp3, ogg_vorbis, or pcm. For speech marks, this will be json. '
        SampleRate:
          $ref: '#/components/schemas/SampleRate'
          description: '<p>The audio frequency specified in Hz.</p> <p>The valid values for mp3 and ogg_vorbis are "8000", "16000", "22050", and "24000". The default value for standard voices is "22050". The default value for neural voices is "24000".</p> <p>Valid values for pcm are "8000" and "16000" The default value is "16000". </p>'
        SpeechMarkTypes:
          $ref: '#/components/schemas/SpeechMarkTypeList'
          description: The type of speech marks returned for the input text.
        TextType:
          $ref: '#/components/schemas/TextType'
          description: 'Specifies whether the input text is plain text or SSML. The default value is plain text. '
        VoiceId:
          $ref: '#/components/schemas/VoiceId'
          description: 'Voice ID to use for the synthesis. '
        LanguageCode:
          $ref: '#/components/schemas/LanguageCode'
          description: '<p>Optional language code for a synthesis task. This is only necessary if using a bilingual voice, such as Aditi, which can be used for either Indian English (en-IN) or Hindi (hi-IN). </p> <p>If a bilingual voice is used and no language code is specified, Amazon Polly will use the default language of the bilingual voice. The default language for any voice is the one returned by the <a href="https://docs.aws.amazon.com/polly/latest/dg/API_DescribeVoices.html">DescribeVoices</a> operation for the <code>LanguageCode</code> parameter. For example, if no language code is specified, Aditi will use Indian English rather than Hindi.</p>'
      description: SynthesisTask object that provides information about a speech synthesis task.
    LanguageCodeList:
      type: array
      items:
        $ref: '#/components/schemas/LanguageCode'
    LanguageName:
      type: string
    LastModified:
      type: string
      format: date-time
    LexemesCount:
      type: integer
    LexiconContent:
      type: string
      format: password
    LexiconArn:
      type: string
    Size:
      type: integer
    LexiconDescription:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/LexiconName'
          description: Name of the lexicon.
        Attributes:
          $ref: '#/components/schemas/LexiconAttributes'
          description: Provides lexicon metadata.
      description: Describes the content of the lexicon.
    LexiconDescriptionList:
      type: array
      items:
        $ref: '#/components/schemas/LexiconDescription'
    LexiconNameList:
      type: array
      items:
        $ref: '#/components/schemas/LexiconName'
      maxItems: 5
    ListLexiconsInput:
      type: object
      title: ListLexiconsInput
      properties: {}
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    TaskStatus:
      type: string
      enum:
        - scheduled
        - inProgress
        - completed
        - failed
    ListSpeechSynthesisTasksInput:
      type: object
      title: ListSpeechSynthesisTasksInput
      properties: {}
    SynthesisTasks:
      type: array
      items:
        $ref: '#/components/schemas/SynthesisTask'
    OutputFormat:
      type: string
      enum:
        - json
        - mp3
        - ogg_vorbis
        - pcm
    OutputS3BucketName:
      type: string
      pattern: '^[a-z0-9][\.\-a-z0-9]{1,61}[a-z0-9]$'
    OutputS3KeyPrefix:
      type: string
      pattern: '^[0-9a-zA-Z\/\!\-_\.\*\''\(\):;\$@=+\,\?&]{0,800}$'
    OutputUri:
      type: string
    PutLexiconInput:
      type: object
      required:
        - Content
      title: PutLexiconInput
      properties:
        Content:
          $ref: '#/components/schemas/LexiconContent'
          description: Content of the PLS lexicon as string data.
    RequestCharacters:
      type: integer
    SampleRate:
      type: string
    SnsTopicArn:
      type: string
      pattern: '^arn:aws(-(cn|iso(-b)?|us-gov))?:sns:[a-z0-9_-]{1,50}:\d{12}:[a-zA-Z0-9_-]{1,256}$'
    SpeechMarkTypeList:
      type: array
      items:
        $ref: '#/components/schemas/SpeechMarkType'
      maxItems: 4
    Text:
      type: string
    TextType:
      type: string
      enum:
        - ssml
        - text
    VoiceId:
      type: string
      enum:
        - Aditi
        - Amy
        - Astrid
        - Bianca
        - Brian
        - Camila
        - Carla
        - Carmen
        - Celine
        - Chantal
        - Conchita
        - Cristiano
        - Dora
        - Emma
        - Enrique
        - Ewa
        - Filiz
        - Gabrielle
        - Geraint
        - Giorgio
        - Gwyneth
        - Hans
        - Ines
        - Ivy
        - Jacek
        - Jan
        - Joanna
        - Joey
        - Justin
        - Karl
        - Kendra
        - Kevin
        - Kimberly
        - Lea
        - Liv
        - Lotte
        - Lucia
        - Lupe
        - Mads
        - Maja
        - Marlene
        - Mathieu
        - Matthew
        - Maxim
        - Mia
        - Miguel
        - Mizuki
        - Naja
        - Nicole
        - Olivia
        - Penelope
        - Raveena
        - Ricardo
        - Ruben
        - Russell
        - Salli
        - Seoyeon
        - Takumi
        - Tatyana
        - Vicki
        - Vitoria
        - Zeina
        - Zhiyu
    StartSpeechSynthesisTaskInput:
      type: object
      required:
        - OutputFormat
        - OutputS3BucketName
        - Text
        - VoiceId
      title: StartSpeechSynthesisTaskInput
      properties:
        Engine:
          $ref: '#/components/schemas/Engine'
          description: Specifies the engine (<code>standard</code> or <code>neural</code>) for Amazon Polly to use when processing input text for speech synthesis. Using a voice that is not supported for the engine selected will result in an error.
        LanguageCode:
          $ref: '#/components/schemas/LanguageCode'
          description: '<p>Optional language code for the Speech Synthesis request. This is only necessary if using a bilingual voice, such as Aditi, which can be used for either Indian English (en-IN) or Hindi (hi-IN). </p> <p>If a bilingual voice is used and no language code is specified, Amazon Polly will use the default language of the bilingual voice. The default language for any voice is the one returned by the <a href="https://docs.aws.amazon.com/polly/latest/dg/API_DescribeVoices.html">DescribeVoices</a> operation for the <code>LanguageCode</code> parameter. For example, if no language code is specified, Aditi will use Indian English rather than Hindi.</p>'
        LexiconNames:
          $ref: '#/components/schemas/LexiconNameList'
          description: 'List of one or more pronunciation lexicon names you want the service to apply during synthesis. Lexicons are applied only if the language of the lexicon is the same as the language of the voice. '
        OutputFormat:
          $ref: '#/components/schemas/OutputFormat'
          description: 'The format in which the returned output will be encoded. For audio stream, this will be mp3, ogg_vorbis, or pcm. For speech marks, this will be json. '
        OutputS3BucketName:
          $ref: '#/components/schemas/OutputS3BucketName'
          description: Amazon S3 bucket name to which the output file will be saved.
        OutputS3KeyPrefix:
          $ref: '#/components/schemas/OutputS3KeyPrefix'
          description: The Amazon S3 key prefix for the output speech file.
        SampleRate:
          $ref: '#/components/schemas/SampleRate'
          description: '<p>The audio frequency specified in Hz.</p> <p>The valid values for mp3 and ogg_vorbis are "8000", "16000", "22050", and "24000". The default value for standard voices is "22050". The default value for neural voices is "24000".</p> <p>Valid values for pcm are "8000" and "16000" The default value is "16000". </p>'
        SnsTopicArn:
          $ref: '#/components/schemas/SnsTopicArn'
          description: ARN for the SNS topic optionally used for providing status notification for a speech synthesis task.
        SpeechMarkTypes:
          $ref: '#/components/schemas/SpeechMarkTypeList'
          description: The type of speech marks returned for the input text.
        Text:
          $ref: '#/components/schemas/Text'
          description: 'The input text to synthesize. If you specify ssml as the TextType, follow the SSML format for the input text. '
        TextType:
          $ref: '#/components/schemas/TextType'
          description: 'Specifies whether the input text is plain text or SSML. The default value is plain text. '
        VoiceId:
          $ref: '#/components/schemas/VoiceId'
          description: 'Voice ID to use for the synthesis. '
    TaskStatusReason:
      type: string
    SynthesizeSpeechInput:
      type: object
      required:
        - OutputFormat
        - Text
        - VoiceId
      title: SynthesizeSpeechInput
      properties:
        Engine:
          $ref: '#/components/schemas/Engine'
          description: '<p>Specifies the engine (<code>standard</code> or <code>neural</code>) for Amazon Polly to use when processing input text for speech synthesis. For information on Amazon Polly voices and which voices are available in standard-only, NTTS-only, and both standard and NTTS formats, see <a href="https://docs.aws.amazon.com/polly/latest/dg/voicelist.html">Available Voices</a>.</p> <p> <b>NTTS-only voices</b> </p> <p>When using NTTS-only voices such as Kevin (en-US), this parameter is required and must be set to <code>neural</code>. If the engine is not specified, or is set to <code>standard</code>, this will result in an error. </p> <p>Type: String</p> <p>Valid Values: <code>standard</code> | <code>neural</code> </p> <p>Required: Yes</p> <p> <b>Standard voices</b> </p> <p>For standard voices, this is not required; the engine parameter defaults to <code>standard</code>. If the engine is not specified, or is set to <code>standard</code> and an NTTS-only voice is selected, this will result in an error. </p>'
        LanguageCode:
          $ref: '#/components/schemas/LanguageCode'
          description: '<p>Optional language code for the Synthesize Speech request. This is only necessary if using a bilingual voice, such as Aditi, which can be used for either Indian English (en-IN) or Hindi (hi-IN). </p> <p>If a bilingual voice is used and no language code is specified, Amazon Polly will use the default language of the bilingual voice. The default language for any voice is the one returned by the <a href="https://docs.aws.amazon.com/polly/latest/dg/API_DescribeVoices.html">DescribeVoices</a> operation for the <code>LanguageCode</code> parameter. For example, if no language code is specified, Aditi will use Indian English rather than Hindi.</p>'
        LexiconNames:
          $ref: '#/components/schemas/LexiconNameList'
          description: 'List of one or more pronunciation lexicon names you want the service to apply during synthesis. Lexicons are applied only if the language of the lexicon is the same as the language of the voice. For information about storing lexicons, see <a href="https://docs.aws.amazon.com/polly/latest/dg/API_PutLexicon.html">PutLexicon</a>.'
        OutputFormat:
          $ref: '#/components/schemas/OutputFormat'
          description: '<p> The format in which the returned output will be encoded. For audio stream, this will be mp3, ogg_vorbis, or pcm. For speech marks, this will be json. </p> <p>When pcm is used, the content returned is audio/pcm in a signed 16-bit, 1 channel (mono), little-endian format. </p>'
        SampleRate:
          $ref: '#/components/schemas/SampleRate'
          description: '<p>The audio frequency specified in Hz.</p> <p>The valid values for mp3 and ogg_vorbis are "8000", "16000", "22050", and "24000". The default value for standard voices is "22050". The default value for neural voices is "24000".</p> <p>Valid values for pcm are "8000" and "16000" The default value is "16000". </p>'
        SpeechMarkTypes:
          $ref: '#/components/schemas/SpeechMarkTypeList'
          description: The type of speech marks returned for the input text.
        Text:
          $ref: '#/components/schemas/Text'
          description: ' Input text to synthesize. If you specify <code>ssml</code> as the <code>TextType</code>, follow the SSML format for the input text. '
        TextType:
          $ref: '#/components/schemas/TextType'
          description: ' Specifies whether the input text is plain text or SSML. The default value is plain text. For more information, see <a href="https://docs.aws.amazon.com/polly/latest/dg/ssml.html">Using SSML</a>.'
        VoiceId:
          $ref: '#/components/schemas/VoiceId'
          description: ' Voice ID to use for the synthesis. You can get a list of available voice IDs by calling the <a href="https://docs.aws.amazon.com/polly/latest/dg/API_DescribeVoices.html">DescribeVoices</a> operation. '
    VoiceName:
      type: string
    Voice:
      type: object
      properties:
        Gender:
          $ref: '#/components/schemas/Gender'
          description: Gender of the voice.
        Id:
          $ref: '#/components/schemas/VoiceId'
          description: Amazon Polly assigned voice ID. This is the ID that you specify when calling the <code>SynthesizeSpeech</code> operation.
        LanguageCode:
          $ref: '#/components/schemas/LanguageCode'
          description: Language code of the voice.
        LanguageName:
          $ref: '#/components/schemas/LanguageName'
          description: Human readable name of the language in English.
        Name:
          $ref: '#/components/schemas/VoiceName'
          description: 'Name of the voice (for example, Salli, Kendra, etc.). This provides a human readable voice name that you might display in your application.'
        AdditionalLanguageCodes:
          $ref: '#/components/schemas/LanguageCodeList'
          description: '<p>Additional codes for languages available for the specified voice in addition to its default language. </p> <p>For example, the default language for Aditi is Indian English (en-IN) because it was first used for that language. Since Aditi is bilingual and fluent in both Indian English and Hindi, this parameter would show the code <code>hi-IN</code>.</p>'
        SupportedEngines:
          $ref: '#/components/schemas/EngineList'
          description: Specifies which engines (<code>standard</code> or <code>neural</code>) that are supported by a given voice.
      description: Description of the voice.
security:
  - hmac: []
