openapi: 3.0.0
info:
  version: '2017-07-24'
  x-release: v4
  title: Amazon SageMaker Service
  description: '<p>Provides APIs for creating and managing Amazon SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user">Amazon SageMaker Developer Guide</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: sagemaker
  x-aws-signingName: sagemaker
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/sagemaker-2017-07-24.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/sagemaker/'
servers:
  - url: 'http://api.sagemaker.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The SageMaker multi-region endpoint
  - url: 'https://api.sagemaker.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The SageMaker multi-region endpoint
  - url: 'http://api.sagemaker.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The SageMaker endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://api.sagemaker.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The SageMaker endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /#X-Amz-Target=SageMaker.AddAssociation:
    post:
      operationId: AddAssociation
      description: 'Creates an <i>association</i> between the source and the destination. A source can be associated with multiple destinations, and a destination can be associated with multiple sources. An association is a lineage tracking entity. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/lineage-tracking.html">Amazon SageMaker ML Lineage Tracking</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddAssociationResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
        '481':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAssociationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.AddAssociation
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.AddTags:
    post:
      operationId: AddTags
      description: '<p>Adds or overwrites one or more tags for the specified Amazon SageMaker resource. You can add tags to notebook instances, training jobs, hyperparameter tuning jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations, and endpoints.</p> <p>Each tag consists of a key and an optional value. Tag keys must be unique per resource. For more information about tags, see For more information, see <a href="https://aws.amazon.com/answers/account-management/aws-tagging-strategies/">Amazon Web Services Tagging Strategies</a>.</p> <note> <p>Tags that you add to a hyperparameter tuning job by calling this API are also added to any training jobs that the hyperparameter tuning job launches after you call this API, but not to training jobs that the hyperparameter tuning job launched before you called this API. To make sure that the tags associated with a hyperparameter tuning job are also added to all training jobs that the hyperparameter tuning job launches, add the tags when you first create the tuning job by specifying them in the <code>Tags</code> parameter of <a>CreateHyperParameterTuningJob</a> </p> </note> <note> <p>Tags that you add to a SageMaker Studio Domain or User Profile by calling this API are also added to any Apps that the Domain or User Profile launches after you call this API, but not to Apps that the Domain or User Profile launched before you called this API. To make sure that the tags associated with a Domain or User Profile are also added to all Apps that the Domain or User Profile launches, add the tags when you first create the Domain or User Profile by specifying them in the <code>Tags</code> parameter of <a>CreateDomain</a> or <a>CreateUserProfile</a>.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddTagsOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddTagsInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.AddTags
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.AssociateTrialComponent:
    post:
      operationId: AssociateTrialComponent
      description: 'Associates a trial component with a trial. A trial component can be associated with multiple trials. To disassociate a trial component from a trial, call the <a>DisassociateTrialComponent</a> API.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateTrialComponentResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
        '481':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateTrialComponentRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.AssociateTrialComponent
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.CreateAction:
    post:
      operationId: CreateAction
      description: '<p>Creates an <i>action</i>. An action is a lineage tracking entity that represents an action or activity. For example, a model deployment or an HPO job. Generally, an action involves at least one input or output artifact. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/lineage-tracking.html">Amazon SageMaker ML Lineage Tracking</a>.</p> <note> <p> <code>CreateAction</code> can only be invoked from within an SageMaker managed environment. This includes SageMaker training jobs, processing jobs, transform jobs, and SageMaker notebooks. A call to <code>CreateAction</code> from outside one of these environments results in an error.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateActionResponse'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateActionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateAction
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.CreateAlgorithm:
    post:
      operationId: CreateAlgorithm
      description: Create a machine learning algorithm that you can use in Amazon SageMaker and list in the Amazon Web Services Marketplace.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAlgorithmOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAlgorithmInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateAlgorithm
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.CreateApp:
    post:
      operationId: CreateApp
      description: 'Creates a running app for the specified UserProfile. Supported apps are <code>JupyterServer</code> and <code>KernelGateway</code>. This operation is automatically invoked by Amazon SageMaker Studio upon access to the associated Domain, and when new kernel configurations are selected by the user. A user may have multiple Apps active simultaneously.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAppResponse'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
        '481':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateApp
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.CreateAppImageConfig:
    post:
      operationId: CreateAppImageConfig
      description: 'Creates a configuration for running a SageMaker image as a KernelGateway app. The configuration specifies the Amazon Elastic File System (EFS) storage volume on the image, and a list of the kernels in the image.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAppImageConfigResponse'
        '480':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppImageConfigRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateAppImageConfig
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.CreateArtifact:
    post:
      operationId: CreateArtifact
      description: '<p>Creates an <i>artifact</i>. An artifact is a lineage tracking entity that represents a URI addressable object or data. Some examples are the S3 URI of a dataset and the ECR registry path of an image. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/lineage-tracking.html">Amazon SageMaker ML Lineage Tracking</a>.</p> <note> <p> <code>CreateArtifact</code> can only be invoked from within an SageMaker managed environment. This includes SageMaker training jobs, processing jobs, transform jobs, and SageMaker notebooks. A call to <code>CreateArtifact</code> from outside one of these environments results in an error.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateArtifactResponse'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateArtifactRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateArtifact
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.CreateAutoMLJob:
    post:
      operationId: CreateAutoMLJob
      description: '<p>Creates an Autopilot job.</p> <p>Find the best-performing model after you run an Autopilot job by calling .</p> <p>For information about how to use Autopilot, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/autopilot-automate-model-development.html">Automate Model Development with Amazon SageMaker Autopilot</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAutoMLJobResponse'
        '480':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
        '481':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAutoMLJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateAutoMLJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.CreateCodeRepository:
    post:
      operationId: CreateCodeRepository
      description: '<p>Creates a Git repository as a resource in your Amazon SageMaker account. You can associate the repository with notebook instances so that you can use Git source control for the notebooks you create. The Git repository is a resource in your Amazon SageMaker account, so it can be associated with more than one notebook instance, and it persists independently from the lifecycle of any notebook instances it is associated with.</p> <p>The repository can be hosted either in <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html">Amazon Web Services CodeCommit</a> or in any other Git repository.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCodeRepositoryOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCodeRepositoryInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateCodeRepository
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.CreateCompilationJob:
    post:
      operationId: CreateCompilationJob
      description: '<p>Starts a model compilation job. After the model has been compiled, Amazon SageMaker saves the resulting model artifacts to an Amazon Simple Storage Service (Amazon S3) bucket that you specify. </p> <p>If you choose to host your model using Amazon SageMaker hosting services, you can use the resulting model artifacts as part of the model. You can also use the artifacts with Amazon Web Services IoT Greengrass. In that case, deploy them as an ML resource.</p> <p>In the request body, you provide the following:</p> <ul> <li> <p>A name for the compilation job</p> </li> <li> <p> Information about the input model artifacts </p> </li> <li> <p>The output location for the compiled model and the device (target) that the model runs on </p> </li> <li> <p>The Amazon Resource Name (ARN) of the IAM role that Amazon SageMaker assumes to perform the model compilation job. </p> </li> </ul> <p>You can also provide a <code>Tag</code> to track the model compilation job''s resource use and costs. The response body contains the <code>CompilationJobArn</code> for the compiled job.</p> <p>To stop a model compilation job, use <a>StopCompilationJob</a>. To get information about a particular model compilation job, use <a>DescribeCompilationJob</a>. To get information about multiple model compilation jobs, use <a>ListCompilationJobs</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCompilationJobResponse'
        '480':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
        '481':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCompilationJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateCompilationJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.CreateContext:
    post:
      operationId: CreateContext
      description: '<p>Creates a <i>context</i>. A context is a lineage tracking entity that represents a logical grouping of other tracking or experiment entities. Some examples are an endpoint and a model package. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/lineage-tracking.html">Amazon SageMaker ML Lineage Tracking</a>.</p> <note> <p> <code>CreateContext</code> can only be invoked from within an SageMaker managed environment. This includes SageMaker training jobs, processing jobs, transform jobs, and SageMaker notebooks. A call to <code>CreateContext</code> from outside one of these environments results in an error.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateContextResponse'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContextRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateContext
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.CreateDataQualityJobDefinition:
    post:
      operationId: CreateDataQualityJobDefinition
      description: 'Creates a definition for a job that monitors data quality and drift. For information about model monitor, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/model-monitor.html">Amazon SageMaker Model Monitor</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDataQualityJobDefinitionResponse'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
        '481':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDataQualityJobDefinitionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateDataQualityJobDefinition
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.CreateDeviceFleet:
    post:
      operationId: CreateDeviceFleet
      description: Creates a device fleet.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
        '481':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDeviceFleetRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateDeviceFleet
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.CreateDomain:
    post:
      operationId: CreateDomain
      description: '<p>Creates a <code>Domain</code> used by Amazon SageMaker Studio. A domain consists of an associated Amazon Elastic File System (EFS) volume, a list of authorized users, and a variety of security, application, policy, and Amazon Virtual Private Cloud (VPC) configurations. An Amazon Web Services account is limited to one domain per region. Users within a domain can share notebook files and other artifacts with each other.</p> <p> <b>EFS storage</b> </p> <p>When a domain is created, an EFS volume is created for use by all of the users within the domain. Each user receives a private home directory within the EFS volume for notebooks, Git repositories, and data files.</p> <p>SageMaker uses the Amazon Web Services Key Management Service (Amazon Web Services KMS) to encrypt the EFS volume attached to the domain with an Amazon Web Services managed customer master key (CMK) by default. For more control, you can specify a customer managed CMK. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/encryption-at-rest.html">Protect Data at Rest Using Encryption</a>.</p> <p> <b>VPC configuration</b> </p> <p>All SageMaker Studio traffic between the domain and the EFS volume is through the specified VPC and subnets. For other Studio traffic, you can specify the <code>AppNetworkAccessType</code> parameter. <code>AppNetworkAccessType</code> corresponds to the network access type that you choose when you onboard to Studio. The following options are available:</p> <ul> <li> <p> <code>PublicInternetOnly</code> - Non-EFS traffic goes through a VPC managed by Amazon SageMaker, which allows internet access. This is the default value.</p> </li> <li> <p> <code>VpcOnly</code> - All Studio traffic is through the specified VPC and subnets. Internet access is disabled by default. To allow internet access, you must specify a NAT gateway.</p> <p>When internet access is disabled, you won''t be able to run a Studio notebook or to train or host models unless your VPC has an interface endpoint to the SageMaker API and runtime or a NAT gateway and your security groups allow outbound connections.</p> </li> </ul> <important> <p>NFS traffic over TCP on port 2049 needs to be allowed in both inbound and outbound rules in order to launch a SageMaker Studio app successfully.</p> </important> <p>For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/studio-notebooks-and-internet-access.html">Connect SageMaker Studio Notebooks to Resources in a VPC</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDomainResponse'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
        '481':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDomainRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateDomain
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.CreateEdgePackagingJob:
    post:
      operationId: CreateEdgePackagingJob
      description: 'Starts a SageMaker Edge Manager model packaging job. Edge Manager will use the model artifacts from the Amazon Simple Storage Service bucket that you specify. After the model has been packaged, Amazon SageMaker saves the resulting artifacts to an S3 bucket that you specify.'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEdgePackagingJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateEdgePackagingJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.CreateEndpoint:
    post:
      operationId: CreateEndpoint
      description: '<p>Creates an endpoint using the endpoint configuration specified in the request. Amazon SageMaker uses the endpoint to provision resources and deploy models. You create the endpoint configuration with the <a>CreateEndpointConfig</a> API. </p> <p> Use this API to deploy models using Amazon SageMaker hosting services. </p> <p>For an example that calls this method when deploying a model to Amazon SageMaker hosting services, see the <a href="https://github.com/aws/amazon-sagemaker-examples/blob/master/sagemaker-fundamentals/create-endpoint/create_endpoint.ipynb">Create Endpoint example notebook.</a> </p> <note> <p> You must not delete an <code>EndpointConfig</code> that is in use by an endpoint that is live or while the <code>UpdateEndpoint</code> or <code>CreateEndpoint</code> operations are being performed on the endpoint. To update an endpoint, you must create a new <code>EndpointConfig</code>.</p> </note> <p>The endpoint name must be unique within an Amazon Web Services Region in your Amazon Web Services account. </p> <p>When it receives the request, Amazon SageMaker creates the endpoint, launches the resources (ML compute instances), and deploys the model(s) on them. </p> <note> <p>When you call <a>CreateEndpoint</a>, a load call is made to DynamoDB to verify that your endpoint configuration exists. When you read data from a DynamoDB table supporting <a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadConsistency.html"> <code>Eventually Consistent Reads</code> </a>, the response might not reflect the results of a recently completed write operation. The response might include some stale data. If the dependent entities are not yet in DynamoDB, this causes a validation error. If you repeat your read request after a short time, the response should return the latest data. So retry logic is recommended to handle these possible issues. We also recommend that customers call <a>DescribeEndpointConfig</a> before calling <a>CreateEndpoint</a> to minimize the potential impact of a DynamoDB eventually consistent read.</p> </note> <p>When Amazon SageMaker receives the request, it sets the endpoint status to <code>Creating</code>. After it creates the endpoint, it sets the status to <code>InService</code>. Amazon SageMaker can then process incoming requests for inferences. To check the status of an endpoint, use the <a>DescribeEndpoint</a> API.</p> <p>If any of the models hosted at this endpoint get model data from an Amazon S3 location, Amazon SageMaker uses Amazon Web Services Security Token Service to download model artifacts from the S3 path you provided. Amazon Web Services STS is activated in your IAM user account by default. If you previously deactivated Amazon Web Services STS for a region, you need to reactivate Amazon Web Services STS for that region. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_enable-regions.html">Activating and Deactivating Amazon Web Services STS in an Amazon Web Services Region</a> in the <i>Amazon Web Services Identity and Access Management User Guide</i>.</p> <note> <p> To add the IAM role policies for using this API operation, go to the <a href="https://console.aws.amazon.com/iam/">IAM console</a>, and choose Roles in the left navigation pane. Search the IAM role that you want to grant access to use the <a>CreateEndpoint</a> and <a>CreateEndpointConfig</a> API operations, add the following policies to the role. </p> <ul> <li> <p>Option 1: For a full Amazon SageMaker access, search and attach the <code>AmazonSageMakerFullAccess</code> policy.</p> </li> <li> <p>Option 2: For granting a limited access to an IAM role, paste the following Action elements manually into the JSON file of the IAM role: </p> <p> <code>"Action": ["sagemaker:CreateEndpoint", "sagemaker:CreateEndpointConfig"]</code> </p> <p> <code>"Resource": [</code> </p> <p> <code>"arn:aws:sagemaker:region:account-id:endpoint/endpointName"</code> </p> <p> <code>"arn:aws:sagemaker:region:account-id:endpoint-config/endpointConfigName"</code> </p> <p> <code>]</code> </p> <p>For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/api-permissions-reference.html">Amazon SageMaker API Permissions: Actions, Permissions, and Resources Reference</a>.</p> </li> </ul> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEndpointOutput'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEndpointInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateEndpoint
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.CreateEndpointConfig:
    post:
      operationId: CreateEndpointConfig
      description: '<p>Creates an endpoint configuration that Amazon SageMaker hosting services uses to deploy models. In the configuration, you identify one or more models, created using the <code>CreateModel</code> API, to deploy and the resources that you want Amazon SageMaker to provision. Then you call the <a>CreateEndpoint</a> API.</p> <note> <p> Use this API if you want to use Amazon SageMaker hosting services to deploy models into production. </p> </note> <p>In the request, you define a <code>ProductionVariant</code>, for each model that you want to deploy. Each <code>ProductionVariant</code> parameter also describes the resources that you want Amazon SageMaker to provision. This includes the number and type of ML compute instances to deploy. </p> <p>If you are hosting multiple models, you also assign a <code>VariantWeight</code> to specify how much traffic you want to allocate to each model. For example, suppose that you want to host two models, A and B, and you assign traffic weight 2 for model A and 1 for model B. Amazon SageMaker distributes two-thirds of the traffic to Model A, and one-third to model B. </p> <p>For an example that calls this method when deploying a model to Amazon SageMaker hosting services, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/ex1-deploy-model.html#ex1-deploy-model-boto">Deploy the Model to Amazon SageMaker Hosting Services (Amazon Web Services SDK for Python (Boto 3)).</a> </p> <note> <p>When you call <a>CreateEndpoint</a>, a load call is made to DynamoDB to verify that your endpoint configuration exists. When you read data from a DynamoDB table supporting <a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadConsistency.html"> <code>Eventually Consistent Reads</code> </a>, the response might not reflect the results of a recently completed write operation. The response might include some stale data. If the dependent entities are not yet in DynamoDB, this causes a validation error. If you repeat your read request after a short time, the response should return the latest data. So retry logic is recommended to handle these possible issues. We also recommend that customers call <a>DescribeEndpointConfig</a> before calling <a>CreateEndpoint</a> to minimize the potential impact of a DynamoDB eventually consistent read.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEndpointConfigOutput'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEndpointConfigInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateEndpointConfig
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.CreateExperiment:
    post:
      operationId: CreateExperiment
      description: '<p>Creates an SageMaker <i>experiment</i>. An experiment is a collection of <i>trials</i> that are observed, compared and evaluated as a group. A trial is a set of steps, called <i>trial components</i>, that produce a machine learning model.</p> <p>The goal of an experiment is to determine the components that produce the best model. Multiple trials are performed, each one isolating and measuring the impact of a change to one or more inputs, while keeping the remaining inputs constant.</p> <p>When you use SageMaker Studio or the SageMaker Python SDK, all experiments, trials, and trial components are automatically tracked, logged, and indexed. When you use the Amazon Web Services SDK for Python (Boto), you must use the logging APIs provided by the SDK.</p> <p>You can add tags to experiments, trials, trial components and then use the <a>Search</a> API to search for the tags.</p> <p>To add a description to an experiment, specify the optional <code>Description</code> parameter. To add a description later, or to change the description, call the <a>UpdateExperiment</a> API.</p> <p>To get a list of all your experiments, call the <a>ListExperiments</a> API. To view an experiment''s properties, call the <a>DescribeExperiment</a> API. To get a list of all the trials associated with an experiment, call the <a>ListTrials</a> API. To create a trial call the <a>CreateTrial</a> API.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateExperimentResponse'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExperimentRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateExperiment
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.CreateFeatureGroup:
    post:
      operationId: CreateFeatureGroup
      description: '<p>Create a new <code>FeatureGroup</code>. A <code>FeatureGroup</code> is a group of <code>Features</code> defined in the <code>FeatureStore</code> to describe a <code>Record</code>. </p> <p>The <code>FeatureGroup</code> defines the schema and features contained in the FeatureGroup. A <code>FeatureGroup</code> definition is composed of a list of <code>Features</code>, a <code>RecordIdentifierFeatureName</code>, an <code>EventTimeFeatureName</code> and configurations for its <code>OnlineStore</code> and <code>OfflineStore</code>. Check <a href="https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html">Amazon Web Services service quotas</a> to see the <code>FeatureGroup</code>s quota for your Amazon Web Services account.</p> <important> <p>You must include at least one of <code>OnlineStoreConfig</code> and <code>OfflineStoreConfig</code> to create a <code>FeatureGroup</code>.</p> </important>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFeatureGroupResponse'
        '480':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
        '481':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFeatureGroupRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateFeatureGroup
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.CreateFlowDefinition:
    post:
      operationId: CreateFlowDefinition
      description: Creates a flow definition.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFlowDefinitionResponse'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
        '481':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFlowDefinitionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateFlowDefinition
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.CreateHumanTaskUi:
    post:
      operationId: CreateHumanTaskUi
      description: 'Defines the settings you will use for the human review workflow user interface. Reviewers will see a three-panel interface with an instruction area, the item to review, and an input area.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateHumanTaskUiResponse'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
        '481':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHumanTaskUiRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateHumanTaskUi
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.CreateHyperParameterTuningJob:
    post:
      operationId: CreateHyperParameterTuningJob
      description: 'Starts a hyperparameter tuning job. A hyperparameter tuning job finds the best version of a model by running many training jobs on your dataset using the algorithm you choose and values for hyperparameters within ranges that you specify. It then chooses the hyperparameter values that result in a model that performs the best, as measured by an objective metric that you choose.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateHyperParameterTuningJobResponse'
        '480':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
        '481':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHyperParameterTuningJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateHyperParameterTuningJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.CreateImage:
    post:
      operationId: CreateImage
      description: 'Creates a custom SageMaker image. A SageMaker image is a set of image versions. Each image version represents a container image stored in Amazon Container Registry (ECR). For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/studio-byoi.html">Bring your own SageMaker image</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateImageResponse'
        '480':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
        '481':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateImageRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateImage
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.CreateImageVersion:
    post:
      operationId: CreateImageVersion
      description: Creates a version of the SageMaker image specified by <code>ImageName</code>. The version represents the Amazon Container Registry (ECR) container image specified by <code>BaseImage</code>.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateImageVersionResponse'
        '480':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
        '481':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
        '482':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateImageVersionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateImageVersion
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.CreateLabelingJob:
    post:
      operationId: CreateLabelingJob
      description: '<p>Creates a job that uses workers to label the data objects in your input dataset. You can use the labeled data to train machine learning models. </p> <p>You can select your workforce from one of three providers:</p> <ul> <li> <p>A private workforce that you create. It can include employees, contractors, and outside experts. Use a private workforce when want the data to stay within your organization or when a specific set of skills is required.</p> </li> <li> <p>One or more vendors that you select from the Amazon Web Services Marketplace. Vendors provide expertise in specific areas. </p> </li> <li> <p>The Amazon Mechanical Turk workforce. This is the largest workforce, but it should only be used for public data or data that has been stripped of any personally identifiable information.</p> </li> </ul> <p>You can also use <i>automated data labeling</i> to reduce the number of data objects that need to be labeled by a human. Automated data labeling uses <i>active learning</i> to determine if a data object can be labeled by machine or if it needs to be sent to a human worker. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-automated-labeling.html">Using Automated Data Labeling</a>.</p> <p>The data objects to be labeled are contained in an Amazon S3 bucket. You create a <i>manifest file</i> that describes the location of each object. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-data.html">Using Input and Output Data</a>.</p> <p>The output can be used as the manifest file for another labeling job or as training data for your machine learning models.</p> <p>You can use this operation to create a static labeling job or a streaming labeling job. A static labeling job stops if all data objects in the input manifest file identified in <code>ManifestS3Uri</code> have been labeled. A streaming labeling job runs perpetually until it is manually stopped, or remains idle for 10 days. You can send new data objects to an active (<code>InProgress</code>) streaming labeling job in real time. To learn how to create a static labeling job, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-create-labeling-job-api.html">Create a Labeling Job (API) </a> in the Amazon SageMaker Developer Guide. To learn how to create a streaming labeling job, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-streaming-create-job.html">Create a Streaming Labeling Job</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLabelingJobResponse'
        '480':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
        '481':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLabelingJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateLabelingJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.CreateModel:
    post:
      operationId: CreateModel
      description: '<p>Creates a model in Amazon SageMaker. In the request, you name the model and describe a primary container. For the primary container, you specify the Docker image that contains inference code, artifacts (from prior training), and a custom environment map that the inference code uses when you deploy the model for predictions.</p> <p>Use this API to create a model if you want to use Amazon SageMaker hosting services or run a batch transform job.</p> <p>To host your model, you create an endpoint configuration with the <code>CreateEndpointConfig</code> API, and then create an endpoint with the <code>CreateEndpoint</code> API. Amazon SageMaker then deploys all of the containers that you defined for the model in the hosting environment. </p> <p>For an example that calls this method when deploying a model to Amazon SageMaker hosting services, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/ex1-deploy-model.html#ex1-deploy-model-boto">Deploy the Model to Amazon SageMaker Hosting Services (Amazon Web Services SDK for Python (Boto 3)).</a> </p> <p>To run a batch transform using your model, you start a job with the <code>CreateTransformJob</code> API. Amazon SageMaker uses your model and your dataset to get inferences which are then saved to a specified S3 location.</p> <p>In the <code>CreateModel</code> request, you must define a container with the <code>PrimaryContainer</code> parameter.</p> <p>In the request, you also provide an IAM role that Amazon SageMaker can assume to access model artifacts and docker image for deployment on ML compute hosting instances or for batch transform jobs. In addition, you also use the IAM role to manage permissions the inference code needs. For example, if the inference code access any other Amazon Web Services resources, you grant necessary permissions via this role.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateModelOutput'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateModelInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateModel
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.CreateModelBiasJobDefinition:
    post:
      operationId: CreateModelBiasJobDefinition
      description: Creates the definition for a model bias job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateModelBiasJobDefinitionResponse'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
        '481':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateModelBiasJobDefinitionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateModelBiasJobDefinition
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.CreateModelExplainabilityJobDefinition:
    post:
      operationId: CreateModelExplainabilityJobDefinition
      description: Creates the definition for a model explainability job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateModelExplainabilityJobDefinitionResponse'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
        '481':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateModelExplainabilityJobDefinitionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateModelExplainabilityJobDefinition
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.CreateModelPackage:
    post:
      operationId: CreateModelPackage
      description: '<p>Creates a model package that you can use to create Amazon SageMaker models or list on Amazon Web Services Marketplace, or a versioned model that is part of a model group. Buyers can subscribe to model packages listed on Amazon Web Services Marketplace to create models in Amazon SageMaker.</p> <p>To create a model package by specifying a Docker container that contains your inference code and the Amazon S3 location of your model artifacts, provide values for <code>InferenceSpecification</code>. To create a model from an algorithm resource that you created or subscribed to in Amazon Web Services Marketplace, provide a value for <code>SourceAlgorithmSpecification</code>.</p> <note> <p>There are two types of model packages:</p> <ul> <li> <p>Versioned - a model that is part of a model group in the model registry.</p> </li> <li> <p>Unversioned - a model package that is not part of a model group.</p> </li> </ul> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateModelPackageOutput'
        '480':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '481':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateModelPackageInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateModelPackage
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.CreateModelPackageGroup:
    post:
      operationId: CreateModelPackageGroup
      description: Creates a model group. A model group contains a group of model versions.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateModelPackageGroupOutput'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateModelPackageGroupInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateModelPackageGroup
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.CreateModelQualityJobDefinition:
    post:
      operationId: CreateModelQualityJobDefinition
      description: 'Creates a definition for a job that monitors model quality and drift. For information about model monitor, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/model-monitor.html">Amazon SageMaker Model Monitor</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateModelQualityJobDefinitionResponse'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
        '481':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateModelQualityJobDefinitionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateModelQualityJobDefinition
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.CreateMonitoringSchedule:
    post:
      operationId: CreateMonitoringSchedule
      description: Creates a schedule that regularly starts Amazon SageMaker Processing Jobs to monitor the data captured for an Amazon SageMaker Endoint.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMonitoringScheduleResponse'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
        '481':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMonitoringScheduleRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateMonitoringSchedule
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.CreateNotebookInstance:
    post:
      operationId: CreateNotebookInstance
      description: '<p>Creates an Amazon SageMaker notebook instance. A notebook instance is a machine learning (ML) compute instance running on a Jupyter notebook. </p> <p>In a <code>CreateNotebookInstance</code> request, specify the type of ML compute instance that you want to run. Amazon SageMaker launches the instance, installs common libraries that you can use to explore datasets for model training, and attaches an ML storage volume to the notebook instance. </p> <p>Amazon SageMaker also provides a set of example notebooks. Each notebook demonstrates how to use Amazon SageMaker with a specific algorithm or with a machine learning framework. </p> <p>After receiving the request, Amazon SageMaker does the following:</p> <ol> <li> <p>Creates a network interface in the Amazon SageMaker VPC.</p> </li> <li> <p>(Option) If you specified <code>SubnetId</code>, Amazon SageMaker creates a network interface in your own VPC, which is inferred from the subnet ID that you provide in the input. When creating this network interface, Amazon SageMaker attaches the security group that you specified in the request to the network interface that it creates in your VPC.</p> </li> <li> <p>Launches an EC2 instance of the type specified in the request in the Amazon SageMaker VPC. If you specified <code>SubnetId</code> of your VPC, Amazon SageMaker specifies both network interfaces when launching this instance. This enables inbound traffic from your own VPC to the notebook instance, assuming that the security groups allow it.</p> </li> </ol> <p>After creating the notebook instance, Amazon SageMaker returns its Amazon Resource Name (ARN). You can''t change the name of a notebook instance after you create it.</p> <p>After Amazon SageMaker creates the notebook instance, you can connect to the Jupyter server and work in Jupyter notebooks. For example, you can write code to explore a dataset that you can use for model training, train a model, host models by creating Amazon SageMaker endpoints, and validate hosted models. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/how-it-works.html">How It Works</a>. </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateNotebookInstanceOutput'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNotebookInstanceInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateNotebookInstance
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.CreateNotebookInstanceLifecycleConfig:
    post:
      operationId: CreateNotebookInstanceLifecycleConfig
      description: '<p>Creates a lifecycle configuration that you can associate with a notebook instance. A <i>lifecycle configuration</i> is a collection of shell scripts that run when you create or start a notebook instance.</p> <p>Each lifecycle configuration script has a limit of 16384 characters.</p> <p>The value of the <code>$PATH</code> environment variable that is available to both scripts is <code>/sbin:bin:/usr/sbin:/usr/bin</code>.</p> <p>View CloudWatch Logs for notebook instance lifecycle configurations in log group <code>/aws/sagemaker/NotebookInstances</code> in log stream <code>[notebook-instance-name]/[LifecycleConfigHook]</code>.</p> <p>Lifecycle configuration scripts cannot run for longer than 5 minutes. If a script runs for longer than 5 minutes, it fails and the notebook instance is not created or started.</p> <p>For information about notebook instance lifestyle configurations, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/notebook-lifecycle-config.html">Step 2.1: (Optional) Customize a Notebook Instance</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateNotebookInstanceLifecycleConfigOutput'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNotebookInstanceLifecycleConfigInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateNotebookInstanceLifecycleConfig
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.CreatePipeline:
    post:
      operationId: CreatePipeline
      description: Creates a pipeline using a JSON pipeline definition.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePipelineResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
        '481':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePipelineRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreatePipeline
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.CreatePresignedDomainUrl:
    post:
      operationId: CreatePresignedDomainUrl
      description: '<p>Creates a URL for a specified UserProfile in a Domain. When accessed in a web browser, the user will be automatically signed in to Amazon SageMaker Studio, and granted access to all of the Apps and files associated with the Domain''s Amazon Elastic File System (EFS) volume. This operation can only be called when the authentication mode equals IAM. </p> <p>The IAM role or user used to call this API defines the permissions to access the app. Once the presigned URL is created, no additional permission is required to access this URL. IAM authorization policies for this API are also enforced for every HTTP request and WebSocket frame that attempts to connect to the app.</p> <p>You can restrict access to this API and to the URL that it returns to a list of IP addresses, Amazon VPCs or Amazon VPC Endpoints that you specify. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/studio-interface-endpoint.html">Connect to SageMaker Studio Through an Interface VPC Endpoint</a> .</p> <note> <p>The URL that you get from a call to <code>CreatePresignedDomainUrl</code> has a default timeout of 5 minutes. You can configure this value using <code>ExpiresInSeconds</code>. If you try to use the URL after the timeout limit expires, you are directed to the Amazon Web Services console sign-in page.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePresignedDomainUrlResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePresignedDomainUrlRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreatePresignedDomainUrl
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.CreatePresignedNotebookInstanceUrl:
    post:
      operationId: CreatePresignedNotebookInstanceUrl
      description: '<p>Returns a URL that you can use to connect to the Jupyter server from a notebook instance. In the Amazon SageMaker console, when you choose <code>Open</code> next to a notebook instance, Amazon SageMaker opens a new tab showing the Jupyter server home page from the notebook instance. The console uses this API to get the URL and show the page.</p> <p> The IAM role or user used to call this API defines the permissions to access the notebook instance. Once the presigned URL is created, no additional permission is required to access this URL. IAM authorization policies for this API are also enforced for every HTTP request and WebSocket frame that attempts to connect to the notebook instance.</p> <p>You can restrict access to this API and to the URL that it returns to a list of IP addresses that you specify. Use the <code>NotIpAddress</code> condition operator and the <code>aws:SourceIP</code> condition context key to specify the list of IP addresses that you want to have access to the notebook instance. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/security_iam_id-based-policy-examples.html#nbi-ip-filter">Limit Access to a Notebook Instance by IP Address</a>.</p> <note> <p>The URL that you get from a call to <a>CreatePresignedNotebookInstanceUrl</a> is valid only for 5 minutes. If you try to use the URL after the 5-minute limit expires, you are directed to the Amazon Web Services console sign-in page.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePresignedNotebookInstanceUrlOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePresignedNotebookInstanceUrlInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreatePresignedNotebookInstanceUrl
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.CreateProcessingJob:
    post:
      operationId: CreateProcessingJob
      description: Creates a processing job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProcessingJobResponse'
        '480':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
        '481':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
        '482':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProcessingJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateProcessingJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.CreateProject:
    post:
      operationId: CreateProject
      description: Creates a machine learning (ML) project that can contain one or more templates that set up an ML pipeline from training to deploying an approved model.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProjectOutput'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateProject
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.CreateTrainingJob:
    post:
      operationId: CreateTrainingJob
      description: '<p>Starts a model training job. After training completes, Amazon SageMaker saves the resulting model artifacts to an Amazon S3 location that you specify. </p> <p>If you choose to host your model using Amazon SageMaker hosting services, you can use the resulting model artifacts as part of the model. You can also use the artifacts in a machine learning service other than Amazon SageMaker, provided that you know how to use them for inference. </p> <p>In the request body, you provide the following: </p> <ul> <li> <p> <code>AlgorithmSpecification</code> - Identifies the training algorithm to use. </p> </li> <li> <p> <code>HyperParameters</code> - Specify these algorithm-specific parameters to enable the estimation of model parameters during training. Hyperparameters can be tuned to optimize this learning process. For a list of hyperparameters for each training algorithm provided by Amazon SageMaker, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html">Algorithms</a>. </p> </li> <li> <p> <code>InputDataConfig</code> - Describes the training dataset and the Amazon S3, EFS, or FSx location where it is stored.</p> </li> <li> <p> <code>OutputDataConfig</code> - Identifies the Amazon S3 bucket where you want Amazon SageMaker to save the results of model training. </p> </li> <li> <p> <code>ResourceConfig</code> - Identifies the resources, ML compute instances, and ML storage volumes to deploy for model training. In distributed training, you specify more than one instance. </p> </li> <li> <p> <code>EnableManagedSpotTraining</code> - Optimize the cost of training machine learning models by up to 80% by using Amazon EC2 Spot instances. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/model-managed-spot-training.html">Managed Spot Training</a>. </p> </li> <li> <p> <code>RoleArn</code> - The Amazon Resource Name (ARN) that Amazon SageMaker assumes to perform tasks on your behalf during model training. You must grant this role the necessary permissions so that Amazon SageMaker can successfully complete model training. </p> </li> <li> <p> <code>StoppingCondition</code> - To help cap training costs, use <code>MaxRuntimeInSeconds</code> to set a time limit for training. Use <code>MaxWaitTimeInSeconds</code> to specify how long a managed spot training job has to complete. </p> </li> <li> <p> <code>Environment</code> - The environment variables to set in the Docker container.</p> </li> <li> <p> <code>RetryStrategy</code> - The number of times to retry the job when the job fails due to an <code>InternalServerError</code>.</p> </li> </ul> <p> For more information about Amazon SageMaker, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/how-it-works.html">How It Works</a>. </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTrainingJobResponse'
        '480':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
        '481':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
        '482':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTrainingJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateTrainingJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.CreateTransformJob:
    post:
      operationId: CreateTransformJob
      description: '<p>Starts a transform job. A transform job uses a trained model to get inferences on a dataset and saves these results to an Amazon S3 location that you specify.</p> <p>To perform batch transformations, you create a transform job and use the data that you have readily available.</p> <p>In the request body, you provide the following:</p> <ul> <li> <p> <code>TransformJobName</code> - Identifies the transform job. The name must be unique within an Amazon Web Services Region in an Amazon Web Services account.</p> </li> <li> <p> <code>ModelName</code> - Identifies the model to use. <code>ModelName</code> must be the name of an existing Amazon SageMaker model in the same Amazon Web Services Region and Amazon Web Services account. For information on creating a model, see <a>CreateModel</a>.</p> </li> <li> <p> <code>TransformInput</code> - Describes the dataset to be transformed and the Amazon S3 location where it is stored.</p> </li> <li> <p> <code>TransformOutput</code> - Identifies the Amazon S3 location where you want Amazon SageMaker to save the results from the transform job.</p> </li> <li> <p> <code>TransformResources</code> - Identifies the ML compute instances for the transform job.</p> </li> </ul> <p>For more information about how batch transformation works, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/batch-transform.html">Batch Transform</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTransformJobResponse'
        '480':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
        '481':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
        '482':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransformJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateTransformJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.CreateTrial:
    post:
      operationId: CreateTrial
      description: '<p>Creates an SageMaker <i>trial</i>. A trial is a set of steps called <i>trial components</i> that produce a machine learning model. A trial is part of a single SageMaker <i>experiment</i>.</p> <p>When you use SageMaker Studio or the SageMaker Python SDK, all experiments, trials, and trial components are automatically tracked, logged, and indexed. When you use the Amazon Web Services SDK for Python (Boto), you must use the logging APIs provided by the SDK.</p> <p>You can add tags to a trial and then use the <a>Search</a> API to search for the tags.</p> <p>To get a list of all your trials, call the <a>ListTrials</a> API. To view a trial''s properties, call the <a>DescribeTrial</a> API. To create a trial component, call the <a>CreateTrialComponent</a> API.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTrialResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
        '481':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTrialRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateTrial
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.CreateTrialComponent:
    post:
      operationId: CreateTrialComponent
      description: '<p>Creates a <i>trial component</i>, which is a stage of a machine learning <i>trial</i>. A trial is composed of one or more trial components. A trial component can be used in multiple trials.</p> <p>Trial components include pre-processing jobs, training jobs, and batch transform jobs.</p> <p>When you use SageMaker Studio or the SageMaker Python SDK, all experiments, trials, and trial components are automatically tracked, logged, and indexed. When you use the Amazon Web Services SDK for Python (Boto), you must use the logging APIs provided by the SDK.</p> <p>You can add tags to a trial component and then use the <a>Search</a> API to search for the tags.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTrialComponentResponse'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTrialComponentRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateTrialComponent
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.CreateUserProfile:
    post:
      operationId: CreateUserProfile
      description: 'Creates a user profile. A user profile represents a single user within a domain, and is the main way to reference a "person" for the purposes of sharing, reporting, and other user-oriented features. This entity is created when a user onboards to Amazon SageMaker Studio. If an administrator invites a person by email or imports them from SSO, a user profile is automatically created. A user profile is the primary holder of settings for an individual user and has a reference to the user''s private Amazon Elastic File System (EFS) home directory. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserProfileResponse'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
        '481':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserProfileRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateUserProfile
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.CreateWorkforce:
    post:
      operationId: CreateWorkforce
      description: '<p>Use this operation to create a workforce. This operation will return an error if a workforce already exists in the Amazon Web Services Region that you specify. You can only create one workforce in each Amazon Web Services Region per Amazon Web Services account.</p> <p>If you want to create a new workforce in an Amazon Web Services Region where a workforce already exists, use the API operation to delete the existing workforce and then use <code>CreateWorkforce</code> to create a new workforce.</p> <p>To create a private workforce using Amazon Cognito, you must specify a Cognito user pool in <code>CognitoConfig</code>. You can also create an Amazon Cognito workforce using the Amazon SageMaker console. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-workforce-create-private.html"> Create a Private Workforce (Amazon Cognito)</a>.</p> <p>To create a private workforce using your own OIDC Identity Provider (IdP), specify your IdP configuration in <code>OidcConfig</code>. Your OIDC IdP must support <i>groups</i> because groups are used by Ground Truth and Amazon A2I to create work teams. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-workforce-create-private-oidc.html"> Create a Private Workforce (OIDC IdP)</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWorkforceResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkforceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateWorkforce
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.CreateWorkteam:
    post:
      operationId: CreateWorkteam
      description: <p>Creates a new work team for labeling your data. A work team is defined by one or more Amazon Cognito user pools. You must first create the user pools before you can create a work team.</p> <p>You cannot create more than 25 work teams in an account and region.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWorkteamResponse'
        '480':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
        '481':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkteamRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateWorkteam
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DeleteAction:
    post:
      operationId: DeleteAction
      description: Deletes an action.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteActionResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteActionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteAction
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DeleteAlgorithm:
    post:
      operationId: DeleteAlgorithm
      description: Removes the specified algorithm from your account.
      responses:
        '200':
          description: Success
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAlgorithmInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteAlgorithm
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DeleteApp:
    post:
      operationId: DeleteApp
      description: Used to stop and delete an app.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
        '481':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAppRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteApp
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DeleteAppImageConfig:
    post:
      operationId: DeleteAppImageConfig
      description: Deletes an AppImageConfig.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAppImageConfigRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteAppImageConfig
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DeleteArtifact:
    post:
      operationId: DeleteArtifact
      description: Deletes an artifact. Either <code>ArtifactArn</code> or <code>Source</code> must be specified.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteArtifactResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteArtifactRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteArtifact
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DeleteAssociation:
    post:
      operationId: DeleteAssociation
      description: Deletes an association.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAssociationResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAssociationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteAssociation
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DeleteCodeRepository:
    post:
      operationId: DeleteCodeRepository
      description: Deletes the specified Git repository from your account.
      responses:
        '200':
          description: Success
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteCodeRepositoryInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteCodeRepository
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DeleteContext:
    post:
      operationId: DeleteContext
      description: Deletes an context.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteContextResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteContextRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteContext
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DeleteDataQualityJobDefinition:
    post:
      operationId: DeleteDataQualityJobDefinition
      description: Deletes a data quality monitoring job definition.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDataQualityJobDefinitionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteDataQualityJobDefinition
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DeleteDeviceFleet:
    post:
      operationId: DeleteDeviceFleet
      description: Deletes a fleet.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDeviceFleetRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteDeviceFleet
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DeleteDomain:
    post:
      operationId: DeleteDomain
      description: 'Used to delete a domain. If you onboarded with IAM mode, you will need to delete your domain to onboard again using SSO. Use with caution. All of the members of the domain will lose access to their EFS volume, including data, notebooks, and other artifacts. '
      responses:
        '200':
          description: Success
        '480':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
        '481':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDomainRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteDomain
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DeleteEndpoint:
    post:
      operationId: DeleteEndpoint
      description: '<p>Deletes an endpoint. Amazon SageMaker frees up all of the resources that were deployed when the endpoint was created. </p> <p>Amazon SageMaker retires any custom KMS key grants associated with the endpoint, meaning you don''t need to use the <a href="http://docs.aws.amazon.com/kms/latest/APIReference/API_RevokeGrant.html">RevokeGrant</a> API call.</p>'
      responses:
        '200':
          description: Success
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteEndpointInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteEndpoint
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DeleteEndpointConfig:
    post:
      operationId: DeleteEndpointConfig
      description: <p>Deletes an endpoint configuration. The <code>DeleteEndpointConfig</code> API deletes only the specified configuration. It does not delete endpoints created using the configuration. </p> <p>You must not delete an <code>EndpointConfig</code> in use by an endpoint that is live or while the <code>UpdateEndpoint</code> or <code>CreateEndpoint</code> operations are being performed on the endpoint. If you delete the <code>EndpointConfig</code> of an endpoint that is active or being created or updated you may lose visibility into the instance type the endpoint is using. The endpoint must be deleted in order to stop incurring charges.</p>
      responses:
        '200':
          description: Success
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteEndpointConfigInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteEndpointConfig
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DeleteExperiment:
    post:
      operationId: DeleteExperiment
      description: Deletes an SageMaker experiment. All trials associated with the experiment must be deleted first. Use the <a>ListTrials</a> API to get a list of the trials associated with the experiment.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteExperimentResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteExperimentRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteExperiment
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DeleteFeatureGroup:
    post:
      operationId: DeleteFeatureGroup
      description: <p>Delete the <code>FeatureGroup</code> and any data that was written to the <code>OnlineStore</code> of the <code>FeatureGroup</code>. Data cannot be accessed from the <code>OnlineStore</code> immediately after <code>DeleteFeatureGroup</code> is called. </p> <p>Data written into the <code>OfflineStore</code> will not be deleted. The Amazon Web Services Glue database and tables that are automatically created for your <code>OfflineStore</code> are not deleted. </p>
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteFeatureGroupRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteFeatureGroup
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DeleteFlowDefinition:
    post:
      operationId: DeleteFlowDefinition
      description: Deletes the specified flow definition.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFlowDefinitionResponse'
        '480':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
        '481':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteFlowDefinitionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteFlowDefinition
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DeleteHumanTaskUi:
    post:
      operationId: DeleteHumanTaskUi
      description: '<p>Use this operation to delete a human task user interface (worker task template).</p> <p> To see a list of human task user interfaces (work task templates) in your account, use . When you delete a worker task template, it no longer appears when you call <code>ListHumanTaskUis</code>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteHumanTaskUiResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteHumanTaskUiRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteHumanTaskUi
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DeleteImage:
    post:
      operationId: DeleteImage
      description: Deletes a SageMaker image and all versions of the image. The container images aren't deleted.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteImageResponse'
        '480':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
        '481':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteImageRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteImage
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DeleteImageVersion:
    post:
      operationId: DeleteImageVersion
      description: Deletes a version of a SageMaker image. The container image the version represents isn't deleted.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteImageVersionResponse'
        '480':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
        '481':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteImageVersionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteImageVersion
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DeleteModel:
    post:
      operationId: DeleteModel
      description: 'Deletes a model. The <code>DeleteModel</code> API deletes only the model entry that was created in Amazon SageMaker when you called the <code>CreateModel</code> API. It does not delete model artifacts, inference code, or the IAM role that you specified when creating the model. '
      responses:
        '200':
          description: Success
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteModelInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteModel
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DeleteModelBiasJobDefinition:
    post:
      operationId: DeleteModelBiasJobDefinition
      description: Deletes an Amazon SageMaker model bias job definition.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteModelBiasJobDefinitionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteModelBiasJobDefinition
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DeleteModelExplainabilityJobDefinition:
    post:
      operationId: DeleteModelExplainabilityJobDefinition
      description: Deletes an Amazon SageMaker model explainability job definition.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteModelExplainabilityJobDefinitionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteModelExplainabilityJobDefinition
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DeleteModelPackage:
    post:
      operationId: DeleteModelPackage
      description: <p>Deletes a model package.</p> <p>A model package is used to create Amazon SageMaker models or list on Amazon Web Services Marketplace. Buyers can subscribe to model packages listed on Amazon Web Services Marketplace to create models in Amazon SageMaker.</p>
      responses:
        '200':
          description: Success
        '480':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteModelPackageInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteModelPackage
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DeleteModelPackageGroup:
    post:
      operationId: DeleteModelPackageGroup
      description: Deletes the specified model group.
      responses:
        '200':
          description: Success
        '480':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteModelPackageGroupInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteModelPackageGroup
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DeleteModelPackageGroupPolicy:
    post:
      operationId: DeleteModelPackageGroupPolicy
      description: Deletes a model group resource policy.
      responses:
        '200':
          description: Success
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteModelPackageGroupPolicyInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteModelPackageGroupPolicy
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DeleteModelQualityJobDefinition:
    post:
      operationId: DeleteModelQualityJobDefinition
      description: Deletes the secified model quality monitoring job definition.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteModelQualityJobDefinitionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteModelQualityJobDefinition
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DeleteMonitoringSchedule:
    post:
      operationId: DeleteMonitoringSchedule
      description: 'Deletes a monitoring schedule. Also stops the schedule had not already been stopped. This does not delete the job execution history of the monitoring schedule. '
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteMonitoringScheduleRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteMonitoringSchedule
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DeleteNotebookInstance:
    post:
      operationId: DeleteNotebookInstance
      description: '<p> Deletes an Amazon SageMaker notebook instance. Before you can delete a notebook instance, you must call the <code>StopNotebookInstance</code> API. </p> <important> <p>When you delete a notebook instance, you lose all of your data. Amazon SageMaker removes the ML compute instance, and deletes the ML storage volume and the network interface associated with the notebook instance. </p> </important>'
      responses:
        '200':
          description: Success
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteNotebookInstanceInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteNotebookInstance
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DeleteNotebookInstanceLifecycleConfig:
    post:
      operationId: DeleteNotebookInstanceLifecycleConfig
      description: Deletes a notebook instance lifecycle configuration.
      responses:
        '200':
          description: Success
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteNotebookInstanceLifecycleConfigInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteNotebookInstanceLifecycleConfig
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DeletePipeline:
    post:
      operationId: DeletePipeline
      description: 'Deletes a pipeline if there are no running instances of the pipeline. To delete a pipeline, you must stop all running instances of the pipeline using the <code>StopPipelineExecution</code> API. When you delete a pipeline, all instances of the pipeline are deleted.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePipelineResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeletePipelineRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeletePipeline
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DeleteProject:
    post:
      operationId: DeleteProject
      description: Delete the specified project.
      responses:
        '200':
          description: Success
        '480':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteProjectInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteProject
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DeleteTags:
    post:
      operationId: DeleteTags
      description: '<p>Deletes the specified tags from an Amazon SageMaker resource.</p> <p>To list a resource''s tags, use the <code>ListTags</code> API. </p> <note> <p>When you call this API to delete tags from a hyperparameter tuning job, the deleted tags are not removed from training jobs that the hyperparameter tuning job launched before you called this API.</p> </note> <note> <p>When you call this API to delete tags from a SageMaker Studio Domain or User Profile, the deleted tags are not removed from Apps that the SageMaker Studio Domain or User Profile launched before you called this API.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTagsOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTagsInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteTags
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DeleteTrial:
    post:
      operationId: DeleteTrial
      description: Deletes the specified trial. All trial components that make up the trial must be deleted first. Use the <a>DescribeTrialComponent</a> API to get the list of trial components.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTrialResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTrialRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteTrial
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DeleteTrialComponent:
    post:
      operationId: DeleteTrialComponent
      description: 'Deletes the specified trial component. A trial component must be disassociated from all trials before the trial component can be deleted. To disassociate a trial component from a trial, call the <a>DisassociateTrialComponent</a> API.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTrialComponentResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTrialComponentRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteTrialComponent
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DeleteUserProfile:
    post:
      operationId: DeleteUserProfile
      description: 'Deletes a user profile. When a user profile is deleted, the user loses access to their EFS volume, including data, notebooks, and other artifacts.'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
        '481':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteUserProfileRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteUserProfile
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DeleteWorkforce:
    post:
      operationId: DeleteWorkforce
      description: '<p>Use this operation to delete a workforce.</p> <p>If you want to create a new workforce in an Amazon Web Services Region where a workforce already exists, use this operation to delete the existing workforce and then use to create a new workforce.</p> <important> <p>If a private workforce contains one or more work teams, you must use the operation to delete all work teams before you delete the workforce. If you try to delete a workforce that contains one or more work teams, you will recieve a <code>ResourceInUse</code> error.</p> </important>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteWorkforceResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteWorkforceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteWorkforce
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DeleteWorkteam:
    post:
      operationId: DeleteWorkteam
      description: Deletes an existing work team. This operation can't be undone.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteWorkteamResponse'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteWorkteamRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteWorkteam
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DeregisterDevices:
    post:
      operationId: DeregisterDevices
      description: 'Deregisters the specified devices. After you deregister a device, you will need to re-register the devices.'
      responses:
        '200':
          description: Success
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeregisterDevicesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeregisterDevices
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DescribeAction:
    post:
      operationId: DescribeAction
      description: Describes an action.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeActionResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeActionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeAction
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DescribeAlgorithm:
    post:
      operationId: DescribeAlgorithm
      description: Returns a description of the specified algorithm that is in your account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAlgorithmOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeAlgorithmInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeAlgorithm
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DescribeApp:
    post:
      operationId: DescribeApp
      description: Describes the app.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAppResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeAppRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeApp
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DescribeAppImageConfig:
    post:
      operationId: DescribeAppImageConfig
      description: Describes an AppImageConfig.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAppImageConfigResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeAppImageConfigRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeAppImageConfig
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DescribeArtifact:
    post:
      operationId: DescribeArtifact
      description: Describes an artifact.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeArtifactResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeArtifactRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeArtifact
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DescribeAutoMLJob:
    post:
      operationId: DescribeAutoMLJob
      description: Returns information about an Amazon SageMaker AutoML job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAutoMLJobResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeAutoMLJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeAutoMLJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DescribeCodeRepository:
    post:
      operationId: DescribeCodeRepository
      description: Gets details about the specified Git repository.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeCodeRepositoryOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeCodeRepositoryInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeCodeRepository
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DescribeCompilationJob:
    post:
      operationId: DescribeCompilationJob
      description: '<p>Returns information about a model compilation job.</p> <p>To create a model compilation job, use <a>CreateCompilationJob</a>. To get information about multiple model compilation jobs, use <a>ListCompilationJobs</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeCompilationJobResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeCompilationJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeCompilationJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DescribeContext:
    post:
      operationId: DescribeContext
      description: Describes a context.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeContextResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeContextRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeContext
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DescribeDataQualityJobDefinition:
    post:
      operationId: DescribeDataQualityJobDefinition
      description: Gets the details of a data quality monitoring job definition.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDataQualityJobDefinitionResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDataQualityJobDefinitionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeDataQualityJobDefinition
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DescribeDevice:
    post:
      operationId: DescribeDevice
      description: Describes the device.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDeviceResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDeviceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeDevice
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DescribeDeviceFleet:
    post:
      operationId: DescribeDeviceFleet
      description: A description of the fleet the device belongs to.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDeviceFleetResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDeviceFleetRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeDeviceFleet
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DescribeDomain:
    post:
      operationId: DescribeDomain
      description: The description of the domain.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDomainResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDomainRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeDomain
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DescribeEdgePackagingJob:
    post:
      operationId: DescribeEdgePackagingJob
      description: A description of edge packaging jobs.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeEdgePackagingJobResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeEdgePackagingJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeEdgePackagingJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DescribeEndpoint:
    post:
      operationId: DescribeEndpoint
      description: Returns the description of an endpoint.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeEndpointOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeEndpointInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeEndpoint
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DescribeEndpointConfig:
    post:
      operationId: DescribeEndpointConfig
      description: Returns the description of an endpoint configuration created using the <code>CreateEndpointConfig</code> API.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeEndpointConfigOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeEndpointConfigInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeEndpointConfig
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DescribeExperiment:
    post:
      operationId: DescribeExperiment
      description: Provides a list of an experiment's properties.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeExperimentResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeExperimentRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeExperiment
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DescribeFeatureGroup:
    post:
      operationId: DescribeFeatureGroup
      description: 'Use this operation to describe a <code>FeatureGroup</code>. The response includes information on the creation time, <code>FeatureGroup</code> name, the unique identifier for each <code>FeatureGroup</code>, and more.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeFeatureGroupResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeFeatureGroupRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeFeatureGroup
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DescribeFlowDefinition:
    post:
      operationId: DescribeFlowDefinition
      description: Returns information about the specified flow definition.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeFlowDefinitionResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeFlowDefinitionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeFlowDefinition
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DescribeHumanTaskUi:
    post:
      operationId: DescribeHumanTaskUi
      description: Returns information about the requested human task user interface (worker task template).
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeHumanTaskUiResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeHumanTaskUiRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeHumanTaskUi
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DescribeHyperParameterTuningJob:
    post:
      operationId: DescribeHyperParameterTuningJob
      description: Gets a description of a hyperparameter tuning job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeHyperParameterTuningJobResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeHyperParameterTuningJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeHyperParameterTuningJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DescribeImage:
    post:
      operationId: DescribeImage
      description: Describes a SageMaker image.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeImageResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeImageRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeImage
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DescribeImageVersion:
    post:
      operationId: DescribeImageVersion
      description: Describes a version of a SageMaker image.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeImageVersionResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeImageVersionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeImageVersion
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DescribeLabelingJob:
    post:
      operationId: DescribeLabelingJob
      description: Gets information about a labeling job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeLabelingJobResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeLabelingJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeLabelingJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DescribeModel:
    post:
      operationId: DescribeModel
      description: Describes a model that you created using the <code>CreateModel</code> API.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeModelOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeModelInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeModel
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DescribeModelBiasJobDefinition:
    post:
      operationId: DescribeModelBiasJobDefinition
      description: Returns a description of a model bias job definition.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeModelBiasJobDefinitionResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeModelBiasJobDefinitionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeModelBiasJobDefinition
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DescribeModelExplainabilityJobDefinition:
    post:
      operationId: DescribeModelExplainabilityJobDefinition
      description: Returns a description of a model explainability job definition.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeModelExplainabilityJobDefinitionResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeModelExplainabilityJobDefinitionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeModelExplainabilityJobDefinition
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DescribeModelPackage:
    post:
      operationId: DescribeModelPackage
      description: '<p>Returns a description of the specified model package, which is used to create Amazon SageMaker models or list them on Amazon Web Services Marketplace.</p> <p>To create models in Amazon SageMaker, buyers can subscribe to model packages listed on Amazon Web Services Marketplace.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeModelPackageOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeModelPackageInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeModelPackage
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DescribeModelPackageGroup:
    post:
      operationId: DescribeModelPackageGroup
      description: Gets a description for the specified model group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeModelPackageGroupOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeModelPackageGroupInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeModelPackageGroup
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DescribeModelQualityJobDefinition:
    post:
      operationId: DescribeModelQualityJobDefinition
      description: Returns a description of a model quality job definition.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeModelQualityJobDefinitionResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeModelQualityJobDefinitionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeModelQualityJobDefinition
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DescribeMonitoringSchedule:
    post:
      operationId: DescribeMonitoringSchedule
      description: Describes the schedule for a monitoring job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeMonitoringScheduleResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeMonitoringScheduleRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeMonitoringSchedule
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DescribeNotebookInstance:
    post:
      operationId: DescribeNotebookInstance
      description: Returns information about a notebook instance.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeNotebookInstanceOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeNotebookInstanceInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeNotebookInstance
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DescribeNotebookInstanceLifecycleConfig:
    post:
      operationId: DescribeNotebookInstanceLifecycleConfig
      description: '<p>Returns a description of a notebook instance lifecycle configuration.</p> <p>For information about notebook instance lifestyle configurations, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/notebook-lifecycle-config.html">Step 2.1: (Optional) Customize a Notebook Instance</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeNotebookInstanceLifecycleConfigOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeNotebookInstanceLifecycleConfigInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeNotebookInstanceLifecycleConfig
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DescribePipeline:
    post:
      operationId: DescribePipeline
      description: Describes the details of a pipeline.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePipelineResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribePipelineRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribePipeline
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DescribePipelineDefinitionForExecution:
    post:
      operationId: DescribePipelineDefinitionForExecution
      description: Describes the details of an execution's pipeline definition.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePipelineDefinitionForExecutionResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribePipelineDefinitionForExecutionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribePipelineDefinitionForExecution
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DescribePipelineExecution:
    post:
      operationId: DescribePipelineExecution
      description: Describes the details of a pipeline execution.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePipelineExecutionResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribePipelineExecutionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribePipelineExecution
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DescribeProcessingJob:
    post:
      operationId: DescribeProcessingJob
      description: Returns a description of a processing job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeProcessingJobResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeProcessingJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeProcessingJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DescribeProject:
    post:
      operationId: DescribeProject
      description: Describes the details of a project.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeProjectOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeProjectInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeProject
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DescribeSubscribedWorkteam:
    post:
      operationId: DescribeSubscribedWorkteam
      description: Gets information about a work team provided by a vendor. It returns details about the subscription with a vendor in the Amazon Web Services Marketplace.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeSubscribedWorkteamResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeSubscribedWorkteamRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeSubscribedWorkteam
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DescribeTrainingJob:
    post:
      operationId: DescribeTrainingJob
      description: '<p>Returns information about a training job. </p> <p>Some of the attributes below only appear if the training job successfully starts. If the training job fails, <code>TrainingJobStatus</code> is <code>Failed</code> and, depending on the <code>FailureReason</code>, attributes like <code>TrainingStartTime</code>, <code>TrainingTimeInSeconds</code>, <code>TrainingEndTime</code>, and <code>BillableTimeInSeconds</code> may not be present in the response.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeTrainingJobResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeTrainingJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeTrainingJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DescribeTransformJob:
    post:
      operationId: DescribeTransformJob
      description: Returns information about a transform job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeTransformJobResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeTransformJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeTransformJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DescribeTrial:
    post:
      operationId: DescribeTrial
      description: Provides a list of a trial's properties.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeTrialResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeTrialRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeTrial
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DescribeTrialComponent:
    post:
      operationId: DescribeTrialComponent
      description: Provides a list of a trials component's properties.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeTrialComponentResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeTrialComponentRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeTrialComponent
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DescribeUserProfile:
    post:
      operationId: DescribeUserProfile
      description: 'Describes a user profile. For more information, see <code>CreateUserProfile</code>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeUserProfileResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeUserProfileRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeUserProfile
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DescribeWorkforce:
    post:
      operationId: DescribeWorkforce
      description: '<p>Lists private workforce information, including workforce name, Amazon Resource Name (ARN), and, if applicable, allowed IP address ranges (<a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html">CIDRs</a>). Allowable IP address ranges are the IP addresses that workers can use to access tasks. </p> <important> <p>This operation applies only to private workforces.</p> </important>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeWorkforceResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeWorkforceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeWorkforce
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DescribeWorkteam:
    post:
      operationId: DescribeWorkteam
      description: 'Gets information about a specific work team. You can see information such as the create date, the last updated date, membership information, and the work team''s Amazon Resource Name (ARN).'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeWorkteamResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeWorkteamRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeWorkteam
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DisableSagemakerServicecatalogPortfolio:
    post:
      operationId: DisableSagemakerServicecatalogPortfolio
      description: Disables using Service Catalog in SageMaker. Service Catalog is used to create SageMaker projects.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisableSagemakerServicecatalogPortfolioOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisableSagemakerServicecatalogPortfolioInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DisableSagemakerServicecatalogPortfolio
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.DisassociateTrialComponent:
    post:
      operationId: DisassociateTrialComponent
      description: '<p>Disassociates a trial component from a trial. This doesn''t effect other trials the component is associated with. Before you can delete a component, you must disassociate the component from all trials it is associated with. To associate a trial component with a trial, call the <a>AssociateTrialComponent</a> API.</p> <p>To get a list of the trials a component is associated with, use the <a>Search</a> API. Specify <code>ExperimentTrialComponent</code> for the <code>Resource</code> parameter. The list appears in the response under <code>Results.TrialComponent.Parents</code>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateTrialComponentResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisassociateTrialComponentRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DisassociateTrialComponent
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.EnableSagemakerServicecatalogPortfolio:
    post:
      operationId: EnableSagemakerServicecatalogPortfolio
      description: Enables using Service Catalog in SageMaker. Service Catalog is used to create SageMaker projects.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnableSagemakerServicecatalogPortfolioOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableSagemakerServicecatalogPortfolioInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.EnableSagemakerServicecatalogPortfolio
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.GetDeviceFleetReport:
    post:
      operationId: GetDeviceFleetReport
      description: Describes a fleet.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDeviceFleetReportResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDeviceFleetReportRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.GetDeviceFleetReport
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.GetModelPackageGroupPolicy:
    post:
      operationId: GetModelPackageGroupPolicy
      description: 'Gets a resource policy that manages access for a model group. For information about resource policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_identity-vs-resource.html">Identity-based policies and resource-based policies</a> in the <i>Amazon Web Services Identity and Access Management User Guide.</i>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetModelPackageGroupPolicyOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetModelPackageGroupPolicyInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.GetModelPackageGroupPolicy
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.GetSagemakerServicecatalogPortfolioStatus:
    post:
      operationId: GetSagemakerServicecatalogPortfolioStatus
      description: Gets the status of Service Catalog in SageMaker. Service Catalog is used to create SageMaker projects.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSagemakerServicecatalogPortfolioStatusOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSagemakerServicecatalogPortfolioStatusInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.GetSagemakerServicecatalogPortfolioStatus
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.GetSearchSuggestions:
    post:
      operationId: GetSearchSuggestions
      description: 'An auto-complete API for the search functionality in the Amazon SageMaker console. It returns suggestions of possible matches for the property name to use in <code>Search</code> queries. Provides suggestions for <code>HyperParameters</code>, <code>Tags</code>, and <code>Metrics</code>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSearchSuggestionsResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSearchSuggestionsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.GetSearchSuggestions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListActions:
    post:
      operationId: ListActions
      description: Lists the actions in your account and their properties.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListActionsResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListActionsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListActions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListAlgorithms:
    post:
      operationId: ListAlgorithms
      description: Lists the machine learning algorithms that have been created.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAlgorithmsOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAlgorithmsInput'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListAlgorithms
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListAppImageConfigs:
    post:
      operationId: ListAppImageConfigs
      description: 'Lists the AppImageConfigs in your account and their properties. The list can be filtered by creation time or modified time, and whether the AppImageConfig name contains a specified string.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAppImageConfigsResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAppImageConfigsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListAppImageConfigs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListApps:
    post:
      operationId: ListApps
      description: Lists apps.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAppsResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAppsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListApps
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListArtifacts:
    post:
      operationId: ListArtifacts
      description: Lists the artifacts in your account and their properties.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListArtifactsResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListArtifactsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListArtifacts
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListAssociations:
    post:
      operationId: ListAssociations
      description: Lists the associations in your account and their properties.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAssociationsResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAssociationsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListAssociations
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListAutoMLJobs:
    post:
      operationId: ListAutoMLJobs
      description: Request a list of jobs.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAutoMLJobsResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAutoMLJobsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListAutoMLJobs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListCandidatesForAutoMLJob:
    post:
      operationId: ListCandidatesForAutoMLJob
      description: List the candidates created for the job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCandidatesForAutoMLJobResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListCandidatesForAutoMLJobRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListCandidatesForAutoMLJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListCodeRepositories:
    post:
      operationId: ListCodeRepositories
      description: Gets a list of the Git repositories in your account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCodeRepositoriesOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListCodeRepositoriesInput'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListCodeRepositories
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListCompilationJobs:
    post:
      operationId: ListCompilationJobs
      description: '<p>Lists model compilation jobs that satisfy various filters.</p> <p>To create a model compilation job, use <a>CreateCompilationJob</a>. To get information about a particular model compilation job you have created, use <a>DescribeCompilationJob</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCompilationJobsResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListCompilationJobsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListCompilationJobs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListContexts:
    post:
      operationId: ListContexts
      description: Lists the contexts in your account and their properties.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListContextsResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListContextsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListContexts
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListDataQualityJobDefinitions:
    post:
      operationId: ListDataQualityJobDefinitions
      description: Lists the data quality job definitions in your account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDataQualityJobDefinitionsResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDataQualityJobDefinitionsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListDataQualityJobDefinitions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListDeviceFleets:
    post:
      operationId: ListDeviceFleets
      description: Returns a list of devices in the fleet.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDeviceFleetsResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDeviceFleetsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListDeviceFleets
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListDevices:
    post:
      operationId: ListDevices
      description: A list of devices.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDevicesResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDevicesRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListDevices
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListDomains:
    post:
      operationId: ListDomains
      description: Lists the domains.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDomainsResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDomainsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListDomains
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListEdgePackagingJobs:
    post:
      operationId: ListEdgePackagingJobs
      description: Returns a list of edge packaging jobs.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEdgePackagingJobsResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListEdgePackagingJobsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListEdgePackagingJobs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListEndpointConfigs:
    post:
      operationId: ListEndpointConfigs
      description: Lists endpoint configurations.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEndpointConfigsOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListEndpointConfigsInput'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListEndpointConfigs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListEndpoints:
    post:
      operationId: ListEndpoints
      description: Lists endpoints.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEndpointsOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListEndpointsInput'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListEndpoints
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListExperiments:
    post:
      operationId: ListExperiments
      description: Lists all the experiments in your account. The list can be filtered to show only experiments that were created in a specific time range. The list can be sorted by experiment name or creation time.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListExperimentsResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListExperimentsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListExperiments
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListFeatureGroups:
    post:
      operationId: ListFeatureGroups
      description: List <code>FeatureGroup</code>s based on given filter and order.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFeatureGroupsResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFeatureGroupsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListFeatureGroups
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListFlowDefinitions:
    post:
      operationId: ListFlowDefinitions
      description: Returns information about the flow definitions in your account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFlowDefinitionsResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFlowDefinitionsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListFlowDefinitions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListHumanTaskUis:
    post:
      operationId: ListHumanTaskUis
      description: Returns information about the human task user interfaces in your account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHumanTaskUisResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListHumanTaskUisRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListHumanTaskUis
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListHyperParameterTuningJobs:
    post:
      operationId: ListHyperParameterTuningJobs
      description: Gets a list of <a>HyperParameterTuningJobSummary</a> objects that describe the hyperparameter tuning jobs launched in your account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHyperParameterTuningJobsResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListHyperParameterTuningJobsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListHyperParameterTuningJobs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListImageVersions:
    post:
      operationId: ListImageVersions
      description: Lists the versions of a specified image and their properties. The list can be filtered by creation time or modified time.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListImageVersionsResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListImageVersionsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListImageVersions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListImages:
    post:
      operationId: ListImages
      description: 'Lists the images in your account and their properties. The list can be filtered by creation time or modified time, and whether the image name contains a specified string.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListImagesResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListImagesRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListImages
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListLabelingJobs:
    post:
      operationId: ListLabelingJobs
      description: Gets a list of labeling jobs.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLabelingJobsResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListLabelingJobsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListLabelingJobs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListLabelingJobsForWorkteam:
    post:
      operationId: ListLabelingJobsForWorkteam
      description: Gets a list of labeling jobs assigned to a specified work team.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLabelingJobsForWorkteamResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListLabelingJobsForWorkteamRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListLabelingJobsForWorkteam
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListModelBiasJobDefinitions:
    post:
      operationId: ListModelBiasJobDefinitions
      description: Lists model bias jobs definitions that satisfy various filters.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListModelBiasJobDefinitionsResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListModelBiasJobDefinitionsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListModelBiasJobDefinitions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListModelExplainabilityJobDefinitions:
    post:
      operationId: ListModelExplainabilityJobDefinitions
      description: Lists model explainability job definitions that satisfy various filters.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListModelExplainabilityJobDefinitionsResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListModelExplainabilityJobDefinitionsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListModelExplainabilityJobDefinitions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListModelPackageGroups:
    post:
      operationId: ListModelPackageGroups
      description: Gets a list of the model groups in your Amazon Web Services account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListModelPackageGroupsOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListModelPackageGroupsInput'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListModelPackageGroups
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListModelPackages:
    post:
      operationId: ListModelPackages
      description: Lists the model packages that have been created.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListModelPackagesOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListModelPackagesInput'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListModelPackages
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListModelQualityJobDefinitions:
    post:
      operationId: ListModelQualityJobDefinitions
      description: Gets a list of model quality monitoring job definitions in your account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListModelQualityJobDefinitionsResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListModelQualityJobDefinitionsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListModelQualityJobDefinitions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListModels:
    post:
      operationId: ListModels
      description: Lists models created with the <code>CreateModel</code> API.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListModelsOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListModelsInput'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListModels
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListMonitoringExecutions:
    post:
      operationId: ListMonitoringExecutions
      description: Returns list of all monitoring job executions.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMonitoringExecutionsResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListMonitoringExecutionsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListMonitoringExecutions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListMonitoringSchedules:
    post:
      operationId: ListMonitoringSchedules
      description: Returns list of all monitoring schedules.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMonitoringSchedulesResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListMonitoringSchedulesRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListMonitoringSchedules
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListNotebookInstanceLifecycleConfigs:
    post:
      operationId: ListNotebookInstanceLifecycleConfigs
      description: Lists notebook instance lifestyle configurations created with the <a>CreateNotebookInstanceLifecycleConfig</a> API.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNotebookInstanceLifecycleConfigsOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListNotebookInstanceLifecycleConfigsInput'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListNotebookInstanceLifecycleConfigs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListNotebookInstances:
    post:
      operationId: ListNotebookInstances
      description: 'Returns a list of the Amazon SageMaker notebook instances in the requester''s account in an Amazon Web Services Region. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNotebookInstancesOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListNotebookInstancesInput'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListNotebookInstances
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListPipelineExecutionSteps:
    post:
      operationId: ListPipelineExecutionSteps
      description: Gets a list of <code>PipeLineExecutionStep</code> objects.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPipelineExecutionStepsResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPipelineExecutionStepsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListPipelineExecutionSteps
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListPipelineExecutions:
    post:
      operationId: ListPipelineExecutions
      description: Gets a list of the pipeline executions.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPipelineExecutionsResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPipelineExecutionsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListPipelineExecutions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListPipelineParametersForExecution:
    post:
      operationId: ListPipelineParametersForExecution
      description: Gets a list of parameters for a pipeline execution.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPipelineParametersForExecutionResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPipelineParametersForExecutionRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListPipelineParametersForExecution
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListPipelines:
    post:
      operationId: ListPipelines
      description: Gets a list of pipelines.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPipelinesResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPipelinesRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListPipelines
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListProcessingJobs:
    post:
      operationId: ListProcessingJobs
      description: Lists processing jobs that satisfy various filters.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProcessingJobsResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListProcessingJobsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListProcessingJobs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListProjects:
    post:
      operationId: ListProjects
      description: Gets a list of the projects in an Amazon Web Services account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProjectsOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListProjectsInput'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListProjects
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListSubscribedWorkteams:
    post:
      operationId: ListSubscribedWorkteams
      description: Gets a list of the work teams that you are subscribed to in the Amazon Web Services Marketplace. The list may be empty if no work team satisfies the filter specified in the <code>NameContains</code> parameter.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSubscribedWorkteamsResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListSubscribedWorkteamsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListSubscribedWorkteams
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListTags:
    post:
      operationId: ListTags
      description: Returns the tags for the specified Amazon SageMaker resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsInput'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListTags
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListTrainingJobs:
    post:
      operationId: ListTrainingJobs
      description: '<p>Lists training jobs.</p> <note> <p>When <code>StatusEquals</code> and <code>MaxResults</code> are set at the same time, the <code>MaxResults</code> number of training jobs are first retrieved ignoring the <code>StatusEquals</code> parameter and then they are filtered by the <code>StatusEquals</code> parameter, which is returned as a response.</p> <p>For example, if <code>ListTrainingJobs</code> is invoked with the following parameters:</p> <p> <code>{ ... MaxResults: 100, StatusEquals: InProgress ... }</code> </p> <p>First, 100 trainings jobs with any status, including those other than <code>InProgress</code>, are selected (sorted according to the creation time, from the most current to the oldest). Next, those with a status of <code>InProgress</code> are returned.</p> <p>You can quickly test the API using the following Amazon Web Services CLI code.</p> <p> <code>aws sagemaker list-training-jobs --max-results 100 --status-equals InProgress</code> </p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTrainingJobsResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTrainingJobsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListTrainingJobs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListTrainingJobsForHyperParameterTuningJob:
    post:
      operationId: ListTrainingJobsForHyperParameterTuningJob
      description: Gets a list of <a>TrainingJobSummary</a> objects that describe the training jobs that a hyperparameter tuning job launched.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTrainingJobsForHyperParameterTuningJobResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTrainingJobsForHyperParameterTuningJobRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListTrainingJobsForHyperParameterTuningJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListTransformJobs:
    post:
      operationId: ListTransformJobs
      description: Lists transform jobs.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTransformJobsResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTransformJobsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListTransformJobs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListTrialComponents:
    post:
      operationId: ListTrialComponents
      description: '<p>Lists the trial components in your account. You can sort the list by trial component name or creation time. You can filter the list to show only components that were created in a specific time range. You can also filter on one of the following:</p> <ul> <li> <p> <code>ExperimentName</code> </p> </li> <li> <p> <code>SourceArn</code> </p> </li> <li> <p> <code>TrialName</code> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTrialComponentsResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTrialComponentsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListTrialComponents
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListTrials:
    post:
      operationId: ListTrials
      description: Lists the trials in your account. Specify an experiment name to limit the list to the trials that are part of that experiment. Specify a trial component name to limit the list to the trials that associated with that trial component. The list can be filtered to show only trials that were created in a specific time range. The list can be sorted by trial name or creation time.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTrialsResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTrialsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListTrials
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListUserProfiles:
    post:
      operationId: ListUserProfiles
      description: Lists user profiles.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUserProfilesResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListUserProfilesRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListUserProfiles
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListWorkforces:
    post:
      operationId: ListWorkforces
      description: Use this operation to list all private and vendor workforces in an Amazon Web Services Region. Note that you can only have one private workforce per Amazon Web Services Region.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkforcesResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListWorkforcesRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListWorkforces
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.ListWorkteams:
    post:
      operationId: ListWorkteams
      description: Gets a list of private work teams that you have defined in a region. The list may be empty if no work team satisfies the filter specified in the <code>NameContains</code> parameter.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkteamsResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListWorkteamsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListWorkteams
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.PutModelPackageGroupPolicy:
    post:
      operationId: PutModelPackageGroupPolicy
      description: 'Adds a resouce policy to control access to a model group. For information about resoure policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_identity-vs-resource.html">Identity-based policies and resource-based policies</a> in the <i>Amazon Web Services Identity and Access Management User Guide.</i>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutModelPackageGroupPolicyOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutModelPackageGroupPolicyInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.PutModelPackageGroupPolicy
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.RegisterDevices:
    post:
      operationId: RegisterDevices
      description: Register devices.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterDevicesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.RegisterDevices
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.RenderUiTemplate:
    post:
      operationId: RenderUiTemplate
      description: 'Renders the UI template so that you can preview the worker''s experience. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenderUiTemplateResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenderUiTemplateRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.RenderUiTemplate
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.Search:
    post:
      operationId: Search
      description: '<p>Finds Amazon SageMaker resources that match a search query. Matching resources are returned as a list of <code>SearchRecord</code> objects in the response. You can sort the search results by any resource property in a ascending or descending order.</p> <p>You can query against the following value types: numeric, text, Boolean, and timestamp.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.Search
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.SendPipelineExecutionStepFailure:
    post:
      operationId: SendPipelineExecutionStepFailure
      description: 'Notifies the pipeline that the execution of a callback step failed, along with a message describing why. When a callback step is run, the pipeline generates a callback token and includes the token in a message sent to Amazon Simple Queue Service (Amazon SQS).'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendPipelineExecutionStepFailureResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
        '481':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendPipelineExecutionStepFailureRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.SendPipelineExecutionStepFailure
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.SendPipelineExecutionStepSuccess:
    post:
      operationId: SendPipelineExecutionStepSuccess
      description: 'Notifies the pipeline that the execution of a callback step succeeded and provides a list of the step''s output parameters. When a callback step is run, the pipeline generates a callback token and includes the token in a message sent to Amazon Simple Queue Service (Amazon SQS).'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendPipelineExecutionStepSuccessResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
        '481':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendPipelineExecutionStepSuccessRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.SendPipelineExecutionStepSuccess
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.StartMonitoringSchedule:
    post:
      operationId: StartMonitoringSchedule
      description: '<p>Starts a previously stopped monitoring schedule.</p> <note> <p>By default, when you successfully create a new schedule, the status of a monitoring schedule is <code>scheduled</code>.</p> </note>'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartMonitoringScheduleRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.StartMonitoringSchedule
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.StartNotebookInstance:
    post:
      operationId: StartNotebookInstance
      description: 'Launches an ML compute instance with the latest version of the libraries and attaches your ML storage volume. After configuring the notebook instance, Amazon SageMaker sets the notebook instance status to <code>InService</code>. A notebook instance''s status must be <code>InService</code> before you can connect to your Jupyter notebook. '
      responses:
        '200':
          description: Success
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartNotebookInstanceInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.StartNotebookInstance
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.StartPipelineExecution:
    post:
      operationId: StartPipelineExecution
      description: Starts a pipeline execution.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartPipelineExecutionResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
        '481':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartPipelineExecutionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.StartPipelineExecution
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.StopAutoMLJob:
    post:
      operationId: StopAutoMLJob
      description: A method for forcing the termination of a running job.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopAutoMLJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.StopAutoMLJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.StopCompilationJob:
    post:
      operationId: StopCompilationJob
      description: '<p>Stops a model compilation job.</p> <p> To stop a job, Amazon SageMaker sends the algorithm the SIGTERM signal. This gracefully shuts the job down. If the job hasn''t stopped, it sends the SIGKILL signal.</p> <p>When it receives a <code>StopCompilationJob</code> request, Amazon SageMaker changes the <a>CompilationJobSummary$CompilationJobStatus</a> of the job to <code>Stopping</code>. After Amazon SageMaker stops the job, it sets the <a>CompilationJobSummary$CompilationJobStatus</a> to <code>Stopped</code>. </p>'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopCompilationJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.StopCompilationJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.StopEdgePackagingJob:
    post:
      operationId: StopEdgePackagingJob
      description: Request to stop an edge packaging job.
      responses:
        '200':
          description: Success
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopEdgePackagingJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.StopEdgePackagingJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.StopHyperParameterTuningJob:
    post:
      operationId: StopHyperParameterTuningJob
      description: '<p>Stops a running hyperparameter tuning job and all running training jobs that the tuning job launched.</p> <p>All model artifacts output from the training jobs are stored in Amazon Simple Storage Service (Amazon S3). All data that the training jobs write to Amazon CloudWatch Logs are still available in CloudWatch. After the tuning job moves to the <code>Stopped</code> state, it releases all reserved resources for the tuning job.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopHyperParameterTuningJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.StopHyperParameterTuningJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.StopLabelingJob:
    post:
      operationId: StopLabelingJob
      description: Stops a running labeling job. A job that is stopped cannot be restarted. Any results obtained before the job is stopped are placed in the Amazon S3 output bucket.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopLabelingJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.StopLabelingJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.StopMonitoringSchedule:
    post:
      operationId: StopMonitoringSchedule
      description: Stops a previously started monitoring schedule.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopMonitoringScheduleRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.StopMonitoringSchedule
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.StopNotebookInstance:
    post:
      operationId: StopNotebookInstance
      description: '<p>Terminates the ML compute instance. Before terminating the instance, Amazon SageMaker disconnects the ML storage volume from it. Amazon SageMaker preserves the ML storage volume. Amazon SageMaker stops charging you for the ML compute instance when you call <code>StopNotebookInstance</code>.</p> <p>To access data on the ML storage volume for a notebook instance that has been terminated, call the <code>StartNotebookInstance</code> API. <code>StartNotebookInstance</code> launches another ML compute instance, configures it, and attaches the preserved ML storage volume so you can continue your work. </p>'
      responses:
        '200':
          description: Success
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopNotebookInstanceInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.StopNotebookInstance
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.StopPipelineExecution:
    post:
      operationId: StopPipelineExecution
      description: '<p>Stops a pipeline execution.</p> <p> <b>Callback Step</b> </p> <p>A pipeline execution won''t stop while a callback step is running. When you call <code>StopPipelineExecution</code> on a pipeline execution with a running callback step, SageMaker Pipelines sends an additional Amazon SQS message to the specified SQS queue. The body of the SQS message contains a "Status" field which is set to "Stopping".</p> <p>You should add logic to your Amazon SQS message consumer to take any needed action (for example, resource cleanup) upon receipt of the message followed by a call to <code>SendPipelineExecutionStepSuccess</code> or <code>SendPipelineExecutionStepFailure</code>.</p> <p>Only when SageMaker Pipelines receives one of these calls will it stop the pipeline execution.</p> <p> <b>Lambda Step</b> </p> <p>A pipeline execution can''t be stopped while a lambda step is running because the Lambda function invoked by the lambda step can''t be stopped. If you attempt to stop the execution while the Lambda function is running, the pipeline waits for the Lambda function to finish or until the timeout is hit, whichever occurs first, and then stops. If the Lambda function finishes, the pipeline execution status is <code>Stopped</code>. If the timeout is hit the pipeline execution status is <code>Failed</code>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopPipelineExecutionResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopPipelineExecutionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.StopPipelineExecution
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.StopProcessingJob:
    post:
      operationId: StopProcessingJob
      description: Stops a processing job.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopProcessingJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.StopProcessingJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.StopTrainingJob:
    post:
      operationId: StopTrainingJob
      description: '<p>Stops a training job. To stop a job, Amazon SageMaker sends the algorithm the <code>SIGTERM</code> signal, which delays job termination for 120 seconds. Algorithms might use this 120-second window to save the model artifacts, so the results of the training is not lost. </p> <p>When it receives a <code>StopTrainingJob</code> request, Amazon SageMaker changes the status of the job to <code>Stopping</code>. After Amazon SageMaker stops the job, it sets the status to <code>Stopped</code>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopTrainingJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.StopTrainingJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.StopTransformJob:
    post:
      operationId: StopTransformJob
      description: '<p>Stops a transform job.</p> <p>When Amazon SageMaker receives a <code>StopTransformJob</code> request, the status of the job changes to <code>Stopping</code>. After Amazon SageMaker stops the job, the status is set to <code>Stopped</code>. When you stop a transform job before it is completed, Amazon SageMaker doesn''t store the job''s output in Amazon S3.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopTransformJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.StopTransformJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.UpdateAction:
    post:
      operationId: UpdateAction
      description: Updates an action.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateActionResponse'
        '480':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '481':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateActionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.UpdateAction
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.UpdateAppImageConfig:
    post:
      operationId: UpdateAppImageConfig
      description: Updates the properties of an AppImageConfig.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAppImageConfigResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAppImageConfigRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.UpdateAppImageConfig
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.UpdateArtifact:
    post:
      operationId: UpdateArtifact
      description: Updates an artifact.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateArtifactResponse'
        '480':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '481':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateArtifactRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.UpdateArtifact
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.UpdateCodeRepository:
    post:
      operationId: UpdateCodeRepository
      description: Updates the specified Git repository with the specified values.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCodeRepositoryOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCodeRepositoryInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.UpdateCodeRepository
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.UpdateContext:
    post:
      operationId: UpdateContext
      description: Updates a context.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateContextResponse'
        '480':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '481':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContextRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.UpdateContext
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.UpdateDeviceFleet:
    post:
      operationId: UpdateDeviceFleet
      description: Updates a fleet of devices.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDeviceFleetRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.UpdateDeviceFleet
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.UpdateDevices:
    post:
      operationId: UpdateDevices
      description: Updates one or more devices in a fleet.
      responses:
        '200':
          description: Success
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDevicesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.UpdateDevices
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.UpdateDomain:
    post:
      operationId: UpdateDomain
      description: Updates the default settings for new user profiles in the domain.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDomainResponse'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
        '481':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
        '482':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDomainRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.UpdateDomain
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.UpdateEndpoint:
    post:
      operationId: UpdateEndpoint
      description: '<p>Deploys the new <code>EndpointConfig</code> specified in the request, switches to using newly created endpoint, and then deletes resources provisioned for the endpoint using the previous <code>EndpointConfig</code> (there is no availability loss). </p> <p>When Amazon SageMaker receives the request, it sets the endpoint status to <code>Updating</code>. After updating the endpoint, it sets the status to <code>InService</code>. To check the status of an endpoint, use the <a>DescribeEndpoint</a> API. </p> <note> <p>You must not delete an <code>EndpointConfig</code> in use by an endpoint that is live or while the <code>UpdateEndpoint</code> or <code>CreateEndpoint</code> operations are being performed on the endpoint. To update an endpoint, you must create a new <code>EndpointConfig</code>.</p> <p>If you delete the <code>EndpointConfig</code> of an endpoint that is active or being created or updated you may lose visibility into the instance type the endpoint is using. The endpoint must be deleted in order to stop incurring charges.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEndpointOutput'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEndpointInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.UpdateEndpoint
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.UpdateEndpointWeightsAndCapacities:
    post:
      operationId: UpdateEndpointWeightsAndCapacities
      description: 'Updates variant weight of one or more variants associated with an existing endpoint, or capacity of one variant associated with an existing endpoint. When it receives the request, Amazon SageMaker sets the endpoint status to <code>Updating</code>. After updating the endpoint, it sets the status to <code>InService</code>. To check the status of an endpoint, use the <a>DescribeEndpoint</a> API. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEndpointWeightsAndCapacitiesOutput'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEndpointWeightsAndCapacitiesInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.UpdateEndpointWeightsAndCapacities
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.UpdateExperiment:
    post:
      operationId: UpdateExperiment
      description: 'Adds, updates, or removes the description of an experiment. Updates the display name of an experiment.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateExperimentResponse'
        '480':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '481':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateExperimentRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.UpdateExperiment
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.UpdateImage:
    post:
      operationId: UpdateImage
      description: 'Updates the properties of a SageMaker image. To change the image''s tags, use the <a>AddTags</a> and <a>DeleteTags</a> APIs.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateImageResponse'
        '480':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
        '481':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateImageRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.UpdateImage
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.UpdateModelPackage:
    post:
      operationId: UpdateModelPackage
      description: Updates a versioned model.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateModelPackageOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateModelPackageInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.UpdateModelPackage
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.UpdateMonitoringSchedule:
    post:
      operationId: UpdateMonitoringSchedule
      description: Updates a previously created schedule.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMonitoringScheduleResponse'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
        '481':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMonitoringScheduleRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.UpdateMonitoringSchedule
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.UpdateNotebookInstance:
    post:
      operationId: UpdateNotebookInstance
      description: Updates a notebook instance. NotebookInstance updates include upgrading or downgrading the ML compute instance used for your notebook instance to accommodate changes in your workload requirements.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateNotebookInstanceOutput'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNotebookInstanceInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.UpdateNotebookInstance
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.UpdateNotebookInstanceLifecycleConfig:
    post:
      operationId: UpdateNotebookInstanceLifecycleConfig
      description: Updates a notebook instance lifecycle configuration created with the <a>CreateNotebookInstanceLifecycleConfig</a> API.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateNotebookInstanceLifecycleConfigOutput'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNotebookInstanceLifecycleConfigInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.UpdateNotebookInstanceLifecycleConfig
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.UpdatePipeline:
    post:
      operationId: UpdatePipeline
      description: Updates a pipeline.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePipelineResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePipelineRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.UpdatePipeline
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.UpdatePipelineExecution:
    post:
      operationId: UpdatePipelineExecution
      description: Updates a pipeline execution.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePipelineExecutionResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePipelineExecutionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.UpdatePipelineExecution
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.UpdateTrainingJob:
    post:
      operationId: UpdateTrainingJob
      description: Update a model training job to request a new Debugger profiling configuration.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTrainingJobResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTrainingJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.UpdateTrainingJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.UpdateTrial:
    post:
      operationId: UpdateTrial
      description: Updates the display name of a trial.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTrialResponse'
        '480':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '481':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTrialRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.UpdateTrial
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.UpdateTrialComponent:
    post:
      operationId: UpdateTrialComponent
      description: Updates one or more properties of a trial component.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTrialComponentResponse'
        '480':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '481':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTrialComponentRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.UpdateTrialComponent
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.UpdateUserProfile:
    post:
      operationId: UpdateUserProfile
      description: Updates a user profile.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUserProfileResponse'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
        '481':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
        '482':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserProfileRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.UpdateUserProfile
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.UpdateWorkforce:
    post:
      operationId: UpdateWorkforce
      description: '<p>Use this operation to update your workforce. You can use this operation to require that workers use specific IP addresses to work on tasks and to update your OpenID Connect (OIDC) Identity Provider (IdP) workforce configuration.</p> <p> Use <code>SourceIpConfig</code> to restrict worker access to tasks to a specific range of IP addresses. You specify allowed IP addresses by creating a list of up to ten <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html">CIDRs</a>. By default, a workforce isn''t restricted to specific IP addresses. If you specify a range of IP addresses, workers who attempt to access tasks using any IP address outside the specified range are denied and get a <code>Not Found</code> error message on the worker portal.</p> <p>Use <code>OidcConfig</code> to update the configuration of a workforce created using your own OIDC IdP. </p> <important> <p>You can only update your OIDC IdP configuration when there are no work teams associated with your workforce. You can delete work teams using the operation.</p> </important> <p>After restricting access to a range of IP addresses or updating your OIDC IdP configuration with this operation, you can view details about your update workforce using the operation.</p> <important> <p>This operation only applies to private workforces.</p> </important>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateWorkforceResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorkforceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.UpdateWorkforce
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=SageMaker.UpdateWorkteam:
    post:
      operationId: UpdateWorkteam
      description: Updates an existing work team with new member definitions or description.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateWorkteamResponse'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorkteamRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.UpdateWorkteam
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AddAssociationResponse:
      type: object
      properties:
        SourceArn:
          $ref: '#/components/schemas/AssociationEntityArn'
          description: The ARN of the source.
        DestinationArn:
          $ref: '#/components/schemas/AssociationEntityArn'
          description: The Amazon Resource Name (ARN) of the destination.
    AddAssociationRequest:
      type: object
      required:
        - SourceArn
        - DestinationArn
      title: AddAssociationRequest
      properties:
        SourceArn:
          $ref: '#/components/schemas/AssociationEntityArn'
          description: The ARN of the source.
        DestinationArn:
          $ref: '#/components/schemas/AssociationEntityArn'
          description: The Amazon Resource Name (ARN) of the destination.
        AssociationType:
          $ref: '#/components/schemas/AssociationEdgeType'
          description: '<p>The type of association. The following are suggested uses for each type. Amazon SageMaker places no restrictions on their use.</p> <ul> <li> <p>ContributedTo - The source contributed to the destination or had a part in enabling the destination. For example, the training data contributed to the training job.</p> </li> <li> <p>AssociatedWith - The source is connected to the destination. For example, an approval workflow is associated with a model deployment.</p> </li> <li> <p>DerivedFrom - The destination is a modification of the source. For example, a digest output of a channel input for a processing job is derived from the original inputs.</p> </li> <li> <p>Produced - The source generated the destination. For example, a training job produced a model artifact.</p> </li> </ul>'
    ResourceNotFound: {}
    ResourceLimitExceeded: {}
    AddTagsOutput:
      type: object
      properties:
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A list of tags associated with the Amazon SageMaker resource.
    AddTagsInput:
      type: object
      required:
        - ResourceArn
        - Tags
      title: AddTagsInput
      properties:
        ResourceArn:
          $ref: '#/components/schemas/ResourceArn'
          description: The Amazon Resource Name (ARN) of the resource that you want to tag.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'An array of key-value pairs. You can use tags to categorize your Amazon Web Services resources in different ways, for example, by purpose, owner, or environment. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services Resources</a>.'
    AssociateTrialComponentResponse:
      type: object
      properties:
        TrialComponentArn:
          $ref: '#/components/schemas/TrialComponentArn'
          description: The ARN of the trial component.
        TrialArn:
          $ref: '#/components/schemas/TrialArn'
          description: The Amazon Resource Name (ARN) of the trial.
    AssociateTrialComponentRequest:
      type: object
      required:
        - TrialComponentName
        - TrialName
      title: AssociateTrialComponentRequest
      properties:
        TrialComponentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the component to associated with the trial.
        TrialName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the trial to associate with.
    CreateActionResponse:
      type: object
      properties:
        ActionArn:
          $ref: '#/components/schemas/ActionArn'
          description: The Amazon Resource Name (ARN) of the action.
    CreateActionRequest:
      type: object
      required:
        - ActionName
        - Source
        - ActionType
      title: CreateActionRequest
      properties:
        ActionName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the action. Must be unique to your account in an Amazon Web Services Region.
        Source:
          $ref: '#/components/schemas/ActionSource'
          description: 'The source type, ID, and URI.'
        ActionType:
          $ref: '#/components/schemas/String256'
          description: The action type.
        Description:
          $ref: '#/components/schemas/ExperimentDescription'
          description: The description of the action.
        Status:
          $ref: '#/components/schemas/ActionStatus'
          description: The status of the action.
        Properties:
          $ref: '#/components/schemas/LineageEntityParameters'
          description: A list of properties to add to the action.
        MetadataProperties:
          $ref: '#/components/schemas/MetadataProperties'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A list of tags to apply to the action.
    CreateAlgorithmOutput:
      type: object
      required:
        - AlgorithmArn
      properties:
        AlgorithmArn:
          $ref: '#/components/schemas/AlgorithmArn'
          description: The Amazon Resource Name (ARN) of the new algorithm.
    CreateAlgorithmInput:
      type: object
      required:
        - AlgorithmName
        - TrainingSpecification
      title: CreateAlgorithmInput
      properties:
        AlgorithmName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the algorithm.
        AlgorithmDescription:
          $ref: '#/components/schemas/EntityDescription'
          description: A description of the algorithm.
        TrainingSpecification:
          $ref: '#/components/schemas/TrainingSpecification'
          description: '<p>Specifies details about training jobs run by this algorithm, including the following:</p> <ul> <li> <p>The Amazon ECR path of the container and the version digest of the algorithm.</p> </li> <li> <p>The hyperparameters that the algorithm supports.</p> </li> <li> <p>The instance types that the algorithm supports for training.</p> </li> <li> <p>Whether the algorithm supports distributed training.</p> </li> <li> <p>The metrics that the algorithm emits to Amazon CloudWatch.</p> </li> <li> <p>Which metrics that the algorithm emits can be used as the objective metric for hyperparameter tuning jobs.</p> </li> <li> <p>The input channels that the algorithm supports for training data. For example, an algorithm might support <code>train</code>, <code>validation</code>, and <code>test</code> channels.</p> </li> </ul>'
        InferenceSpecification:
          $ref: '#/components/schemas/InferenceSpecification'
          description: '<p>Specifies details about inference jobs that the algorithm runs, including the following:</p> <ul> <li> <p>The Amazon ECR paths of containers that contain the inference code and model artifacts.</p> </li> <li> <p>The instance types that the algorithm supports for transform jobs and real-time endpoints used for inference.</p> </li> <li> <p>The input and output content formats that the algorithm supports for inference.</p> </li> </ul>'
        ValidationSpecification:
          $ref: '#/components/schemas/AlgorithmValidationSpecification'
          description: 'Specifies configurations for one or more training jobs and that Amazon SageMaker runs to test the algorithm''s training code and, optionally, one or more batch transform jobs that Amazon SageMaker runs to test the algorithm''s inference code.'
        CertifyForMarketplace:
          $ref: '#/components/schemas/CertifyForMarketplace'
          description: Whether to certify the algorithm so that it can be listed in Amazon Web Services Marketplace.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'An array of key-value pairs. You can use tags to categorize your Amazon Web Services resources in different ways, for example, by purpose, owner, or environment. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services Resources</a>.'
    CreateAppResponse:
      type: object
      properties:
        AppArn:
          $ref: '#/components/schemas/AppArn'
          description: The Amazon Resource Name (ARN) of the app.
    CreateAppRequest:
      type: object
      required:
        - DomainId
        - UserProfileName
        - AppType
        - AppName
      title: CreateAppRequest
      properties:
        DomainId:
          $ref: '#/components/schemas/DomainId'
          description: The domain ID.
        UserProfileName:
          $ref: '#/components/schemas/UserProfileName'
          description: The user profile name.
        AppType:
          $ref: '#/components/schemas/AppType'
          description: The type of app. Supported apps are <code>JupyterServer</code> and <code>KernelGateway</code>. <code>TensorBoard</code> is not supported.
        AppName:
          $ref: '#/components/schemas/AppName'
          description: The name of the app.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: Each tag consists of a key and an optional value. Tag keys must be unique per resource.
        ResourceSpec:
          $ref: '#/components/schemas/ResourceSpec'
          description: The instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance.
    ResourceInUse: {}
    CreateAppImageConfigResponse:
      type: object
      properties:
        AppImageConfigArn:
          $ref: '#/components/schemas/AppImageConfigArn'
          description: The Amazon Resource Name (ARN) of the AppImageConfig.
    CreateAppImageConfigRequest:
      type: object
      required:
        - AppImageConfigName
      title: CreateAppImageConfigRequest
      properties:
        AppImageConfigName:
          $ref: '#/components/schemas/AppImageConfigName'
          description: The name of the AppImageConfig. Must be unique to your account.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A list of tags to apply to the AppImageConfig.
        KernelGatewayImageConfig:
          $ref: '#/components/schemas/KernelGatewayImageConfig'
          description: The KernelGatewayImageConfig.
    CreateArtifactResponse:
      type: object
      properties:
        ArtifactArn:
          $ref: '#/components/schemas/ArtifactArn'
          description: The Amazon Resource Name (ARN) of the artifact.
    CreateArtifactRequest:
      type: object
      required:
        - Source
        - ArtifactType
      title: CreateArtifactRequest
      properties:
        ArtifactName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the artifact. Must be unique to your account in an Amazon Web Services Region.
        Source:
          $ref: '#/components/schemas/ArtifactSource'
          description: 'The ID, ID type, and URI of the source.'
        ArtifactType:
          $ref: '#/components/schemas/String256'
          description: The artifact type.
        Properties:
          $ref: '#/components/schemas/LineageEntityParameters'
          description: A list of properties to add to the artifact.
        MetadataProperties:
          $ref: '#/components/schemas/MetadataProperties'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A list of tags to apply to the artifact.
    CreateAutoMLJobResponse:
      type: object
      required:
        - AutoMLJobArn
      properties:
        AutoMLJobArn:
          $ref: '#/components/schemas/AutoMLJobArn'
          description: The unique ARN assigned to the AutoML job when it is created.
    CreateAutoMLJobRequest:
      type: object
      required:
        - AutoMLJobName
        - InputDataConfig
        - OutputDataConfig
        - RoleArn
      title: CreateAutoMLJobRequest
      properties:
        AutoMLJobName:
          $ref: '#/components/schemas/AutoMLJobName'
          description: Identifies an Autopilot job. The name must be unique to your account and is case-insensitive.
        InputDataConfig:
          $ref: '#/components/schemas/AutoMLInputDataConfig'
          description: 'An array of channel objects that describes the input data and its location. Each channel is a named input source. Similar to <code>InputDataConfig</code> supported by . Format(s) supported: CSV. Minimum of 500 rows.'
        OutputDataConfig:
          $ref: '#/components/schemas/AutoMLOutputDataConfig'
          description: 'Provides information about encryption and the Amazon S3 output path needed to store artifacts from an AutoML job. Format(s) supported: CSV.'
        ProblemType:
          $ref: '#/components/schemas/ProblemType'
          description: 'Defines the type of supervised learning available for the candidates. Options include: <code>BinaryClassification</code>, <code>MulticlassClassification</code>, and <code>Regression</code>. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/autopilot-automate-model-development-problem-types.html"> Amazon SageMaker Autopilot problem types and algorithm support</a>.'
        AutoMLJobObjective:
          $ref: '#/components/schemas/AutoMLJobObjective'
          description: Defines the objective metric used to measure the predictive quality of an AutoML job. You provide an <a>AutoMLJobObjective$MetricName</a> and Autopilot infers whether to minimize or maximize it.
        AutoMLJobConfig:
          $ref: '#/components/schemas/AutoMLJobConfig'
          description: Contains <code>CompletionCriteria</code> and <code>SecurityConfig</code> settings for the AutoML job.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The ARN of the role that is used to access the data.
        GenerateCandidateDefinitionsOnly:
          $ref: '#/components/schemas/GenerateCandidateDefinitionsOnly'
          description: 'Generates possible candidates without training the models. A candidate is a combination of data preprocessors, algorithms, and algorithm parameter settings.'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: Each tag consists of a key and an optional value. Tag keys must be unique per resource.
        ModelDeployConfig:
          $ref: '#/components/schemas/ModelDeployConfig'
          description: Specifies how to generate the endpoint name for an automatic one-click Autopilot model deployment.
    CreateCodeRepositoryOutput:
      type: object
      required:
        - CodeRepositoryArn
      properties:
        CodeRepositoryArn:
          $ref: '#/components/schemas/CodeRepositoryArn'
          description: The Amazon Resource Name (ARN) of the new repository.
    CreateCodeRepositoryInput:
      type: object
      required:
        - CodeRepositoryName
        - GitConfig
      title: CreateCodeRepositoryInput
      properties:
        CodeRepositoryName:
          $ref: '#/components/schemas/EntityName'
          description: 'The name of the Git repository. The name must have 1 to 63 characters. Valid characters are a-z, A-Z, 0-9, and - (hyphen).'
        GitConfig:
          $ref: '#/components/schemas/GitConfig'
          description: 'Specifies details about the repository, including the URL where the repository is located, the default branch, and credentials to use to access the repository.'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'An array of key-value pairs. You can use tags to categorize your Amazon Web Services resources in different ways, for example, by purpose, owner, or environment. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services Resources</a>.'
    CreateCompilationJobResponse:
      type: object
      required:
        - CompilationJobArn
      properties:
        CompilationJobArn:
          $ref: '#/components/schemas/CompilationJobArn'
          description: '<p>If the action is successful, the service sends back an HTTP 200 response. Amazon SageMaker returns the following data in JSON format:</p> <ul> <li> <p> <code>CompilationJobArn</code>: The Amazon Resource Name (ARN) of the compiled job.</p> </li> </ul>'
    CreateCompilationJobRequest:
      type: object
      required:
        - CompilationJobName
        - RoleArn
        - InputConfig
        - OutputConfig
        - StoppingCondition
      title: CreateCompilationJobRequest
      properties:
        CompilationJobName:
          $ref: '#/components/schemas/EntityName'
          description: 'A name for the model compilation job. The name must be unique within the Amazon Web Services Region and within your Amazon Web Services account. '
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: '<p>The Amazon Resource Name (ARN) of an IAM role that enables Amazon SageMaker to perform tasks on your behalf. </p> <p>During model compilation, Amazon SageMaker needs your permission to:</p> <ul> <li> <p>Read input data from an S3 bucket</p> </li> <li> <p>Write model artifacts to an S3 bucket</p> </li> <li> <p>Write logs to Amazon CloudWatch Logs</p> </li> <li> <p>Publish metrics to Amazon CloudWatch</p> </li> </ul> <p>You grant permissions for all of these tasks to an IAM role. To pass this role to Amazon SageMaker, the caller of this API must have the <code>iam:PassRole</code> permission. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html">Amazon SageMaker Roles.</a> </p>'
        InputConfig:
          $ref: '#/components/schemas/InputConfig'
          description: 'Provides information about the location of input model artifacts, the name and shape of the expected data inputs, and the framework in which the model was trained.'
        OutputConfig:
          $ref: '#/components/schemas/OutputConfig'
          description: Provides information about the output location for the compiled model and the target device the model runs on.
        VpcConfig:
          $ref: '#/components/schemas/NeoVpcConfig'
          description: 'A <a>VpcConfig</a> object that specifies the VPC that you want your compilation job to connect to. Control access to your models by configuring the VPC. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/neo-vpc.html">Protect Compilation Jobs by Using an Amazon Virtual Private Cloud</a>.'
        StoppingCondition:
          $ref: '#/components/schemas/StoppingCondition'
          description: 'Specifies a limit to how long a model compilation job can run. When the job reaches the time limit, Amazon SageMaker ends the compilation job. Use this API to cap model training costs.'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'An array of key-value pairs. You can use tags to categorize your Amazon Web Services resources in different ways, for example, by purpose, owner, or environment. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services Resources</a>.'
    CreateContextResponse:
      type: object
      properties:
        ContextArn:
          $ref: '#/components/schemas/ContextArn'
          description: The Amazon Resource Name (ARN) of the context.
    CreateContextRequest:
      type: object
      required:
        - ContextName
        - Source
        - ContextType
      title: CreateContextRequest
      properties:
        ContextName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the context. Must be unique to your account in an Amazon Web Services Region.
        Source:
          $ref: '#/components/schemas/ContextSource'
          description: 'The source type, ID, and URI.'
        ContextType:
          $ref: '#/components/schemas/String256'
          description: The context type.
        Description:
          $ref: '#/components/schemas/ExperimentDescription'
          description: The description of the context.
        Properties:
          $ref: '#/components/schemas/LineageEntityParameters'
          description: A list of properties to add to the context.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A list of tags to apply to the context.
    CreateDataQualityJobDefinitionResponse:
      type: object
      required:
        - JobDefinitionArn
      properties:
        JobDefinitionArn:
          $ref: '#/components/schemas/MonitoringJobDefinitionArn'
          description: The Amazon Resource Name (ARN) of the job definition.
    CreateDataQualityJobDefinitionRequest:
      type: object
      required:
        - JobDefinitionName
        - DataQualityAppSpecification
        - DataQualityJobInput
        - DataQualityJobOutputConfig
        - JobResources
        - RoleArn
      title: CreateDataQualityJobDefinitionRequest
      properties:
        JobDefinitionName:
          $ref: '#/components/schemas/MonitoringJobDefinitionName'
          description: The name for the monitoring job definition.
        DataQualityBaselineConfig:
          $ref: '#/components/schemas/DataQualityBaselineConfig'
          description: Configures the constraints and baselines for the monitoring job.
        DataQualityAppSpecification:
          $ref: '#/components/schemas/DataQualityAppSpecification'
          description: Specifies the container that runs the monitoring job.
        DataQualityJobInput:
          $ref: '#/components/schemas/DataQualityJobInput'
          description: A list of inputs for the monitoring job. Currently endpoints are supported as monitoring inputs.
        DataQualityJobOutputConfig:
          $ref: '#/components/schemas/MonitoringOutputConfig'
        JobResources:
          $ref: '#/components/schemas/MonitoringResources'
        NetworkConfig:
          $ref: '#/components/schemas/MonitoringNetworkConfig'
          description: Specifies networking configuration for the monitoring job.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
        StoppingCondition:
          $ref: '#/components/schemas/MonitoringStoppingCondition'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: '(Optional) An array of key-value pairs. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-whatURL">Using Cost Allocation Tags</a> in the <i>Amazon Web Services Billing and Cost Management User Guide</i>.'
    CreateDeviceFleetRequest:
      type: object
      required:
        - DeviceFleetName
        - OutputConfig
      title: CreateDeviceFleetRequest
      properties:
        DeviceFleetName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the fleet that the device belongs to.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) that has access to Amazon Web Services Internet of Things (IoT).
        Description:
          $ref: '#/components/schemas/DeviceFleetDescription'
          description: A description of the fleet.
        OutputConfig:
          $ref: '#/components/schemas/EdgeOutputConfig'
          description: The output configuration for storing sample data collected by the fleet.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: Creates tags for the specified fleet.
        EnableIotRoleAlias:
          $ref: '#/components/schemas/EnableIotRoleAlias'
          description: '<p>Whether to create an Amazon Web Services IoT Role Alias during device fleet creation. The name of the role alias generated will match this pattern: "SageMakerEdge-{DeviceFleetName}".</p> <p>For example, if your device fleet is called "demo-fleet", the name of the role alias will be "SageMakerEdge-demo-fleet".</p>'
    CreateDomainResponse:
      type: object
      properties:
        DomainArn:
          $ref: '#/components/schemas/DomainArn'
          description: The Amazon Resource Name (ARN) of the created domain.
        Url:
          $ref: '#/components/schemas/String1024'
          description: The URL to the created domain.
    CreateDomainRequest:
      type: object
      required:
        - DomainName
        - AuthMode
        - DefaultUserSettings
        - SubnetIds
        - VpcId
      title: CreateDomainRequest
      properties:
        DomainName:
          $ref: '#/components/schemas/DomainName'
          description: A name for the domain.
        AuthMode:
          $ref: '#/components/schemas/AuthMode'
          description: The mode of authentication that members use to access the domain.
        DefaultUserSettings:
          $ref: '#/components/schemas/UserSettings'
          description: '<p>The default settings to use to create a user profile when <code>UserSettings</code> isn''t specified in the call to the <code>CreateUserProfile</code> API.</p> <p> <code>SecurityGroups</code> is aggregated when specified in both calls. For all other settings in <code>UserSettings</code>, the values specified in <code>CreateUserProfile</code> take precedence over those specified in <code>CreateDomain</code>.</p>'
        SubnetIds:
          $ref: '#/components/schemas/Subnets'
          description: The VPC subnets that Studio uses for communication.
        VpcId:
          $ref: '#/components/schemas/VpcId'
          description: The ID of the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: <p>Tags to associated with the Domain. Each tag consists of a key and an optional value. Tag keys must be unique per resource. Tags are searchable using the <code>Search</code> API.</p> <p>Tags that you specify for the Domain are also added to all Apps that the Domain launches.</p>
        AppNetworkAccessType:
          $ref: '#/components/schemas/AppNetworkAccessType'
          description: '<p>Specifies the VPC used for non-EFS traffic. The default value is <code>PublicInternetOnly</code>.</p> <ul> <li> <p> <code>PublicInternetOnly</code> - Non-EFS traffic is through a VPC managed by Amazon SageMaker, which allows direct internet access</p> </li> <li> <p> <code>VpcOnly</code> - All Studio traffic is through the specified VPC and subnets</p> </li> </ul>'
        HomeEfsFileSystemKmsKeyId:
          allOf:
            - $ref: '#/components/schemas/KmsKeyId'
            - deprecated: true
              description: 'This member is deprecated and replaced with <code>KmsKeyId</code>.This property is deprecated, use KmsKeyId instead.'
        KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: 'SageMaker uses Amazon Web Services KMS to encrypt the EFS volume attached to the domain with an Amazon Web Services managed customer master key (CMK) by default. For more control, specify a customer managed CMK.'
    CreateEdgePackagingJobRequest:
      type: object
      required:
        - EdgePackagingJobName
        - CompilationJobName
        - ModelName
        - ModelVersion
        - RoleArn
        - OutputConfig
      title: CreateEdgePackagingJobRequest
      properties:
        EdgePackagingJobName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the edge packaging job.
        CompilationJobName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the SageMaker Neo compilation job that will be used to locate model artifacts for packaging.
        ModelName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the model.
        ModelVersion:
          $ref: '#/components/schemas/EdgeVersion'
          description: The version of the model.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: 'The Amazon Resource Name (ARN) of an IAM role that enables Amazon SageMaker to download and upload the model, and to contact SageMaker Neo.'
        OutputConfig:
          $ref: '#/components/schemas/EdgeOutputConfig'
          description: Provides information about the output location for the packaged model.
        ResourceKey:
          $ref: '#/components/schemas/KmsKeyId'
          description: The CMK to use when encrypting the EBS volume the edge packaging job runs on.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: Creates tags for the packaging job.
    CreateEndpointOutput:
      type: object
      required:
        - EndpointArn
      properties:
        EndpointArn:
          $ref: '#/components/schemas/EndpointArn'
          description: The Amazon Resource Name (ARN) of the endpoint.
    CreateEndpointInput:
      type: object
      required:
        - EndpointName
        - EndpointConfigName
      title: CreateEndpointInput
      properties:
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
          description: 'The name of the endpoint.The name must be unique within an Amazon Web Services Region in your Amazon Web Services account. The name is case-insensitive in <code>CreateEndpoint</code>, but the case is preserved and must be matched in .'
        EndpointConfigName:
          $ref: '#/components/schemas/EndpointConfigName'
          description: 'The name of an endpoint configuration. For more information, see <a>CreateEndpointConfig</a>. '
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'An array of key-value pairs. You can use tags to categorize your Amazon Web Services resources in different ways, for example, by purpose, owner, or environment. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services Resources</a>.'
    CreateEndpointConfigOutput:
      type: object
      required:
        - EndpointConfigArn
      properties:
        EndpointConfigArn:
          $ref: '#/components/schemas/EndpointConfigArn'
          description: 'The Amazon Resource Name (ARN) of the endpoint configuration. '
    CreateEndpointConfigInput:
      type: object
      required:
        - EndpointConfigName
        - ProductionVariants
      title: CreateEndpointConfigInput
      properties:
        EndpointConfigName:
          $ref: '#/components/schemas/EndpointConfigName'
          description: 'The name of the endpoint configuration. You specify this name in a <a>CreateEndpoint</a> request. '
        ProductionVariants:
          $ref: '#/components/schemas/ProductionVariantList'
          description: 'An list of <code>ProductionVariant</code> objects, one for each model that you want to host at this endpoint.'
        DataCaptureConfig:
          $ref: '#/components/schemas/DataCaptureConfig'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'An array of key-value pairs. You can use tags to categorize your Amazon Web Services resources in different ways, for example, by purpose, owner, or environment. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services Resources</a>.'
        KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: '<p>The Amazon Resource Name (ARN) of a Amazon Web Services Key Management Service key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance that hosts the endpoint.</p> <p>The KmsKeyId can be any of the following formats: </p> <ul> <li> <p>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li> <li> <p>Key ARN: <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li> <li> <p>Alias name: <code>alias/ExampleAlias</code> </p> </li> <li> <p>Alias name ARN: <code>arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias</code> </p> </li> </ul> <p>The KMS key policy must grant permission to the IAM role that you specify in your <code>CreateEndpoint</code>, <code>UpdateEndpoint</code> requests. For more information, refer to the Amazon Web Services Key Management Service section<a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html"> Using Key Policies in Amazon Web Services KMS </a> </p> <note> <p>Certain Nitro-based instances include local storage, dependent on the instance type. Local storage volumes are encrypted using a hardware module on the instance. You can''t request a <code>KmsKeyId</code> when using an instance type with local storage. If any of the models that you specify in the <code>ProductionVariants</code> parameter use nitro-based instances with local storage, do not specify a value for the <code>KmsKeyId</code> parameter. If you specify a value for <code>KmsKeyId</code> when using any nitro-based instances with local storage, the call to <code>CreateEndpointConfig</code> fails.</p> <p>For a list of instance types that support local instance storage, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#instance-store-volumes">Instance Store Volumes</a>.</p> <p>For more information about local instance storage encryption, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ssd-instance-store.html">SSD Instance Store Volumes</a>.</p> </note>'
        AsyncInferenceConfig:
          $ref: '#/components/schemas/AsyncInferenceConfig'
          description: 'Specifies configuration for how an endpoint performs asynchronous inference. This is a required field in order for your Endpoint to be invoked using <a href="https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_runtime_InvokeEndpoint.html"> <code>InvokeEndpointAsync</code> </a>.'
    CreateExperimentResponse:
      type: object
      properties:
        ExperimentArn:
          $ref: '#/components/schemas/ExperimentArn'
          description: The Amazon Resource Name (ARN) of the experiment.
    CreateExperimentRequest:
      type: object
      required:
        - ExperimentName
      title: CreateExperimentRequest
      properties:
        ExperimentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the experiment. The name must be unique in your Amazon Web Services account and is not case-sensitive.
        DisplayName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: 'The name of the experiment as displayed. The name doesn''t need to be unique. If you don''t specify <code>DisplayName</code>, the value in <code>ExperimentName</code> is displayed.'
        Description:
          $ref: '#/components/schemas/ExperimentDescription'
          description: The description of the experiment.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A list of tags to associate with the experiment. You can use <a>Search</a> API to search on the tags.
    CreateFeatureGroupResponse:
      type: object
      required:
        - FeatureGroupArn
      properties:
        FeatureGroupArn:
          $ref: '#/components/schemas/FeatureGroupArn'
          description: 'The Amazon Resource Name (ARN) of the <code>FeatureGroup</code>. This is a unique identifier for the feature group. '
    CreateFeatureGroupRequest:
      type: object
      required:
        - FeatureGroupName
        - RecordIdentifierFeatureName
        - EventTimeFeatureName
        - FeatureDefinitions
      title: CreateFeatureGroupRequest
      properties:
        FeatureGroupName:
          $ref: '#/components/schemas/FeatureGroupName'
          description: '<p>The name of the <code>FeatureGroup</code>. The name must be unique within an Amazon Web Services Region in an Amazon Web Services account. The name:</p> <ul> <li> <p>Must start and end with an alphanumeric character.</p> </li> <li> <p>Can only contain alphanumeric character and hyphens. Spaces are not allowed. </p> </li> </ul>'
        RecordIdentifierFeatureName:
          $ref: '#/components/schemas/FeatureName'
          description: '<p>The name of the <code>Feature</code> whose value uniquely identifies a <code>Record</code> defined in the <code>FeatureStore</code>. Only the latest record per identifier value will be stored in the <code>OnlineStore</code>. <code>RecordIdentifierFeatureName</code> must be one of feature definitions'' names.</p> <p>You use the <code>RecordIdentifierFeatureName</code> to access data in a <code>FeatureStore</code>.</p> <p>This name:</p> <ul> <li> <p>Must start and end with an alphanumeric character.</p> </li> <li> <p>Can only contains alphanumeric characters, hyphens, underscores. Spaces are not allowed. </p> </li> </ul>'
        EventTimeFeatureName:
          $ref: '#/components/schemas/FeatureName'
          description: '<p>The name of the feature that stores the <code>EventTime</code> of a <code>Record</code> in a <code>FeatureGroup</code>.</p> <p>An <code>EventTime</code> is a point in time when a new event occurs that corresponds to the creation or update of a <code>Record</code> in a <code>FeatureGroup</code>. All <code>Records</code> in the <code>FeatureGroup</code> must have a corresponding <code>EventTime</code>.</p> <p>An <code>EventTime</code> can be a <code>String</code> or <code>Fractional</code>. </p> <ul> <li> <p> <code>Fractional</code>: <code>EventTime</code> feature values must be a Unix timestamp in seconds.</p> </li> <li> <p> <code>String</code>: <code>EventTime</code> feature values must be an ISO-8601 string in the format. The following formats are supported <code>yyyy-MM-dd''T''HH:mm:ssZ</code> and <code>yyyy-MM-dd''T''HH:mm:ss.SSSZ</code> where <code>yyyy</code>, <code>MM</code>, and <code>dd</code> represent the year, month, and day respectively and <code>HH</code>, <code>mm</code>, <code>ss</code>, and if applicable, <code>SSS</code> represent the hour, month, second and milliseconds respsectively. <code>''T''</code> and <code>Z</code> are constants.</p> </li> </ul>'
        FeatureDefinitions:
          $ref: '#/components/schemas/FeatureDefinitions'
          description: '<p>A list of <code>Feature</code> names and types. <code>Name</code> and <code>Type</code> is compulsory per <code>Feature</code>. </p> <p>Valid feature <code>FeatureType</code>s are <code>Integral</code>, <code>Fractional</code> and <code>String</code>.</p> <p> <code>FeatureName</code>s cannot be any of the following: <code>is_deleted</code>, <code>write_time</code>, <code>api_invocation_time</code> </p> <p>You can create up to 2,500 <code>FeatureDefinition</code>s per <code>FeatureGroup</code>.</p>'
        OnlineStoreConfig:
          $ref: '#/components/schemas/OnlineStoreConfig'
          description: <p>You can turn the <code>OnlineStore</code> on or off by specifying <code>True</code> for the <code>EnableOnlineStore</code> flag in <code>OnlineStoreConfig</code>; the default value is <code>False</code>.</p> <p>You can also include an Amazon Web Services KMS key ID (<code>KMSKeyId</code>) for at-rest encryption of the <code>OnlineStore</code>.</p>
        OfflineStoreConfig:
          $ref: '#/components/schemas/OfflineStoreConfig'
          description: '<p>Use this to configure an <code>OfflineFeatureStore</code>. This parameter allows you to specify:</p> <ul> <li> <p>The Amazon Simple Storage Service (Amazon S3) location of an <code>OfflineStore</code>.</p> </li> <li> <p>A configuration for an Amazon Web Services Glue or Amazon Web Services Hive data cataolgue. </p> </li> <li> <p>An KMS encryption key to encrypt the Amazon S3 location used for <code>OfflineStore</code>.</p> </li> </ul> <p>To learn more about this parameter, see <a>OfflineStoreConfig</a>.</p>'
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of the IAM execution role used to persist data into the <code>OfflineStore</code> if an <code>OfflineStoreConfig</code> is provided.
        Description:
          $ref: '#/components/schemas/Description'
          description: A free-form description of a <code>FeatureGroup</code>.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: Tags used to identify <code>Features</code> in each <code>FeatureGroup</code>.
    CreateFlowDefinitionResponse:
      type: object
      required:
        - FlowDefinitionArn
      properties:
        FlowDefinitionArn:
          $ref: '#/components/schemas/FlowDefinitionArn'
          description: The Amazon Resource Name (ARN) of the flow definition you create.
    CreateFlowDefinitionRequest:
      type: object
      required:
        - FlowDefinitionName
        - HumanLoopConfig
        - OutputConfig
        - RoleArn
      title: CreateFlowDefinitionRequest
      properties:
        FlowDefinitionName:
          $ref: '#/components/schemas/FlowDefinitionName'
          description: The name of your flow definition.
        HumanLoopRequestSource:
          $ref: '#/components/schemas/HumanLoopRequestSource'
          description: Container for configuring the source of human task requests. Use to specify if Amazon Rekognition or Amazon Textract is used as an integration source.
        HumanLoopActivationConfig:
          $ref: '#/components/schemas/HumanLoopActivationConfig'
          description: An object containing information about the events that trigger a human workflow.
        HumanLoopConfig:
          $ref: '#/components/schemas/HumanLoopConfig'
          description: An object containing information about the tasks the human reviewers will perform.
        OutputConfig:
          $ref: '#/components/schemas/FlowDefinitionOutputConfig'
          description: An object containing information about where the human review results will be uploaded.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: 'The Amazon Resource Name (ARN) of the role needed to call other services on your behalf. For example, <code>arn:aws:iam::1234567890:role/service-role/AmazonSageMaker-ExecutionRole-20180111T151298</code>.'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'An array of key-value pairs that contain metadata to help you categorize and organize a flow definition. Each tag consists of a key and a value, both of which you define.'
    CreateHumanTaskUiResponse:
      type: object
      required:
        - HumanTaskUiArn
      properties:
        HumanTaskUiArn:
          $ref: '#/components/schemas/HumanTaskUiArn'
          description: The Amazon Resource Name (ARN) of the human review workflow user interface you create.
    CreateHumanTaskUiRequest:
      type: object
      required:
        - HumanTaskUiName
        - UiTemplate
      title: CreateHumanTaskUiRequest
      properties:
        HumanTaskUiName:
          $ref: '#/components/schemas/HumanTaskUiName'
          description: The name of the user interface you are creating.
        UiTemplate:
          $ref: '#/components/schemas/UiTemplate'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'An array of key-value pairs that contain metadata to help you categorize and organize a human review workflow user interface. Each tag consists of a key and a value, both of which you define.'
    CreateHyperParameterTuningJobResponse:
      type: object
      required:
        - HyperParameterTuningJobArn
      properties:
        HyperParameterTuningJobArn:
          $ref: '#/components/schemas/HyperParameterTuningJobArn'
          description: The Amazon Resource Name (ARN) of the tuning job. Amazon SageMaker assigns an ARN to a hyperparameter tuning job when you create it.
    CreateHyperParameterTuningJobRequest:
      type: object
      required:
        - HyperParameterTuningJobName
        - HyperParameterTuningJobConfig
      title: CreateHyperParameterTuningJobRequest
      properties:
        HyperParameterTuningJobName:
          $ref: '#/components/schemas/HyperParameterTuningJobName'
          description: 'The name of the tuning job. This name is the prefix for the names of all training jobs that this tuning job launches. The name must be unique within the same Amazon Web Services account and Amazon Web Services Region. The name must have 1 to 32 characters. Valid characters are a-z, A-Z, 0-9, and : + = @ _ % - (hyphen). The name is not case sensitive.'
        HyperParameterTuningJobConfig:
          $ref: '#/components/schemas/HyperParameterTuningJobConfig'
          description: 'The <a>HyperParameterTuningJobConfig</a> object that describes the tuning job, including the search strategy, the objective metric used to evaluate training jobs, ranges of parameters to search, and resource limits for the tuning job. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-how-it-works.html">How Hyperparameter Tuning Works</a>.'
        TrainingJobDefinition:
          $ref: '#/components/schemas/HyperParameterTrainingJobDefinition'
          description: 'The <a>HyperParameterTrainingJobDefinition</a> object that describes the training jobs that this tuning job launches, including static hyperparameters, input data configuration, output data configuration, resource configuration, and stopping condition.'
        TrainingJobDefinitions:
          $ref: '#/components/schemas/HyperParameterTrainingJobDefinitions'
          description: A list of the <a>HyperParameterTrainingJobDefinition</a> objects launched for this tuning job.
        WarmStartConfig:
          $ref: '#/components/schemas/HyperParameterTuningJobWarmStartConfig'
          description: '<p>Specifies the configuration for starting the hyperparameter tuning job using one or more previous tuning jobs as a starting point. The results of previous tuning jobs are used to inform which combinations of hyperparameters to search over in the new tuning job.</p> <p>All training jobs launched by the new hyperparameter tuning job are evaluated by using the objective metric. If you specify <code>IDENTICAL_DATA_AND_ALGORITHM</code> as the <code>WarmStartType</code> value for the warm start configuration, the training job that performs the best in the new tuning job is compared to the best training jobs from the parent tuning jobs. From these, the training job that performs the best as measured by the objective metric is returned as the overall best training job.</p> <note> <p>All training jobs launched by parent hyperparameter tuning jobs and the new hyperparameter tuning jobs count against the limit of training jobs for the tuning job.</p> </note>'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: '<p>An array of key-value pairs. You can use tags to categorize your Amazon Web Services resources in different ways, for example, by purpose, owner, or environment. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services Resources</a>.</p> <p>Tags that you specify for the tuning job are also added to all training jobs that the tuning job launches.</p>'
    CreateImageResponse:
      type: object
      properties:
        ImageArn:
          $ref: '#/components/schemas/ImageArn'
          description: The Amazon Resource Name (ARN) of the image.
    CreateImageRequest:
      type: object
      required:
        - ImageName
        - RoleArn
      title: CreateImageRequest
      properties:
        Description:
          $ref: '#/components/schemas/ImageDescription'
          description: The description of the image.
        DisplayName:
          $ref: '#/components/schemas/ImageDisplayName'
          description: 'The display name of the image. If not provided, <code>ImageName</code> is displayed.'
        ImageName:
          $ref: '#/components/schemas/ImageName'
          description: The name of the image. Must be unique to your account.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of an IAM role that enables Amazon SageMaker to perform tasks on your behalf.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A list of tags to apply to the image.
    CreateImageVersionResponse:
      type: object
      properties:
        ImageVersionArn:
          $ref: '#/components/schemas/ImageVersionArn'
          description: The Amazon Resource Name (ARN) of the image version.
    CreateImageVersionRequest:
      type: object
      required:
        - BaseImage
        - ClientToken
        - ImageName
      title: CreateImageVersionRequest
      properties:
        BaseImage:
          $ref: '#/components/schemas/ImageBaseImage'
          description: '<p>The registry path of the container image to use as the starting point for this version. The path is an Amazon Container Registry (ECR) URI in the following format:</p> <p> <code>&lt;acct-id&gt;.dkr.ecr.&lt;region&gt;.amazonaws.com/&lt;repo-name[:tag] or [@digest]&gt;</code> </p>'
        ClientToken:
          $ref: '#/components/schemas/ClientToken'
          description: 'A unique ID. If not specified, the Amazon Web Services CLI and Amazon Web Services SDKs, such as the SDK for Python (Boto3), add a unique value to the call.'
        ImageName:
          $ref: '#/components/schemas/ImageName'
          description: The <code>ImageName</code> of the <code>Image</code> to create a version of.
    CreateLabelingJobResponse:
      type: object
      required:
        - LabelingJobArn
      properties:
        LabelingJobArn:
          $ref: '#/components/schemas/LabelingJobArn'
          description: The Amazon Resource Name (ARN) of the labeling job. You use this ARN to identify the labeling job.
    CreateLabelingJobRequest:
      type: object
      required:
        - LabelingJobName
        - LabelAttributeName
        - InputConfig
        - OutputConfig
        - RoleArn
        - HumanTaskConfig
      title: CreateLabelingJobRequest
      properties:
        LabelingJobName:
          $ref: '#/components/schemas/LabelingJobName'
          description: 'The name of the labeling job. This name is used to identify the job in a list of labeling jobs. Labeling job names must be unique within an Amazon Web Services account and region. <code>LabelingJobName</code> is not case sensitive. For example, Example-job and example-job are considered the same labeling job name by Ground Truth.'
        LabelAttributeName:
          $ref: '#/components/schemas/LabelAttributeName'
          description: '<p>The attribute name to use for the label in the output manifest file. This is the key for the key/value pair formed with the label that a worker assigns to the object. The <code>LabelAttributeName</code> must meet the following requirements.</p> <ul> <li> <p>The name can''t end with "-metadata". </p> </li> <li> <p>If you are using one of the following <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-task-types.html">built-in task types</a>, the attribute name <i>must</i> end with "-ref". If the task type you are using is not listed below, the attribute name <i>must not</i> end with "-ref".</p> <ul> <li> <p>Image semantic segmentation (<code>SemanticSegmentation)</code>, and adjustment (<code>AdjustmentSemanticSegmentation</code>) and verification (<code>VerificationSemanticSegmentation</code>) labeling jobs for this task type.</p> </li> <li> <p>Video frame object detection (<code>VideoObjectDetection</code>), and adjustment and verification (<code>AdjustmentVideoObjectDetection</code>) labeling jobs for this task type.</p> </li> <li> <p>Video frame object tracking (<code>VideoObjectTracking</code>), and adjustment and verification (<code>AdjustmentVideoObjectTracking</code>) labeling jobs for this task type.</p> </li> <li> <p>3D point cloud semantic segmentation (<code>3DPointCloudSemanticSegmentation</code>), and adjustment and verification (<code>Adjustment3DPointCloudSemanticSegmentation</code>) labeling jobs for this task type. </p> </li> <li> <p>3D point cloud object tracking (<code>3DPointCloudObjectTracking</code>), and adjustment and verification (<code>Adjustment3DPointCloudObjectTracking</code>) labeling jobs for this task type. </p> </li> </ul> </li> </ul> <p/> <important> <p>If you are creating an adjustment or verification labeling job, you must use a <i>different</i> <code>LabelAttributeName</code> than the one used in the original labeling job. The original labeling job is the Ground Truth labeling job that produced the labels that you want verified or adjusted. To learn more about adjustment and verification labeling jobs, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-verification-data.html">Verify and Adjust Labels</a>.</p> </important>'
        InputConfig:
          $ref: '#/components/schemas/LabelingJobInputConfig'
          description: '<p>Input data for the labeling job, such as the Amazon S3 location of the data objects and the location of the manifest file that describes the data objects.</p> <p>You must specify at least one of the following: <code>S3DataSource</code> or <code>SnsDataSource</code>. </p> <ul> <li> <p>Use <code>SnsDataSource</code> to specify an SNS input topic for a streaming labeling job. If you do not specify and SNS input topic ARN, Ground Truth will create a one-time labeling job that stops after all data objects in the input manifest file have been labeled.</p> </li> <li> <p>Use <code>S3DataSource</code> to specify an input manifest file for both streaming and one-time labeling jobs. Adding an <code>S3DataSource</code> is optional if you use <code>SnsDataSource</code> to create a streaming labeling job.</p> </li> </ul> <p>If you use the Amazon Mechanical Turk workforce, your input data should not include confidential information, personal information or protected health information. Use <code>ContentClassifiers</code> to specify that your data is free of personally identifiable information and adult content.</p>'
        OutputConfig:
          $ref: '#/components/schemas/LabelingJobOutputConfig'
          description: 'The location of the output data and the Amazon Web Services Key Management Service key ID for the key used to encrypt the output data, if any.'
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Number (ARN) that Amazon SageMaker assumes to perform tasks on your behalf during data labeling. You must grant this role the necessary permissions so that Amazon SageMaker can successfully complete data labeling.
        LabelCategoryConfigS3Uri:
          $ref: '#/components/schemas/S3Uri'
          description: '<p>The S3 URI of the file, referred to as a <i>label category configuration file</i>, that defines the categories used to label the data objects.</p> <p>For 3D point cloud and video frame task types, you can add label category attributes and frame attributes to your label category configuration file. To learn how, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-point-cloud-label-category-config.html">Create a Labeling Category Configuration File for 3D Point Cloud Labeling Jobs</a>. </p> <p>For named entity recognition jobs, in addition to <code>"labels"</code>, you must provide worker instructions in the label category configuration file using the <code>"instructions"</code> parameter: <code>"instructions": {"shortInstruction":"&lt;h1&gt;Add header&lt;/h1&gt;&lt;p&gt;Add Instructions&lt;/p&gt;", "fullInstruction":"&lt;p&gt;Add additional instructions.&lt;/p&gt;"}</code>. For details and an example, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-named-entity-recg.html#sms-creating-ner-api">Create a Named Entity Recognition Labeling Job (API) </a>.</p> <p>For all other <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-task-types.html">built-in task types</a> and <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-custom-templates.html">custom tasks</a>, your label category configuration file must be a JSON file in the following format. Identify the labels you want to use by replacing <code>label_1</code>, <code>label_2</code>,<code>...</code>,<code>label_n</code> with your label categories.</p> <p> <code>{ </code> </p> <p> <code>"document-version": "2018-11-28",</code> </p> <p> <code>"labels": [{"label": "label_1"},{"label": "label_2"},...{"label": "label_n"}]</code> </p> <p> <code>}</code> </p> <p>Note the following about the label category configuration file:</p> <ul> <li> <p>For image classification and text classification (single and multi-label) you must specify at least two label categories. For all other task types, the minimum number of label categories required is one. </p> </li> <li> <p>Each label category must be unique, you cannot specify duplicate label categories.</p> </li> <li> <p>If you create a 3D point cloud or video frame adjustment or verification labeling job, you must include <code>auditLabelAttributeName</code> in the label category configuration. Use this parameter to enter the <a href="https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateLabelingJob.html#sagemaker-CreateLabelingJob-request-LabelAttributeName"> <code>LabelAttributeName</code> </a> of the labeling job you want to adjust or verify annotations of.</p> </li> </ul>'
        StoppingConditions:
          $ref: '#/components/schemas/LabelingJobStoppingConditions'
          description: 'A set of conditions for stopping the labeling job. If any of the conditions are met, the job is automatically stopped. You can use these conditions to control the cost of data labeling.'
        LabelingJobAlgorithmsConfig:
          $ref: '#/components/schemas/LabelingJobAlgorithmsConfig'
          description: Configures the information required to perform automated data labeling.
        HumanTaskConfig:
          $ref: '#/components/schemas/HumanTaskConfig'
          description: 'Configures the labeling task and how it is presented to workers; including, but not limited to price, keywords, and batch size (task count).'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'An array of key/value pairs. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-what">Using Cost Allocation Tags</a> in the <i>Amazon Web Services Billing and Cost Management User Guide</i>.'
    CreateModelOutput:
      type: object
      required:
        - ModelArn
      properties:
        ModelArn:
          $ref: '#/components/schemas/ModelArn'
          description: The ARN of the model created in Amazon SageMaker.
    CreateModelInput:
      type: object
      required:
        - ModelName
        - ExecutionRoleArn
      title: CreateModelInput
      properties:
        ModelName:
          $ref: '#/components/schemas/ModelName'
          description: The name of the new model.
        PrimaryContainer:
          $ref: '#/components/schemas/ContainerDefinition'
          description: 'The location of the primary docker image containing inference code, associated artifacts, and custom environment map that the inference code uses when the model is deployed for predictions. '
        Containers:
          $ref: '#/components/schemas/ContainerDefinitionList'
          description: Specifies the containers in the inference pipeline.
        InferenceExecutionConfig:
          $ref: '#/components/schemas/InferenceExecutionConfig'
          description: Specifies details of how containers in a multi-container endpoint are called.
        ExecutionRoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: '<p>The Amazon Resource Name (ARN) of the IAM role that Amazon SageMaker can assume to access model artifacts and docker image for deployment on ML compute instances or for batch transform jobs. Deploying on ML compute instances is part of model hosting. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html">Amazon SageMaker Roles</a>. </p> <note> <p>To be able to pass this role to Amazon SageMaker, the caller of this API must have the <code>iam:PassRole</code> permission.</p> </note>'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'An array of key-value pairs. You can use tags to categorize your Amazon Web Services resources in different ways, for example, by purpose, owner, or environment. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services Resources</a>.'
        VpcConfig:
          $ref: '#/components/schemas/VpcConfig'
          description: 'A <a>VpcConfig</a> object that specifies the VPC that you want your model to connect to. Control access to and from your model container by configuring the VPC. <code>VpcConfig</code> is used in hosting services and in batch transform. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html">Protect Endpoints by Using an Amazon Virtual Private Cloud</a> and <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/batch-vpc.html">Protect Data in Batch Transform Jobs by Using an Amazon Virtual Private Cloud</a>.'
        EnableNetworkIsolation:
          $ref: '#/components/schemas/Boolean'
          description: Isolates the model container. No inbound or outbound network calls can be made to or from the model container.
    CreateModelBiasJobDefinitionResponse:
      type: object
      required:
        - JobDefinitionArn
      properties:
        JobDefinitionArn:
          $ref: '#/components/schemas/MonitoringJobDefinitionArn'
          description: The Amazon Resource Name (ARN) of the model bias job.
    CreateModelBiasJobDefinitionRequest:
      type: object
      required:
        - JobDefinitionName
        - ModelBiasAppSpecification
        - ModelBiasJobInput
        - ModelBiasJobOutputConfig
        - JobResources
        - RoleArn
      title: CreateModelBiasJobDefinitionRequest
      properties:
        JobDefinitionName:
          $ref: '#/components/schemas/MonitoringJobDefinitionName'
          description: The name of the bias job definition. The name must be unique within an Amazon Web Services Region in the Amazon Web Services account.
        ModelBiasBaselineConfig:
          $ref: '#/components/schemas/ModelBiasBaselineConfig'
          description: The baseline configuration for a model bias job.
        ModelBiasAppSpecification:
          $ref: '#/components/schemas/ModelBiasAppSpecification'
          description: Configures the model bias job to run a specified Docker container image.
        ModelBiasJobInput:
          $ref: '#/components/schemas/ModelBiasJobInput'
          description: Inputs for the model bias job.
        ModelBiasJobOutputConfig:
          $ref: '#/components/schemas/MonitoringOutputConfig'
        JobResources:
          $ref: '#/components/schemas/MonitoringResources'
        NetworkConfig:
          $ref: '#/components/schemas/MonitoringNetworkConfig'
          description: Networking options for a model bias job.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
        StoppingCondition:
          $ref: '#/components/schemas/MonitoringStoppingCondition'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: '(Optional) An array of key-value pairs. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-whatURL">Using Cost Allocation Tags</a> in the <i>Amazon Web Services Billing and Cost Management User Guide</i>.'
    CreateModelExplainabilityJobDefinitionResponse:
      type: object
      required:
        - JobDefinitionArn
      properties:
        JobDefinitionArn:
          $ref: '#/components/schemas/MonitoringJobDefinitionArn'
          description: The Amazon Resource Name (ARN) of the model explainability job.
    CreateModelExplainabilityJobDefinitionRequest:
      type: object
      required:
        - JobDefinitionName
        - ModelExplainabilityAppSpecification
        - ModelExplainabilityJobInput
        - ModelExplainabilityJobOutputConfig
        - JobResources
        - RoleArn
      title: CreateModelExplainabilityJobDefinitionRequest
      properties:
        JobDefinitionName:
          $ref: '#/components/schemas/MonitoringJobDefinitionName'
          description: ' The name of the model explainability job definition. The name must be unique within an Amazon Web Services Region in the Amazon Web Services account.'
        ModelExplainabilityBaselineConfig:
          $ref: '#/components/schemas/ModelExplainabilityBaselineConfig'
          description: The baseline configuration for a model explainability job.
        ModelExplainabilityAppSpecification:
          $ref: '#/components/schemas/ModelExplainabilityAppSpecification'
          description: Configures the model explainability job to run a specified Docker container image.
        ModelExplainabilityJobInput:
          $ref: '#/components/schemas/ModelExplainabilityJobInput'
          description: Inputs for the model explainability job.
        ModelExplainabilityJobOutputConfig:
          $ref: '#/components/schemas/MonitoringOutputConfig'
        JobResources:
          $ref: '#/components/schemas/MonitoringResources'
        NetworkConfig:
          $ref: '#/components/schemas/MonitoringNetworkConfig'
          description: Networking options for a model explainability job.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
        StoppingCondition:
          $ref: '#/components/schemas/MonitoringStoppingCondition'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: '(Optional) An array of key-value pairs. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-whatURL">Using Cost Allocation Tags</a> in the <i>Amazon Web Services Billing and Cost Management User Guide</i>.'
    CreateModelPackageOutput:
      type: object
      required:
        - ModelPackageArn
      properties:
        ModelPackageArn:
          $ref: '#/components/schemas/ModelPackageArn'
          description: The Amazon Resource Name (ARN) of the new model package.
    CreateModelPackageInput:
      type: object
      title: CreateModelPackageInput
      properties:
        ModelPackageName:
          $ref: '#/components/schemas/EntityName'
          description: '<p>The name of the model package. The name must have 1 to 63 characters. Valid characters are a-z, A-Z, 0-9, and - (hyphen).</p> <p>This parameter is required for unversioned models. It is not applicable to versioned models.</p>'
        ModelPackageGroupName:
          $ref: '#/components/schemas/EntityName'
          description: '<p>The name of the model group that this model version belongs to.</p> <p>This parameter is required for versioned models, and does not apply to unversioned models.</p>'
        ModelPackageDescription:
          $ref: '#/components/schemas/EntityDescription'
          description: A description of the model package.
        InferenceSpecification:
          $ref: '#/components/schemas/InferenceSpecification'
          description: '<p>Specifies details about inference jobs that can be run with models based on this model package, including the following:</p> <ul> <li> <p>The Amazon ECR paths of containers that contain the inference code and model artifacts.</p> </li> <li> <p>The instance types that the model package supports for transform jobs and real-time endpoints used for inference.</p> </li> <li> <p>The input and output content formats that the model package supports for inference.</p> </li> </ul>'
        ValidationSpecification:
          $ref: '#/components/schemas/ModelPackageValidationSpecification'
          description: Specifies configurations for one or more transform jobs that Amazon SageMaker runs to test the model package.
        SourceAlgorithmSpecification:
          $ref: '#/components/schemas/SourceAlgorithmSpecification'
          description: Details about the algorithm that was used to create the model package.
        CertifyForMarketplace:
          $ref: '#/components/schemas/CertifyForMarketplace'
          description: '<p>Whether to certify the model package for listing on Amazon Web Services Marketplace.</p> <p>This parameter is optional for unversioned models, and does not apply to versioned models.</p>'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'A list of key value pairs associated with the model. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services resources</a> in the <i>Amazon Web Services General Reference Guide</i>.'
        ModelApprovalStatus:
          $ref: '#/components/schemas/ModelApprovalStatus'
          description: '<p>Whether the model is approved for deployment.</p> <p>This parameter is optional for versioned models, and does not apply to unversioned models.</p> <p>For versioned models, the value of this parameter must be set to <code>Approved</code> to deploy the model.</p>'
        MetadataProperties:
          $ref: '#/components/schemas/MetadataProperties'
        ModelMetrics:
          $ref: '#/components/schemas/ModelMetrics'
          description: A structure that contains model metrics reports.
        ClientToken:
          $ref: '#/components/schemas/ClientToken'
          description: A unique token that guarantees that the call to this API is idempotent.
    ConflictException: {}
    CreateModelPackageGroupOutput:
      type: object
      required:
        - ModelPackageGroupArn
      properties:
        ModelPackageGroupArn:
          $ref: '#/components/schemas/ModelPackageGroupArn'
          description: The Amazon Resource Name (ARN) of the model group.
    CreateModelPackageGroupInput:
      type: object
      required:
        - ModelPackageGroupName
      title: CreateModelPackageGroupInput
      properties:
        ModelPackageGroupName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the model group.
        ModelPackageGroupDescription:
          $ref: '#/components/schemas/EntityDescription'
          description: A description for the model group.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'A list of key value pairs associated with the model group. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services resources</a> in the <i>Amazon Web Services General Reference Guide</i>.'
    CreateModelQualityJobDefinitionResponse:
      type: object
      required:
        - JobDefinitionArn
      properties:
        JobDefinitionArn:
          $ref: '#/components/schemas/MonitoringJobDefinitionArn'
          description: The Amazon Resource Name (ARN) of the model quality monitoring job.
    CreateModelQualityJobDefinitionRequest:
      type: object
      required:
        - JobDefinitionName
        - ModelQualityAppSpecification
        - ModelQualityJobInput
        - ModelQualityJobOutputConfig
        - JobResources
        - RoleArn
      title: CreateModelQualityJobDefinitionRequest
      properties:
        JobDefinitionName:
          $ref: '#/components/schemas/MonitoringJobDefinitionName'
          description: The name of the monitoring job definition.
        ModelQualityBaselineConfig:
          $ref: '#/components/schemas/ModelQualityBaselineConfig'
          description: Specifies the constraints and baselines for the monitoring job.
        ModelQualityAppSpecification:
          $ref: '#/components/schemas/ModelQualityAppSpecification'
          description: The container that runs the monitoring job.
        ModelQualityJobInput:
          $ref: '#/components/schemas/ModelQualityJobInput'
          description: A list of the inputs that are monitored. Currently endpoints are supported.
        ModelQualityJobOutputConfig:
          $ref: '#/components/schemas/MonitoringOutputConfig'
        JobResources:
          $ref: '#/components/schemas/MonitoringResources'
        NetworkConfig:
          $ref: '#/components/schemas/MonitoringNetworkConfig'
          description: Specifies the network configuration for the monitoring job.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
        StoppingCondition:
          $ref: '#/components/schemas/MonitoringStoppingCondition'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: '(Optional) An array of key-value pairs. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-whatURL">Using Cost Allocation Tags</a> in the <i>Amazon Web Services Billing and Cost Management User Guide</i>.'
    CreateMonitoringScheduleResponse:
      type: object
      required:
        - MonitoringScheduleArn
      properties:
        MonitoringScheduleArn:
          $ref: '#/components/schemas/MonitoringScheduleArn'
          description: The Amazon Resource Name (ARN) of the monitoring schedule.
    CreateMonitoringScheduleRequest:
      type: object
      required:
        - MonitoringScheduleName
        - MonitoringScheduleConfig
      title: CreateMonitoringScheduleRequest
      properties:
        MonitoringScheduleName:
          $ref: '#/components/schemas/MonitoringScheduleName'
          description: The name of the monitoring schedule. The name must be unique within an Amazon Web Services Region within an Amazon Web Services account.
        MonitoringScheduleConfig:
          $ref: '#/components/schemas/MonitoringScheduleConfig'
          description: The configuration object that specifies the monitoring schedule and defines the monitoring job.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: '(Optional) An array of key-value pairs. For more information, see <a href=" https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-whatURL">Using Cost Allocation Tags</a> in the <i>Amazon Web Services Billing and Cost Management User Guide</i>.'
    CreateNotebookInstanceOutput:
      type: object
      properties:
        NotebookInstanceArn:
          $ref: '#/components/schemas/NotebookInstanceArn'
          description: 'The Amazon Resource Name (ARN) of the notebook instance. '
    CreateNotebookInstanceInput:
      type: object
      required:
        - NotebookInstanceName
        - InstanceType
        - RoleArn
      title: CreateNotebookInstanceInput
      properties:
        NotebookInstanceName:
          $ref: '#/components/schemas/NotebookInstanceName'
          description: The name of the new notebook instance.
        InstanceType:
          $ref: '#/components/schemas/InstanceType'
          description: The type of ML compute instance to launch for the notebook instance.
        SubnetId:
          $ref: '#/components/schemas/SubnetId'
          description: 'The ID of the subnet in a VPC to which you would like to have a connectivity from your ML compute instance. '
        SecurityGroupIds:
          $ref: '#/components/schemas/SecurityGroupIds'
          description: 'The VPC security group IDs, in the form sg-xxxxxxxx. The security groups must be for the same VPC as specified in the subnet. '
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: '<p> When you send any requests to Amazon Web Services resources from the notebook instance, Amazon SageMaker assumes this role to perform tasks on your behalf. You must grant this role necessary permissions so Amazon SageMaker can perform these tasks. The policy must allow the Amazon SageMaker service principal (sagemaker.amazonaws.com) permissions to assume this role. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html">Amazon SageMaker Roles</a>. </p> <note> <p>To be able to pass this role to Amazon SageMaker, the caller of this API must have the <code>iam:PassRole</code> permission.</p> </note>'
        KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: 'The Amazon Resource Name (ARN) of a Amazon Web Services Key Management Service key that Amazon SageMaker uses to encrypt data on the storage volume attached to your notebook instance. The KMS key you provide must be enabled. For information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/enabling-keys.html">Enabling and Disabling Keys</a> in the <i>Amazon Web Services Key Management Service Developer Guide</i>.'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'An array of key-value pairs. You can use tags to categorize your Amazon Web Services resources in different ways, for example, by purpose, owner, or environment. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services Resources</a>.'
        LifecycleConfigName:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigName'
          description: 'The name of a lifecycle configuration to associate with the notebook instance. For information about lifestyle configurations, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/notebook-lifecycle-config.html">Step 2.1: (Optional) Customize a Notebook Instance</a>.'
        DirectInternetAccess:
          $ref: '#/components/schemas/DirectInternetAccess'
          description: '<p>Sets whether Amazon SageMaker provides internet access to the notebook instance. If you set this to <code>Disabled</code> this notebook instance is able to access resources only in your VPC, and is not be able to connect to Amazon SageMaker training and endpoint services unless you configure a NAT Gateway in your VPC.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/appendix-additional-considerations.html#appendix-notebook-and-internet-access">Notebook Instances Are Internet-Enabled by Default</a>. You can set the value of this parameter to <code>Disabled</code> only if you set a value for the <code>SubnetId</code> parameter.</p>'
        VolumeSizeInGB:
          $ref: '#/components/schemas/NotebookInstanceVolumeSizeInGB'
          description: 'The size, in GB, of the ML storage volume to attach to the notebook instance. The default value is 5 GB.'
        AcceleratorTypes:
          $ref: '#/components/schemas/NotebookInstanceAcceleratorTypes'
          description: 'A list of Elastic Inference (EI) instance types to associate with this notebook instance. Currently, only one instance type can be associated with a notebook instance. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/ei.html">Using Elastic Inference in Amazon SageMaker</a>.'
        DefaultCodeRepository:
          $ref: '#/components/schemas/CodeRepositoryNameOrUrl'
          description: 'A Git repository to associate with the notebook instance as its default code repository. This can be either the name of a Git repository stored as a resource in your account, or the URL of a Git repository in <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html">Amazon Web Services CodeCommit</a> or in any other Git repository. When you open a notebook instance, it opens in the directory that contains this repository. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/nbi-git-repo.html">Associating Git Repositories with Amazon SageMaker Notebook Instances</a>.'
        AdditionalCodeRepositories:
          $ref: '#/components/schemas/AdditionalCodeRepositoryNamesOrUrls'
          description: 'An array of up to three Git repositories to associate with the notebook instance. These can be either the names of Git repositories stored as resources in your account, or the URL of Git repositories in <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html">Amazon Web Services CodeCommit</a> or in any other Git repository. These repositories are cloned at the same level as the default repository of your notebook instance. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/nbi-git-repo.html">Associating Git Repositories with Amazon SageMaker Notebook Instances</a>.'
        RootAccess:
          $ref: '#/components/schemas/RootAccess'
          description: '<p>Whether root access is enabled or disabled for users of the notebook instance. The default value is <code>Enabled</code>.</p> <note> <p>Lifecycle configurations need root access to be able to set up a notebook instance. Because of this, lifecycle configurations associated with a notebook instance always run with root access even if you disable root access for users.</p> </note>'
        PlatformIdentifier:
          $ref: '#/components/schemas/PlatformIdentifier'
          description: The platform identifier of the notebook instance runtime environment.
    CreateNotebookInstanceLifecycleConfigOutput:
      type: object
      properties:
        NotebookInstanceLifecycleConfigArn:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigArn'
          description: The Amazon Resource Name (ARN) of the lifecycle configuration.
    CreateNotebookInstanceLifecycleConfigInput:
      type: object
      required:
        - NotebookInstanceLifecycleConfigName
      title: CreateNotebookInstanceLifecycleConfigInput
      properties:
        NotebookInstanceLifecycleConfigName:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigName'
          description: The name of the lifecycle configuration.
        OnCreate:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigList'
          description: 'A shell script that runs only once, when you create a notebook instance. The shell script must be a base64-encoded string.'
        OnStart:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigList'
          description: 'A shell script that runs every time you start a notebook instance, including when you create the notebook instance. The shell script must be a base64-encoded string.'
    CreatePipelineResponse:
      type: object
      properties:
        PipelineArn:
          $ref: '#/components/schemas/PipelineArn'
          description: The Amazon Resource Name (ARN) of the created pipeline.
    CreatePipelineRequest:
      type: object
      required:
        - PipelineName
        - PipelineDefinition
        - ClientRequestToken
        - RoleArn
      title: CreatePipelineRequest
      properties:
        PipelineName:
          $ref: '#/components/schemas/PipelineName'
          description: The name of the pipeline.
        PipelineDisplayName:
          $ref: '#/components/schemas/PipelineName'
          description: The display name of the pipeline.
        PipelineDefinition:
          $ref: '#/components/schemas/PipelineDefinition'
          description: The JSON pipeline definition of the pipeline.
        PipelineDescription:
          $ref: '#/components/schemas/PipelineDescription'
          description: A description of the pipeline.
        ClientRequestToken:
          $ref: '#/components/schemas/IdempotencyToken'
          description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the operation. An idempotent operation completes no more than one time.'
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of the role used by the pipeline to access and create resources.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A list of tags to apply to the created pipeline.
    CreatePresignedDomainUrlResponse:
      type: object
      properties:
        AuthorizedUrl:
          $ref: '#/components/schemas/PresignedDomainUrl'
          description: The presigned URL.
    CreatePresignedDomainUrlRequest:
      type: object
      required:
        - DomainId
        - UserProfileName
      title: CreatePresignedDomainUrlRequest
      properties:
        DomainId:
          $ref: '#/components/schemas/DomainId'
          description: The domain ID.
        UserProfileName:
          $ref: '#/components/schemas/UserProfileName'
          description: The name of the UserProfile to sign-in as.
        SessionExpirationDurationInSeconds:
          $ref: '#/components/schemas/SessionExpirationDurationInSeconds'
          description: The session expiration duration in seconds. This value defaults to 43200.
        ExpiresInSeconds:
          $ref: '#/components/schemas/ExpiresInSeconds'
          description: The number of seconds until the pre-signed URL expires. This value defaults to 300.
    CreatePresignedNotebookInstanceUrlOutput:
      type: object
      properties:
        AuthorizedUrl:
          $ref: '#/components/schemas/NotebookInstanceUrl'
          description: 'A JSON object that contains the URL string. '
    CreatePresignedNotebookInstanceUrlInput:
      type: object
      required:
        - NotebookInstanceName
      title: CreatePresignedNotebookInstanceUrlInput
      properties:
        NotebookInstanceName:
          $ref: '#/components/schemas/NotebookInstanceName'
          description: The name of the notebook instance.
        SessionExpirationDurationInSeconds:
          $ref: '#/components/schemas/SessionExpirationDurationInSeconds'
          description: 'The duration of the session, in seconds. The default is 12 hours.'
    CreateProcessingJobResponse:
      type: object
      required:
        - ProcessingJobArn
      properties:
        ProcessingJobArn:
          $ref: '#/components/schemas/ProcessingJobArn'
          description: The Amazon Resource Name (ARN) of the processing job.
    CreateProcessingJobRequest:
      type: object
      required:
        - ProcessingJobName
        - ProcessingResources
        - AppSpecification
        - RoleArn
      title: CreateProcessingJobRequest
      properties:
        ProcessingInputs:
          $ref: '#/components/schemas/ProcessingInputs'
          description: An array of inputs configuring the data to download into the processing container.
        ProcessingOutputConfig:
          $ref: '#/components/schemas/ProcessingOutputConfig'
          description: Output configuration for the processing job.
        ProcessingJobName:
          $ref: '#/components/schemas/ProcessingJobName'
          description: ' The name of the processing job. The name must be unique within an Amazon Web Services Region in the Amazon Web Services account.'
        ProcessingResources:
          $ref: '#/components/schemas/ProcessingResources'
          description: 'Identifies the resources, ML compute instances, and ML storage volumes to deploy for a processing job. In distributed training, you specify more than one instance.'
        StoppingCondition:
          $ref: '#/components/schemas/ProcessingStoppingCondition'
          description: The time limit for how long the processing job is allowed to run.
        AppSpecification:
          $ref: '#/components/schemas/AppSpecification'
          description: Configures the processing job to run a specified Docker container image.
        Environment:
          $ref: '#/components/schemas/ProcessingEnvironmentMap'
          description: The environment variables to set in the Docker container. Up to 100 key and values entries in the map are supported.
        NetworkConfig:
          $ref: '#/components/schemas/NetworkConfig'
          description: 'Networking options for a processing job, such as whether to allow inbound and outbound network calls to and from processing containers, and the VPC subnets and security groups to use for VPC-enabled processing jobs.'
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: '(Optional) An array of key-value pairs. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-whatURL">Using Cost Allocation Tags</a> in the <i>Amazon Web Services Billing and Cost Management User Guide</i>.'
        ExperimentConfig:
          $ref: '#/components/schemas/ExperimentConfig'
    CreateProjectOutput:
      type: object
      required:
        - ProjectArn
        - ProjectId
      properties:
        ProjectArn:
          $ref: '#/components/schemas/ProjectArn'
          description: The Amazon Resource Name (ARN) of the project.
        ProjectId:
          $ref: '#/components/schemas/ProjectId'
          description: The ID of the new project.
    CreateProjectInput:
      type: object
      required:
        - ProjectName
        - ServiceCatalogProvisioningDetails
      title: CreateProjectInput
      properties:
        ProjectName:
          $ref: '#/components/schemas/ProjectEntityName'
          description: The name of the project.
        ProjectDescription:
          $ref: '#/components/schemas/EntityDescription'
          description: A description for the project.
        ServiceCatalogProvisioningDetails:
          $ref: '#/components/schemas/ServiceCatalogProvisioningDetails'
          description: 'The product ID and provisioning artifact ID to provision a service catalog. For information, see <a href="https://docs.aws.amazon.com/servicecatalog/latest/adminguide/introduction.html">What is Amazon Web Services Service Catalog</a>.'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'An array of key-value pairs that you want to use to organize and track your Amazon Web Services resource costs. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services resources</a> in the <i>Amazon Web Services General Reference Guide</i>.'
    CreateTrainingJobResponse:
      type: object
      required:
        - TrainingJobArn
      properties:
        TrainingJobArn:
          $ref: '#/components/schemas/TrainingJobArn'
          description: The Amazon Resource Name (ARN) of the training job.
    CreateTrainingJobRequest:
      type: object
      required:
        - TrainingJobName
        - AlgorithmSpecification
        - RoleArn
        - OutputDataConfig
        - ResourceConfig
        - StoppingCondition
      title: CreateTrainingJobRequest
      properties:
        TrainingJobName:
          $ref: '#/components/schemas/TrainingJobName'
          description: 'The name of the training job. The name must be unique within an Amazon Web Services Region in an Amazon Web Services account. '
        HyperParameters:
          $ref: '#/components/schemas/HyperParameters'
          description: '<p>Algorithm-specific parameters that influence the quality of the model. You set hyperparameters before you start the learning process. For a list of hyperparameters for each training algorithm provided by Amazon SageMaker, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html">Algorithms</a>. </p> <p>You can specify a maximum of 100 hyperparameters. Each hyperparameter is a key-value pair. Each key and value is limited to 256 characters, as specified by the <code>Length Constraint</code>. </p>'
        AlgorithmSpecification:
          $ref: '#/components/schemas/AlgorithmSpecification'
          description: 'The registry path of the Docker image that contains the training algorithm and algorithm-specific metadata, including the input mode. For more information about algorithms provided by Amazon SageMaker, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html">Algorithms</a>. For information about providing your own algorithms, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms.html">Using Your Own Algorithms with Amazon SageMaker</a>. '
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: '<p>The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf. </p> <p>During model training, Amazon SageMaker needs your permission to read input data from an S3 bucket, download a Docker image that contains training code, write model artifacts to an S3 bucket, write logs to Amazon CloudWatch Logs, and publish metrics to Amazon CloudWatch. You grant permissions for all of these tasks to an IAM role. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html">Amazon SageMaker Roles</a>. </p> <note> <p>To be able to pass this role to Amazon SageMaker, the caller of this API must have the <code>iam:PassRole</code> permission.</p> </note>'
        InputDataConfig:
          $ref: '#/components/schemas/InputDataConfig'
          description: '<p>An array of <code>Channel</code> objects. Each channel is a named input source. <code>InputDataConfig</code> describes the input data and its location. </p> <p>Algorithms can accept input data from one or more channels. For example, an algorithm might have two channels of input data, <code>training_data</code> and <code>validation_data</code>. The configuration for each channel provides the S3, EFS, or FSx location where the input data is stored. It also provides information about the stored data: the MIME type, compression method, and whether the data is wrapped in RecordIO format. </p> <p>Depending on the input mode that the algorithm supports, Amazon SageMaker either copies input data files from an S3 bucket to a local directory in the Docker container, or makes it available as input streams. For example, if you specify an EFS location, input data files will be made available as input streams. They do not need to be downloaded.</p>'
        OutputDataConfig:
          $ref: '#/components/schemas/OutputDataConfig'
          description: 'Specifies the path to the S3 location where you want to store model artifacts. Amazon SageMaker creates subfolders for the artifacts. '
        ResourceConfig:
          $ref: '#/components/schemas/ResourceConfig'
          description: '<p>The resources, including the ML compute instances and ML storage volumes, to use for model training. </p> <p>ML storage volumes store model artifacts and incremental states. Training algorithms might also use ML storage volumes for scratch space. If you want Amazon SageMaker to use the ML storage volume to store the training data, choose <code>File</code> as the <code>TrainingInputMode</code> in the algorithm specification. For distributed training algorithms, specify an instance count greater than 1.</p>'
        VpcConfig:
          $ref: '#/components/schemas/VpcConfig'
          description: 'A <a>VpcConfig</a> object that specifies the VPC that you want your training job to connect to. Control access to and from your training container by configuring the VPC. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html">Protect Training Jobs by Using an Amazon Virtual Private Cloud</a>.'
        StoppingCondition:
          $ref: '#/components/schemas/StoppingCondition'
          description: '<p>Specifies a limit to how long a model training job can run. It also specifies how long a managed Spot training job has to complete. When the job reaches the time limit, Amazon SageMaker ends the training job. Use this API to cap model training costs.</p> <p>To stop a job, Amazon SageMaker sends the algorithm the <code>SIGTERM</code> signal, which delays job termination for 120 seconds. Algorithms can use this 120-second window to save the model artifacts, so the results of training are not lost. </p>'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'An array of key-value pairs. You can use tags to categorize your Amazon Web Services resources in different ways, for example, by purpose, owner, or environment. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services Resources</a>.'
        EnableNetworkIsolation:
          $ref: '#/components/schemas/Boolean'
          description: 'Isolates the training container. No inbound or outbound network calls can be made, except for calls between peers within a training cluster for distributed training. If you enable network isolation for training jobs that are configured to use a VPC, Amazon SageMaker downloads and uploads customer data and model artifacts through the specified VPC, but the training container does not have network access.'
        EnableInterContainerTrafficEncryption:
          $ref: '#/components/schemas/Boolean'
          description: 'To encrypt all communications between ML compute instances in distributed training, choose <code>True</code>. Encryption provides greater security for distributed training, but training might take longer. How long it takes depends on the amount of communication between compute instances, especially if you use a deep learning algorithm in distributed training. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/train-encrypt.html">Protect Communications Between ML Compute Instances in a Distributed Training Job</a>.'
        EnableManagedSpotTraining:
          $ref: '#/components/schemas/Boolean'
          description: '<p>To train models using managed spot training, choose <code>True</code>. Managed spot training provides a fully managed and scalable infrastructure for training machine learning models. this option is useful when training jobs can be interrupted and when there is flexibility when the training job is run. </p> <p>The complete and intermediate results of jobs are stored in an Amazon S3 bucket, and can be used as a starting point to train models incrementally. Amazon SageMaker provides metrics and logs in CloudWatch. They can be used to see when managed spot training jobs are running, interrupted, resumed, or completed. </p>'
        CheckpointConfig:
          $ref: '#/components/schemas/CheckpointConfig'
          description: Contains information about the output location for managed spot training checkpoint data.
        DebugHookConfig:
          $ref: '#/components/schemas/DebugHookConfig'
        DebugRuleConfigurations:
          $ref: '#/components/schemas/DebugRuleConfigurations'
          description: Configuration information for Debugger rules for debugging output tensors.
        TensorBoardOutputConfig:
          $ref: '#/components/schemas/TensorBoardOutputConfig'
        ExperimentConfig:
          $ref: '#/components/schemas/ExperimentConfig'
        ProfilerConfig:
          $ref: '#/components/schemas/ProfilerConfig'
        ProfilerRuleConfigurations:
          $ref: '#/components/schemas/ProfilerRuleConfigurations'
          description: Configuration information for Debugger rules for profiling system and framework metrics.
        Environment:
          $ref: '#/components/schemas/TrainingEnvironmentMap'
          description: The environment variables to set in the Docker container.
        RetryStrategy:
          $ref: '#/components/schemas/RetryStrategy'
          description: The number of times to retry the job when the job fails due to an <code>InternalServerError</code>.
    CreateTransformJobResponse:
      type: object
      required:
        - TransformJobArn
      properties:
        TransformJobArn:
          $ref: '#/components/schemas/TransformJobArn'
          description: The Amazon Resource Name (ARN) of the transform job.
    CreateTransformJobRequest:
      type: object
      required:
        - TransformJobName
        - ModelName
        - TransformInput
        - TransformOutput
        - TransformResources
      title: CreateTransformJobRequest
      properties:
        TransformJobName:
          $ref: '#/components/schemas/TransformJobName'
          description: 'The name of the transform job. The name must be unique within an Amazon Web Services Region in an Amazon Web Services account. '
        ModelName:
          $ref: '#/components/schemas/ModelName'
          description: The name of the model that you want to use for the transform job. <code>ModelName</code> must be the name of an existing Amazon SageMaker model within an Amazon Web Services Region in an Amazon Web Services account.
        MaxConcurrentTransforms:
          $ref: '#/components/schemas/MaxConcurrentTransforms'
          description: 'The maximum number of parallel requests that can be sent to each instance in a transform job. If <code>MaxConcurrentTransforms</code> is set to <code>0</code> or left unset, Amazon SageMaker checks the optional execution-parameters to determine the settings for your chosen algorithm. If the execution-parameters endpoint is not enabled, the default value is <code>1</code>. For more information on execution-parameters, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms-batch-code.html#your-algorithms-batch-code-how-containe-serves-requests">How Containers Serve Requests</a>. For built-in algorithms, you don''t need to set a value for <code>MaxConcurrentTransforms</code>.'
        ModelClientConfig:
          $ref: '#/components/schemas/ModelClientConfig'
          description: Configures the timeout and maximum number of retries for processing a transform job invocation.
        MaxPayloadInMB:
          $ref: '#/components/schemas/MaxPayloadInMB'
          description: '<p>The maximum allowed size of the payload, in MB. A <i>payload</i> is the data portion of a record (without metadata). The value in <code>MaxPayloadInMB</code> must be greater than, or equal to, the size of a single record. To estimate the size of a record in MB, divide the size of your dataset by the number of records. To ensure that the records fit within the maximum payload size, we recommend using a slightly larger value. The default value is <code>6</code> MB. </p> <p>For cases where the payload might be arbitrarily large and is transmitted using HTTP chunked encoding, set the value to <code>0</code>. This feature works only in supported algorithms. Currently, Amazon SageMaker built-in algorithms do not support HTTP chunked encoding.</p>'
        BatchStrategy:
          $ref: '#/components/schemas/BatchStrategy'
          description: '<p>Specifies the number of records to include in a mini-batch for an HTTP inference request. A <i>record</i> <i/> is a single unit of input data that inference can be made on. For example, a single line in a CSV file is a record. </p> <p>To enable the batch strategy, you must set the <code>SplitType</code> property to <code>Line</code>, <code>RecordIO</code>, or <code>TFRecord</code>.</p> <p>To use only one record when making an HTTP invocation request to a container, set <code>BatchStrategy</code> to <code>SingleRecord</code> and <code>SplitType</code> to <code>Line</code>.</p> <p>To fit as many records in a mini-batch as can fit within the <code>MaxPayloadInMB</code> limit, set <code>BatchStrategy</code> to <code>MultiRecord</code> and <code>SplitType</code> to <code>Line</code>.</p>'
        Environment:
          $ref: '#/components/schemas/TransformEnvironmentMap'
          description: The environment variables to set in the Docker container. We support up to 16 key and values entries in the map.
        TransformInput:
          $ref: '#/components/schemas/TransformInput'
          description: Describes the input source and the way the transform job consumes it.
        TransformOutput:
          $ref: '#/components/schemas/TransformOutput'
          description: Describes the results of the transform job.
        TransformResources:
          $ref: '#/components/schemas/TransformResources'
          description: 'Describes the resources, including ML instance types and ML instance count, to use for the transform job.'
        DataProcessing:
          $ref: '#/components/schemas/DataProcessing'
          description: 'The data structure used to specify the data to be used for inference in a batch transform job and to associate the data that is relevant to the prediction results in the output. The input filter provided allows you to exclude input data that is not needed for inference in a batch transform job. The output filter provided allows you to include input data relevant to interpreting the predictions in the output from the job. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/batch-transform-data-processing.html">Associate Prediction Results with their Corresponding Input Records</a>.'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: '(Optional) An array of key-value pairs. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-what">Using Cost Allocation Tags</a> in the <i>Amazon Web Services Billing and Cost Management User Guide</i>.'
        ExperimentConfig:
          $ref: '#/components/schemas/ExperimentConfig'
    CreateTrialResponse:
      type: object
      properties:
        TrialArn:
          $ref: '#/components/schemas/TrialArn'
          description: The Amazon Resource Name (ARN) of the trial.
    CreateTrialRequest:
      type: object
      required:
        - TrialName
        - ExperimentName
      title: CreateTrialRequest
      properties:
        TrialName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the trial. The name must be unique in your Amazon Web Services account and is not case-sensitive.
        DisplayName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: 'The name of the trial as displayed. The name doesn''t need to be unique. If <code>DisplayName</code> isn''t specified, <code>TrialName</code> is displayed.'
        ExperimentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the experiment to associate the trial with.
        MetadataProperties:
          $ref: '#/components/schemas/MetadataProperties'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A list of tags to associate with the trial. You can use <a>Search</a> API to search on the tags.
    CreateTrialComponentResponse:
      type: object
      properties:
        TrialComponentArn:
          $ref: '#/components/schemas/TrialComponentArn'
          description: The Amazon Resource Name (ARN) of the trial component.
    CreateTrialComponentRequest:
      type: object
      required:
        - TrialComponentName
      title: CreateTrialComponentRequest
      properties:
        TrialComponentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the component. The name must be unique in your Amazon Web Services account and is not case-sensitive.
        DisplayName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: 'The name of the component as displayed. The name doesn''t need to be unique. If <code>DisplayName</code> isn''t specified, <code>TrialComponentName</code> is displayed.'
        Status:
          $ref: '#/components/schemas/TrialComponentStatus'
          description: '<p>The status of the component. States include:</p> <ul> <li> <p>InProgress</p> </li> <li> <p>Completed</p> </li> <li> <p>Failed</p> </li> </ul>'
        StartTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the component started.
        EndTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the component ended.
        Parameters:
          $ref: '#/components/schemas/TrialComponentParameters'
          description: The hyperparameters for the component.
        InputArtifacts:
          $ref: '#/components/schemas/TrialComponentArtifacts'
          description: 'The input artifacts for the component. Examples of input artifacts are datasets, algorithms, hyperparameters, source code, and instance types.'
        OutputArtifacts:
          $ref: '#/components/schemas/TrialComponentArtifacts'
          description: 'The output artifacts for the component. Examples of output artifacts are metrics, snapshots, logs, and images.'
        MetadataProperties:
          $ref: '#/components/schemas/MetadataProperties'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A list of tags to associate with the component. You can use <a>Search</a> API to search on the tags.
    CreateUserProfileResponse:
      type: object
      properties:
        UserProfileArn:
          $ref: '#/components/schemas/UserProfileArn'
          description: The user profile Amazon Resource Name (ARN).
    CreateUserProfileRequest:
      type: object
      required:
        - DomainId
        - UserProfileName
      title: CreateUserProfileRequest
      properties:
        DomainId:
          $ref: '#/components/schemas/DomainId'
          description: The ID of the associated Domain.
        UserProfileName:
          $ref: '#/components/schemas/UserProfileName'
          description: A name for the UserProfile. This value is not case sensitive.
        SingleSignOnUserIdentifier:
          $ref: '#/components/schemas/SingleSignOnUserIdentifier'
          description: 'A specifier for the type of value specified in SingleSignOnUserValue. Currently, the only supported value is "UserName". If the Domain''s AuthMode is SSO, this field is required. If the Domain''s AuthMode is not SSO, this field cannot be specified. '
        SingleSignOnUserValue:
          $ref: '#/components/schemas/String256'
          description: 'The username of the associated Amazon Web Services Single Sign-On User for this UserProfile. If the Domain''s AuthMode is SSO, this field is required, and must match a valid username of a user in your directory. If the Domain''s AuthMode is not SSO, this field cannot be specified. '
        Tags:
          $ref: '#/components/schemas/TagList'
          description: <p>Each tag consists of a key and an optional value. Tag keys must be unique per resource.</p> <p>Tags that you specify for the User Profile are also added to all Apps that the User Profile launches.</p>
        UserSettings:
          $ref: '#/components/schemas/UserSettings'
          description: A collection of settings.
    CreateWorkforceResponse:
      type: object
      required:
        - WorkforceArn
      properties:
        WorkforceArn:
          $ref: '#/components/schemas/WorkforceArn'
          description: The Amazon Resource Name (ARN) of the workforce.
    CreateWorkforceRequest:
      type: object
      required:
        - WorkforceName
      title: CreateWorkforceRequest
      properties:
        CognitoConfig:
          $ref: '#/components/schemas/CognitoConfig'
          description: '<p>Use this parameter to configure an Amazon Cognito private workforce. A single Cognito workforce is created using and corresponds to a single <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools.html"> Amazon Cognito user pool</a>.</p> <p>Do not use <code>OidcConfig</code> if you specify values for <code>CognitoConfig</code>.</p>'
        OidcConfig:
          $ref: '#/components/schemas/OidcConfig'
          description: <p>Use this parameter to configure a private workforce using your own OIDC Identity Provider.</p> <p>Do not use <code>CognitoConfig</code> if you specify values for <code>OidcConfig</code>.</p>
        SourceIpConfig:
          $ref: '#/components/schemas/SourceIpConfig'
        WorkforceName:
          $ref: '#/components/schemas/WorkforceName'
          description: The name of the private workforce.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'An array of key-value pairs that contain metadata to help you categorize and organize our workforce. Each tag consists of a key and a value, both of which you define.'
    CreateWorkteamResponse:
      type: object
      properties:
        WorkteamArn:
          $ref: '#/components/schemas/WorkteamArn'
          description: The Amazon Resource Name (ARN) of the work team. You can use this ARN to identify the work team.
    CreateWorkteamRequest:
      type: object
      required:
        - WorkteamName
        - MemberDefinitions
        - Description
      title: CreateWorkteamRequest
      properties:
        WorkteamName:
          $ref: '#/components/schemas/WorkteamName'
          description: The name of the work team. Use this name to identify the work team.
        WorkforceName:
          $ref: '#/components/schemas/WorkforceName'
          description: The name of the workforce.
        MemberDefinitions:
          $ref: '#/components/schemas/MemberDefinitions'
          description: '<p>A list of <code>MemberDefinition</code> objects that contains objects that identify the workers that make up the work team. </p> <p>Workforces can be created using Amazon Cognito or your own OIDC Identity Provider (IdP). For private workforces created using Amazon Cognito use <code>CognitoMemberDefinition</code>. For workforces created using your own OIDC identity provider (IdP) use <code>OidcMemberDefinition</code>. Do not provide input for both of these parameters in a single request.</p> <p>For workforces created using Amazon Cognito, private work teams correspond to Amazon Cognito <i>user groups</i> within the user pool used to create a workforce. All of the <code>CognitoMemberDefinition</code> objects that make up the member definition must have the same <code>ClientId</code> and <code>UserPool</code> values. To add a Amazon Cognito user group to an existing worker pool, see <a href="">Adding groups to a User Pool</a>. For more information about user pools, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools.html">Amazon Cognito User Pools</a>.</p> <p>For workforces created using your own OIDC IdP, specify the user groups that you want to include in your private work team in <code>OidcMemberDefinition</code> by listing those groups in <code>Groups</code>.</p>'
        Description:
          $ref: '#/components/schemas/String200'
          description: A description of the work team.
        NotificationConfiguration:
          $ref: '#/components/schemas/NotificationConfiguration'
          description: Configures notification of workers regarding available or expiring work items.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: '<p>An array of key-value pairs.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html">Resource Tag</a> and <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-what">Using Cost Allocation Tags</a> in the <i> Amazon Web Services Billing and Cost Management User Guide</i>.</p>'
    DeleteActionResponse:
      type: object
      properties:
        ActionArn:
          $ref: '#/components/schemas/ActionArn'
          description: The Amazon Resource Name (ARN) of the action.
    DeleteActionRequest:
      type: object
      required:
        - ActionName
      title: DeleteActionRequest
      properties:
        ActionName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the action to delete.
    DeleteAlgorithmInput:
      type: object
      required:
        - AlgorithmName
      title: DeleteAlgorithmInput
      properties:
        AlgorithmName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the algorithm to delete.
    DeleteAppRequest:
      type: object
      required:
        - DomainId
        - UserProfileName
        - AppType
        - AppName
      title: DeleteAppRequest
      properties:
        DomainId:
          $ref: '#/components/schemas/DomainId'
          description: The domain ID.
        UserProfileName:
          $ref: '#/components/schemas/UserProfileName'
          description: The user profile name.
        AppType:
          $ref: '#/components/schemas/AppType'
          description: The type of app.
        AppName:
          $ref: '#/components/schemas/AppName'
          description: The name of the app.
    DeleteAppImageConfigRequest:
      type: object
      required:
        - AppImageConfigName
      title: DeleteAppImageConfigRequest
      properties:
        AppImageConfigName:
          $ref: '#/components/schemas/AppImageConfigName'
          description: The name of the AppImageConfig to delete.
    DeleteArtifactResponse:
      type: object
      properties:
        ArtifactArn:
          $ref: '#/components/schemas/ArtifactArn'
          description: The Amazon Resource Name (ARN) of the artifact.
    DeleteArtifactRequest:
      type: object
      title: DeleteArtifactRequest
      properties:
        ArtifactArn:
          $ref: '#/components/schemas/ArtifactArn'
          description: The Amazon Resource Name (ARN) of the artifact to delete.
        Source:
          $ref: '#/components/schemas/ArtifactSource'
          description: The URI of the source.
    DeleteAssociationResponse:
      type: object
      properties:
        SourceArn:
          $ref: '#/components/schemas/AssociationEntityArn'
          description: The ARN of the source.
        DestinationArn:
          $ref: '#/components/schemas/AssociationEntityArn'
          description: The Amazon Resource Name (ARN) of the destination.
    DeleteAssociationRequest:
      type: object
      required:
        - SourceArn
        - DestinationArn
      title: DeleteAssociationRequest
      properties:
        SourceArn:
          $ref: '#/components/schemas/AssociationEntityArn'
          description: The ARN of the source.
        DestinationArn:
          $ref: '#/components/schemas/AssociationEntityArn'
          description: The Amazon Resource Name (ARN) of the destination.
    DeleteCodeRepositoryInput:
      type: object
      required:
        - CodeRepositoryName
      title: DeleteCodeRepositoryInput
      properties:
        CodeRepositoryName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the Git repository to delete.
    DeleteContextResponse:
      type: object
      properties:
        ContextArn:
          $ref: '#/components/schemas/ContextArn'
          description: The Amazon Resource Name (ARN) of the context.
    DeleteContextRequest:
      type: object
      required:
        - ContextName
      title: DeleteContextRequest
      properties:
        ContextName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the context to delete.
    DeleteDataQualityJobDefinitionRequest:
      type: object
      required:
        - JobDefinitionName
      title: DeleteDataQualityJobDefinitionRequest
      properties:
        JobDefinitionName:
          $ref: '#/components/schemas/MonitoringJobDefinitionName'
          description: The name of the data quality monitoring job definition to delete.
    DeleteDeviceFleetRequest:
      type: object
      required:
        - DeviceFleetName
      title: DeleteDeviceFleetRequest
      properties:
        DeviceFleetName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the fleet to delete.
    DeleteDomainRequest:
      type: object
      required:
        - DomainId
      title: DeleteDomainRequest
      properties:
        DomainId:
          $ref: '#/components/schemas/DomainId'
          description: The domain ID.
        RetentionPolicy:
          $ref: '#/components/schemas/RetentionPolicy'
          description: 'The retention policy for this domain, which specifies whether resources will be retained after the Domain is deleted. By default, all resources are retained (not automatically deleted). '
    DeleteEndpointInput:
      type: object
      required:
        - EndpointName
      title: DeleteEndpointInput
      properties:
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
          description: The name of the endpoint that you want to delete.
    DeleteEndpointConfigInput:
      type: object
      required:
        - EndpointConfigName
      title: DeleteEndpointConfigInput
      properties:
        EndpointConfigName:
          $ref: '#/components/schemas/EndpointConfigName'
          description: The name of the endpoint configuration that you want to delete.
    DeleteExperimentResponse:
      type: object
      properties:
        ExperimentArn:
          $ref: '#/components/schemas/ExperimentArn'
          description: The Amazon Resource Name (ARN) of the experiment that is being deleted.
    DeleteExperimentRequest:
      type: object
      required:
        - ExperimentName
      title: DeleteExperimentRequest
      properties:
        ExperimentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the experiment to delete.
    DeleteFeatureGroupRequest:
      type: object
      required:
        - FeatureGroupName
      title: DeleteFeatureGroupRequest
      properties:
        FeatureGroupName:
          $ref: '#/components/schemas/FeatureGroupName'
          description: 'The name of the <code>FeatureGroup</code> you want to delete. The name must be unique within an Amazon Web Services Region in an Amazon Web Services account. '
    DeleteFlowDefinitionResponse:
      type: object
      properties: {}
    DeleteFlowDefinitionRequest:
      type: object
      required:
        - FlowDefinitionName
      title: DeleteFlowDefinitionRequest
      properties:
        FlowDefinitionName:
          $ref: '#/components/schemas/FlowDefinitionName'
          description: The name of the flow definition you are deleting.
    DeleteHumanTaskUiResponse:
      type: object
      properties: {}
    DeleteHumanTaskUiRequest:
      type: object
      required:
        - HumanTaskUiName
      title: DeleteHumanTaskUiRequest
      properties:
        HumanTaskUiName:
          $ref: '#/components/schemas/HumanTaskUiName'
          description: The name of the human task user interface (work task template) you want to delete.
    DeleteImageResponse:
      type: object
      properties: {}
    DeleteImageRequest:
      type: object
      required:
        - ImageName
      title: DeleteImageRequest
      properties:
        ImageName:
          $ref: '#/components/schemas/ImageName'
          description: The name of the image to delete.
    DeleteImageVersionResponse:
      type: object
      properties: {}
    DeleteImageVersionRequest:
      type: object
      required:
        - ImageName
        - Version
      title: DeleteImageVersionRequest
      properties:
        ImageName:
          $ref: '#/components/schemas/ImageName'
          description: The name of the image.
        Version:
          $ref: '#/components/schemas/ImageVersionNumber'
          description: The version to delete.
    DeleteModelInput:
      type: object
      required:
        - ModelName
      title: DeleteModelInput
      properties:
        ModelName:
          $ref: '#/components/schemas/ModelName'
          description: The name of the model to delete.
    DeleteModelBiasJobDefinitionRequest:
      type: object
      required:
        - JobDefinitionName
      title: DeleteModelBiasJobDefinitionRequest
      properties:
        JobDefinitionName:
          $ref: '#/components/schemas/MonitoringJobDefinitionName'
          description: The name of the model bias job definition to delete.
    DeleteModelExplainabilityJobDefinitionRequest:
      type: object
      required:
        - JobDefinitionName
      title: DeleteModelExplainabilityJobDefinitionRequest
      properties:
        JobDefinitionName:
          $ref: '#/components/schemas/MonitoringJobDefinitionName'
          description: The name of the model explainability job definition to delete.
    DeleteModelPackageInput:
      type: object
      required:
        - ModelPackageName
      title: DeleteModelPackageInput
      properties:
        ModelPackageName:
          $ref: '#/components/schemas/VersionedArnOrName'
          description: '<p>The name or Amazon Resource Name (ARN) of the model package to delete.</p> <p>When you specify a name, the name must have 1 to 63 characters. Valid characters are a-z, A-Z, 0-9, and - (hyphen).</p>'
    DeleteModelPackageGroupInput:
      type: object
      required:
        - ModelPackageGroupName
      title: DeleteModelPackageGroupInput
      properties:
        ModelPackageGroupName:
          $ref: '#/components/schemas/ArnOrName'
          description: The name of the model group to delete.
    DeleteModelPackageGroupPolicyInput:
      type: object
      required:
        - ModelPackageGroupName
      title: DeleteModelPackageGroupPolicyInput
      properties:
        ModelPackageGroupName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the model group for which to delete the policy.
    DeleteModelQualityJobDefinitionRequest:
      type: object
      required:
        - JobDefinitionName
      title: DeleteModelQualityJobDefinitionRequest
      properties:
        JobDefinitionName:
          $ref: '#/components/schemas/MonitoringJobDefinitionName'
          description: The name of the model quality monitoring job definition to delete.
    DeleteMonitoringScheduleRequest:
      type: object
      required:
        - MonitoringScheduleName
      title: DeleteMonitoringScheduleRequest
      properties:
        MonitoringScheduleName:
          $ref: '#/components/schemas/MonitoringScheduleName'
          description: The name of the monitoring schedule to delete.
    DeleteNotebookInstanceInput:
      type: object
      required:
        - NotebookInstanceName
      title: DeleteNotebookInstanceInput
      properties:
        NotebookInstanceName:
          $ref: '#/components/schemas/NotebookInstanceName'
          description: The name of the Amazon SageMaker notebook instance to delete.
    DeleteNotebookInstanceLifecycleConfigInput:
      type: object
      required:
        - NotebookInstanceLifecycleConfigName
      title: DeleteNotebookInstanceLifecycleConfigInput
      properties:
        NotebookInstanceLifecycleConfigName:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigName'
          description: The name of the lifecycle configuration to delete.
    DeletePipelineResponse:
      type: object
      properties:
        PipelineArn:
          $ref: '#/components/schemas/PipelineArn'
          description: The Amazon Resource Name (ARN) of the pipeline to delete.
    DeletePipelineRequest:
      type: object
      required:
        - PipelineName
        - ClientRequestToken
      title: DeletePipelineRequest
      properties:
        PipelineName:
          $ref: '#/components/schemas/PipelineName'
          description: The name of the pipeline to delete.
        ClientRequestToken:
          $ref: '#/components/schemas/IdempotencyToken'
          description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the operation. An idempotent operation completes no more than one time.'
    DeleteProjectInput:
      type: object
      required:
        - ProjectName
      title: DeleteProjectInput
      properties:
        ProjectName:
          $ref: '#/components/schemas/ProjectEntityName'
          description: The name of the project to delete.
    DeleteTagsOutput:
      type: object
      properties: {}
    DeleteTagsInput:
      type: object
      required:
        - ResourceArn
        - TagKeys
      title: DeleteTagsInput
      properties:
        ResourceArn:
          $ref: '#/components/schemas/ResourceArn'
          description: The Amazon Resource Name (ARN) of the resource whose tags you want to delete.
        TagKeys:
          $ref: '#/components/schemas/TagKeyList'
          description: An array or one or more tag keys to delete.
    DeleteTrialResponse:
      type: object
      properties:
        TrialArn:
          $ref: '#/components/schemas/TrialArn'
          description: The Amazon Resource Name (ARN) of the trial that is being deleted.
    DeleteTrialRequest:
      type: object
      required:
        - TrialName
      title: DeleteTrialRequest
      properties:
        TrialName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the trial to delete.
    DeleteTrialComponentResponse:
      type: object
      properties:
        TrialComponentArn:
          $ref: '#/components/schemas/TrialComponentArn'
          description: The Amazon Resource Name (ARN) of the component is being deleted.
    DeleteTrialComponentRequest:
      type: object
      required:
        - TrialComponentName
      title: DeleteTrialComponentRequest
      properties:
        TrialComponentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the component to delete.
    DeleteUserProfileRequest:
      type: object
      required:
        - DomainId
        - UserProfileName
      title: DeleteUserProfileRequest
      properties:
        DomainId:
          $ref: '#/components/schemas/DomainId'
          description: The domain ID.
        UserProfileName:
          $ref: '#/components/schemas/UserProfileName'
          description: The user profile name.
    DeleteWorkforceResponse:
      type: object
      properties: {}
    DeleteWorkforceRequest:
      type: object
      required:
        - WorkforceName
      title: DeleteWorkforceRequest
      properties:
        WorkforceName:
          $ref: '#/components/schemas/WorkforceName'
          description: The name of the workforce.
    DeleteWorkteamResponse:
      type: object
      required:
        - Success
      properties:
        Success:
          $ref: '#/components/schemas/Success'
          description: 'Returns <code>true</code> if the work team was successfully deleted; otherwise, returns <code>false</code>.'
    DeleteWorkteamRequest:
      type: object
      required:
        - WorkteamName
      title: DeleteWorkteamRequest
      properties:
        WorkteamName:
          $ref: '#/components/schemas/WorkteamName'
          description: The name of the work team to delete.
    DeregisterDevicesRequest:
      type: object
      required:
        - DeviceFleetName
        - DeviceNames
      title: DeregisterDevicesRequest
      properties:
        DeviceFleetName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the fleet the devices belong to.
        DeviceNames:
          $ref: '#/components/schemas/DeviceNames'
          description: The unique IDs of the devices.
    DescribeActionResponse:
      type: object
      properties:
        ActionName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the action.
        ActionArn:
          $ref: '#/components/schemas/ActionArn'
          description: The Amazon Resource Name (ARN) of the action.
        Source:
          $ref: '#/components/schemas/ActionSource'
          description: The source of the action.
        ActionType:
          $ref: '#/components/schemas/String256'
          description: The type of the action.
        Description:
          $ref: '#/components/schemas/ExperimentDescription'
          description: The description of the action.
        Status:
          $ref: '#/components/schemas/ActionStatus'
          description: The status of the action.
        Properties:
          $ref: '#/components/schemas/LineageEntityParameters'
          description: A list of the action's properties.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the action was created.
        CreatedBy:
          $ref: '#/components/schemas/UserContext'
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the action was last modified.
        LastModifiedBy:
          $ref: '#/components/schemas/UserContext'
        MetadataProperties:
          $ref: '#/components/schemas/MetadataProperties'
    DescribeActionRequest:
      type: object
      required:
        - ActionName
      title: DescribeActionRequest
      properties:
        ActionName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the action to describe.
    DescribeAlgorithmOutput:
      type: object
      required:
        - AlgorithmName
        - AlgorithmArn
        - CreationTime
        - TrainingSpecification
        - AlgorithmStatus
        - AlgorithmStatusDetails
      properties:
        AlgorithmName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the algorithm being described.
        AlgorithmArn:
          $ref: '#/components/schemas/AlgorithmArn'
          description: The Amazon Resource Name (ARN) of the algorithm.
        AlgorithmDescription:
          $ref: '#/components/schemas/EntityDescription'
          description: A brief summary about the algorithm.
        CreationTime:
          $ref: '#/components/schemas/CreationTime'
          description: A timestamp specifying when the algorithm was created.
        TrainingSpecification:
          $ref: '#/components/schemas/TrainingSpecification'
          description: Details about training jobs run by this algorithm.
        InferenceSpecification:
          $ref: '#/components/schemas/InferenceSpecification'
          description: Details about inference jobs that the algorithm runs.
        ValidationSpecification:
          $ref: '#/components/schemas/AlgorithmValidationSpecification'
          description: Details about configurations for one or more training jobs that Amazon SageMaker runs to test the algorithm.
        AlgorithmStatus:
          $ref: '#/components/schemas/AlgorithmStatus'
          description: The current status of the algorithm.
        AlgorithmStatusDetails:
          $ref: '#/components/schemas/AlgorithmStatusDetails'
          description: Details about the current status of the algorithm.
        ProductId:
          $ref: '#/components/schemas/ProductId'
          description: The product identifier of the algorithm.
        CertifyForMarketplace:
          $ref: '#/components/schemas/CertifyForMarketplace'
          description: Whether the algorithm is certified to be listed in Amazon Web Services Marketplace.
    DescribeAlgorithmInput:
      type: object
      required:
        - AlgorithmName
      title: DescribeAlgorithmInput
      properties:
        AlgorithmName:
          $ref: '#/components/schemas/ArnOrName'
          description: The name of the algorithm to describe.
    DescribeAppResponse:
      type: object
      properties:
        AppArn:
          $ref: '#/components/schemas/AppArn'
          description: The Amazon Resource Name (ARN) of the app.
        AppType:
          $ref: '#/components/schemas/AppType'
          description: The type of app.
        AppName:
          $ref: '#/components/schemas/AppName'
          description: The name of the app.
        DomainId:
          $ref: '#/components/schemas/DomainId'
          description: The domain ID.
        UserProfileName:
          $ref: '#/components/schemas/UserProfileName'
          description: The user profile name.
        Status:
          $ref: '#/components/schemas/AppStatus'
          description: The status.
        LastHealthCheckTimestamp:
          $ref: '#/components/schemas/Timestamp'
          description: The timestamp of the last health check.
        LastUserActivityTimestamp:
          $ref: '#/components/schemas/Timestamp'
          description: The timestamp of the last user's activity.
        CreationTime:
          $ref: '#/components/schemas/CreationTime'
          description: The creation time.
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: The failure reason.
        ResourceSpec:
          $ref: '#/components/schemas/ResourceSpec'
          description: The instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance.
    DescribeAppRequest:
      type: object
      required:
        - DomainId
        - UserProfileName
        - AppType
        - AppName
      title: DescribeAppRequest
      properties:
        DomainId:
          $ref: '#/components/schemas/DomainId'
          description: The domain ID.
        UserProfileName:
          $ref: '#/components/schemas/UserProfileName'
          description: The user profile name.
        AppType:
          $ref: '#/components/schemas/AppType'
          description: The type of app.
        AppName:
          $ref: '#/components/schemas/AppName'
          description: The name of the app.
    DescribeAppImageConfigResponse:
      type: object
      properties:
        AppImageConfigArn:
          $ref: '#/components/schemas/AppImageConfigArn'
          description: The Amazon Resource Name (ARN) of the AppImageConfig.
        AppImageConfigName:
          $ref: '#/components/schemas/AppImageConfigName'
          description: The name of the AppImageConfig.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the AppImageConfig was created.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the AppImageConfig was last modified.
        KernelGatewayImageConfig:
          $ref: '#/components/schemas/KernelGatewayImageConfig'
          description: The configuration of a KernelGateway app.
    DescribeAppImageConfigRequest:
      type: object
      required:
        - AppImageConfigName
      title: DescribeAppImageConfigRequest
      properties:
        AppImageConfigName:
          $ref: '#/components/schemas/AppImageConfigName'
          description: The name of the AppImageConfig to describe.
    DescribeArtifactResponse:
      type: object
      properties:
        ArtifactName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the artifact.
        ArtifactArn:
          $ref: '#/components/schemas/ArtifactArn'
          description: The Amazon Resource Name (ARN) of the artifact.
        Source:
          $ref: '#/components/schemas/ArtifactSource'
          description: The source of the artifact.
        ArtifactType:
          $ref: '#/components/schemas/String256'
          description: The type of the artifact.
        Properties:
          $ref: '#/components/schemas/LineageEntityParameters'
          description: A list of the artifact's properties.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the artifact was created.
        CreatedBy:
          $ref: '#/components/schemas/UserContext'
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the artifact was last modified.
        LastModifiedBy:
          $ref: '#/components/schemas/UserContext'
        MetadataProperties:
          $ref: '#/components/schemas/MetadataProperties'
    DescribeArtifactRequest:
      type: object
      required:
        - ArtifactArn
      title: DescribeArtifactRequest
      properties:
        ArtifactArn:
          $ref: '#/components/schemas/ArtifactArn'
          description: The Amazon Resource Name (ARN) of the artifact to describe.
    DescribeAutoMLJobResponse:
      type: object
      required:
        - AutoMLJobName
        - AutoMLJobArn
        - InputDataConfig
        - OutputDataConfig
        - RoleArn
        - CreationTime
        - LastModifiedTime
        - AutoMLJobStatus
        - AutoMLJobSecondaryStatus
      properties:
        AutoMLJobName:
          $ref: '#/components/schemas/AutoMLJobName'
          description: Returns the name of the AutoML job.
        AutoMLJobArn:
          $ref: '#/components/schemas/AutoMLJobArn'
          description: Returns the ARN of the AutoML job.
        InputDataConfig:
          $ref: '#/components/schemas/AutoMLInputDataConfig'
          description: Returns the input data configuration for the AutoML job..
        OutputDataConfig:
          $ref: '#/components/schemas/AutoMLOutputDataConfig'
          description: Returns the job's output data config.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of the Amazon Web Services Identity and Access Management (IAM) role that has read permission to the input data location and write permission to the output data location in Amazon S3.
        AutoMLJobObjective:
          $ref: '#/components/schemas/AutoMLJobObjective'
          description: Returns the job's objective.
        ProblemType:
          $ref: '#/components/schemas/ProblemType'
          description: Returns the job's problem type.
        AutoMLJobConfig:
          $ref: '#/components/schemas/AutoMLJobConfig'
          description: Returns the configuration for the AutoML job.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: Returns the creation time of the AutoML job.
        EndTime:
          $ref: '#/components/schemas/Timestamp'
          description: Returns the end time of the AutoML job.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: Returns the job's last modified time.
        FailureReason:
          $ref: '#/components/schemas/AutoMLFailureReason'
          description: 'Returns the failure reason for an AutoML job, when applicable.'
        PartialFailureReasons:
          $ref: '#/components/schemas/AutoMLPartialFailureReasons'
          description: Returns a list of reasons for partial failures within an AutoML job.
        BestCandidate:
          $ref: '#/components/schemas/AutoMLCandidate'
          description: Returns the job's best <code>AutoMLCandidate</code>.
        AutoMLJobStatus:
          $ref: '#/components/schemas/AutoMLJobStatus'
          description: Returns the status of the AutoML job.
        AutoMLJobSecondaryStatus:
          $ref: '#/components/schemas/AutoMLJobSecondaryStatus'
          description: Returns the secondary status of the AutoML job.
        GenerateCandidateDefinitionsOnly:
          $ref: '#/components/schemas/GenerateCandidateDefinitionsOnly'
          description: Indicates whether the output for an AutoML job generates candidate definitions only.
        AutoMLJobArtifacts:
          $ref: '#/components/schemas/AutoMLJobArtifacts'
          description: Returns information on the job's artifacts found in <code>AutoMLJobArtifacts</code>.
        ResolvedAttributes:
          $ref: '#/components/schemas/ResolvedAttributes'
          description: 'This contains <code>ProblemType</code>, <code>AutoMLJobObjective</code>, and <code>CompletionCriteria</code>. If you do not provide these values, they are auto-inferred. If you do provide them, the values used are the ones you provide.'
        ModelDeployConfig:
          $ref: '#/components/schemas/ModelDeployConfig'
          description: Indicates whether the model was deployed automatically to an endpoint and the name of that endpoint if deployed automatically.
        ModelDeployResult:
          $ref: '#/components/schemas/ModelDeployResult'
          description: Provides information about endpoint for the model deployment.
    DescribeAutoMLJobRequest:
      type: object
      required:
        - AutoMLJobName
      title: DescribeAutoMLJobRequest
      properties:
        AutoMLJobName:
          $ref: '#/components/schemas/AutoMLJobName'
          description: Requests information about an AutoML job using its unique name.
    DescribeCodeRepositoryOutput:
      type: object
      required:
        - CodeRepositoryName
        - CodeRepositoryArn
        - CreationTime
        - LastModifiedTime
      properties:
        CodeRepositoryName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the Git repository.
        CodeRepositoryArn:
          $ref: '#/components/schemas/CodeRepositoryArn'
          description: The Amazon Resource Name (ARN) of the Git repository.
        CreationTime:
          $ref: '#/components/schemas/CreationTime'
          description: The date and time that the repository was created.
        LastModifiedTime:
          $ref: '#/components/schemas/LastModifiedTime'
          description: The date and time that the repository was last changed.
        GitConfig:
          $ref: '#/components/schemas/GitConfig'
          description: 'Configuration details about the repository, including the URL where the repository is located, the default branch, and the Amazon Resource Name (ARN) of the Amazon Web Services Secrets Manager secret that contains the credentials used to access the repository.'
    DescribeCodeRepositoryInput:
      type: object
      required:
        - CodeRepositoryName
      title: DescribeCodeRepositoryInput
      properties:
        CodeRepositoryName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the Git repository to describe.
    DescribeCompilationJobResponse:
      type: object
      required:
        - CompilationJobName
        - CompilationJobArn
        - CompilationJobStatus
        - StoppingCondition
        - CreationTime
        - LastModifiedTime
        - FailureReason
        - ModelArtifacts
        - RoleArn
        - InputConfig
        - OutputConfig
      properties:
        CompilationJobName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the model compilation job.
        CompilationJobArn:
          $ref: '#/components/schemas/CompilationJobArn'
          description: The Amazon Resource Name (ARN) of the model compilation job.
        CompilationJobStatus:
          $ref: '#/components/schemas/CompilationJobStatus'
          description: The status of the model compilation job.
        CompilationStartTime:
          $ref: '#/components/schemas/Timestamp'
          description: '<p>The time when the model compilation job started the <code>CompilationJob</code> instances. </p> <p>You are billed for the time between this timestamp and the timestamp in the <a>DescribeCompilationJobResponse$CompilationEndTime</a> field. In Amazon CloudWatch Logs, the start time might be later than this time. That''s because it takes time to download the compilation job, which depends on the size of the compilation job container. </p>'
        CompilationEndTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'The time when the model compilation job on a compilation job instance ended. For a successful or stopped job, this is when the job''s model artifacts have finished uploading. For a failed job, this is when Amazon SageMaker detected that the job failed. '
        StoppingCondition:
          $ref: '#/components/schemas/StoppingCondition'
          description: 'Specifies a limit to how long a model compilation job can run. When the job reaches the time limit, Amazon SageMaker ends the compilation job. Use this API to cap model training costs.'
        InferenceImage:
          $ref: '#/components/schemas/InferenceImage'
          description: The inference image to use when compiling a model. Specify an image only if the target device is a cloud instance.
        CreationTime:
          $ref: '#/components/schemas/CreationTime'
          description: The time that the model compilation job was created.
        LastModifiedTime:
          $ref: '#/components/schemas/LastModifiedTime'
          description: The time that the status of the model compilation job was last modified.
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'If a model compilation job failed, the reason it failed. '
        ModelArtifacts:
          $ref: '#/components/schemas/ModelArtifacts'
          description: Information about the location in Amazon S3 that has been configured for storing the model artifacts used in the compilation job.
        ModelDigests:
          $ref: '#/components/schemas/ModelDigests'
          description: Provides a BLAKE2 hash value that identifies the compiled model artifacts in Amazon S3.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker assumes to perform the model compilation job.
        InputConfig:
          $ref: '#/components/schemas/InputConfig'
          description: 'Information about the location in Amazon S3 of the input model artifacts, the name and shape of the expected data inputs, and the framework in which the model was trained.'
        OutputConfig:
          $ref: '#/components/schemas/OutputConfig'
          description: Information about the output location for the compiled model and the target device that the model runs on.
        VpcConfig:
          $ref: '#/components/schemas/NeoVpcConfig'
          description: 'A <a>VpcConfig</a> object that specifies the VPC that you want your compilation job to connect to. Control access to your models by configuring the VPC. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/neo-vpc.html">Protect Compilation Jobs by Using an Amazon Virtual Private Cloud</a>.'
    DescribeCompilationJobRequest:
      type: object
      required:
        - CompilationJobName
      title: DescribeCompilationJobRequest
      properties:
        CompilationJobName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the model compilation job that you want information about.
    DescribeContextResponse:
      type: object
      properties:
        ContextName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the context.
        ContextArn:
          $ref: '#/components/schemas/ContextArn'
          description: The Amazon Resource Name (ARN) of the context.
        Source:
          $ref: '#/components/schemas/ContextSource'
          description: The source of the context.
        ContextType:
          $ref: '#/components/schemas/String256'
          description: The type of the context.
        Description:
          $ref: '#/components/schemas/ExperimentDescription'
          description: The description of the context.
        Properties:
          $ref: '#/components/schemas/LineageEntityParameters'
          description: A list of the context's properties.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the context was created.
        CreatedBy:
          $ref: '#/components/schemas/UserContext'
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the context was last modified.
        LastModifiedBy:
          $ref: '#/components/schemas/UserContext'
    DescribeContextRequest:
      type: object
      required:
        - ContextName
      title: DescribeContextRequest
      properties:
        ContextName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the context to describe.
    DescribeDataQualityJobDefinitionResponse:
      type: object
      required:
        - JobDefinitionArn
        - JobDefinitionName
        - CreationTime
        - DataQualityAppSpecification
        - DataQualityJobInput
        - DataQualityJobOutputConfig
        - JobResources
        - RoleArn
      properties:
        JobDefinitionArn:
          $ref: '#/components/schemas/MonitoringJobDefinitionArn'
          description: The Amazon Resource Name (ARN) of the data quality monitoring job definition.
        JobDefinitionName:
          $ref: '#/components/schemas/MonitoringJobDefinitionName'
          description: The name of the data quality monitoring job definition.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the data quality monitoring job definition was created.
        DataQualityBaselineConfig:
          $ref: '#/components/schemas/DataQualityBaselineConfig'
          description: The constraints and baselines for the data quality monitoring job definition.
        DataQualityAppSpecification:
          $ref: '#/components/schemas/DataQualityAppSpecification'
          description: Information about the container that runs the data quality monitoring job.
        DataQualityJobInput:
          $ref: '#/components/schemas/DataQualityJobInput'
          description: The list of inputs for the data quality monitoring job. Currently endpoints are supported.
        DataQualityJobOutputConfig:
          $ref: '#/components/schemas/MonitoringOutputConfig'
        JobResources:
          $ref: '#/components/schemas/MonitoringResources'
        NetworkConfig:
          $ref: '#/components/schemas/MonitoringNetworkConfig'
          description: The networking configuration for the data quality monitoring job.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
        StoppingCondition:
          $ref: '#/components/schemas/MonitoringStoppingCondition'
    DescribeDataQualityJobDefinitionRequest:
      type: object
      required:
        - JobDefinitionName
      title: DescribeDataQualityJobDefinitionRequest
      properties:
        JobDefinitionName:
          $ref: '#/components/schemas/MonitoringJobDefinitionName'
          description: The name of the data quality monitoring job definition to describe.
    DescribeDeviceResponse:
      type: object
      required:
        - DeviceName
        - DeviceFleetName
        - RegistrationTime
      properties:
        DeviceArn:
          $ref: '#/components/schemas/DeviceArn'
          description: The Amazon Resource Name (ARN) of the device.
        DeviceName:
          $ref: '#/components/schemas/EntityName'
          description: The unique identifier of the device.
        Description:
          $ref: '#/components/schemas/DeviceDescription'
          description: A description of the device.
        DeviceFleetName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the fleet the device belongs to.
        IotThingName:
          $ref: '#/components/schemas/ThingName'
          description: The Amazon Web Services Internet of Things (IoT) object thing name associated with the device.
        RegistrationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The timestamp of the last registration or de-reregistration.
        LatestHeartbeat:
          $ref: '#/components/schemas/Timestamp'
          description: The last heartbeat received from the device.
        Models:
          $ref: '#/components/schemas/EdgeModels'
          description: Models on the device.
        MaxModels:
          $ref: '#/components/schemas/Integer'
          description: The maximum number of models.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The response from the last list when returning a list large enough to need tokening.
    DescribeDeviceRequest:
      type: object
      required:
        - DeviceName
        - DeviceFleetName
      title: DescribeDeviceRequest
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: Next token of device description.
        DeviceName:
          $ref: '#/components/schemas/EntityName'
          description: The unique ID of the device.
        DeviceFleetName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the fleet the devices belong to.
    DescribeDeviceFleetResponse:
      type: object
      required:
        - DeviceFleetName
        - DeviceFleetArn
        - OutputConfig
        - CreationTime
        - LastModifiedTime
      properties:
        DeviceFleetName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the fleet.
        DeviceFleetArn:
          $ref: '#/components/schemas/DeviceFleetArn'
          description: The The Amazon Resource Name (ARN) of the fleet.
        OutputConfig:
          $ref: '#/components/schemas/EdgeOutputConfig'
          description: The output configuration for storing sampled data.
        Description:
          $ref: '#/components/schemas/DeviceFleetDescription'
          description: A description of the fleet.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: Timestamp of when the device fleet was created.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: Timestamp of when the device fleet was last updated.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) that has access to Amazon Web Services Internet of Things (IoT).
        IotRoleAlias:
          $ref: '#/components/schemas/IotRoleAlias'
          description: The Amazon Resource Name (ARN) alias created in Amazon Web Services Internet of Things (IoT).
    DescribeDeviceFleetRequest:
      type: object
      required:
        - DeviceFleetName
      title: DescribeDeviceFleetRequest
      properties:
        DeviceFleetName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the fleet.
    DescribeDomainResponse:
      type: object
      properties:
        DomainArn:
          $ref: '#/components/schemas/DomainArn'
          description: The domain's Amazon Resource Name (ARN).
        DomainId:
          $ref: '#/components/schemas/DomainId'
          description: The domain ID.
        DomainName:
          $ref: '#/components/schemas/DomainName'
          description: The domain name.
        HomeEfsFileSystemId:
          $ref: '#/components/schemas/ResourceId'
          description: The ID of the Amazon Elastic File System (EFS) managed by this Domain.
        SingleSignOnManagedApplicationInstanceId:
          $ref: '#/components/schemas/String256'
          description: The SSO managed application instance ID.
        Status:
          $ref: '#/components/schemas/DomainStatus'
          description: The status.
        CreationTime:
          $ref: '#/components/schemas/CreationTime'
          description: The creation time.
        LastModifiedTime:
          $ref: '#/components/schemas/LastModifiedTime'
          description: The last modified time.
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: The failure reason.
        AuthMode:
          $ref: '#/components/schemas/AuthMode'
          description: The domain's authentication mode.
        DefaultUserSettings:
          $ref: '#/components/schemas/UserSettings'
          description: 'Settings which are applied to UserProfiles in this domain if settings are not explicitly specified in a given UserProfile. '
        AppNetworkAccessType:
          $ref: '#/components/schemas/AppNetworkAccessType'
          description: '<p>Specifies the VPC used for non-EFS traffic. The default value is <code>PublicInternetOnly</code>.</p> <ul> <li> <p> <code>PublicInternetOnly</code> - Non-EFS traffic is through a VPC managed by Amazon SageMaker, which allows direct internet access</p> </li> <li> <p> <code>VpcOnly</code> - All Studio traffic is through the specified VPC and subnets</p> </li> </ul>'
        HomeEfsFileSystemKmsKeyId:
          allOf:
            - $ref: '#/components/schemas/KmsKeyId'
            - deprecated: true
              description: 'This member is deprecated and replaced with <code>KmsKeyId</code>.This property is deprecated, use KmsKeyId instead.'
        SubnetIds:
          $ref: '#/components/schemas/Subnets'
          description: The VPC subnets that Studio uses for communication.
        Url:
          $ref: '#/components/schemas/String1024'
          description: The domain's URL.
        VpcId:
          $ref: '#/components/schemas/VpcId'
          description: The ID of the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.
        KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: The Amazon Web Services KMS customer managed CMK used to encrypt the EFS volume attached to the domain.
    DescribeDomainRequest:
      type: object
      required:
        - DomainId
      title: DescribeDomainRequest
      properties:
        DomainId:
          $ref: '#/components/schemas/DomainId'
          description: The domain ID.
    DescribeEdgePackagingJobResponse:
      type: object
      required:
        - EdgePackagingJobArn
        - EdgePackagingJobName
        - EdgePackagingJobStatus
      properties:
        EdgePackagingJobArn:
          $ref: '#/components/schemas/EdgePackagingJobArn'
          description: The Amazon Resource Name (ARN) of the edge packaging job.
        EdgePackagingJobName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the edge packaging job.
        CompilationJobName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the SageMaker Neo compilation job that is used to locate model artifacts that are being packaged.
        ModelName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the model.
        ModelVersion:
          $ref: '#/components/schemas/EdgeVersion'
          description: The version of the model.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: 'The Amazon Resource Name (ARN) of an IAM role that enables Amazon SageMaker to download and upload the model, and to contact Neo.'
        OutputConfig:
          $ref: '#/components/schemas/EdgeOutputConfig'
          description: The output configuration for the edge packaging job.
        ResourceKey:
          $ref: '#/components/schemas/KmsKeyId'
          description: The CMK to use when encrypting the EBS volume the job run on.
        EdgePackagingJobStatus:
          $ref: '#/components/schemas/EdgePackagingJobStatus'
          description: The current status of the packaging job.
        EdgePackagingJobStatusMessage:
          $ref: '#/components/schemas/String'
          description: Returns a message describing the job status and error messages.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The timestamp of when the packaging job was created.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The timestamp of when the job was last updated.
        ModelArtifact:
          $ref: '#/components/schemas/S3Uri'
          description: The Amazon Simple Storage (S3) URI where model artifacts ares stored.
        ModelSignature:
          $ref: '#/components/schemas/String'
          description: The signature document of files in the model artifact.
        PresetDeploymentOutput:
          $ref: '#/components/schemas/EdgePresetDeploymentOutput'
          description: The output of a SageMaker Edge Manager deployable resource.
    DescribeEdgePackagingJobRequest:
      type: object
      required:
        - EdgePackagingJobName
      title: DescribeEdgePackagingJobRequest
      properties:
        EdgePackagingJobName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the edge packaging job.
    DescribeEndpointOutput:
      type: object
      required:
        - EndpointName
        - EndpointArn
        - EndpointConfigName
        - EndpointStatus
        - CreationTime
        - LastModifiedTime
      properties:
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
          description: Name of the endpoint.
        EndpointArn:
          $ref: '#/components/schemas/EndpointArn'
          description: The Amazon Resource Name (ARN) of the endpoint.
        EndpointConfigName:
          $ref: '#/components/schemas/EndpointConfigName'
          description: The name of the endpoint configuration associated with this endpoint.
        ProductionVariants:
          $ref: '#/components/schemas/ProductionVariantSummaryList'
          description: ' An array of <a>ProductionVariantSummary</a> objects, one for each model hosted behind this endpoint. '
        DataCaptureConfig:
          $ref: '#/components/schemas/DataCaptureConfigSummary'
        EndpointStatus:
          $ref: '#/components/schemas/EndpointStatus'
          description: '<p>The status of the endpoint.</p> <ul> <li> <p> <code>OutOfService</code>: Endpoint is not available to take incoming requests.</p> </li> <li> <p> <code>Creating</code>: <a>CreateEndpoint</a> is executing.</p> </li> <li> <p> <code>Updating</code>: <a>UpdateEndpoint</a> or <a>UpdateEndpointWeightsAndCapacities</a> is executing.</p> </li> <li> <p> <code>SystemUpdating</code>: Endpoint is undergoing maintenance and cannot be updated or deleted or re-scaled until it has completed. This maintenance operation does not change any customer-specified values such as VPC config, KMS encryption, model, instance type, or instance count.</p> </li> <li> <p> <code>RollingBack</code>: Endpoint fails to scale up or down or change its variant weight and is in the process of rolling back to its previous configuration. Once the rollback completes, endpoint returns to an <code>InService</code> status. This transitional status only applies to an endpoint that has autoscaling enabled and is undergoing variant weight or capacity changes as part of an <a>UpdateEndpointWeightsAndCapacities</a> call or when the <a>UpdateEndpointWeightsAndCapacities</a> operation is called explicitly.</p> </li> <li> <p> <code>InService</code>: Endpoint is available to process incoming requests.</p> </li> <li> <p> <code>Deleting</code>: <a>DeleteEndpoint</a> is executing.</p> </li> <li> <p> <code>Failed</code>: Endpoint could not be created, updated, or re-scaled. Use <a>DescribeEndpointOutput$FailureReason</a> for information about the failure. <a>DeleteEndpoint</a> is the only operation that can be performed on a failed endpoint.</p> </li> </ul>'
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'If the status of the endpoint is <code>Failed</code>, the reason why it failed. '
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp that shows when the endpoint was created.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp that shows when the endpoint was last modified.
        LastDeploymentConfig:
          $ref: '#/components/schemas/DeploymentConfig'
          description: The most recent deployment configuration for the endpoint.
        AsyncInferenceConfig:
          $ref: '#/components/schemas/AsyncInferenceConfig'
          description: 'Returns the description of an endpoint configuration created using the <a href="https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateEndpointConfig.html"> <code>CreateEndpointConfig</code> </a> API.'
    DescribeEndpointInput:
      type: object
      required:
        - EndpointName
      title: DescribeEndpointInput
      properties:
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
          description: The name of the endpoint.
    DescribeEndpointConfigOutput:
      type: object
      required:
        - EndpointConfigName
        - EndpointConfigArn
        - ProductionVariants
        - CreationTime
      properties:
        EndpointConfigName:
          $ref: '#/components/schemas/EndpointConfigName'
          description: Name of the Amazon SageMaker endpoint configuration.
        EndpointConfigArn:
          $ref: '#/components/schemas/EndpointConfigArn'
          description: The Amazon Resource Name (ARN) of the endpoint configuration.
        ProductionVariants:
          $ref: '#/components/schemas/ProductionVariantList'
          description: 'An array of <code>ProductionVariant</code> objects, one for each model that you want to host at this endpoint.'
        DataCaptureConfig:
          $ref: '#/components/schemas/DataCaptureConfig'
        KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: Amazon Web Services KMS key ID Amazon SageMaker uses to encrypt data when storing it on the ML storage volume attached to the instance.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp that shows when the endpoint configuration was created.
        AsyncInferenceConfig:
          $ref: '#/components/schemas/AsyncInferenceConfig'
          description: 'Returns the description of an endpoint configuration created using the <a href="https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateEndpointConfig.html"> <code>CreateEndpointConfig</code> </a> API.'
    DescribeEndpointConfigInput:
      type: object
      required:
        - EndpointConfigName
      title: DescribeEndpointConfigInput
      properties:
        EndpointConfigName:
          $ref: '#/components/schemas/EndpointConfigName'
          description: The name of the endpoint configuration.
    DescribeExperimentResponse:
      type: object
      properties:
        ExperimentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the experiment.
        ExperimentArn:
          $ref: '#/components/schemas/ExperimentArn'
          description: The Amazon Resource Name (ARN) of the experiment.
        DisplayName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: 'The name of the experiment as displayed. If <code>DisplayName</code> isn''t specified, <code>ExperimentName</code> is displayed.'
        Source:
          $ref: '#/components/schemas/ExperimentSource'
          description: 'The ARN of the source and, optionally, the type.'
        Description:
          $ref: '#/components/schemas/ExperimentDescription'
          description: The description of the experiment.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the experiment was created.
        CreatedBy:
          $ref: '#/components/schemas/UserContext'
          description: Who created the experiment.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the experiment was last modified.
        LastModifiedBy:
          $ref: '#/components/schemas/UserContext'
          description: Who last modified the experiment.
    DescribeExperimentRequest:
      type: object
      required:
        - ExperimentName
      title: DescribeExperimentRequest
      properties:
        ExperimentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the experiment to describe.
    DescribeFeatureGroupResponse:
      type: object
      required:
        - FeatureGroupArn
        - FeatureGroupName
        - RecordIdentifierFeatureName
        - EventTimeFeatureName
        - FeatureDefinitions
        - CreationTime
        - NextToken
      properties:
        FeatureGroupArn:
          $ref: '#/components/schemas/FeatureGroupArn'
          description: 'The Amazon Resource Name (ARN) of the <code>FeatureGroup</code>. '
        FeatureGroupName:
          $ref: '#/components/schemas/FeatureGroupName'
          description: he name of the <code>FeatureGroup</code>.
        RecordIdentifierFeatureName:
          $ref: '#/components/schemas/FeatureName'
          description: 'The name of the <code>Feature</code> used for <code>RecordIdentifier</code>, whose value uniquely identifies a record stored in the feature store.'
        EventTimeFeatureName:
          $ref: '#/components/schemas/FeatureName'
          description: <p>The name of the feature that stores the <code>EventTime</code> of a Record in a <code>FeatureGroup</code>.</p> <p> An <code>EventTime</code> is a point in time when a new event occurs that corresponds to the creation or update of a <code>Record</code> in a <code>FeatureGroup</code>. All <code>Records</code> in the <code>FeatureGroup</code> have a corresponding <code>EventTime</code>.</p>
        FeatureDefinitions:
          $ref: '#/components/schemas/FeatureDefinitions'
          description: A list of the <code>Features</code> in the <code>FeatureGroup</code>. Each feature is defined by a <code>FeatureName</code> and <code>FeatureType</code>.
        CreationTime:
          $ref: '#/components/schemas/CreationTime'
          description: A timestamp indicating when SageMaker created the <code>FeatureGroup</code>.
        OnlineStoreConfig:
          $ref: '#/components/schemas/OnlineStoreConfig'
          description: The configuration for the <code>OnlineStore</code>.
        OfflineStoreConfig:
          $ref: '#/components/schemas/OfflineStoreConfig'
          description: 'The configuration of the <code>OfflineStore</code>, inducing the S3 location of the <code>OfflineStore</code>, Amazon Web Services Glue or Amazon Web Services Hive data catalogue configurations, and the security configuration.'
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of the IAM execution role used to persist data into the <code>OfflineStore</code> if an <code>OfflineStoreConfig</code> is provided.
        FeatureGroupStatus:
          $ref: '#/components/schemas/FeatureGroupStatus'
          description: The status of the feature group.
        OfflineStoreStatus:
          $ref: '#/components/schemas/OfflineStoreStatus'
          description: 'The status of the <code>OfflineStore</code>. Notifies you if replicating data into the <code>OfflineStore</code> has failed. Returns either: <code>Active</code> or <code>Blocked</code> '
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: '<p>The reason that the <code>FeatureGroup</code> failed to be replicated in the <code>OfflineStore</code>. This is failure can occur because:</p> <ul> <li> <p>The <code>FeatureGroup</code> could not be created in the <code>OfflineStore</code>.</p> </li> <li> <p>The <code>FeatureGroup</code> could not be deleted from the <code>OfflineStore</code>.</p> </li> </ul>'
        Description:
          $ref: '#/components/schemas/Description'
          description: A free form description of the feature group.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token to resume pagination of the list of <code>Features</code> (<code>FeatureDefinitions</code>).
    DescribeFeatureGroupRequest:
      type: object
      required:
        - FeatureGroupName
      title: DescribeFeatureGroupRequest
      properties:
        FeatureGroupName:
          $ref: '#/components/schemas/FeatureGroupName'
          description: 'The name of the <code>FeatureGroup</code> you want described. '
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token to resume pagination of the list of <code>Features</code> (<code>FeatureDefinitions</code>). 2,500 <code>Features</code> are returned by default.'
    DescribeFlowDefinitionResponse:
      type: object
      required:
        - FlowDefinitionArn
        - FlowDefinitionName
        - FlowDefinitionStatus
        - CreationTime
        - HumanLoopConfig
        - OutputConfig
        - RoleArn
      properties:
        FlowDefinitionArn:
          $ref: '#/components/schemas/FlowDefinitionArn'
          description: The Amazon Resource Name (ARN) of the flow defintion.
        FlowDefinitionName:
          $ref: '#/components/schemas/FlowDefinitionName'
          description: The Amazon Resource Name (ARN) of the flow definition.
        FlowDefinitionStatus:
          $ref: '#/components/schemas/FlowDefinitionStatus'
          description: The status of the flow definition. Valid values are listed below.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the flow definition was created.
        HumanLoopRequestSource:
          $ref: '#/components/schemas/HumanLoopRequestSource'
          description: Container for configuring the source of human task requests. Used to specify if Amazon Rekognition or Amazon Textract is used as an integration source.
        HumanLoopActivationConfig:
          $ref: '#/components/schemas/HumanLoopActivationConfig'
          description: An object containing information about what triggers a human review workflow.
        HumanLoopConfig:
          $ref: '#/components/schemas/HumanLoopConfig'
          description: 'An object containing information about who works on the task, the workforce task price, and other task details.'
        OutputConfig:
          $ref: '#/components/schemas/FlowDefinitionOutputConfig'
          description: An object containing information about the output file.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of the Amazon Web Services Identity and Access Management (IAM) execution role for the flow definition.
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: The reason your flow definition failed.
    DescribeFlowDefinitionRequest:
      type: object
      required:
        - FlowDefinitionName
      title: DescribeFlowDefinitionRequest
      properties:
        FlowDefinitionName:
          $ref: '#/components/schemas/FlowDefinitionName'
          description: The name of the flow definition.
    DescribeHumanTaskUiResponse:
      type: object
      required:
        - HumanTaskUiArn
        - HumanTaskUiName
        - CreationTime
        - UiTemplate
      properties:
        HumanTaskUiArn:
          $ref: '#/components/schemas/HumanTaskUiArn'
          description: The Amazon Resource Name (ARN) of the human task user interface (worker task template).
        HumanTaskUiName:
          $ref: '#/components/schemas/HumanTaskUiName'
          description: The name of the human task user interface (worker task template).
        HumanTaskUiStatus:
          $ref: '#/components/schemas/HumanTaskUiStatus'
          description: The status of the human task user interface (worker task template). Valid values are listed below.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the human task user interface was created.
        UiTemplate:
          $ref: '#/components/schemas/UiTemplateInfo'
    DescribeHumanTaskUiRequest:
      type: object
      required:
        - HumanTaskUiName
      title: DescribeHumanTaskUiRequest
      properties:
        HumanTaskUiName:
          $ref: '#/components/schemas/HumanTaskUiName'
          description: The name of the human task user interface (worker task template) you want information about.
    DescribeHyperParameterTuningJobResponse:
      type: object
      required:
        - HyperParameterTuningJobName
        - HyperParameterTuningJobArn
        - HyperParameterTuningJobConfig
        - HyperParameterTuningJobStatus
        - CreationTime
        - TrainingJobStatusCounters
        - ObjectiveStatusCounters
      properties:
        HyperParameterTuningJobName:
          $ref: '#/components/schemas/HyperParameterTuningJobName'
          description: The name of the tuning job.
        HyperParameterTuningJobArn:
          $ref: '#/components/schemas/HyperParameterTuningJobArn'
          description: The Amazon Resource Name (ARN) of the tuning job.
        HyperParameterTuningJobConfig:
          $ref: '#/components/schemas/HyperParameterTuningJobConfig'
          description: The <a>HyperParameterTuningJobConfig</a> object that specifies the configuration of the tuning job.
        TrainingJobDefinition:
          $ref: '#/components/schemas/HyperParameterTrainingJobDefinition'
          description: The <a>HyperParameterTrainingJobDefinition</a> object that specifies the definition of the training jobs that this tuning job launches.
        TrainingJobDefinitions:
          $ref: '#/components/schemas/HyperParameterTrainingJobDefinitions'
          description: A list of the <a>HyperParameterTrainingJobDefinition</a> objects launched for this tuning job.
        HyperParameterTuningJobStatus:
          $ref: '#/components/schemas/HyperParameterTuningJobStatus'
          description: 'The status of the tuning job: InProgress, Completed, Failed, Stopping, or Stopped.'
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time that the tuning job started.
        HyperParameterTuningEndTime:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time that the tuning job ended.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time that the status of the tuning job was modified. '
        TrainingJobStatusCounters:
          $ref: '#/components/schemas/TrainingJobStatusCounters'
          description: 'The <a>TrainingJobStatusCounters</a> object that specifies the number of training jobs, categorized by status, that this tuning job launched.'
        ObjectiveStatusCounters:
          $ref: '#/components/schemas/ObjectiveStatusCounters'
          description: 'The <a>ObjectiveStatusCounters</a> object that specifies the number of training jobs, categorized by the status of their final objective metric, that this tuning job launched.'
        BestTrainingJob:
          $ref: '#/components/schemas/HyperParameterTrainingJobSummary'
          description: A <a>TrainingJobSummary</a> object that describes the training job that completed with the best current <a>HyperParameterTuningJobObjective</a>.
        OverallBestTrainingJob:
          $ref: '#/components/schemas/HyperParameterTrainingJobSummary'
          description: 'If the hyperparameter tuning job is an warm start tuning job with a <code>WarmStartType</code> of <code>IDENTICAL_DATA_AND_ALGORITHM</code>, this is the <a>TrainingJobSummary</a> for the training job with the best objective metric value of all training jobs launched by this tuning job and all parent jobs specified for the warm start tuning job.'
        WarmStartConfig:
          $ref: '#/components/schemas/HyperParameterTuningJobWarmStartConfig'
          description: The configuration for starting the hyperparameter parameter tuning job using one or more previous tuning jobs as a starting point. The results of previous tuning jobs are used to inform which combinations of hyperparameters to search over in the new tuning job.
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'If the tuning job failed, the reason it failed.'
    DescribeHyperParameterTuningJobRequest:
      type: object
      required:
        - HyperParameterTuningJobName
      title: DescribeHyperParameterTuningJobRequest
      properties:
        HyperParameterTuningJobName:
          $ref: '#/components/schemas/HyperParameterTuningJobName'
          description: The name of the tuning job.
    DescribeImageResponse:
      type: object
      properties:
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the image was created.
        Description:
          $ref: '#/components/schemas/ImageDescription'
          description: The description of the image.
        DisplayName:
          $ref: '#/components/schemas/ImageDisplayName'
          description: The name of the image as displayed.
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'When a create, update, or delete operation fails, the reason for the failure.'
        ImageArn:
          $ref: '#/components/schemas/ImageArn'
          description: The Amazon Resource Name (ARN) of the image.
        ImageName:
          $ref: '#/components/schemas/ImageName'
          description: The name of the image.
        ImageStatus:
          $ref: '#/components/schemas/ImageStatus'
          description: The status of the image.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the image was last modified.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of the IAM role that enables Amazon SageMaker to perform tasks on your behalf.
    DescribeImageRequest:
      type: object
      required:
        - ImageName
      title: DescribeImageRequest
      properties:
        ImageName:
          $ref: '#/components/schemas/ImageName'
          description: The name of the image to describe.
    DescribeImageVersionResponse:
      type: object
      properties:
        BaseImage:
          $ref: '#/components/schemas/ImageBaseImage'
          description: The registry path of the container image on which this image version is based.
        ContainerImage:
          $ref: '#/components/schemas/ImageContainerImage'
          description: The registry path of the container image that contains this image version.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the version was created.
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'When a create or delete operation fails, the reason for the failure.'
        ImageArn:
          $ref: '#/components/schemas/ImageArn'
          description: The Amazon Resource Name (ARN) of the image the version is based on.
        ImageVersionArn:
          $ref: '#/components/schemas/ImageVersionArn'
          description: The ARN of the version.
        ImageVersionStatus:
          $ref: '#/components/schemas/ImageVersionStatus'
          description: The status of the version.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the version was last modified.
        Version:
          $ref: '#/components/schemas/ImageVersionNumber'
          description: The version number.
    DescribeImageVersionRequest:
      type: object
      required:
        - ImageName
      title: DescribeImageVersionRequest
      properties:
        ImageName:
          $ref: '#/components/schemas/ImageName'
          description: The name of the image.
        Version:
          $ref: '#/components/schemas/ImageVersionNumber'
          description: 'The version of the image. If not specified, the latest version is described.'
    DescribeLabelingJobResponse:
      type: object
      required:
        - LabelingJobStatus
        - LabelCounters
        - CreationTime
        - LastModifiedTime
        - JobReferenceCode
        - LabelingJobName
        - LabelingJobArn
        - InputConfig
        - OutputConfig
        - RoleArn
        - HumanTaskConfig
      properties:
        LabelingJobStatus:
          $ref: '#/components/schemas/LabelingJobStatus'
          description: 'The processing status of the labeling job. '
        LabelCounters:
          $ref: '#/components/schemas/LabelCounters'
          description: 'Provides a breakdown of the number of data objects labeled by humans, the number of objects labeled by machine, the number of objects than couldn''t be labeled, and the total number of objects labeled. '
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'If the job failed, the reason that it failed. '
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time that the labeling job was created.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time that the labeling job was last updated.
        JobReferenceCode:
          $ref: '#/components/schemas/JobReferenceCode'
          description: A unique identifier for work done as part of a labeling job.
        LabelingJobName:
          $ref: '#/components/schemas/LabelingJobName'
          description: The name assigned to the labeling job when it was created.
        LabelingJobArn:
          $ref: '#/components/schemas/LabelingJobArn'
          description: The Amazon Resource Name (ARN) of the labeling job.
        LabelAttributeName:
          $ref: '#/components/schemas/LabelAttributeName'
          description: The attribute used as the label in the output manifest file.
        InputConfig:
          $ref: '#/components/schemas/LabelingJobInputConfig'
          description: 'Input configuration information for the labeling job, such as the Amazon S3 location of the data objects and the location of the manifest file that describes the data objects.'
        OutputConfig:
          $ref: '#/components/schemas/LabelingJobOutputConfig'
          description: 'The location of the job''s output data and the Amazon Web Services Key Management Service key ID for the key used to encrypt the output data, if any.'
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) that Amazon SageMaker assumes to perform tasks on your behalf during data labeling.
        LabelCategoryConfigS3Uri:
          $ref: '#/components/schemas/S3Uri'
          description: '<p>The S3 location of the JSON file that defines the categories used to label data objects. Please note the following label-category limits:</p> <ul> <li> <p>Semantic segmentation labeling jobs using automated labeling: 20 labels</p> </li> <li> <p>Box bounding labeling jobs (all): 10 labels</p> </li> </ul> <p>The file is a JSON structure in the following format:</p> <p> <code>{</code> </p> <p> <code> "document-version": "2018-11-28"</code> </p> <p> <code> "labels": [</code> </p> <p> <code> {</code> </p> <p> <code> "label": "<i>label 1</i>"</code> </p> <p> <code> },</code> </p> <p> <code> {</code> </p> <p> <code> "label": "<i>label 2</i>"</code> </p> <p> <code> },</code> </p> <p> <code> ...</code> </p> <p> <code> {</code> </p> <p> <code> "label": "<i>label n</i>"</code> </p> <p> <code> }</code> </p> <p> <code> ]</code> </p> <p> <code>}</code> </p>'
        StoppingConditions:
          $ref: '#/components/schemas/LabelingJobStoppingConditions'
          description: 'A set of conditions for stopping a labeling job. If any of the conditions are met, the job is automatically stopped.'
        LabelingJobAlgorithmsConfig:
          $ref: '#/components/schemas/LabelingJobAlgorithmsConfig'
          description: Configuration information for automated data labeling.
        HumanTaskConfig:
          $ref: '#/components/schemas/HumanTaskConfig'
          description: Configuration information required for human workers to complete a labeling task.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'An array of key-value pairs. You can use tags to categorize your Amazon Web Services resources in different ways, for example, by purpose, owner, or environment. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services Resources</a>.'
        LabelingJobOutput:
          $ref: '#/components/schemas/LabelingJobOutput'
          description: The location of the output produced by the labeling job.
    DescribeLabelingJobRequest:
      type: object
      required:
        - LabelingJobName
      title: DescribeLabelingJobRequest
      properties:
        LabelingJobName:
          $ref: '#/components/schemas/LabelingJobName'
          description: The name of the labeling job to return information for.
    DescribeModelOutput:
      type: object
      required:
        - ModelName
        - ExecutionRoleArn
        - CreationTime
        - ModelArn
      properties:
        ModelName:
          $ref: '#/components/schemas/ModelName'
          description: Name of the Amazon SageMaker model.
        PrimaryContainer:
          $ref: '#/components/schemas/ContainerDefinition'
          description: 'The location of the primary inference code, associated artifacts, and custom environment map that the inference code uses when it is deployed in production. '
        Containers:
          $ref: '#/components/schemas/ContainerDefinitionList'
          description: The containers in the inference pipeline.
        InferenceExecutionConfig:
          $ref: '#/components/schemas/InferenceExecutionConfig'
          description: Specifies details of how containers in a multi-container endpoint are called.
        ExecutionRoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of the IAM role that you specified for the model.
        VpcConfig:
          $ref: '#/components/schemas/VpcConfig'
          description: 'A <a>VpcConfig</a> object that specifies the VPC that this model has access to. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html">Protect Endpoints by Using an Amazon Virtual Private Cloud</a> '
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp that shows when the model was created.
        ModelArn:
          $ref: '#/components/schemas/ModelArn'
          description: The Amazon Resource Name (ARN) of the model.
        EnableNetworkIsolation:
          $ref: '#/components/schemas/Boolean'
          description: 'If <code>True</code>, no inbound or outbound network calls can be made to or from the model container.'
    DescribeModelInput:
      type: object
      required:
        - ModelName
      title: DescribeModelInput
      properties:
        ModelName:
          $ref: '#/components/schemas/ModelName'
          description: The name of the model.
    DescribeModelBiasJobDefinitionResponse:
      type: object
      required:
        - JobDefinitionArn
        - JobDefinitionName
        - CreationTime
        - ModelBiasAppSpecification
        - ModelBiasJobInput
        - ModelBiasJobOutputConfig
        - JobResources
        - RoleArn
      properties:
        JobDefinitionArn:
          $ref: '#/components/schemas/MonitoringJobDefinitionArn'
          description: The Amazon Resource Name (ARN) of the model bias job.
        JobDefinitionName:
          $ref: '#/components/schemas/MonitoringJobDefinitionName'
          description: The name of the bias job definition. The name must be unique within an Amazon Web Services Region in the Amazon Web Services account.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the model bias job was created.
        ModelBiasBaselineConfig:
          $ref: '#/components/schemas/ModelBiasBaselineConfig'
          description: The baseline configuration for a model bias job.
        ModelBiasAppSpecification:
          $ref: '#/components/schemas/ModelBiasAppSpecification'
          description: Configures the model bias job to run a specified Docker container image.
        ModelBiasJobInput:
          $ref: '#/components/schemas/ModelBiasJobInput'
          description: Inputs for the model bias job.
        ModelBiasJobOutputConfig:
          $ref: '#/components/schemas/MonitoringOutputConfig'
        JobResources:
          $ref: '#/components/schemas/MonitoringResources'
        NetworkConfig:
          $ref: '#/components/schemas/MonitoringNetworkConfig'
          description: Networking options for a model bias job.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of the Amazon Web Services Identity and Access Management (IAM) role that has read permission to the input data location and write permission to the output data location in Amazon S3.
        StoppingCondition:
          $ref: '#/components/schemas/MonitoringStoppingCondition'
    DescribeModelBiasJobDefinitionRequest:
      type: object
      required:
        - JobDefinitionName
      title: DescribeModelBiasJobDefinitionRequest
      properties:
        JobDefinitionName:
          $ref: '#/components/schemas/MonitoringJobDefinitionName'
          description: The name of the model bias job definition. The name must be unique within an Amazon Web Services Region in the Amazon Web Services account.
    DescribeModelExplainabilityJobDefinitionResponse:
      type: object
      required:
        - JobDefinitionArn
        - JobDefinitionName
        - CreationTime
        - ModelExplainabilityAppSpecification
        - ModelExplainabilityJobInput
        - ModelExplainabilityJobOutputConfig
        - JobResources
        - RoleArn
      properties:
        JobDefinitionArn:
          $ref: '#/components/schemas/MonitoringJobDefinitionArn'
          description: The Amazon Resource Name (ARN) of the model explainability job.
        JobDefinitionName:
          $ref: '#/components/schemas/MonitoringJobDefinitionName'
          description: The name of the explainability job definition. The name must be unique within an Amazon Web Services Region in the Amazon Web Services account.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the model explainability job was created.
        ModelExplainabilityBaselineConfig:
          $ref: '#/components/schemas/ModelExplainabilityBaselineConfig'
          description: The baseline configuration for a model explainability job.
        ModelExplainabilityAppSpecification:
          $ref: '#/components/schemas/ModelExplainabilityAppSpecification'
          description: Configures the model explainability job to run a specified Docker container image.
        ModelExplainabilityJobInput:
          $ref: '#/components/schemas/ModelExplainabilityJobInput'
          description: Inputs for the model explainability job.
        ModelExplainabilityJobOutputConfig:
          $ref: '#/components/schemas/MonitoringOutputConfig'
        JobResources:
          $ref: '#/components/schemas/MonitoringResources'
        NetworkConfig:
          $ref: '#/components/schemas/MonitoringNetworkConfig'
          description: Networking options for a model explainability job.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of the Amazon Web Services Identity and Access Management (IAM) role that has read permission to the input data location and write permission to the output data location in Amazon S3.
        StoppingCondition:
          $ref: '#/components/schemas/MonitoringStoppingCondition'
    DescribeModelExplainabilityJobDefinitionRequest:
      type: object
      required:
        - JobDefinitionName
      title: DescribeModelExplainabilityJobDefinitionRequest
      properties:
        JobDefinitionName:
          $ref: '#/components/schemas/MonitoringJobDefinitionName'
          description: The name of the model explainability job definition. The name must be unique within an Amazon Web Services Region in the Amazon Web Services account.
    DescribeModelPackageOutput:
      type: object
      required:
        - ModelPackageName
        - ModelPackageArn
        - CreationTime
        - ModelPackageStatus
        - ModelPackageStatusDetails
      properties:
        ModelPackageName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the model package being described.
        ModelPackageGroupName:
          $ref: '#/components/schemas/EntityName'
          description: 'If the model is a versioned model, the name of the model group that the versioned model belongs to.'
        ModelPackageVersion:
          $ref: '#/components/schemas/ModelPackageVersion'
          description: The version of the model package.
        ModelPackageArn:
          $ref: '#/components/schemas/ModelPackageArn'
          description: The Amazon Resource Name (ARN) of the model package.
        ModelPackageDescription:
          $ref: '#/components/schemas/EntityDescription'
          description: A brief summary of the model package.
        CreationTime:
          $ref: '#/components/schemas/CreationTime'
          description: A timestamp specifying when the model package was created.
        InferenceSpecification:
          $ref: '#/components/schemas/InferenceSpecification'
          description: Details about inference jobs that can be run with models based on this model package.
        SourceAlgorithmSpecification:
          $ref: '#/components/schemas/SourceAlgorithmSpecification'
          description: Details about the algorithm that was used to create the model package.
        ValidationSpecification:
          $ref: '#/components/schemas/ModelPackageValidationSpecification'
          description: Configurations for one or more transform jobs that Amazon SageMaker runs to test the model package.
        ModelPackageStatus:
          $ref: '#/components/schemas/ModelPackageStatus'
          description: The current status of the model package.
        ModelPackageStatusDetails:
          $ref: '#/components/schemas/ModelPackageStatusDetails'
          description: Details about the current status of the model package.
        CertifyForMarketplace:
          $ref: '#/components/schemas/CertifyForMarketplace'
          description: Whether the model package is certified for listing on Amazon Web Services Marketplace.
        ModelApprovalStatus:
          $ref: '#/components/schemas/ModelApprovalStatus'
          description: The approval status of the model package.
        CreatedBy:
          $ref: '#/components/schemas/UserContext'
        MetadataProperties:
          $ref: '#/components/schemas/MetadataProperties'
        ModelMetrics:
          $ref: '#/components/schemas/ModelMetrics'
          description: Metrics for the model.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The last time the model package was modified.
        LastModifiedBy:
          $ref: '#/components/schemas/UserContext'
        ApprovalDescription:
          $ref: '#/components/schemas/ApprovalDescription'
          description: A description provided for the model approval.
    DescribeModelPackageInput:
      type: object
      required:
        - ModelPackageName
      title: DescribeModelPackageInput
      properties:
        ModelPackageName:
          $ref: '#/components/schemas/VersionedArnOrName'
          description: '<p>The name or Amazon Resource Name (ARN) of the model package to describe.</p> <p>When you specify a name, the name must have 1 to 63 characters. Valid characters are a-z, A-Z, 0-9, and - (hyphen).</p>'
    DescribeModelPackageGroupOutput:
      type: object
      required:
        - ModelPackageGroupName
        - ModelPackageGroupArn
        - CreationTime
        - CreatedBy
        - ModelPackageGroupStatus
      properties:
        ModelPackageGroupName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the model group.
        ModelPackageGroupArn:
          $ref: '#/components/schemas/ModelPackageGroupArn'
          description: The Amazon Resource Name (ARN) of the model group.
        ModelPackageGroupDescription:
          $ref: '#/components/schemas/EntityDescription'
          description: A description of the model group.
        CreationTime:
          $ref: '#/components/schemas/CreationTime'
          description: The time that the model group was created.
        CreatedBy:
          $ref: '#/components/schemas/UserContext'
        ModelPackageGroupStatus:
          $ref: '#/components/schemas/ModelPackageGroupStatus'
          description: The status of the model group.
    DescribeModelPackageGroupInput:
      type: object
      required:
        - ModelPackageGroupName
      title: DescribeModelPackageGroupInput
      properties:
        ModelPackageGroupName:
          $ref: '#/components/schemas/ArnOrName'
          description: The name of the model group to describe.
    DescribeModelQualityJobDefinitionResponse:
      type: object
      required:
        - JobDefinitionArn
        - JobDefinitionName
        - CreationTime
        - ModelQualityAppSpecification
        - ModelQualityJobInput
        - ModelQualityJobOutputConfig
        - JobResources
        - RoleArn
      properties:
        JobDefinitionArn:
          $ref: '#/components/schemas/MonitoringJobDefinitionArn'
          description: The Amazon Resource Name (ARN) of the model quality job.
        JobDefinitionName:
          $ref: '#/components/schemas/MonitoringJobDefinitionName'
          description: The name of the quality job definition. The name must be unique within an Amazon Web Services Region in the Amazon Web Services account.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the model quality job was created.
        ModelQualityBaselineConfig:
          $ref: '#/components/schemas/ModelQualityBaselineConfig'
          description: The baseline configuration for a model quality job.
        ModelQualityAppSpecification:
          $ref: '#/components/schemas/ModelQualityAppSpecification'
          description: Configures the model quality job to run a specified Docker container image.
        ModelQualityJobInput:
          $ref: '#/components/schemas/ModelQualityJobInput'
          description: Inputs for the model quality job.
        ModelQualityJobOutputConfig:
          $ref: '#/components/schemas/MonitoringOutputConfig'
        JobResources:
          $ref: '#/components/schemas/MonitoringResources'
        NetworkConfig:
          $ref: '#/components/schemas/MonitoringNetworkConfig'
          description: Networking options for a model quality job.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
        StoppingCondition:
          $ref: '#/components/schemas/MonitoringStoppingCondition'
    DescribeModelQualityJobDefinitionRequest:
      type: object
      required:
        - JobDefinitionName
      title: DescribeModelQualityJobDefinitionRequest
      properties:
        JobDefinitionName:
          $ref: '#/components/schemas/MonitoringJobDefinitionName'
          description: The name of the model quality job. The name must be unique within an Amazon Web Services Region in the Amazon Web Services account.
    DescribeMonitoringScheduleResponse:
      type: object
      required:
        - MonitoringScheduleArn
        - MonitoringScheduleName
        - MonitoringScheduleStatus
        - CreationTime
        - LastModifiedTime
        - MonitoringScheduleConfig
      properties:
        MonitoringScheduleArn:
          $ref: '#/components/schemas/MonitoringScheduleArn'
          description: The Amazon Resource Name (ARN) of the monitoring schedule.
        MonitoringScheduleName:
          $ref: '#/components/schemas/MonitoringScheduleName'
          description: Name of the monitoring schedule.
        MonitoringScheduleStatus:
          $ref: '#/components/schemas/ScheduleStatus'
          description: The status of an monitoring job.
        MonitoringType:
          $ref: '#/components/schemas/MonitoringType'
          description: <p>The type of the monitoring job that this schedule runs. This is one of the following values.</p> <ul> <li> <p> <code>DATA_QUALITY</code> - The schedule is for a data quality monitoring job.</p> </li> <li> <p> <code>MODEL_QUALITY</code> - The schedule is for a model quality monitoring job.</p> </li> <li> <p> <code>MODEL_BIAS</code> - The schedule is for a bias monitoring job.</p> </li> <li> <p> <code>MODEL_EXPLAINABILITY</code> - The schedule is for an explainability monitoring job.</p> </li> </ul>
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'A string, up to one KB in size, that contains the reason a monitoring job failed, if it failed.'
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the monitoring job was created.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the monitoring job was last modified.
        MonitoringScheduleConfig:
          $ref: '#/components/schemas/MonitoringScheduleConfig'
          description: The configuration object that specifies the monitoring schedule and defines the monitoring job.
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
          description: ' The name of the endpoint for the monitoring job.'
        LastMonitoringExecutionSummary:
          $ref: '#/components/schemas/MonitoringExecutionSummary'
          description: 'Describes metadata on the last execution to run, if there was one.'
    DescribeMonitoringScheduleRequest:
      type: object
      required:
        - MonitoringScheduleName
      title: DescribeMonitoringScheduleRequest
      properties:
        MonitoringScheduleName:
          $ref: '#/components/schemas/MonitoringScheduleName'
          description: Name of a previously created monitoring schedule.
    DescribeNotebookInstanceOutput:
      type: object
      properties:
        NotebookInstanceArn:
          $ref: '#/components/schemas/NotebookInstanceArn'
          description: The Amazon Resource Name (ARN) of the notebook instance.
        NotebookInstanceName:
          $ref: '#/components/schemas/NotebookInstanceName'
          description: 'The name of the Amazon SageMaker notebook instance. '
        NotebookInstanceStatus:
          $ref: '#/components/schemas/NotebookInstanceStatus'
          description: The status of the notebook instance.
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'If status is <code>Failed</code>, the reason it failed.'
        Url:
          $ref: '#/components/schemas/NotebookInstanceUrl'
          description: 'The URL that you use to connect to the Jupyter notebook that is running in your notebook instance. '
        InstanceType:
          $ref: '#/components/schemas/InstanceType'
          description: The type of ML compute instance running on the notebook instance.
        SubnetId:
          $ref: '#/components/schemas/SubnetId'
          description: The ID of the VPC subnet.
        SecurityGroups:
          $ref: '#/components/schemas/SecurityGroupIds'
          description: The IDs of the VPC security groups.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: 'The Amazon Resource Name (ARN) of the IAM role associated with the instance. '
        KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: 'The Amazon Web Services KMS key ID Amazon SageMaker uses to encrypt data when storing it on the ML storage volume attached to the instance. '
        NetworkInterfaceId:
          $ref: '#/components/schemas/NetworkInterfaceId'
          description: 'The network interface IDs that Amazon SageMaker created at the time of creating the instance. '
        LastModifiedTime:
          $ref: '#/components/schemas/LastModifiedTime'
          description: 'A timestamp. Use this parameter to retrieve the time when the notebook instance was last modified. '
        CreationTime:
          $ref: '#/components/schemas/CreationTime'
          description: A timestamp. Use this parameter to return the time when the notebook instance was created
        NotebookInstanceLifecycleConfigName:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigName'
          description: '<p>Returns the name of a notebook instance lifecycle configuration.</p> <p>For information about notebook instance lifestyle configurations, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/notebook-lifecycle-config.html">Step 2.1: (Optional) Customize a Notebook Instance</a> </p>'
        DirectInternetAccess:
          $ref: '#/components/schemas/DirectInternetAccess'
          description: '<p>Describes whether Amazon SageMaker provides internet access to the notebook instance. If this value is set to <i>Disabled</i>, the notebook instance does not have internet access, and cannot connect to Amazon SageMaker training and endpoint services.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/appendix-additional-considerations.html#appendix-notebook-and-internet-access">Notebook Instances Are Internet-Enabled by Default</a>.</p>'
        VolumeSizeInGB:
          $ref: '#/components/schemas/NotebookInstanceVolumeSizeInGB'
          description: 'The size, in GB, of the ML storage volume attached to the notebook instance.'
        AcceleratorTypes:
          $ref: '#/components/schemas/NotebookInstanceAcceleratorTypes'
          description: 'A list of the Elastic Inference (EI) instance types associated with this notebook instance. Currently only one EI instance type can be associated with a notebook instance. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/ei.html">Using Elastic Inference in Amazon SageMaker</a>.'
        DefaultCodeRepository:
          $ref: '#/components/schemas/CodeRepositoryNameOrUrl'
          description: 'The Git repository associated with the notebook instance as its default code repository. This can be either the name of a Git repository stored as a resource in your account, or the URL of a Git repository in <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html">Amazon Web Services CodeCommit</a> or in any other Git repository. When you open a notebook instance, it opens in the directory that contains this repository. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/nbi-git-repo.html">Associating Git Repositories with Amazon SageMaker Notebook Instances</a>.'
        AdditionalCodeRepositories:
          $ref: '#/components/schemas/AdditionalCodeRepositoryNamesOrUrls'
          description: 'An array of up to three Git repositories associated with the notebook instance. These can be either the names of Git repositories stored as resources in your account, or the URL of Git repositories in <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html">Amazon Web Services CodeCommit</a> or in any other Git repository. These repositories are cloned at the same level as the default repository of your notebook instance. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/nbi-git-repo.html">Associating Git Repositories with Amazon SageMaker Notebook Instances</a>.'
        RootAccess:
          $ref: '#/components/schemas/RootAccess'
          description: '<p>Whether root access is enabled or disabled for users of the notebook instance.</p> <note> <p>Lifecycle configurations need root access to be able to set up a notebook instance. Because of this, lifecycle configurations associated with a notebook instance always run with root access even if you disable root access for users.</p> </note>'
        PlatformIdentifier:
          $ref: '#/components/schemas/PlatformIdentifier'
          description: The platform identifier of the notebook instance runtime environment.
    DescribeNotebookInstanceInput:
      type: object
      required:
        - NotebookInstanceName
      title: DescribeNotebookInstanceInput
      properties:
        NotebookInstanceName:
          $ref: '#/components/schemas/NotebookInstanceName'
          description: The name of the notebook instance that you want information about.
    DescribeNotebookInstanceLifecycleConfigOutput:
      type: object
      properties:
        NotebookInstanceLifecycleConfigArn:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigArn'
          description: The Amazon Resource Name (ARN) of the lifecycle configuration.
        NotebookInstanceLifecycleConfigName:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigName'
          description: The name of the lifecycle configuration.
        OnCreate:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigList'
          description: 'The shell script that runs only once, when you create a notebook instance.'
        OnStart:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigList'
          description: 'The shell script that runs every time you start a notebook instance, including when you create the notebook instance.'
        LastModifiedTime:
          $ref: '#/components/schemas/LastModifiedTime'
          description: A timestamp that tells when the lifecycle configuration was last modified.
        CreationTime:
          $ref: '#/components/schemas/CreationTime'
          description: A timestamp that tells when the lifecycle configuration was created.
    DescribeNotebookInstanceLifecycleConfigInput:
      type: object
      required:
        - NotebookInstanceLifecycleConfigName
      title: DescribeNotebookInstanceLifecycleConfigInput
      properties:
        NotebookInstanceLifecycleConfigName:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigName'
          description: The name of the lifecycle configuration to describe.
    DescribePipelineResponse:
      type: object
      properties:
        PipelineArn:
          $ref: '#/components/schemas/PipelineArn'
          description: The Amazon Resource Name (ARN) of the pipeline.
        PipelineName:
          $ref: '#/components/schemas/PipelineName'
          description: The name of the pipeline.
        PipelineDisplayName:
          $ref: '#/components/schemas/PipelineName'
          description: The display name of the pipeline.
        PipelineDefinition:
          $ref: '#/components/schemas/PipelineDefinition'
          description: The JSON pipeline definition.
        PipelineDescription:
          $ref: '#/components/schemas/PipelineDescription'
          description: The description of the pipeline.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) that the pipeline uses to execute.
        PipelineStatus:
          $ref: '#/components/schemas/PipelineStatus'
          description: The status of the pipeline execution.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the pipeline was created.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the pipeline was last modified.
        LastRunTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the pipeline was last run.
        CreatedBy:
          $ref: '#/components/schemas/UserContext'
        LastModifiedBy:
          $ref: '#/components/schemas/UserContext'
    DescribePipelineRequest:
      type: object
      required:
        - PipelineName
      title: DescribePipelineRequest
      properties:
        PipelineName:
          $ref: '#/components/schemas/PipelineName'
          description: The name of the pipeline to describe.
    DescribePipelineDefinitionForExecutionResponse:
      type: object
      properties:
        PipelineDefinition:
          $ref: '#/components/schemas/PipelineDefinition'
          description: The JSON pipeline definition.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the pipeline was created.
    DescribePipelineDefinitionForExecutionRequest:
      type: object
      required:
        - PipelineExecutionArn
      title: DescribePipelineDefinitionForExecutionRequest
      properties:
        PipelineExecutionArn:
          $ref: '#/components/schemas/PipelineExecutionArn'
          description: The Amazon Resource Name (ARN) of the pipeline execution.
    DescribePipelineExecutionResponse:
      type: object
      properties:
        PipelineArn:
          $ref: '#/components/schemas/PipelineArn'
          description: The Amazon Resource Name (ARN) of the pipeline.
        PipelineExecutionArn:
          $ref: '#/components/schemas/PipelineExecutionArn'
          description: The Amazon Resource Name (ARN) of the pipeline execution.
        PipelineExecutionDisplayName:
          $ref: '#/components/schemas/PipelineExecutionName'
          description: The display name of the pipeline execution.
        PipelineExecutionStatus:
          $ref: '#/components/schemas/PipelineExecutionStatus'
          description: The status of the pipeline execution.
        PipelineExecutionDescription:
          $ref: '#/components/schemas/PipelineExecutionDescription'
          description: The description of the pipeline execution.
        PipelineExperimentConfig:
          $ref: '#/components/schemas/PipelineExperimentConfig'
        FailureReason:
          $ref: '#/components/schemas/PipelineExecutionFailureReason'
          description: 'If the execution failed, a message describing why.'
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the pipeline execution was created.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the pipeline execution was modified last.
        CreatedBy:
          $ref: '#/components/schemas/UserContext'
        LastModifiedBy:
          $ref: '#/components/schemas/UserContext'
    DescribePipelineExecutionRequest:
      type: object
      required:
        - PipelineExecutionArn
      title: DescribePipelineExecutionRequest
      properties:
        PipelineExecutionArn:
          $ref: '#/components/schemas/PipelineExecutionArn'
          description: The Amazon Resource Name (ARN) of the pipeline execution.
    DescribeProcessingJobResponse:
      type: object
      required:
        - ProcessingJobName
        - ProcessingResources
        - AppSpecification
        - ProcessingJobArn
        - ProcessingJobStatus
        - CreationTime
      properties:
        ProcessingInputs:
          $ref: '#/components/schemas/ProcessingInputs'
          description: The inputs for a processing job.
        ProcessingOutputConfig:
          $ref: '#/components/schemas/ProcessingOutputConfig'
          description: Output configuration for the processing job.
        ProcessingJobName:
          $ref: '#/components/schemas/ProcessingJobName'
          description: The name of the processing job. The name must be unique within an Amazon Web Services Region in the Amazon Web Services account.
        ProcessingResources:
          $ref: '#/components/schemas/ProcessingResources'
          description: 'Identifies the resources, ML compute instances, and ML storage volumes to deploy for a processing job. In distributed training, you specify more than one instance.'
        StoppingCondition:
          $ref: '#/components/schemas/ProcessingStoppingCondition'
          description: The time limit for how long the processing job is allowed to run.
        AppSpecification:
          $ref: '#/components/schemas/AppSpecification'
          description: Configures the processing job to run a specified container image.
        Environment:
          $ref: '#/components/schemas/ProcessingEnvironmentMap'
          description: The environment variables set in the Docker container.
        NetworkConfig:
          $ref: '#/components/schemas/NetworkConfig'
          description: Networking options for a processing job.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
        ExperimentConfig:
          $ref: '#/components/schemas/ExperimentConfig'
          description: The configuration information used to create an experiment.
        ProcessingJobArn:
          $ref: '#/components/schemas/ProcessingJobArn'
          description: The Amazon Resource Name (ARN) of the processing job.
        ProcessingJobStatus:
          $ref: '#/components/schemas/ProcessingJobStatus'
          description: Provides the status of a processing job.
        ExitMessage:
          $ref: '#/components/schemas/ExitMessage'
          description: 'An optional string, up to one KB in size, that contains metadata from the processing container when the processing job exits.'
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'A string, up to one KB in size, that contains the reason a processing job failed, if it failed.'
        ProcessingEndTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the processing job completed.
        ProcessingStartTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the processing job started.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the processing job was last modified.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the processing job was created.
        MonitoringScheduleArn:
          $ref: '#/components/schemas/MonitoringScheduleArn'
          description: The ARN of a monitoring schedule for an endpoint associated with this processing job.
        AutoMLJobArn:
          $ref: '#/components/schemas/AutoMLJobArn'
          description: The ARN of an AutoML job associated with this processing job.
        TrainingJobArn:
          $ref: '#/components/schemas/TrainingJobArn'
          description: The ARN of a training job associated with this processing job.
    DescribeProcessingJobRequest:
      type: object
      required:
        - ProcessingJobName
      title: DescribeProcessingJobRequest
      properties:
        ProcessingJobName:
          $ref: '#/components/schemas/ProcessingJobName'
          description: The name of the processing job. The name must be unique within an Amazon Web Services Region in the Amazon Web Services account.
    DescribeProjectOutput:
      type: object
      required:
        - ProjectArn
        - ProjectName
        - ProjectId
        - ServiceCatalogProvisioningDetails
        - ProjectStatus
        - CreationTime
      properties:
        ProjectArn:
          $ref: '#/components/schemas/ProjectArn'
          description: The Amazon Resource Name (ARN) of the project.
        ProjectName:
          $ref: '#/components/schemas/ProjectEntityName'
          description: The name of the project.
        ProjectId:
          $ref: '#/components/schemas/ProjectId'
          description: The ID of the project.
        ProjectDescription:
          $ref: '#/components/schemas/EntityDescription'
          description: The description of the project.
        ServiceCatalogProvisioningDetails:
          $ref: '#/components/schemas/ServiceCatalogProvisioningDetails'
          description: 'Information used to provision a service catalog product. For information, see <a href="https://docs.aws.amazon.com/servicecatalog/latest/adminguide/introduction.html">What is Amazon Web Services Service Catalog</a>.'
        ServiceCatalogProvisionedProductDetails:
          $ref: '#/components/schemas/ServiceCatalogProvisionedProductDetails'
          description: Information about a provisioned service catalog product.
        ProjectStatus:
          $ref: '#/components/schemas/ProjectStatus'
          description: The status of the project.
        CreatedBy:
          $ref: '#/components/schemas/UserContext'
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the project was created.
    DescribeProjectInput:
      type: object
      required:
        - ProjectName
      title: DescribeProjectInput
      properties:
        ProjectName:
          $ref: '#/components/schemas/ProjectEntityName'
          description: The name of the project to describe.
    DescribeSubscribedWorkteamResponse:
      type: object
      required:
        - SubscribedWorkteam
      properties:
        SubscribedWorkteam:
          $ref: '#/components/schemas/SubscribedWorkteam'
          description: A <code>Workteam</code> instance that contains information about the work team.
    DescribeSubscribedWorkteamRequest:
      type: object
      required:
        - WorkteamArn
      title: DescribeSubscribedWorkteamRequest
      properties:
        WorkteamArn:
          $ref: '#/components/schemas/WorkteamArn'
          description: The Amazon Resource Name (ARN) of the subscribed work team to describe.
    DescribeTrainingJobResponse:
      type: object
      required:
        - TrainingJobName
        - TrainingJobArn
        - ModelArtifacts
        - TrainingJobStatus
        - SecondaryStatus
        - AlgorithmSpecification
        - ResourceConfig
        - StoppingCondition
        - CreationTime
      properties:
        TrainingJobName:
          $ref: '#/components/schemas/TrainingJobName'
          description: ' Name of the model training job. '
        TrainingJobArn:
          $ref: '#/components/schemas/TrainingJobArn'
          description: The Amazon Resource Name (ARN) of the training job.
        TuningJobArn:
          $ref: '#/components/schemas/HyperParameterTuningJobArn'
          description: The Amazon Resource Name (ARN) of the associated hyperparameter tuning job if the training job was launched by a hyperparameter tuning job.
        LabelingJobArn:
          $ref: '#/components/schemas/LabelingJobArn'
          description: The Amazon Resource Name (ARN) of the Amazon SageMaker Ground Truth labeling job that created the transform or training job.
        AutoMLJobArn:
          $ref: '#/components/schemas/AutoMLJobArn'
          description: The Amazon Resource Name (ARN) of an AutoML job.
        ModelArtifacts:
          $ref: '#/components/schemas/ModelArtifacts'
          description: 'Information about the Amazon S3 location that is configured for storing model artifacts. '
        TrainingJobStatus:
          $ref: '#/components/schemas/TrainingJobStatus'
          description: '<p>The status of the training job.</p> <p>Amazon SageMaker provides the following training job statuses:</p> <ul> <li> <p> <code>InProgress</code> - The training is in progress.</p> </li> <li> <p> <code>Completed</code> - The training job has completed.</p> </li> <li> <p> <code>Failed</code> - The training job has failed. To see the reason for the failure, see the <code>FailureReason</code> field in the response to a <code>DescribeTrainingJobResponse</code> call.</p> </li> <li> <p> <code>Stopping</code> - The training job is stopping.</p> </li> <li> <p> <code>Stopped</code> - The training job has stopped.</p> </li> </ul> <p>For more detailed information, see <code>SecondaryStatus</code>. </p>'
        SecondaryStatus:
          $ref: '#/components/schemas/SecondaryStatus'
          description: '<p> Provides detailed information about the state of the training job. For detailed information on the secondary status of the training job, see <code>StatusMessage</code> under <a>SecondaryStatusTransition</a>.</p> <p>Amazon SageMaker provides primary statuses and secondary statuses that apply to each of them:</p> <dl> <dt>InProgress</dt> <dd> <ul> <li> <p> <code>Starting</code> - Starting the training job.</p> </li> <li> <p> <code>Downloading</code> - An optional stage for algorithms that support <code>File</code> training input mode. It indicates that data is being downloaded to the ML storage volumes.</p> </li> <li> <p> <code>Training</code> - Training is in progress.</p> </li> <li> <p> <code>Interrupted</code> - The job stopped because the managed spot training instances were interrupted. </p> </li> <li> <p> <code>Uploading</code> - Training is complete and the model artifacts are being uploaded to the S3 location.</p> </li> </ul> </dd> <dt>Completed</dt> <dd> <ul> <li> <p> <code>Completed</code> - The training job has completed.</p> </li> </ul> </dd> <dt>Failed</dt> <dd> <ul> <li> <p> <code>Failed</code> - The training job has failed. The reason for the failure is returned in the <code>FailureReason</code> field of <code>DescribeTrainingJobResponse</code>.</p> </li> </ul> </dd> <dt>Stopped</dt> <dd> <ul> <li> <p> <code>MaxRuntimeExceeded</code> - The job stopped because it exceeded the maximum allowed runtime.</p> </li> <li> <p> <code>MaxWaitTimeExceeded</code> - The job stopped because it exceeded the maximum allowed wait time.</p> </li> <li> <p> <code>Stopped</code> - The training job has stopped.</p> </li> </ul> </dd> <dt>Stopping</dt> <dd> <ul> <li> <p> <code>Stopping</code> - Stopping the training job.</p> </li> </ul> </dd> </dl> <important> <p>Valid values for <code>SecondaryStatus</code> are subject to change. </p> </important> <p>We no longer support the following secondary statuses:</p> <ul> <li> <p> <code>LaunchingMLInstances</code> </p> </li> <li> <p> <code>PreparingTraining</code> </p> </li> <li> <p> <code>DownloadingTrainingImage</code> </p> </li> </ul>'
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'If the training job failed, the reason it failed. '
        HyperParameters:
          $ref: '#/components/schemas/HyperParameters'
          description: 'Algorithm-specific parameters. '
        AlgorithmSpecification:
          $ref: '#/components/schemas/AlgorithmSpecification'
          description: 'Information about the algorithm used for training, and algorithm metadata. '
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: 'The Amazon Web Services Identity and Access Management (IAM) role configured for the training job. '
        InputDataConfig:
          $ref: '#/components/schemas/InputDataConfig'
          description: 'An array of <code>Channel</code> objects that describes each data input channel. '
        OutputDataConfig:
          $ref: '#/components/schemas/OutputDataConfig'
          description: 'The S3 path where model artifacts that you configured when creating the job are stored. Amazon SageMaker creates subfolders for model artifacts. '
        ResourceConfig:
          $ref: '#/components/schemas/ResourceConfig'
          description: 'Resources, including ML compute instances and ML storage volumes, that are configured for model training. '
        VpcConfig:
          $ref: '#/components/schemas/VpcConfig'
          description: 'A <a>VpcConfig</a> object that specifies the VPC that this training job has access to. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html">Protect Training Jobs by Using an Amazon Virtual Private Cloud</a>.'
        StoppingCondition:
          $ref: '#/components/schemas/StoppingCondition'
          description: '<p>Specifies a limit to how long a model training job can run. It also specifies how long a managed Spot training job has to complete. When the job reaches the time limit, Amazon SageMaker ends the training job. Use this API to cap model training costs.</p> <p>To stop a job, Amazon SageMaker sends the algorithm the <code>SIGTERM</code> signal, which delays job termination for 120 seconds. Algorithms can use this 120-second window to save the model artifacts, so the results of training are not lost. </p>'
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp that indicates when the training job was created.
        TrainingStartTime:
          $ref: '#/components/schemas/Timestamp'
          description: Indicates the time when the training job starts on training instances. You are billed for the time interval between this time and the value of <code>TrainingEndTime</code>. The start time in CloudWatch Logs might be later than this time. The difference is due to the time it takes to download the training data and to the size of the training container.
        TrainingEndTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'Indicates the time when the training job ends on training instances. You are billed for the time interval between the value of <code>TrainingStartTime</code> and this time. For successful jobs and stopped jobs, this is the time after model artifacts are uploaded. For failed jobs, this is the time when Amazon SageMaker detects a job failure.'
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp that indicates when the status of the training job was last modified.
        SecondaryStatusTransitions:
          $ref: '#/components/schemas/SecondaryStatusTransitions'
          description: A history of all of the secondary statuses that the training job has transitioned through.
        FinalMetricDataList:
          $ref: '#/components/schemas/FinalMetricDataList'
          description: 'A collection of <code>MetricData</code> objects that specify the names, values, and dates and times that the training algorithm emitted to Amazon CloudWatch.'
        EnableNetworkIsolation:
          $ref: '#/components/schemas/Boolean'
          description: 'If you want to allow inbound or outbound network calls, except for calls between peers within a training cluster for distributed training, choose <code>True</code>. If you enable network isolation for training jobs that are configured to use a VPC, Amazon SageMaker downloads and uploads customer data and model artifacts through the specified VPC, but the training container does not have network access.'
        EnableInterContainerTrafficEncryption:
          $ref: '#/components/schemas/Boolean'
          description: 'To encrypt all communications between ML compute instances in distributed training, choose <code>True</code>. Encryption provides greater security for distributed training, but training might take longer. How long it takes depends on the amount of communication between compute instances, especially if you use a deep learning algorithms in distributed training.'
        EnableManagedSpotTraining:
          $ref: '#/components/schemas/Boolean'
          description: A Boolean indicating whether managed spot training is enabled (<code>True</code>) or not (<code>False</code>).
        CheckpointConfig:
          $ref: '#/components/schemas/CheckpointConfig'
        TrainingTimeInSeconds:
          $ref: '#/components/schemas/TrainingTimeInSeconds'
          description: The training time in seconds.
        BillableTimeInSeconds:
          $ref: '#/components/schemas/BillableTimeInSeconds'
          description: '<p>The billable time in seconds. Billable time refers to the absolute wall-clock time.</p> <p>Multiply <code>BillableTimeInSeconds</code> by the number of instances (<code>InstanceCount</code>) in your training cluster to get the total compute time Amazon SageMaker will bill you if you run distributed training. The formula is as follows: <code>BillableTimeInSeconds * InstanceCount</code> .</p> <p>You can calculate the savings from using managed spot training using the formula <code>(1 - BillableTimeInSeconds / TrainingTimeInSeconds) * 100</code>. For example, if <code>BillableTimeInSeconds</code> is 100 and <code>TrainingTimeInSeconds</code> is 500, the savings is 80%.</p>'
        DebugHookConfig:
          $ref: '#/components/schemas/DebugHookConfig'
        ExperimentConfig:
          $ref: '#/components/schemas/ExperimentConfig'
        DebugRuleConfigurations:
          $ref: '#/components/schemas/DebugRuleConfigurations'
          description: Configuration information for Debugger rules for debugging output tensors.
        TensorBoardOutputConfig:
          $ref: '#/components/schemas/TensorBoardOutputConfig'
        DebugRuleEvaluationStatuses:
          $ref: '#/components/schemas/DebugRuleEvaluationStatuses'
          description: Evaluation status of Debugger rules for debugging on a training job.
        ProfilerConfig:
          $ref: '#/components/schemas/ProfilerConfig'
        ProfilerRuleConfigurations:
          $ref: '#/components/schemas/ProfilerRuleConfigurations'
          description: Configuration information for Debugger rules for profiling system and framework metrics.
        ProfilerRuleEvaluationStatuses:
          $ref: '#/components/schemas/ProfilerRuleEvaluationStatuses'
          description: Evaluation status of Debugger rules for profiling on a training job.
        ProfilingStatus:
          $ref: '#/components/schemas/ProfilingStatus'
          description: Profiling status of a training job.
        RetryStrategy:
          $ref: '#/components/schemas/RetryStrategy'
          description: The number of times to retry the job when the job fails due to an <code>InternalServerError</code>.
        Environment:
          $ref: '#/components/schemas/TrainingEnvironmentMap'
          description: The environment variables to set in the Docker container.
    DescribeTrainingJobRequest:
      type: object
      required:
        - TrainingJobName
      title: DescribeTrainingJobRequest
      properties:
        TrainingJobName:
          $ref: '#/components/schemas/TrainingJobName'
          description: The name of the training job.
    DescribeTransformJobResponse:
      type: object
      required:
        - TransformJobName
        - TransformJobArn
        - TransformJobStatus
        - ModelName
        - TransformInput
        - TransformResources
        - CreationTime
      properties:
        TransformJobName:
          $ref: '#/components/schemas/TransformJobName'
          description: The name of the transform job.
        TransformJobArn:
          $ref: '#/components/schemas/TransformJobArn'
          description: The Amazon Resource Name (ARN) of the transform job.
        TransformJobStatus:
          $ref: '#/components/schemas/TransformJobStatus'
          description: 'The status of the transform job. If the transform job failed, the reason is returned in the <code>FailureReason</code> field.'
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'If the transform job failed, <code>FailureReason</code> describes why it failed. A transform job creates a log file, which includes error messages, and stores it as an Amazon S3 object. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/logging-cloudwatch.html">Log Amazon SageMaker Events with Amazon CloudWatch</a>.'
        ModelName:
          $ref: '#/components/schemas/ModelName'
          description: The name of the model used in the transform job.
        MaxConcurrentTransforms:
          $ref: '#/components/schemas/MaxConcurrentTransforms'
          description: The maximum number of parallel requests on each instance node that can be launched in a transform job. The default value is 1.
        ModelClientConfig:
          $ref: '#/components/schemas/ModelClientConfig'
          description: The timeout and maximum number of retries for processing a transform job invocation.
        MaxPayloadInMB:
          $ref: '#/components/schemas/MaxPayloadInMB'
          description: 'The maximum payload size, in MB, used in the transform job.'
        BatchStrategy:
          $ref: '#/components/schemas/BatchStrategy'
          description: '<p>Specifies the number of records to include in a mini-batch for an HTTP inference request. A <i>record</i> <i/> is a single unit of input data that inference can be made on. For example, a single line in a CSV file is a record. </p> <p>To enable the batch strategy, you must set <code>SplitType</code> to <code>Line</code>, <code>RecordIO</code>, or <code>TFRecord</code>.</p>'
        Environment:
          $ref: '#/components/schemas/TransformEnvironmentMap'
          description: The environment variables to set in the Docker container. We support up to 16 key and values entries in the map.
        TransformInput:
          $ref: '#/components/schemas/TransformInput'
          description: Describes the dataset to be transformed and the Amazon S3 location where it is stored.
        TransformOutput:
          $ref: '#/components/schemas/TransformOutput'
          description: Identifies the Amazon S3 location where you want Amazon SageMaker to save the results from the transform job.
        TransformResources:
          $ref: '#/components/schemas/TransformResources'
          description: 'Describes the resources, including ML instance types and ML instance count, to use for the transform job.'
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp that shows when the transform Job was created.
        TransformStartTime:
          $ref: '#/components/schemas/Timestamp'
          description: Indicates when the transform job starts on ML instances. You are billed for the time interval between this time and the value of <code>TransformEndTime</code>.
        TransformEndTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'Indicates when the transform job has been completed, or has stopped or failed. You are billed for the time interval between this time and the value of <code>TransformStartTime</code>.'
        LabelingJobArn:
          $ref: '#/components/schemas/LabelingJobArn'
          description: The Amazon Resource Name (ARN) of the Amazon SageMaker Ground Truth labeling job that created the transform or training job.
        AutoMLJobArn:
          $ref: '#/components/schemas/AutoMLJobArn'
          description: The Amazon Resource Name (ARN) of the AutoML transform job.
        DataProcessing:
          $ref: '#/components/schemas/DataProcessing'
        ExperimentConfig:
          $ref: '#/components/schemas/ExperimentConfig'
    DescribeTransformJobRequest:
      type: object
      required:
        - TransformJobName
      title: DescribeTransformJobRequest
      properties:
        TransformJobName:
          $ref: '#/components/schemas/TransformJobName'
          description: The name of the transform job that you want to view details of.
    DescribeTrialResponse:
      type: object
      properties:
        TrialName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the trial.
        TrialArn:
          $ref: '#/components/schemas/TrialArn'
          description: The Amazon Resource Name (ARN) of the trial.
        DisplayName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: 'The name of the trial as displayed. If <code>DisplayName</code> isn''t specified, <code>TrialName</code> is displayed.'
        ExperimentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the experiment the trial is part of.
        Source:
          $ref: '#/components/schemas/TrialSource'
          description: 'The Amazon Resource Name (ARN) of the source and, optionally, the job type.'
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the trial was created.
        CreatedBy:
          $ref: '#/components/schemas/UserContext'
          description: Who created the trial.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the trial was last modified.
        LastModifiedBy:
          $ref: '#/components/schemas/UserContext'
          description: Who last modified the trial.
        MetadataProperties:
          $ref: '#/components/schemas/MetadataProperties'
    DescribeTrialRequest:
      type: object
      required:
        - TrialName
      title: DescribeTrialRequest
      properties:
        TrialName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the trial to describe.
    DescribeTrialComponentResponse:
      type: object
      properties:
        TrialComponentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the trial component.
        TrialComponentArn:
          $ref: '#/components/schemas/TrialComponentArn'
          description: The Amazon Resource Name (ARN) of the trial component.
        DisplayName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: 'The name of the component as displayed. If <code>DisplayName</code> isn''t specified, <code>TrialComponentName</code> is displayed.'
        Source:
          $ref: '#/components/schemas/TrialComponentSource'
          description: 'The Amazon Resource Name (ARN) of the source and, optionally, the job type.'
        Status:
          $ref: '#/components/schemas/TrialComponentStatus'
          description: '<p>The status of the component. States include:</p> <ul> <li> <p>InProgress</p> </li> <li> <p>Completed</p> </li> <li> <p>Failed</p> </li> </ul>'
        StartTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the component started.
        EndTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the component ended.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the component was created.
        CreatedBy:
          $ref: '#/components/schemas/UserContext'
          description: Who created the component.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the component was last modified.
        LastModifiedBy:
          $ref: '#/components/schemas/UserContext'
          description: Who last modified the component.
        Parameters:
          $ref: '#/components/schemas/TrialComponentParameters'
          description: The hyperparameters of the component.
        InputArtifacts:
          $ref: '#/components/schemas/TrialComponentArtifacts'
          description: The input artifacts of the component.
        OutputArtifacts:
          $ref: '#/components/schemas/TrialComponentArtifacts'
          description: The output artifacts of the component.
        MetadataProperties:
          $ref: '#/components/schemas/MetadataProperties'
        Metrics:
          $ref: '#/components/schemas/TrialComponentMetricSummaries'
          description: The metrics for the component.
    DescribeTrialComponentRequest:
      type: object
      required:
        - TrialComponentName
      title: DescribeTrialComponentRequest
      properties:
        TrialComponentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the trial component to describe.
    DescribeUserProfileResponse:
      type: object
      properties:
        DomainId:
          $ref: '#/components/schemas/DomainId'
          description: The ID of the domain that contains the profile.
        UserProfileArn:
          $ref: '#/components/schemas/UserProfileArn'
          description: The user profile Amazon Resource Name (ARN).
        UserProfileName:
          $ref: '#/components/schemas/UserProfileName'
          description: The user profile name.
        HomeEfsFileSystemUid:
          $ref: '#/components/schemas/EfsUid'
          description: The ID of the user's profile in the Amazon Elastic File System (EFS) volume.
        Status:
          $ref: '#/components/schemas/UserProfileStatus'
          description: The status.
        LastModifiedTime:
          $ref: '#/components/schemas/LastModifiedTime'
          description: The last modified time.
        CreationTime:
          $ref: '#/components/schemas/CreationTime'
          description: The creation time.
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: The failure reason.
        SingleSignOnUserIdentifier:
          $ref: '#/components/schemas/SingleSignOnUserIdentifier'
          description: The SSO user identifier.
        SingleSignOnUserValue:
          $ref: '#/components/schemas/String256'
          description: The SSO user value.
        UserSettings:
          $ref: '#/components/schemas/UserSettings'
          description: A collection of settings.
    DescribeUserProfileRequest:
      type: object
      required:
        - DomainId
        - UserProfileName
      title: DescribeUserProfileRequest
      properties:
        DomainId:
          $ref: '#/components/schemas/DomainId'
          description: The domain ID.
        UserProfileName:
          $ref: '#/components/schemas/UserProfileName'
          description: The user profile name. This value is not case sensitive.
    DescribeWorkforceResponse:
      type: object
      required:
        - Workforce
      properties:
        Workforce:
          $ref: '#/components/schemas/Workforce'
          description: 'A single private workforce, which is automatically created when you create your first private work team. You can create one private work force in each Amazon Web Services Region. By default, any workforce-related API operation used in a specific region will apply to the workforce created in that region. To learn how to create a private workforce, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-workforce-create-private.html">Create a Private Workforce</a>.'
    DescribeWorkforceRequest:
      type: object
      required:
        - WorkforceName
      title: DescribeWorkforceRequest
      properties:
        WorkforceName:
          $ref: '#/components/schemas/WorkforceName'
          description: 'The name of the private workforce whose access you want to restrict. <code>WorkforceName</code> is automatically set to <code>default</code> when a workforce is created and cannot be modified. '
    DescribeWorkteamResponse:
      type: object
      required:
        - Workteam
      properties:
        Workteam:
          $ref: '#/components/schemas/Workteam'
          description: 'A <code>Workteam</code> instance that contains information about the work team. '
    DescribeWorkteamRequest:
      type: object
      required:
        - WorkteamName
      title: DescribeWorkteamRequest
      properties:
        WorkteamName:
          $ref: '#/components/schemas/WorkteamName'
          description: The name of the work team to return a description of.
    DisableSagemakerServicecatalogPortfolioOutput:
      type: object
      properties: {}
    DisableSagemakerServicecatalogPortfolioInput:
      type: object
      title: DisableSagemakerServicecatalogPortfolioInput
      properties: {}
    DisassociateTrialComponentResponse:
      type: object
      properties:
        TrialComponentArn:
          $ref: '#/components/schemas/TrialComponentArn'
          description: The ARN of the trial component.
        TrialArn:
          $ref: '#/components/schemas/TrialArn'
          description: The Amazon Resource Name (ARN) of the trial.
    DisassociateTrialComponentRequest:
      type: object
      required:
        - TrialComponentName
        - TrialName
      title: DisassociateTrialComponentRequest
      properties:
        TrialComponentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the component to disassociate from the trial.
        TrialName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the trial to disassociate from.
    EnableSagemakerServicecatalogPortfolioOutput:
      type: object
      properties: {}
    EnableSagemakerServicecatalogPortfolioInput:
      type: object
      title: EnableSagemakerServicecatalogPortfolioInput
      properties: {}
    GetDeviceFleetReportResponse:
      type: object
      required:
        - DeviceFleetArn
        - DeviceFleetName
      properties:
        DeviceFleetArn:
          $ref: '#/components/schemas/DeviceFleetArn'
          description: The Amazon Resource Name (ARN) of the device.
        DeviceFleetName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the fleet.
        OutputConfig:
          $ref: '#/components/schemas/EdgeOutputConfig'
          description: The output configuration for storing sample data collected by the fleet.
        Description:
          $ref: '#/components/schemas/DeviceFleetDescription'
          description: Description of the fleet.
        ReportGenerated:
          $ref: '#/components/schemas/Timestamp'
          description: Timestamp of when the report was generated.
        DeviceStats:
          $ref: '#/components/schemas/DeviceStats'
          description: Status of devices.
        AgentVersions:
          $ref: '#/components/schemas/AgentVersions'
          description: The versions of Edge Manager agent deployed on the fleet.
        ModelStats:
          $ref: '#/components/schemas/EdgeModelStats'
          description: Status of model on device.
    GetDeviceFleetReportRequest:
      type: object
      required:
        - DeviceFleetName
      title: GetDeviceFleetReportRequest
      properties:
        DeviceFleetName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the fleet.
    GetModelPackageGroupPolicyOutput:
      type: object
      required:
        - ResourcePolicy
      properties:
        ResourcePolicy:
          $ref: '#/components/schemas/PolicyString'
          description: The resource policy for the model group.
    GetModelPackageGroupPolicyInput:
      type: object
      required:
        - ModelPackageGroupName
      title: GetModelPackageGroupPolicyInput
      properties:
        ModelPackageGroupName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the model group for which to get the resource policy.
    GetSagemakerServicecatalogPortfolioStatusOutput:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/SagemakerServicecatalogStatus'
          description: Whether Service Catalog is enabled or disabled in SageMaker.
    GetSagemakerServicecatalogPortfolioStatusInput:
      type: object
      title: GetSagemakerServicecatalogPortfolioStatusInput
      properties: {}
    GetSearchSuggestionsResponse:
      type: object
      properties:
        PropertyNameSuggestions:
          $ref: '#/components/schemas/PropertyNameSuggestionList'
          description: A list of property names for a <code>Resource</code> that match a <code>SuggestionQuery</code>.
    GetSearchSuggestionsRequest:
      type: object
      required:
        - Resource
      title: GetSearchSuggestionsRequest
      properties:
        Resource:
          $ref: '#/components/schemas/ResourceType'
          description: The name of the Amazon SageMaker resource to search for.
        SuggestionQuery:
          $ref: '#/components/schemas/SuggestionQuery'
          description: Limits the property names that are included in the response.
    ListActionsResponse:
      type: object
      properties:
        ActionSummaries:
          $ref: '#/components/schemas/ActionSummaries'
          description: A list of actions and their properties.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token for getting the next set of actions, if there are any.'
    ListActionsRequest:
      type: object
      title: ListActionsRequest
      properties:
        SourceUri:
          $ref: '#/components/schemas/SourceUri'
          description: A filter that returns only actions with the specified source URI.
        ActionType:
          $ref: '#/components/schemas/String256'
          description: A filter that returns only actions of the specified type.
        CreatedAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only actions created on or after the specified time.
        CreatedBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only actions created on or before the specified time.
        SortBy:
          $ref: '#/components/schemas/SortActionsBy'
          description: The property used to sort results. The default value is <code>CreationTime</code>.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: The sort order. The default value is <code>Descending</code>.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the previous call to <code>ListActions</code> didn''t return the full set of actions, the call returns a token for getting the next set of actions.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of actions to return in the response. The default value is 10.
    ListAlgorithmsOutput:
      type: object
      required:
        - AlgorithmSummaryList
      properties:
        AlgorithmSummaryList:
          $ref: '#/components/schemas/AlgorithmSummaryList'
          description: '&gt;An array of <code>AlgorithmSummary</code> objects, each of which lists an algorithm.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of algorithms, use it in the subsequent request.'
    ListAlgorithmsInput:
      type: object
      title: ListAlgorithmsInput
      properties:
        CreationTimeAfter:
          $ref: '#/components/schemas/CreationTime'
          description: A filter that returns only algorithms created after the specified time (timestamp).
        CreationTimeBefore:
          $ref: '#/components/schemas/CreationTime'
          description: A filter that returns only algorithms created before the specified time (timestamp).
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of algorithms to return in the response.
        NameContains:
          $ref: '#/components/schemas/NameContains'
          description: A string in the algorithm name. This filter returns only algorithms whose name contains the specified string.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response to a previous <code>ListAlgorithms</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of algorithms, use the token in the next request.'
        SortBy:
          $ref: '#/components/schemas/AlgorithmSortBy'
          description: The parameter by which to sort the results. The default is <code>CreationTime</code>.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: The sort order for the results. The default is <code>Ascending</code>.
    ListAppImageConfigsResponse:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token for getting the next set of AppImageConfigs, if there are any.'
        AppImageConfigs:
          $ref: '#/components/schemas/AppImageConfigList'
          description: A list of AppImageConfigs and their properties.
    ListAppImageConfigsRequest:
      type: object
      title: ListAppImageConfigsRequest
      properties:
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: 'The maximum number of AppImageConfigs to return in the response. The default value is 10. '
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the previous call to <code>ListImages</code> didn''t return the full set of AppImageConfigs, the call returns a token for getting the next set of AppImageConfigs.'
        NameContains:
          $ref: '#/components/schemas/AppImageConfigName'
          description: A filter that returns only AppImageConfigs whose name contains the specified string.
        CreationTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only AppImageConfigs created on or before the specified time.
        CreationTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only AppImageConfigs created on or after the specified time.
        ModifiedTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only AppImageConfigs modified on or before the specified time.
        ModifiedTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only AppImageConfigs modified on or after the specified time.
        SortBy:
          $ref: '#/components/schemas/AppImageConfigSortKey'
          description: The property used to sort results. The default value is <code>CreationTime</code>.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: The sort order. The default value is <code>Descending</code>.
    ListAppsResponse:
      type: object
      properties:
        Apps:
          $ref: '#/components/schemas/AppList'
          description: The list of apps.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the previous response was truncated, you will receive this token. Use it in your next request to receive the next set of results.'
    ListAppsRequest:
      type: object
      title: ListAppsRequest
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the previous response was truncated, you will receive this token. Use it in your next request to receive the next set of results.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: Returns a list up to a specified limit.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: The sort order for the results. The default is Ascending.
        SortBy:
          $ref: '#/components/schemas/AppSortKey'
          description: The parameter by which to sort the results. The default is CreationTime.
        DomainIdEquals:
          $ref: '#/components/schemas/DomainId'
          description: A parameter to search for the domain ID.
        UserProfileNameEquals:
          $ref: '#/components/schemas/UserProfileName'
          description: A parameter to search by user profile name.
    ListArtifactsResponse:
      type: object
      properties:
        ArtifactSummaries:
          $ref: '#/components/schemas/ArtifactSummaries'
          description: A list of artifacts and their properties.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token for getting the next set of artifacts, if there are any.'
    ListArtifactsRequest:
      type: object
      title: ListArtifactsRequest
      properties:
        SourceUri:
          $ref: '#/components/schemas/SourceUri'
          description: A filter that returns only artifacts with the specified source URI.
        ArtifactType:
          $ref: '#/components/schemas/String256'
          description: A filter that returns only artifacts of the specified type.
        CreatedAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only artifacts created on or after the specified time.
        CreatedBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only artifacts created on or before the specified time.
        SortBy:
          $ref: '#/components/schemas/SortArtifactsBy'
          description: The property used to sort results. The default value is <code>CreationTime</code>.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: The sort order. The default value is <code>Descending</code>.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the previous call to <code>ListArtifacts</code> didn''t return the full set of artifacts, the call returns a token for getting the next set of artifacts.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of artifacts to return in the response. The default value is 10.
    ListAssociationsResponse:
      type: object
      properties:
        AssociationSummaries:
          $ref: '#/components/schemas/AssociationSummaries'
          description: A list of associations and their properties.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token for getting the next set of associations, if there are any.'
    ListAssociationsRequest:
      type: object
      title: ListAssociationsRequest
      properties:
        SourceArn:
          $ref: '#/components/schemas/AssociationEntityArn'
          description: A filter that returns only associations with the specified source ARN.
        DestinationArn:
          $ref: '#/components/schemas/AssociationEntityArn'
          description: A filter that returns only associations with the specified destination Amazon Resource Name (ARN).
        SourceType:
          $ref: '#/components/schemas/String256'
          description: A filter that returns only associations with the specified source type.
        DestinationType:
          $ref: '#/components/schemas/String256'
          description: A filter that returns only associations with the specified destination type.
        AssociationType:
          $ref: '#/components/schemas/AssociationEdgeType'
          description: A filter that returns only associations of the specified type.
        CreatedAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only associations created on or after the specified time.
        CreatedBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only associations created on or before the specified time.
        SortBy:
          $ref: '#/components/schemas/SortAssociationsBy'
          description: The property used to sort results. The default value is <code>CreationTime</code>.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: The sort order. The default value is <code>Descending</code>.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the previous call to <code>ListAssociations</code> didn''t return the full set of associations, the call returns a token for getting the next set of associations.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of associations to return in the response. The default value is 10.
    ListAutoMLJobsResponse:
      type: object
      required:
        - AutoMLJobSummaries
      properties:
        AutoMLJobSummaries:
          $ref: '#/components/schemas/AutoMLJobSummaries'
          description: Returns a summary list of jobs.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the previous response was truncated, you receive this token. Use it in your next request to receive the next set of results.'
    ListAutoMLJobsRequest:
      type: object
      title: ListAutoMLJobsRequest
      properties:
        CreationTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: 'Request a list of jobs, using a filter for time.'
        CreationTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: 'Request a list of jobs, using a filter for time.'
        LastModifiedTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: 'Request a list of jobs, using a filter for time.'
        LastModifiedTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: 'Request a list of jobs, using a filter for time.'
        NameContains:
          $ref: '#/components/schemas/AutoMLNameContains'
          description: 'Request a list of jobs, using a search filter for name.'
        StatusEquals:
          $ref: '#/components/schemas/AutoMLJobStatus'
          description: 'Request a list of jobs, using a filter for status.'
        SortOrder:
          $ref: '#/components/schemas/AutoMLSortOrder'
          description: The sort order for the results. The default is <code>Descending</code>.
        SortBy:
          $ref: '#/components/schemas/AutoMLSortBy'
          description: The parameter by which to sort the results. The default is <code>Name</code>.
        MaxResults:
          $ref: '#/components/schemas/AutoMLMaxResults'
          description: Request a list of jobs up to a specified limit.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the previous response was truncated, you receive this token. Use it in your next request to receive the next set of results.'
    ListCandidatesForAutoMLJobResponse:
      type: object
      required:
        - Candidates
      properties:
        Candidates:
          $ref: '#/components/schemas/AutoMLCandidates'
          description: Summaries about the <code>AutoMLCandidates</code>.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the previous response was truncated, you receive this token. Use it in your next request to receive the next set of results.'
    ListCandidatesForAutoMLJobRequest:
      type: object
      required:
        - AutoMLJobName
      title: ListCandidatesForAutoMLJobRequest
      properties:
        AutoMLJobName:
          $ref: '#/components/schemas/AutoMLJobName'
          description: List the candidates created for the job by providing the job's name.
        StatusEquals:
          $ref: '#/components/schemas/CandidateStatus'
          description: List the candidates for the job and filter by status.
        CandidateNameEquals:
          $ref: '#/components/schemas/CandidateName'
          description: List the candidates for the job and filter by candidate name.
        SortOrder:
          $ref: '#/components/schemas/AutoMLSortOrder'
          description: The sort order for the results. The default is <code>Ascending</code>.
        SortBy:
          $ref: '#/components/schemas/CandidateSortBy'
          description: The parameter by which to sort the results. The default is <code>Descending</code>.
        MaxResults:
          $ref: '#/components/schemas/AutoMLMaxResults'
          description: List the job's candidates up to a specified limit.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the previous response was truncated, you receive this token. Use it in your next request to receive the next set of results.'
    ListCodeRepositoriesOutput:
      type: object
      required:
        - CodeRepositorySummaryList
      properties:
        CodeRepositorySummaryList:
          $ref: '#/components/schemas/CodeRepositorySummaryList'
          description: '<p>Gets a list of summaries of the Git repositories. Each summary specifies the following values for the repository: </p> <ul> <li> <p>Name</p> </li> <li> <p>Amazon Resource Name (ARN)</p> </li> <li> <p>Creation time</p> </li> <li> <p>Last modified time</p> </li> <li> <p>Configuration information, including the URL location of the repository and the ARN of the Amazon Web Services Secrets Manager secret that contains the credentials used to access the repository.</p> </li> </ul>'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of a <code>ListCodeRepositoriesOutput</code> request was truncated, the response includes a <code>NextToken</code>. To get the next set of Git repositories, use the token in the next request.'
    ListCodeRepositoriesInput:
      type: object
      title: ListCodeRepositoriesInput
      properties:
        CreationTimeAfter:
          $ref: '#/components/schemas/CreationTime'
          description: A filter that returns only Git repositories that were created after the specified time.
        CreationTimeBefore:
          $ref: '#/components/schemas/CreationTime'
          description: A filter that returns only Git repositories that were created before the specified time.
        LastModifiedTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only Git repositories that were last modified after the specified time.
        LastModifiedTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only Git repositories that were last modified before the specified time.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of Git repositories to return in the response.
        NameContains:
          $ref: '#/components/schemas/CodeRepositoryNameContains'
          description: A string in the Git repositories name. This filter returns only repositories whose name contains the specified string.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of a <code>ListCodeRepositoriesOutput</code> request was truncated, the response includes a <code>NextToken</code>. To get the next set of Git repositories, use the token in the next request.'
        SortBy:
          $ref: '#/components/schemas/CodeRepositorySortBy'
          description: The field to sort results by. The default is <code>Name</code>.
        SortOrder:
          $ref: '#/components/schemas/CodeRepositorySortOrder'
          description: The sort order for results. The default is <code>Ascending</code>.
    ListCompilationJobsResponse:
      type: object
      required:
        - CompilationJobSummaries
      properties:
        CompilationJobSummaries:
          $ref: '#/components/schemas/CompilationJobSummaries'
          description: 'An array of <a>CompilationJobSummary</a> objects, each describing a model compilation job. '
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response is truncated, Amazon SageMaker returns this <code>NextToken</code>. To retrieve the next set of model compilation jobs, use this token in the next request.'
    ListCompilationJobsRequest:
      type: object
      title: ListCompilationJobsRequest
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous <code>ListCompilationJobs</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of model compilation jobs, use the token in the next request.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of model compilation jobs to return in the response.
        CreationTimeAfter:
          $ref: '#/components/schemas/CreationTime'
          description: 'A filter that returns the model compilation jobs that were created after a specified time. '
        CreationTimeBefore:
          $ref: '#/components/schemas/CreationTime'
          description: A filter that returns the model compilation jobs that were created before a specified time.
        LastModifiedTimeAfter:
          $ref: '#/components/schemas/LastModifiedTime'
          description: A filter that returns the model compilation jobs that were modified after a specified time.
        LastModifiedTimeBefore:
          $ref: '#/components/schemas/LastModifiedTime'
          description: A filter that returns the model compilation jobs that were modified before a specified time.
        NameContains:
          $ref: '#/components/schemas/NameContains'
          description: A filter that returns the model compilation jobs whose name contains a specified string.
        StatusEquals:
          $ref: '#/components/schemas/CompilationJobStatus'
          description: A filter that retrieves model compilation jobs with a specific <a>DescribeCompilationJobResponse$CompilationJobStatus</a> status.
        SortBy:
          $ref: '#/components/schemas/ListCompilationJobsSortBy'
          description: The field by which to sort results. The default is <code>CreationTime</code>.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: The sort order for results. The default is <code>Ascending</code>.
    ListContextsResponse:
      type: object
      properties:
        ContextSummaries:
          $ref: '#/components/schemas/ContextSummaries'
          description: A list of contexts and their properties.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token for getting the next set of contexts, if there are any.'
    ListContextsRequest:
      type: object
      title: ListContextsRequest
      properties:
        SourceUri:
          $ref: '#/components/schemas/SourceUri'
          description: A filter that returns only contexts with the specified source URI.
        ContextType:
          $ref: '#/components/schemas/String256'
          description: A filter that returns only contexts of the specified type.
        CreatedAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only contexts created on or after the specified time.
        CreatedBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only contexts created on or before the specified time.
        SortBy:
          $ref: '#/components/schemas/SortContextsBy'
          description: The property used to sort results. The default value is <code>CreationTime</code>.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: The sort order. The default value is <code>Descending</code>.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the previous call to <code>ListContexts</code> didn''t return the full set of contexts, the call returns a token for getting the next set of contexts.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of contexts to return in the response. The default value is 10.
    ListDataQualityJobDefinitionsResponse:
      type: object
      required:
        - JobDefinitionSummaries
      properties:
        JobDefinitionSummaries:
          $ref: '#/components/schemas/MonitoringJobDefinitionSummaryList'
          description: A list of data quality monitoring job definitions.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous <code>ListDataQualityJobDefinitions</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of data quality monitoring job definitions, use the token in the next request.'
    ListDataQualityJobDefinitionsRequest:
      type: object
      title: ListDataQualityJobDefinitionsRequest
      properties:
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
          description: A filter that lists the data quality job definitions associated with the specified endpoint.
        SortBy:
          $ref: '#/components/schemas/MonitoringJobDefinitionSortKey'
          description: The field to sort results by. The default is <code>CreationTime</code>.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: The sort order for results. The default is <code>Descending</code>.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous <code>ListDataQualityJobDefinitions</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of transform jobs, use the token in the next request.&gt;'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of data quality monitoring job definitions to return in the response.
        NameContains:
          $ref: '#/components/schemas/NameContains'
          description: A string in the data quality monitoring job definition name. This filter returns only data quality monitoring job definitions whose name contains the specified string.
        CreationTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only data quality monitoring job definitions created before the specified time.
        CreationTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only data quality monitoring job definitions created after the specified time.
    ListDeviceFleetsResponse:
      type: object
      required:
        - DeviceFleetSummaries
      properties:
        DeviceFleetSummaries:
          $ref: '#/components/schemas/DeviceFleetSummaries'
          description: Summary of the device fleet.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The response from the last list when returning a list large enough to need tokening.
    ListDeviceFleetsRequest:
      type: object
      title: ListDeviceFleetsRequest
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The response from the last list when returning a list large enough to need tokening.
        MaxResults:
          $ref: '#/components/schemas/ListMaxResults'
          description: The maximum number of results to select.
        CreationTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: Filter fleets where packaging job was created after specified time.
        CreationTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: Filter fleets where the edge packaging job was created before specified time.
        LastModifiedTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: Select fleets where the job was updated after X
        LastModifiedTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: Select fleets where the job was updated before X
        NameContains:
          $ref: '#/components/schemas/NameContains'
          description: Filter for fleets containing this name in their fleet device name.
        SortBy:
          $ref: '#/components/schemas/ListDeviceFleetsSortBy'
          description: The column to sort by.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: What direction to sort in.
    ListDevicesResponse:
      type: object
      required:
        - DeviceSummaries
      properties:
        DeviceSummaries:
          $ref: '#/components/schemas/DeviceSummaries'
          description: Summary of devices.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The response from the last list when returning a list large enough to need tokening.
    ListDevicesRequest:
      type: object
      title: ListDevicesRequest
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The response from the last list when returning a list large enough to need tokening.
        MaxResults:
          $ref: '#/components/schemas/ListMaxResults'
          description: Maximum number of results to select.
        LatestHeartbeatAfter:
          $ref: '#/components/schemas/Timestamp'
          description: Select fleets where the job was updated after X
        ModelName:
          $ref: '#/components/schemas/EntityName'
          description: A filter that searches devices that contains this name in any of their models.
        DeviceFleetName:
          $ref: '#/components/schemas/EntityName'
          description: Filter for fleets containing this name in their device fleet name.
    ListDomainsResponse:
      type: object
      properties:
        Domains:
          $ref: '#/components/schemas/DomainList'
          description: The list of domains.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the previous response was truncated, you will receive this token. Use it in your next request to receive the next set of results.'
    ListDomainsRequest:
      type: object
      title: ListDomainsRequest
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the previous response was truncated, you will receive this token. Use it in your next request to receive the next set of results.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: Returns a list up to a specified limit.
    ListEdgePackagingJobsResponse:
      type: object
      required:
        - EdgePackagingJobSummaries
      properties:
        EdgePackagingJobSummaries:
          $ref: '#/components/schemas/EdgePackagingJobSummaries'
          description: Summaries of edge packaging jobs.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: Token to use when calling the next page of results.
    ListEdgePackagingJobsRequest:
      type: object
      title: ListEdgePackagingJobsRequest
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The response from the last list when returning a list large enough to need tokening.
        MaxResults:
          $ref: '#/components/schemas/ListMaxResults'
          description: Maximum number of results to select.
        CreationTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: Select jobs where the job was created after specified time.
        CreationTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: Select jobs where the job was created before specified time.
        LastModifiedTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: Select jobs where the job was updated after specified time.
        LastModifiedTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: Select jobs where the job was updated before specified time.
        NameContains:
          $ref: '#/components/schemas/NameContains'
          description: Filter for jobs containing this name in their packaging job name.
        ModelNameContains:
          $ref: '#/components/schemas/NameContains'
          description: Filter for jobs where the model name contains this string.
        StatusEquals:
          $ref: '#/components/schemas/EdgePackagingJobStatus'
          description: The job status to filter for.
        SortBy:
          $ref: '#/components/schemas/ListEdgePackagingJobsSortBy'
          description: Use to specify what column to sort by.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: What direction to sort by.
    ListEndpointConfigsOutput:
      type: object
      required:
        - EndpointConfigs
      properties:
        EndpointConfigs:
          $ref: '#/components/schemas/EndpointConfigSummaryList'
          description: An array of endpoint configurations.
        NextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: ' If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of endpoint configurations, use it in the subsequent request '
    ListEndpointConfigsInput:
      type: object
      title: ListEndpointConfigsInput
      properties:
        SortBy:
          $ref: '#/components/schemas/EndpointConfigSortKey'
          description: The field to sort results by. The default is <code>CreationTime</code>.
        SortOrder:
          $ref: '#/components/schemas/OrderKey'
          description: The sort order for results. The default is <code>Descending</code>.
        NextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'If the result of the previous <code>ListEndpointConfig</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of endpoint configurations, use the token in the next request. '
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of training jobs to return in the response.
        NameContains:
          $ref: '#/components/schemas/EndpointConfigNameContains'
          description: 'A string in the endpoint configuration name. This filter returns only endpoint configurations whose name contains the specified string. '
        CreationTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only endpoint configurations created before the specified time (timestamp).
        CreationTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only endpoint configurations with a creation time greater than or equal to the specified time (timestamp).
    ListEndpointsOutput:
      type: object
      required:
        - Endpoints
      properties:
        Endpoints:
          $ref: '#/components/schemas/EndpointSummaryList'
          description: ' An array or endpoint objects. '
        NextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: ' If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of training jobs, use it in the subsequent request. '
    ListEndpointsInput:
      type: object
      title: ListEndpointsInput
      properties:
        SortBy:
          $ref: '#/components/schemas/EndpointSortKey'
          description: Sorts the list of results. The default is <code>CreationTime</code>.
        SortOrder:
          $ref: '#/components/schemas/OrderKey'
          description: The sort order for results. The default is <code>Descending</code>.
        NextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'If the result of a <code>ListEndpoints</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of endpoints, use the token in the next request.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of endpoints to return in the response. This value defaults to 10.
        NameContains:
          $ref: '#/components/schemas/EndpointNameContains'
          description: A string in endpoint names. This filter returns only endpoints whose name contains the specified string.
        CreationTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only endpoints that were created before the specified time (timestamp).
        CreationTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only endpoints with a creation time greater than or equal to the specified time (timestamp).
        LastModifiedTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: ' A filter that returns only endpoints that were modified before the specified timestamp. '
        LastModifiedTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: ' A filter that returns only endpoints that were modified after the specified timestamp. '
        StatusEquals:
          $ref: '#/components/schemas/EndpointStatus'
          description: ' A filter that returns only endpoints with the specified status.'
    ListExperimentsResponse:
      type: object
      properties:
        ExperimentSummaries:
          $ref: '#/components/schemas/ExperimentSummaries'
          description: A list of the summaries of your experiments.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token for getting the next set of experiments, if there are any.'
    ListExperimentsRequest:
      type: object
      title: ListExperimentsRequest
      properties:
        CreatedAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only experiments created after the specified time.
        CreatedBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only experiments created before the specified time.
        SortBy:
          $ref: '#/components/schemas/SortExperimentsBy'
          description: The property used to sort results. The default value is <code>CreationTime</code>.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: The sort order. The default value is <code>Descending</code>.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the previous call to <code>ListExperiments</code> didn''t return the full set of experiments, the call returns a token for getting the next set of experiments.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of experiments to return in the response. The default value is 10.
    ListFeatureGroupsResponse:
      type: object
      required:
        - FeatureGroupSummaries
        - NextToken
      properties:
        FeatureGroupSummaries:
          $ref: '#/components/schemas/FeatureGroupSummaries'
          description: A summary of feature groups.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token to resume pagination of <code>ListFeatureGroups</code> results.
    ListFeatureGroupsRequest:
      type: object
      title: ListFeatureGroupsRequest
      properties:
        NameContains:
          $ref: '#/components/schemas/FeatureGroupNameContains'
          description: 'A string that partially matches one or more <code>FeatureGroup</code>s names. Filters <code>FeatureGroup</code>s by name. '
        FeatureGroupStatusEquals:
          $ref: '#/components/schemas/FeatureGroupStatus'
          description: 'A <code>FeatureGroup</code> status. Filters by <code>FeatureGroup</code> status. '
        OfflineStoreStatusEquals:
          $ref: '#/components/schemas/OfflineStoreStatusValue'
          description: 'An <code>OfflineStore</code> status. Filters by <code>OfflineStore</code> status. '
        CreationTimeAfter:
          $ref: '#/components/schemas/CreationTime'
          description: Use this parameter to search for <code>FeatureGroups</code>s created after a specific date and time.
        CreationTimeBefore:
          $ref: '#/components/schemas/CreationTime'
          description: Use this parameter to search for <code>FeatureGroups</code>s created before a specific date and time.
        SortOrder:
          $ref: '#/components/schemas/FeatureGroupSortOrder'
          description: The order in which feature groups are listed.
        SortBy:
          $ref: '#/components/schemas/FeatureGroupSortBy'
          description: The value on which the feature group list is sorted.
        MaxResults:
          $ref: '#/components/schemas/FeatureGroupMaxResults'
          description: The maximum number of results returned by <code>ListFeatureGroups</code>.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token to resume pagination of <code>ListFeatureGroups</code> results.
    ListFlowDefinitionsResponse:
      type: object
      required:
        - FlowDefinitionSummaries
      properties:
        FlowDefinitionSummaries:
          $ref: '#/components/schemas/FlowDefinitionSummaries'
          description: An array of objects describing the flow definitions.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token to resume pagination.
    ListFlowDefinitionsRequest:
      type: object
      title: ListFlowDefinitionsRequest
      properties:
        CreationTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only flow definitions with a creation time greater than or equal to the specified timestamp.
        CreationTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only flow definitions that were created before the specified timestamp.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: An optional value that specifies whether you want the results sorted in <code>Ascending</code> or <code>Descending</code> order.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token to resume pagination.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: 'The total number of items to return. If the total number of available items is more than the value specified in <code>MaxResults</code>, then a <code>NextToken</code> will be provided in the output that you can use to resume pagination.'
    ListHumanTaskUisResponse:
      type: object
      required:
        - HumanTaskUiSummaries
      properties:
        HumanTaskUiSummaries:
          $ref: '#/components/schemas/HumanTaskUiSummaries'
          description: An array of objects describing the human task user interfaces.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token to resume pagination.
    ListHumanTaskUisRequest:
      type: object
      title: ListHumanTaskUisRequest
      properties:
        CreationTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only human task user interfaces with a creation time greater than or equal to the specified timestamp.
        CreationTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only human task user interfaces that were created before the specified timestamp.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: An optional value that specifies whether you want the results sorted in <code>Ascending</code> or <code>Descending</code> order.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token to resume pagination.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: 'The total number of items to return. If the total number of available items is more than the value specified in <code>MaxResults</code>, then a <code>NextToken</code> will be provided in the output that you can use to resume pagination.'
    ListHyperParameterTuningJobsResponse:
      type: object
      required:
        - HyperParameterTuningJobSummaries
      properties:
        HyperParameterTuningJobSummaries:
          $ref: '#/components/schemas/HyperParameterTuningJobSummaries'
          description: A list of <a>HyperParameterTuningJobSummary</a> objects that describe the tuning jobs that the <code>ListHyperParameterTuningJobs</code> request returned.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of this <code>ListHyperParameterTuningJobs</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of tuning jobs, use the token in the next request.'
    ListHyperParameterTuningJobsRequest:
      type: object
      title: ListHyperParameterTuningJobsRequest
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous <code>ListHyperParameterTuningJobs</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of tuning jobs, use the token in the next request.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of tuning jobs to return. The default value is 10.
        SortBy:
          $ref: '#/components/schemas/HyperParameterTuningJobSortByOptions'
          description: The field to sort results by. The default is <code>Name</code>.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: The sort order for results. The default is <code>Ascending</code>.
        NameContains:
          $ref: '#/components/schemas/NameContains'
          description: A string in the tuning job name. This filter returns only tuning jobs whose name contains the specified string.
        CreationTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only tuning jobs that were created after the specified time.
        CreationTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only tuning jobs that were created before the specified time.
        LastModifiedTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only tuning jobs that were modified after the specified time.
        LastModifiedTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only tuning jobs that were modified before the specified time.
        StatusEquals:
          $ref: '#/components/schemas/HyperParameterTuningJobStatus'
          description: A filter that returns only tuning jobs with the specified status.
    ListImageVersionsResponse:
      type: object
      properties:
        ImageVersions:
          $ref: '#/components/schemas/ImageVersions'
          description: A list of versions and their properties.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token for getting the next set of versions, if there are any.'
    ListImageVersionsRequest:
      type: object
      required:
        - ImageName
      title: ListImageVersionsRequest
      properties:
        CreationTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only versions created on or after the specified time.
        CreationTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only versions created on or before the specified time.
        ImageName:
          $ref: '#/components/schemas/ImageName'
          description: The name of the image to list the versions of.
        LastModifiedTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only versions modified on or after the specified time.
        LastModifiedTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only versions modified on or before the specified time.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: 'The maximum number of versions to return in the response. The default value is 10. '
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the previous call to <code>ListImageVersions</code> didn''t return the full set of versions, the call returns a token for getting the next set of versions.'
        SortBy:
          $ref: '#/components/schemas/ImageVersionSortBy'
          description: The property used to sort results. The default value is <code>CREATION_TIME</code>.
        SortOrder:
          $ref: '#/components/schemas/ImageVersionSortOrder'
          description: The sort order. The default value is <code>DESCENDING</code>.
    ListImagesResponse:
      type: object
      properties:
        Images:
          $ref: '#/components/schemas/Images'
          description: A list of images and their properties.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token for getting the next set of images, if there are any.'
    ListImagesRequest:
      type: object
      title: ListImagesRequest
      properties:
        CreationTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only images created on or after the specified time.
        CreationTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only images created on or before the specified time.
        LastModifiedTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only images modified on or after the specified time.
        LastModifiedTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only images modified on or before the specified time.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: 'The maximum number of images to return in the response. The default value is 10. '
        NameContains:
          $ref: '#/components/schemas/ImageNameContains'
          description: A filter that returns only images whose name contains the specified string.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the previous call to <code>ListImages</code> didn''t return the full set of images, the call returns a token for getting the next set of images.'
        SortBy:
          $ref: '#/components/schemas/ImageSortBy'
          description: The property used to sort results. The default value is <code>CREATION_TIME</code>.
        SortOrder:
          $ref: '#/components/schemas/ImageSortOrder'
          description: The sort order. The default value is <code>DESCENDING</code>.
    ListLabelingJobsResponse:
      type: object
      properties:
        LabelingJobSummaryList:
          $ref: '#/components/schemas/LabelingJobSummaryList'
          description: 'An array of <code>LabelingJobSummary</code> objects, each describing a labeling job.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of labeling jobs, use it in the subsequent request.'
    ListLabelingJobsRequest:
      type: object
      title: ListLabelingJobsRequest
      properties:
        CreationTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only labeling jobs created after the specified time (timestamp).
        CreationTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only labeling jobs created before the specified time (timestamp).
        LastModifiedTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only labeling jobs modified after the specified time (timestamp).
        LastModifiedTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only labeling jobs modified before the specified time (timestamp).
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of labeling jobs to return in each page of the response.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous <code>ListLabelingJobs</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of labeling jobs, use the token in the next request.'
        NameContains:
          $ref: '#/components/schemas/NameContains'
          description: A string in the labeling job name. This filter returns only labeling jobs whose name contains the specified string.
        SortBy:
          $ref: '#/components/schemas/SortBy'
          description: The field to sort results by. The default is <code>CreationTime</code>.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: The sort order for results. The default is <code>Ascending</code>.
        StatusEquals:
          $ref: '#/components/schemas/LabelingJobStatus'
          description: A filter that retrieves only labeling jobs with a specific status.
    ListLabelingJobsForWorkteamResponse:
      type: object
      required:
        - LabelingJobSummaryList
      properties:
        LabelingJobSummaryList:
          $ref: '#/components/schemas/LabelingJobForWorkteamSummaryList'
          description: 'An array of <code>LabelingJobSummary</code> objects, each describing a labeling job.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of labeling jobs, use it in the subsequent request.'
    ListLabelingJobsForWorkteamRequest:
      type: object
      required:
        - WorkteamArn
      title: ListLabelingJobsForWorkteamRequest
      properties:
        WorkteamArn:
          $ref: '#/components/schemas/WorkteamArn'
          description: The Amazon Resource Name (ARN) of the work team for which you want to see labeling jobs for.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of labeling jobs to return in each page of the response.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous <code>ListLabelingJobsForWorkteam</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of labeling jobs, use the token in the next request.'
        CreationTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only labeling jobs created after the specified time (timestamp).
        CreationTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only labeling jobs created before the specified time (timestamp).
        JobReferenceCodeContains:
          $ref: '#/components/schemas/JobReferenceCodeContains'
          description: A filter the limits jobs to only the ones whose job reference code contains the specified string.
        SortBy:
          $ref: '#/components/schemas/ListLabelingJobsForWorkteamSortByOptions'
          description: The field to sort results by. The default is <code>CreationTime</code>.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: The sort order for results. The default is <code>Ascending</code>.
    ListModelBiasJobDefinitionsResponse:
      type: object
      required:
        - JobDefinitionSummaries
      properties:
        JobDefinitionSummaries:
          $ref: '#/components/schemas/MonitoringJobDefinitionSummaryList'
          description: A JSON array in which each element is a summary for a model bias jobs.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of jobs, use it in the subsequent request.'
    ListModelBiasJobDefinitionsRequest:
      type: object
      title: ListModelBiasJobDefinitionsRequest
      properties:
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
          description: Name of the endpoint to monitor for model bias.
        SortBy:
          $ref: '#/components/schemas/MonitoringJobDefinitionSortKey'
          description: Whether to sort results by the <code>Name</code> or <code>CreationTime</code> field. The default is <code>CreationTime</code>.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: Whether to sort the results in <code>Ascending</code> or <code>Descending</code> order. The default is <code>Descending</code>.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token returned if the response is truncated. To retrieve the next set of job executions, use it in the next request.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of model bias jobs to return in the response. The default value is 10.
        NameContains:
          $ref: '#/components/schemas/NameContains'
          description: Filter for model bias jobs whose name contains a specified string.
        CreationTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only model bias jobs created before a specified time.
        CreationTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only model bias jobs created after a specified time.
    ListModelExplainabilityJobDefinitionsResponse:
      type: object
      required:
        - JobDefinitionSummaries
      properties:
        JobDefinitionSummaries:
          $ref: '#/components/schemas/MonitoringJobDefinitionSummaryList'
          description: A JSON array in which each element is a summary for a explainability bias jobs.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of jobs, use it in the subsequent request.'
    ListModelExplainabilityJobDefinitionsRequest:
      type: object
      title: ListModelExplainabilityJobDefinitionsRequest
      properties:
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
          description: Name of the endpoint to monitor for model explainability.
        SortBy:
          $ref: '#/components/schemas/MonitoringJobDefinitionSortKey'
          description: Whether to sort results by the <code>Name</code> or <code>CreationTime</code> field. The default is <code>CreationTime</code>.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: Whether to sort the results in <code>Ascending</code> or <code>Descending</code> order. The default is <code>Descending</code>.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token returned if the response is truncated. To retrieve the next set of job executions, use it in the next request.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of jobs to return in the response. The default value is 10.
        NameContains:
          $ref: '#/components/schemas/NameContains'
          description: Filter for model explainability jobs whose name contains a specified string.
        CreationTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only model explainability jobs created before a specified time.
        CreationTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only model explainability jobs created after a specified time.
    ListModelPackageGroupsOutput:
      type: object
      required:
        - ModelPackageGroupSummaryList
      properties:
        ModelPackageGroupSummaryList:
          $ref: '#/components/schemas/ModelPackageGroupSummaryList'
          description: A list of summaries of the model groups in your Amazon Web Services account.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response is truncated, SageMaker returns this token. To retrieve the next set of model groups, use it in the subsequent request.'
    ListModelPackageGroupsInput:
      type: object
      title: ListModelPackageGroupsInput
      properties:
        CreationTimeAfter:
          $ref: '#/components/schemas/CreationTime'
          description: A filter that returns only model groups created after the specified time.
        CreationTimeBefore:
          $ref: '#/components/schemas/CreationTime'
          description: A filter that returns only model groups created before the specified time.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return in the response.
        NameContains:
          $ref: '#/components/schemas/NameContains'
          description: A string in the model group name. This filter returns only model groups whose name contains the specified string.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous <code>ListModelPackageGroups</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of model groups, use the token in the next request.'
        SortBy:
          $ref: '#/components/schemas/ModelPackageGroupSortBy'
          description: The field to sort results by. The default is <code>CreationTime</code>.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: The sort order for results. The default is <code>Ascending</code>.
    ListModelPackagesOutput:
      type: object
      required:
        - ModelPackageSummaryList
      properties:
        ModelPackageSummaryList:
          $ref: '#/components/schemas/ModelPackageSummaryList'
          description: 'An array of <code>ModelPackageSummary</code> objects, each of which lists a model package.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of model packages, use it in the subsequent request.'
    ListModelPackagesInput:
      type: object
      title: ListModelPackagesInput
      properties:
        CreationTimeAfter:
          $ref: '#/components/schemas/CreationTime'
          description: A filter that returns only model packages created after the specified time (timestamp).
        CreationTimeBefore:
          $ref: '#/components/schemas/CreationTime'
          description: A filter that returns only model packages created before the specified time (timestamp).
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of model packages to return in the response.
        NameContains:
          $ref: '#/components/schemas/NameContains'
          description: A string in the model package name. This filter returns only model packages whose name contains the specified string.
        ModelApprovalStatus:
          $ref: '#/components/schemas/ModelApprovalStatus'
          description: A filter that returns only the model packages with the specified approval status.
        ModelPackageGroupName:
          $ref: '#/components/schemas/ArnOrName'
          description: A filter that returns only model versions that belong to the specified model group.
        ModelPackageType:
          $ref: '#/components/schemas/ModelPackageType'
          description: <p>A filter that returns onlyl the model packages of the specified type. This can be one of the following values.</p> <ul> <li> <p> <code>VERSIONED</code> - List only versioned models.</p> </li> <li> <p> <code>UNVERSIONED</code> - List only unversioined models.</p> </li> <li> <p> <code>BOTH</code> - List both versioned and unversioned models.</p> </li> </ul>
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response to a previous <code>ListModelPackages</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of model packages, use the token in the next request.'
        SortBy:
          $ref: '#/components/schemas/ModelPackageSortBy'
          description: The parameter by which to sort the results. The default is <code>CreationTime</code>.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: The sort order for the results. The default is <code>Ascending</code>.
    ListModelQualityJobDefinitionsResponse:
      type: object
      required:
        - JobDefinitionSummaries
      properties:
        JobDefinitionSummaries:
          $ref: '#/components/schemas/MonitoringJobDefinitionSummaryList'
          description: A list of summaries of model quality monitoring job definitions.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of model quality monitoring job definitions, use it in the next request.'
    ListModelQualityJobDefinitionsRequest:
      type: object
      title: ListModelQualityJobDefinitionsRequest
      properties:
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
          description: A filter that returns only model quality monitoring job definitions that are associated with the specified endpoint.
        SortBy:
          $ref: '#/components/schemas/MonitoringJobDefinitionSortKey'
          description: The field to sort results by. The default is <code>CreationTime</code>.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: The sort order for results. The default is <code>Descending</code>.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous <code>ListModelQualityJobDefinitions</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of model quality monitoring job definitions, use the token in the next request.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return in a call to <code>ListModelQualityJobDefinitions</code>.
        NameContains:
          $ref: '#/components/schemas/NameContains'
          description: A string in the transform job name. This filter returns only model quality monitoring job definitions whose name contains the specified string.
        CreationTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only model quality monitoring job definitions created before the specified time.
        CreationTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only model quality monitoring job definitions created after the specified time.
    ListModelsOutput:
      type: object
      required:
        - Models
      properties:
        Models:
          $ref: '#/components/schemas/ModelSummaryList'
          description: 'An array of <code>ModelSummary</code> objects, each of which lists a model.'
        NextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: ' If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of models, use it in the subsequent request. '
    ListModelsInput:
      type: object
      title: ListModelsInput
      properties:
        SortBy:
          $ref: '#/components/schemas/ModelSortKey'
          description: Sorts the list of results. The default is <code>CreationTime</code>.
        SortOrder:
          $ref: '#/components/schemas/OrderKey'
          description: The sort order for results. The default is <code>Descending</code>.
        NextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'If the response to a previous <code>ListModels</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of models, use the token in the next request.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of models to return in the response.
        NameContains:
          $ref: '#/components/schemas/ModelNameContains'
          description: A string in the training job name. This filter returns only models in the training job whose name contains the specified string.
        CreationTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only models created before the specified time (timestamp).
        CreationTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only models with a creation time greater than or equal to the specified time (timestamp).
    ListMonitoringExecutionsResponse:
      type: object
      required:
        - MonitoringExecutionSummaries
      properties:
        MonitoringExecutionSummaries:
          $ref: '#/components/schemas/MonitoringExecutionSummaryList'
          description: A JSON array in which each element is a summary for a monitoring execution.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of jobs, use it in the subsequent reques'
    ListMonitoringExecutionsRequest:
      type: object
      title: ListMonitoringExecutionsRequest
      properties:
        MonitoringScheduleName:
          $ref: '#/components/schemas/MonitoringScheduleName'
          description: Name of a specific schedule to fetch jobs for.
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
          description: Name of a specific endpoint to fetch jobs for.
        SortBy:
          $ref: '#/components/schemas/MonitoringExecutionSortKey'
          description: 'Whether to sort results by <code>Status</code>, <code>CreationTime</code>, <code>ScheduledTime</code> field. The default is <code>CreationTime</code>.'
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: Whether to sort the results in <code>Ascending</code> or <code>Descending</code> order. The default is <code>Descending</code>.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token returned if the response is truncated. To retrieve the next set of job executions, use it in the next request.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of jobs to return in the response. The default value is 10.
        ScheduledTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: Filter for jobs scheduled before a specified time.
        ScheduledTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: Filter for jobs scheduled after a specified time.
        CreationTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only jobs created before a specified time.
        CreationTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only jobs created after a specified time.
        LastModifiedTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only jobs modified after a specified time.
        LastModifiedTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only jobs modified before a specified time.
        StatusEquals:
          $ref: '#/components/schemas/ExecutionStatus'
          description: A filter that retrieves only jobs with a specific status.
        MonitoringJobDefinitionName:
          $ref: '#/components/schemas/MonitoringJobDefinitionName'
          description: Gets a list of the monitoring job runs of the specified monitoring job definitions.
        MonitoringTypeEquals:
          $ref: '#/components/schemas/MonitoringType'
          description: A filter that returns only the monitoring job runs of the specified monitoring type.
    ListMonitoringSchedulesResponse:
      type: object
      required:
        - MonitoringScheduleSummaries
      properties:
        MonitoringScheduleSummaries:
          $ref: '#/components/schemas/MonitoringScheduleSummaryList'
          description: A JSON array in which each element is a summary for a monitoring schedule.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of jobs, use it in the subsequent request.'
    ListMonitoringSchedulesRequest:
      type: object
      title: ListMonitoringSchedulesRequest
      properties:
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
          description: Name of a specific endpoint to fetch schedules for.
        SortBy:
          $ref: '#/components/schemas/MonitoringScheduleSortKey'
          description: 'Whether to sort results by <code>Status</code>, <code>CreationTime</code>, <code>ScheduledTime</code> field. The default is <code>CreationTime</code>.'
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: Whether to sort the results in <code>Ascending</code> or <code>Descending</code> order. The default is <code>Descending</code>.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token returned if the response is truncated. To retrieve the next set of job executions, use it in the next request.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of jobs to return in the response. The default value is 10.
        NameContains:
          $ref: '#/components/schemas/NameContains'
          description: Filter for monitoring schedules whose name contains a specified string.
        CreationTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only monitoring schedules created before a specified time.
        CreationTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only monitoring schedules created after a specified time.
        LastModifiedTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only monitoring schedules modified before a specified time.
        LastModifiedTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only monitoring schedules modified after a specified time.
        StatusEquals:
          $ref: '#/components/schemas/ScheduleStatus'
          description: A filter that returns only monitoring schedules modified before a specified time.
        MonitoringJobDefinitionName:
          $ref: '#/components/schemas/MonitoringJobDefinitionName'
          description: Gets a list of the monitoring schedules for the specified monitoring job definition.
        MonitoringTypeEquals:
          $ref: '#/components/schemas/MonitoringType'
          description: A filter that returns only the monitoring schedules for the specified monitoring type.
    ListNotebookInstanceLifecycleConfigsOutput:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response is truncated, Amazon SageMaker returns this token. To get the next set of lifecycle configurations, use it in the next request. '
        NotebookInstanceLifecycleConfigs:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigSummaryList'
          description: 'An array of <code>NotebookInstanceLifecycleConfiguration</code> objects, each listing a lifecycle configuration.'
    ListNotebookInstanceLifecycleConfigsInput:
      type: object
      title: ListNotebookInstanceLifecycleConfigsInput
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of a <code>ListNotebookInstanceLifecycleConfigs</code> request was truncated, the response includes a <code>NextToken</code>. To get the next set of lifecycle configurations, use the token in the next request.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of lifecycle configurations to return in the response.
        SortBy:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigSortKey'
          description: Sorts the list of results. The default is <code>CreationTime</code>.
        SortOrder:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigSortOrder'
          description: The sort order for results.
        NameContains:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigNameContains'
          description: A string in the lifecycle configuration name. This filter returns only lifecycle configurations whose name contains the specified string.
        CreationTimeBefore:
          $ref: '#/components/schemas/CreationTime'
          description: A filter that returns only lifecycle configurations that were created before the specified time (timestamp).
        CreationTimeAfter:
          $ref: '#/components/schemas/CreationTime'
          description: A filter that returns only lifecycle configurations that were created after the specified time (timestamp).
        LastModifiedTimeBefore:
          $ref: '#/components/schemas/LastModifiedTime'
          description: A filter that returns only lifecycle configurations that were modified before the specified time (timestamp).
        LastModifiedTimeAfter:
          $ref: '#/components/schemas/LastModifiedTime'
          description: A filter that returns only lifecycle configurations that were modified after the specified time (timestamp).
    ListNotebookInstancesOutput:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response to the previous <code>ListNotebookInstances</code> request was truncated, Amazon SageMaker returns this token. To retrieve the next set of notebook instances, use the token in the next request.'
        NotebookInstances:
          $ref: '#/components/schemas/NotebookInstanceSummaryList'
          description: 'An array of <code>NotebookInstanceSummary</code> objects, one for each notebook instance.'
    ListNotebookInstancesInput:
      type: object
      title: ListNotebookInstancesInput
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: '<p> If the previous call to the <code>ListNotebookInstances</code> is truncated, the response includes a <code>NextToken</code>. You can use this token in your subsequent <code>ListNotebookInstances</code> request to fetch the next set of notebook instances. </p> <note> <p>You might specify a filter or a sort order in your request. When response is truncated, you must use the same values for the filer and sort order in the next request. </p> </note>'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of notebook instances to return.
        SortBy:
          $ref: '#/components/schemas/NotebookInstanceSortKey'
          description: The field to sort results by. The default is <code>Name</code>.
        SortOrder:
          $ref: '#/components/schemas/NotebookInstanceSortOrder'
          description: 'The sort order for results. '
        NameContains:
          $ref: '#/components/schemas/NotebookInstanceNameContains'
          description: A string in the notebook instances' name. This filter returns only notebook instances whose name contains the specified string.
        CreationTimeBefore:
          $ref: '#/components/schemas/CreationTime'
          description: 'A filter that returns only notebook instances that were created before the specified time (timestamp). '
        CreationTimeAfter:
          $ref: '#/components/schemas/CreationTime'
          description: A filter that returns only notebook instances that were created after the specified time (timestamp).
        LastModifiedTimeBefore:
          $ref: '#/components/schemas/LastModifiedTime'
          description: A filter that returns only notebook instances that were modified before the specified time (timestamp).
        LastModifiedTimeAfter:
          $ref: '#/components/schemas/LastModifiedTime'
          description: A filter that returns only notebook instances that were modified after the specified time (timestamp).
        StatusEquals:
          $ref: '#/components/schemas/NotebookInstanceStatus'
          description: A filter that returns only notebook instances with the specified status.
        NotebookInstanceLifecycleConfigNameContains:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigName'
          description: A string in the name of a notebook instances lifecycle configuration associated with this notebook instance. This filter returns only notebook instances associated with a lifecycle configuration with a name that contains the specified string.
        DefaultCodeRepositoryContains:
          $ref: '#/components/schemas/CodeRepositoryContains'
          description: A string in the name or URL of a Git repository associated with this notebook instance. This filter returns only notebook instances associated with a git repository with a name that contains the specified string.
        AdditionalCodeRepositoryEquals:
          $ref: '#/components/schemas/CodeRepositoryNameOrUrl'
          description: A filter that returns only notebook instances with associated with the specified git repository.
    ListPipelineExecutionStepsResponse:
      type: object
      properties:
        PipelineExecutionSteps:
          $ref: '#/components/schemas/PipelineExecutionStepList'
          description: 'A list of <code>PipeLineExecutionStep</code> objects. Each <code>PipeLineExecutionStep</code> consists of StepName, StartTime, EndTime, StepStatus, and Metadata. Metadata is an object with properties for each job that contains relevant information about the job created by the step.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous <code>ListPipelineExecutionSteps</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of pipeline execution steps, use the token in the next request.'
    ListPipelineExecutionStepsRequest:
      type: object
      title: ListPipelineExecutionStepsRequest
      properties:
        PipelineExecutionArn:
          $ref: '#/components/schemas/PipelineExecutionArn'
          description: The Amazon Resource Name (ARN) of the pipeline execution.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous <code>ListPipelineExecutionSteps</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of pipeline execution steps, use the token in the next request.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of pipeline execution steps to return in the response.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: The field by which to sort results. The default is <code>CreatedTime</code>.
    ListPipelineExecutionsResponse:
      type: object
      properties:
        PipelineExecutionSummaries:
          $ref: '#/components/schemas/PipelineExecutionSummaryList'
          description: 'Contains a sorted list of pipeline execution summary objects matching the specified filters. Each run summary includes the Amazon Resource Name (ARN) of the pipeline execution, the run date, and the status. This list can be empty. '
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous <code>ListPipelineExecutions</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of pipeline executions, use the token in the next request.'
    ListPipelineExecutionsRequest:
      type: object
      required:
        - PipelineName
      title: ListPipelineExecutionsRequest
      properties:
        PipelineName:
          $ref: '#/components/schemas/PipelineName'
          description: The name of the pipeline.
        CreatedAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns the pipeline executions that were created after a specified time.
        CreatedBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns the pipeline executions that were created before a specified time.
        SortBy:
          $ref: '#/components/schemas/SortPipelineExecutionsBy'
          description: The field by which to sort results. The default is <code>CreatedTime</code>.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: The sort order for results.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous <code>ListPipelineExecutions</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of pipeline executions, use the token in the next request.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of pipeline executions to return in the response.
    ListPipelineParametersForExecutionResponse:
      type: object
      properties:
        PipelineParameters:
          $ref: '#/components/schemas/ParameterList'
          description: 'Contains a list of pipeline parameters. This list can be empty. '
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous <code>ListPipelineParametersForExecution</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of parameters, use the token in the next request.'
    ListPipelineParametersForExecutionRequest:
      type: object
      required:
        - PipelineExecutionArn
      title: ListPipelineParametersForExecutionRequest
      properties:
        PipelineExecutionArn:
          $ref: '#/components/schemas/PipelineExecutionArn'
          description: The Amazon Resource Name (ARN) of the pipeline execution.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous <code>ListPipelineParametersForExecution</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of parameters, use the token in the next request.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of parameters to return in the response.
    ListPipelinesResponse:
      type: object
      properties:
        PipelineSummaries:
          $ref: '#/components/schemas/PipelineSummaryList'
          description: 'Contains a sorted list of <code>PipelineSummary</code> objects matching the specified filters. Each <code>PipelineSummary</code> consists of PipelineArn, PipelineName, ExperimentName, PipelineDescription, CreationTime, LastModifiedTime, LastRunTime, and RoleArn. This list can be empty. '
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous <code>ListPipelines</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of pipelines, use the token in the next request.'
    ListPipelinesRequest:
      type: object
      title: ListPipelinesRequest
      properties:
        PipelineNamePrefix:
          $ref: '#/components/schemas/PipelineName'
          description: The prefix of the pipeline name.
        CreatedAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns the pipelines that were created after a specified time.
        CreatedBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns the pipelines that were created before a specified time.
        SortBy:
          $ref: '#/components/schemas/SortPipelinesBy'
          description: The field by which to sort results. The default is <code>CreatedTime</code>.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: The sort order for results.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous <code>ListPipelines</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of pipelines, use the token in the next request.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of pipelines to return in the response.
    ListProcessingJobsResponse:
      type: object
      required:
        - ProcessingJobSummaries
      properties:
        ProcessingJobSummaries:
          $ref: '#/components/schemas/ProcessingJobSummaries'
          description: 'An array of <code>ProcessingJobSummary</code> objects, each listing a processing job.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of processing jobs, use it in the subsequent request.'
    ListProcessingJobsRequest:
      type: object
      title: ListProcessingJobsRequest
      properties:
        CreationTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only processing jobs created after the specified time.
        CreationTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only processing jobs created after the specified time.
        LastModifiedTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only processing jobs modified after the specified time.
        LastModifiedTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only processing jobs modified before the specified time.
        NameContains:
          $ref: '#/components/schemas/String'
          description: A string in the processing job name. This filter returns only processing jobs whose name contains the specified string.
        StatusEquals:
          $ref: '#/components/schemas/ProcessingJobStatus'
          description: A filter that retrieves only processing jobs with a specific status.
        SortBy:
          $ref: '#/components/schemas/SortBy'
          description: The field to sort results by. The default is <code>CreationTime</code>.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: The sort order for results. The default is <code>Ascending</code>.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous <code>ListProcessingJobs</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of processing jobs, use the token in the next request.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of processing jobs to return in the response.
    ListProjectsOutput:
      type: object
      required:
        - ProjectSummaryList
      properties:
        ProjectSummaryList:
          $ref: '#/components/schemas/ProjectSummaryList'
          description: A list of summaries of projects.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous <code>ListCompilationJobs</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of model compilation jobs, use the token in the next request.'
    ListProjectsInput:
      type: object
      title: ListProjectsInput
      properties:
        CreationTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns the projects that were created after a specified time.
        CreationTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns the projects that were created before a specified time.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of projects to return in the response.
        NameContains:
          $ref: '#/components/schemas/ProjectEntityName'
          description: A filter that returns the projects whose name contains a specified string.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous <code>ListProjects</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of projects, use the token in the next request.'
        SortBy:
          $ref: '#/components/schemas/ProjectSortBy'
          description: The field by which to sort results. The default is <code>CreationTime</code>.
        SortOrder:
          $ref: '#/components/schemas/ProjectSortOrder'
          description: The sort order for results. The default is <code>Ascending</code>.
    ListSubscribedWorkteamsResponse:
      type: object
      required:
        - SubscribedWorkteams
      properties:
        SubscribedWorkteams:
          $ref: '#/components/schemas/SubscribedWorkteams'
          description: 'An array of <code>Workteam</code> objects, each describing a work team.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of work teams, use it in the subsequent request.'
    ListSubscribedWorkteamsRequest:
      type: object
      title: ListSubscribedWorkteamsRequest
      properties:
        NameContains:
          $ref: '#/components/schemas/WorkteamName'
          description: A string in the work team name. This filter returns only work teams whose name contains the specified string.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous <code>ListSubscribedWorkteams</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of labeling jobs, use the token in the next request.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of work teams to return in each page of the response.
    ListTagsOutput:
      type: object
      properties:
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'An array of <code>Tag</code> objects, each with a tag key and a value.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: ' If response is truncated, Amazon SageMaker includes a token in the response. You can use this token in your subsequent request to fetch next set of tokens. '
    ListTagsInput:
      type: object
      required:
        - ResourceArn
      title: ListTagsInput
      properties:
        ResourceArn:
          $ref: '#/components/schemas/ResourceArn'
          description: The Amazon Resource Name (ARN) of the resource whose tags you want to retrieve.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: ' If the response to the previous <code>ListTags</code> request is truncated, Amazon SageMaker returns this token. To retrieve the next set of tags, use it in the subsequent request. '
        MaxResults:
          $ref: '#/components/schemas/ListTagsMaxResults'
          description: Maximum number of tags to return.
    ListTrainingJobsResponse:
      type: object
      required:
        - TrainingJobSummaries
      properties:
        TrainingJobSummaries:
          $ref: '#/components/schemas/TrainingJobSummaries'
          description: 'An array of <code>TrainingJobSummary</code> objects, each listing a training job.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of training jobs, use it in the subsequent request.'
    ListTrainingJobsRequest:
      type: object
      title: ListTrainingJobsRequest
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous <code>ListTrainingJobs</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of training jobs, use the token in the next request. '
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of training jobs to return in the response.
        CreationTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only training jobs created after the specified time (timestamp).
        CreationTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only training jobs created before the specified time (timestamp).
        LastModifiedTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only training jobs modified after the specified time (timestamp).
        LastModifiedTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only training jobs modified before the specified time (timestamp).
        NameContains:
          $ref: '#/components/schemas/NameContains'
          description: A string in the training job name. This filter returns only training jobs whose name contains the specified string.
        StatusEquals:
          $ref: '#/components/schemas/TrainingJobStatus'
          description: A filter that retrieves only training jobs with a specific status.
        SortBy:
          $ref: '#/components/schemas/SortBy'
          description: The field to sort results by. The default is <code>CreationTime</code>.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: The sort order for results. The default is <code>Ascending</code>.
    ListTrainingJobsForHyperParameterTuningJobResponse:
      type: object
      required:
        - TrainingJobSummaries
      properties:
        TrainingJobSummaries:
          $ref: '#/components/schemas/HyperParameterTrainingJobSummaries'
          description: A list of <a>TrainingJobSummary</a> objects that describe the training jobs that the <code>ListTrainingJobsForHyperParameterTuningJob</code> request returned.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of this <code>ListTrainingJobsForHyperParameterTuningJob</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of training jobs, use the token in the next request.'
    ListTrainingJobsForHyperParameterTuningJobRequest:
      type: object
      required:
        - HyperParameterTuningJobName
      title: ListTrainingJobsForHyperParameterTuningJobRequest
      properties:
        HyperParameterTuningJobName:
          $ref: '#/components/schemas/HyperParameterTuningJobName'
          description: The name of the tuning job whose training jobs you want to list.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous <code>ListTrainingJobsForHyperParameterTuningJob</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of training jobs, use the token in the next request.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of training jobs to return. The default value is 10.
        StatusEquals:
          $ref: '#/components/schemas/TrainingJobStatus'
          description: A filter that returns only training jobs with the specified status.
        SortBy:
          $ref: '#/components/schemas/TrainingJobSortByOptions'
          description: '<p>The field to sort results by. The default is <code>Name</code>.</p> <p>If the value of this field is <code>FinalObjectiveMetricValue</code>, any training jobs that did not return an objective metric are not listed.</p>'
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: The sort order for results. The default is <code>Ascending</code>.
    ListTransformJobsResponse:
      type: object
      required:
        - TransformJobSummaries
      properties:
        TransformJobSummaries:
          $ref: '#/components/schemas/TransformJobSummaries'
          description: An array of <code>TransformJobSummary</code> objects.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of transform jobs, use it in the next request.'
    ListTransformJobsRequest:
      type: object
      title: ListTransformJobsRequest
      properties:
        CreationTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only transform jobs created after the specified time.
        CreationTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only transform jobs created before the specified time.
        LastModifiedTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only transform jobs modified after the specified time.
        LastModifiedTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only transform jobs modified before the specified time.
        NameContains:
          $ref: '#/components/schemas/NameContains'
          description: A string in the transform job name. This filter returns only transform jobs whose name contains the specified string.
        StatusEquals:
          $ref: '#/components/schemas/TransformJobStatus'
          description: A filter that retrieves only transform jobs with a specific status.
        SortBy:
          $ref: '#/components/schemas/SortBy'
          description: The field to sort results by. The default is <code>CreationTime</code>.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: The sort order for results. The default is <code>Descending</code>.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous <code>ListTransformJobs</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of transform jobs, use the token in the next request.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of transform jobs to return in the response. The default value is <code>10</code>.
    ListTrialComponentsResponse:
      type: object
      properties:
        TrialComponentSummaries:
          $ref: '#/components/schemas/TrialComponentSummaries'
          description: A list of the summaries of your trial components.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token for getting the next set of components, if there are any.'
    ListTrialComponentsRequest:
      type: object
      title: ListTrialComponentsRequest
      properties:
        ExperimentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: 'A filter that returns only components that are part of the specified experiment. If you specify <code>ExperimentName</code>, you can''t filter by <code>SourceArn</code> or <code>TrialName</code>.'
        TrialName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: 'A filter that returns only components that are part of the specified trial. If you specify <code>TrialName</code>, you can''t filter by <code>ExperimentName</code> or <code>SourceArn</code>.'
        SourceArn:
          $ref: '#/components/schemas/String256'
          description: 'A filter that returns only components that have the specified source Amazon Resource Name (ARN). If you specify <code>SourceArn</code>, you can''t filter by <code>ExperimentName</code> or <code>TrialName</code>.'
        CreatedAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only components created after the specified time.
        CreatedBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only components created before the specified time.
        SortBy:
          $ref: '#/components/schemas/SortTrialComponentsBy'
          description: The property used to sort results. The default value is <code>CreationTime</code>.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: The sort order. The default value is <code>Descending</code>.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of components to return in the response. The default value is 10.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the previous call to <code>ListTrialComponents</code> didn''t return the full set of components, the call returns a token for getting the next set of components.'
    ListTrialsResponse:
      type: object
      properties:
        TrialSummaries:
          $ref: '#/components/schemas/TrialSummaries'
          description: A list of the summaries of your trials.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token for getting the next set of trials, if there are any.'
    ListTrialsRequest:
      type: object
      title: ListTrialsRequest
      properties:
        ExperimentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: A filter that returns only trials that are part of the specified experiment.
        TrialComponentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: A filter that returns only trials that are associated with the specified trial component.
        CreatedAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only trials created after the specified time.
        CreatedBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only trials created before the specified time.
        SortBy:
          $ref: '#/components/schemas/SortTrialsBy'
          description: The property used to sort results. The default value is <code>CreationTime</code>.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: The sort order. The default value is <code>Descending</code>.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of trials to return in the response. The default value is 10.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the previous call to <code>ListTrials</code> didn''t return the full set of trials, the call returns a token for getting the next set of trials.'
    ListUserProfilesResponse:
      type: object
      properties:
        UserProfiles:
          $ref: '#/components/schemas/UserProfileList'
          description: The list of user profiles.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the previous response was truncated, you will receive this token. Use it in your next request to receive the next set of results.'
    ListUserProfilesRequest:
      type: object
      title: ListUserProfilesRequest
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the previous response was truncated, you will receive this token. Use it in your next request to receive the next set of results.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: Returns a list up to a specified limit.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: The sort order for the results. The default is Ascending.
        SortBy:
          $ref: '#/components/schemas/UserProfileSortKey'
          description: The parameter by which to sort the results. The default is CreationTime.
        DomainIdEquals:
          $ref: '#/components/schemas/DomainId'
          description: A parameter by which to filter the results.
        UserProfileNameContains:
          $ref: '#/components/schemas/UserProfileName'
          description: A parameter by which to filter the results.
    ListWorkforcesResponse:
      type: object
      required:
        - Workforces
      properties:
        Workforces:
          $ref: '#/components/schemas/Workforces'
          description: A list containing information about your workforce.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token to resume pagination.
    ListWorkforcesRequest:
      type: object
      title: ListWorkforcesRequest
      properties:
        SortBy:
          $ref: '#/components/schemas/ListWorkforcesSortByOptions'
          description: Sort workforces using the workforce name or creation date.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: Sort workforces in ascending or descending order.
        NameContains:
          $ref: '#/components/schemas/WorkforceName'
          description: A filter you can use to search for workforces using part of the workforce name.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token to resume pagination.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of workforces returned in the response.
    ListWorkteamsResponse:
      type: object
      required:
        - Workteams
      properties:
        Workteams:
          $ref: '#/components/schemas/Workteams'
          description: 'An array of <code>Workteam</code> objects, each describing a work team.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of work teams, use it in the subsequent request.'
    ListWorkteamsRequest:
      type: object
      title: ListWorkteamsRequest
      properties:
        SortBy:
          $ref: '#/components/schemas/ListWorkteamsSortByOptions'
          description: The field to sort results by. The default is <code>CreationTime</code>.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: The sort order for results. The default is <code>Ascending</code>.
        NameContains:
          $ref: '#/components/schemas/WorkteamName'
          description: A string in the work team's name. This filter returns only work teams whose name contains the specified string.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous <code>ListWorkteams</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of labeling jobs, use the token in the next request.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of work teams to return in each page of the response.
    PutModelPackageGroupPolicyOutput:
      type: object
      required:
        - ModelPackageGroupArn
      properties:
        ModelPackageGroupArn:
          $ref: '#/components/schemas/ModelPackageGroupArn'
          description: The Amazon Resource Name (ARN) of the model package group.
    PutModelPackageGroupPolicyInput:
      type: object
      required:
        - ModelPackageGroupName
        - ResourcePolicy
      title: PutModelPackageGroupPolicyInput
      properties:
        ModelPackageGroupName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the model group to add a resource policy to.
        ResourcePolicy:
          $ref: '#/components/schemas/PolicyString'
          description: The resource policy for the model group.
    RegisterDevicesRequest:
      type: object
      required:
        - DeviceFleetName
        - Devices
      title: RegisterDevicesRequest
      properties:
        DeviceFleetName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the fleet.
        Devices:
          $ref: '#/components/schemas/Devices'
          description: A list of devices to register with SageMaker Edge Manager.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: The tags associated with devices.
    RenderUiTemplateResponse:
      type: object
      required:
        - RenderedContent
        - Errors
      properties:
        RenderedContent:
          $ref: '#/components/schemas/String'
          description: A Liquid template that renders the HTML for the worker UI.
        Errors:
          $ref: '#/components/schemas/RenderingErrorList'
          description: 'A list of one or more <code>RenderingError</code> objects if any were encountered while rendering the template. If there were no errors, the list is empty.'
    RenderUiTemplateRequest:
      type: object
      required:
        - Task
        - RoleArn
      title: RenderUiTemplateRequest
      properties:
        UiTemplate:
          $ref: '#/components/schemas/UiTemplate'
          description: A <code>Template</code> object containing the worker UI template to render.
        Task:
          $ref: '#/components/schemas/RenderableTask'
          description: A <code>RenderableTask</code> object containing a representative task to render.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) that has access to the S3 objects that are used by the template.
        HumanTaskUiArn:
          $ref: '#/components/schemas/HumanTaskUiArn'
          description: <p>The <code>HumanTaskUiArn</code> of the worker UI that you want to render. Do not provide a <code>HumanTaskUiArn</code> if you use the <code>UiTemplate</code> parameter.</p> <p>See a list of available Human Ui Amazon Resource Names (ARNs) in <a>UiConfig</a>.</p>
    SearchResponse:
      type: object
      properties:
        Results:
          $ref: '#/components/schemas/SearchResultsList'
          description: A list of <code>SearchRecord</code> objects.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous <code>Search</code> request was truncated, the response includes a NextToken. To retrieve the next set of results, use the token in the next request.'
    SearchRequest:
      type: object
      required:
        - Resource
      title: SearchRequest
      properties:
        Resource:
          $ref: '#/components/schemas/ResourceType'
          description: The name of the Amazon SageMaker resource to search for.
        SearchExpression:
          $ref: '#/components/schemas/SearchExpression'
          description: 'A Boolean conditional statement. Resources must satisfy this condition to be included in search results. You must provide at least one subexpression, filter, or nested filter. The maximum number of recursive <code>SubExpressions</code>, <code>NestedFilters</code>, and <code>Filters</code> that can be included in a <code>SearchExpression</code> object is 50.'
        SortBy:
          $ref: '#/components/schemas/ResourcePropertyName'
          description: The name of the resource property used to sort the <code>SearchResults</code>. The default is <code>LastModifiedTime</code>.
        SortOrder:
          $ref: '#/components/schemas/SearchSortOrder'
          description: How <code>SearchResults</code> are ordered. Valid values are <code>Ascending</code> or <code>Descending</code>. The default is <code>Descending</code>.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If more than <code>MaxResults</code> resources match the specified <code>SearchExpression</code>, the response includes a <code>NextToken</code>. The <code>NextToken</code> can be passed to the next <code>SearchRequest</code> to continue retrieving results.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return.
    SendPipelineExecutionStepFailureResponse:
      type: object
      properties:
        PipelineExecutionArn:
          $ref: '#/components/schemas/PipelineExecutionArn'
          description: The Amazon Resource Name (ARN) of the pipeline execution.
    SendPipelineExecutionStepFailureRequest:
      type: object
      required:
        - CallbackToken
      title: SendPipelineExecutionStepFailureRequest
      properties:
        CallbackToken:
          $ref: '#/components/schemas/CallbackToken'
          description: The pipeline generated token from the Amazon SQS queue.
        FailureReason:
          $ref: '#/components/schemas/String256'
          description: A message describing why the step failed.
        ClientRequestToken:
          $ref: '#/components/schemas/IdempotencyToken'
          description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the operation. An idempotent operation completes no more than one time.'
    SendPipelineExecutionStepSuccessResponse:
      type: object
      properties:
        PipelineExecutionArn:
          $ref: '#/components/schemas/PipelineExecutionArn'
          description: The Amazon Resource Name (ARN) of the pipeline execution.
    SendPipelineExecutionStepSuccessRequest:
      type: object
      required:
        - CallbackToken
      title: SendPipelineExecutionStepSuccessRequest
      properties:
        CallbackToken:
          $ref: '#/components/schemas/CallbackToken'
          description: The pipeline generated token from the Amazon SQS queue.
        OutputParameters:
          $ref: '#/components/schemas/OutputParameterList'
          description: A list of the output parameters of the callback step.
        ClientRequestToken:
          $ref: '#/components/schemas/IdempotencyToken'
          description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the operation. An idempotent operation completes no more than one time.'
    StartMonitoringScheduleRequest:
      type: object
      required:
        - MonitoringScheduleName
      title: StartMonitoringScheduleRequest
      properties:
        MonitoringScheduleName:
          $ref: '#/components/schemas/MonitoringScheduleName'
          description: The name of the schedule to start.
    StartNotebookInstanceInput:
      type: object
      required:
        - NotebookInstanceName
      title: StartNotebookInstanceInput
      properties:
        NotebookInstanceName:
          $ref: '#/components/schemas/NotebookInstanceName'
          description: The name of the notebook instance to start.
    StartPipelineExecutionResponse:
      type: object
      properties:
        PipelineExecutionArn:
          $ref: '#/components/schemas/PipelineExecutionArn'
          description: The Amazon Resource Name (ARN) of the pipeline execution.
    StartPipelineExecutionRequest:
      type: object
      required:
        - PipelineName
        - ClientRequestToken
      title: StartPipelineExecutionRequest
      properties:
        PipelineName:
          $ref: '#/components/schemas/PipelineName'
          description: The name of the pipeline.
        PipelineExecutionDisplayName:
          $ref: '#/components/schemas/PipelineExecutionName'
          description: The display name of the pipeline execution.
        PipelineParameters:
          $ref: '#/components/schemas/ParameterList'
          description: 'Contains a list of pipeline parameters. This list can be empty. '
        PipelineExecutionDescription:
          $ref: '#/components/schemas/PipelineExecutionDescription'
          description: The description of the pipeline execution.
        ClientRequestToken:
          $ref: '#/components/schemas/IdempotencyToken'
          description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the operation. An idempotent operation completes no more than one time.'
    StopAutoMLJobRequest:
      type: object
      required:
        - AutoMLJobName
      title: StopAutoMLJobRequest
      properties:
        AutoMLJobName:
          $ref: '#/components/schemas/AutoMLJobName'
          description: The name of the object you are requesting.
    StopCompilationJobRequest:
      type: object
      required:
        - CompilationJobName
      title: StopCompilationJobRequest
      properties:
        CompilationJobName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the model compilation job to stop.
    StopEdgePackagingJobRequest:
      type: object
      required:
        - EdgePackagingJobName
      title: StopEdgePackagingJobRequest
      properties:
        EdgePackagingJobName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the edge packaging job.
    StopHyperParameterTuningJobRequest:
      type: object
      required:
        - HyperParameterTuningJobName
      title: StopHyperParameterTuningJobRequest
      properties:
        HyperParameterTuningJobName:
          $ref: '#/components/schemas/HyperParameterTuningJobName'
          description: The name of the tuning job to stop.
    StopLabelingJobRequest:
      type: object
      required:
        - LabelingJobName
      title: StopLabelingJobRequest
      properties:
        LabelingJobName:
          $ref: '#/components/schemas/LabelingJobName'
          description: The name of the labeling job to stop.
    StopMonitoringScheduleRequest:
      type: object
      required:
        - MonitoringScheduleName
      title: StopMonitoringScheduleRequest
      properties:
        MonitoringScheduleName:
          $ref: '#/components/schemas/MonitoringScheduleName'
          description: The name of the schedule to stop.
    StopNotebookInstanceInput:
      type: object
      required:
        - NotebookInstanceName
      title: StopNotebookInstanceInput
      properties:
        NotebookInstanceName:
          $ref: '#/components/schemas/NotebookInstanceName'
          description: The name of the notebook instance to terminate.
    StopPipelineExecutionResponse:
      type: object
      properties:
        PipelineExecutionArn:
          $ref: '#/components/schemas/PipelineExecutionArn'
          description: The Amazon Resource Name (ARN) of the pipeline execution.
    StopPipelineExecutionRequest:
      type: object
      required:
        - PipelineExecutionArn
        - ClientRequestToken
      title: StopPipelineExecutionRequest
      properties:
        PipelineExecutionArn:
          $ref: '#/components/schemas/PipelineExecutionArn'
          description: The Amazon Resource Name (ARN) of the pipeline execution.
        ClientRequestToken:
          $ref: '#/components/schemas/IdempotencyToken'
          description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the operation. An idempotent operation completes no more than one time.'
    StopProcessingJobRequest:
      type: object
      required:
        - ProcessingJobName
      title: StopProcessingJobRequest
      properties:
        ProcessingJobName:
          $ref: '#/components/schemas/ProcessingJobName'
          description: The name of the processing job to stop.
    StopTrainingJobRequest:
      type: object
      required:
        - TrainingJobName
      title: StopTrainingJobRequest
      properties:
        TrainingJobName:
          $ref: '#/components/schemas/TrainingJobName'
          description: The name of the training job to stop.
    StopTransformJobRequest:
      type: object
      required:
        - TransformJobName
      title: StopTransformJobRequest
      properties:
        TransformJobName:
          $ref: '#/components/schemas/TransformJobName'
          description: The name of the transform job to stop.
    UpdateActionResponse:
      type: object
      properties:
        ActionArn:
          $ref: '#/components/schemas/ActionArn'
          description: The Amazon Resource Name (ARN) of the action.
    UpdateActionRequest:
      type: object
      required:
        - ActionName
      title: UpdateActionRequest
      properties:
        ActionName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the action to update.
        Description:
          $ref: '#/components/schemas/ExperimentDescription'
          description: The new description for the action.
        Status:
          $ref: '#/components/schemas/ActionStatus'
          description: The new status for the action.
        Properties:
          $ref: '#/components/schemas/LineageEntityParameters'
          description: The new list of properties. Overwrites the current property list.
        PropertiesToRemove:
          $ref: '#/components/schemas/ListLineageEntityParameterKey'
          description: A list of properties to remove.
    UpdateAppImageConfigResponse:
      type: object
      properties:
        AppImageConfigArn:
          $ref: '#/components/schemas/AppImageConfigArn'
          description: The Amazon Resource Name (ARN) for the AppImageConfig.
    UpdateAppImageConfigRequest:
      type: object
      required:
        - AppImageConfigName
      title: UpdateAppImageConfigRequest
      properties:
        AppImageConfigName:
          $ref: '#/components/schemas/AppImageConfigName'
          description: The name of the AppImageConfig to update.
        KernelGatewayImageConfig:
          $ref: '#/components/schemas/KernelGatewayImageConfig'
          description: The new KernelGateway app to run on the image.
    UpdateArtifactResponse:
      type: object
      properties:
        ArtifactArn:
          $ref: '#/components/schemas/ArtifactArn'
          description: The Amazon Resource Name (ARN) of the artifact.
    UpdateArtifactRequest:
      type: object
      required:
        - ArtifactArn
      title: UpdateArtifactRequest
      properties:
        ArtifactArn:
          $ref: '#/components/schemas/ArtifactArn'
          description: The Amazon Resource Name (ARN) of the artifact to update.
        ArtifactName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The new name for the artifact.
        Properties:
          $ref: '#/components/schemas/LineageEntityParameters'
          description: The new list of properties. Overwrites the current property list.
        PropertiesToRemove:
          $ref: '#/components/schemas/ListLineageEntityParameterKey'
          description: A list of properties to remove.
    UpdateCodeRepositoryOutput:
      type: object
      required:
        - CodeRepositoryArn
      properties:
        CodeRepositoryArn:
          $ref: '#/components/schemas/CodeRepositoryArn'
          description: The ARN of the Git repository.
    UpdateCodeRepositoryInput:
      type: object
      required:
        - CodeRepositoryName
      title: UpdateCodeRepositoryInput
      properties:
        CodeRepositoryName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the Git repository to update.
        GitConfig:
          $ref: '#/components/schemas/GitConfigForUpdate'
          description: '<p>The configuration of the git repository, including the URL and the Amazon Resource Name (ARN) of the Amazon Web Services Secrets Manager secret that contains the credentials used to access the repository. The secret must have a staging label of <code>AWSCURRENT</code> and must be in the following format:</p> <p> <code>{"username": <i>UserName</i>, "password": <i>Password</i>}</code> </p>'
    UpdateContextResponse:
      type: object
      properties:
        ContextArn:
          $ref: '#/components/schemas/ContextArn'
          description: The Amazon Resource Name (ARN) of the context.
    UpdateContextRequest:
      type: object
      required:
        - ContextName
      title: UpdateContextRequest
      properties:
        ContextName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the context to update.
        Description:
          $ref: '#/components/schemas/ExperimentDescription'
          description: The new description for the context.
        Properties:
          $ref: '#/components/schemas/LineageEntityParameters'
          description: The new list of properties. Overwrites the current property list.
        PropertiesToRemove:
          $ref: '#/components/schemas/ListLineageEntityParameterKey'
          description: A list of properties to remove.
    UpdateDeviceFleetRequest:
      type: object
      required:
        - DeviceFleetName
        - OutputConfig
      title: UpdateDeviceFleetRequest
      properties:
        DeviceFleetName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the fleet.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of the device.
        Description:
          $ref: '#/components/schemas/DeviceFleetDescription'
          description: Description of the fleet.
        OutputConfig:
          $ref: '#/components/schemas/EdgeOutputConfig'
          description: Output configuration for storing sample data collected by the fleet.
        EnableIotRoleAlias:
          $ref: '#/components/schemas/EnableIotRoleAlias'
          description: '<p>Whether to create an Amazon Web Services IoT Role Alias during device fleet creation. The name of the role alias generated will match this pattern: "SageMakerEdge-{DeviceFleetName}".</p> <p>For example, if your device fleet is called "demo-fleet", the name of the role alias will be "SageMakerEdge-demo-fleet".</p>'
    UpdateDevicesRequest:
      type: object
      required:
        - DeviceFleetName
        - Devices
      title: UpdateDevicesRequest
      properties:
        DeviceFleetName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the fleet the devices belong to.
        Devices:
          $ref: '#/components/schemas/Devices'
          description: List of devices to register with Edge Manager agent.
    UpdateDomainResponse:
      type: object
      properties:
        DomainArn:
          $ref: '#/components/schemas/DomainArn'
          description: The Amazon Resource Name (ARN) of the domain.
    UpdateDomainRequest:
      type: object
      required:
        - DomainId
      title: UpdateDomainRequest
      properties:
        DomainId:
          $ref: '#/components/schemas/DomainId'
          description: The ID of the domain to be updated.
        DefaultUserSettings:
          $ref: '#/components/schemas/UserSettings'
          description: A collection of settings.
    UpdateEndpointOutput:
      type: object
      required:
        - EndpointArn
      properties:
        EndpointArn:
          $ref: '#/components/schemas/EndpointArn'
          description: The Amazon Resource Name (ARN) of the endpoint.
    UpdateEndpointInput:
      type: object
      required:
        - EndpointName
        - EndpointConfigName
      title: UpdateEndpointInput
      properties:
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
          description: The name of the endpoint whose configuration you want to update.
        EndpointConfigName:
          $ref: '#/components/schemas/EndpointConfigName'
          description: The name of the new endpoint configuration.
        RetainAllVariantProperties:
          $ref: '#/components/schemas/Boolean'
          description: 'When updating endpoint resources, enables or disables the retention of <a href="https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_VariantProperty.html">variant properties</a>, such as the instance count or the variant weight. To retain the variant properties of an endpoint when updating it, set <code>RetainAllVariantProperties</code> to <code>true</code>. To use the variant properties specified in a new <code>EndpointConfig</code> call when updating an endpoint, set <code>RetainAllVariantProperties</code> to <code>false</code>. The default is <code>false</code>.'
        ExcludeRetainedVariantProperties:
          $ref: '#/components/schemas/VariantPropertyList'
          description: 'When you are updating endpoint resources with <a>UpdateEndpointInput$RetainAllVariantProperties</a>, whose value is set to <code>true</code>, <code>ExcludeRetainedVariantProperties</code> specifies the list of type <a>VariantProperty</a> to override with the values provided by <code>EndpointConfig</code>. If you don''t specify a value for <code>ExcludeAllVariantProperties</code>, no variant properties are overridden. '
        DeploymentConfig:
          $ref: '#/components/schemas/DeploymentConfig'
          description: The deployment configuration for the endpoint to be updated.
    UpdateEndpointWeightsAndCapacitiesOutput:
      type: object
      required:
        - EndpointArn
      properties:
        EndpointArn:
          $ref: '#/components/schemas/EndpointArn'
          description: The Amazon Resource Name (ARN) of the updated endpoint.
    UpdateEndpointWeightsAndCapacitiesInput:
      type: object
      required:
        - EndpointName
        - DesiredWeightsAndCapacities
      title: UpdateEndpointWeightsAndCapacitiesInput
      properties:
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
          description: The name of an existing Amazon SageMaker endpoint.
        DesiredWeightsAndCapacities:
          $ref: '#/components/schemas/DesiredWeightAndCapacityList'
          description: An object that provides new capacity and weight values for a variant.
    UpdateExperimentResponse:
      type: object
      properties:
        ExperimentArn:
          $ref: '#/components/schemas/ExperimentArn'
          description: The Amazon Resource Name (ARN) of the experiment.
    UpdateExperimentRequest:
      type: object
      required:
        - ExperimentName
      title: UpdateExperimentRequest
      properties:
        ExperimentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the experiment to update.
        DisplayName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: 'The name of the experiment as displayed. The name doesn''t need to be unique. If <code>DisplayName</code> isn''t specified, <code>ExperimentName</code> is displayed.'
        Description:
          $ref: '#/components/schemas/ExperimentDescription'
          description: The description of the experiment.
    UpdateImageResponse:
      type: object
      properties:
        ImageArn:
          $ref: '#/components/schemas/ImageArn'
          description: The Amazon Resource Name (ARN) of the image.
    UpdateImageRequest:
      type: object
      required:
        - ImageName
      title: UpdateImageRequest
      properties:
        DeleteProperties:
          $ref: '#/components/schemas/ImageDeletePropertyList'
          description: A list of properties to delete. Only the <code>Description</code> and <code>DisplayName</code> properties can be deleted.
        Description:
          $ref: '#/components/schemas/ImageDescription'
          description: The new description for the image.
        DisplayName:
          $ref: '#/components/schemas/ImageDisplayName'
          description: The new display name for the image.
        ImageName:
          $ref: '#/components/schemas/ImageName'
          description: The name of the image to update.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The new Amazon Resource Name (ARN) for the IAM role that enables Amazon SageMaker to perform tasks on your behalf.
    UpdateModelPackageOutput:
      type: object
      required:
        - ModelPackageArn
      properties:
        ModelPackageArn:
          $ref: '#/components/schemas/ModelPackageArn'
          description: The Amazon Resource Name (ARN) of the model.
    UpdateModelPackageInput:
      type: object
      required:
        - ModelPackageArn
        - ModelApprovalStatus
      title: UpdateModelPackageInput
      properties:
        ModelPackageArn:
          $ref: '#/components/schemas/ModelPackageArn'
          description: The Amazon Resource Name (ARN) of the model.
        ModelApprovalStatus:
          $ref: '#/components/schemas/ModelApprovalStatus'
          description: The approval status of the model.
        ApprovalDescription:
          $ref: '#/components/schemas/ApprovalDescription'
          description: A description for the approval status of the model.
    UpdateMonitoringScheduleResponse:
      type: object
      required:
        - MonitoringScheduleArn
      properties:
        MonitoringScheduleArn:
          $ref: '#/components/schemas/MonitoringScheduleArn'
          description: The Amazon Resource Name (ARN) of the monitoring schedule.
    UpdateMonitoringScheduleRequest:
      type: object
      required:
        - MonitoringScheduleName
        - MonitoringScheduleConfig
      title: UpdateMonitoringScheduleRequest
      properties:
        MonitoringScheduleName:
          $ref: '#/components/schemas/MonitoringScheduleName'
          description: The name of the monitoring schedule. The name must be unique within an Amazon Web Services Region within an Amazon Web Services account.
        MonitoringScheduleConfig:
          $ref: '#/components/schemas/MonitoringScheduleConfig'
          description: The configuration object that specifies the monitoring schedule and defines the monitoring job.
    UpdateNotebookInstanceOutput:
      type: object
      properties: {}
    UpdateNotebookInstanceInput:
      type: object
      required:
        - NotebookInstanceName
      title: UpdateNotebookInstanceInput
      properties:
        NotebookInstanceName:
          $ref: '#/components/schemas/NotebookInstanceName'
          description: The name of the notebook instance to update.
        InstanceType:
          $ref: '#/components/schemas/InstanceType'
          description: The Amazon ML compute instance type.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: '<p>The Amazon Resource Name (ARN) of the IAM role that Amazon SageMaker can assume to access the notebook instance. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html">Amazon SageMaker Roles</a>. </p> <note> <p>To be able to pass this role to Amazon SageMaker, the caller of this API must have the <code>iam:PassRole</code> permission.</p> </note>'
        LifecycleConfigName:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigName'
          description: 'The name of a lifecycle configuration to associate with the notebook instance. For information about lifestyle configurations, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/notebook-lifecycle-config.html">Step 2.1: (Optional) Customize a Notebook Instance</a>.'
        DisassociateLifecycleConfig:
          $ref: '#/components/schemas/DisassociateNotebookInstanceLifecycleConfig'
          description: 'Set to <code>true</code> to remove the notebook instance lifecycle configuration currently associated with the notebook instance. This operation is idempotent. If you specify a lifecycle configuration that is not associated with the notebook instance when you call this method, it does not throw an error.'
        VolumeSizeInGB:
          $ref: '#/components/schemas/NotebookInstanceVolumeSizeInGB'
          description: 'The size, in GB, of the ML storage volume to attach to the notebook instance. The default value is 5 GB. ML storage volumes are encrypted, so Amazon SageMaker can''t determine the amount of available free space on the volume. Because of this, you can increase the volume size when you update a notebook instance, but you can''t decrease the volume size. If you want to decrease the size of the ML storage volume in use, create a new notebook instance with the desired size.'
        DefaultCodeRepository:
          $ref: '#/components/schemas/CodeRepositoryNameOrUrl'
          description: 'The Git repository to associate with the notebook instance as its default code repository. This can be either the name of a Git repository stored as a resource in your account, or the URL of a Git repository in <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html">Amazon Web Services CodeCommit</a> or in any other Git repository. When you open a notebook instance, it opens in the directory that contains this repository. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/nbi-git-repo.html">Associating Git Repositories with Amazon SageMaker Notebook Instances</a>.'
        AdditionalCodeRepositories:
          $ref: '#/components/schemas/AdditionalCodeRepositoryNamesOrUrls'
          description: 'An array of up to three Git repositories to associate with the notebook instance. These can be either the names of Git repositories stored as resources in your account, or the URL of Git repositories in <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html">Amazon Web Services CodeCommit</a> or in any other Git repository. These repositories are cloned at the same level as the default repository of your notebook instance. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/nbi-git-repo.html">Associating Git Repositories with Amazon SageMaker Notebook Instances</a>.'
        AcceleratorTypes:
          $ref: '#/components/schemas/NotebookInstanceAcceleratorTypes'
          description: 'A list of the Elastic Inference (EI) instance types to associate with this notebook instance. Currently only one EI instance type can be associated with a notebook instance. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/ei.html">Using Elastic Inference in Amazon SageMaker</a>.'
        DisassociateAcceleratorTypes:
          $ref: '#/components/schemas/DisassociateNotebookInstanceAcceleratorTypes'
          description: 'A list of the Elastic Inference (EI) instance types to remove from this notebook instance. This operation is idempotent. If you specify an accelerator type that is not associated with the notebook instance when you call this method, it does not throw an error.'
        DisassociateDefaultCodeRepository:
          $ref: '#/components/schemas/DisassociateDefaultCodeRepository'
          description: 'The name or URL of the default Git repository to remove from this notebook instance. This operation is idempotent. If you specify a Git repository that is not associated with the notebook instance when you call this method, it does not throw an error.'
        DisassociateAdditionalCodeRepositories:
          $ref: '#/components/schemas/DisassociateAdditionalCodeRepositories'
          description: 'A list of names or URLs of the default Git repositories to remove from this notebook instance. This operation is idempotent. If you specify a Git repository that is not associated with the notebook instance when you call this method, it does not throw an error.'
        RootAccess:
          $ref: '#/components/schemas/RootAccess'
          description: '<p>Whether root access is enabled or disabled for users of the notebook instance. The default value is <code>Enabled</code>.</p> <note> <p>If you set this to <code>Disabled</code>, users don''t have root access on the notebook instance, but lifecycle configuration scripts still run with root permissions.</p> </note>'
    UpdateNotebookInstanceLifecycleConfigOutput:
      type: object
      properties: {}
    UpdateNotebookInstanceLifecycleConfigInput:
      type: object
      required:
        - NotebookInstanceLifecycleConfigName
      title: UpdateNotebookInstanceLifecycleConfigInput
      properties:
        NotebookInstanceLifecycleConfigName:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigName'
          description: The name of the lifecycle configuration.
        OnCreate:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigList'
          description: 'The shell script that runs only once, when you create a notebook instance. The shell script must be a base64-encoded string.'
        OnStart:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigList'
          description: 'The shell script that runs every time you start a notebook instance, including when you create the notebook instance. The shell script must be a base64-encoded string.'
    UpdatePipelineResponse:
      type: object
      properties:
        PipelineArn:
          $ref: '#/components/schemas/PipelineArn'
          description: The Amazon Resource Name (ARN) of the updated pipeline.
    UpdatePipelineRequest:
      type: object
      required:
        - PipelineName
      title: UpdatePipelineRequest
      properties:
        PipelineName:
          $ref: '#/components/schemas/PipelineName'
          description: The name of the pipeline to update.
        PipelineDisplayName:
          $ref: '#/components/schemas/PipelineName'
          description: The display name of the pipeline.
        PipelineDefinition:
          $ref: '#/components/schemas/PipelineDefinition'
          description: The JSON pipeline definition.
        PipelineDescription:
          $ref: '#/components/schemas/PipelineDescription'
          description: The description of the pipeline.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) that the pipeline uses to execute.
    UpdatePipelineExecutionResponse:
      type: object
      properties:
        PipelineExecutionArn:
          $ref: '#/components/schemas/PipelineExecutionArn'
          description: The Amazon Resource Name (ARN) of the updated pipeline execution.
    UpdatePipelineExecutionRequest:
      type: object
      required:
        - PipelineExecutionArn
      title: UpdatePipelineExecutionRequest
      properties:
        PipelineExecutionArn:
          $ref: '#/components/schemas/PipelineExecutionArn'
          description: The Amazon Resource Name (ARN) of the pipeline execution.
        PipelineExecutionDescription:
          $ref: '#/components/schemas/PipelineExecutionDescription'
          description: The description of the pipeline execution.
        PipelineExecutionDisplayName:
          $ref: '#/components/schemas/PipelineExecutionName'
          description: The display name of the pipeline execution.
    UpdateTrainingJobResponse:
      type: object
      required:
        - TrainingJobArn
      properties:
        TrainingJobArn:
          $ref: '#/components/schemas/TrainingJobArn'
          description: The Amazon Resource Name (ARN) of the training job.
    UpdateTrainingJobRequest:
      type: object
      required:
        - TrainingJobName
      title: UpdateTrainingJobRequest
      properties:
        TrainingJobName:
          $ref: '#/components/schemas/TrainingJobName'
          description: The name of a training job to update the Debugger profiling configuration.
        ProfilerConfig:
          $ref: '#/components/schemas/ProfilerConfigForUpdate'
          description: 'Configuration information for Debugger system monitoring, framework profiling, and storage paths.'
        ProfilerRuleConfigurations:
          $ref: '#/components/schemas/ProfilerRuleConfigurations'
          description: Configuration information for Debugger rules for profiling system and framework metrics.
    UpdateTrialResponse:
      type: object
      properties:
        TrialArn:
          $ref: '#/components/schemas/TrialArn'
          description: The Amazon Resource Name (ARN) of the trial.
    UpdateTrialRequest:
      type: object
      required:
        - TrialName
      title: UpdateTrialRequest
      properties:
        TrialName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the trial to update.
        DisplayName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: 'The name of the trial as displayed. The name doesn''t need to be unique. If <code>DisplayName</code> isn''t specified, <code>TrialName</code> is displayed.'
    UpdateTrialComponentResponse:
      type: object
      properties:
        TrialComponentArn:
          $ref: '#/components/schemas/TrialComponentArn'
          description: The Amazon Resource Name (ARN) of the trial component.
    UpdateTrialComponentRequest:
      type: object
      required:
        - TrialComponentName
      title: UpdateTrialComponentRequest
      properties:
        TrialComponentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the component to update.
        DisplayName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: 'The name of the component as displayed. The name doesn''t need to be unique. If <code>DisplayName</code> isn''t specified, <code>TrialComponentName</code> is displayed.'
        Status:
          $ref: '#/components/schemas/TrialComponentStatus'
          description: The new status of the component.
        StartTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the component started.
        EndTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the component ended.
        Parameters:
          $ref: '#/components/schemas/TrialComponentParameters'
          description: Replaces all of the component's hyperparameters with the specified hyperparameters.
        ParametersToRemove:
          $ref: '#/components/schemas/ListTrialComponentKey256'
          description: The hyperparameters to remove from the component.
        InputArtifacts:
          $ref: '#/components/schemas/TrialComponentArtifacts'
          description: Replaces all of the component's input artifacts with the specified artifacts.
        InputArtifactsToRemove:
          $ref: '#/components/schemas/ListTrialComponentKey256'
          description: The input artifacts to remove from the component.
        OutputArtifacts:
          $ref: '#/components/schemas/TrialComponentArtifacts'
          description: Replaces all of the component's output artifacts with the specified artifacts.
        OutputArtifactsToRemove:
          $ref: '#/components/schemas/ListTrialComponentKey256'
          description: The output artifacts to remove from the component.
    UpdateUserProfileResponse:
      type: object
      properties:
        UserProfileArn:
          $ref: '#/components/schemas/UserProfileArn'
          description: The user profile Amazon Resource Name (ARN).
    UpdateUserProfileRequest:
      type: object
      required:
        - DomainId
        - UserProfileName
      title: UpdateUserProfileRequest
      properties:
        DomainId:
          $ref: '#/components/schemas/DomainId'
          description: The domain ID.
        UserProfileName:
          $ref: '#/components/schemas/UserProfileName'
          description: The user profile name.
        UserSettings:
          $ref: '#/components/schemas/UserSettings'
          description: A collection of settings.
    UpdateWorkforceResponse:
      type: object
      required:
        - Workforce
      properties:
        Workforce:
          $ref: '#/components/schemas/Workforce'
          description: 'A single private workforce. You can create one private work force in each Amazon Web Services Region. By default, any workforce-related API operation used in a specific region will apply to the workforce created in that region. To learn how to create a private workforce, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-workforce-create-private.html">Create a Private Workforce</a>.'
    UpdateWorkforceRequest:
      type: object
      required:
        - WorkforceName
      title: UpdateWorkforceRequest
      properties:
        WorkforceName:
          $ref: '#/components/schemas/WorkforceName'
          description: The name of the private workforce that you want to update. You can find your workforce name by using the operation.
        SourceIpConfig:
          $ref: '#/components/schemas/SourceIpConfig'
          description: '<p>A list of one to ten worker IP address ranges (<a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html">CIDRs</a>) that can be used to access tasks assigned to this workforce.</p> <p>Maximum: Ten CIDR values</p>'
        OidcConfig:
          $ref: '#/components/schemas/OidcConfig'
          description: Use this parameter to update your OIDC Identity Provider (IdP) configuration for a workforce made using your own IdP.
    UpdateWorkteamResponse:
      type: object
      required:
        - Workteam
      properties:
        Workteam:
          $ref: '#/components/schemas/Workteam'
          description: A <code>Workteam</code> object that describes the updated work team.
    UpdateWorkteamRequest:
      type: object
      required:
        - WorkteamName
      title: UpdateWorkteamRequest
      properties:
        WorkteamName:
          $ref: '#/components/schemas/WorkteamName'
          description: The name of the work team to update.
        MemberDefinitions:
          $ref: '#/components/schemas/MemberDefinitions'
          description: '<p>A list of <code>MemberDefinition</code> objects that contains objects that identify the workers that make up the work team. </p> <p>Workforces can be created using Amazon Cognito or your own OIDC Identity Provider (IdP). For private workforces created using Amazon Cognito use <code>CognitoMemberDefinition</code>. For workforces created using your own OIDC identity provider (IdP) use <code>OidcMemberDefinition</code>. You should not provide input for both of these parameters in a single request.</p> <p>For workforces created using Amazon Cognito, private work teams correspond to Amazon Cognito <i>user groups</i> within the user pool used to create a workforce. All of the <code>CognitoMemberDefinition</code> objects that make up the member definition must have the same <code>ClientId</code> and <code>UserPool</code> values. To add a Amazon Cognito user group to an existing worker pool, see <a href="">Adding groups to a User Pool</a>. For more information about user pools, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools.html">Amazon Cognito User Pools</a>.</p> <p>For workforces created using your own OIDC IdP, specify the user groups that you want to include in your private work team in <code>OidcMemberDefinition</code> by listing those groups in <code>Groups</code>. Be aware that user groups that are already in the work team must also be listed in <code>Groups</code> when you make this request to remain on the work team. If you do not include these user groups, they will no longer be associated with the work team you update. </p>'
        Description:
          $ref: '#/components/schemas/String200'
          description: An updated description for the work team.
        NotificationConfiguration:
          $ref: '#/components/schemas/NotificationConfiguration'
          description: Configures SNS topic notifications for available or expiring work items
    Accept:
      type: string
      pattern: .*
      maxLength: 256
    AccountId:
      type: string
      pattern: ^\d+$
    ActionArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:action/.*'
      maxLength: 256
    String2048:
      type: string
      maxLength: 2048
    String256:
      type: string
      maxLength: 256
    ActionSource:
      type: object
      required:
        - SourceUri
      properties:
        SourceUri:
          $ref: '#/components/schemas/String2048'
          description: The URI of the source.
        SourceType:
          $ref: '#/components/schemas/String256'
          description: The type of the source.
        SourceId:
          $ref: '#/components/schemas/String256'
          description: The ID of the source.
      description: A structure describing the source of an action.
    ActionStatus:
      type: string
      enum:
        - Unknown
        - InProgress
        - Completed
        - Failed
        - Stopping
        - Stopped
    ActionSummary:
      type: object
      properties:
        ActionArn:
          $ref: '#/components/schemas/ActionArn'
          description: The Amazon Resource Name (ARN) of the action.
        ActionName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the action.
        Source:
          $ref: '#/components/schemas/ActionSource'
          description: The source of the action.
        ActionType:
          $ref: '#/components/schemas/String64'
          description: The type of the action.
        Status:
          $ref: '#/components/schemas/ActionStatus'
          description: The status of the action.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the action was created.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the action was last modified.
      description: 'Lists the properties of an <i>action</i>. An action represents an action or activity. Some examples are a workflow step and a model deployment. Generally, an action involves at least one input artifact or output artifact.'
    ActionSummaries:
      type: array
      items:
        $ref: '#/components/schemas/ActionSummary'
    ExperimentEntityName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,119}'
      minLength: 1
      maxLength: 120
    String64:
      type: string
      maxLength: 64
    Timestamp:
      type: string
      format: date-time
    AssociationEntityArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:(experiment|experiment-trial-component|artifact|action|context)/.*'
      maxLength: 256
    AssociationEdgeType:
      type: string
      enum:
        - ContributedTo
        - AssociatedWith
        - DerivedFrom
        - Produced
    ResourceArn:
      type: string
      pattern: 'arn:aws[a-z-]*:sagemaker:[a-z0-9-]*:[0-9]{12}:.+'
      maxLength: 256
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
      minItems: 0
      maxItems: 50
    CodeRepositoryNameOrUrl:
      type: string
      pattern: '^https://([^/]+)/?(.*)$|^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
      minLength: 1
      maxLength: 1024
    AdditionalCodeRepositoryNamesOrUrls:
      type: array
      items:
        $ref: '#/components/schemas/CodeRepositoryNameOrUrl'
      maxItems: 3
    EdgeVersion:
      type: string
      pattern: '[a-zA-Z0-9\ \_\.]+'
      minLength: 1
      maxLength: 30
    Long:
      type: integer
    AgentVersion:
      type: object
      required:
        - Version
        - AgentCount
      properties:
        Version:
          $ref: '#/components/schemas/EdgeVersion'
          description: Version of the agent.
        AgentCount:
          $ref: '#/components/schemas/Long'
          description: The number of Edge Manager agents.
      description: Edge Manager agent version.
    AgentVersions:
      type: array
      items:
        $ref: '#/components/schemas/AgentVersion'
    AlarmName:
      type: string
      pattern: ^(?!\s*$).+
      minLength: 1
      maxLength: 255
    Alarm:
      type: object
      properties:
        AlarmName:
          $ref: '#/components/schemas/AlarmName'
          description: <p/>
      description: This API is not supported.
    AlarmList:
      type: array
      items:
        $ref: '#/components/schemas/Alarm'
      minItems: 1
      maxItems: 10
    AlgorithmArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:algorithm/.*'
      minLength: 1
      maxLength: 2048
    AlgorithmImage:
      type: string
      pattern: .*
      maxLength: 255
    AlgorithmSortBy:
      type: string
      enum:
        - Name
        - CreationTime
    ArnOrName:
      type: string
      pattern: '(arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:[a-z\-]*\/)?([a-zA-Z0-9]([a-zA-Z0-9-]){0,62})(?<!-)$'
      minLength: 1
      maxLength: 170
    TrainingInputMode:
      type: string
      enum:
        - Pipe
        - File
    MetricDefinitionList:
      type: array
      items:
        $ref: '#/components/schemas/MetricDefinition'
      minItems: 0
      maxItems: 40
    Boolean:
      type: boolean
    AlgorithmSpecification:
      type: object
      required:
        - TrainingInputMode
      properties:
        TrainingImage:
          $ref: '#/components/schemas/AlgorithmImage'
          description: 'The registry path of the Docker image that contains the training algorithm. For information about docker registry paths for built-in algorithms, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-algo-docker-registry-paths.html">Algorithms Provided by Amazon SageMaker: Common Parameters</a>. Amazon SageMaker supports both <code>registry/repository[:tag]</code> and <code>registry/repository[@digest]</code> image path formats. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms.html">Using Your Own Algorithms with Amazon SageMaker</a>.'
        AlgorithmName:
          $ref: '#/components/schemas/ArnOrName'
          description: 'The name of the algorithm resource to use for the training job. This must be an algorithm resource that you created or subscribe to on Amazon Web Services Marketplace. If you specify a value for this parameter, you can''t specify a value for <code>TrainingImage</code>.'
        TrainingInputMode:
          $ref: '#/components/schemas/TrainingInputMode'
          description: '<p>The input mode that the algorithm supports. For the input modes that Amazon SageMaker algorithms support, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html">Algorithms</a>. If an algorithm supports the <code>File</code> input mode, Amazon SageMaker downloads the training data from S3 to the provisioned ML storage Volume, and mounts the directory to docker volume for training container. If an algorithm supports the <code>Pipe</code> input mode, Amazon SageMaker streams data directly from S3 to the container. </p> <p> In File mode, make sure you provision ML storage volume with sufficient capacity to accommodate the data download from S3. In addition to the training data, the ML storage volume also stores the output model. The algorithm container use ML storage volume to also store intermediate information, if any. </p> <p> For distributed algorithms using File mode, training data is distributed uniformly, and your training duration is predictable if the input data objects size is approximately same. Amazon SageMaker does not split the files any further for model training. If the object sizes are skewed, training won''t be optimal as the data distribution is also skewed where one host in a training cluster is overloaded, thus becoming bottleneck in training. </p>'
        MetricDefinitions:
          $ref: '#/components/schemas/MetricDefinitionList'
          description: A list of metric definition objects. Each object specifies the metric name and regular expressions used to parse algorithm logs. Amazon SageMaker publishes each metric to Amazon CloudWatch.
        EnableSageMakerMetricsTimeSeries:
          $ref: '#/components/schemas/Boolean'
          description: '<p>To generate and save time-series metrics during training, set to <code>true</code>. The default is <code>false</code> and time-series metrics aren''t generated except in the following cases:</p> <ul> <li> <p>You use one of the Amazon SageMaker built-in algorithms</p> </li> <li> <p>You use one of the following <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/pre-built-containers-frameworks-deep-learning.html">Prebuilt Amazon SageMaker Docker Images</a>:</p> <ul> <li> <p>Tensorflow (version &gt;= 1.15)</p> </li> <li> <p>MXNet (version &gt;= 1.6)</p> </li> <li> <p>PyTorch (version &gt;= 1.3)</p> </li> </ul> </li> <li> <p>You specify at least one <a>MetricDefinition</a> </p> </li> </ul>'
      description: '<p>Specifies the training algorithm to use in a <a>CreateTrainingJob</a> request.</p> <p>For more information about algorithms provided by Amazon SageMaker, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html">Algorithms</a>. For information about using your own algorithms, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms.html">Using Your Own Algorithms with Amazon SageMaker</a>. </p>'
    AlgorithmStatus:
      type: string
      enum:
        - Pending
        - InProgress
        - Completed
        - Failed
        - Deleting
    AlgorithmStatusItemList:
      type: array
      items:
        $ref: '#/components/schemas/AlgorithmStatusItem'
    AlgorithmStatusDetails:
      type: object
      properties:
        ValidationStatuses:
          $ref: '#/components/schemas/AlgorithmStatusItemList'
          description: The status of algorithm validation.
        ImageScanStatuses:
          $ref: '#/components/schemas/AlgorithmStatusItemList'
          description: The status of the scan of the algorithm's Docker image container.
      description: Specifies the validation and image scan statuses of the algorithm.
    EntityName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}$'
      minLength: 1
      maxLength: 63
    DetailedAlgorithmStatus:
      type: string
      enum:
        - NotStarted
        - InProgress
        - Completed
        - Failed
    String:
      type: string
    AlgorithmStatusItem:
      type: object
      required:
        - Name
        - Status
      properties:
        Name:
          $ref: '#/components/schemas/EntityName'
          description: The name of the algorithm for which the overall status is being reported.
        Status:
          $ref: '#/components/schemas/DetailedAlgorithmStatus'
          description: The current status.
        FailureReason:
          $ref: '#/components/schemas/String'
          description: 'if the overall status is <code>Failed</code>, the reason for the failure.'
      description: Represents the overall status of an algorithm.
    EntityDescription:
      type: string
      pattern: '[\p{L}\p{M}\p{Z}\p{S}\p{N}\p{P}]*'
      maxLength: 1024
    CreationTime:
      type: string
      format: date-time
    AlgorithmSummary:
      type: object
      required:
        - AlgorithmName
        - AlgorithmArn
        - CreationTime
        - AlgorithmStatus
      properties:
        AlgorithmName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the algorithm that is described by the summary.
        AlgorithmArn:
          $ref: '#/components/schemas/AlgorithmArn'
          description: The Amazon Resource Name (ARN) of the algorithm.
        AlgorithmDescription:
          $ref: '#/components/schemas/EntityDescription'
          description: A brief description of the algorithm.
        CreationTime:
          $ref: '#/components/schemas/CreationTime'
          description: A timestamp that shows when the algorithm was created.
        AlgorithmStatus:
          $ref: '#/components/schemas/AlgorithmStatus'
          description: The overall status of the algorithm.
      description: Provides summary information about an algorithm.
    AlgorithmSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/AlgorithmSummary'
    TrainingJobDefinition:
      type: object
      required:
        - TrainingInputMode
        - InputDataConfig
        - OutputDataConfig
        - ResourceConfig
        - StoppingCondition
      properties:
        TrainingInputMode:
          $ref: '#/components/schemas/TrainingInputMode'
          description: '<p>The input mode used by the algorithm for the training job. For the input modes that Amazon SageMaker algorithms support, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html">Algorithms</a>.</p> <p>If an algorithm supports the <code>File</code> input mode, Amazon SageMaker downloads the training data from S3 to the provisioned ML storage Volume, and mounts the directory to docker volume for training container. If an algorithm supports the <code>Pipe</code> input mode, Amazon SageMaker streams data directly from S3 to the container.</p>'
        HyperParameters:
          $ref: '#/components/schemas/HyperParameters'
          description: The hyperparameters used for the training job.
        InputDataConfig:
          $ref: '#/components/schemas/InputDataConfig'
          description: 'An array of <code>Channel</code> objects, each of which specifies an input source.'
        OutputDataConfig:
          $ref: '#/components/schemas/OutputDataConfig'
          description: the path to the S3 bucket where you want to store model artifacts. Amazon SageMaker creates subfolders for the artifacts.
        ResourceConfig:
          $ref: '#/components/schemas/ResourceConfig'
          description: 'The resources, including the ML compute instances and ML storage volumes, to use for model training.'
        StoppingCondition:
          $ref: '#/components/schemas/StoppingCondition'
          description: '<p>Specifies a limit to how long a model training job can run. It also specifies how long a managed Spot training job has to complete. When the job reaches the time limit, Amazon SageMaker ends the training job. Use this API to cap model training costs.</p> <p>To stop a job, Amazon SageMaker sends the algorithm the SIGTERM signal, which delays job termination for 120 seconds. Algorithms can use this 120-second window to save the model artifacts.</p>'
      description: Defines the input needed to run a training job using the algorithm.
    TransformJobDefinition:
      type: object
      required:
        - TransformInput
        - TransformOutput
        - TransformResources
      properties:
        MaxConcurrentTransforms:
          $ref: '#/components/schemas/MaxConcurrentTransforms'
          description: The maximum number of parallel requests that can be sent to each instance in a transform job. The default value is 1.
        MaxPayloadInMB:
          $ref: '#/components/schemas/MaxPayloadInMB'
          description: 'The maximum payload size allowed, in MB. A payload is the data portion of a record (without metadata).'
        BatchStrategy:
          $ref: '#/components/schemas/BatchStrategy'
          description: <p>A string that determines the number of records included in a single mini-batch.</p> <p> <code>SingleRecord</code> means only one record is used per mini-batch. <code>MultiRecord</code> means a mini-batch is set to contain as many records that can fit within the <code>MaxPayloadInMB</code> limit.</p>
        Environment:
          $ref: '#/components/schemas/TransformEnvironmentMap'
          description: The environment variables to set in the Docker container. We support up to 16 key and values entries in the map.
        TransformInput:
          $ref: '#/components/schemas/TransformInput'
          description: A description of the input source and the way the transform job consumes it.
        TransformOutput:
          $ref: '#/components/schemas/TransformOutput'
          description: Identifies the Amazon S3 location where you want Amazon SageMaker to save the results from the transform job.
        TransformResources:
          $ref: '#/components/schemas/TransformResources'
          description: Identifies the ML compute instances for the transform job.
      description: Defines the input needed to run a transform job using the inference specification specified in the algorithm.
    AlgorithmValidationProfile:
      type: object
      required:
        - ProfileName
        - TrainingJobDefinition
      properties:
        ProfileName:
          $ref: '#/components/schemas/EntityName'
          description: 'The name of the profile for the algorithm. The name must have 1 to 63 characters. Valid characters are a-z, A-Z, 0-9, and - (hyphen).'
        TrainingJobDefinition:
          $ref: '#/components/schemas/TrainingJobDefinition'
          description: The <code>TrainingJobDefinition</code> object that describes the training job that Amazon SageMaker runs to validate your algorithm.
        TransformJobDefinition:
          $ref: '#/components/schemas/TransformJobDefinition'
          description: The <code>TransformJobDefinition</code> object that describes the transform job that Amazon SageMaker runs to validate your algorithm.
      description: <p>Defines a training job and a batch transform job that Amazon SageMaker runs to validate your algorithm.</p> <p>The data provided in the validation profile is made available to your buyers on Amazon Web Services Marketplace.</p>
    AlgorithmValidationProfiles:
      type: array
      items:
        $ref: '#/components/schemas/AlgorithmValidationProfile'
      minItems: 1
      maxItems: 1
    RoleArn:
      type: string
      pattern: '^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$'
      minLength: 20
      maxLength: 2048
    AlgorithmValidationSpecification:
      type: object
      required:
        - ValidationRole
        - ValidationProfiles
      properties:
        ValidationRole:
          $ref: '#/components/schemas/RoleArn'
          description: The IAM roles that Amazon SageMaker uses to run the training jobs.
        ValidationProfiles:
          $ref: '#/components/schemas/AlgorithmValidationProfiles'
          description: 'An array of <code>AlgorithmValidationProfile</code> objects, each of which specifies a training job and batch transform job that Amazon SageMaker runs to validate your algorithm.'
      description: Specifies configurations for one or more training jobs that Amazon SageMaker runs to test the algorithm.
    LambdaFunctionArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:lambda:[a-z0-9\-]*:[0-9]{12}:function:.*'
      maxLength: 2048
    AnnotationConsolidationConfig:
      type: object
      required:
        - AnnotationConsolidationLambdaArn
      properties:
        AnnotationConsolidationLambdaArn:
          $ref: '#/components/schemas/LambdaFunctionArn'
          description: '<p>The Amazon Resource Name (ARN) of a Lambda function implements the logic for <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-annotation-consolidation.html">annotation consolidation</a> and to process output data.</p> <p>This parameter is required for all labeling jobs. For <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-task-types.html">built-in task types</a>, use one of the following Amazon SageMaker Ground Truth Lambda function ARNs for <code>AnnotationConsolidationLambdaArn</code>. For custom labeling workflows, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-custom-templates-step3.html#sms-custom-templates-step3-postlambda">Post-annotation Lambda</a>. </p> <p> <b>Bounding box</b> - Finds the most similar boxes from different workers based on the Jaccard index of the boxes.</p> <ul> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:ACS-BoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:ACS-BoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:ACS-BoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:ACS-BoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:ACS-BoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:ACS-BoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:ACS-BoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:ACS-BoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:ACS-BoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:ACS-BoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:ACS-BoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:ACS-BoundingBox</code> </p> </li> </ul> <p> <b>Image classification</b> - Uses a variant of the Expectation Maximization approach to estimate the true class of an image based on annotations from individual workers.</p> <ul> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:ACS-ImageMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:ACS-ImageMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:ACS-ImageMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:ACS-ImageMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:ACS-ImageMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:ACS-ImageMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:ACS-ImageMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:ACS-ImageMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:ACS-ImageMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:ACS-ImageMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:ACS-ImageMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:ACS-ImageMultiClass</code> </p> </li> </ul> <p> <b>Multi-label image classification</b> - Uses a variant of the Expectation Maximization approach to estimate the true classes of an image based on annotations from individual workers.</p> <ul> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:ACS-ImageMultiClassMultiLabel</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:ACS-ImageMultiClassMultiLabel</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:ACS-ImageMultiClassMultiLabel</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:ACS-ImageMultiClassMultiLabel</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:ACS-ImageMultiClassMultiLabel</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:ACS-ImageMultiClassMultiLabel</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:ACS-ImageMultiClassMultiLabel</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:ACS-ImageMultiClassMultiLabel</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:ACS-ImageMultiClassMultiLabel</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:ACS-ImageMultiClassMultiLabel</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:ACS-ImageMultiClassMultiLabel</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:ACS-ImageMultiClassMultiLabel</code> </p> </li> </ul> <p> <b>Semantic segmentation</b> - Treats each pixel in an image as a multi-class classification and treats pixel annotations from workers as "votes" for the correct label.</p> <ul> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:ACS-SemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:ACS-SemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:ACS-SemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:ACS-SemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:ACS-SemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:ACS-SemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:ACS-SemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:ACS-SemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:ACS-SemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:ACS-SemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:ACS-SemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:ACS-SemanticSegmentation</code> </p> </li> </ul> <p> <b>Text classification</b> - Uses a variant of the Expectation Maximization approach to estimate the true class of text based on annotations from individual workers.</p> <ul> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:ACS-TextMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:ACS-TextMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:ACS-TextMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:ACS-TextMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:ACS-TextMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:ACS-TextMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:ACS-TextMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:ACS-TextMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:ACS-TextMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:ACS-TextMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:ACS-TextMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:ACS-TextMultiClass</code> </p> </li> </ul> <p> <b>Multi-label text classification</b> - Uses a variant of the Expectation Maximization approach to estimate the true classes of text based on annotations from individual workers.</p> <ul> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:ACS-TextMultiClassMultiLabel</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:ACS-TextMultiClassMultiLabel</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:ACS-TextMultiClassMultiLabel</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:ACS-TextMultiClassMultiLabel</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:ACS-TextMultiClassMultiLabel</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:ACS-TextMultiClassMultiLabel</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:ACS-TextMultiClassMultiLabel</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:ACS-TextMultiClassMultiLabel</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:ACS-TextMultiClassMultiLabel</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:ACS-TextMultiClassMultiLabel</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:ACS-TextMultiClassMultiLabel</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:ACS-TextMultiClassMultiLabel</code> </p> </li> </ul> <p> <b>Named entity recognition</b> - Groups similar selections and calculates aggregate boundaries, resolving to most-assigned label.</p> <ul> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:ACS-NamedEntityRecognition</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:ACS-NamedEntityRecognition</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:ACS-NamedEntityRecognition</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:ACS-NamedEntityRecognition</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:ACS-NamedEntityRecognition</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:ACS-NamedEntityRecognition</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:ACS-NamedEntityRecognition</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:ACS-NamedEntityRecognition</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:ACS-NamedEntityRecognition</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:ACS-NamedEntityRecognition</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:ACS-NamedEntityRecognition</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:ACS-NamedEntityRecognition</code> </p> </li> </ul> <p> <b>Video Classification</b> - Use this task type when you need workers to classify videos using predefined labels that you specify. Workers are shown videos and are asked to choose one label for each video.</p> <ul> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:ACS-VideoMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:ACS-VideoMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:ACS-VideoMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:ACS-VideoMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:ACS-VideoMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:ACS-VideoMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:ACS-VideoMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:ACS-VideoMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:ACS-VideoMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:ACS-VideoMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:ACS-VideoMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:ACS-VideoMultiClass</code> </p> </li> </ul> <p> <b>Video Frame Object Detection</b> - Use this task type to have workers identify and locate objects in a sequence of video frames (images extracted from a video) using bounding boxes. For example, you can use this task to ask workers to identify and localize various objects in a series of video frames, such as cars, bikes, and pedestrians.</p> <ul> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:ACS-VideoObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:ACS-VideoObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:ACS-VideoObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:ACS-VideoObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:ACS-VideoObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:ACS-VideoObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:ACS-VideoObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:ACS-VideoObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:ACS-VideoObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:ACS-VideoObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:ACS-VideoObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:ACS-VideoObjectDetection</code> </p> </li> </ul> <p> <b>Video Frame Object Tracking</b> - Use this task type to have workers track the movement of objects in a sequence of video frames (images extracted from a video) using bounding boxes. For example, you can use this task to ask workers to track the movement of objects, such as cars, bikes, and pedestrians. </p> <ul> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:ACS-VideoObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:ACS-VideoObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:ACS-VideoObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:ACS-VideoObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:ACS-VideoObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:ACS-VideoObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:ACS-VideoObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:ACS-VideoObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:ACS-VideoObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:ACS-VideoObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:ACS-VideoObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:ACS-VideoObjectTracking</code> </p> </li> </ul> <p> <b>3D Point Cloud Object Detection</b> - Use this task type when you want workers to classify objects in a 3D point cloud by drawing 3D cuboids around objects. For example, you can use this task type to ask workers to identify different types of objects in a point cloud, such as cars, bikes, and pedestrians.</p> <ul> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:ACS-3DPointCloudObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:ACS-3DPointCloudObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:ACS-3DPointCloudObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:ACS-3DPointCloudObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:ACS-3DPointCloudObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:ACS-3DPointCloudObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:ACS-3DPointCloudObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:ACS-3DPointCloudObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:ACS-3DPointCloudObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:ACS-3DPointCloudObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:ACS-3DPointCloudObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:ACS-3DPointCloudObjectDetection</code> </p> </li> </ul> <p> <b>3D Point Cloud Object Tracking</b> - Use this task type when you want workers to draw 3D cuboids around objects that appear in a sequence of 3D point cloud frames. For example, you can use this task type to ask workers to track the movement of vehicles across multiple point cloud frames. </p> <ul> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:ACS-3DPointCloudObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:ACS-3DPointCloudObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:ACS-3DPointCloudObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:ACS-3DPointCloudObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:ACS-3DPointCloudObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:ACS-3DPointCloudObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:ACS-3DPointCloudObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:ACS-3DPointCloudObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:ACS-3DPointCloudObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:ACS-3DPointCloudObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:ACS-3DPointCloudObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:ACS-3DPointCloudObjectTracking</code> </p> </li> </ul> <p> <b>3D Point Cloud Semantic Segmentation</b> - Use this task type when you want workers to create a point-level semantic segmentation masks by painting objects in a 3D point cloud using different colors where each color is assigned to one of the classes you specify.</p> <ul> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:ACS-3DPointCloudSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:ACS-3DPointCloudSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:ACS-3DPointCloudSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:ACS-3DPointCloudSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:ACS-3DPointCloudSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:ACS-3DPointCloudSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:ACS-3DPointCloudSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:ACS-3DPointCloudSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:ACS-3DPointCloudSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:ACS-3DPointCloudSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:ACS-3DPointCloudSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:ACS-3DPointCloudSemanticSegmentation</code> </p> </li> </ul> <p> <b>Use the following ARNs for Label Verification and Adjustment Jobs</b> </p> <p>Use label verification and adjustment jobs to review and adjust labels. To learn more, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-verification-data.html">Verify and Adjust Labels </a>.</p> <p> <b>Semantic Segmentation Adjustment</b> - Treats each pixel in an image as a multi-class classification and treats pixel adjusted annotations from workers as "votes" for the correct label.</p> <ul> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:ACS-AdjustmentSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:ACS-AdjustmentSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:ACS-AdjustmentSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:ACS-AdjustmentSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:ACS-AdjustmentSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:ACS-AdjustmentSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:ACS-AdjustmentSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:ACS-AdjustmentSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:ACS-AdjustmentSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:ACS-AdjustmentSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:ACS-AdjustmentSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:ACS-AdjustmentSemanticSegmentation</code> </p> </li> </ul> <p> <b>Semantic Segmentation Verification</b> - Uses a variant of the Expectation Maximization approach to estimate the true class of verification judgment for semantic segmentation labels based on annotations from individual workers.</p> <ul> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:ACS-VerificationSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:ACS-VerificationSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:ACS-VerificationSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:ACS-VerificationSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:ACS-VerificationSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:ACS-VerificationSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:ACS-VerificationSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:ACS-VerificationSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:ACS-VerificationSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:ACS-VerificationSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:ACS-VerificationSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:ACS-VerificationSemanticSegmentation</code> </p> </li> </ul> <p> <b>Bounding Box Adjustment</b> - Finds the most similar boxes from different workers based on the Jaccard index of the adjusted annotations.</p> <ul> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:ACS-AdjustmentBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:ACS-AdjustmentBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:ACS-AdjustmentBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:ACS-AdjustmentBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:ACS-AdjustmentBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:ACS-AdjustmentBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:ACS-AdjustmentBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:ACS-AdjustmentBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:ACS-AdjustmentBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:ACS-AdjustmentBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:ACS-AdjustmentBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:ACS-AdjustmentBoundingBox</code> </p> </li> </ul> <p> <b>Bounding Box Verification</b> - Uses a variant of the Expectation Maximization approach to estimate the true class of verification judgement for bounding box labels based on annotations from individual workers.</p> <ul> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:ACS-VerificationBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:ACS-VerificationBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:ACS-VerificationBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:ACS-VerificationBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:ACS-VerificationBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:ACS-VerificationBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:ACS-VerificationBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:ACS-VerificationBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:ACS-VerificationBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:ACS-VerificationBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:ACS-VerificationBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:ACS-VerificationBoundingBox</code> </p> </li> </ul> <p> <b>Video Frame Object Detection Adjustment</b> - Use this task type when you want workers to adjust bounding boxes that workers have added to video frames to classify and localize objects in a sequence of video frames.</p> <ul> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:ACS-AdjustmentVideoObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:ACS-AdjustmentVideoObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:ACS-AdjustmentVideoObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:ACS-AdjustmentVideoObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:ACS-AdjustmentVideoObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:ACS-AdjustmentVideoObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:ACS-AdjustmentVideoObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:ACS-AdjustmentVideoObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:ACS-AdjustmentVideoObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:ACS-AdjustmentVideoObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:ACS-AdjustmentVideoObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:ACS-AdjustmentVideoObjectDetection</code> </p> </li> </ul> <p> <b>Video Frame Object Tracking Adjustment</b> - Use this task type when you want workers to adjust bounding boxes that workers have added to video frames to track object movement across a sequence of video frames.</p> <ul> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:ACS-AdjustmentVideoObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:ACS-AdjustmentVideoObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:ACS-AdjustmentVideoObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:ACS-AdjustmentVideoObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:ACS-AdjustmentVideoObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:ACS-AdjustmentVideoObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:ACS-AdjustmentVideoObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:ACS-AdjustmentVideoObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:ACS-AdjustmentVideoObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:ACS-AdjustmentVideoObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:ACS-AdjustmentVideoObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:ACS-AdjustmentVideoObjectTracking</code> </p> </li> </ul> <p> <b>3D Point Cloud Object Detection Adjustment</b> - Use this task type when you want workers to adjust 3D cuboids around objects in a 3D point cloud. </p> <ul> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:ACS-Adjustment3DPointCloudObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:ACS-Adjustment3DPointCloudObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:ACS-Adjustment3DPointCloudObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:ACS-Adjustment3DPointCloudObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:ACS-Adjustment3DPointCloudObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:ACS-Adjustment3DPointCloudObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:ACS-Adjustment3DPointCloudObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:ACS-Adjustment3DPointCloudObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:ACS-Adjustment3DPointCloudObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:ACS-Adjustment3DPointCloudObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:ACS-Adjustment3DPointCloudObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:ACS-Adjustment3DPointCloudObjectDetection</code> </p> </li> </ul> <p> <b>3D Point Cloud Object Tracking Adjustment</b> - Use this task type when you want workers to adjust 3D cuboids around objects that appear in a sequence of 3D point cloud frames.</p> <ul> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:ACS-Adjustment3DPointCloudObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:ACS-Adjustment3DPointCloudObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:ACS-Adjustment3DPointCloudObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:ACS-Adjustment3DPointCloudObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:ACS-Adjustment3DPointCloudObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:ACS-Adjustment3DPointCloudObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:ACS-Adjustment3DPointCloudObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:ACS-Adjustment3DPointCloudObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:ACS-Adjustment3DPointCloudObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:ACS-Adjustment3DPointCloudObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:ACS-Adjustment3DPointCloudObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:ACS-Adjustment3DPointCloudObjectTracking</code> </p> </li> </ul> <p> <b>3D Point Cloud Semantic Segmentation Adjustment</b> - Use this task type when you want workers to adjust a point-level semantic segmentation masks using a paint tool.</p> <ul> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:ACS-3DPointCloudSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:ACS-Adjustment3DPointCloudSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:ACS-Adjustment3DPointCloudSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:ACS-Adjustment3DPointCloudSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:ACS-Adjustment3DPointCloudSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:ACS-Adjustment3DPointCloudSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:ACS-Adjustment3DPointCloudSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:ACS-Adjustment3DPointCloudSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:ACS-Adjustment3DPointCloudSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:ACS-Adjustment3DPointCloudSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:ACS-Adjustment3DPointCloudSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:ACS-Adjustment3DPointCloudSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:ACS-Adjustment3DPointCloudSemanticSegmentation</code> </p> </li> </ul>'
      description: 'Configures how labels are consolidated across human workers and processes output data. '
    AppArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:app/.*'
      maxLength: 256
    DomainId:
      type: string
      maxLength: 63
    UserProfileName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}'
      maxLength: 63
    AppType:
      type: string
      enum:
        - JupyterServer
        - KernelGateway
        - TensorBoard
    AppName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}'
      maxLength: 63
    AppStatus:
      type: string
      enum:
        - Deleted
        - Deleting
        - Failed
        - InService
        - Pending
    AppDetails:
      type: object
      properties:
        DomainId:
          $ref: '#/components/schemas/DomainId'
          description: The domain ID.
        UserProfileName:
          $ref: '#/components/schemas/UserProfileName'
          description: The user profile name.
        AppType:
          $ref: '#/components/schemas/AppType'
          description: The type of app.
        AppName:
          $ref: '#/components/schemas/AppName'
          description: The name of the app.
        Status:
          $ref: '#/components/schemas/AppStatus'
          description: The status.
        CreationTime:
          $ref: '#/components/schemas/CreationTime'
          description: The creation time.
      description: Details about an Amazon SageMaker app.
    AppImageConfigArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:app-image-config/.*'
      maxLength: 256
    AppImageConfigName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}'
      maxLength: 63
    KernelGatewayImageConfig:
      type: object
      required:
        - KernelSpecs
      properties:
        KernelSpecs:
          $ref: '#/components/schemas/KernelSpecs'
          description: The specification of the Jupyter kernels in the image.
        FileSystemConfig:
          $ref: '#/components/schemas/FileSystemConfig'
          description: The Amazon Elastic File System (EFS) storage configuration for a SageMaker image.
      description: The configuration for the file system and kernels in a SageMaker image running as a KernelGateway app.
    AppImageConfigDetails:
      type: object
      properties:
        AppImageConfigArn:
          $ref: '#/components/schemas/AppImageConfigArn'
          description: The Amazon Resource Name (ARN) of the AppImageConfig.
        AppImageConfigName:
          $ref: '#/components/schemas/AppImageConfigName'
          description: The name of the AppImageConfig. Must be unique to your account.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the AppImageConfig was created.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the AppImageConfig was last modified.
        KernelGatewayImageConfig:
          $ref: '#/components/schemas/KernelGatewayImageConfig'
          description: The configuration for the file system and kernels in the SageMaker image.
      description: The configuration for running a SageMaker image as a KernelGateway app.
    AppImageConfigList:
      type: array
      items:
        $ref: '#/components/schemas/AppImageConfigDetails'
    AppImageConfigSortKey:
      type: string
      enum:
        - CreationTime
        - LastModifiedTime
        - Name
    AppInstanceType:
      type: string
      enum:
        - system
        - ml.t3.micro
        - ml.t3.small
        - ml.t3.medium
        - ml.t3.large
        - ml.t3.xlarge
        - ml.t3.2xlarge
        - ml.m5.large
        - ml.m5.xlarge
        - ml.m5.2xlarge
        - ml.m5.4xlarge
        - ml.m5.8xlarge
        - ml.m5.12xlarge
        - ml.m5.16xlarge
        - ml.m5.24xlarge
        - ml.m5d.large
        - ml.m5d.xlarge
        - ml.m5d.2xlarge
        - ml.m5d.4xlarge
        - ml.m5d.8xlarge
        - ml.m5d.12xlarge
        - ml.m5d.16xlarge
        - ml.m5d.24xlarge
        - ml.c5.large
        - ml.c5.xlarge
        - ml.c5.2xlarge
        - ml.c5.4xlarge
        - ml.c5.9xlarge
        - ml.c5.12xlarge
        - ml.c5.18xlarge
        - ml.c5.24xlarge
        - ml.p3.2xlarge
        - ml.p3.8xlarge
        - ml.p3.16xlarge
        - ml.p3dn.24xlarge
        - ml.g4dn.xlarge
        - ml.g4dn.2xlarge
        - ml.g4dn.4xlarge
        - ml.g4dn.8xlarge
        - ml.g4dn.12xlarge
        - ml.g4dn.16xlarge
        - ml.r5.large
        - ml.r5.xlarge
        - ml.r5.2xlarge
        - ml.r5.4xlarge
        - ml.r5.8xlarge
        - ml.r5.12xlarge
        - ml.r5.16xlarge
        - ml.r5.24xlarge
    AppList:
      type: array
      items:
        $ref: '#/components/schemas/AppDetails'
    AppManaged:
      type: boolean
    AppNetworkAccessType:
      type: string
      enum:
        - PublicInternetOnly
        - VpcOnly
    AppSortKey:
      type: string
      enum:
        - CreationTime
    ImageUri:
      type: string
      pattern: .*
      maxLength: 255
    ContainerEntrypoint:
      type: array
      items:
        $ref: '#/components/schemas/ContainerEntrypointString'
      minItems: 1
      maxItems: 100
    ContainerArguments:
      type: array
      items:
        $ref: '#/components/schemas/ContainerArgument'
      minItems: 1
      maxItems: 100
    AppSpecification:
      type: object
      required:
        - ImageUri
      properties:
        ImageUri:
          $ref: '#/components/schemas/ImageUri'
          description: The container image to be run by the processing job.
        ContainerEntrypoint:
          $ref: '#/components/schemas/ContainerEntrypoint'
          description: The entrypoint for a container used to run a processing job.
        ContainerArguments:
          $ref: '#/components/schemas/ContainerArguments'
          description: The arguments for a container used to run a processing job.
      description: Configuration to run a processing job in a specified container image.
    ApprovalDescription:
      type: string
      pattern: .*
      maxLength: 1024
    ArtifactArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:artifact/.*'
      maxLength: 256
    ArtifactDigest:
      type: string
      pattern: '^[\w:]+$'
    ArtifactSourceTypes:
      type: array
      items:
        $ref: '#/components/schemas/ArtifactSourceType'
    ArtifactSource:
      type: object
      required:
        - SourceUri
      properties:
        SourceUri:
          $ref: '#/components/schemas/String2048'
          description: The URI of the source.
        SourceTypes:
          $ref: '#/components/schemas/ArtifactSourceTypes'
          description: A list of source types.
      description: A structure describing the source of an artifact.
    ArtifactSourceIdType:
      type: string
      enum:
        - MD5Hash
        - S3ETag
        - S3Version
        - Custom
    ArtifactSourceType:
      type: object
      required:
        - SourceIdType
        - Value
      properties:
        SourceIdType:
          $ref: '#/components/schemas/ArtifactSourceIdType'
          description: The type of ID.
        Value:
          $ref: '#/components/schemas/String256'
          description: The ID.
      description: The ID and ID type of an artifact source.
    ArtifactSummary:
      type: object
      properties:
        ArtifactArn:
          $ref: '#/components/schemas/ArtifactArn'
          description: The Amazon Resource Name (ARN) of the artifact.
        ArtifactName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the artifact.
        Source:
          $ref: '#/components/schemas/ArtifactSource'
          description: The source of the artifact.
        ArtifactType:
          $ref: '#/components/schemas/String256'
          description: The type of the artifact.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the artifact was created.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the artifact was last modified.
      description: Lists a summary of the properties of an artifact. An artifact represents a URI addressable object or data. Some examples are a dataset and a model.
    ArtifactSummaries:
      type: array
      items:
        $ref: '#/components/schemas/ArtifactSummary'
    AssemblyType:
      type: string
      enum:
        - None
        - Line
    TrialComponentArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:experiment-trial-component/.*'
      maxLength: 256
    TrialArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:experiment-trial/.*'
      maxLength: 256
    AssociationSummary:
      type: object
      properties:
        SourceArn:
          $ref: '#/components/schemas/AssociationEntityArn'
          description: The ARN of the source.
        DestinationArn:
          $ref: '#/components/schemas/AssociationEntityArn'
          description: The Amazon Resource Name (ARN) of the destination.
        SourceType:
          $ref: '#/components/schemas/String256'
          description: The source type.
        DestinationType:
          $ref: '#/components/schemas/String256'
          description: The destination type.
        AssociationType:
          $ref: '#/components/schemas/AssociationEdgeType'
          description: The type of the association.
        SourceName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the source.
        DestinationName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the destination.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the association was created.
        CreatedBy:
          $ref: '#/components/schemas/UserContext'
      description: Lists a summary of the properties of an association. An association is an entity that links other lineage or experiment entities. An example would be an association between a training job and a model.
    AssociationSummaries:
      type: array
      items:
        $ref: '#/components/schemas/AssociationSummary'
    UserContext:
      type: object
      properties:
        UserProfileArn:
          $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the user's profile.
        UserProfileName:
          $ref: '#/components/schemas/String'
          description: The name of the user's profile.
        DomainId:
          $ref: '#/components/schemas/String'
          description: The domain associated with the user.
      description: 'Information about the user who created or modified an experiment, trial, or trial component.'
    MaxConcurrentInvocationsPerInstance:
      type: integer
      minimum: 1
      maximum: 1000
    AsyncInferenceClientConfig:
      type: object
      properties:
        MaxConcurrentInvocationsPerInstance:
          $ref: '#/components/schemas/MaxConcurrentInvocationsPerInstance'
          description: 'The maximum number of concurrent requests sent by the SageMaker client to the model container. If no value is provided, Amazon SageMaker will choose an optimal value for you.'
      description: Configures the behavior of the client used by Amazon SageMaker to interact with the model container during asynchronous inference.
    AsyncInferenceOutputConfig:
      type: object
      required:
        - S3OutputPath
      properties:
        KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: <p>The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that Amazon SageMaker uses to encrypt the asynchronous inference output in Amazon S3.</p> <p/>
        S3OutputPath:
          $ref: '#/components/schemas/DestinationS3Uri'
          description: The Amazon S3 location to upload inference responses to.
        NotificationConfig:
          $ref: '#/components/schemas/AsyncInferenceNotificationConfig'
          description: Specifies the configuration for notifications of inference results for asynchronous inference.
      description: Specifies the configuration for asynchronous inference invocation outputs.
    AsyncInferenceConfig:
      type: object
      required:
        - OutputConfig
      properties:
        ClientConfig:
          $ref: '#/components/schemas/AsyncInferenceClientConfig'
          description: Configures the behavior of the client used by Amazon SageMaker to interact with the model container during asynchronous inference.
        OutputConfig:
          $ref: '#/components/schemas/AsyncInferenceOutputConfig'
          description: Specifies the configuration for asynchronous inference invocation outputs.
      description: Specifies configuration for how an endpoint performs asynchronous inference.
    SnsTopicArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sns:[a-z0-9\-]*:[0-9]{12}:[a-zA-Z0-9_.-]+'
      maxLength: 2048
    AsyncInferenceNotificationConfig:
      type: object
      properties:
        SuccessTopic:
          $ref: '#/components/schemas/SnsTopicArn'
          description: 'Amazon SNS topic to post a notification to when inference completes successfully. If no topic is provided, no notification is sent on success.'
        ErrorTopic:
          $ref: '#/components/schemas/SnsTopicArn'
          description: 'Amazon SNS topic to post a notification to when inference fails. If no topic is provided, no notification is sent on failure.'
      description: Specifies the configuration for notifications of inference results for asynchronous inference.
    KmsKeyId:
      type: string
      pattern: .*
      maxLength: 2048
    DestinationS3Uri:
      type: string
      pattern: '^(https|s3)://([^/])/?(.*)$'
      maxLength: 512
    AthenaCatalog:
      type: string
      description: The name of the data catalog used in Athena query execution.
      minLength: 1
      maxLength: 256
      x-pattern: '[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*'
    AthenaDatabase:
      type: string
      pattern: .*
      description: The name of the database used in the Athena query execution.
      minLength: 1
      maxLength: 255
    AthenaQueryString:
      type: string
      pattern: '[\s\S]+'
      description: 'The SQL query statements, to be executed.'
      minLength: 1
      maxLength: 4096
    AthenaWorkGroup:
      type: string
      pattern: '[a-zA-Z0-9._-]+'
      description: The name of the workgroup in which the Athena query is being started.
      minLength: 1
      maxLength: 128
    S3Uri:
      type: string
      pattern: '^(https|s3)://([^/]+)/?(.*)$'
      maxLength: 1024
    AthenaResultFormat:
      type: string
      enum:
        - PARQUET
        - ORC
        - AVRO
        - JSON
        - TEXTFILE
      description: The data storage format for Athena query results.
    AthenaResultCompressionType:
      type: string
      enum:
        - GZIP
        - SNAPPY
        - ZLIB
      description: The compression used for Athena query results.
    AthenaDatasetDefinition:
      type: object
      required:
        - Catalog
        - Database
        - QueryString
        - OutputS3Uri
        - OutputFormat
      properties:
        Catalog:
          $ref: '#/components/schemas/AthenaCatalog'
        Database:
          $ref: '#/components/schemas/AthenaDatabase'
        QueryString:
          $ref: '#/components/schemas/AthenaQueryString'
        WorkGroup:
          $ref: '#/components/schemas/AthenaWorkGroup'
        OutputS3Uri:
          $ref: '#/components/schemas/S3Uri'
          description: The location in Amazon S3 where Athena query results are stored.
        KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that Amazon SageMaker uses to encrypt data generated from an Athena query execution.
        OutputFormat:
          $ref: '#/components/schemas/AthenaResultFormat'
        OutputCompression:
          $ref: '#/components/schemas/AthenaResultCompressionType'
      description: Configuration for Athena Dataset Definition input.
    AttributeName:
      type: string
      pattern: .+
      minLength: 1
      maxLength: 256
    AttributeNames:
      type: array
      items:
        $ref: '#/components/schemas/AttributeName'
      maxItems: 16
    AuthMode:
      type: string
      enum:
        - SSO
        - IAM
    AutoGenerateEndpointName:
      type: boolean
    CandidateName:
      type: string
      minLength: 1
      maxLength: 64
    FinalAutoMLJobObjectiveMetric:
      type: object
      required:
        - MetricName
        - Value
      properties:
        Type:
          $ref: '#/components/schemas/AutoMLJobObjectiveType'
          description: The type of metric with the best result.
        MetricName:
          $ref: '#/components/schemas/AutoMLMetricEnum'
          description: 'The name of the metric with the best result. For a description of the possible objective metrics, see <a>AutoMLJobObjective$MetricName</a>.'
        Value:
          $ref: '#/components/schemas/MetricValue'
          description: The value of the metric with the best result.
      description: The best candidate result from an AutoML training job.
    ObjectiveStatus:
      type: string
      enum:
        - Succeeded
        - Pending
        - Failed
    CandidateSteps:
      type: array
      items:
        $ref: '#/components/schemas/AutoMLCandidateStep'
    CandidateStatus:
      type: string
      enum:
        - Completed
        - InProgress
        - Failed
        - Stopped
        - Stopping
    AutoMLContainerDefinitions:
      type: array
      items:
        $ref: '#/components/schemas/AutoMLContainerDefinition'
      maxItems: 5
    AutoMLFailureReason:
      type: string
      maxLength: 1024
    CandidateProperties:
      type: object
      properties:
        CandidateArtifactLocations:
          $ref: '#/components/schemas/CandidateArtifactLocations'
          description: The Amazon S3 prefix to the artifacts generated for an AutoML candidate.
        CandidateMetrics:
          $ref: '#/components/schemas/MetricDataList'
          description: Information about the candidate metrics for an AutoML job.
      description: The properties of an AutoML candidate job.
    AutoMLCandidate:
      type: object
      required:
        - CandidateName
        - ObjectiveStatus
        - CandidateSteps
        - CandidateStatus
        - CreationTime
        - LastModifiedTime
      properties:
        CandidateName:
          $ref: '#/components/schemas/CandidateName'
          description: The name of the candidate.
        FinalAutoMLJobObjectiveMetric:
          $ref: '#/components/schemas/FinalAutoMLJobObjectiveMetric'
        ObjectiveStatus:
          $ref: '#/components/schemas/ObjectiveStatus'
          description: The objective's status.
        CandidateSteps:
          $ref: '#/components/schemas/CandidateSteps'
          description: Information about the candidate's steps.
        CandidateStatus:
          $ref: '#/components/schemas/CandidateStatus'
          description: The candidate's status.
        InferenceContainers:
          $ref: '#/components/schemas/AutoMLContainerDefinitions'
          description: Information about the inference container definitions.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The creation time.
        EndTime:
          $ref: '#/components/schemas/Timestamp'
          description: The end time.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The last modified time.
        FailureReason:
          $ref: '#/components/schemas/AutoMLFailureReason'
          description: The failure reason.
        CandidateProperties:
          $ref: '#/components/schemas/CandidateProperties'
          description: The properties of an AutoML candidate job.
      description: 'Information about a candidate produced by an AutoML training job, including its status, steps, and other properties.'
    CandidateStepType:
      type: string
      enum:
        - 'AWS::SageMaker::TrainingJob'
        - 'AWS::SageMaker::TransformJob'
        - 'AWS::SageMaker::ProcessingJob'
    CandidateStepArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:.*/.*'
      minLength: 1
      maxLength: 256
    CandidateStepName:
      type: string
      minLength: 1
      maxLength: 64
    AutoMLCandidateStep:
      type: object
      required:
        - CandidateStepType
        - CandidateStepArn
        - CandidateStepName
      properties:
        CandidateStepType:
          $ref: '#/components/schemas/CandidateStepType'
          description: 'Whether the candidate is at the transform, training, or processing step.'
        CandidateStepArn:
          $ref: '#/components/schemas/CandidateStepArn'
          description: The ARN for the candidate's step.
        CandidateStepName:
          $ref: '#/components/schemas/CandidateStepName'
          description: The name for the candidate's step.
      description: Information about the steps for a candidate and what step it is working on.
    AutoMLCandidates:
      type: array
      items:
        $ref: '#/components/schemas/AutoMLCandidate'
    AutoMLDataSource:
      type: object
      required:
        - S3DataSource
      properties:
        S3DataSource:
          $ref: '#/components/schemas/AutoMLS3DataSource'
          description: <p>The Amazon S3 location of the input data.</p> <note> <p>The input data must be in CSV format and contain at least 500 rows.</p> </note>
      description: The data source for the Autopilot job.
    CompressionType:
      type: string
      enum:
        - None
        - Gzip
    TargetAttributeName:
      type: string
      minLength: 1
    AutoMLChannel:
      type: object
      required:
        - DataSource
        - TargetAttributeName
      properties:
        DataSource:
          $ref: '#/components/schemas/AutoMLDataSource'
          description: The data source for an AutoML channel.
        CompressionType:
          $ref: '#/components/schemas/CompressionType'
          description: You can use <code>Gzip</code> or <code>None</code>. The default value is <code>None</code>.
        TargetAttributeName:
          $ref: '#/components/schemas/TargetAttributeName'
          description: 'The name of the target variable in supervised learning, usually represented by ''y''.'
      description: 'A channel is a named input source that training algorithms can consume. For more information, see .'
    ContainerImage:
      type: string
      pattern: '[\S]+'
      maxLength: 255
    Url:
      type: string
      pattern: '^(https|s3)://([^/]+)/?(.*)$'
      maxLength: 1024
    EnvironmentMap:
      type: object
      maxProperties: 16
      additionalProperties:
        $ref: '#/components/schemas/EnvironmentValue'
    AutoMLContainerDefinition:
      type: object
      required:
        - Image
        - ModelDataUrl
      properties:
        Image:
          $ref: '#/components/schemas/ContainerImage'
          description: 'The Amazon Elastic Container Registry (Amazon ECR) path of the container. For more information, see .'
        ModelDataUrl:
          $ref: '#/components/schemas/Url'
          description: 'The location of the model artifacts. For more information, see .'
        Environment:
          $ref: '#/components/schemas/EnvironmentMap'
          description: 'The environment variables to set in the container. For more information, see .'
      description: 'A list of container definitions that describe the different containers that make up an AutoML candidate. For more information, see .'
    AutoMLS3DataSource:
      type: object
      required:
        - S3DataType
        - S3Uri
      properties:
        S3DataType:
          $ref: '#/components/schemas/AutoMLS3DataType'
          description: The data type.
        S3Uri:
          $ref: '#/components/schemas/S3Uri'
          description: The URL to the Amazon S3 data source.
      description: The Amazon S3 data source.
    AutoMLInputDataConfig:
      type: array
      items:
        $ref: '#/components/schemas/AutoMLChannel'
      minItems: 1
      maxItems: 20
    AutoMLJobArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:automl-job/.*'
      minLength: 1
      maxLength: 256
    CandidateDefinitionNotebookLocation:
      type: string
      minLength: 1
    DataExplorationNotebookLocation:
      type: string
      minLength: 1
    AutoMLJobArtifacts:
      type: object
      properties:
        CandidateDefinitionNotebookLocation:
          $ref: '#/components/schemas/CandidateDefinitionNotebookLocation'
          description: The URL of the notebook location.
        DataExplorationNotebookLocation:
          $ref: '#/components/schemas/DataExplorationNotebookLocation'
          description: The URL of the notebook location.
      description: The artifacts that are generated during an AutoML job.
    MaxCandidates:
      type: integer
      minimum: 1
    MaxRuntimePerTrainingJobInSeconds:
      type: integer
      minimum: 1
    MaxAutoMLJobRuntimeInSeconds:
      type: integer
      minimum: 1
    AutoMLJobCompletionCriteria:
      type: object
      properties:
        MaxCandidates:
          $ref: '#/components/schemas/MaxCandidates'
          description: The maximum number of times a training job is allowed to run.
        MaxRuntimePerTrainingJobInSeconds:
          $ref: '#/components/schemas/MaxRuntimePerTrainingJobInSeconds'
          description: 'The maximum time, in seconds, a training job is allowed to run as part of an AutoML job.'
        MaxAutoMLJobRuntimeInSeconds:
          $ref: '#/components/schemas/MaxAutoMLJobRuntimeInSeconds'
          description: 'The maximum runtime, in seconds, an AutoML job has to complete.'
      description: 'How long a job is allowed to run, or how many candidates a job is allowed to generate.'
    AutoMLSecurityConfig:
      type: object
      properties:
        VolumeKmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: The key used to encrypt stored data.
        EnableInterContainerTrafficEncryption:
          $ref: '#/components/schemas/Boolean'
          description: Whether to use traffic encryption between the container layers.
        VpcConfig:
          $ref: '#/components/schemas/VpcConfig'
          description: The VPC configuration.
      description: Security options.
    AutoMLJobConfig:
      type: object
      properties:
        CompletionCriteria:
          $ref: '#/components/schemas/AutoMLJobCompletionCriteria'
          description: 'How long an AutoML job is allowed to run, or how many candidates a job is allowed to generate.'
        SecurityConfig:
          $ref: '#/components/schemas/AutoMLSecurityConfig'
          description: The security configuration for traffic encryption or Amazon VPC settings.
      description: A collection of settings used for an AutoML job.
    AutoMLJobName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,31}'
      minLength: 1
      maxLength: 32
    AutoMLMetricEnum:
      type: string
      enum:
        - Accuracy
        - MSE
        - F1
        - F1macro
        - AUC
    AutoMLJobObjective:
      type: object
      required:
        - MetricName
      properties:
        MetricName:
          $ref: '#/components/schemas/AutoMLMetricEnum'
          description: '<p>The name of the objective metric used to measure the predictive quality of a machine learning system. This metric is optimized during training to provide the best estimate for model parameter values from data.</p> <p>Here are the options:</p> <ul> <li> <p> <code>MSE</code>: The mean squared error (MSE) is the average of the squared differences between the predicted and actual values. It is used for regression. MSE values are always positive: the better a model is at predicting the actual values, the smaller the MSE value is. When the data contains outliers, they tend to dominate the MSE, which might cause subpar prediction performance.</p> </li> <li> <p> <code>Accuracy</code>: The ratio of the number of correctly classified items to the total number of (correctly and incorrectly) classified items. It is used for binary and multiclass classification. It measures how close the predicted class values are to the actual values. Accuracy values vary between zero and one: one indicates perfect accuracy and zero indicates perfect inaccuracy.</p> </li> <li> <p> <code>F1</code>: The F1 score is the harmonic mean of the precision and recall. It is used for binary classification into classes traditionally referred to as positive and negative. Predictions are said to be true when they match their actual (correct) class and false when they do not. Precision is the ratio of the true positive predictions to all positive predictions (including the false positives) in a data set and measures the quality of the prediction when it predicts the positive class. Recall (or sensitivity) is the ratio of the true positive predictions to all actual positive instances and measures how completely a model predicts the actual class members in a data set. The standard F1 score weighs precision and recall equally. But which metric is paramount typically depends on specific aspects of a problem. F1 scores vary between zero and one: one indicates the best possible performance and zero the worst.</p> </li> <li> <p> <code>AUC</code>: The area under the curve (AUC) metric is used to compare and evaluate binary classification by algorithms such as logistic regression that return probabilities. A threshold is needed to map the probabilities into classifications. The relevant curve is the receiver operating characteristic curve that plots the true positive rate (TPR) of predictions (or recall) against the false positive rate (FPR) as a function of the threshold value, above which a prediction is considered positive. Increasing the threshold results in fewer false positives but more false negatives. AUC is the area under this receiver operating characteristic curve and so provides an aggregated measure of the model performance across all possible classification thresholds. The AUC score can also be interpreted as the probability that a randomly selected positive data point is more likely to be predicted positive than a randomly selected negative example. AUC scores vary between zero and one: a score of one indicates perfect accuracy and a score of one half indicates that the prediction is not better than a random classifier. Values under one half predict less accurately than a random predictor. But such consistently bad predictors can simply be inverted to obtain better than random predictors.</p> </li> <li> <p> <code>F1macro</code>: The F1macro score applies F1 scoring to multiclass classification. In this context, you have multiple classes to predict. You just calculate the precision and recall for each class as you did for the positive class in binary classification. Then, use these values to calculate the F1 score for each class and average them to obtain the F1macro score. F1macro scores vary between zero and one: one indicates the best possible performance and zero the worst.</p> </li> </ul> <p>If you do not specify a metric explicitly, the default behavior is to automatically use:</p> <ul> <li> <p> <code>MSE</code>: for regression.</p> </li> <li> <p> <code>F1</code>: for binary classification</p> </li> <li> <p> <code>Accuracy</code>: for multiclass classification.</p> </li> </ul>'
      description: Specifies a metric to minimize or maximize as the objective of a job.
    AutoMLJobObjectiveType:
      type: string
      enum:
        - Maximize
        - Minimize
    AutoMLJobSecondaryStatus:
      type: string
      enum:
        - Starting
        - AnalyzingData
        - FeatureEngineering
        - ModelTuning
        - MaxCandidatesReached
        - Failed
        - Stopped
        - MaxAutoMLJobRuntimeReached
        - Stopping
        - CandidateDefinitionsGenerated
        - GeneratingExplainabilityReport
        - Completed
        - ExplainabilityError
        - DeployingModel
        - ModelDeploymentError
    AutoMLJobStatus:
      type: string
      enum:
        - Completed
        - InProgress
        - Failed
        - Stopped
        - Stopping
    AutoMLJobSummary:
      type: object
      required:
        - AutoMLJobName
        - AutoMLJobArn
        - AutoMLJobStatus
        - AutoMLJobSecondaryStatus
        - CreationTime
        - LastModifiedTime
      properties:
        AutoMLJobName:
          $ref: '#/components/schemas/AutoMLJobName'
          description: The name of the AutoML job you are requesting.
        AutoMLJobArn:
          $ref: '#/components/schemas/AutoMLJobArn'
          description: The ARN of the AutoML job.
        AutoMLJobStatus:
          $ref: '#/components/schemas/AutoMLJobStatus'
          description: The status of the AutoML job.
        AutoMLJobSecondaryStatus:
          $ref: '#/components/schemas/AutoMLJobSecondaryStatus'
          description: The secondary status of the AutoML job.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the AutoML job was created.
        EndTime:
          $ref: '#/components/schemas/Timestamp'
          description: The end time of an AutoML job.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the AutoML job was last modified.
        FailureReason:
          $ref: '#/components/schemas/AutoMLFailureReason'
          description: The failure reason of an AutoML job.
        PartialFailureReasons:
          $ref: '#/components/schemas/AutoMLPartialFailureReasons'
          description: The list of reasons for partial failures within an AutoML job.
      description: Provides a summary about an AutoML job.
    AutoMLJobSummaries:
      type: array
      items:
        $ref: '#/components/schemas/AutoMLJobSummary'
    AutoMLPartialFailureReasons:
      type: array
      items:
        $ref: '#/components/schemas/AutoMLPartialFailureReason'
      minItems: 1
      maxItems: 5
    AutoMLMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    AutoMLNameContains:
      type: string
      pattern: '[a-zA-Z0-9\-]+'
      maxLength: 63
    AutoMLOutputDataConfig:
      type: object
      required:
        - S3OutputPath
      properties:
        KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: The Amazon Web Services KMS encryption key ID.
        S3OutputPath:
          $ref: '#/components/schemas/S3Uri'
          description: The Amazon S3 output path. Must be 128 characters or less.
      description: The output data configuration.
    AutoMLPartialFailureReason:
      type: object
      properties:
        PartialFailureMessage:
          $ref: '#/components/schemas/AutoMLFailureReason'
          description: The message containing the reason for a partial failure of an AutoML job.
      description: The reason for a partial failure of an AutoML job.
    AutoMLS3DataType:
      type: string
      enum:
        - ManifestFile
        - S3Prefix
    VpcConfig:
      type: object
      required:
        - SecurityGroupIds
        - Subnets
      properties:
        SecurityGroupIds:
          $ref: '#/components/schemas/VpcSecurityGroupIds'
          description: 'The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the <code>Subnets</code> field.'
        Subnets:
          $ref: '#/components/schemas/Subnets'
          description: 'The ID of the subnets in the VPC to which you want to connect your training job or model. For information about the availability of specific instance types, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/instance-types-az.html">Supported Instance Types and Availability Zones</a>.'
      description: 'Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html">Protect Endpoints by Using an Amazon Virtual Private Cloud</a> and <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html">Protect Training Jobs by Using an Amazon Virtual Private Cloud</a>. '
    AutoMLSortBy:
      type: string
      enum:
        - Name
        - CreationTime
        - Status
    AutoMLSortOrder:
      type: string
      enum:
        - Ascending
        - Descending
    AutoRollbackConfig:
      type: object
      properties:
        Alarms:
          $ref: '#/components/schemas/AlarmList'
          description: <p/>
      description: 'Currently, the <code>AutoRollbackConfig</code> API is not supported.'
    AwsManagedHumanLoopRequestSource:
      type: string
      enum:
        - AWS/Rekognition/DetectModerationLabels/Image/V3
        - AWS/Textract/AnalyzeDocument/Forms/V1
    BatchStrategy:
      type: string
      enum:
        - MultiRecord
        - SingleRecord
    MetricsSource:
      type: object
      required:
        - ContentType
        - S3Uri
      properties:
        ContentType:
          $ref: '#/components/schemas/ContentType'
          description: <p/>
        ContentDigest:
          $ref: '#/components/schemas/ContentDigest'
          description: <p/>
        S3Uri:
          $ref: '#/components/schemas/S3Uri'
          description: <p/>
      description: <p/>
    Bias:
      type: object
      properties:
        Report:
          $ref: '#/components/schemas/MetricsSource'
          description: The bias report for a model
      description: Contains bias metrics for a model.
    BillableTimeInSeconds:
      type: integer
      minimum: 1
    BlockedReason:
      type: string
      maxLength: 1024
    TrafficRoutingConfig:
      type: object
      required:
        - Type
        - WaitIntervalInSeconds
      properties:
        Type:
          $ref: '#/components/schemas/TrafficRoutingConfigType'
          description: <p/>
        WaitIntervalInSeconds:
          $ref: '#/components/schemas/WaitIntervalInSeconds'
          description: <p/>
        CanarySize:
          $ref: '#/components/schemas/CapacitySize'
          description: <p/>
      description: 'Currently, the <code>TrafficRoutingConfig</code> API is not supported.'
    TerminationWaitInSeconds:
      type: integer
      minimum: 0
      maximum: 3600
    MaximumExecutionTimeoutInSeconds:
      type: integer
      minimum: 600
      maximum: 14400
    BlueGreenUpdatePolicy:
      type: object
      required:
        - TrafficRoutingConfiguration
      properties:
        TrafficRoutingConfiguration:
          $ref: '#/components/schemas/TrafficRoutingConfig'
          description: <p/>
        TerminationWaitInSeconds:
          $ref: '#/components/schemas/TerminationWaitInSeconds'
          description: <p/>
        MaximumExecutionTimeoutInSeconds:
          $ref: '#/components/schemas/MaximumExecutionTimeoutInSeconds'
          description: <p/>
      description: 'Currently, the <code>BlueGreenUpdatePolicy</code> API is not supported.'
    BooleanOperator:
      type: string
      enum:
        - And
        - Or
    Branch:
      type: string
      pattern: '[^ ~^:?*\[]+'
      minLength: 1
      maxLength: 1024
    PipelineExecutionArn:
      type: string
      pattern: '^arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:pipeline\/.*\/execution\/.*$'
      maxLength: 256
    CacheHitResult:
      type: object
      properties:
        SourcePipelineExecutionArn:
          $ref: '#/components/schemas/PipelineExecutionArn'
          description: The Amazon Resource Name (ARN) of the pipeline execution.
      description: Details on the cache hit of a pipeline execution step.
    CallbackToken:
      type: string
      pattern: '^[a-zA-Z0-9]+$'
      minLength: 10
      maxLength: 10
    OutputParameterList:
      type: array
      items:
        $ref: '#/components/schemas/OutputParameter'
      minItems: 0
      maxItems: 50
    CallbackStepMetadata:
      type: object
      properties:
        CallbackToken:
          $ref: '#/components/schemas/CallbackToken'
          description: The pipeline generated token from the Amazon SQS queue.
        SqsQueueUrl:
          $ref: '#/components/schemas/String256'
          description: The URL of the Amazon Simple Queue Service (Amazon SQS) queue used by the callback step.
        OutputParameters:
          $ref: '#/components/schemas/OutputParameterList'
          description: A list of the output parameters of the callback step.
      description: Metadata about a callback step.
    ExplainabilityLocation:
      type: string
      minLength: 1
    CandidateArtifactLocations:
      type: object
      required:
        - Explainability
      properties:
        Explainability:
          $ref: '#/components/schemas/ExplainabilityLocation'
          description: The Amazon S3 prefix to the explainability artifacts generated for the AutoML candidate.
      description: The location of artifacts for an AutoML candidate job.
    MetricDataList:
      type: array
      items:
        $ref: '#/components/schemas/MetricDatum'
      minItems: 0
      maxItems: 40
    CandidateSortBy:
      type: string
      enum:
        - CreationTime
        - Status
        - FinalObjectiveMetricValue
    CapacitySizeType:
      type: string
      enum:
        - INSTANCE_COUNT
        - CAPACITY_PERCENT
    CapacitySizeValue:
      type: integer
      minimum: 1
    CapacitySize:
      type: object
      required:
        - Type
        - Value
      properties:
        Type:
          $ref: '#/components/schemas/CapacitySizeType'
          description: This API is not supported.
        Value:
          $ref: '#/components/schemas/CapacitySizeValue'
          description: <p/>
      description: 'Currently, the <code>CapacitySize</code> API is not supported.'
    CsvContentTypes:
      type: array
      items:
        $ref: '#/components/schemas/CsvContentType'
      minItems: 1
      maxItems: 10
    JsonContentTypes:
      type: array
      items:
        $ref: '#/components/schemas/JsonContentType'
      minItems: 1
      maxItems: 10
    CaptureContentTypeHeader:
      type: object
      properties:
        CsvContentTypes:
          $ref: '#/components/schemas/CsvContentTypes'
          description: <p/>
        JsonContentTypes:
          $ref: '#/components/schemas/JsonContentTypes'
          description: <p/>
      description: <p/>
    CaptureMode:
      type: string
      enum:
        - Input
        - Output
    CaptureOption:
      type: object
      required:
        - CaptureMode
      properties:
        CaptureMode:
          $ref: '#/components/schemas/CaptureMode'
          description: <p/>
      description: <p/>
    CaptureOptionList:
      type: array
      items:
        $ref: '#/components/schemas/CaptureOption'
      minItems: 1
      maxItems: 2
    CaptureStatus:
      type: string
      enum:
        - Started
        - Stopped
    Catalog:
      type: string
      minLength: 1
      maxLength: 255
      x-pattern: '[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*'
    ParameterKey:
      type: string
      pattern: .*
      maxLength: 256
    ParameterValues:
      type: array
      items:
        $ref: '#/components/schemas/ParameterValue'
      minItems: 1
      maxItems: 20
    CategoricalParameterRange:
      type: object
      required:
        - Name
        - Values
      properties:
        Name:
          $ref: '#/components/schemas/ParameterKey'
          description: The name of the categorical hyperparameter to tune.
        Values:
          $ref: '#/components/schemas/ParameterValues'
          description: A list of the categories for the hyperparameter.
      description: A list of categorical hyperparameters to tune.
    CategoricalParameterRangeSpecification:
      type: object
      required:
        - Values
      properties:
        Values:
          $ref: '#/components/schemas/ParameterValues'
          description: The allowed categories for the hyperparameter.
      description: Defines the possible values for a categorical hyperparameter.
    CategoricalParameterRanges:
      type: array
      items:
        $ref: '#/components/schemas/CategoricalParameterRange'
      minItems: 0
      maxItems: 20
    Cents:
      type: integer
      minimum: 0
      maximum: 99
    CertifyForMarketplace:
      type: boolean
    ChannelName:
      type: string
      pattern: '[A-Za-z0-9\.\-_]+'
      minLength: 1
      maxLength: 64
    DataSource:
      type: object
      properties:
        S3DataSource:
          $ref: '#/components/schemas/S3DataSource'
          description: The S3 location of the data source that is associated with a channel.
        FileSystemDataSource:
          $ref: '#/components/schemas/FileSystemDataSource'
          description: The file system that is associated with a channel.
      description: Describes the location of the channel data.
    ContentType:
      type: string
      pattern: .*
      maxLength: 256
    RecordWrapper:
      type: string
      enum:
        - None
        - RecordIO
    ShuffleConfig:
      type: object
      required:
        - Seed
      properties:
        Seed:
          $ref: '#/components/schemas/Seed'
          description: Determines the shuffling order in <code>ShuffleConfig</code> value.
      description: '<p>A configuration for a shuffle option for input data in a channel. If you use <code>S3Prefix</code> for <code>S3DataType</code>, the results of the S3 key prefix matches are shuffled. If you use <code>ManifestFile</code>, the order of the S3 object references in the <code>ManifestFile</code> is shuffled. If you use <code>AugmentedManifestFile</code>, the order of the JSON lines in the <code>AugmentedManifestFile</code> is shuffled. The shuffling order is determined using the <code>Seed</code> value.</p> <p>For Pipe input mode, when <code>ShuffleConfig</code> is specified shuffling is done at the start of every epoch. With large datasets, this ensures that the order of the training data is different for each epoch, and it helps reduce bias and possible overfitting. In a multi-node training job when <code>ShuffleConfig</code> is combined with <code>S3DataDistributionType</code> of <code>ShardedByS3Key</code>, the data is shuffled across nodes so that the content sent to a particular node on the first epoch might be sent to a different node on the second epoch.</p>'
    Channel:
      type: object
      required:
        - ChannelName
        - DataSource
      properties:
        ChannelName:
          $ref: '#/components/schemas/ChannelName'
          description: 'The name of the channel. '
        DataSource:
          $ref: '#/components/schemas/DataSource'
          description: The location of the channel data.
        ContentType:
          $ref: '#/components/schemas/ContentType'
          description: The MIME type of the data.
        CompressionType:
          $ref: '#/components/schemas/CompressionType'
          description: 'If training data is compressed, the compression type. The default value is <code>None</code>. <code>CompressionType</code> is used only in Pipe input mode. In File mode, leave this field unset or set it to None.'
        RecordWrapperType:
          $ref: '#/components/schemas/RecordWrapper'
          description: '<p/> <p>Specify RecordIO as the value when input data is in raw format but the training algorithm requires the RecordIO format. In this case, Amazon SageMaker wraps each individual S3 object in a RecordIO record. If the input data is already in RecordIO format, you don''t need to set this attribute. For more information, see <a href="https://mxnet.apache.org/api/architecture/note_data_loading#data-format">Create a Dataset Using RecordIO</a>. </p> <p>In File mode, leave this field unset or set it to None.</p>'
        InputMode:
          $ref: '#/components/schemas/TrainingInputMode'
          description: '<p>(Optional) The input mode to use for the data channel in a training job. If you don''t set a value for <code>InputMode</code>, Amazon SageMaker uses the value set for <code>TrainingInputMode</code>. Use this parameter to override the <code>TrainingInputMode</code> setting in a <a>AlgorithmSpecification</a> request when you have a channel that needs a different input mode from the training job''s general setting. To download the data from Amazon Simple Storage Service (Amazon S3) to the provisioned ML storage volume, and mount the directory to a Docker volume, use <code>File</code> input mode. To stream data directly from Amazon S3 to the container, choose <code>Pipe</code> input mode.</p> <p>To use a model for incremental training, choose <code>File</code> input model.</p>'
        ShuffleConfig:
          $ref: '#/components/schemas/ShuffleConfig'
          description: '<p>A configuration for a shuffle option for input data in a channel. If you use <code>S3Prefix</code> for <code>S3DataType</code>, this shuffles the results of the S3 key prefix matches. If you use <code>ManifestFile</code>, the order of the S3 object references in the <code>ManifestFile</code> is shuffled. If you use <code>AugmentedManifestFile</code>, the order of the JSON lines in the <code>AugmentedManifestFile</code> is shuffled. The shuffling order is determined using the <code>Seed</code> value.</p> <p>For Pipe input mode, shuffling is done at the start of every epoch. With large datasets this ensures that the order of the training data is different for each epoch, it helps reduce bias and possible overfitting. In a multi-node training job when ShuffleConfig is combined with <code>S3DataDistributionType</code> of <code>ShardedByS3Key</code>, the data is shuffled across nodes so that the content sent to a particular node on the first epoch might be sent to a different node on the second epoch.</p>'
      description: 'A channel is a named input source that training algorithms can consume. '
    ContentTypes:
      type: array
      items:
        $ref: '#/components/schemas/ContentType'
    CompressionTypes:
      type: array
      items:
        $ref: '#/components/schemas/CompressionType'
    InputModes:
      type: array
      items:
        $ref: '#/components/schemas/TrainingInputMode'
      minItems: 1
    ChannelSpecification:
      type: object
      required:
        - Name
        - SupportedContentTypes
        - SupportedInputModes
      properties:
        Name:
          $ref: '#/components/schemas/ChannelName'
          description: The name of the channel.
        Description:
          $ref: '#/components/schemas/EntityDescription'
          description: A brief description of the channel.
        IsRequired:
          $ref: '#/components/schemas/Boolean'
          description: Indicates whether the channel is required by the algorithm.
        SupportedContentTypes:
          $ref: '#/components/schemas/ContentTypes'
          description: The supported MIME types for the data.
        SupportedCompressionTypes:
          $ref: '#/components/schemas/CompressionTypes'
          description: 'The allowed compression types, if data compression is used.'
        SupportedInputModes:
          $ref: '#/components/schemas/InputModes'
          description: '<p>The allowed input mode, either FILE or PIPE.</p> <p>In FILE mode, Amazon SageMaker copies the data from the input source onto the local Amazon Elastic Block Store (Amazon EBS) volumes before starting your training algorithm. This is the most commonly used input mode.</p> <p>In PIPE mode, Amazon SageMaker streams input data from the source directly to your algorithm without using the EBS volume.</p>'
      description: 'Defines a named input source, called a channel, to be used by an algorithm.'
    ChannelSpecifications:
      type: array
      items:
        $ref: '#/components/schemas/ChannelSpecification'
      minItems: 1
      maxItems: 8
    DirectoryPath:
      type: string
      pattern: .*
      maxLength: 4096
    CheckpointConfig:
      type: object
      required:
        - S3Uri
      properties:
        S3Uri:
          $ref: '#/components/schemas/S3Uri'
          description: 'Identifies the S3 path where you want Amazon SageMaker to store checkpoints. For example, <code>s3://bucket-name/key-name-prefix</code>.'
        LocalPath:
          $ref: '#/components/schemas/DirectoryPath'
          description: '(Optional) The local directory where checkpoints are written. The default directory is <code>/opt/ml/checkpoints/</code>. '
      description: 'Contains information about the output location for managed spot training checkpoint data. '
    Cidr:
      type: string
      pattern: '(^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(3[0-2]|[1-2][0-9]|[0-9]))$)|(^s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:)))(%.+)?s*(\/(12[0-8]|1[0-1][0-9]|[1-9][0-9]|[0-9]))$)'
      minLength: 4
      maxLength: 64
    Cidrs:
      type: array
      items:
        $ref: '#/components/schemas/Cidr'
    ClientId:
      type: string
      pattern: '[ -~]+'
      minLength: 1
      maxLength: 1024
    ClientSecret:
      type: string
      pattern: '[ -~]+'
      minLength: 1
      maxLength: 1024
      format: password
    ClientToken:
      type: string
      pattern: '^[a-zA-Z0-9-]+$'
      minLength: 1
      maxLength: 36
    CodeRepositoryArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:code-repository/.*'
      minLength: 1
      maxLength: 2048
    CodeRepositoryContains:
      type: string
      pattern: '[a-zA-Z0-9-]+'
      maxLength: 1024
    CodeRepositoryNameContains:
      type: string
      pattern: '[a-zA-Z0-9-]+'
      maxLength: 63
    CodeRepositorySortBy:
      type: string
      enum:
        - Name
        - CreationTime
        - LastModifiedTime
    CodeRepositorySortOrder:
      type: string
      enum:
        - Ascending
        - Descending
    LastModifiedTime:
      type: string
      format: date-time
    GitConfig:
      type: object
      required:
        - RepositoryUrl
      properties:
        RepositoryUrl:
          $ref: '#/components/schemas/GitConfigUrl'
          description: The URL where the Git repository is located.
        Branch:
          $ref: '#/components/schemas/Branch'
          description: The default branch for the Git repository.
        SecretArn:
          $ref: '#/components/schemas/SecretArn'
          description: '<p>The Amazon Resource Name (ARN) of the Amazon Web Services Secrets Manager secret that contains the credentials used to access the git repository. The secret must have a staging label of <code>AWSCURRENT</code> and must be in the following format:</p> <p> <code>{"username": <i>UserName</i>, "password": <i>Password</i>}</code> </p>'
      description: Specifies configuration details for a Git repository in your Amazon Web Services account.
    CodeRepositorySummary:
      type: object
      required:
        - CodeRepositoryName
        - CodeRepositoryArn
        - CreationTime
        - LastModifiedTime
      properties:
        CodeRepositoryName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the Git repository.
        CodeRepositoryArn:
          $ref: '#/components/schemas/CodeRepositoryArn'
          description: The Amazon Resource Name (ARN) of the Git repository.
        CreationTime:
          $ref: '#/components/schemas/CreationTime'
          description: The date and time that the Git repository was created.
        LastModifiedTime:
          $ref: '#/components/schemas/LastModifiedTime'
          description: The date and time that the Git repository was last modified.
        GitConfig:
          $ref: '#/components/schemas/GitConfig'
          description: 'Configuration details for the Git repository, including the URL where it is located and the ARN of the Amazon Web Services Secrets Manager secret that contains the credentials used to access the repository.'
      description: Specifies summary information about a Git repository.
    CodeRepositorySummaryList:
      type: array
      items:
        $ref: '#/components/schemas/CodeRepositorySummary'
    CognitoUserPool:
      type: string
      pattern: '[\w-]+_[0-9a-zA-Z]+'
      minLength: 1
      maxLength: 55
    CognitoConfig:
      type: object
      required:
        - UserPool
        - ClientId
      properties:
        UserPool:
          $ref: '#/components/schemas/CognitoUserPool'
          description: 'A <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools.html"> user pool</a> is a user directory in Amazon Cognito. With a user pool, your users can sign in to your web or mobile app through Amazon Cognito. Your users can also sign in through social identity providers like Google, Facebook, Amazon, or Apple, and through SAML identity providers.'
        ClientId:
          $ref: '#/components/schemas/ClientId'
          description: The client ID for your Amazon Cognito user pool.
      description: 'Use this parameter to configure your Amazon Cognito workforce. A single Cognito workforce is created using and corresponds to a single <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools.html"> Amazon Cognito user pool</a>.'
    CognitoUserGroup:
      type: string
      pattern: '[\p{L}\p{M}\p{S}\p{N}\p{P}]+'
      minLength: 1
      maxLength: 128
    CognitoMemberDefinition:
      type: object
      required:
        - UserPool
        - UserGroup
        - ClientId
      properties:
        UserPool:
          $ref: '#/components/schemas/CognitoUserPool'
          description: An identifier for a user pool. The user pool must be in the same region as the service that you are calling.
        UserGroup:
          $ref: '#/components/schemas/CognitoUserGroup'
          description: An identifier for a user group.
        ClientId:
          $ref: '#/components/schemas/ClientId'
          description: An identifier for an application client. You must create the app client ID using Amazon Cognito.
      description: Identifies a Amazon Cognito user group. A user group can be used in on or more work teams.
    CollectionName:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 256
    CollectionParameters:
      type: object
      minProperties: 0
      maxProperties: 20
      additionalProperties:
        $ref: '#/components/schemas/ConfigValue'
    CollectionConfiguration:
      type: object
      properties:
        CollectionName:
          $ref: '#/components/schemas/CollectionName'
          description: The name of the tensor collection. The name must be unique relative to other rule configuration names.
        CollectionParameters:
          $ref: '#/components/schemas/CollectionParameters'
          description: 'Parameter values for the tensor collection. The allowed parameters are <code>"name"</code>, <code>"include_regex"</code>, <code>"reduction_config"</code>, <code>"save_config"</code>, <code>"tensor_names"</code>, and <code>"save_histogram"</code>.'
      description: Configuration information for the Debugger output tensor collections.
    CollectionConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/CollectionConfiguration'
      minItems: 0
      maxItems: 20
    ConfigValue:
      type: string
      pattern: .*
      maxLength: 256
    CompilationJobArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:compilation-job/.*'
      maxLength: 256
    CompilationJobStatus:
      type: string
      enum:
        - INPROGRESS
        - COMPLETED
        - FAILED
        - STARTING
        - STOPPING
        - STOPPED
    CompilationJobSummary:
      type: object
      required:
        - CompilationJobName
        - CompilationJobArn
        - CreationTime
        - CompilationJobStatus
      properties:
        CompilationJobName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the model compilation job that you want a summary for.
        CompilationJobArn:
          $ref: '#/components/schemas/CompilationJobArn'
          description: The Amazon Resource Name (ARN) of the model compilation job.
        CreationTime:
          $ref: '#/components/schemas/CreationTime'
          description: The time when the model compilation job was created.
        CompilationStartTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the model compilation job started.
        CompilationEndTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the model compilation job completed.
        CompilationTargetDevice:
          $ref: '#/components/schemas/TargetDevice'
          description: The type of device that the model will run on after the compilation job has completed.
        CompilationTargetPlatformOs:
          $ref: '#/components/schemas/TargetPlatformOs'
          description: The type of OS that the model will run on after the compilation job has completed.
        CompilationTargetPlatformArch:
          $ref: '#/components/schemas/TargetPlatformArch'
          description: The type of architecture that the model will run on after the compilation job has completed.
        CompilationTargetPlatformAccelerator:
          $ref: '#/components/schemas/TargetPlatformAccelerator'
          description: The type of accelerator that the model will run on after the compilation job has completed.
        LastModifiedTime:
          $ref: '#/components/schemas/LastModifiedTime'
          description: The time when the model compilation job was last modified.
        CompilationJobStatus:
          $ref: '#/components/schemas/CompilationJobStatus'
          description: The status of the model compilation job.
      description: A summary of a model compilation job.
    CompilationJobSummaries:
      type: array
      items:
        $ref: '#/components/schemas/CompilationJobSummary'
    TargetDevice:
      type: string
      enum:
        - lambda
        - ml_m4
        - ml_m5
        - ml_c4
        - ml_c5
        - ml_p2
        - ml_p3
        - ml_g4dn
        - ml_inf1
        - ml_eia2
        - jetson_tx1
        - jetson_tx2
        - jetson_nano
        - jetson_xavier
        - rasp3b
        - imx8qm
        - deeplens
        - rk3399
        - rk3288
        - aisage
        - sbe_c
        - qcs605
        - qcs603
        - sitara_am57x
        - amba_cv22
        - amba_cv25
        - x86_win32
        - x86_win64
        - coreml
        - jacinto_tda4vm
    TargetPlatformOs:
      type: string
      enum:
        - ANDROID
        - LINUX
    TargetPlatformArch:
      type: string
      enum:
        - X86_64
        - X86
        - ARM64
        - ARM_EABI
        - ARM_EABIHF
    TargetPlatformAccelerator:
      type: string
      enum:
        - INTEL_GRAPHICS
        - MALI
        - NVIDIA
    CompilerOptions:
      type: string
      pattern: .*
      minLength: 3
      maxLength: 1024
    ConditionOutcome:
      type: string
      enum:
        - 'True'
        - 'False'
    ConditionStepMetadata:
      type: object
      properties:
        Outcome:
          $ref: '#/components/schemas/ConditionOutcome'
          description: The outcome of the Condition step evaluation.
      description: Metadata for a Condition step.
    ConfigKey:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 256
    ContainerArgument:
      type: string
      pattern: .*
      maxLength: 256
    ContainerHostname:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}'
      maxLength: 63
    ImageConfig:
      type: object
      required:
        - RepositoryAccessMode
      properties:
        RepositoryAccessMode:
          $ref: '#/components/schemas/RepositoryAccessMode'
          description: '<p>Set this to one of the following values:</p> <ul> <li> <p> <code>Platform</code> - The model image is hosted in Amazon ECR.</p> </li> <li> <p> <code>Vpc</code> - The model image is hosted in a private Docker registry in your VPC.</p> </li> </ul>'
        RepositoryAuthConfig:
          $ref: '#/components/schemas/RepositoryAuthConfig'
          description: '(Optional) Specifies an authentication configuration for the private docker registry where your model image is hosted. Specify a value for this property only if you specified <code>Vpc</code> as the value for the <code>RepositoryAccessMode</code> field, and the private Docker registry where the model image is hosted requires authentication.'
      description: Specifies whether the model container is in Amazon ECR or a private Docker registry accessible from your Amazon Virtual Private Cloud (VPC).
    ContainerMode:
      type: string
      enum:
        - SingleModel
        - MultiModel
    VersionedArnOrName:
      type: string
      pattern: '(arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:[a-z\-]*\/)?([a-zA-Z0-9]([a-zA-Z0-9-]){0,62})(?<!-)(\/[0-9]{1,5})?$'
      minLength: 1
      maxLength: 176
    MultiModelConfig:
      type: object
      properties:
        ModelCacheSetting:
          $ref: '#/components/schemas/ModelCacheSetting'
          description: 'Whether to cache models for a multi-model endpoint. By default, multi-model endpoints cache models so that a model does not have to be loaded into memory each time it is invoked. Some use cases do not benefit from model caching. For example, if an endpoint hosts a large number of models that are each invoked infrequently, the endpoint might perform better if you disable model caching. To disable model caching, set the value of this parameter to <code>Disabled</code>.'
      description: Specifies additional configuration for hosting multi-model endpoints.
    ContainerDefinition:
      type: object
      properties:
        ContainerHostname:
          $ref: '#/components/schemas/ContainerHostname'
          description: '<p>This parameter is ignored for models that contain only a <code>PrimaryContainer</code>.</p> <p>When a <code>ContainerDefinition</code> is part of an inference pipeline, the value of the parameter uniquely identifies the container for the purposes of logging and metrics. For information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/inference-pipeline-logs-metrics.html">Use Logs and Metrics to Monitor an Inference Pipeline</a>. If you don''t specify a value for this parameter for a <code>ContainerDefinition</code> that is part of an inference pipeline, a unique name is automatically assigned based on the position of the <code>ContainerDefinition</code> in the pipeline. If you specify a value for the <code>ContainerHostName</code> for any <code>ContainerDefinition</code> that is part of an inference pipeline, you must specify a value for the <code>ContainerHostName</code> parameter of every <code>ContainerDefinition</code> in that pipeline.</p>'
        Image:
          $ref: '#/components/schemas/ContainerImage'
          description: 'The path where inference code is stored. This can be either in Amazon EC2 Container Registry or in a Docker registry that is accessible from the same VPC that you configure for your endpoint. If you are using your own custom algorithm instead of an algorithm provided by Amazon SageMaker, the inference code must meet Amazon SageMaker requirements. Amazon SageMaker supports both <code>registry/repository[:tag]</code> and <code>registry/repository[@digest]</code> image path formats. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms.html">Using Your Own Algorithms with Amazon SageMaker</a> '
        ImageConfig:
          $ref: '#/components/schemas/ImageConfig'
          description: 'Specifies whether the model container is in Amazon ECR or a private Docker registry accessible from your Amazon Virtual Private Cloud (VPC). For information about storing containers in a private Docker registry, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms-containers-inference-private.html">Use a Private Docker Registry for Real-Time Inference Containers</a> '
        Mode:
          $ref: '#/components/schemas/ContainerMode'
          description: Whether the container hosts a single model or multiple models.
        ModelDataUrl:
          $ref: '#/components/schemas/Url'
          description: '<p>The S3 path where the model artifacts, which result from model training, are stored. This path must point to a single gzip compressed tar archive (.tar.gz suffix). The S3 path is required for Amazon SageMaker built-in algorithms, but not if you use your own algorithms. For more information on built-in algorithms, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-algo-docker-registry-paths.html">Common Parameters</a>. </p> <note> <p>The model artifacts must be in an S3 bucket that is in the same region as the model or endpoint you are creating.</p> </note> <p>If you provide a value for this parameter, Amazon SageMaker uses Amazon Web Services Security Token Service to download model artifacts from the S3 path you provide. Amazon Web Services STS is activated in your IAM user account by default. If you previously deactivated Amazon Web Services STS for a region, you need to reactivate Amazon Web Services STS for that region. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_enable-regions.html">Activating and Deactivating Amazon Web Services STS in an Amazon Web Services Region</a> in the <i>Amazon Web Services Identity and Access Management User Guide</i>.</p> <important> <p>If you use a built-in algorithm to create a model, Amazon SageMaker requires that you provide a S3 path to the model artifacts in <code>ModelDataUrl</code>.</p> </important>'
        Environment:
          $ref: '#/components/schemas/EnvironmentMap'
          description: 'The environment variables to set in the Docker container. Each key and value in the <code>Environment</code> string to string map can have length of up to 1024. We support up to 16 entries in the map. '
        ModelPackageName:
          $ref: '#/components/schemas/VersionedArnOrName'
          description: The name or Amazon Resource Name (ARN) of the model package to use to create the model.
        MultiModelConfig:
          $ref: '#/components/schemas/MultiModelConfig'
          description: Specifies additional configuration for multi-model endpoints.
      description: 'Describes the container, as part of model definition.'
    ContainerDefinitionList:
      type: array
      items:
        $ref: '#/components/schemas/ContainerDefinition'
      maxItems: 15
    ContainerEntrypointString:
      type: string
      pattern: .*
      maxLength: 256
    ContentClassifier:
      type: string
      enum:
        - FreeOfPersonallyIdentifiableInformation
        - FreeOfAdultContent
    ContentClassifiers:
      type: array
      items:
        $ref: '#/components/schemas/ContentClassifier'
      maxItems: 256
    ContentDigest:
      type: string
      pattern: '^[Ss][Hh][Aa]256:[0-9a-fA-F]{64}$'
      maxLength: 72
    ContextArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:context/.*'
      maxLength: 256
    ContextSource:
      type: object
      required:
        - SourceUri
      properties:
        SourceUri:
          $ref: '#/components/schemas/String2048'
          description: The URI of the source.
        SourceType:
          $ref: '#/components/schemas/String256'
          description: The type of the source.
        SourceId:
          $ref: '#/components/schemas/String256'
          description: The ID of the source.
      description: A structure describing the source of a context.
    ContextSummary:
      type: object
      properties:
        ContextArn:
          $ref: '#/components/schemas/ContextArn'
          description: The Amazon Resource Name (ARN) of the context.
        ContextName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the context.
        Source:
          $ref: '#/components/schemas/ContextSource'
          description: The source of the context.
        ContextType:
          $ref: '#/components/schemas/String256'
          description: The type of the context.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the context was created.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the context was last modified.
      description: Lists a summary of the properties of a context. A context provides a logical grouping of other entities.
    ContextSummaries:
      type: array
      items:
        $ref: '#/components/schemas/ContextSummary'
    ParameterValue:
      type: string
      pattern: .*
      maxLength: 256
    HyperParameterScalingType:
      type: string
      enum:
        - Auto
        - Linear
        - Logarithmic
        - ReverseLogarithmic
    ContinuousParameterRange:
      type: object
      required:
        - Name
        - MinValue
        - MaxValue
      properties:
        Name:
          $ref: '#/components/schemas/ParameterKey'
          description: The name of the continuous hyperparameter to tune.
        MinValue:
          $ref: '#/components/schemas/ParameterValue'
          description: The minimum value for the hyperparameter. The tuning job uses floating-point values between this value and <code>MaxValue</code>for tuning.
        MaxValue:
          $ref: '#/components/schemas/ParameterValue'
          description: The maximum value for the hyperparameter. The tuning job uses floating-point values between <code>MinValue</code> value and this value for tuning.
        ScalingType:
          $ref: '#/components/schemas/HyperParameterScalingType'
          description: '<p>The scale that hyperparameter tuning uses to search the hyperparameter range. For information about choosing a hyperparameter scale, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-ranges.html#scaling-type">Hyperparameter Scaling</a>. One of the following values:</p> <dl> <dt>Auto</dt> <dd> <p>Amazon SageMaker hyperparameter tuning chooses the best scale for the hyperparameter.</p> </dd> <dt>Linear</dt> <dd> <p>Hyperparameter tuning searches the values in the hyperparameter range by using a linear scale.</p> </dd> <dt>Logarithmic</dt> <dd> <p>Hyperparameter tuning searches the values in the hyperparameter range by using a logarithmic scale.</p> <p>Logarithmic scaling works only for ranges that have only values greater than 0.</p> </dd> <dt>ReverseLogarithmic</dt> <dd> <p>Hyperparameter tuning searches the values in the hyperparameter range by using a reverse logarithmic scale.</p> <p>Reverse logarithmic scaling works only for ranges that are entirely within the range 0&lt;=x&lt;1.0.</p> </dd> </dl>'
      description: A list of continuous hyperparameters to tune.
    ContinuousParameterRangeSpecification:
      type: object
      required:
        - MinValue
        - MaxValue
      properties:
        MinValue:
          $ref: '#/components/schemas/ParameterValue'
          description: The minimum floating-point value allowed.
        MaxValue:
          $ref: '#/components/schemas/ParameterValue'
          description: The maximum floating-point value allowed.
      description: Defines the possible values for a continuous hyperparameter.
    ContinuousParameterRanges:
      type: array
      items:
        $ref: '#/components/schemas/ContinuousParameterRange'
      minItems: 0
      maxItems: 20
    ExperimentDescription:
      type: string
      pattern: .*
      maxLength: 3072
    LineageEntityParameters:
      type: object
      maxProperties: 30
      additionalProperties:
        $ref: '#/components/schemas/StringParameterValue'
    MetadataProperties:
      type: object
      properties:
        CommitId:
          $ref: '#/components/schemas/MetadataPropertyValue'
          description: The commit ID.
        Repository:
          $ref: '#/components/schemas/MetadataPropertyValue'
          description: The repository.
        GeneratedBy:
          $ref: '#/components/schemas/MetadataPropertyValue'
          description: The entity this entity was generated by.
        ProjectId:
          $ref: '#/components/schemas/MetadataPropertyValue'
          description: The project ID.
      description: 'Metadata properties of the tracking entity, trial, or trial component.'
    TrainingSpecification:
      type: object
      required:
        - TrainingImage
        - SupportedTrainingInstanceTypes
        - TrainingChannels
      properties:
        TrainingImage:
          $ref: '#/components/schemas/ContainerImage'
          description: The Amazon ECR registry path of the Docker image that contains the training algorithm.
        TrainingImageDigest:
          $ref: '#/components/schemas/ImageDigest'
          description: An MD5 hash of the training algorithm that identifies the Docker image used for training.
        SupportedHyperParameters:
          $ref: '#/components/schemas/HyperParameterSpecifications'
          description: 'A list of the <code>HyperParameterSpecification</code> objects, that define the supported hyperparameters. This is required if the algorithm supports automatic model tuning.&gt;'
        SupportedTrainingInstanceTypes:
          $ref: '#/components/schemas/TrainingInstanceTypes'
          description: A list of the instance types that this algorithm can use for training.
        SupportsDistributedTraining:
          $ref: '#/components/schemas/Boolean'
          description: 'Indicates whether the algorithm supports distributed training. If set to false, buyers can''t request more than one instance during training.'
        MetricDefinitions:
          $ref: '#/components/schemas/MetricDefinitionList'
          description: 'A list of <code>MetricDefinition</code> objects, which are used for parsing metrics generated by the algorithm.'
        TrainingChannels:
          $ref: '#/components/schemas/ChannelSpecifications'
          description: 'A list of <code>ChannelSpecification</code> objects, which specify the input sources to be used by the algorithm.'
        SupportedTuningJobObjectiveMetrics:
          $ref: '#/components/schemas/HyperParameterTuningJobObjectives'
          description: A list of the metrics that the algorithm emits that can be used as the objective metric in a hyperparameter tuning job.
      description: Defines how the algorithm is used for a training job.
    InferenceSpecification:
      type: object
      required:
        - Containers
        - SupportedContentTypes
        - SupportedResponseMIMETypes
      properties:
        Containers:
          $ref: '#/components/schemas/ModelPackageContainerDefinitionList'
          description: The Amazon ECR registry path of the Docker image that contains the inference code.
        SupportedTransformInstanceTypes:
          $ref: '#/components/schemas/TransformInstanceTypes'
          description: '<p>A list of the instance types on which a transformation job can be run or on which an endpoint can be deployed.</p> <p>This parameter is required for unversioned models, and optional for versioned models.</p>'
        SupportedRealtimeInferenceInstanceTypes:
          $ref: '#/components/schemas/RealtimeInferenceInstanceTypes'
          description: '<p>A list of the instance types that are used to generate inferences in real-time.</p> <p>This parameter is required for unversioned models, and optional for versioned models.</p>'
        SupportedContentTypes:
          $ref: '#/components/schemas/ContentTypes'
          description: The supported MIME types for the input data.
        SupportedResponseMIMETypes:
          $ref: '#/components/schemas/ResponseMIMETypes'
          description: The supported MIME types for the output data.
      description: Defines how to perform inference generation after a training job is run.
    ResourceSpec:
      type: object
      properties:
        SageMakerImageArn:
          $ref: '#/components/schemas/ImageArn'
          description: The ARN of the SageMaker image that the image version belongs to.
        SageMakerImageVersionArn:
          $ref: '#/components/schemas/ImageVersionArn'
          description: The ARN of the image version created on the instance.
        InstanceType:
          $ref: '#/components/schemas/AppInstanceType'
          description: The instance type that the image version runs on.
      description: 'Specifies the ARN''s of a SageMaker image and SageMaker image version, and the instance type that the version runs on.'
    ProblemType:
      type: string
      enum:
        - BinaryClassification
        - MulticlassClassification
        - Regression
    GenerateCandidateDefinitionsOnly:
      type: boolean
    ModelDeployConfig:
      type: object
      properties:
        AutoGenerateEndpointName:
          $ref: '#/components/schemas/AutoGenerateEndpointName'
          description: '<p>Set to <code>True</code> to automatically generate an endpoint name for a one-click Autopilot model deployment; set to <code>False</code> otherwise. The default value is <code>False</code>.</p> <note> <p>If you set <code>AutoGenerateEndpointName</code> to <code>True</code>, do not specify the <code>EndpointName</code>; otherwise a 400 error is thrown.</p> </note>'
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
          description: <p>Specifies the endpoint name to use for a one-click Autopilot model deployment if the endpoint name is not generated automatically.</p> <note> <p>Specify the <code>EndpointName</code> if and only if you set <code>AutoGenerateEndpointName</code> to <code>False</code>; otherwise a 400 error is thrown.</p> </note>
      description: Specifies how to generate the endpoint name for an automatic one-click Autopilot model deployment.
    InputConfig:
      type: object
      required:
        - S3Uri
        - DataInputConfig
        - Framework
      properties:
        S3Uri:
          $ref: '#/components/schemas/S3Uri'
          description: 'The S3 path where the model artifacts, which result from model training, are stored. This path must point to a single gzip compressed tar archive (.tar.gz suffix).'
        DataInputConfig:
          $ref: '#/components/schemas/DataInputConfig'
          description: '<p>Specifies the name and shape of the expected data inputs for your trained model with a JSON dictionary form. The data inputs are <a>InputConfig$Framework</a> specific. </p> <ul> <li> <p> <code>TensorFlow</code>: You must specify the name and shape (NHWC format) of the expected data inputs using a dictionary format for your trained model. The dictionary formats required for the console and CLI are different.</p> <ul> <li> <p>Examples for one input:</p> <ul> <li> <p>If using the console, <code>{"input":[1,1024,1024,3]}</code> </p> </li> <li> <p>If using the CLI, <code>{\"input\":[1,1024,1024,3]}</code> </p> </li> </ul> </li> <li> <p>Examples for two inputs:</p> <ul> <li> <p>If using the console, <code>{"data1": [1,28,28,1], "data2":[1,28,28,1]}</code> </p> </li> <li> <p>If using the CLI, <code>{\"data1\": [1,28,28,1], \"data2\":[1,28,28,1]}</code> </p> </li> </ul> </li> </ul> </li> <li> <p> <code>KERAS</code>: You must specify the name and shape (NCHW format) of expected data inputs using a dictionary format for your trained model. Note that while Keras model artifacts should be uploaded in NHWC (channel-last) format, <code>DataInputConfig</code> should be specified in NCHW (channel-first) format. The dictionary formats required for the console and CLI are different.</p> <ul> <li> <p>Examples for one input:</p> <ul> <li> <p>If using the console, <code>{"input_1":[1,3,224,224]}</code> </p> </li> <li> <p>If using the CLI, <code>{\"input_1\":[1,3,224,224]}</code> </p> </li> </ul> </li> <li> <p>Examples for two inputs:</p> <ul> <li> <p>If using the console, <code>{"input_1": [1,3,224,224], "input_2":[1,3,224,224]} </code> </p> </li> <li> <p>If using the CLI, <code>{\"input_1\": [1,3,224,224], \"input_2\":[1,3,224,224]}</code> </p> </li> </ul> </li> </ul> </li> <li> <p> <code>MXNET/ONNX/DARKNET</code>: You must specify the name and shape (NCHW format) of the expected data inputs in order using a dictionary format for your trained model. The dictionary formats required for the console and CLI are different.</p> <ul> <li> <p>Examples for one input:</p> <ul> <li> <p>If using the console, <code>{"data":[1,3,1024,1024]}</code> </p> </li> <li> <p>If using the CLI, <code>{\"data\":[1,3,1024,1024]}</code> </p> </li> </ul> </li> <li> <p>Examples for two inputs:</p> <ul> <li> <p>If using the console, <code>{"var1": [1,1,28,28], "var2":[1,1,28,28]} </code> </p> </li> <li> <p>If using the CLI, <code>{\"var1\": [1,1,28,28], \"var2\":[1,1,28,28]}</code> </p> </li> </ul> </li> </ul> </li> <li> <p> <code>PyTorch</code>: You can either specify the name and shape (NCHW format) of expected data inputs in order using a dictionary format for your trained model or you can specify the shape only using a list format. The dictionary formats required for the console and CLI are different. The list formats for the console and CLI are the same.</p> <ul> <li> <p>Examples for one input in dictionary format:</p> <ul> <li> <p>If using the console, <code>{"input0":[1,3,224,224]}</code> </p> </li> <li> <p>If using the CLI, <code>{\"input0\":[1,3,224,224]}</code> </p> </li> </ul> </li> <li> <p>Example for one input in list format: <code>[[1,3,224,224]]</code> </p> </li> <li> <p>Examples for two inputs in dictionary format:</p> <ul> <li> <p>If using the console, <code>{"input0":[1,3,224,224], "input1":[1,3,224,224]}</code> </p> </li> <li> <p>If using the CLI, <code>{\"input0\":[1,3,224,224], \"input1\":[1,3,224,224]} </code> </p> </li> </ul> </li> <li> <p>Example for two inputs in list format: <code>[[1,3,224,224], [1,3,224,224]]</code> </p> </li> </ul> </li> <li> <p> <code>XGBOOST</code>: input data name and shape are not needed.</p> </li> </ul> <p> <code>DataInputConfig</code> supports the following parameters for <code>CoreML</code> <a>OutputConfig$TargetDevice</a> (ML Model format):</p> <ul> <li> <p> <code>shape</code>: Input shape, for example <code>{"input_1": {"shape": [1,224,224,3]}}</code>. In addition to static input shapes, CoreML converter supports Flexible input shapes:</p> <ul> <li> <p>Range Dimension. You can use the Range Dimension feature if you know the input shape will be within some specific interval in that dimension, for example: <code>{"input_1": {"shape": ["1..10", 224, 224, 3]}}</code> </p> </li> <li> <p>Enumerated shapes. Sometimes, the models are trained to work only on a select set of inputs. You can enumerate all supported input shapes, for example: <code>{"input_1": {"shape": [[1, 224, 224, 3], [1, 160, 160, 3]]}}</code> </p> </li> </ul> </li> <li> <p> <code>default_shape</code>: Default input shape. You can set a default shape during conversion for both Range Dimension and Enumerated Shapes. For example <code>{"input_1": {"shape": ["1..10", 224, 224, 3], "default_shape": [1, 224, 224, 3]}}</code> </p> </li> <li> <p> <code>type</code>: Input type. Allowed values: <code>Image</code> and <code>Tensor</code>. By default, the converter generates an ML Model with inputs of type Tensor (MultiArray). User can set input type to be Image. Image input type requires additional input parameters such as <code>bias</code> and <code>scale</code>.</p> </li> <li> <p> <code>bias</code>: If the input type is an Image, you need to provide the bias vector.</p> </li> <li> <p> <code>scale</code>: If the input type is an Image, you need to provide a scale factor.</p> </li> </ul> <p>CoreML <code>ClassifierConfig</code> parameters can be specified using <a>OutputConfig$CompilerOptions</a>. CoreML converter supports Tensorflow and PyTorch models. CoreML conversion examples:</p> <ul> <li> <p>Tensor type input:</p> <ul> <li> <p> <code>"DataInputConfig": {"input_1": {"shape": [[1,224,224,3], [1,160,160,3]], "default_shape": [1,224,224,3]}}</code> </p> </li> </ul> </li> <li> <p>Tensor type input without input name (PyTorch):</p> <ul> <li> <p> <code>"DataInputConfig": [{"shape": [[1,3,224,224], [1,3,160,160]], "default_shape": [1,3,224,224]}]</code> </p> </li> </ul> </li> <li> <p>Image type input:</p> <ul> <li> <p> <code>"DataInputConfig": {"input_1": {"shape": [[1,224,224,3], [1,160,160,3]], "default_shape": [1,224,224,3], "type": "Image", "bias": [-1,-1,-1], "scale": 0.007843137255}}</code> </p> </li> <li> <p> <code>"CompilerOptions": {"class_labels": "imagenet_labels_1000.txt"}</code> </p> </li> </ul> </li> <li> <p>Image type input without input name (PyTorch):</p> <ul> <li> <p> <code>"DataInputConfig": [{"shape": [[1,3,224,224], [1,3,160,160]], "default_shape": [1,3,224,224], "type": "Image", "bias": [-1,-1,-1], "scale": 0.007843137255}]</code> </p> </li> <li> <p> <code>"CompilerOptions": {"class_labels": "imagenet_labels_1000.txt"}</code> </p> </li> </ul> </li> </ul> <p>Depending on the model format, <code>DataInputConfig</code> requires the following parameters for <code>ml_eia2</code> <a href="https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_OutputConfig.html#sagemaker-Type-OutputConfig-TargetDevice">OutputConfig:TargetDevice</a>.</p> <ul> <li> <p>For TensorFlow models saved in the SavedModel format, specify the input names from <code>signature_def_key</code> and the input model shapes for <code>DataInputConfig</code>. Specify the <code>signature_def_key</code> in <a href="https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_OutputConfig.html#sagemaker-Type-OutputConfig-CompilerOptions"> <code>OutputConfig:CompilerOptions</code> </a> if the model does not use TensorFlow''s default signature def key. For example:</p> <ul> <li> <p> <code>"DataInputConfig": {"inputs": [1, 224, 224, 3]}</code> </p> </li> <li> <p> <code>"CompilerOptions": {"signature_def_key": "serving_custom"}</code> </p> </li> </ul> </li> <li> <p>For TensorFlow models saved as a frozen graph, specify the input tensor names and shapes in <code>DataInputConfig</code> and the output tensor names for <code>output_names</code> in <a href="https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_OutputConfig.html#sagemaker-Type-OutputConfig-CompilerOptions"> <code>OutputConfig:CompilerOptions</code> </a>. For example:</p> <ul> <li> <p> <code>"DataInputConfig": {"input_tensor:0": [1, 224, 224, 3]}</code> </p> </li> <li> <p> <code>"CompilerOptions": {"output_names": ["output_tensor:0"]}</code> </p> </li> </ul> </li> </ul>'
        Framework:
          $ref: '#/components/schemas/Framework'
          description: 'Identifies the framework in which the model was trained. For example: TENSORFLOW.'
        FrameworkVersion:
          $ref: '#/components/schemas/FrameworkVersion'
          description: '<p>Specifies the framework version to use.</p> <p>This API field is only supported for PyTorch framework versions <code>1.4</code>, <code>1.5</code>, and <code>1.6</code> for cloud instance target devices: <code>ml_c4</code>, <code>ml_c5</code>, <code>ml_m4</code>, <code>ml_m5</code>, <code>ml_p2</code>, <code>ml_p3</code>, and <code>ml_g4dn</code>.</p>'
      description: 'Contains information about the location of input model artifacts, the name and shape of the expected data inputs, and the framework in which the model was trained.'
    OutputConfig:
      type: object
      required:
        - S3OutputLocation
      properties:
        S3OutputLocation:
          $ref: '#/components/schemas/S3Uri'
          description: 'Identifies the S3 bucket where you want Amazon SageMaker to store the model artifacts. For example, <code>s3://bucket-name/key-name-prefix</code>.'
        TargetDevice:
          $ref: '#/components/schemas/TargetDevice'
          description: 'Identifies the target device or the machine learning instance that you want to run your model on after the compilation has completed. Alternatively, you can specify OS, architecture, and accelerator using <a>TargetPlatform</a> fields. It can be used instead of <code>TargetPlatform</code>.'
        TargetPlatform:
          $ref: '#/components/schemas/TargetPlatform'
          description: '<p>Contains information about a target platform that you want your model to run on, such as OS, architecture, and accelerators. It is an alternative of <code>TargetDevice</code>.</p> <p>The following examples show how to configure the <code>TargetPlatform</code> and <code>CompilerOptions</code> JSON strings for popular target platforms: </p> <ul> <li> <p>Raspberry Pi 3 Model B+</p> <p> <code>"TargetPlatform": {"Os": "LINUX", "Arch": "ARM_EABIHF"},</code> </p> <p> <code> "CompilerOptions": {''mattr'': [''+neon'']}</code> </p> </li> <li> <p>Jetson TX2</p> <p> <code>"TargetPlatform": {"Os": "LINUX", "Arch": "ARM64", "Accelerator": "NVIDIA"},</code> </p> <p> <code> "CompilerOptions": {''gpu-code'': ''sm_62'', ''trt-ver'': ''6.0.1'', ''cuda-ver'': ''10.0''}</code> </p> </li> <li> <p>EC2 m5.2xlarge instance OS</p> <p> <code>"TargetPlatform": {"Os": "LINUX", "Arch": "X86_64", "Accelerator": "NVIDIA"},</code> </p> <p> <code> "CompilerOptions": {''mcpu'': ''skylake-avx512''}</code> </p> </li> <li> <p>RK3399</p> <p> <code>"TargetPlatform": {"Os": "LINUX", "Arch": "ARM64", "Accelerator": "MALI"}</code> </p> </li> <li> <p>ARMv7 phone (CPU)</p> <p> <code>"TargetPlatform": {"Os": "ANDROID", "Arch": "ARM_EABI"},</code> </p> <p> <code> "CompilerOptions": {''ANDROID_PLATFORM'': 25, ''mattr'': [''+neon'']}</code> </p> </li> <li> <p>ARMv8 phone (CPU)</p> <p> <code>"TargetPlatform": {"Os": "ANDROID", "Arch": "ARM64"},</code> </p> <p> <code> "CompilerOptions": {''ANDROID_PLATFORM'': 29}</code> </p> </li> </ul>'
        CompilerOptions:
          $ref: '#/components/schemas/CompilerOptions'
          description: '<p>Specifies additional parameters for compiler options in JSON format. The compiler options are <code>TargetPlatform</code> specific. It is required for NVIDIA accelerators and highly recommended for CPU compilations. For any other cases, it is optional to specify <code>CompilerOptions.</code> </p> <ul> <li> <p> <code>DTYPE</code>: Specifies the data type for the input. When compiling for <code>ml_*</code> (except for <code>ml_inf</code>) instances using PyTorch framework, provide the data type (dtype) of the model''s input. <code>"float32"</code> is used if <code>"DTYPE"</code> is not specified. Options for data type are:</p> <ul> <li> <p>float32: Use either <code>"float"</code> or <code>"float32"</code>.</p> </li> <li> <p>int64: Use either <code>"int64"</code> or <code>"long"</code>.</p> </li> </ul> <p> For example, <code>{"dtype" : "float32"}</code>.</p> </li> <li> <p> <code>CPU</code>: Compilation for CPU supports the following compiler options.</p> <ul> <li> <p> <code>mcpu</code>: CPU micro-architecture. For example, <code>{''mcpu'': ''skylake-avx512''}</code> </p> </li> <li> <p> <code>mattr</code>: CPU flags. For example, <code>{''mattr'': [''+neon'', ''+vfpv4'']}</code> </p> </li> </ul> </li> <li> <p> <code>ARM</code>: Details of ARM CPU compilations.</p> <ul> <li> <p> <code>NEON</code>: NEON is an implementation of the Advanced SIMD extension used in ARMv7 processors.</p> <p>For example, add <code>{''mattr'': [''+neon'']}</code> to the compiler options if compiling for ARM 32-bit platform with the NEON support.</p> </li> </ul> </li> <li> <p> <code>NVIDIA</code>: Compilation for NVIDIA GPU supports the following compiler options.</p> <ul> <li> <p> <code>gpu_code</code>: Specifies the targeted architecture.</p> </li> <li> <p> <code>trt-ver</code>: Specifies the TensorRT versions in x.y.z. format.</p> </li> <li> <p> <code>cuda-ver</code>: Specifies the CUDA version in x.y format.</p> </li> </ul> <p>For example, <code>{''gpu-code'': ''sm_72'', ''trt-ver'': ''6.0.1'', ''cuda-ver'': ''10.1''}</code> </p> </li> <li> <p> <code>ANDROID</code>: Compilation for the Android OS supports the following compiler options:</p> <ul> <li> <p> <code>ANDROID_PLATFORM</code>: Specifies the Android API levels. Available levels range from 21 to 29. For example, <code>{''ANDROID_PLATFORM'': 28}</code>.</p> </li> <li> <p> <code>mattr</code>: Add <code>{''mattr'': [''+neon'']}</code> to compiler options if compiling for ARM 32-bit platform with NEON support.</p> </li> </ul> </li> <li> <p> <code>INFERENTIA</code>: Compilation for target ml_inf1 uses compiler options passed in as a JSON string. For example, <code>"CompilerOptions": "\"--verbose 1 --num-neuroncores 2 -O2\""</code>. </p> <p>For information about supported compiler options, see <a href="https://github.com/aws/aws-neuron-sdk/blob/master/docs/neuron-cc/command-line-reference.md"> Neuron Compiler CLI</a>. </p> </li> <li> <p> <code>CoreML</code>: Compilation for the CoreML <a>OutputConfig$TargetDevice</a> supports the following compiler options:</p> <ul> <li> <p> <code>class_labels</code>: Specifies the classification labels file name inside input tar.gz file. For example, <code>{"class_labels": "imagenet_labels_1000.txt"}</code>. Labels inside the txt file should be separated by newlines.</p> </li> </ul> </li> <li> <p> <code>EIA</code>: Compilation for the Elastic Inference Accelerator supports the following compiler options:</p> <ul> <li> <p> <code>precision_mode</code>: Specifies the precision of compiled artifacts. Supported values are <code>"FP16"</code> and <code>"FP32"</code>. Default is <code>"FP32"</code>.</p> </li> <li> <p> <code>signature_def_key</code>: Specifies the signature to use for models in SavedModel format. Defaults is TensorFlow''s default signature def key.</p> </li> <li> <p> <code>output_names</code>: Specifies a list of output tensor names for models in FrozenGraph format. Set at most one API field, either: <code>signature_def_key</code> or <code>output_names</code>.</p> </li> </ul> <p>For example: <code>{"precision_mode": "FP32", "output_names": ["output:0"]}</code> </p> </li> </ul>'
        KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: '<p>The Amazon Web Services Key Management Service key (Amazon Web Services KMS) that Amazon SageMaker uses to encrypt your output models with Amazon S3 server-side encryption after compilation job. If you don''t provide a KMS key ID, Amazon SageMaker uses the default KMS key for Amazon S3 for your role''s account. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/UsingKMSEncryption.html">KMS-Managed Encryption Keys</a> in the <i>Amazon Simple Storage Service Developer Guide.</i> </p> <p>The KmsKeyId can be any of the following formats: </p> <ul> <li> <p>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li> <li> <p>Key ARN: <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li> <li> <p>Alias name: <code>alias/ExampleAlias</code> </p> </li> <li> <p>Alias name ARN: <code>arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias</code> </p> </li> </ul>'
      description: 'Contains information about the output location for the compiled model and the target device that the model runs on. <code>TargetDevice</code> and <code>TargetPlatform</code> are mutually exclusive, so you need to choose one between the two to specify your target device or platform. If you cannot find your device you want to use from the <code>TargetDevice</code> list, use <code>TargetPlatform</code> to describe the platform of your edge device and <code>CompilerOptions</code> if there are specific settings that are required or recommended to use for particular TargetPlatform.'
    NeoVpcConfig:
      type: object
      required:
        - SecurityGroupIds
        - Subnets
      properties:
        SecurityGroupIds:
          $ref: '#/components/schemas/NeoVpcSecurityGroupIds'
          description: The VPC security group IDs. IDs have the form of <code>sg-xxxxxxxx</code>. Specify the security groups for the VPC that is specified in the <code>Subnets</code> field.
        Subnets:
          $ref: '#/components/schemas/NeoVpcSubnets'
          description: The ID of the subnets in the VPC that you want to connect the compilation job to for accessing the model in Amazon S3.
      description: 'The <a>VpcConfig</a> configuration object that specifies the VPC that you want the compilation jobs to connect to. For more information on controlling access to your Amazon S3 buckets used for compilation job, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/neo-vpc.html">Give Amazon SageMaker Compilation Jobs Access to Resources in Your Amazon VPC</a>.'
    StoppingCondition:
      type: object
      properties:
        MaxRuntimeInSeconds:
          $ref: '#/components/schemas/MaxRuntimeInSeconds'
          description: '<p>The maximum length of time, in seconds, that a training or compilation job can run.</p> <p>For compilation jobs, if the job does not complete during this time, you will receive a <code>TimeOut</code> error. We recommend starting with 900 seconds and increase as necessary based on your model.</p> <p>For all other jobs, if the job does not complete during this time, Amazon SageMaker ends the job. When <code>RetryStrategy</code> is specified in the job request, <code>MaxRuntimeInSeconds</code> specifies the maximum time for all of the attempts in total, not each individual attempt. The default value is 1 day. The maximum value is 28 days.</p>'
        MaxWaitTimeInSeconds:
          $ref: '#/components/schemas/MaxWaitTimeInSeconds'
          description: '<p>The maximum length of time, in seconds, that a managed Spot training job has to complete. It is the amount of time spent waiting for Spot capacity plus the amount of time the job can run. It must be equal to or greater than <code>MaxRuntimeInSeconds</code>. If the job does not complete during this time, Amazon SageMaker ends the job.</p> <p>When <code>RetryStrategy</code> is specified in the job request, <code>MaxWaitTimeInSeconds</code> specifies the maximum time for all of the attempts in total, not each individual attempt.</p>'
      description: '<p>Specifies a limit to how long a model training job, model compilation job, or hyperparameter tuning job can run. It also specifies how long a managed Spot training job has to complete. When the job reaches the time limit, Amazon SageMaker ends the training or compilation job. Use this API to cap model training costs.</p> <p>To stop a training job, Amazon SageMaker sends the algorithm the <code>SIGTERM</code> signal, which delays job termination for 120 seconds. Algorithms can use this 120-second window to save the model artifacts, so the results of training are not lost. </p> <p>The training algorithms provided by Amazon SageMaker automatically save the intermediate results of a model training job when possible. This attempt to save artifacts is only a best effort case as model might not be in a state from which it can be saved. For example, if training has just started, the model might not be ready to save. When saved, this intermediate data is a valid model artifact. You can use it to create a model with <code>CreateModel</code>.</p> <note> <p>The Neural Topic Model (NTM) currently does not support saving intermediate model artifacts. When training NTMs, make sure that the maximum runtime is sufficient for the training job to complete.</p> </note>'
    MonitoringJobDefinitionName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*$'
      minLength: 1
      maxLength: 63
    DataQualityBaselineConfig:
      type: object
      properties:
        BaseliningJobName:
          $ref: '#/components/schemas/ProcessingJobName'
          description: The name of the job that performs baselining for the data quality monitoring job.
        ConstraintsResource:
          $ref: '#/components/schemas/MonitoringConstraintsResource'
        StatisticsResource:
          $ref: '#/components/schemas/MonitoringStatisticsResource'
      description: Configuration for monitoring constraints and monitoring statistics. These baseline resources are compared against the results of the current job from the series of jobs scheduled to collect data periodically.
    DataQualityAppSpecification:
      type: object
      required:
        - ImageUri
      properties:
        ImageUri:
          $ref: '#/components/schemas/ImageUri'
          description: The container image that the data quality monitoring job runs.
        ContainerEntrypoint:
          $ref: '#/components/schemas/ContainerEntrypoint'
          description: The entrypoint for a container used to run a monitoring job.
        ContainerArguments:
          $ref: '#/components/schemas/MonitoringContainerArguments'
          description: The arguments to send to the container that the monitoring job runs.
        RecordPreprocessorSourceUri:
          $ref: '#/components/schemas/S3Uri'
          description: An Amazon S3 URI to a script that is called per row prior to running analysis. It can base64 decode the payload and convert it into a flatted json so that the built-in container can use the converted data. Applicable only for the built-in (first party) containers.
        PostAnalyticsProcessorSourceUri:
          $ref: '#/components/schemas/S3Uri'
          description: An Amazon S3 URI to a script that is called after analysis has been performed. Applicable only for the built-in (first party) containers.
        Environment:
          $ref: '#/components/schemas/MonitoringEnvironmentMap'
          description: Sets the environment variables in the container that the monitoring job runs.
      description: Information about the container that a data quality monitoring job runs.
    DataQualityJobInput:
      type: object
      required:
        - EndpointInput
      properties:
        EndpointInput:
          $ref: '#/components/schemas/EndpointInput'
      description: The input for the data quality monitoring job. Currently endpoints are supported for input.
    MonitoringOutputConfig:
      type: object
      required:
        - MonitoringOutputs
      properties:
        MonitoringOutputs:
          $ref: '#/components/schemas/MonitoringOutputs'
          description: Monitoring outputs for monitoring jobs. This is where the output of the periodic monitoring jobs is uploaded.
        KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
      description: The output configuration for monitoring jobs.
    MonitoringResources:
      type: object
      required:
        - ClusterConfig
      properties:
        ClusterConfig:
          $ref: '#/components/schemas/MonitoringClusterConfig'
          description: The configuration for the cluster resources used to run the processing job.
      description: Identifies the resources to deploy for a monitoring job.
    MonitoringNetworkConfig:
      type: object
      properties:
        EnableInterContainerTrafficEncryption:
          $ref: '#/components/schemas/Boolean'
          description: 'Whether to encrypt all communications between the instances used for the monitoring jobs. Choose <code>True</code> to encrypt communications. Encryption provides greater security for distributed jobs, but the processing might take longer.'
        EnableNetworkIsolation:
          $ref: '#/components/schemas/Boolean'
          description: Whether to allow inbound and outbound network calls to and from the containers used for the monitoring job.
        VpcConfig:
          $ref: '#/components/schemas/VpcConfig'
      description: The networking configuration for the monitoring job.
    MonitoringStoppingCondition:
      type: object
      required:
        - MaxRuntimeInSeconds
      properties:
        MaxRuntimeInSeconds:
          $ref: '#/components/schemas/MonitoringMaxRuntimeInSeconds'
          description: '<p>The maximum runtime allowed in seconds.</p> <note> <p>The <code>MaxRuntimeInSeconds</code> cannot exceed the frequency of the job. For data quality and model explainability, this can be up to 3600 seconds for an hourly schedule. For model bias and model quality hourly schedules, this can be up to 1800 seconds.</p> </note>'
      description: A time limit for how long the monitoring job is allowed to run before stopping.
    MonitoringJobDefinitionArn:
      type: string
      pattern: .*
      maxLength: 256
    DeviceFleetDescription:
      type: string
      pattern: '[\S\s]+'
      minLength: 1
      maxLength: 800
    EdgeOutputConfig:
      type: object
      required:
        - S3OutputLocation
      properties:
        S3OutputLocation:
          $ref: '#/components/schemas/S3Uri'
          description: The Amazon Simple Storage (S3) bucker URI.
        KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: 'The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that Amazon SageMaker uses to encrypt data on the storage volume after compilation job. If you don''t provide a KMS key ID, Amazon SageMaker uses the default KMS key for Amazon S3 for your role''s account.'
        PresetDeploymentType:
          $ref: '#/components/schemas/EdgePresetDeploymentType'
          description: The deployment type SageMaker Edge Manager will create. Currently only supports Amazon Web Services IoT Greengrass Version 2 components.
        PresetDeploymentConfig:
          $ref: '#/components/schemas/String'
          description: '<p>The configuration used to create deployment artifacts. Specify configuration options with a JSON string. The available configuration options for each type are:</p> <ul> <li> <p> <code>ComponentName</code> (optional) - Name of the GreenGrass V2 component. If not specified, the default name generated consists of "SagemakerEdgeManager" and the name of your SageMaker Edge Manager packaging job.</p> </li> <li> <p> <code>ComponentDescription</code> (optional) - Description of the component.</p> </li> <li> <p> <code>ComponentVersion</code> (optional) - The version of the component.</p> <note> <p>Amazon Web Services IoT Greengrass uses semantic versions for components. Semantic versions follow a<i> major.minor.patch</i> number system. For example, version 1.0.0 represents the first major release for a component. For more information, see the <a href="https://semver.org/">semantic version specification</a>.</p> </note> </li> <li> <p> <code>PlatformOS</code> (optional) - The name of the operating system for the platform. Supported platforms include Windows and Linux.</p> </li> <li> <p> <code>PlatformArchitecture</code> (optional) - The processor architecture for the platform. </p> <p>Supported architectures Windows include: Windows32_x86, Windows64_x64.</p> <p>Supported architectures for Linux include: Linux x86_64, Linux ARMV8.</p> </li> </ul>'
      description: The output configuration.
    EnableIotRoleAlias:
      type: boolean
    DomainName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}'
      maxLength: 63
    UserSettings:
      type: object
      properties:
        ExecutionRole:
          $ref: '#/components/schemas/RoleArn'
          description: The execution role for the user.
        SecurityGroups:
          $ref: '#/components/schemas/SecurityGroupIds'
          description: '<p>The security groups for the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.</p> <p>Optional when the <code>CreateDomain.AppNetworkAccessType</code> parameter is set to <code>PublicInternetOnly</code>.</p> <p>Required when the <code>CreateDomain.AppNetworkAccessType</code> parameter is set to <code>VpcOnly</code>.</p> <p>Amazon SageMaker adds a security group to allow NFS traffic from SageMaker Studio. Therefore, the number of security groups that you can specify is one less than the maximum number shown.</p>'
        SharingSettings:
          $ref: '#/components/schemas/SharingSettings'
          description: Specifies options for sharing SageMaker Studio notebooks.
        JupyterServerAppSettings:
          $ref: '#/components/schemas/JupyterServerAppSettings'
          description: The Jupyter server's app settings.
        KernelGatewayAppSettings:
          $ref: '#/components/schemas/KernelGatewayAppSettings'
          description: The kernel gateway app settings.
        TensorBoardAppSettings:
          $ref: '#/components/schemas/TensorBoardAppSettings'
          description: The TensorBoard app settings.
      description: '<p>A collection of settings that apply to users of Amazon SageMaker Studio. These settings are specified when the <code>CreateUserProfile</code> API is called, and as <code>DefaultUserSettings</code> when the <code>CreateDomain</code> API is called.</p> <p> <code>SecurityGroups</code> is aggregated when specified in both calls. For all other settings in <code>UserSettings</code>, the values specified in <code>CreateUserProfile</code> take precedence over those specified in <code>CreateDomain</code>.</p>'
    Subnets:
      type: array
      items:
        $ref: '#/components/schemas/SubnetId'
      minItems: 1
      maxItems: 16
    VpcId:
      type: string
      pattern: '[-0-9a-zA-Z]+'
      maxLength: 32
    DomainArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:domain/.*'
      maxLength: 256
    String1024:
      type: string
      maxLength: 1024
    EndpointConfigName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}'
      maxLength: 63
    ProductionVariantList:
      type: array
      items:
        $ref: '#/components/schemas/ProductionVariant'
      minItems: 1
      maxItems: 10
    DataCaptureConfig:
      type: object
      required:
        - InitialSamplingPercentage
        - DestinationS3Uri
        - CaptureOptions
      properties:
        EnableCapture:
          $ref: '#/components/schemas/EnableCapture'
          description: <p/>
        InitialSamplingPercentage:
          $ref: '#/components/schemas/SamplingPercentage'
          description: <p/>
        DestinationS3Uri:
          $ref: '#/components/schemas/DestinationS3Uri'
          description: <p/>
        KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: <p/>
        CaptureOptions:
          $ref: '#/components/schemas/CaptureOptionList'
          description: <p/>
        CaptureContentTypeHeader:
          $ref: '#/components/schemas/CaptureContentTypeHeader'
          description: <p/>
      description: <p/>
    EndpointConfigArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:endpoint-config/.*'
      minLength: 20
      maxLength: 2048
    EndpointName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}'
      maxLength: 63
    EndpointArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:endpoint/.*'
      minLength: 20
      maxLength: 2048
    ExperimentArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:experiment/.*'
      maxLength: 256
    FeatureGroupName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,63}'
      minLength: 1
      maxLength: 64
    FeatureName:
      type: string
      pattern: '^[a-zA-Z0-9]([-_]*[a-zA-Z0-9]){0,63}'
      minLength: 1
      maxLength: 64
    FeatureDefinitions:
      type: array
      items:
        $ref: '#/components/schemas/FeatureDefinition'
      minItems: 1
      maxItems: 2500
    OnlineStoreConfig:
      type: object
      properties:
        SecurityConfig:
          $ref: '#/components/schemas/OnlineStoreSecurityConfig'
          description: Use to specify KMS Key ID (<code>KMSKeyId</code>) for at-rest encryption of your <code>OnlineStore</code>.
        EnableOnlineStore:
          $ref: '#/components/schemas/Boolean'
          description: <p>Turn <code>OnlineStore</code> off by specifying <code>False</code> for the <code>EnableOnlineStore</code> flag. Turn <code>OnlineStore</code> on by specifying <code>True</code> for the <code>EnableOnlineStore</code> flag. </p> <p>The default value is <code>False</code>.</p>
      description: 'Use this to specify the Amazon Web Services Key Management Service (KMS) Key ID, or <code>KMSKeyId</code>, for at rest data encryption. You can turn <code>OnlineStore</code> on or off by specifying the <code>EnableOnlineStore</code> flag at General Assembly; the default value is <code>False</code>.'
    OfflineStoreConfig:
      type: object
      required:
        - S3StorageConfig
      properties:
        S3StorageConfig:
          $ref: '#/components/schemas/S3StorageConfig'
          description: The Amazon Simple Storage (Amazon S3) location of <code>OfflineStore</code>.
        DisableGlueTableCreation:
          $ref: '#/components/schemas/Boolean'
          description: Set to <code>True</code> to disable the automatic creation of an Amazon Web Services Glue table when configuring an <code>OfflineStore</code>.
        DataCatalogConfig:
          $ref: '#/components/schemas/DataCatalogConfig'
          description: 'The meta data of the Glue table that is autogenerated when an <code>OfflineStore</code> is created. '
      description: '<p>The configuration of an <code>OfflineStore</code>.</p> <p>Provide an <code>OfflineStoreConfig</code> in a request to <code>CreateFeatureGroup</code> to create an <code>OfflineStore</code>.</p> <p>To encrypt an <code>OfflineStore</code> using at rest data encryption, specify Amazon Web Services Key Management Service (KMS) key ID, or <code>KMSKeyId</code>, in <code>S3StorageConfig</code>.</p>'
    Description:
      type: string
      maxLength: 128
    FeatureGroupArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:feature-group/.*'
      maxLength: 256
    FlowDefinitionName:
      type: string
      pattern: '^[a-z0-9](-*[a-z0-9]){0,62}'
      minLength: 1
      maxLength: 63
    HumanLoopRequestSource:
      type: object
      required:
        - AwsManagedHumanLoopRequestSource
      properties:
        AwsManagedHumanLoopRequestSource:
          $ref: '#/components/schemas/AwsManagedHumanLoopRequestSource'
          description: 'Specifies whether Amazon Rekognition or Amazon Textract are used as the integration source. The default field settings and JSON parsing rules are different based on the integration source. Valid values:'
      description: Container for configuring the source of human task requests.
    HumanLoopActivationConfig:
      type: object
      required:
        - HumanLoopActivationConditionsConfig
      properties:
        HumanLoopActivationConditionsConfig:
          $ref: '#/components/schemas/HumanLoopActivationConditionsConfig'
          description: Container structure for defining under what conditions SageMaker creates a human loop.
      description: 'Provides information about how and under what conditions SageMaker creates a human loop. If <code>HumanLoopActivationConfig</code> is not given, then all requests go to humans.'
    HumanLoopConfig:
      type: object
      required:
        - WorkteamArn
        - HumanTaskUiArn
        - TaskTitle
        - TaskDescription
        - TaskCount
      properties:
        WorkteamArn:
          $ref: '#/components/schemas/WorkteamArn'
          description: 'Amazon Resource Name (ARN) of a team of workers. To learn more about the types of workforces and work teams you can create and use with Amazon A2I, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-workforce-management.html">Create and Manage Workforces</a>.'
        HumanTaskUiArn:
          $ref: '#/components/schemas/HumanTaskUiArn'
          description: '<p>The Amazon Resource Name (ARN) of the human task user interface.</p> <p>You can use standard HTML and Crowd HTML Elements to create a custom worker task template. You use this template to create a human task UI.</p> <p>To learn how to create a custom HTML template, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/a2i-custom-templates.html">Create Custom Worker Task Template</a>.</p> <p>To learn how to create a human task UI, which is a worker task template that can be used in a flow definition, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/a2i-worker-template-console.html">Create and Delete a Worker Task Templates</a>.</p>'
        TaskTitle:
          $ref: '#/components/schemas/FlowDefinitionTaskTitle'
          description: A title for the human worker task.
        TaskDescription:
          $ref: '#/components/schemas/FlowDefinitionTaskDescription'
          description: A description for the human worker task.
        TaskCount:
          $ref: '#/components/schemas/FlowDefinitionTaskCount'
          description: 'The number of distinct workers who will perform the same task on each object. For example, if <code>TaskCount</code> is set to <code>3</code> for an image classification labeling job, three workers will classify each input image. Increasing <code>TaskCount</code> can improve label accuracy.'
        TaskAvailabilityLifetimeInSeconds:
          $ref: '#/components/schemas/FlowDefinitionTaskAvailabilityLifetimeInSeconds'
          description: The length of time that a task remains available for review by human workers.
        TaskTimeLimitInSeconds:
          $ref: '#/components/schemas/FlowDefinitionTaskTimeLimitInSeconds'
          description: 'The amount of time that a worker has to complete a task. The default value is 3,600 seconds (1 hour).'
        TaskKeywords:
          $ref: '#/components/schemas/FlowDefinitionTaskKeywords'
          description: Keywords used to describe the task so that workers can discover the task.
        PublicWorkforceTaskPrice:
          $ref: '#/components/schemas/PublicWorkforceTaskPrice'
      description: Describes the work to be performed by human workers.
    FlowDefinitionOutputConfig:
      type: object
      required:
        - S3OutputPath
      properties:
        S3OutputPath:
          $ref: '#/components/schemas/S3Uri'
          description: '<p>The Amazon S3 path where the object containing human output will be made available.</p> <p>To learn more about the format of Amazon A2I output data, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/a2i-output-data.html">Amazon A2I Output Data</a>.</p>'
        KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: The Amazon Key Management Service (KMS) key ID for server-side encryption.
      description: Contains information about where human output will be stored.
    FlowDefinitionArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:flow-definition/.*'
      maxLength: 1024
    HumanTaskUiName:
      type: string
      pattern: '^[a-z0-9](-*[a-z0-9])*'
      minLength: 1
      maxLength: 63
    UiTemplate:
      type: object
      required:
        - Content
      properties:
        Content:
          $ref: '#/components/schemas/TemplateContent'
          description: The content of the Liquid template for the worker user interface.
      description: The Liquid template for the worker user interface.
    HumanTaskUiArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:human-task-ui/.*'
      maxLength: 1024
    HyperParameterTuningJobName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,31}'
      minLength: 1
      maxLength: 32
    HyperParameterTuningJobConfig:
      type: object
      required:
        - Strategy
        - ResourceLimits
      properties:
        Strategy:
          $ref: '#/components/schemas/HyperParameterTuningJobStrategyType'
          description: 'Specifies how hyperparameter tuning chooses the combinations of hyperparameter values to use for the training job it launches. To use the Bayesian search strategy, set this to <code>Bayesian</code>. To randomly search, set it to <code>Random</code>. For information about search strategies, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-how-it-works.html">How Hyperparameter Tuning Works</a>.'
        HyperParameterTuningJobObjective:
          $ref: '#/components/schemas/HyperParameterTuningJobObjective'
          description: The <a>HyperParameterTuningJobObjective</a> object that specifies the objective metric for this tuning job.
        ResourceLimits:
          $ref: '#/components/schemas/ResourceLimits'
          description: The <a>ResourceLimits</a> object that specifies the maximum number of training jobs and parallel training jobs for this tuning job.
        ParameterRanges:
          $ref: '#/components/schemas/ParameterRanges'
          description: The <a>ParameterRanges</a> object that specifies the ranges of hyperparameters that this tuning job searches.
        TrainingJobEarlyStoppingType:
          $ref: '#/components/schemas/TrainingJobEarlyStoppingType'
          description: '<p>Specifies whether to use early stopping for training jobs launched by the hyperparameter tuning job. This can be one of the following values (the default value is <code>OFF</code>):</p> <dl> <dt>OFF</dt> <dd> <p>Training jobs launched by the hyperparameter tuning job do not use early stopping.</p> </dd> <dt>AUTO</dt> <dd> <p>Amazon SageMaker stops training jobs launched by the hyperparameter tuning job when they are unlikely to perform better than previously completed training jobs. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-early-stopping.html">Stop Training Jobs Early</a>.</p> </dd> </dl>'
        TuningJobCompletionCriteria:
          $ref: '#/components/schemas/TuningJobCompletionCriteria'
          description: The tuning job's completion criteria.
      description: Configures a hyperparameter tuning job.
    HyperParameterTrainingJobDefinition:
      type: object
      required:
        - AlgorithmSpecification
        - RoleArn
        - OutputDataConfig
        - ResourceConfig
        - StoppingCondition
      properties:
        DefinitionName:
          $ref: '#/components/schemas/HyperParameterTrainingJobDefinitionName'
          description: The job definition name.
        TuningObjective:
          $ref: '#/components/schemas/HyperParameterTuningJobObjective'
        HyperParameterRanges:
          $ref: '#/components/schemas/ParameterRanges'
        StaticHyperParameters:
          $ref: '#/components/schemas/HyperParameters'
          description: Specifies the values of hyperparameters that do not change for the tuning job.
        AlgorithmSpecification:
          $ref: '#/components/schemas/HyperParameterAlgorithmSpecification'
          description: The <a>HyperParameterAlgorithmSpecification</a> object that specifies the resource algorithm to use for the training jobs that the tuning job launches.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of the IAM role associated with the training jobs that the tuning job launches.
        InputDataConfig:
          $ref: '#/components/schemas/InputDataConfig'
          description: An array of <a>Channel</a> objects that specify the input for the training jobs that the tuning job launches.
        VpcConfig:
          $ref: '#/components/schemas/VpcConfig'
          description: 'The <a>VpcConfig</a> object that specifies the VPC that you want the training jobs that this hyperparameter tuning job launches to connect to. Control access to and from your training container by configuring the VPC. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html">Protect Training Jobs by Using an Amazon Virtual Private Cloud</a>.'
        OutputDataConfig:
          $ref: '#/components/schemas/OutputDataConfig'
          description: Specifies the path to the Amazon S3 bucket where you store model artifacts from the training jobs that the tuning job launches.
        ResourceConfig:
          $ref: '#/components/schemas/ResourceConfig'
          description: '<p>The resources, including the compute instances and storage volumes, to use for the training jobs that the tuning job launches.</p> <p>Storage volumes store model artifacts and incremental states. Training algorithms might also use storage volumes for scratch space. If you want Amazon SageMaker to use the storage volume to store the training data, choose <code>File</code> as the <code>TrainingInputMode</code> in the algorithm specification. For distributed training algorithms, specify an instance count greater than 1.</p>'
        StoppingCondition:
          $ref: '#/components/schemas/StoppingCondition'
          description: 'Specifies a limit to how long a model hyperparameter training job can run. It also specifies how long a managed spot training job has to complete. When the job reaches the time limit, Amazon SageMaker ends the training job. Use this API to cap model training costs.'
        EnableNetworkIsolation:
          $ref: '#/components/schemas/Boolean'
          description: 'Isolates the training container. No inbound or outbound network calls can be made, except for calls between peers within a training cluster for distributed training. If network isolation is used for training jobs that are configured to use a VPC, Amazon SageMaker downloads and uploads customer data and model artifacts through the specified VPC, but the training container does not have network access.'
        EnableInterContainerTrafficEncryption:
          $ref: '#/components/schemas/Boolean'
          description: 'To encrypt all communications between ML compute instances in distributed training, choose <code>True</code>. Encryption provides greater security for distributed training, but training might take longer. How long it takes depends on the amount of communication between compute instances, especially if you use a deep learning algorithm in distributed training.'
        EnableManagedSpotTraining:
          $ref: '#/components/schemas/Boolean'
          description: A Boolean indicating whether managed spot training is enabled (<code>True</code>) or not (<code>False</code>).
        CheckpointConfig:
          $ref: '#/components/schemas/CheckpointConfig'
        RetryStrategy:
          $ref: '#/components/schemas/RetryStrategy'
          description: The number of times to retry the job when the job fails due to an <code>InternalServerError</code>.
      description: Defines the training jobs launched by a hyperparameter tuning job.
    HyperParameterTrainingJobDefinitions:
      type: array
      items:
        $ref: '#/components/schemas/HyperParameterTrainingJobDefinition'
      minItems: 1
      maxItems: 10
    HyperParameterTuningJobWarmStartConfig:
      type: object
      required:
        - ParentHyperParameterTuningJobs
        - WarmStartType
      properties:
        ParentHyperParameterTuningJobs:
          $ref: '#/components/schemas/ParentHyperParameterTuningJobs'
          description: '<p>An array of hyperparameter tuning jobs that are used as the starting point for the new hyperparameter tuning job. For more information about warm starting a hyperparameter tuning job, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-warm-start.html">Using a Previous Hyperparameter Tuning Job as a Starting Point</a>.</p> <p>Hyperparameter tuning jobs created before October 1, 2018 cannot be used as parent jobs for warm start tuning jobs.</p>'
        WarmStartType:
          $ref: '#/components/schemas/HyperParameterTuningJobWarmStartType'
          description: '<p>Specifies one of the following:</p> <dl> <dt>IDENTICAL_DATA_AND_ALGORITHM</dt> <dd> <p>The new hyperparameter tuning job uses the same input data and training image as the parent tuning jobs. You can change the hyperparameter ranges to search and the maximum number of training jobs that the hyperparameter tuning job launches. You cannot use a new version of the training algorithm, unless the changes in the new version do not affect the algorithm itself. For example, changes that improve logging or adding support for a different data format are allowed. You can also change hyperparameters from tunable to static, and from static to tunable, but the total number of static plus tunable hyperparameters must remain the same as it is in all parent jobs. The objective metric for the new tuning job must be the same as for all parent jobs.</p> </dd> <dt>TRANSFER_LEARNING</dt> <dd> <p>The new hyperparameter tuning job can include input data, hyperparameter ranges, maximum number of concurrent training jobs, and maximum number of training jobs that are different than those of its parent hyperparameter tuning jobs. The training image can also be a different version from the version used in the parent hyperparameter tuning job. You can also change hyperparameters from tunable to static, and from static to tunable, but the total number of static plus tunable hyperparameters must remain the same as it is in all parent jobs. The objective metric for the new tuning job must be the same as for all parent jobs.</p> </dd> </dl>'
      description: '<p>Specifies the configuration for a hyperparameter tuning job that uses one or more previous hyperparameter tuning jobs as a starting point. The results of previous tuning jobs are used to inform which combinations of hyperparameters to search over in the new tuning job.</p> <p>All training jobs launched by the new hyperparameter tuning job are evaluated by using the objective metric, and the training job that performs the best is compared to the best training jobs from the parent tuning jobs. From these, the training job that performs the best as measured by the objective metric is returned as the overall best training job.</p> <note> <p>All training jobs launched by parent hyperparameter tuning jobs and the new hyperparameter tuning jobs count against the limit of training jobs for the tuning job.</p> </note>'
    HyperParameterTuningJobArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:hyper-parameter-tuning-job/.*'
      maxLength: 256
    ImageDescription:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 512
    ImageDisplayName:
      type: string
      pattern: ^\S(.*\S)?$
      minLength: 1
      maxLength: 128
    ImageName:
      type: string
      pattern: '^[a-zA-Z0-9]([-.]?[a-zA-Z0-9]){0,62}$'
      minLength: 1
      maxLength: 63
    ImageArn:
      type: string
      pattern: '^arn:aws(-[\w]+)*:sagemaker:.+:[0-9]{12}:image/[a-z0-9]([-.]?[a-z0-9])*$'
      maxLength: 256
    ImageBaseImage:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 255
    ImageVersionArn:
      type: string
      pattern: '^arn:aws(-[\w]+)*:sagemaker:.+:[0-9]{12}:image-version/[a-z0-9]([-.]?[a-z0-9])*/[0-9]+$'
      maxLength: 256
    LabelingJobName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}'
      minLength: 1
      maxLength: 63
    LabelAttributeName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,126}'
      minLength: 1
      maxLength: 127
    LabelingJobInputConfig:
      type: object
      required:
        - DataSource
      properties:
        DataSource:
          $ref: '#/components/schemas/LabelingJobDataSource'
          description: The location of the input data.
        DataAttributes:
          $ref: '#/components/schemas/LabelingJobDataAttributes'
          description: Attributes of the data specified by the customer.
      description: Input configuration information for a labeling job.
    LabelingJobOutputConfig:
      type: object
      required:
        - S3OutputPath
      properties:
        S3OutputPath:
          $ref: '#/components/schemas/S3Uri'
          description: The Amazon S3 location to write output data.
        KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: '<p>The Amazon Web Services Key Management Service ID of the key used to encrypt the output data, if any.</p> <p>If you provide your own KMS key ID, you must add the required permissions to your KMS key described in <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-security-permission.html#sms-security-kms-permissions">Encrypt Output Data and Storage Volume with Amazon Web Services KMS</a>.</p> <p>If you don''t provide a KMS key ID, Amazon SageMaker uses the default Amazon Web Services KMS key for Amazon S3 for your role''s account to encrypt your output data.</p> <p>If you use a bucket policy with an <code>s3:PutObject</code> permission that only allows objects with server-side encryption, set the condition key of <code>s3:x-amz-server-side-encryption</code> to <code>"aws:kms"</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html">KMS-Managed Encryption Keys</a> in the <i>Amazon Simple Storage Service Developer Guide.</i> </p>'
        SnsTopicArn:
          $ref: '#/components/schemas/SnsTopicArn'
          description: '<p>An Amazon Simple Notification Service (Amazon SNS) output topic ARN. Provide a <code>SnsTopicArn</code> if you want to do real time chaining to another streaming job and receive an Amazon SNS notifications each time a data object is submitted by a worker.</p> <p>If you provide an <code>SnsTopicArn</code> in <code>OutputConfig</code>, when workers complete labeling tasks, Ground Truth will send labeling task output data to the SNS output topic you specify here. </p> <p>To learn more, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-streaming-labeling-job.html#sms-streaming-how-it-works-output-data">Receive Output Data from a Streaming Labeling Job</a>. </p>'
      description: Output configuration information for a labeling job.
    LabelingJobStoppingConditions:
      type: object
      properties:
        MaxHumanLabeledObjectCount:
          $ref: '#/components/schemas/MaxHumanLabeledObjectCount'
          description: The maximum number of objects that can be labeled by human workers.
        MaxPercentageOfInputDatasetLabeled:
          $ref: '#/components/schemas/MaxPercentageOfInputDatasetLabeled'
          description: The maximum number of input data objects that should be labeled.
      description: '<p>A set of conditions for stopping a labeling job. If any of the conditions are met, the job is automatically stopped. You can use these conditions to control the cost of data labeling.</p> <note> <p>Labeling jobs fail after 30 days with an appropriate client error message.</p> </note>'
    LabelingJobAlgorithmsConfig:
      type: object
      required:
        - LabelingJobAlgorithmSpecificationArn
      properties:
        LabelingJobAlgorithmSpecificationArn:
          $ref: '#/components/schemas/LabelingJobAlgorithmSpecificationArn'
          description: '<p>Specifies the Amazon Resource Name (ARN) of the algorithm used for auto-labeling. You must select one of the following ARNs:</p> <ul> <li> <p> <i>Image classification</i> </p> <p> <code>arn:aws:sagemaker:<i>region</i>:027400017018:labeling-job-algorithm-specification/image-classification</code> </p> </li> <li> <p> <i>Text classification</i> </p> <p> <code>arn:aws:sagemaker:<i>region</i>:027400017018:labeling-job-algorithm-specification/text-classification</code> </p> </li> <li> <p> <i>Object detection</i> </p> <p> <code>arn:aws:sagemaker:<i>region</i>:027400017018:labeling-job-algorithm-specification/object-detection</code> </p> </li> <li> <p> <i>Semantic Segmentation</i> </p> <p> <code>arn:aws:sagemaker:<i>region</i>:027400017018:labeling-job-algorithm-specification/semantic-segmentation</code> </p> </li> </ul>'
        InitialActiveLearningModelArn:
          $ref: '#/components/schemas/ModelArn'
          description: 'At the end of an auto-label job Ground Truth sends the Amazon Resource Name (ARN) of the final model used for auto-labeling. You can use this model as the starting point for subsequent similar jobs by providing the ARN of the model here. '
        LabelingJobResourceConfig:
          $ref: '#/components/schemas/LabelingJobResourceConfig'
          description: Provides configuration information for a labeling job.
      description: Provides configuration information for auto-labeling of your data objects. A <code>LabelingJobAlgorithmsConfig</code> object must be supplied in order to use auto-labeling.
    HumanTaskConfig:
      type: object
      required:
        - WorkteamArn
        - UiConfig
        - PreHumanTaskLambdaArn
        - TaskTitle
        - TaskDescription
        - NumberOfHumanWorkersPerDataObject
        - TaskTimeLimitInSeconds
        - AnnotationConsolidationConfig
      properties:
        WorkteamArn:
          $ref: '#/components/schemas/WorkteamArn'
          description: The Amazon Resource Name (ARN) of the work team assigned to complete the tasks.
        UiConfig:
          $ref: '#/components/schemas/UiConfig'
          description: Information about the user interface that workers use to complete the labeling task.
        PreHumanTaskLambdaArn:
          $ref: '#/components/schemas/LambdaFunctionArn'
          description: '<p>The Amazon Resource Name (ARN) of a Lambda function that is run before a data object is sent to a human worker. Use this function to provide input to a custom labeling job.</p> <p>For <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-task-types.html">built-in task types</a>, use one of the following Amazon SageMaker Ground Truth Lambda function ARNs for <code>PreHumanTaskLambdaArn</code>. For custom labeling workflows, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-custom-templates-step3.html#sms-custom-templates-step3-prelambda">Pre-annotation Lambda</a>. </p> <p> <b>Bounding box</b> - Finds the most similar boxes from different workers based on the Jaccard index of the boxes.</p> <ul> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:PRE-BoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:PRE-BoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:PRE-BoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:PRE-BoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:PRE-BoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:PRE-BoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:PRE-BoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:PRE-BoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:PRE-BoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:PRE-BoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:PRE-BoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:PRE-BoundingBox</code> </p> </li> </ul> <p> <b>Image classification</b> - Uses a variant of the Expectation Maximization approach to estimate the true class of an image based on annotations from individual workers.</p> <ul> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:PRE-ImageMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:PRE-ImageMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:PRE-ImageMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:PRE-ImageMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:PRE-ImageMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:PRE-ImageMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:PRE-ImageMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:PRE-ImageMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:PRE-ImageMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:PRE-ImageMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:PRE-ImageMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:PRE-ImageMultiClass</code> </p> </li> </ul> <p> <b>Multi-label image classification</b> - Uses a variant of the Expectation Maximization approach to estimate the true classes of an image based on annotations from individual workers.</p> <ul> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:PRE-ImageMultiClassMultiLabel</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:PRE-ImageMultiClassMultiLabel</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:PRE-ImageMultiClassMultiLabel</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:PRE-ImageMultiClassMultiLabel</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:PRE-ImageMultiClassMultiLabel</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:PRE-ImageMultiClassMultiLabel</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:PRE-ImageMultiClassMultiLabel</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:PRE-ImageMultiClassMultiLabel</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:PRE-ImageMultiClassMultiLabel</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:PRE-ImageMultiClassMultiLabel</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:PRE-ImageMultiClassMultiLabel</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:PRE-ImageMultiClassMultiLabel</code> </p> </li> </ul> <p> <b>Semantic segmentation</b> - Treats each pixel in an image as a multi-class classification and treats pixel annotations from workers as "votes" for the correct label.</p> <ul> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:PRE-SemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:PRE-SemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:PRE-SemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:PRE-SemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:PRE-SemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:PRE-SemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:PRE-SemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:PRE-SemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:PRE-SemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:PRE-SemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:PRE-SemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:PRE-SemanticSegmentation</code> </p> </li> </ul> <p> <b>Text classification</b> - Uses a variant of the Expectation Maximization approach to estimate the true class of text based on annotations from individual workers.</p> <ul> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:PRE-TextMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:PRE-TextMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:PRE-TextMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:PRE-TextMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:PRE-TextMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:PRE-TextMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:PRE-TextMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:PRE-TextMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:PRE-TextMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:PRE-TextMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:PRE-TextMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:PRE-TextMultiClass</code> </p> </li> </ul> <p> <b>Multi-label text classification</b> - Uses a variant of the Expectation Maximization approach to estimate the true classes of text based on annotations from individual workers.</p> <ul> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:PRE-TextMultiClassMultiLabel</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:PRE-TextMultiClassMultiLabel</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:PRE-TextMultiClassMultiLabel</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:PRE-TextMultiClassMultiLabel</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:PRE-TextMultiClassMultiLabel</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:PRE-TextMultiClassMultiLabel</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:PRE-TextMultiClassMultiLabel</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:PRE-TextMultiClassMultiLabel</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:PRE-TextMultiClassMultiLabel</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:PRE-TextMultiClassMultiLabel</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:PRE-TextMultiClassMultiLabel</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:PRE-TextMultiClassMultiLabel</code> </p> </li> </ul> <p> <b>Named entity recognition</b> - Groups similar selections and calculates aggregate boundaries, resolving to most-assigned label.</p> <ul> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:PRE-NamedEntityRecognition</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:PRE-NamedEntityRecognition</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:PRE-NamedEntityRecognition</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:PRE-NamedEntityRecognition</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:PRE-NamedEntityRecognition</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:PRE-NamedEntityRecognition</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:PRE-NamedEntityRecognition</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:PRE-NamedEntityRecognition</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:PRE-NamedEntityRecognition</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:PRE-NamedEntityRecognition</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:PRE-NamedEntityRecognition</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:PRE-NamedEntityRecognition</code> </p> </li> </ul> <p> <b>Video Classification</b> - Use this task type when you need workers to classify videos using predefined labels that you specify. Workers are shown videos and are asked to choose one label for each video.</p> <ul> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:PRE-VideoMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:PRE-VideoMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:PRE-VideoMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:PRE-VideoMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:PRE-VideoMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:PRE-VideoMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:PRE-VideoMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:PRE-VideoMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:PRE-VideoMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:PRE-VideoMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:PRE-VideoMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:PRE-VideoMultiClass</code> </p> </li> </ul> <p> <b>Video Frame Object Detection</b> - Use this task type to have workers identify and locate objects in a sequence of video frames (images extracted from a video) using bounding boxes. For example, you can use this task to ask workers to identify and localize various objects in a series of video frames, such as cars, bikes, and pedestrians.</p> <ul> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:PRE-VideoObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:PRE-VideoObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:PRE-VideoObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:PRE-VideoObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:PRE-VideoObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:PRE-VideoObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:PRE-VideoObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:PRE-VideoObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:PRE-VideoObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:PRE-VideoObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:PRE-VideoObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:PRE-VideoObjectDetection</code> </p> </li> </ul> <p> <b>Video Frame Object Tracking</b> - Use this task type to have workers track the movement of objects in a sequence of video frames (images extracted from a video) using bounding boxes. For example, you can use this task to ask workers to track the movement of objects, such as cars, bikes, and pedestrians. </p> <ul> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:PRE-VideoObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:PRE-VideoObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:PRE-VideoObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:PRE-VideoObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:PRE-VideoObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:PRE-VideoObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:PRE-VideoObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:PRE-VideoObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:PRE-VideoObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:PRE-VideoObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:PRE-VideoObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:PRE-VideoObjectTracking</code> </p> </li> </ul> <p> <b>3D Point Cloud Modalities</b> </p> <p>Use the following pre-annotation lambdas for 3D point cloud labeling modality tasks. See <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-point-cloud-task-types.html">3D Point Cloud Task types </a> to learn more. </p> <p> <b>3D Point Cloud Object Detection</b> - Use this task type when you want workers to classify objects in a 3D point cloud by drawing 3D cuboids around objects. For example, you can use this task type to ask workers to identify different types of objects in a point cloud, such as cars, bikes, and pedestrians.</p> <ul> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:PRE-3DPointCloudObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:PRE-3DPointCloudObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:PRE-3DPointCloudObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:PRE-3DPointCloudObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:PRE-3DPointCloudObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:PRE-3DPointCloudObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:PRE-3DPointCloudObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:PRE-3DPointCloudObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:PRE-3DPointCloudObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:PRE-3DPointCloudObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:PRE-3DPointCloudObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:PRE-3DPointCloudObjectDetection</code> </p> </li> </ul> <p> <b>3D Point Cloud Object Tracking</b> - Use this task type when you want workers to draw 3D cuboids around objects that appear in a sequence of 3D point cloud frames. For example, you can use this task type to ask workers to track the movement of vehicles across multiple point cloud frames. </p> <ul> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:PRE-3DPointCloudObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:PRE-3DPointCloudObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:PRE-3DPointCloudObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:PRE-3DPointCloudObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:PRE-3DPointCloudObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:PRE-3DPointCloudObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:PRE-3DPointCloudObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:PRE-3DPointCloudObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:PRE-3DPointCloudObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:PRE-3DPointCloudObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:PRE-3DPointCloudObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:PRE-3DPointCloudObjectTracking</code> </p> </li> </ul> <p> <b>3D Point Cloud Semantic Segmentation</b> - Use this task type when you want workers to create a point-level semantic segmentation masks by painting objects in a 3D point cloud using different colors where each color is assigned to one of the classes you specify.</p> <ul> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:PRE-3DPointCloudSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:PRE-3DPointCloudSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:PRE-3DPointCloudSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:PRE-3DPointCloudSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:PRE-3DPointCloudSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:PRE-3DPointCloudSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:PRE-3DPointCloudSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:PRE-3DPointCloudSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:PRE-3DPointCloudSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:PRE-3DPointCloudSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:PRE-3DPointCloudSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:PRE-3DPointCloudSemanticSegmentation</code> </p> </li> </ul> <p> <b>Use the following ARNs for Label Verification and Adjustment Jobs</b> </p> <p>Use label verification and adjustment jobs to review and adjust labels. To learn more, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-verification-data.html">Verify and Adjust Labels </a>.</p> <p> <b>Bounding box verification</b> - Uses a variant of the Expectation Maximization approach to estimate the true class of verification judgement for bounding box labels based on annotations from individual workers.</p> <ul> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:PRE-VerificationBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:PRE-VerificationBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:PRE-VerificationBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:PRE-VerificationBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:PRE-VerificationBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:PRE-VerificationBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:PRE-VerificationBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:PRE-VerificationBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:PRE-VerificationBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:PRE-VerificationBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:PRE-VerificationBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:PRE-VerificationBoundingBox</code> </p> </li> </ul> <p> <b>Bounding box adjustment</b> - Finds the most similar boxes from different workers based on the Jaccard index of the adjusted annotations.</p> <ul> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:PRE-AdjustmentBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:PRE-AdjustmentBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:PRE-AdjustmentBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:PRE-AdjustmentBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:PRE-AdjustmentBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:PRE-AdjustmentBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:PRE-AdjustmentBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:PRE-AdjustmentBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:PRE-AdjustmentBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:PRE-AdjustmentBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:PRE-AdjustmentBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:PRE-AdjustmentBoundingBox</code> </p> </li> </ul> <p> <b>Semantic segmentation verification</b> - Uses a variant of the Expectation Maximization approach to estimate the true class of verification judgment for semantic segmentation labels based on annotations from individual workers.</p> <ul> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:PRE-VerificationSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:PRE-VerificationSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:PRE-VerificationSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:PRE-VerificationSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:PRE-VerificationSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:PRE-VerificationSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:PRE-VerificationSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:PRE-VerificationSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:PRE-VerificationSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:PRE-VerificationSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:PRE-VerificationSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:PRE-VerificationSemanticSegmentation</code> </p> </li> </ul> <p> <b>Semantic segmentation adjustment</b> - Treats each pixel in an image as a multi-class classification and treats pixel adjusted annotations from workers as "votes" for the correct label.</p> <ul> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:PRE-AdjustmentSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:PRE-AdjustmentSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:PRE-AdjustmentSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:PRE-AdjustmentSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:PRE-AdjustmentSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:PRE-AdjustmentSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:PRE-AdjustmentSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:PRE-AdjustmentSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:PRE-AdjustmentSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:PRE-AdjustmentSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:PRE-AdjustmentSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:PRE-AdjustmentSemanticSegmentation</code> </p> </li> </ul> <p> <b>Video Frame Object Detection Adjustment</b> - Use this task type when you want workers to adjust bounding boxes that workers have added to video frames to classify and localize objects in a sequence of video frames.</p> <ul> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:PRE-AdjustmentVideoObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:PRE-AdjustmentVideoObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:PRE-AdjustmentVideoObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:PRE-AdjustmentVideoObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:PRE-AdjustmentVideoObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:PRE-AdjustmentVideoObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:PRE-AdjustmentVideoObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:PRE-AdjustmentVideoObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:PRE-AdjustmentVideoObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:PRE-AdjustmentVideoObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:PRE-AdjustmentVideoObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:PRE-AdjustmentVideoObjectDetection</code> </p> </li> </ul> <p> <b>Video Frame Object Tracking Adjustment</b> - Use this task type when you want workers to adjust bounding boxes that workers have added to video frames to track object movement across a sequence of video frames.</p> <ul> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:PRE-AdjustmentVideoObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:PRE-AdjustmentVideoObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:PRE-AdjustmentVideoObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:PRE-AdjustmentVideoObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:PRE-AdjustmentVideoObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:PRE-AdjustmentVideoObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:PRE-AdjustmentVideoObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:PRE-AdjustmentVideoObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:PRE-AdjustmentVideoObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:PRE-AdjustmentVideoObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:PRE-AdjustmentVideoObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:PRE-AdjustmentVideoObjectTracking</code> </p> </li> </ul> <p> <b>3D point cloud object detection adjustment</b> - Adjust 3D cuboids in a point cloud frame. </p> <ul> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:PRE-Adjustment3DPointCloudObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:PRE-Adjustment3DPointCloudObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:PRE-Adjustment3DPointCloudObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:PRE-Adjustment3DPointCloudObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:PRE-Adjustment3DPointCloudObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:PRE-Adjustment3DPointCloudObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:PRE-Adjustment3DPointCloudObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:PRE-Adjustment3DPointCloudObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:PRE-Adjustment3DPointCloudObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:PRE-Adjustment3DPointCloudObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:PRE-Adjustment3DPointCloudObjectDetection</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:PRE-Adjustment3DPointCloudObjectDetection</code> </p> </li> </ul> <p> <b>3D point cloud object tracking adjustment</b> - Adjust 3D cuboids across a sequence of point cloud frames. </p> <ul> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:PRE-Adjustment3DPointCloudObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:PRE-Adjustment3DPointCloudObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:PRE-Adjustment3DPointCloudObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:PRE-Adjustment3DPointCloudObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:PRE-Adjustment3DPointCloudObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:PRE-Adjustment3DPointCloudObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:PRE-Adjustment3DPointCloudObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:PRE-Adjustment3DPointCloudObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:PRE-Adjustment3DPointCloudObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:PRE-Adjustment3DPointCloudObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:PRE-Adjustment3DPointCloudObjectTracking</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:PRE-Adjustment3DPointCloudObjectTracking</code> </p> </li> </ul> <p> <b>3D point cloud semantic segmentation adjustment</b> - Adjust semantic segmentation masks in a 3D point cloud. </p> <ul> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:PRE-Adjustment3DPointCloudSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:PRE-Adjustment3DPointCloudSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:PRE-Adjustment3DPointCloudSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:PRE-Adjustment3DPointCloudSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:PRE-Adjustment3DPointCloudSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:PRE-Adjustment3DPointCloudSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:PRE-Adjustment3DPointCloudSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:PRE-Adjustment3DPointCloudSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:PRE-Adjustment3DPointCloudSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:PRE-Adjustment3DPointCloudSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:PRE-Adjustment3DPointCloudSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:PRE-Adjustment3DPointCloudSemanticSegmentation</code> </p> </li> </ul>'
        TaskKeywords:
          $ref: '#/components/schemas/TaskKeywords'
          description: Keywords used to describe the task so that workers on Amazon Mechanical Turk can discover the task.
        TaskTitle:
          $ref: '#/components/schemas/TaskTitle'
          description: A title for the task for your human workers.
        TaskDescription:
          $ref: '#/components/schemas/TaskDescription'
          description: A description of the task for your human workers.
        NumberOfHumanWorkersPerDataObject:
          $ref: '#/components/schemas/NumberOfHumanWorkersPerDataObject'
          description: 'The number of human workers that will label an object. '
        TaskTimeLimitInSeconds:
          $ref: '#/components/schemas/TaskTimeLimitInSeconds'
          description: '<p>The amount of time that a worker has to complete a task. </p> <p>If you create a custom labeling job, the maximum value for this parameter is 8 hours (28,800 seconds).</p> <p>If you create a labeling job using a <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-task-types.html">built-in task type</a> the maximum for this parameter depends on the task type you use:</p> <ul> <li> <p>For <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-label-images.html">image</a> and <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-label-text.html">text</a> labeling jobs, the maximum is 8 hours (28,800 seconds).</p> </li> <li> <p>For <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-point-cloud.html">3D point cloud</a> and <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-video.html">video frame</a> labeling jobs, the maximum is 7 days (604,800 seconds). If you want to change these limits, contact Amazon Web Services Support.</p> </li> </ul>'
        TaskAvailabilityLifetimeInSeconds:
          $ref: '#/components/schemas/TaskAvailabilityLifetimeInSeconds'
          description: '<p>The length of time that a task remains available for labeling by human workers. The default and maximum values for this parameter depend on the type of workforce you use.</p> <ul> <li> <p>If you choose the Amazon Mechanical Turk workforce, the maximum is 12 hours (43,200 seconds). The default is 6 hours (21,600 seconds).</p> </li> <li> <p>If you choose a private or vendor workforce, the default value is 10 days (864,000 seconds). For most users, the maximum is also 10 days. If you want to change this limit, contact Amazon Web Services Support.</p> </li> </ul>'
        MaxConcurrentTaskCount:
          $ref: '#/components/schemas/MaxConcurrentTaskCount'
          description: Defines the maximum number of data objects that can be labeled by human workers at the same time. Also referred to as batch size. Each object may have more than one worker at one time. The default value is 1000 objects.
        AnnotationConsolidationConfig:
          $ref: '#/components/schemas/AnnotationConsolidationConfig'
          description: Configures how labels are consolidated across human workers.
        PublicWorkforceTaskPrice:
          $ref: '#/components/schemas/PublicWorkforceTaskPrice'
          description: The price that you pay for each task performed by an Amazon Mechanical Turk worker.
      description: Information required for human workers to complete a labeling task.
    LabelingJobArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:labeling-job/.*'
      maxLength: 2048
    ModelBiasBaselineConfig:
      type: object
      properties:
        BaseliningJobName:
          $ref: '#/components/schemas/ProcessingJobName'
          description: The name of the baseline model bias job.
        ConstraintsResource:
          $ref: '#/components/schemas/MonitoringConstraintsResource'
      description: The configuration for a baseline model bias job.
    ModelBiasAppSpecification:
      type: object
      required:
        - ImageUri
        - ConfigUri
      properties:
        ImageUri:
          $ref: '#/components/schemas/ImageUri'
          description: The container image to be run by the model bias job.
        ConfigUri:
          $ref: '#/components/schemas/S3Uri'
          description: 'JSON formatted S3 file that defines bias parameters. For more information on this JSON configuration file, see <a href="https://docs.aws.amazon.com/sagemaker/latest/json-bias-parameter-config.html">Configure bias parameters</a>.'
        Environment:
          $ref: '#/components/schemas/MonitoringEnvironmentMap'
          description: Sets the environment variables in the Docker container.
      description: Docker container image configuration object for the model bias job.
    ModelBiasJobInput:
      type: object
      required:
        - EndpointInput
        - GroundTruthS3Input
      properties:
        EndpointInput:
          $ref: '#/components/schemas/EndpointInput'
        GroundTruthS3Input:
          $ref: '#/components/schemas/MonitoringGroundTruthS3Input'
          description: Location of ground truth labels to use in model bias job.
      description: Inputs for the model bias job.
    ModelExplainabilityBaselineConfig:
      type: object
      properties:
        BaseliningJobName:
          $ref: '#/components/schemas/ProcessingJobName'
          description: The name of the baseline model explainability job.
        ConstraintsResource:
          $ref: '#/components/schemas/MonitoringConstraintsResource'
      description: The configuration for a baseline model explainability job.
    ModelExplainabilityAppSpecification:
      type: object
      required:
        - ImageUri
        - ConfigUri
      properties:
        ImageUri:
          $ref: '#/components/schemas/ImageUri'
          description: The container image to be run by the model explainability job.
        ConfigUri:
          $ref: '#/components/schemas/S3Uri'
          description: 'JSON formatted S3 file that defines explainability parameters. For more information on this JSON configuration file, see <a href="https://docs.aws.amazon.com/sagemaker/latest/json-model-explainability-parameter-config.html">Configure model explainability parameters</a>.'
        Environment:
          $ref: '#/components/schemas/MonitoringEnvironmentMap'
          description: Sets the environment variables in the Docker container.
      description: Docker container image configuration object for the model explainability job.
    ModelExplainabilityJobInput:
      type: object
      required:
        - EndpointInput
      properties:
        EndpointInput:
          $ref: '#/components/schemas/EndpointInput'
      description: Inputs for the model explainability job.
    ModelName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
      maxLength: 63
    InferenceExecutionConfig:
      type: object
      required:
        - Mode
      properties:
        Mode:
          $ref: '#/components/schemas/InferenceExecutionMode'
          description: <p>How containers in a multi-container are run. The following values are valid.</p> <ul> <li> <p> <code>SERIAL</code> - Containers run as a serial pipeline.</p> </li> <li> <p> <code>DIRECT</code> - Only the individual container that you specify is run.</p> </li> </ul>
      description: Specifies details about how containers in a multi-container endpoint are run.
    ModelArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:model/.*'
      minLength: 20
      maxLength: 2048
    ModelPackageGroupArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:model-package-group/.*'
      minLength: 1
      maxLength: 2048
    ModelPackageValidationSpecification:
      type: object
      required:
        - ValidationRole
        - ValidationProfiles
      properties:
        ValidationRole:
          $ref: '#/components/schemas/RoleArn'
          description: The IAM roles to be used for the validation of the model package.
        ValidationProfiles:
          $ref: '#/components/schemas/ModelPackageValidationProfiles'
          description: 'An array of <code>ModelPackageValidationProfile</code> objects, each of which specifies a batch transform job that Amazon SageMaker runs to validate your model package.'
      description: Specifies batch transform jobs that Amazon SageMaker runs to validate your model package.
    SourceAlgorithmSpecification:
      type: object
      required:
        - SourceAlgorithms
      properties:
        SourceAlgorithms:
          $ref: '#/components/schemas/SourceAlgorithmList'
          description: A list of the algorithms that were used to create a model package.
      description: A list of algorithms that were used to create a model package.
    ModelApprovalStatus:
      type: string
      enum:
        - Approved
        - Rejected
        - PendingManualApproval
    ModelMetrics:
      type: object
      properties:
        ModelQuality:
          $ref: '#/components/schemas/ModelQuality'
          description: Metrics that measure the quality of a model.
        ModelDataQuality:
          $ref: '#/components/schemas/ModelDataQuality'
          description: Metrics that measure the quality of the input data for a model.
        Bias:
          $ref: '#/components/schemas/Bias'
          description: Metrics that measure bais in a model.
        Explainability:
          $ref: '#/components/schemas/Explainability'
          description: Metrics that help explain a model.
      description: Contains metrics captured from a model.
    ModelPackageArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:model-package/.*'
      minLength: 1
      maxLength: 2048
    ModelQualityBaselineConfig:
      type: object
      properties:
        BaseliningJobName:
          $ref: '#/components/schemas/ProcessingJobName'
          description: The name of the job that performs baselining for the monitoring job.
        ConstraintsResource:
          $ref: '#/components/schemas/MonitoringConstraintsResource'
      description: Configuration for monitoring constraints and monitoring statistics. These baseline resources are compared against the results of the current job from the series of jobs scheduled to collect data periodically.
    ModelQualityAppSpecification:
      type: object
      required:
        - ImageUri
      properties:
        ImageUri:
          $ref: '#/components/schemas/ImageUri'
          description: The address of the container image that the monitoring job runs.
        ContainerEntrypoint:
          $ref: '#/components/schemas/ContainerEntrypoint'
          description: Specifies the entrypoint for a container that the monitoring job runs.
        ContainerArguments:
          $ref: '#/components/schemas/MonitoringContainerArguments'
          description: An array of arguments for the container used to run the monitoring job.
        RecordPreprocessorSourceUri:
          $ref: '#/components/schemas/S3Uri'
          description: An Amazon S3 URI to a script that is called per row prior to running analysis. It can base64 decode the payload and convert it into a flatted json so that the built-in container can use the converted data. Applicable only for the built-in (first party) containers.
        PostAnalyticsProcessorSourceUri:
          $ref: '#/components/schemas/S3Uri'
          description: An Amazon S3 URI to a script that is called after analysis has been performed. Applicable only for the built-in (first party) containers.
        ProblemType:
          $ref: '#/components/schemas/MonitoringProblemType'
          description: The machine learning problem type of the model that the monitoring job monitors.
        Environment:
          $ref: '#/components/schemas/MonitoringEnvironmentMap'
          description: Sets the environment variables in the container that the monitoring job runs.
      description: Container image configuration object for the monitoring job.
    ModelQualityJobInput:
      type: object
      required:
        - EndpointInput
        - GroundTruthS3Input
      properties:
        EndpointInput:
          $ref: '#/components/schemas/EndpointInput'
        GroundTruthS3Input:
          $ref: '#/components/schemas/MonitoringGroundTruthS3Input'
          description: The ground truth label provided for the model.
      description: The input for the model quality monitoring job. Currently endponts are supported for input for model quality monitoring jobs.
    MonitoringScheduleName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}$'
      minLength: 1
      maxLength: 63
    MonitoringScheduleConfig:
      type: object
      properties:
        ScheduleConfig:
          $ref: '#/components/schemas/ScheduleConfig'
          description: Configures the monitoring schedule.
        MonitoringJobDefinition:
          $ref: '#/components/schemas/MonitoringJobDefinition'
          description: Defines the monitoring job.
        MonitoringJobDefinitionName:
          $ref: '#/components/schemas/MonitoringJobDefinitionName'
          description: The name of the monitoring job definition to schedule.
        MonitoringType:
          $ref: '#/components/schemas/MonitoringType'
          description: The type of the monitoring job definition to schedule.
      description: Configures the monitoring schedule and defines the monitoring job.
    MonitoringScheduleArn:
      type: string
      pattern: .*
      maxLength: 256
    NotebookInstanceName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
      maxLength: 63
    InstanceType:
      type: string
      enum:
        - ml.t2.medium
        - ml.t2.large
        - ml.t2.xlarge
        - ml.t2.2xlarge
        - ml.t3.medium
        - ml.t3.large
        - ml.t3.xlarge
        - ml.t3.2xlarge
        - ml.m4.xlarge
        - ml.m4.2xlarge
        - ml.m4.4xlarge
        - ml.m4.10xlarge
        - ml.m4.16xlarge
        - ml.m5.xlarge
        - ml.m5.2xlarge
        - ml.m5.4xlarge
        - ml.m5.12xlarge
        - ml.m5.24xlarge
        - ml.m5d.large
        - ml.m5d.xlarge
        - ml.m5d.2xlarge
        - ml.m5d.4xlarge
        - ml.m5d.8xlarge
        - ml.m5d.12xlarge
        - ml.m5d.16xlarge
        - ml.m5d.24xlarge
        - ml.c4.xlarge
        - ml.c4.2xlarge
        - ml.c4.4xlarge
        - ml.c4.8xlarge
        - ml.c5.xlarge
        - ml.c5.2xlarge
        - ml.c5.4xlarge
        - ml.c5.9xlarge
        - ml.c5.18xlarge
        - ml.c5d.xlarge
        - ml.c5d.2xlarge
        - ml.c5d.4xlarge
        - ml.c5d.9xlarge
        - ml.c5d.18xlarge
        - ml.p2.xlarge
        - ml.p2.8xlarge
        - ml.p2.16xlarge
        - ml.p3.2xlarge
        - ml.p3.8xlarge
        - ml.p3.16xlarge
        - ml.p3dn.24xlarge
        - ml.g4dn.xlarge
        - ml.g4dn.2xlarge
        - ml.g4dn.4xlarge
        - ml.g4dn.8xlarge
        - ml.g4dn.12xlarge
        - ml.g4dn.16xlarge
        - ml.r5.large
        - ml.r5.xlarge
        - ml.r5.2xlarge
        - ml.r5.4xlarge
        - ml.r5.8xlarge
        - ml.r5.12xlarge
        - ml.r5.16xlarge
        - ml.r5.24xlarge
    SubnetId:
      type: string
      pattern: '[-0-9a-zA-Z]+'
      maxLength: 32
    SecurityGroupIds:
      type: array
      items:
        $ref: '#/components/schemas/SecurityGroupId'
      maxItems: 5
    NotebookInstanceLifecycleConfigName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
      maxLength: 63
    DirectInternetAccess:
      type: string
      enum:
        - Enabled
        - Disabled
    NotebookInstanceVolumeSizeInGB:
      type: integer
      minimum: 5
      maximum: 16384
    NotebookInstanceAcceleratorTypes:
      type: array
      items:
        $ref: '#/components/schemas/NotebookInstanceAcceleratorType'
    RootAccess:
      type: string
      enum:
        - Enabled
        - Disabled
    PlatformIdentifier:
      type: string
      pattern: ^(notebook-al1-v1|notebook-al2-v1)$
      maxLength: 15
    NotebookInstanceLifecycleConfigList:
      type: array
      items:
        $ref: '#/components/schemas/NotebookInstanceLifecycleHook'
      maxItems: 1
    NotebookInstanceLifecycleConfigArn:
      type: string
      maxLength: 256
    NotebookInstanceArn:
      type: string
      maxLength: 256
    PipelineName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,255}'
      minLength: 1
      maxLength: 256
    PipelineDefinition:
      type: string
      pattern: '.*(?:[ \r\n\t].*)*'
      minLength: 1
      maxLength: 1048576
    PipelineDescription:
      type: string
      pattern: .*
      minLength: 0
      maxLength: 3072
    IdempotencyToken:
      type: string
      minLength: 32
      maxLength: 128
    PipelineArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:pipeline/.*'
      maxLength: 256
    SessionExpirationDurationInSeconds:
      type: integer
      minimum: 1800
      maximum: 43200
    ExpiresInSeconds:
      type: integer
      minimum: 5
      maximum: 300
    PresignedDomainUrl:
      type: string
    NotebookInstanceUrl:
      type: string
    ProcessingInputs:
      type: array
      items:
        $ref: '#/components/schemas/ProcessingInput'
      minItems: 0
      maxItems: 10
    ProcessingOutputConfig:
      type: object
      required:
        - Outputs
      properties:
        Outputs:
          $ref: '#/components/schemas/ProcessingOutputs'
          description: An array of outputs configuring the data to upload from the processing container.
        KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: 'The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that Amazon SageMaker uses to encrypt the processing job output. <code>KmsKeyId</code> can be an ID of a KMS key, ARN of a KMS key, alias of a KMS key, or alias of a KMS key. The <code>KmsKeyId</code> is applied to all outputs.'
      description: Configuration for uploading output from the processing container.
    ProcessingJobName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}'
      minLength: 1
      maxLength: 63
    ProcessingResources:
      type: object
      required:
        - ClusterConfig
      properties:
        ClusterConfig:
          $ref: '#/components/schemas/ProcessingClusterConfig'
          description: The configuration for the resources in a cluster used to run the processing job.
      description: 'Identifies the resources, ML compute instances, and ML storage volumes to deploy for a processing job. In distributed training, you specify more than one instance.'
    ProcessingStoppingCondition:
      type: object
      required:
        - MaxRuntimeInSeconds
      properties:
        MaxRuntimeInSeconds:
          $ref: '#/components/schemas/ProcessingMaxRuntimeInSeconds'
          description: Specifies the maximum runtime in seconds.
      description: 'Configures conditions under which the processing job should be stopped, such as how long the processing job has been running. After the condition is met, the processing job is stopped.'
    ProcessingEnvironmentMap:
      type: object
      maxProperties: 100
      additionalProperties:
        $ref: '#/components/schemas/ProcessingEnvironmentValue'
    NetworkConfig:
      type: object
      properties:
        EnableInterContainerTrafficEncryption:
          $ref: '#/components/schemas/Boolean'
          description: 'Whether to encrypt all communications between distributed processing jobs. Choose <code>True</code> to encrypt communications. Encryption provides greater security for distributed processing jobs, but the processing might take longer.'
        EnableNetworkIsolation:
          $ref: '#/components/schemas/Boolean'
          description: Whether to allow inbound and outbound network calls to and from the containers used for the processing job.
        VpcConfig:
          $ref: '#/components/schemas/VpcConfig'
      description: 'Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs.'
    ExperimentConfig:
      type: object
      properties:
        ExperimentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of an existing experiment to associate the trial component with.
        TrialName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: 'The name of an existing trial to associate the trial component with. If not specified, a new trial is created.'
        TrialComponentDisplayName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: 'The display name for the trial component. If this key isn''t specified, the display name is the trial component name.'
      description: '<p>Associates a SageMaker job as a trial component with an experiment and trial. Specified when you call the following APIs:</p> <ul> <li> <p> <a>CreateProcessingJob</a> </p> </li> <li> <p> <a>CreateTrainingJob</a> </p> </li> <li> <p> <a>CreateTransformJob</a> </p> </li> </ul>'
    ProcessingJobArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:processing-job/.*'
      maxLength: 256
    ProjectEntityName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,31}'
      minLength: 1
      maxLength: 32
    ServiceCatalogProvisioningDetails:
      type: object
      required:
        - ProductId
        - ProvisioningArtifactId
      properties:
        ProductId:
          $ref: '#/components/schemas/ServiceCatalogEntityId'
          description: The ID of the product to provision.
        ProvisioningArtifactId:
          $ref: '#/components/schemas/ServiceCatalogEntityId'
          description: The ID of the provisioning artifact.
        PathId:
          $ref: '#/components/schemas/ServiceCatalogEntityId'
          description: 'The path identifier of the product. This value is optional if the product has a default path, and required if the product has more than one path. '
        ProvisioningParameters:
          $ref: '#/components/schemas/ProvisioningParameters'
          description: A list of key value pairs that you specify when you provision a product.
      description: 'Details that you specify to provision a service catalog product. For information about service catalog, see .<a href="https://docs.aws.amazon.com/servicecatalog/latest/adminguide/introduction.html">What is Amazon Web Services Service Catalog</a>.'
    ProjectArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:project:.*'
      minLength: 1
      maxLength: 2048
    ProjectId:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
      minLength: 1
      maxLength: 20
    TrainingJobName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}'
      minLength: 1
      maxLength: 63
    HyperParameters:
      type: object
      minProperties: 0
      maxProperties: 100
      additionalProperties:
        $ref: '#/components/schemas/HyperParameterValue'
    InputDataConfig:
      type: array
      items:
        $ref: '#/components/schemas/Channel'
      minItems: 1
      maxItems: 20
    OutputDataConfig:
      type: object
      required:
        - S3OutputPath
      properties:
        KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: '<p>The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption. The <code>KmsKeyId</code> can be any of the following formats: </p> <ul> <li> <p>// KMS Key ID</p> <p> <code>"1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> <li> <p>// Amazon Resource Name (ARN) of a KMS Key</p> <p> <code>"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> <li> <p>// KMS Key Alias</p> <p> <code>"alias/ExampleAlias"</code> </p> </li> <li> <p>// Amazon Resource Name (ARN) of a KMS Key Alias</p> <p> <code>"arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias"</code> </p> </li> </ul> <p>If you use a KMS key ID or an alias of your master key, the Amazon SageMaker execution role must include permissions to call <code>kms:Encrypt</code>. If you don''t provide a KMS key ID, Amazon SageMaker uses the default KMS key for Amazon S3 for your role''s account. Amazon SageMaker uses server-side encryption with KMS-managed keys for <code>OutputDataConfig</code>. If you use a bucket policy with an <code>s3:PutObject</code> permission that only allows objects with server-side encryption, set the condition key of <code>s3:x-amz-server-side-encryption</code> to <code>"aws:kms"</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/UsingKMSEncryption.html">KMS-Managed Encryption Keys</a> in the <i>Amazon Simple Storage Service Developer Guide.</i> </p> <p>The KMS key policy must grant permission to the IAM role that you specify in your <code>CreateTrainingJob</code>, <code>CreateTransformJob</code>, or <code>CreateHyperParameterTuningJob</code> requests. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html">Using Key Policies in Amazon Web Services KMS</a> in the <i>Amazon Web Services Key Management Service Developer Guide</i>.</p>'
        S3OutputPath:
          $ref: '#/components/schemas/S3Uri'
          description: 'Identifies the S3 path where you want Amazon SageMaker to store the model artifacts. For example, <code>s3://bucket-name/key-name-prefix</code>. '
      description: Provides information about how to store model training results (model artifacts).
    ResourceConfig:
      type: object
      required:
        - InstanceType
        - InstanceCount
        - VolumeSizeInGB
      properties:
        InstanceType:
          $ref: '#/components/schemas/TrainingInstanceType'
          description: 'The ML compute instance type. '
        InstanceCount:
          $ref: '#/components/schemas/TrainingInstanceCount'
          description: 'The number of ML compute instances to use. For distributed training, provide a value greater than 1. '
        VolumeSizeInGB:
          $ref: '#/components/schemas/VolumeSizeInGB'
          description: '<p>The size of the ML storage volume that you want to provision. </p> <p>ML storage volumes store model artifacts and incremental states. Training algorithms might also use the ML storage volume for scratch space. If you want to store the training data in the ML storage volume, choose <code>File</code> as the <code>TrainingInputMode</code> in the algorithm specification. </p> <p>You must specify sufficient ML storage for your scenario. </p> <note> <p> Amazon SageMaker supports only the General Purpose SSD (gp2) ML storage volume type. </p> </note> <note> <p>Certain Nitro-based instances include local storage with a fixed total size, dependent on the instance type. When using these instances for training, Amazon SageMaker mounts the local instance storage instead of Amazon EBS gp2 storage. You can''t request a <code>VolumeSizeInGB</code> greater than the total size of the local instance storage.</p> <p>For a list of instance types that support local instance storage, including the total size per instance type, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#instance-store-volumes">Instance Store Volumes</a>.</p> </note>'
        VolumeKmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: '<p>The Amazon Web Services KMS key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the training job.</p> <note> <p>Certain Nitro-based instances include local storage, dependent on the instance type. Local storage volumes are encrypted using a hardware module on the instance. You can''t request a <code>VolumeKmsKeyId</code> when using an instance type with local storage.</p> <p>For a list of instance types that support local instance storage, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#instance-store-volumes">Instance Store Volumes</a>.</p> <p>For more information about local instance storage encryption, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ssd-instance-store.html">SSD Instance Store Volumes</a>.</p> </note> <p>The <code>VolumeKmsKeyId</code> can be in any of the following formats:</p> <ul> <li> <p>// KMS Key ID</p> <p> <code>"1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> <li> <p>// Amazon Resource Name (ARN) of a KMS Key</p> <p> <code>"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> </ul>'
      description: 'Describes the resources, including ML compute instances and ML storage volumes, to use for model training. '
    DebugHookConfig:
      type: object
      required:
        - S3OutputPath
      properties:
        LocalPath:
          $ref: '#/components/schemas/DirectoryPath'
          description: Path to local storage location for metrics and tensors. Defaults to <code>/opt/ml/output/tensors/</code>.
        S3OutputPath:
          $ref: '#/components/schemas/S3Uri'
          description: Path to Amazon S3 storage location for metrics and tensors.
        HookParameters:
          $ref: '#/components/schemas/HookParameters'
          description: Configuration information for the Debugger hook parameters.
        CollectionConfigurations:
          $ref: '#/components/schemas/CollectionConfigurations'
          description: 'Configuration information for Debugger tensor collections. To learn more about how to configure the <code>CollectionConfiguration</code> parameter, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/debugger-createtrainingjob-api.html">Use the SageMaker and Debugger Configuration API Operations to Create, Update, and Debug Your Training Job</a>. '
      description: 'Configuration information for the Debugger hook parameters, metric and tensor collections, and storage paths. To learn more about how to configure the <code>DebugHookConfig</code> parameter, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/debugger-createtrainingjob-api.html">Use the SageMaker and Debugger Configuration API Operations to Create, Update, and Debug Your Training Job</a>.'
    DebugRuleConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/DebugRuleConfiguration'
      minItems: 0
      maxItems: 20
    TensorBoardOutputConfig:
      type: object
      required:
        - S3OutputPath
      properties:
        LocalPath:
          $ref: '#/components/schemas/DirectoryPath'
          description: Path to local storage location for tensorBoard output. Defaults to <code>/opt/ml/output/tensorboard</code>.
        S3OutputPath:
          $ref: '#/components/schemas/S3Uri'
          description: Path to Amazon S3 storage location for TensorBoard output.
      description: Configuration of storage locations for the Debugger TensorBoard output data.
    ProfilerConfig:
      type: object
      required:
        - S3OutputPath
      properties:
        S3OutputPath:
          $ref: '#/components/schemas/S3Uri'
          description: Path to Amazon S3 storage location for system and framework metrics.
        ProfilingIntervalInMilliseconds:
          $ref: '#/components/schemas/ProfilingIntervalInMilliseconds'
          description: 'A time interval for capturing system metrics in milliseconds. Available values are 100, 200, 500, 1000 (1 second), 5000 (5 seconds), and 60000 (1 minute) milliseconds. The default value is 500 milliseconds.'
        ProfilingParameters:
          $ref: '#/components/schemas/ProfilingParameters'
          description: 'Configuration information for capturing framework metrics. Available key strings for different profiling options are <code>DetailedProfilingConfig</code>, <code>PythonProfilingConfig</code>, and <code>DataLoaderProfilingConfig</code>. The following codes are configuration structures for the <code>ProfilingParameters</code> parameter. To learn more about how to configure the <code>ProfilingParameters</code> parameter, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/debugger-createtrainingjob-api.html">Use the SageMaker and Debugger Configuration API Operations to Create, Update, and Debug Your Training Job</a>. '
      description: 'Configuration information for Debugger system monitoring, framework profiling, and storage paths.'
    ProfilerRuleConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/ProfilerRuleConfiguration'
      minItems: 0
      maxItems: 20
    TrainingEnvironmentMap:
      type: object
      maxProperties: 48
      additionalProperties:
        $ref: '#/components/schemas/TrainingEnvironmentValue'
    RetryStrategy:
      type: object
      required:
        - MaximumRetryAttempts
      properties:
        MaximumRetryAttempts:
          $ref: '#/components/schemas/MaximumRetryAttempts'
          description: 'The number of times to retry the job. When the job is retried, it''s <code>SecondaryStatus</code> is changed to <code>STARTING</code>.'
      description: The retry strategy to use when a training job fails due to an <code>InternalServerError</code>. <code>RetryStrategy</code> is specified as part of the <code>CreateTrainingJob</code> and <code>CreateHyperParameterTuningJob</code> requests. You can add the <code>StoppingCondition</code> parameter to the request to limit the training time for the complete job.
    TrainingJobArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:training-job/.*'
      maxLength: 256
    TransformJobName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}'
      minLength: 1
      maxLength: 63
    MaxConcurrentTransforms:
      type: integer
      minimum: 0
    ModelClientConfig:
      type: object
      properties:
        InvocationsTimeoutInSeconds:
          $ref: '#/components/schemas/InvocationsTimeoutInSeconds'
          description: The timeout value in seconds for an invocation request.
        InvocationsMaxRetries:
          $ref: '#/components/schemas/InvocationsMaxRetries'
          description: The maximum number of retries when invocation requests are failing.
      description: Configures the timeout and maximum number of retries for processing a transform job invocation.
    MaxPayloadInMB:
      type: integer
      minimum: 0
    TransformEnvironmentMap:
      type: object
      maxProperties: 16
      additionalProperties:
        $ref: '#/components/schemas/TransformEnvironmentValue'
    TransformInput:
      type: object
      required:
        - DataSource
      properties:
        DataSource:
          $ref: '#/components/schemas/TransformDataSource'
          description: 'Describes the location of the channel data, which is, the S3 location of the input data that the model can consume.'
        ContentType:
          $ref: '#/components/schemas/ContentType'
          description: The multipurpose internet mail extension (MIME) type of the data. Amazon SageMaker uses the MIME type with each http call to transfer data to the transform job.
        CompressionType:
          $ref: '#/components/schemas/CompressionType'
          description: 'If your transform data is compressed, specify the compression type. Amazon SageMaker automatically decompresses the data for the transform job accordingly. The default value is <code>None</code>.'
        SplitType:
          $ref: '#/components/schemas/SplitType'
          description: '<p>The method to use to split the transform job''s data files into smaller batches. Splitting is necessary when the total size of each object is too large to fit in a single request. You can also use data splitting to improve performance by processing multiple concurrent mini-batches. The default value for <code>SplitType</code> is <code>None</code>, which indicates that input data files are not split, and request payloads contain the entire contents of an input object. Set the value of this parameter to <code>Line</code> to split records on a newline character boundary. <code>SplitType</code> also supports a number of record-oriented binary data formats. Currently, the supported record formats are:</p> <ul> <li> <p>RecordIO</p> </li> <li> <p>TFRecord</p> </li> </ul> <p>When splitting is enabled, the size of a mini-batch depends on the values of the <code>BatchStrategy</code> and <code>MaxPayloadInMB</code> parameters. When the value of <code>BatchStrategy</code> is <code>MultiRecord</code>, Amazon SageMaker sends the maximum number of records in each request, up to the <code>MaxPayloadInMB</code> limit. If the value of <code>BatchStrategy</code> is <code>SingleRecord</code>, Amazon SageMaker sends individual records in each request.</p> <note> <p>Some data formats represent a record as a binary payload wrapped with extra padding bytes. When splitting is applied to a binary data format, padding is removed if the value of <code>BatchStrategy</code> is set to <code>SingleRecord</code>. Padding is not removed if the value of <code>BatchStrategy</code> is set to <code>MultiRecord</code>.</p> <p>For more information about <code>RecordIO</code>, see <a href="https://mxnet.apache.org/api/faq/recordio">Create a Dataset Using RecordIO</a> in the MXNet documentation. For more information about <code>TFRecord</code>, see <a href="https://www.tensorflow.org/guide/data#consuming_tfrecord_data">Consuming TFRecord data</a> in the TensorFlow documentation.</p> </note>'
      description: Describes the input source of a transform job and the way the transform job consumes it.
    TransformOutput:
      type: object
      required:
        - S3OutputPath
      properties:
        S3OutputPath:
          $ref: '#/components/schemas/S3Uri'
          description: '<p>The Amazon S3 path where you want Amazon SageMaker to store the results of the transform job. For example, <code>s3://bucket-name/key-name-prefix</code>.</p> <p>For every S3 object used as input for the transform job, batch transform stores the transformed data with an .<code>out</code> suffix in a corresponding subfolder in the location in the output prefix. For example, for the input data stored at <code>s3://bucket-name/input-name-prefix/dataset01/data.csv</code>, batch transform stores the transformed data at <code>s3://bucket-name/output-name-prefix/input-name-prefix/data.csv.out</code>. Batch transform doesn''t upload partially processed objects. For an input S3 object that contains multiple records, it creates an .<code>out</code> file only if the transform job succeeds on the entire file. When the input contains multiple S3 objects, the batch transform job processes the listed S3 objects and uploads only the output for successfully processed objects. If any object fails in the transform job batch transform marks the job as failed to prompt investigation.</p>'
        Accept:
          $ref: '#/components/schemas/Accept'
          description: The MIME type used to specify the output data. Amazon SageMaker uses the MIME type with each http call to transfer data from the transform job.
        AssembleWith:
          $ref: '#/components/schemas/AssemblyType'
          description: 'Defines how to assemble the results of the transform job as a single S3 object. Choose a format that is most convenient to you. To concatenate the results in binary format, specify <code>None</code>. To add a newline character at the end of every transformed record, specify <code>Line</code>.'
        KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: '<p>The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption. The <code>KmsKeyId</code> can be any of the following formats: </p> <ul> <li> <p>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li> <li> <p>Key ARN: <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li> <li> <p>Alias name: <code>alias/ExampleAlias</code> </p> </li> <li> <p>Alias name ARN: <code>arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias</code> </p> </li> </ul> <p>If you don''t provide a KMS key ID, Amazon SageMaker uses the default KMS key for Amazon S3 for your role''s account. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html">KMS-Managed Encryption Keys</a> in the <i>Amazon Simple Storage Service Developer Guide.</i> </p> <p>The KMS key policy must grant permission to the IAM role that you specify in your <a>CreateModel</a> request. For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html">Using Key Policies in Amazon Web Services KMS</a> in the <i>Amazon Web Services Key Management Service Developer Guide</i>.</p>'
      description: Describes the results of a transform job.
    TransformResources:
      type: object
      required:
        - InstanceType
        - InstanceCount
      properties:
        InstanceType:
          $ref: '#/components/schemas/TransformInstanceType'
          description: 'The ML compute instance type for the transform job. If you are using built-in algorithms to transform moderately sized datasets, we recommend using ml.m4.xlarge or <code>ml.m5.large</code>instance types.'
        InstanceCount:
          $ref: '#/components/schemas/TransformInstanceCount'
          description: 'The number of ML compute instances to use in the transform job. For distributed transform jobs, specify a value greater than 1. The default value is <code>1</code>.'
        VolumeKmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: '<p>The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that Amazon SageMaker uses to encrypt model data on the storage volume attached to the ML compute instance(s) that run the batch transform job.</p> <note> <p>Certain Nitro-based instances include local storage, dependent on the instance type. Local storage volumes are encrypted using a hardware module on the instance. You can''t request a <code>VolumeKmsKeyId</code> when using an instance type with local storage.</p> <p>For a list of instance types that support local instance storage, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#instance-store-volumes">Instance Store Volumes</a>.</p> <p>For more information about local instance storage encryption, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ssd-instance-store.html">SSD Instance Store Volumes</a>.</p> </note> <p> The <code>VolumeKmsKeyId</code> can be any of the following formats:</p> <ul> <li> <p>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li> <li> <p>Key ARN: <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li> <li> <p>Alias name: <code>alias/ExampleAlias</code> </p> </li> <li> <p>Alias name ARN: <code>arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias</code> </p> </li> </ul>'
      description: 'Describes the resources, including ML instance types and ML instance count, to use for transform job.'
    DataProcessing:
      type: object
      properties:
        InputFilter:
          $ref: '#/components/schemas/JsonPath'
          description: '<p>A <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/batch-transform-data-processing.html#data-processing-operators">JSONPath</a> expression used to select a portion of the input data to pass to the algorithm. Use the <code>InputFilter</code> parameter to exclude fields, such as an ID column, from the input. If you want Amazon SageMaker to pass the entire input dataset to the algorithm, accept the default value <code>$</code>.</p> <p>Examples: <code>"$"</code>, <code>"$[1:]"</code>, <code>"$.features"</code> </p>'
        OutputFilter:
          $ref: '#/components/schemas/JsonPath'
          description: '<p>A <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/batch-transform-data-processing.html#data-processing-operators">JSONPath</a> expression used to select a portion of the joined dataset to save in the output file for a batch transform job. If you want Amazon SageMaker to store the entire input dataset in the output file, leave the default value, <code>$</code>. If you specify indexes that aren''t within the dimension size of the joined dataset, you get an error.</p> <p>Examples: <code>"$"</code>, <code>"$[0,5:]"</code>, <code>"$[''id'',''SageMakerOutput'']"</code> </p>'
        JoinSource:
          $ref: '#/components/schemas/JoinSource'
          description: '<p>Specifies the source of the data to join with the transformed data. The valid values are <code>None</code> and <code>Input</code>. The default value is <code>None</code>, which specifies not to join the input with the transformed data. If you want the batch transform job to join the original input data with the transformed data, set <code>JoinSource</code> to <code>Input</code>. You can specify <code>OutputFilter</code> as an additional filter to select a portion of the joined dataset and store it in the output file.</p> <p>For JSON or JSONLines objects, such as a JSON array, Amazon SageMaker adds the transformed data to the input JSON object in an attribute called <code>SageMakerOutput</code>. The joined result for JSON must be a key-value pair object. If the input is not a key-value pair object, Amazon SageMaker creates a new JSON file. In the new JSON file, and the input data is stored under the <code>SageMakerInput</code> key and the results are stored in <code>SageMakerOutput</code>.</p> <p>For CSV data, Amazon SageMaker takes each row as a JSON array and joins the transformed data with the input by appending each transformed row to the end of the input. The joined data has the original input data followed by the transformed data and the output is a CSV file.</p> <p>For information on how joining in applied, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/batch-transform-data-processing.html#batch-transform-data-processing-workflow">Workflow for Associating Inferences with Input Records</a>.</p>'
      description: 'The data structure used to specify the data to be used for inference in a batch transform job and to associate the data that is relevant to the prediction results in the output. The input filter provided allows you to exclude input data that is not needed for inference in a batch transform job. The output filter provided allows you to include input data relevant to interpreting the predictions in the output from the job. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/batch-transform-data-processing.html">Associate Prediction Results with their Corresponding Input Records</a>.'
    TransformJobArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:transform-job/.*'
      maxLength: 256
    TrialComponentStatus:
      type: object
      properties:
        PrimaryStatus:
          $ref: '#/components/schemas/TrialComponentPrimaryStatus'
          description: The status of the trial component.
        Message:
          $ref: '#/components/schemas/TrialComponentStatusMessage'
          description: 'If the component failed, a message describing why.'
      description: The status of the trial component.
    TrialComponentParameters:
      type: object
      maxProperties: 150
      additionalProperties:
        $ref: '#/components/schemas/TrialComponentParameterValue'
    TrialComponentArtifacts:
      type: object
      maxProperties: 30
      additionalProperties:
        $ref: '#/components/schemas/TrialComponentArtifact'
    SingleSignOnUserIdentifier:
      type: string
      pattern: UserName
    UserProfileArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:user-profile/.*'
      maxLength: 256
    OidcConfig:
      type: object
      required:
        - ClientId
        - ClientSecret
        - Issuer
        - AuthorizationEndpoint
        - TokenEndpoint
        - UserInfoEndpoint
        - LogoutEndpoint
        - JwksUri
      properties:
        ClientId:
          $ref: '#/components/schemas/ClientId'
          description: The OIDC IdP client ID used to configure your private workforce.
        ClientSecret:
          $ref: '#/components/schemas/ClientSecret'
          description: The OIDC IdP client secret used to configure your private workforce.
        Issuer:
          $ref: '#/components/schemas/OidcEndpoint'
          description: The OIDC IdP issuer used to configure your private workforce.
        AuthorizationEndpoint:
          $ref: '#/components/schemas/OidcEndpoint'
          description: The OIDC IdP authorization endpoint used to configure your private workforce.
        TokenEndpoint:
          $ref: '#/components/schemas/OidcEndpoint'
          description: The OIDC IdP token endpoint used to configure your private workforce.
        UserInfoEndpoint:
          $ref: '#/components/schemas/OidcEndpoint'
          description: The OIDC IdP user information endpoint used to configure your private workforce.
        LogoutEndpoint:
          $ref: '#/components/schemas/OidcEndpoint'
          description: The OIDC IdP logout endpoint used to configure your private workforce.
        JwksUri:
          $ref: '#/components/schemas/OidcEndpoint'
          description: The OIDC IdP JSON Web Key Set (Jwks) URI used to configure your private workforce.
      description: Use this parameter to configure your OIDC Identity Provider (IdP).
    SourceIpConfig:
      type: object
      required:
        - Cidrs
      properties:
        Cidrs:
          $ref: '#/components/schemas/Cidrs'
          description: '<p>A list of one to ten <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html">Classless Inter-Domain Routing</a> (CIDR) values.</p> <p>Maximum: Ten CIDR values</p> <note> <p>The following Length Constraints apply to individual CIDR values in the CIDR value list.</p> </note>'
      description: 'A list of IP address ranges (<a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html">CIDRs</a>). Used to create an allow list of IP addresses for a private workforce. Workers will only be able to login to their worker portal from an IP address within this range. By default, a workforce isn''t restricted to specific IP addresses.'
    WorkforceName:
      type: string
      pattern: '^[a-zA-Z0-9]([a-zA-Z0-9\-]){0,62}$'
      minLength: 1
      maxLength: 63
    WorkforceArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:workforce/.*'
      maxLength: 256
    WorkteamName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}'
      minLength: 1
      maxLength: 63
    MemberDefinitions:
      type: array
      items:
        $ref: '#/components/schemas/MemberDefinition'
      minItems: 1
      maxItems: 10
    String200:
      type: string
      pattern: .+
      minLength: 1
      maxLength: 200
    NotificationConfiguration:
      type: object
      properties:
        NotificationTopicArn:
          $ref: '#/components/schemas/NotificationTopicArn'
          description: The ARN for the Amazon SNS topic to which notifications should be published.
      description: Configures Amazon SNS notifications of available or expiring work items for work teams.
    WorkteamArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:workteam/.*'
      maxLength: 256
    CsvContentType:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*\/[a-zA-Z0-9](-*[a-zA-Z0-9.])*'
      minLength: 1
      maxLength: 256
    ImageVersionNumber:
      type: integer
      minimum: 0
    CustomImage:
      type: object
      required:
        - ImageName
        - AppImageConfigName
      properties:
        ImageName:
          $ref: '#/components/schemas/ImageName'
          description: The name of the CustomImage. Must be unique to your account.
        ImageVersionNumber:
          $ref: '#/components/schemas/ImageVersionNumber'
          description: The version number of the CustomImage.
        AppImageConfigName:
          $ref: '#/components/schemas/AppImageConfigName'
          description: The name of the AppImageConfig.
      description: 'A custom SageMaker image. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/studio-byoi.html">Bring your own SageMaker image</a>.'
    CustomImages:
      type: array
      items:
        $ref: '#/components/schemas/CustomImage'
      maxItems: 30
    EnableCapture:
      type: boolean
    SamplingPercentage:
      type: integer
      minimum: 0
      maximum: 100
    DataCaptureConfigSummary:
      type: object
      required:
        - EnableCapture
        - CaptureStatus
        - CurrentSamplingPercentage
        - DestinationS3Uri
        - KmsKeyId
      properties:
        EnableCapture:
          $ref: '#/components/schemas/EnableCapture'
          description: <p/>
        CaptureStatus:
          $ref: '#/components/schemas/CaptureStatus'
          description: <p/>
        CurrentSamplingPercentage:
          $ref: '#/components/schemas/SamplingPercentage'
          description: <p/>
        DestinationS3Uri:
          $ref: '#/components/schemas/DestinationS3Uri'
          description: <p/>
        KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: <p/>
      description: <p/>
    TableName:
      type: string
      minLength: 1
      maxLength: 255
      x-pattern: '[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*'
    Database:
      type: string
      minLength: 1
      maxLength: 255
      x-pattern: '[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*'
    DataCatalogConfig:
      type: object
      required:
        - TableName
        - Catalog
        - Database
      properties:
        TableName:
          $ref: '#/components/schemas/TableName'
          description: The name of the Glue table.
        Catalog:
          $ref: '#/components/schemas/Catalog'
          description: The name of the Glue table catalog.
        Database:
          $ref: '#/components/schemas/Database'
          description: The name of the Glue table database.
      description: 'The meta data of the Glue table which serves as data catalog for the <code>OfflineStore</code>. '
    DataDistributionType:
      type: string
      enum:
        - FullyReplicated
        - ShardedByS3Key
    DataInputConfig:
      type: string
      pattern: '[\S\s]+'
      minLength: 1
      maxLength: 1024
    JsonPath:
      type: string
      minLength: 0
      maxLength: 63
    JoinSource:
      type: string
      enum:
        - Input
        - None
    MonitoringContainerArguments:
      type: array
      items:
        $ref: '#/components/schemas/ContainerArgument'
      minItems: 1
      maxItems: 50
    MonitoringEnvironmentMap:
      type: object
      maxProperties: 50
      additionalProperties:
        $ref: '#/components/schemas/ProcessingEnvironmentValue'
    MonitoringConstraintsResource:
      type: object
      properties:
        S3Uri:
          $ref: '#/components/schemas/S3Uri'
          description: The Amazon S3 URI for the constraints resource.
      description: The constraints resource for a monitoring job.
    MonitoringStatisticsResource:
      type: object
      properties:
        S3Uri:
          $ref: '#/components/schemas/S3Uri'
          description: The Amazon S3 URI for the statistics resource.
      description: The statistics resource for a monitoring job.
    EndpointInput:
      type: object
      required:
        - EndpointName
        - LocalPath
      properties:
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
          description: An endpoint in customer's account which has enabled <code>DataCaptureConfig</code> enabled.
        LocalPath:
          $ref: '#/components/schemas/ProcessingLocalPath'
          description: Path to the filesystem where the endpoint data is available to the container.
        S3InputMode:
          $ref: '#/components/schemas/ProcessingS3InputMode'
          description: Whether the <code>Pipe</code> or <code>File</code> is used as the input mode for transfering data for the monitoring job. <code>Pipe</code> mode is recommended for large datasets. <code>File</code> mode is useful for small files that fit in memory. Defaults to <code>File</code>.
        S3DataDistributionType:
          $ref: '#/components/schemas/ProcessingS3DataDistributionType'
          description: 'Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defaults to <code>FullyReplicated</code> '
        FeaturesAttribute:
          $ref: '#/components/schemas/String'
          description: The attributes of the input data that are the input features.
        InferenceAttribute:
          $ref: '#/components/schemas/String'
          description: The attribute of the input data that represents the ground truth label.
        ProbabilityAttribute:
          $ref: '#/components/schemas/String'
          description: 'In a classification problem, the attribute that represents the class probability.'
        ProbabilityThresholdAttribute:
          $ref: '#/components/schemas/ProbabilityThresholdAttribute'
          description: The threshold for the class probability to be evaluated as a positive result.
        StartTimeOffset:
          $ref: '#/components/schemas/MonitoringTimeOffsetString'
          description: 'If specified, monitoring jobs substract this time from the start time. For information about using offsets for scheduling monitoring jobs, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/model-monitor-model-quality-schedule.html">Schedule Model Quality Monitoring Jobs</a>.'
        EndTimeOffset:
          $ref: '#/components/schemas/MonitoringTimeOffsetString'
          description: 'If specified, monitoring jobs substract this time from the end time. For information about using offsets for scheduling monitoring jobs, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/model-monitor-model-quality-schedule.html">Schedule Model Quality Monitoring Jobs</a>.'
      description: Input object for the endpoint
    S3DataSource:
      type: object
      required:
        - S3DataType
        - S3Uri
      properties:
        S3DataType:
          $ref: '#/components/schemas/S3DataType'
          description: '<p>If you choose <code>S3Prefix</code>, <code>S3Uri</code> identifies a key name prefix. Amazon SageMaker uses all objects that match the specified key name prefix for model training. </p> <p>If you choose <code>ManifestFile</code>, <code>S3Uri</code> identifies an object that is a manifest file containing a list of object keys that you want Amazon SageMaker to use for model training. </p> <p>If you choose <code>AugmentedManifestFile</code>, S3Uri identifies an object that is an augmented manifest file in JSON lines format. This file contains the data you want to use for model training. <code>AugmentedManifestFile</code> can only be used if the Channel''s input mode is <code>Pipe</code>.</p>'
        S3Uri:
          $ref: '#/components/schemas/S3Uri'
          description: '<p>Depending on the value specified for the <code>S3DataType</code>, identifies either a key name prefix or a manifest. For example: </p> <ul> <li> <p> A key name prefix might look like this: <code>s3://bucketname/exampleprefix</code> </p> </li> <li> <p> A manifest might look like this: <code>s3://bucketname/example.manifest</code> </p> <p> A manifest is an S3 object which is a JSON file consisting of an array of elements. The first element is a prefix which is followed by one or more suffixes. SageMaker appends the suffix elements to the prefix to get a full set of <code>S3Uri</code>. Note that the prefix must be a valid non-empty <code>S3Uri</code> that precludes users from specifying a manifest whose individual <code>S3Uri</code> is sourced from different S3 buckets.</p> <p> The following code example shows a valid manifest format: </p> <p> <code>[ {"prefix": "s3://customer_bucket/some/prefix/"},</code> </p> <p> <code> "relative/path/to/custdata-1",</code> </p> <p> <code> "relative/path/custdata-2",</code> </p> <p> <code> ...</code> </p> <p> <code> "relative/path/custdata-N"</code> </p> <p> <code>]</code> </p> <p> This JSON is equivalent to the following <code>S3Uri</code> list:</p> <p> <code>s3://customer_bucket/some/prefix/relative/path/to/custdata-1</code> </p> <p> <code>s3://customer_bucket/some/prefix/relative/path/custdata-2</code> </p> <p> <code>...</code> </p> <p> <code>s3://customer_bucket/some/prefix/relative/path/custdata-N</code> </p> <p>The complete set of <code>S3Uri</code> in this manifest is the input data for the channel for this data source. The object that each <code>S3Uri</code> points to must be readable by the IAM role that Amazon SageMaker uses to perform tasks on your behalf. </p> </li> </ul>'
        S3DataDistributionType:
          $ref: '#/components/schemas/S3DataDistribution'
          description: '<p>If you want Amazon SageMaker to replicate the entire dataset on each ML compute instance that is launched for model training, specify <code>FullyReplicated</code>. </p> <p>If you want Amazon SageMaker to replicate a subset of data on each ML compute instance that is launched for model training, specify <code>ShardedByS3Key</code>. If there are <i>n</i> ML compute instances launched for a training job, each instance gets approximately 1/<i>n</i> of the number of S3 objects. In this case, model training on each machine uses only the subset of training data. </p> <p>Don''t choose more ML compute instances for training than available S3 objects. If you do, some nodes won''t get any data and you will pay for nodes that aren''t getting any training data. This applies in both File and Pipe modes. Keep this in mind when developing algorithms. </p> <p>In distributed training, where you use multiple ML compute EC2 instances, you might choose <code>ShardedByS3Key</code>. If the algorithm requires copying training data to the ML storage volume (when <code>TrainingInputMode</code> is set to <code>File</code>), this copies 1/<i>n</i> of the number of objects. </p>'
        AttributeNames:
          $ref: '#/components/schemas/AttributeNames'
          description: A list of one or more attribute names to use that are found in a specified augmented manifest file.
      description: Describes the S3 data source.
    FileSystemDataSource:
      type: object
      required:
        - FileSystemId
        - FileSystemAccessMode
        - FileSystemType
        - DirectoryPath
      properties:
        FileSystemId:
          $ref: '#/components/schemas/FileSystemId'
          description: The file system id.
        FileSystemAccessMode:
          $ref: '#/components/schemas/FileSystemAccessMode'
          description: The access mode of the mount of the directory associated with the channel. A directory can be mounted either in <code>ro</code> (read-only) or <code>rw</code> (read-write) mode.
        FileSystemType:
          $ref: '#/components/schemas/FileSystemType'
          description: 'The file system type. '
        DirectoryPath:
          $ref: '#/components/schemas/DirectoryPath'
          description: The full path to the directory to associate with the channel.
      description: Specifies a file system data source for a channel.
    RedshiftDatasetDefinition:
      type: object
      required:
        - ClusterId
        - Database
        - DbUser
        - QueryString
        - ClusterRoleArn
        - OutputS3Uri
        - OutputFormat
      properties:
        ClusterId:
          $ref: '#/components/schemas/RedshiftClusterId'
        Database:
          $ref: '#/components/schemas/RedshiftDatabase'
        DbUser:
          $ref: '#/components/schemas/RedshiftUserName'
        QueryString:
          $ref: '#/components/schemas/RedshiftQueryString'
        ClusterRoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The IAM role attached to your Redshift cluster that Amazon SageMaker uses to generate datasets.
        OutputS3Uri:
          $ref: '#/components/schemas/S3Uri'
          description: The location in Amazon S3 where the Redshift query results are stored.
        KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that Amazon SageMaker uses to encrypt data from a Redshift execution.
        OutputFormat:
          $ref: '#/components/schemas/RedshiftResultFormat'
        OutputCompression:
          $ref: '#/components/schemas/RedshiftResultCompressionType'
      description: Configuration for Redshift Dataset Definition input.
    ProcessingLocalPath:
      type: string
      pattern: .*
      maxLength: 256
    InputMode:
      type: string
      enum:
        - Pipe
        - File
    DatasetDefinition:
      type: object
      properties:
        AthenaDatasetDefinition:
          $ref: '#/components/schemas/AthenaDatasetDefinition'
        RedshiftDatasetDefinition:
          $ref: '#/components/schemas/RedshiftDatasetDefinition'
        LocalPath:
          $ref: '#/components/schemas/ProcessingLocalPath'
          description: The local path where you want Amazon SageMaker to download the Dataset Definition inputs to run a processing job. <code>LocalPath</code> is an absolute path to the input data. This is a required parameter when <code>AppManaged</code> is <code>False</code> (default).
        DataDistributionType:
          $ref: '#/components/schemas/DataDistributionType'
          description: Whether the generated dataset is <code>FullyReplicated</code> or <code>ShardedByS3Key</code> (default).
        InputMode:
          $ref: '#/components/schemas/InputMode'
          description: 'Whether to use <code>File</code> or <code>Pipe</code> input mode. In <code>File</code> (default) mode, Amazon SageMaker copies the data from the input source onto the local Amazon Elastic Block Store (Amazon EBS) volumes before starting your training algorithm. This is the most commonly used input mode. In <code>Pipe</code> mode, Amazon SageMaker streams input data from the source directly to your algorithm without using the EBS volume.'
      description: Configuration for Dataset Definition inputs. The Dataset Definition input must specify exactly one of either <code>AthenaDatasetDefinition</code> or <code>RedshiftDatasetDefinition</code> types.
    HookParameters:
      type: object
      minProperties: 0
      maxProperties: 20
      additionalProperties:
        $ref: '#/components/schemas/ConfigValue'
    RuleConfigurationName:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 256
    ProcessingInstanceType:
      type: string
      enum:
        - ml.t3.medium
        - ml.t3.large
        - ml.t3.xlarge
        - ml.t3.2xlarge
        - ml.m4.xlarge
        - ml.m4.2xlarge
        - ml.m4.4xlarge
        - ml.m4.10xlarge
        - ml.m4.16xlarge
        - ml.c4.xlarge
        - ml.c4.2xlarge
        - ml.c4.4xlarge
        - ml.c4.8xlarge
        - ml.p2.xlarge
        - ml.p2.8xlarge
        - ml.p2.16xlarge
        - ml.p3.2xlarge
        - ml.p3.8xlarge
        - ml.p3.16xlarge
        - ml.c5.xlarge
        - ml.c5.2xlarge
        - ml.c5.4xlarge
        - ml.c5.9xlarge
        - ml.c5.18xlarge
        - ml.m5.large
        - ml.m5.xlarge
        - ml.m5.2xlarge
        - ml.m5.4xlarge
        - ml.m5.12xlarge
        - ml.m5.24xlarge
        - ml.r5.large
        - ml.r5.xlarge
        - ml.r5.2xlarge
        - ml.r5.4xlarge
        - ml.r5.8xlarge
        - ml.r5.12xlarge
        - ml.r5.16xlarge
        - ml.r5.24xlarge
        - ml.g4dn.xlarge
        - ml.g4dn.2xlarge
        - ml.g4dn.4xlarge
        - ml.g4dn.8xlarge
        - ml.g4dn.12xlarge
        - ml.g4dn.16xlarge
    OptionalVolumeSizeInGB:
      type: integer
      minimum: 0
    RuleParameters:
      type: object
      minProperties: 0
      maxProperties: 100
      additionalProperties:
        $ref: '#/components/schemas/ConfigValue'
    DebugRuleConfiguration:
      type: object
      required:
        - RuleConfigurationName
        - RuleEvaluatorImage
      properties:
        RuleConfigurationName:
          $ref: '#/components/schemas/RuleConfigurationName'
          description: The name of the rule configuration. It must be unique relative to other rule configuration names.
        LocalPath:
          $ref: '#/components/schemas/DirectoryPath'
          description: Path to local storage location for output of rules. Defaults to <code>/opt/ml/processing/output/rule/</code>.
        S3OutputPath:
          $ref: '#/components/schemas/S3Uri'
          description: Path to Amazon S3 storage location for rules.
        RuleEvaluatorImage:
          $ref: '#/components/schemas/AlgorithmImage'
          description: The Amazon Elastic Container (ECR) Image for the managed rule evaluation.
        InstanceType:
          $ref: '#/components/schemas/ProcessingInstanceType'
          description: The instance type to deploy a Debugger custom rule for debugging a training job.
        VolumeSizeInGB:
          $ref: '#/components/schemas/OptionalVolumeSizeInGB'
          description: 'The size, in GB, of the ML storage volume attached to the processing instance.'
        RuleParameters:
          $ref: '#/components/schemas/RuleParameters'
          description: Runtime configuration for rule container.
      description: 'Configuration information for SageMaker Debugger rules for debugging. To learn more about how to configure the <code>DebugRuleConfiguration</code> parameter, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/debugger-createtrainingjob-api.html">Use the SageMaker and Debugger Configuration API Operations to Create, Update, and Debug Your Training Job</a>.'
    RuleEvaluationStatus:
      type: string
      enum:
        - InProgress
        - NoIssuesFound
        - IssuesFound
        - Error
        - Stopping
        - Stopped
    StatusDetails:
      type: string
      pattern: .*
      maxLength: 1024
    DebugRuleEvaluationStatus:
      type: object
      properties:
        RuleConfigurationName:
          $ref: '#/components/schemas/RuleConfigurationName'
          description: The name of the rule configuration.
        RuleEvaluationJobArn:
          $ref: '#/components/schemas/ProcessingJobArn'
          description: The Amazon Resource Name (ARN) of the rule evaluation job.
        RuleEvaluationStatus:
          $ref: '#/components/schemas/RuleEvaluationStatus'
          description: Status of the rule evaluation.
        StatusDetails:
          $ref: '#/components/schemas/StatusDetails'
          description: Details from the rule evaluation.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: Timestamp when the rule evaluation status was last modified.
      description: Information about the status of the rule evaluation.
    DebugRuleEvaluationStatuses:
      type: array
      items:
        $ref: '#/components/schemas/DebugRuleEvaluationStatus'
      minItems: 0
      maxItems: 20
    DefaultGid:
      type: integer
      minimum: 0
      maximum: 65535
    DefaultUid:
      type: integer
      minimum: 0
      maximum: 65535
    RetentionPolicy:
      type: object
      properties:
        HomeEfsFileSystem:
          $ref: '#/components/schemas/RetentionType'
          description: '<p>The default is <code>Retain</code>, which specifies to keep the data stored on the EFS volume.</p> <p>Specify <code>Delete</code> to delete the data stored on the EFS volume.</p>'
      description: The retention policy for data stored on an Amazon Elastic File System (EFS) volume.
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      minItems: 1
      maxItems: 50
    Success:
      type: boolean
    DeployedImage:
      type: object
      properties:
        SpecifiedImage:
          $ref: '#/components/schemas/ContainerImage'
          description: The image path you specified when you created the model.
        ResolvedImage:
          $ref: '#/components/schemas/ContainerImage'
          description: The specific digest path of the image hosted in this <code>ProductionVariant</code>.
        ResolutionTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time when the image path for the model resolved to the <code>ResolvedImage</code> '
      description: '<p>Gets the Amazon EC2 Container Registry path of the docker image of the model that is hosted in this <a>ProductionVariant</a>.</p> <p>If you used the <code>registry/repository[:tag]</code> form to specify the image path of the primary container when you created the model hosted in this <code>ProductionVariant</code>, the path resolves to a path of the form <code>registry/repository[@digest]</code>. A digest is a hash value that identifies a specific version of an image. For information about Amazon ECR paths, see <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/docker-pull-ecr-image.html">Pulling an Image</a> in the <i>Amazon ECR User Guide</i>.</p>'
    DeployedImages:
      type: array
      items:
        $ref: '#/components/schemas/DeployedImage'
    DeploymentConfig:
      type: object
      required:
        - BlueGreenUpdatePolicy
      properties:
        BlueGreenUpdatePolicy:
          $ref: '#/components/schemas/BlueGreenUpdatePolicy'
          description: <p/>
        AutoRollbackConfiguration:
          $ref: '#/components/schemas/AutoRollbackConfig'
          description: <p/>
      description: 'Currently, the <code>DeploymentConfig</code> API is not supported.'
    DeviceNames:
      type: array
      items:
        $ref: '#/components/schemas/DeviceName'
    ProductId:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*$'
      maxLength: 256
    FailureReason:
      type: string
      maxLength: 1024
    ResolvedAttributes:
      type: object
      properties:
        AutoMLJobObjective:
          $ref: '#/components/schemas/AutoMLJobObjective'
        ProblemType:
          $ref: '#/components/schemas/ProblemType'
          description: The problem type.
        CompletionCriteria:
          $ref: '#/components/schemas/AutoMLJobCompletionCriteria'
      description: The resolved attributes.
    ModelDeployResult:
      type: object
      properties:
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
          description: '<p>The name of the endpoint to which the model has been deployed.</p> <note> <p>If model deployment fails, this field is omitted from the response.</p> </note>'
      description: Provides information about the endpoint of the model deployment.
    InferenceImage:
      type: string
      maxLength: 256
    ModelArtifacts:
      type: object
      required:
        - S3ModelArtifacts
      properties:
        S3ModelArtifacts:
          $ref: '#/components/schemas/S3Uri'
          description: 'The path of the S3 object that contains the model artifacts. For example, <code>s3://bucket-name/keynameprefix/model.tar.gz</code>.'
      description: '<p>Provides information about the location that is configured for storing model artifacts. </p> <p>Model artifacts are the output that results from training a model, and typically consist of trained parameters, a model defintion that describes how to compute inferences, and other metadata.</p>'
    ModelDigests:
      type: object
      properties:
        ArtifactDigest:
          $ref: '#/components/schemas/ArtifactDigest'
          description: Provides a hash value that uniquely identifies the stored model artifacts.
      description: 'Provides information to verify the integrity of stored model artifacts. '
    DeviceFleetArn:
      type: string
      pattern: '^arn:aws[a-z\-]*:iam::\d{12}:device-fleet/?[a-zA-Z_0-9+=,.@\-_/]+$'
    IotRoleAlias:
      type: string
      pattern: '^arn:aws[a-z\-]*:iam::\d{12}:rolealias/?[a-zA-Z_0-9+=,.@\-_/]+$'
    NextToken:
      type: string
      pattern: .*
      maxLength: 8192
    DeviceArn:
      type: string
      pattern: '^arn:aws[a-z\-]*:[a-z\-]*:[a-z\-]*:\d{12}:[a-z\-]*/?[a-zA-Z_0-9+=,.@\-_/]+$'
      minLength: 20
      maxLength: 2048
    DeviceDescription:
      type: string
      pattern: '[\S\s]+'
      minLength: 1
      maxLength: 40
    ThingName:
      type: string
      pattern: '[a-zA-Z0-9:_-]+'
      maxLength: 128
    EdgeModels:
      type: array
      items:
        $ref: '#/components/schemas/EdgeModel'
    Integer:
      type: integer
    ResourceId:
      type: string
      maxLength: 32
    DomainStatus:
      type: string
      enum:
        - Deleting
        - Failed
        - InService
        - Pending
        - Updating
        - Update_Failed
        - Delete_Failed
    EdgePackagingJobArn:
      type: string
      pattern: '^arn:aws[a-z\-]*:sagemaker:[a-z\-]*:\d{12}:edge-packaging-job/?[a-zA-Z_0-9+=,.@\-_/]+$'
      minLength: 20
      maxLength: 2048
    EdgePackagingJobStatus:
      type: string
      enum:
        - STARTING
        - INPROGRESS
        - COMPLETED
        - FAILED
        - STOPPING
        - STOPPED
    EdgePresetDeploymentOutput:
      type: object
      required:
        - Type
      properties:
        Type:
          $ref: '#/components/schemas/EdgePresetDeploymentType'
          description: The deployment type created by SageMaker Edge Manager. Currently only supports Amazon Web Services IoT Greengrass Version 2 components.
        Artifact:
          $ref: '#/components/schemas/EdgePresetDeploymentArtifact'
          description: The Amazon Resource Name (ARN) of the generated deployable resource.
        Status:
          $ref: '#/components/schemas/EdgePresetDeploymentStatus'
          description: The status of the deployable resource.
        StatusMessage:
          $ref: '#/components/schemas/String'
          description: Returns a message describing the status of the deployed resource.
      description: The output of a SageMaker Edge Manager deployable resource.
    ProductionVariantSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ProductionVariantSummary'
      minItems: 1
    EndpointStatus:
      type: string
      enum:
        - OutOfService
        - Creating
        - Updating
        - SystemUpdating
        - RollingBack
        - InService
        - Deleting
        - Failed
    ExperimentSource:
      type: object
      required:
        - SourceArn
      properties:
        SourceArn:
          $ref: '#/components/schemas/ExperimentSourceArn'
          description: The Amazon Resource Name (ARN) of the source.
        SourceType:
          $ref: '#/components/schemas/SourceType'
          description: The source type.
      description: The source of the experiment.
    FeatureGroupStatus:
      type: string
      enum:
        - Creating
        - Created
        - CreateFailed
        - Deleting
        - DeleteFailed
    OfflineStoreStatus:
      type: object
      required:
        - Status
      properties:
        Status:
          $ref: '#/components/schemas/OfflineStoreStatusValue'
          description: An <code>OfflineStore</code> status.
        BlockedReason:
          $ref: '#/components/schemas/BlockedReason'
          description: The justification for why the OfflineStoreStatus is Blocked (if applicable).
      description: The status of <code>OfflineStore</code>.
    FlowDefinitionStatus:
      type: string
      enum:
        - Initializing
        - Active
        - Failed
        - Deleting
    HumanTaskUiStatus:
      type: string
      enum:
        - Active
        - Deleting
    UiTemplateInfo:
      type: object
      properties:
        Url:
          $ref: '#/components/schemas/TemplateUrl'
          description: The URL for the user interface template.
        ContentSha256:
          $ref: '#/components/schemas/TemplateContentSha256'
          description: The SHA-256 digest of the contents of the template.
      description: Container for user interface template information.
    HyperParameterTuningJobStatus:
      type: string
      enum:
        - Completed
        - InProgress
        - Failed
        - Stopped
        - Stopping
    TrainingJobStatusCounters:
      type: object
      properties:
        Completed:
          $ref: '#/components/schemas/TrainingJobStatusCounter'
          description: The number of completed training jobs launched by the hyperparameter tuning job.
        InProgress:
          $ref: '#/components/schemas/TrainingJobStatusCounter'
          description: The number of in-progress training jobs launched by a hyperparameter tuning job.
        RetryableError:
          $ref: '#/components/schemas/TrainingJobStatusCounter'
          description: 'The number of training jobs that failed, but can be retried. A failed training job can be retried only if it failed because an internal service error occurred.'
        NonRetryableError:
          $ref: '#/components/schemas/TrainingJobStatusCounter'
          description: The number of training jobs that failed and can't be retried. A failed training job can't be retried if it failed because a client error occurred.
        Stopped:
          $ref: '#/components/schemas/TrainingJobStatusCounter'
          description: The number of training jobs launched by a hyperparameter tuning job that were manually stopped.
      description: 'The numbers of training jobs launched by a hyperparameter tuning job, categorized by status.'
    ObjectiveStatusCounters:
      type: object
      properties:
        Succeeded:
          $ref: '#/components/schemas/ObjectiveStatusCounter'
          description: The number of training jobs whose final objective metric was evaluated by the hyperparameter tuning job and used in the hyperparameter tuning process.
        Pending:
          $ref: '#/components/schemas/ObjectiveStatusCounter'
          description: The number of training jobs that are in progress and pending evaluation of their final objective metric.
        Failed:
          $ref: '#/components/schemas/ObjectiveStatusCounter'
          description: The number of training jobs whose final objective metric was not evaluated and used in the hyperparameter tuning process. This typically occurs when the training job failed or did not emit an objective metric.
      description: 'Specifies the number of training jobs that this hyperparameter tuning job launched, categorized by the status of their objective metric. The objective metric status shows whether the final objective metric for the training job has been evaluated by the tuning job and used in the hyperparameter tuning process.'
    HyperParameterTrainingJobSummary:
      type: object
      required:
        - TrainingJobName
        - TrainingJobArn
        - CreationTime
        - TrainingJobStatus
        - TunedHyperParameters
      properties:
        TrainingJobDefinitionName:
          $ref: '#/components/schemas/HyperParameterTrainingJobDefinitionName'
          description: The training job definition name.
        TrainingJobName:
          $ref: '#/components/schemas/TrainingJobName'
          description: The name of the training job.
        TrainingJobArn:
          $ref: '#/components/schemas/TrainingJobArn'
          description: The Amazon Resource Name (ARN) of the training job.
        TuningJobName:
          $ref: '#/components/schemas/HyperParameterTuningJobName'
          description: The HyperParameter tuning job that launched the training job.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time that the training job was created.
        TrainingStartTime:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time that the training job started.
        TrainingEndTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'Specifies the time when the training job ends on training instances. You are billed for the time interval between the value of <code>TrainingStartTime</code> and this time. For successful jobs and stopped jobs, this is the time after model artifacts are uploaded. For failed jobs, this is the time when Amazon SageMaker detects a job failure.'
        TrainingJobStatus:
          $ref: '#/components/schemas/TrainingJobStatus'
          description: The status of the training job.
        TunedHyperParameters:
          $ref: '#/components/schemas/HyperParameters'
          description: A list of the hyperparameters for which you specified ranges to search.
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'The reason that the training job failed. '
        FinalHyperParameterTuningJobObjectiveMetric:
          $ref: '#/components/schemas/FinalHyperParameterTuningJobObjectiveMetric'
          description: The <a>FinalHyperParameterTuningJobObjectiveMetric</a> object that specifies the value of the objective metric of the tuning job that launched this training job.
        ObjectiveStatus:
          $ref: '#/components/schemas/ObjectiveStatus'
          description: '<p>The status of the objective metric for the training job:</p> <ul> <li> <p>Succeeded: The final objective metric for the training job was evaluated by the hyperparameter tuning job and used in the hyperparameter tuning process.</p> </li> </ul> <ul> <li> <p>Pending: The training job is in progress and evaluation of its final objective metric is pending.</p> </li> </ul> <ul> <li> <p>Failed: The final objective metric for the training job was not evaluated, and was not used in the hyperparameter tuning process. This typically occurs when the training job failed or did not emit an objective metric.</p> </li> </ul>'
      description: Specifies summary information about a training job.
    ImageStatus:
      type: string
      enum:
        - CREATING
        - CREATED
        - CREATE_FAILED
        - UPDATING
        - UPDATE_FAILED
        - DELETING
        - DELETE_FAILED
    ImageContainerImage:
      type: string
      minLength: 1
      maxLength: 255
    ImageVersionStatus:
      type: string
      enum:
        - CREATING
        - CREATED
        - CREATE_FAILED
        - DELETING
        - DELETE_FAILED
    LabelingJobStatus:
      type: string
      enum:
        - Initializing
        - InProgress
        - Completed
        - Failed
        - Stopping
        - Stopped
    LabelCounters:
      type: object
      properties:
        TotalLabeled:
          $ref: '#/components/schemas/LabelCounter'
          description: The total number of objects labeled.
        HumanLabeled:
          $ref: '#/components/schemas/LabelCounter'
          description: The total number of objects labeled by a human worker.
        MachineLabeled:
          $ref: '#/components/schemas/LabelCounter'
          description: The total number of objects labeled by automated data labeling.
        FailedNonRetryableError:
          $ref: '#/components/schemas/LabelCounter'
          description: The total number of objects that could not be labeled due to an error.
        Unlabeled:
          $ref: '#/components/schemas/LabelCounter'
          description: The total number of objects not yet labeled.
      description: Provides a breakdown of the number of objects labeled.
    JobReferenceCode:
      type: string
      pattern: .+
      minLength: 1
    LabelingJobOutput:
      type: object
      required:
        - OutputDatasetS3Uri
      properties:
        OutputDatasetS3Uri:
          $ref: '#/components/schemas/S3Uri'
          description: 'The Amazon S3 bucket location of the manifest file for labeled data. '
        FinalActiveLearningModelArn:
          $ref: '#/components/schemas/ModelArn'
          description: 'The Amazon Resource Name (ARN) for the most recent Amazon SageMaker model trained as part of automated data labeling. '
      description: 'Specifies the location of the output produced by the labeling job. '
    ModelPackageGroupStatus:
      type: string
      enum:
        - Pending
        - InProgress
        - Completed
        - Failed
        - Deleting
        - DeleteFailed
    ModelPackageVersion:
      type: integer
      minimum: 1
    ModelPackageStatus:
      type: string
      enum:
        - Pending
        - InProgress
        - Completed
        - Failed
        - Deleting
    ModelPackageStatusDetails:
      type: object
      required:
        - ValidationStatuses
      properties:
        ValidationStatuses:
          $ref: '#/components/schemas/ModelPackageStatusItemList'
          description: The validation status of the model package.
        ImageScanStatuses:
          $ref: '#/components/schemas/ModelPackageStatusItemList'
          description: The status of the scan of the Docker image container for the model package.
      description: Specifies the validation and image scan statuses of the model package.
    ScheduleStatus:
      type: string
      enum:
        - Pending
        - Failed
        - Scheduled
        - Stopped
    MonitoringType:
      type: string
      enum:
        - DataQuality
        - ModelQuality
        - ModelBias
        - ModelExplainability
    MonitoringExecutionSummary:
      type: object
      required:
        - MonitoringScheduleName
        - ScheduledTime
        - CreationTime
        - LastModifiedTime
        - MonitoringExecutionStatus
      properties:
        MonitoringScheduleName:
          $ref: '#/components/schemas/MonitoringScheduleName'
          description: The name of the monitoring schedule.
        ScheduledTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time the monitoring job was scheduled.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the monitoring job was created.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp that indicates the last time the monitoring job was modified.
        MonitoringExecutionStatus:
          $ref: '#/components/schemas/ExecutionStatus'
          description: The status of the monitoring job.
        ProcessingJobArn:
          $ref: '#/components/schemas/ProcessingJobArn'
          description: The Amazon Resource Name (ARN) of the monitoring job.
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
          description: The name of the endpoint used to run the monitoring job.
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'Contains the reason a monitoring job failed, if it failed.'
        MonitoringJobDefinitionName:
          $ref: '#/components/schemas/MonitoringJobDefinitionName'
          description: The name of the monitoring job.
        MonitoringType:
          $ref: '#/components/schemas/MonitoringType'
          description: The type of the monitoring job.
      description: Summary of information about the last monitoring job to run.
    NotebookInstanceStatus:
      type: string
      enum:
        - Pending
        - InService
        - Stopping
        - Stopped
        - Failed
        - Deleting
        - Updating
    NetworkInterfaceId:
      type: string
    PipelineExecutionName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,81}'
      minLength: 1
      maxLength: 82
    PipelineExecutionStatus:
      type: string
      enum:
        - Executing
        - Stopping
        - Stopped
        - Failed
        - Succeeded
    PipelineExecutionDescription:
      type: string
      pattern: .*
      minLength: 0
      maxLength: 3072
    PipelineExperimentConfig:
      type: object
      properties:
        ExperimentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the experiment.
        TrialName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the trial.
      description: Specifies the names of the experiment and trial created by a pipeline.
    PipelineExecutionFailureReason:
      type: string
      pattern: .*
      maxLength: 1300
    PipelineStatus:
      type: string
      enum:
        - Active
    ProcessingJobStatus:
      type: string
      enum:
        - InProgress
        - Completed
        - Failed
        - Stopping
        - Stopped
    ExitMessage:
      type: string
      pattern: '[\S\s]*'
      maxLength: 1024
    ServiceCatalogProvisionedProductDetails:
      type: object
      properties:
        ProvisionedProductId:
          $ref: '#/components/schemas/ServiceCatalogEntityId'
          description: The ID of the provisioned product.
        ProvisionedProductStatusMessage:
          $ref: '#/components/schemas/ProvisionedProductStatusMessage'
          description: '<p>The current status of the product.</p> <ul> <li> <p> <code>AVAILABLE</code> - Stable state, ready to perform any operation. The most recent operation succeeded and completed.</p> </li> <li> <p> <code>UNDER_CHANGE</code> - Transitive state. Operations performed might not have valid results. Wait for an AVAILABLE status before performing operations.</p> </li> <li> <p> <code>TAINTED</code> - Stable state, ready to perform any operation. The stack has completed the requested operation but is not exactly what was requested. For example, a request to update to a new version failed and the stack rolled back to the current version.</p> </li> <li> <p> <code>ERROR</code> - An unexpected error occurred. The provisioned product exists but the stack is not running. For example, CloudFormation received a parameter value that was not valid and could not launch the stack.</p> </li> <li> <p> <code>PLAN_IN_PROGRESS</code> - Transitive state. The plan operations were performed to provision a new product, but resources have not yet been created. After reviewing the list of resources to be created, execute the plan. Wait for an AVAILABLE status before performing operations.</p> </li> </ul>'
      description: 'Details of a provisioned service catalog product. For information about service catalog, see <a href="https://docs.aws.amazon.com/servicecatalog/latest/adminguide/introduction.html">What is Amazon Web Services Service Catalog</a>.'
    ProjectStatus:
      type: string
      enum:
        - Pending
        - CreateInProgress
        - CreateCompleted
        - CreateFailed
        - DeleteInProgress
        - DeleteFailed
        - DeleteCompleted
    SubscribedWorkteam:
      type: object
      required:
        - WorkteamArn
      properties:
        WorkteamArn:
          $ref: '#/components/schemas/WorkteamArn'
          description: The Amazon Resource Name (ARN) of the vendor that you have subscribed.
        MarketplaceTitle:
          $ref: '#/components/schemas/String200'
          description: The title of the service provided by the vendor in the Amazon Marketplace.
        SellerName:
          $ref: '#/components/schemas/String'
          description: The name of the vendor in the Amazon Marketplace.
        MarketplaceDescription:
          $ref: '#/components/schemas/String200'
          description: The description of the vendor from the Amazon Marketplace.
        ListingId:
          $ref: '#/components/schemas/String'
          description: Marketplace product listing ID.
      description: Describes a work team of a vendor that does the a labelling job.
    TrainingJobStatus:
      type: string
      enum:
        - InProgress
        - Completed
        - Failed
        - Stopping
        - Stopped
    SecondaryStatus:
      type: string
      enum:
        - Starting
        - LaunchingMLInstances
        - PreparingTrainingStack
        - Downloading
        - DownloadingTrainingImage
        - Training
        - Uploading
        - Stopping
        - Stopped
        - MaxRuntimeExceeded
        - Completed
        - Failed
        - Interrupted
        - MaxWaitTimeExceeded
        - Updating
        - Restarting
    SecondaryStatusTransitions:
      type: array
      items:
        $ref: '#/components/schemas/SecondaryStatusTransition'
    FinalMetricDataList:
      type: array
      items:
        $ref: '#/components/schemas/MetricData'
      minItems: 0
      maxItems: 40
    TrainingTimeInSeconds:
      type: integer
      minimum: 1
    ProfilerRuleEvaluationStatuses:
      type: array
      items:
        $ref: '#/components/schemas/ProfilerRuleEvaluationStatus'
      minItems: 0
      maxItems: 20
    ProfilingStatus:
      type: string
      enum:
        - Enabled
        - Disabled
    TransformJobStatus:
      type: string
      enum:
        - InProgress
        - Completed
        - Failed
        - Stopping
        - Stopped
    TrialComponentSource:
      type: object
      required:
        - SourceArn
      properties:
        SourceArn:
          $ref: '#/components/schemas/TrialComponentSourceArn'
          description: The source ARN.
        SourceType:
          $ref: '#/components/schemas/SourceType'
          description: The source job type.
      description: The Amazon Resource Name (ARN) and job type of the source of a trial component.
    TrialComponentMetricSummaries:
      type: array
      items:
        $ref: '#/components/schemas/TrialComponentMetricSummary'
    TrialSource:
      type: object
      required:
        - SourceArn
      properties:
        SourceArn:
          $ref: '#/components/schemas/TrialSourceArn'
          description: The Amazon Resource Name (ARN) of the source.
        SourceType:
          $ref: '#/components/schemas/SourceType'
          description: The source job type.
      description: The source of the trial.
    EfsUid:
      type: string
      pattern: \d+
      maxLength: 10
    UserProfileStatus:
      type: string
      enum:
        - Deleting
        - Failed
        - InService
        - Pending
        - Updating
        - Update_Failed
        - Delete_Failed
    Workforce:
      type: object
      required:
        - WorkforceName
        - WorkforceArn
      properties:
        WorkforceName:
          $ref: '#/components/schemas/WorkforceName'
          description: The name of the private workforce.
        WorkforceArn:
          $ref: '#/components/schemas/WorkforceArn'
          description: The Amazon Resource Name (ARN) of the private workforce.
        LastUpdatedDate:
          $ref: '#/components/schemas/Timestamp'
          description: 'The most recent date that was used to successfully add one or more IP address ranges (<a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html">CIDRs</a>) to a private workforce''s allow list.'
        SourceIpConfig:
          $ref: '#/components/schemas/SourceIpConfig'
          description: 'A list of one to ten IP address ranges (<a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html">CIDRs</a>) to be added to the workforce allow list. By default, a workforce isn''t restricted to specific IP addresses.'
        SubDomain:
          $ref: '#/components/schemas/String'
          description: The subdomain for your OIDC Identity Provider.
        CognitoConfig:
          $ref: '#/components/schemas/CognitoConfig'
          description: 'The configuration of an Amazon Cognito workforce. A single Cognito workforce is created using and corresponds to a single <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools.html"> Amazon Cognito user pool</a>.'
        OidcConfig:
          $ref: '#/components/schemas/OidcConfigForResponse'
          description: The configuration of an OIDC Identity Provider (IdP) private workforce.
        CreateDate:
          $ref: '#/components/schemas/Timestamp'
          description: The date that the workforce is created.
      description: 'A single private workforce, which is automatically created when you create your first private work team. You can create one private work force in each Amazon Web Services Region. By default, any workforce-related API operation used in a specific region will apply to the workforce created in that region. To learn how to create a private workforce, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-workforce-create-private.html">Create a Private Workforce</a>.'
    Workteam:
      type: object
      required:
        - WorkteamName
        - MemberDefinitions
        - WorkteamArn
        - Description
      properties:
        WorkteamName:
          $ref: '#/components/schemas/WorkteamName'
          description: The name of the work team.
        MemberDefinitions:
          $ref: '#/components/schemas/MemberDefinitions'
          description: <p>A list of <code>MemberDefinition</code> objects that contains objects that identify the workers that make up the work team. </p> <p>Workforces can be created using Amazon Cognito or your own OIDC Identity Provider (IdP). For private workforces created using Amazon Cognito use <code>CognitoMemberDefinition</code>. For workforces created using your own OIDC identity provider (IdP) use <code>OidcMemberDefinition</code>.</p>
        WorkteamArn:
          $ref: '#/components/schemas/WorkteamArn'
          description: The Amazon Resource Name (ARN) that identifies the work team.
        WorkforceArn:
          $ref: '#/components/schemas/WorkforceArn'
          description: The Amazon Resource Name (ARN) of the workforce.
        ProductListingIds:
          $ref: '#/components/schemas/ProductListings'
          description: The Amazon Marketplace identifier for a vendor's work team.
        Description:
          $ref: '#/components/schemas/String200'
          description: A description of the work team.
        SubDomain:
          $ref: '#/components/schemas/String'
          description: The URI of the labeling job's user interface. Workers open this URI to start labeling your data objects.
        CreateDate:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time that the work team was created (timestamp).
        LastUpdatedDate:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time that the work team was last updated (timestamp).
        NotificationConfiguration:
          $ref: '#/components/schemas/NotificationConfiguration'
          description: Configures SNS notifications of available or expiring work items for work teams.
      description: Provides details about a labeling work team.
    VariantName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}'
      maxLength: 63
    VariantWeight:
      type: number
      format: float
      minimum: 0
    TaskCount:
      type: integer
      minimum: 0
    DesiredWeightAndCapacity:
      type: object
      required:
        - VariantName
      properties:
        VariantName:
          $ref: '#/components/schemas/VariantName'
          description: The name of the variant to update.
        DesiredWeight:
          $ref: '#/components/schemas/VariantWeight'
          description: The variant's weight.
        DesiredInstanceCount:
          $ref: '#/components/schemas/TaskCount'
          description: The variant's capacity.
      description: Specifies weight and capacity values for a production variant.
    DesiredWeightAndCapacityList:
      type: array
      items:
        $ref: '#/components/schemas/DesiredWeightAndCapacity'
      minItems: 1
    DetailedModelPackageStatus:
      type: string
      enum:
        - NotStarted
        - InProgress
        - Completed
        - Failed
    DeviceName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}$'
      minLength: 1
      maxLength: 63
    Device:
      type: object
      required:
        - DeviceName
      properties:
        DeviceName:
          $ref: '#/components/schemas/DeviceName'
          description: The name of the device.
        Description:
          $ref: '#/components/schemas/DeviceDescription'
          description: Description of the device.
        IotThingName:
          $ref: '#/components/schemas/ThingName'
          description: Amazon Web Services Internet of Things (IoT) object name.
      description: Information of a particular device.
    DeviceFleetSummary:
      type: object
      required:
        - DeviceFleetArn
        - DeviceFleetName
      properties:
        DeviceFleetArn:
          $ref: '#/components/schemas/DeviceFleetArn'
          description: Amazon Resource Name (ARN) of the device fleet.
        DeviceFleetName:
          $ref: '#/components/schemas/EntityName'
          description: Name of the device fleet.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: Timestamp of when the device fleet was created.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: Timestamp of when the device fleet was last updated.
      description: Summary of the device fleet.
    DeviceFleetSummaries:
      type: array
      items:
        $ref: '#/components/schemas/DeviceFleetSummary'
    DeviceStats:
      type: object
      required:
        - ConnectedDeviceCount
        - RegisteredDeviceCount
      properties:
        ConnectedDeviceCount:
          $ref: '#/components/schemas/Long'
          description: The number of devices connected with a heartbeat.
        RegisteredDeviceCount:
          $ref: '#/components/schemas/Long'
          description: The number of registered devices.
      description: Status of devices.
    DeviceSummary:
      type: object
      required:
        - DeviceName
        - DeviceArn
      properties:
        DeviceName:
          $ref: '#/components/schemas/EntityName'
          description: The unique identifier of the device.
        DeviceArn:
          $ref: '#/components/schemas/DeviceArn'
          description: Amazon Resource Name (ARN) of the device.
        Description:
          $ref: '#/components/schemas/DeviceDescription'
          description: A description of the device.
        DeviceFleetName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the fleet the device belongs to.
        IotThingName:
          $ref: '#/components/schemas/ThingName'
          description: The Amazon Web Services Internet of Things (IoT) object thing name associated with the device..
        RegistrationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The timestamp of the last registration or de-reregistration.
        LatestHeartbeat:
          $ref: '#/components/schemas/Timestamp'
          description: The last heartbeat received from the device.
        Models:
          $ref: '#/components/schemas/EdgeModelSummaries'
          description: Models on the device.
      description: Summary of the device.
    DeviceSummaries:
      type: array
      items:
        $ref: '#/components/schemas/DeviceSummary'
    EdgeModelSummaries:
      type: array
      items:
        $ref: '#/components/schemas/EdgeModelSummary'
    Devices:
      type: array
      items:
        $ref: '#/components/schemas/Device'
    DisableProfiler:
      type: boolean
    DisassociateAdditionalCodeRepositories:
      type: boolean
    DisassociateDefaultCodeRepository:
      type: boolean
    DisassociateNotebookInstanceAcceleratorTypes:
      type: boolean
    DisassociateNotebookInstanceLifecycleConfig:
      type: boolean
    Dollars:
      type: integer
      minimum: 0
      maximum: 2
    DomainDetails:
      type: object
      properties:
        DomainArn:
          $ref: '#/components/schemas/DomainArn'
          description: The domain's Amazon Resource Name (ARN).
        DomainId:
          $ref: '#/components/schemas/DomainId'
          description: The domain ID.
        DomainName:
          $ref: '#/components/schemas/DomainName'
          description: The domain name.
        Status:
          $ref: '#/components/schemas/DomainStatus'
          description: The status.
        CreationTime:
          $ref: '#/components/schemas/CreationTime'
          description: The creation time.
        LastModifiedTime:
          $ref: '#/components/schemas/LastModifiedTime'
          description: The last modified time.
        Url:
          $ref: '#/components/schemas/String1024'
          description: The domain's URL.
      description: The domain's details.
    DomainList:
      type: array
      items:
        $ref: '#/components/schemas/DomainDetails'
    DoubleParameterValue:
      type: number
      format: double
    EdgeModel:
      type: object
      required:
        - ModelName
        - ModelVersion
      properties:
        ModelName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the model.
        ModelVersion:
          $ref: '#/components/schemas/EdgeVersion'
          description: The model version.
        LatestSampleTime:
          $ref: '#/components/schemas/Timestamp'
          description: The timestamp of the last data sample taken.
        LatestInference:
          $ref: '#/components/schemas/Timestamp'
          description: The timestamp of the last inference that was made.
      description: The model on the edge device.
    EdgeModelStat:
      type: object
      required:
        - ModelName
        - ModelVersion
        - OfflineDeviceCount
        - ConnectedDeviceCount
        - ActiveDeviceCount
        - SamplingDeviceCount
      properties:
        ModelName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the model.
        ModelVersion:
          $ref: '#/components/schemas/EdgeVersion'
          description: The model version.
        OfflineDeviceCount:
          $ref: '#/components/schemas/Long'
          description: The number of devices that have this model version and do not have a heart beat.
        ConnectedDeviceCount:
          $ref: '#/components/schemas/Long'
          description: 'The number of devices that have this model version and have a heart beat. '
        ActiveDeviceCount:
          $ref: '#/components/schemas/Long'
          description: 'The number of devices that have this model version, a heart beat, and are currently running.'
        SamplingDeviceCount:
          $ref: '#/components/schemas/Long'
          description: The number of devices with this model version and are producing sample data.
      description: Status of edge devices with this model.
    EdgeModelStats:
      type: array
      items:
        $ref: '#/components/schemas/EdgeModelStat'
    EdgeModelSummary:
      type: object
      required:
        - ModelName
        - ModelVersion
      properties:
        ModelName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the model.
        ModelVersion:
          $ref: '#/components/schemas/EdgeVersion'
          description: The version model.
      description: Summary of model on edge device.
    EdgePresetDeploymentType:
      type: string
      enum:
        - GreengrassV2Component
    EdgePackagingJobSummary:
      type: object
      required:
        - EdgePackagingJobArn
        - EdgePackagingJobName
        - EdgePackagingJobStatus
      properties:
        EdgePackagingJobArn:
          $ref: '#/components/schemas/EdgePackagingJobArn'
          description: The Amazon Resource Name (ARN) of the edge packaging job.
        EdgePackagingJobName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the edge packaging job.
        EdgePackagingJobStatus:
          $ref: '#/components/schemas/EdgePackagingJobStatus'
          description: The status of the edge packaging job.
        CompilationJobName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the SageMaker Neo compilation job.
        ModelName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the model.
        ModelVersion:
          $ref: '#/components/schemas/EdgeVersion'
          description: The version of the model.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The timestamp of when the job was created.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The timestamp of when the edge packaging job was last updated.
      description: Summary of edge packaging job.
    EdgePackagingJobSummaries:
      type: array
      items:
        $ref: '#/components/schemas/EdgePackagingJobSummary'
    EdgePresetDeploymentArtifact:
      type: string
      minLength: 20
      maxLength: 2048
    EdgePresetDeploymentStatus:
      type: string
      enum:
        - COMPLETED
        - FAILED
    MonitoringScheduleList:
      type: array
      items:
        $ref: '#/components/schemas/MonitoringSchedule'
    Endpoint:
      type: object
      required:
        - EndpointName
        - EndpointArn
        - EndpointConfigName
        - EndpointStatus
        - CreationTime
        - LastModifiedTime
      properties:
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
          description: The name of the endpoint.
        EndpointArn:
          $ref: '#/components/schemas/EndpointArn'
          description: The Amazon Resource Name (ARN) of the endpoint.
        EndpointConfigName:
          $ref: '#/components/schemas/EndpointConfigName'
          description: The endpoint configuration associated with the endpoint.
        ProductionVariants:
          $ref: '#/components/schemas/ProductionVariantSummaryList'
          description: A list of the production variants hosted on the endpoint. Each production variant is a model.
        DataCaptureConfig:
          $ref: '#/components/schemas/DataCaptureConfigSummary'
        EndpointStatus:
          $ref: '#/components/schemas/EndpointStatus'
          description: The status of the endpoint.
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'If the endpoint failed, the reason it failed.'
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the endpoint was created.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The last time the endpoint was modified.
        MonitoringSchedules:
          $ref: '#/components/schemas/MonitoringScheduleList'
          description: 'A list of monitoring schedules for the endpoint. For information about model monitoring, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/model-monitor.html">Amazon SageMaker Model Monitor</a>.'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'A list of the tags associated with the endpoint. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services resources</a> in the <i>Amazon Web Services General Reference Guide</i>.'
      description: A hosted endpoint for real-time inference.
    EndpointConfigNameContains:
      type: string
      pattern: '[a-zA-Z0-9-]+'
      maxLength: 63
    EndpointConfigSortKey:
      type: string
      enum:
        - Name
        - CreationTime
    EndpointConfigSummary:
      type: object
      required:
        - EndpointConfigName
        - EndpointConfigArn
        - CreationTime
      properties:
        EndpointConfigName:
          $ref: '#/components/schemas/EndpointConfigName'
          description: The name of the endpoint configuration.
        EndpointConfigArn:
          $ref: '#/components/schemas/EndpointConfigArn'
          description: The Amazon Resource Name (ARN) of the endpoint configuration.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp that shows when the endpoint configuration was created.
      description: Provides summary information for an endpoint configuration.
    EndpointConfigSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/EndpointConfigSummary'
    ProcessingS3InputMode:
      type: string
      enum:
        - Pipe
        - File
    ProcessingS3DataDistributionType:
      type: string
      enum:
        - FullyReplicated
        - ShardedByS3Key
    ProbabilityThresholdAttribute:
      type: number
      format: double
    MonitoringTimeOffsetString:
      type: string
      pattern: ^.?P.*
      minLength: 1
      maxLength: 15
    EndpointNameContains:
      type: string
      pattern: '[a-zA-Z0-9-]+'
      maxLength: 63
    EndpointSortKey:
      type: string
      enum:
        - Name
        - CreationTime
        - Status
    EndpointSummary:
      type: object
      required:
        - EndpointName
        - EndpointArn
        - CreationTime
        - LastModifiedTime
        - EndpointStatus
      properties:
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
          description: The name of the endpoint.
        EndpointArn:
          $ref: '#/components/schemas/EndpointArn'
          description: The Amazon Resource Name (ARN) of the endpoint.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp that shows when the endpoint was created.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp that shows when the endpoint was last modified.
        EndpointStatus:
          $ref: '#/components/schemas/EndpointStatus'
          description: '<p>The status of the endpoint.</p> <ul> <li> <p> <code>OutOfService</code>: Endpoint is not available to take incoming requests.</p> </li> <li> <p> <code>Creating</code>: <a>CreateEndpoint</a> is executing.</p> </li> <li> <p> <code>Updating</code>: <a>UpdateEndpoint</a> or <a>UpdateEndpointWeightsAndCapacities</a> is executing.</p> </li> <li> <p> <code>SystemUpdating</code>: Endpoint is undergoing maintenance and cannot be updated or deleted or re-scaled until it has completed. This maintenance operation does not change any customer-specified values such as VPC config, KMS encryption, model, instance type, or instance count.</p> </li> <li> <p> <code>RollingBack</code>: Endpoint fails to scale up or down or change its variant weight and is in the process of rolling back to its previous configuration. Once the rollback completes, endpoint returns to an <code>InService</code> status. This transitional status only applies to an endpoint that has autoscaling enabled and is undergoing variant weight or capacity changes as part of an <a>UpdateEndpointWeightsAndCapacities</a> call or when the <a>UpdateEndpointWeightsAndCapacities</a> operation is called explicitly.</p> </li> <li> <p> <code>InService</code>: Endpoint is available to process incoming requests.</p> </li> <li> <p> <code>Deleting</code>: <a>DeleteEndpoint</a> is executing.</p> </li> <li> <p> <code>Failed</code>: Endpoint could not be created, updated, or re-scaled. Use <a>DescribeEndpointOutput$FailureReason</a> for information about the failure. <a>DeleteEndpoint</a> is the only operation that can be performed on a failed endpoint.</p> </li> </ul> <p>To get a list of endpoints with a specified status, use the <a>ListEndpointsInput$StatusEquals</a> filter.</p>'
      description: Provides summary information for an endpoint.
    EndpointSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/EndpointSummary'
    EnvironmentKey:
      type: string
      pattern: '[a-zA-Z_][a-zA-Z0-9_]*'
      maxLength: 1024
    EnvironmentValue:
      type: string
      pattern: '[\S\s]*'
      maxLength: 1024
    ExecutionStatus:
      type: string
      enum:
        - Pending
        - Completed
        - CompletedWithViolations
        - InProgress
        - Failed
        - Stopping
        - Stopped
    Experiment:
      type: object
      properties:
        ExperimentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the experiment.
        ExperimentArn:
          $ref: '#/components/schemas/ExperimentArn'
          description: The Amazon Resource Name (ARN) of the experiment.
        DisplayName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: 'The name of the experiment as displayed. If <code>DisplayName</code> isn''t specified, <code>ExperimentName</code> is displayed.'
        Source:
          $ref: '#/components/schemas/ExperimentSource'
        Description:
          $ref: '#/components/schemas/ExperimentDescription'
          description: The description of the experiment.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the experiment was created.
        CreatedBy:
          $ref: '#/components/schemas/UserContext'
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the experiment was last modified.
        LastModifiedBy:
          $ref: '#/components/schemas/UserContext'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: The list of tags that are associated with the experiment. You can use <a>Search</a> API to search on the tags.
      description: The properties of an experiment as returned by the <a>Search</a> API.
    ExperimentSourceArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:.*'
      maxLength: 256
    SourceType:
      type: string
      maxLength: 128
    ExperimentSummary:
      type: object
      properties:
        ExperimentArn:
          $ref: '#/components/schemas/ExperimentArn'
          description: The Amazon Resource Name (ARN) of the experiment.
        ExperimentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the experiment.
        DisplayName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: 'The name of the experiment as displayed. If <code>DisplayName</code> isn''t specified, <code>ExperimentName</code> is displayed.'
        ExperimentSource:
          $ref: '#/components/schemas/ExperimentSource'
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the experiment was created.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the experiment was last modified.
      description: 'A summary of the properties of an experiment. To get the complete set of properties, call the <a>DescribeExperiment</a> API and provide the <code>ExperimentName</code>.'
    ExperimentSummaries:
      type: array
      items:
        $ref: '#/components/schemas/ExperimentSummary'
    Explainability:
      type: object
      properties:
        Report:
          $ref: '#/components/schemas/MetricsSource'
          description: The explainability report for a model.
      description: Contains explainability metrics for a model.
    FeatureType:
      type: string
      enum:
        - Integral
        - Fractional
        - String
    FeatureDefinition:
      type: object
      properties:
        FeatureName:
          $ref: '#/components/schemas/FeatureName'
          description: 'The name of a feature. The type must be a string. <code>FeatureName</code> cannot be any of the following: <code>is_deleted</code>, <code>write_time</code>, <code>api_invocation_time</code>.'
        FeatureType:
          $ref: '#/components/schemas/FeatureType'
          description: 'The value type of a feature. Valid values are Integral, Fractional, or String.'
      description: 'A list of features. You must include <code>FeatureName</code> and <code>FeatureType</code>. Valid feature <code>FeatureType</code>s are <code>Integral</code>, <code>Fractional</code> and <code>String</code>. '
    FeatureGroup:
      type: object
      properties:
        FeatureGroupArn:
          $ref: '#/components/schemas/FeatureGroupArn'
          description: The Amazon Resource Name (ARN) of a <code>FeatureGroup</code>.
        FeatureGroupName:
          $ref: '#/components/schemas/FeatureGroupName'
          description: The name of the <code>FeatureGroup</code>.
        RecordIdentifierFeatureName:
          $ref: '#/components/schemas/FeatureName'
          description: The name of the <code>Feature</code> whose value uniquely identifies a <code>Record</code> defined in the <code>FeatureGroup</code> <code>FeatureDefinitions</code>.
        EventTimeFeatureName:
          $ref: '#/components/schemas/FeatureName'
          description: <p>The name of the feature that stores the <code>EventTime</code> of a Record in a <code>FeatureGroup</code>.</p> <p>A <code>EventTime</code> is point in time when a new event occurs that corresponds to the creation or update of a <code>Record</code> in <code>FeatureGroup</code>. All <code>Records</code> in the <code>FeatureGroup</code> must have a corresponding <code>EventTime</code>.</p>
        FeatureDefinitions:
          $ref: '#/components/schemas/FeatureDefinitions'
          description: '<p>A list of <code>Feature</code>s. Each <code>Feature</code> must include a <code>FeatureName</code> and a <code>FeatureType</code>. </p> <p>Valid <code>FeatureType</code>s are <code>Integral</code>, <code>Fractional</code> and <code>String</code>. </p> <p> <code>FeatureName</code>s cannot be any of the following: <code>is_deleted</code>, <code>write_time</code>, <code>api_invocation_time</code>.</p> <p>You can create up to 2,500 <code>FeatureDefinition</code>s per <code>FeatureGroup</code>.</p>'
        CreationTime:
          $ref: '#/components/schemas/CreationTime'
          description: The time a <code>FeatureGroup</code> was created.
        OnlineStoreConfig:
          $ref: '#/components/schemas/OnlineStoreConfig'
        OfflineStoreConfig:
          $ref: '#/components/schemas/OfflineStoreConfig'
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of the IAM execution role used to create the feature group.
        FeatureGroupStatus:
          $ref: '#/components/schemas/FeatureGroupStatus'
          description: A <code>FeatureGroup</code> status.
        OfflineStoreStatus:
          $ref: '#/components/schemas/OfflineStoreStatus'
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: The reason that the <code>FeatureGroup</code> failed to be replicated in the <code>OfflineStore</code>. This is failure may be due to a failure to create a <code>FeatureGroup</code> in or delete a <code>FeatureGroup</code> from the <code>OfflineStore</code>.
        Description:
          $ref: '#/components/schemas/Description'
          description: A free form description of a <code>FeatureGroup</code>.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: Tags used to define a <code>FeatureGroup</code>.
      description: 'Amazon SageMaker Feature Store stores features in a collection called Feature Group. A Feature Group can be visualized as a table which has rows, with a unique identifier for each row where each column in the table is a feature. In principle, a Feature Group is composed of features and values per features.'
    FeatureGroupMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    FeatureGroupNameContains:
      type: string
      minLength: 1
      maxLength: 64
    FeatureGroupSortBy:
      type: string
      enum:
        - Name
        - FeatureGroupStatus
        - OfflineStoreStatus
        - CreationTime
    FeatureGroupSortOrder:
      type: string
      enum:
        - Ascending
        - Descending
    FeatureGroupSummary:
      type: object
      required:
        - FeatureGroupName
        - FeatureGroupArn
        - CreationTime
      properties:
        FeatureGroupName:
          $ref: '#/components/schemas/FeatureGroupName'
          description: The name of <code>FeatureGroup</code>.
        FeatureGroupArn:
          $ref: '#/components/schemas/FeatureGroupArn'
          description: Unique identifier for the <code>FeatureGroup</code>.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp indicating the time of creation time of the <code>FeatureGroup</code>.
        FeatureGroupStatus:
          $ref: '#/components/schemas/FeatureGroupStatus'
          description: 'The status of a FeatureGroup. The status can be any of the following: <code>Creating</code>, <code>Created</code>, <code>CreateFail</code>, <code>Deleting</code> or <code>DetailFail</code>. '
        OfflineStoreStatus:
          $ref: '#/components/schemas/OfflineStoreStatus'
          description: 'Notifies you if replicating data into the <code>OfflineStore</code> has failed. Returns either: <code>Active</code> or <code>Blocked</code>.'
      description: 'The name, Arn, <code>CreationTime</code>, <code>FeatureGroup</code> values, <code>LastUpdatedTime</code> and <code>EnableOnlineStorage</code> status of a <code>FeatureGroup</code>.'
    FeatureGroupSummaries:
      type: array
      items:
        $ref: '#/components/schemas/FeatureGroupSummary'
    FileSystemAccessMode:
      type: string
      enum:
        - rw
        - ro
    MountPath:
      type: string
      pattern: ^\/.*
      maxLength: 1024
    FileSystemConfig:
      type: object
      properties:
        MountPath:
          $ref: '#/components/schemas/MountPath'
          description: 'The path within the image to mount the user''s EFS home directory. The directory should be empty. If not specified, defaults to <i>/home/sagemaker-user</i>.'
        DefaultUid:
          $ref: '#/components/schemas/DefaultUid'
          description: 'The default POSIX user ID (UID). If not specified, defaults to <code>1000</code>.'
        DefaultGid:
          $ref: '#/components/schemas/DefaultGid'
          description: 'The default POSIX group ID (GID). If not specified, defaults to <code>100</code>.'
      description: The Amazon Elastic File System (EFS) storage configuration for a SageMaker image.
    FileSystemId:
      type: string
      pattern: .*
      minLength: 11
    FileSystemType:
      type: string
      enum:
        - EFS
        - FSxLustre
    ResourcePropertyName:
      type: string
      pattern: .+
      minLength: 1
      maxLength: 255
    Operator:
      type: string
      enum:
        - Equals
        - NotEquals
        - GreaterThan
        - GreaterThanOrEqualTo
        - LessThan
        - LessThanOrEqualTo
        - Contains
        - Exists
        - NotExists
        - In
    FilterValue:
      type: string
      pattern: .+
      minLength: 1
      maxLength: 1024
    Filter:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/ResourcePropertyName'
          description: 'A resource property name. For example, <code>TrainingJobName</code>. For valid property names, see <a>SearchRecord</a>. You must specify a valid property for the resource.'
        Operator:
          $ref: '#/components/schemas/Operator'
          description: '<p>A Boolean binary operator that is used to evaluate the filter. The operator field contains one of the following values:</p> <dl> <dt>Equals</dt> <dd> <p>The value of <code>Name</code> equals <code>Value</code>.</p> </dd> <dt>NotEquals</dt> <dd> <p>The value of <code>Name</code> doesn''t equal <code>Value</code>.</p> </dd> <dt>Exists</dt> <dd> <p>The <code>Name</code> property exists.</p> </dd> <dt>NotExists</dt> <dd> <p>The <code>Name</code> property does not exist.</p> </dd> <dt>GreaterThan</dt> <dd> <p>The value of <code>Name</code> is greater than <code>Value</code>. Not supported for text properties.</p> </dd> <dt>GreaterThanOrEqualTo</dt> <dd> <p>The value of <code>Name</code> is greater than or equal to <code>Value</code>. Not supported for text properties.</p> </dd> <dt>LessThan</dt> <dd> <p>The value of <code>Name</code> is less than <code>Value</code>. Not supported for text properties.</p> </dd> <dt>LessThanOrEqualTo</dt> <dd> <p>The value of <code>Name</code> is less than or equal to <code>Value</code>. Not supported for text properties.</p> </dd> <dt>In</dt> <dd> <p>The value of <code>Name</code> is one of the comma delimited strings in <code>Value</code>. Only supported for text properties.</p> </dd> <dt>Contains</dt> <dd> <p>The value of <code>Name</code> contains the string <code>Value</code>. Only supported for text properties.</p> <p>A <code>SearchExpression</code> can include the <code>Contains</code> operator multiple times when the value of <code>Name</code> is one of the following:</p> <ul> <li> <p> <code>Experiment.DisplayName</code> </p> </li> <li> <p> <code>Experiment.ExperimentName</code> </p> </li> <li> <p> <code>Experiment.Tags</code> </p> </li> <li> <p> <code>Trial.DisplayName</code> </p> </li> <li> <p> <code>Trial.TrialName</code> </p> </li> <li> <p> <code>Trial.Tags</code> </p> </li> <li> <p> <code>TrialComponent.DisplayName</code> </p> </li> <li> <p> <code>TrialComponent.TrialComponentName</code> </p> </li> <li> <p> <code>TrialComponent.Tags</code> </p> </li> <li> <p> <code>TrialComponent.InputArtifacts</code> </p> </li> <li> <p> <code>TrialComponent.OutputArtifacts</code> </p> </li> </ul> <p>A <code>SearchExpression</code> can include only one <code>Contains</code> operator for all other values of <code>Name</code>. In these cases, if you include multiple <code>Contains</code> operators in the <code>SearchExpression</code>, the result is the following error message: "<code>''CONTAINS'' operator usage limit of 1 exceeded.</code>"</p> </dd> </dl>'
        Value:
          $ref: '#/components/schemas/FilterValue'
          description: 'A value used with <code>Name</code> and <code>Operator</code> to determine which resources satisfy the filter''s condition. For numerical properties, <code>Value</code> must be an integer or floating-point decimal. For timestamp properties, <code>Value</code> must be an ISO 8601 date-time string of the following format: <code>YYYY-mm-dd''T''HH:MM:SS</code>.'
      description: '<p>A conditional statement for a search expression that includes a resource property, a Boolean operator, and a value. Resources that match the statement are returned in the results from the <a>Search</a> API.</p> <p>If you specify a <code>Value</code>, but not an <code>Operator</code>, Amazon SageMaker uses the equals operator.</p> <p>In search, there are several property types:</p> <dl> <dt>Metrics</dt> <dd> <p>To define a metric filter, enter a value using the form <code>"Metrics.&lt;name&gt;"</code>, where <code>&lt;name&gt;</code> is a metric name. For example, the following filter searches for training jobs with an <code>"accuracy"</code> metric greater than <code>"0.9"</code>:</p> <p> <code>{</code> </p> <p> <code>"Name": "Metrics.accuracy",</code> </p> <p> <code>"Operator": "GreaterThan",</code> </p> <p> <code>"Value": "0.9"</code> </p> <p> <code>}</code> </p> </dd> <dt>HyperParameters</dt> <dd> <p>To define a hyperparameter filter, enter a value with the form <code>"HyperParameters.&lt;name&gt;"</code>. Decimal hyperparameter values are treated as a decimal in a comparison if the specified <code>Value</code> is also a decimal value. If the specified <code>Value</code> is an integer, the decimal hyperparameter values are treated as integers. For example, the following filter is satisfied by training jobs with a <code>"learning_rate"</code> hyperparameter that is less than <code>"0.5"</code>:</p> <p> <code> {</code> </p> <p> <code> "Name": "HyperParameters.learning_rate",</code> </p> <p> <code> "Operator": "LessThan",</code> </p> <p> <code> "Value": "0.5"</code> </p> <p> <code> }</code> </p> </dd> <dt>Tags</dt> <dd> <p>To define a tag filter, enter a value with the form <code>Tags.&lt;key&gt;</code>.</p> </dd> </dl>'
    FilterList:
      type: array
      items:
        $ref: '#/components/schemas/Filter'
      minItems: 1
      maxItems: 20
    MetricValue:
      type: number
      format: float
    HyperParameterTuningJobObjectiveType:
      type: string
      enum:
        - Maximize
        - Minimize
    MetricName:
      type: string
      pattern: .+
      minLength: 1
      maxLength: 255
    FinalHyperParameterTuningJobObjectiveMetric:
      type: object
      required:
        - MetricName
        - Value
      properties:
        Type:
          $ref: '#/components/schemas/HyperParameterTuningJobObjectiveType'
          description: Whether to minimize or maximize the objective metric. Valid values are Minimize and Maximize.
        MetricName:
          $ref: '#/components/schemas/MetricName'
          description: The name of the objective metric.
        Value:
          $ref: '#/components/schemas/MetricValue'
          description: The value of the objective metric.
      description: Shows the final value for the objective metric for a training job that was launched by a hyperparameter tuning job. You define the objective metric in the <code>HyperParameterTuningJobObjective</code> parameter of <a>HyperParameterTuningJobConfig</a>.
    MetricData:
      type: object
      properties:
        MetricName:
          $ref: '#/components/schemas/MetricName'
          description: The name of the metric.
        Value:
          $ref: '#/components/schemas/Float'
          description: The value of the metric.
        Timestamp:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time that the algorithm emitted the metric.
      description: 'The name, value, and date and time of a metric that was emitted to Amazon CloudWatch.'
    Float:
      type: number
      format: float
    FlowDefinitionSummary:
      type: object
      required:
        - FlowDefinitionName
        - FlowDefinitionArn
        - FlowDefinitionStatus
        - CreationTime
      properties:
        FlowDefinitionName:
          $ref: '#/components/schemas/FlowDefinitionName'
          description: The name of the flow definition.
        FlowDefinitionArn:
          $ref: '#/components/schemas/FlowDefinitionArn'
          description: The Amazon Resource Name (ARN) of the flow definition.
        FlowDefinitionStatus:
          $ref: '#/components/schemas/FlowDefinitionStatus'
          description: 'The status of the flow definition. Valid values:'
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The timestamp when SageMaker created the flow definition.
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: The reason why the flow definition creation failed. A failure reason is returned only when the flow definition status is <code>Failed</code>.
      description: Contains summary information about the flow definition.
    FlowDefinitionSummaries:
      type: array
      items:
        $ref: '#/components/schemas/FlowDefinitionSummary'
    FlowDefinitionTaskAvailabilityLifetimeInSeconds:
      type: integer
      minimum: 1
      maximum: 864000
    FlowDefinitionTaskCount:
      type: integer
      minimum: 1
      maximum: 3
    FlowDefinitionTaskDescription:
      type: string
      pattern: .+
      minLength: 1
      maxLength: 255
    FlowDefinitionTaskKeyword:
      type: string
      pattern: '^[A-Za-z0-9]+( [A-Za-z0-9]+)*$'
      minLength: 1
      maxLength: 30
    FlowDefinitionTaskKeywords:
      type: array
      items:
        $ref: '#/components/schemas/FlowDefinitionTaskKeyword'
      minItems: 1
      maxItems: 5
    FlowDefinitionTaskTimeLimitInSeconds:
      type: integer
      minimum: 30
      maximum: 28800
    FlowDefinitionTaskTitle:
      type: string
      pattern: '^[\t\n\r -\uD7FF\uE000-\uFFFD]*$'
      minLength: 1
      maxLength: 128
    Framework:
      type: string
      enum:
        - TENSORFLOW
        - KERAS
        - MXNET
        - ONNX
        - PYTORCH
        - XGBOOST
        - TFLITE
        - DARKNET
        - SKLEARN
    FrameworkVersion:
      type: string
      pattern: '[0-9]\.[A-Za-z0-9.]+'
      minLength: 3
      maxLength: 10
    PolicyString:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 20480
    SagemakerServicecatalogStatus:
      type: string
      enum:
        - Enabled
        - Disabled
    ResourceType:
      type: string
      enum:
        - TrainingJob
        - Experiment
        - ExperimentTrial
        - ExperimentTrialComponent
        - Endpoint
        - ModelPackage
        - ModelPackageGroup
        - Pipeline
        - PipelineExecution
        - FeatureGroup
    SuggestionQuery:
      type: object
      properties:
        PropertyNameQuery:
          $ref: '#/components/schemas/PropertyNameQuery'
          description: Defines a property name hint. Only property names that begin with the specified hint are included in the response.
      description: Specified in the <a>GetSearchSuggestions</a> request. Limits the property names that are included in the response.
    PropertyNameSuggestionList:
      type: array
      items:
        $ref: '#/components/schemas/PropertyNameSuggestion'
    GitConfigUrl:
      type: string
      pattern: '^https://([^/]+)/?(.*)$'
    SecretArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:secretsmanager:[a-z0-9\-]*:[0-9]{12}:secret:.*'
      minLength: 1
      maxLength: 2048
    GitConfigForUpdate:
      type: object
      properties:
        SecretArn:
          $ref: '#/components/schemas/SecretArn'
          description: '<p>The Amazon Resource Name (ARN) of the Amazon Web Services Secrets Manager secret that contains the credentials used to access the git repository. The secret must have a staging label of <code>AWSCURRENT</code> and must be in the following format:</p> <p> <code>{"username": <i>UserName</i>, "password": <i>Password</i>}</code> </p>'
      description: Specifies configuration details for a Git repository when the repository is updated.
    Group:
      type: string
      pattern: '[\p{L}\p{M}\p{S}\p{N}\p{P}]+'
      minLength: 1
      maxLength: 63
    Groups:
      type: array
      items:
        $ref: '#/components/schemas/Group'
      minItems: 1
      maxItems: 10
    HumanLoopActivationConditions:
      type: string
      maxLength: 10240
    HumanLoopActivationConditionsConfig:
      type: object
      required:
        - HumanLoopActivationConditions
      properties:
        HumanLoopActivationConditions:
          $ref: '#/components/schemas/HumanLoopActivationConditions'
          description: 'JSON expressing use-case specific conditions declaratively. If any condition is matched, atomic tasks are created against the configured work team. The set of conditions is different for Rekognition and Textract. For more information about how to structure the JSON, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/a2i-human-fallback-conditions-json-schema.html">JSON Schema for Human Loop Activation Conditions in Amazon Augmented AI</a> in the <i>Amazon SageMaker Developer Guide</i>.'
      description: Defines under what conditions SageMaker creates a human loop. Used within . See for the required format of activation conditions.
    PublicWorkforceTaskPrice:
      type: object
      properties:
        AmountInUsd:
          $ref: '#/components/schemas/USD'
          description: Defines the amount of money paid to an Amazon Mechanical Turk worker in United States dollars.
      description: '<p>Defines the amount of money paid to an Amazon Mechanical Turk worker for each task performed. </p> <p>Use one of the following prices for bounding box tasks. Prices are in US dollars and should be based on the complexity of the task; the longer it takes in your initial testing, the more you should offer.</p> <ul> <li> <p>0.036</p> </li> <li> <p>0.048</p> </li> <li> <p>0.060</p> </li> <li> <p>0.072</p> </li> <li> <p>0.120</p> </li> <li> <p>0.240</p> </li> <li> <p>0.360</p> </li> <li> <p>0.480</p> </li> <li> <p>0.600</p> </li> <li> <p>0.720</p> </li> <li> <p>0.840</p> </li> <li> <p>0.960</p> </li> <li> <p>1.080</p> </li> <li> <p>1.200</p> </li> </ul> <p>Use one of the following prices for image classification, text classification, and custom tasks. Prices are in US dollars.</p> <ul> <li> <p>0.012</p> </li> <li> <p>0.024</p> </li> <li> <p>0.036</p> </li> <li> <p>0.048</p> </li> <li> <p>0.060</p> </li> <li> <p>0.072</p> </li> <li> <p>0.120</p> </li> <li> <p>0.240</p> </li> <li> <p>0.360</p> </li> <li> <p>0.480</p> </li> <li> <p>0.600</p> </li> <li> <p>0.720</p> </li> <li> <p>0.840</p> </li> <li> <p>0.960</p> </li> <li> <p>1.080</p> </li> <li> <p>1.200</p> </li> </ul> <p>Use one of the following prices for semantic segmentation tasks. Prices are in US dollars.</p> <ul> <li> <p>0.840</p> </li> <li> <p>0.960</p> </li> <li> <p>1.080</p> </li> <li> <p>1.200</p> </li> </ul> <p>Use one of the following prices for Textract AnalyzeDocument Important Form Key Amazon Augmented AI review tasks. Prices are in US dollars.</p> <ul> <li> <p>2.400 </p> </li> <li> <p>2.280 </p> </li> <li> <p>2.160 </p> </li> <li> <p>2.040 </p> </li> <li> <p>1.920 </p> </li> <li> <p>1.800 </p> </li> <li> <p>1.680 </p> </li> <li> <p>1.560 </p> </li> <li> <p>1.440 </p> </li> <li> <p>1.320 </p> </li> <li> <p>1.200 </p> </li> <li> <p>1.080 </p> </li> <li> <p>0.960 </p> </li> <li> <p>0.840 </p> </li> <li> <p>0.720 </p> </li> <li> <p>0.600 </p> </li> <li> <p>0.480 </p> </li> <li> <p>0.360 </p> </li> <li> <p>0.240 </p> </li> <li> <p>0.120 </p> </li> <li> <p>0.072 </p> </li> <li> <p>0.060 </p> </li> <li> <p>0.048 </p> </li> <li> <p>0.036 </p> </li> <li> <p>0.024 </p> </li> <li> <p>0.012 </p> </li> </ul> <p>Use one of the following prices for Rekognition DetectModerationLabels Amazon Augmented AI review tasks. Prices are in US dollars.</p> <ul> <li> <p>1.200 </p> </li> <li> <p>1.080 </p> </li> <li> <p>0.960 </p> </li> <li> <p>0.840 </p> </li> <li> <p>0.720 </p> </li> <li> <p>0.600 </p> </li> <li> <p>0.480 </p> </li> <li> <p>0.360 </p> </li> <li> <p>0.240 </p> </li> <li> <p>0.120 </p> </li> <li> <p>0.072 </p> </li> <li> <p>0.060 </p> </li> <li> <p>0.048 </p> </li> <li> <p>0.036 </p> </li> <li> <p>0.024 </p> </li> <li> <p>0.012 </p> </li> </ul> <p>Use one of the following prices for Amazon Augmented AI custom human review tasks. Prices are in US dollars.</p> <ul> <li> <p>1.200 </p> </li> <li> <p>1.080 </p> </li> <li> <p>0.960 </p> </li> <li> <p>0.840 </p> </li> <li> <p>0.720 </p> </li> <li> <p>0.600 </p> </li> <li> <p>0.480 </p> </li> <li> <p>0.360 </p> </li> <li> <p>0.240 </p> </li> <li> <p>0.120 </p> </li> <li> <p>0.072 </p> </li> <li> <p>0.060 </p> </li> <li> <p>0.048 </p> </li> <li> <p>0.036 </p> </li> <li> <p>0.024 </p> </li> <li> <p>0.012 </p> </li> </ul>'
    UiConfig:
      type: object
      properties:
        UiTemplateS3Uri:
          $ref: '#/components/schemas/S3Uri'
          description: 'The Amazon S3 bucket location of the UI template, or worker task template. This is the template used to render the worker UI and tools for labeling job tasks. For more information about the contents of a UI template, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-custom-templates-step2.html"> Creating Your Custom Labeling Task Template</a>.'
        HumanTaskUiArn:
          $ref: '#/components/schemas/HumanTaskUiArn'
          description: '<p>The ARN of the worker task template used to render the worker UI and tools for labeling job tasks.</p> <p>Use this parameter when you are creating a labeling job for named entity recognition, 3D point cloud and video frame labeling jobs. Use your labeling job task type to select one of the following ARNs and use it with this parameter when you create a labeling job. Replace <code>aws-region</code> with the Amazon Web Services Region you are creating your labeling job in. For example, replace <code>aws-region</code> with <code>us-west-1</code> if you create a labeling job in US West (N. California).</p> <p> <b>Named Entity Recognition</b> </p> <p>Use the following <code>HumanTaskUiArn</code> for named entity recognition labeling jobs:</p> <p> <code>arn:aws:sagemaker:aws-region:394669845002:human-task-ui/NamedEntityRecognition</code> </p> <p> <b>3D Point Cloud HumanTaskUiArns</b> </p> <p>Use this <code>HumanTaskUiArn</code> for 3D point cloud object detection and 3D point cloud object detection adjustment labeling jobs. </p> <ul> <li> <p> <code>arn:aws:sagemaker:aws-region:394669845002:human-task-ui/PointCloudObjectDetection</code> </p> </li> </ul> <p> Use this <code>HumanTaskUiArn</code> for 3D point cloud object tracking and 3D point cloud object tracking adjustment labeling jobs. </p> <ul> <li> <p> <code>arn:aws:sagemaker:aws-region:394669845002:human-task-ui/PointCloudObjectTracking</code> </p> </li> </ul> <p> Use this <code>HumanTaskUiArn</code> for 3D point cloud semantic segmentation and 3D point cloud semantic segmentation adjustment labeling jobs.</p> <ul> <li> <p> <code>arn:aws:sagemaker:aws-region:394669845002:human-task-ui/PointCloudSemanticSegmentation</code> </p> </li> </ul> <p> <b>Video Frame HumanTaskUiArns</b> </p> <p>Use this <code>HumanTaskUiArn</code> for video frame object detection and video frame object detection adjustment labeling jobs. </p> <ul> <li> <p> <code>arn:aws:sagemaker:region:394669845002:human-task-ui/VideoObjectDetection</code> </p> </li> </ul> <p> Use this <code>HumanTaskUiArn</code> for video frame object tracking and video frame object tracking adjustment labeling jobs. </p> <ul> <li> <p> <code>arn:aws:sagemaker:aws-region:394669845002:human-task-ui/VideoObjectTracking</code> </p> </li> </ul>'
      description: '<p>Provided configuration information for the worker UI for a labeling job. Provide either <code>HumanTaskUiArn</code> or <code>UiTemplateS3Uri</code>.</p> <p>For named entity recognition, 3D point cloud and video frame labeling jobs, use <code>HumanTaskUiArn</code>.</p> <p>For all other Ground Truth built-in task types and custom task types, use <code>UiTemplateS3Uri</code> to specify the location of a worker task template in Amazon S3.</p>'
    TaskKeywords:
      type: array
      items:
        $ref: '#/components/schemas/TaskKeyword'
      minItems: 1
      maxItems: 5
    TaskTitle:
      type: string
      pattern: '^[\t\n\r -\uD7FF\uE000-\uFFFD]*$'
      minLength: 1
      maxLength: 128
    TaskDescription:
      type: string
      pattern: .+
      minLength: 1
      maxLength: 255
    NumberOfHumanWorkersPerDataObject:
      type: integer
      minimum: 1
      maximum: 9
    TaskTimeLimitInSeconds:
      type: integer
      minimum: 30
    TaskAvailabilityLifetimeInSeconds:
      type: integer
      minimum: 60
    MaxConcurrentTaskCount:
      type: integer
      minimum: 1
      maximum: 1000
    HumanTaskUiSummary:
      type: object
      required:
        - HumanTaskUiName
        - HumanTaskUiArn
        - CreationTime
      properties:
        HumanTaskUiName:
          $ref: '#/components/schemas/HumanTaskUiName'
          description: The name of the human task user interface.
        HumanTaskUiArn:
          $ref: '#/components/schemas/HumanTaskUiArn'
          description: The Amazon Resource Name (ARN) of the human task user interface.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp when SageMaker created the human task user interface.
      description: Container for human task user interface information.
    HumanTaskUiSummaries:
      type: array
      items:
        $ref: '#/components/schemas/HumanTaskUiSummary'
    HyperParameterAlgorithmSpecification:
      type: object
      required:
        - TrainingInputMode
      properties:
        TrainingImage:
          $ref: '#/components/schemas/AlgorithmImage'
          description: ' The registry path of the Docker image that contains the training algorithm. For information about Docker registry paths for built-in algorithms, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-algo-docker-registry-paths.html">Algorithms Provided by Amazon SageMaker: Common Parameters</a>. Amazon SageMaker supports both <code>registry/repository[:tag]</code> and <code>registry/repository[@digest]</code> image path formats. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms.html">Using Your Own Algorithms with Amazon SageMaker</a>.'
        TrainingInputMode:
          $ref: '#/components/schemas/TrainingInputMode'
          description: '<p>The input mode that the algorithm supports: File or Pipe. In File input mode, Amazon SageMaker downloads the training data from Amazon S3 to the storage volume that is attached to the training instance and mounts the directory to the Docker volume for the training container. In Pipe input mode, Amazon SageMaker streams data directly from Amazon S3 to the container. </p> <p>If you specify File mode, make sure that you provision the storage volume that is attached to the training instance with enough capacity to accommodate the training data downloaded from Amazon S3, the model artifacts, and intermediate information.</p> <p/> <p>For more information about input modes, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html">Algorithms</a>. </p>'
        AlgorithmName:
          $ref: '#/components/schemas/ArnOrName'
          description: 'The name of the resource algorithm to use for the hyperparameter tuning job. If you specify a value for this parameter, do not specify a value for <code>TrainingImage</code>.'
        MetricDefinitions:
          $ref: '#/components/schemas/MetricDefinitionList'
          description: An array of <a>MetricDefinition</a> objects that specify the metrics that the algorithm emits.
      description: Specifies which training algorithm to use for training jobs that a hyperparameter tuning job launches and the metrics to monitor.
    HyperParameterKey:
      type: string
      pattern: .*
      maxLength: 256
    ParameterName:
      type: string
      pattern: '[\p{L}\p{M}\p{Z}\p{S}\p{N}\p{P}]*'
      maxLength: 256
    ParameterType:
      type: string
      enum:
        - Integer
        - Continuous
        - Categorical
        - FreeText
    ParameterRange:
      type: object
      properties:
        IntegerParameterRangeSpecification:
          $ref: '#/components/schemas/IntegerParameterRangeSpecification'
          description: A <code>IntegerParameterRangeSpecification</code> object that defines the possible values for an integer hyperparameter.
        ContinuousParameterRangeSpecification:
          $ref: '#/components/schemas/ContinuousParameterRangeSpecification'
          description: A <code>ContinuousParameterRangeSpecification</code> object that defines the possible values for a continuous hyperparameter.
        CategoricalParameterRangeSpecification:
          $ref: '#/components/schemas/CategoricalParameterRangeSpecification'
          description: A <code>CategoricalParameterRangeSpecification</code> object that defines the possible values for a categorical hyperparameter.
      description: 'Defines the possible values for categorical, continuous, and integer hyperparameters to be used by an algorithm.'
    HyperParameterValue:
      type: string
      pattern: .*
      maxLength: 2500
    HyperParameterSpecification:
      type: object
      required:
        - Name
        - Type
      properties:
        Name:
          $ref: '#/components/schemas/ParameterName'
          description: The name of this hyperparameter. The name must be unique.
        Description:
          $ref: '#/components/schemas/EntityDescription'
          description: A brief description of the hyperparameter.
        Type:
          $ref: '#/components/schemas/ParameterType'
          description: 'The type of this hyperparameter. The valid types are <code>Integer</code>, <code>Continuous</code>, <code>Categorical</code>, and <code>FreeText</code>.'
        Range:
          $ref: '#/components/schemas/ParameterRange'
          description: The allowed range for this hyperparameter.
        IsTunable:
          $ref: '#/components/schemas/Boolean'
          description: Indicates whether this hyperparameter is tunable in a hyperparameter tuning job.
        IsRequired:
          $ref: '#/components/schemas/Boolean'
          description: Indicates whether this hyperparameter is required.
        DefaultValue:
          $ref: '#/components/schemas/HyperParameterValue'
          description: 'The default value for this hyperparameter. If a default value is specified, a hyperparameter cannot be required.'
      description: Defines a hyperparameter to be used by an algorithm.
    HyperParameterSpecifications:
      type: array
      items:
        $ref: '#/components/schemas/HyperParameterSpecification'
      minItems: 0
      maxItems: 100
    HyperParameterTrainingJobDefinitionName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,63}'
      minLength: 1
      maxLength: 64
    HyperParameterTuningJobObjective:
      type: object
      required:
        - Type
        - MetricName
      properties:
        Type:
          $ref: '#/components/schemas/HyperParameterTuningJobObjectiveType'
          description: Whether to minimize or maximize the objective metric.
        MetricName:
          $ref: '#/components/schemas/MetricName'
          description: The name of the metric to use for the objective metric.
      description: 'Defines the objective metric for a hyperparameter tuning job. Hyperparameter tuning uses the value of this metric to evaluate the training jobs it launches, and returns the training job that results in either the highest or lowest value for this metric, depending on the value you specify for the <code>Type</code> parameter.'
    ParameterRanges:
      type: object
      properties:
        IntegerParameterRanges:
          $ref: '#/components/schemas/IntegerParameterRanges'
          description: The array of <a>IntegerParameterRange</a> objects that specify ranges of integer hyperparameters that a hyperparameter tuning job searches.
        ContinuousParameterRanges:
          $ref: '#/components/schemas/ContinuousParameterRanges'
          description: The array of <a>ContinuousParameterRange</a> objects that specify ranges of continuous hyperparameters that a hyperparameter tuning job searches.
        CategoricalParameterRanges:
          $ref: '#/components/schemas/CategoricalParameterRanges'
          description: The array of <a>CategoricalParameterRange</a> objects that specify ranges of categorical hyperparameters that a hyperparameter tuning job searches.
      description: '<p>Specifies ranges of integer, continuous, and categorical hyperparameters that a hyperparameter tuning job searches. The hyperparameter tuning job launches training jobs with hyperparameter values within these ranges to find the combination of values that result in the training job with the best performance as measured by the objective metric of the hyperparameter tuning job.</p> <note> <p>You can specify a maximum of 20 hyperparameters that a hyperparameter tuning job can search over. Every possible value of a categorical parameter range counts against this limit.</p> </note>'
    HyperParameterTrainingJobSummaries:
      type: array
      items:
        $ref: '#/components/schemas/HyperParameterTrainingJobSummary'
    HyperParameterTuningJobStrategyType:
      type: string
      enum:
        - Bayesian
        - Random
      description: 'The strategy hyperparameter tuning uses to find the best combination of hyperparameters for your model. Currently, the only supported value is <code>Bayesian</code>.'
    ResourceLimits:
      type: object
      required:
        - MaxNumberOfTrainingJobs
        - MaxParallelTrainingJobs
      properties:
        MaxNumberOfTrainingJobs:
          $ref: '#/components/schemas/MaxNumberOfTrainingJobs'
          description: The maximum number of training jobs that a hyperparameter tuning job can launch.
        MaxParallelTrainingJobs:
          $ref: '#/components/schemas/MaxParallelTrainingJobs'
          description: The maximum number of concurrent training jobs that a hyperparameter tuning job can launch.
      description: Specifies the maximum number of training jobs and parallel training jobs that a hyperparameter tuning job can launch.
    TrainingJobEarlyStoppingType:
      type: string
      enum:
        - 'Off'
        - Auto
    TuningJobCompletionCriteria:
      type: object
      required:
        - TargetObjectiveMetricValue
      properties:
        TargetObjectiveMetricValue:
          $ref: '#/components/schemas/TargetObjectiveMetricValue'
          description: The value of the objective metric.
      description: The job completion criteria.
    HyperParameterTuningJobObjectives:
      type: array
      items:
        $ref: '#/components/schemas/HyperParameterTuningJobObjective'
    HyperParameterTuningJobSortByOptions:
      type: string
      enum:
        - Name
        - Status
        - CreationTime
    HyperParameterTuningJobSummary:
      type: object
      required:
        - HyperParameterTuningJobName
        - HyperParameterTuningJobArn
        - HyperParameterTuningJobStatus
        - Strategy
        - CreationTime
        - TrainingJobStatusCounters
        - ObjectiveStatusCounters
      properties:
        HyperParameterTuningJobName:
          $ref: '#/components/schemas/HyperParameterTuningJobName'
          description: The name of the tuning job.
        HyperParameterTuningJobArn:
          $ref: '#/components/schemas/HyperParameterTuningJobArn'
          description: The Amazon Resource Name (ARN) of the tuning job.
        HyperParameterTuningJobStatus:
          $ref: '#/components/schemas/HyperParameterTuningJobStatus'
          description: The status of the tuning job.
        Strategy:
          $ref: '#/components/schemas/HyperParameterTuningJobStrategyType'
          description: 'Specifies the search strategy hyperparameter tuning uses to choose which hyperparameters to use for each iteration. Currently, the only valid value is Bayesian.'
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time that the tuning job was created.
        HyperParameterTuningEndTime:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time that the tuning job ended.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time that the tuning job was modified.
        TrainingJobStatusCounters:
          $ref: '#/components/schemas/TrainingJobStatusCounters'
          description: 'The <a>TrainingJobStatusCounters</a> object that specifies the numbers of training jobs, categorized by status, that this tuning job launched.'
        ObjectiveStatusCounters:
          $ref: '#/components/schemas/ObjectiveStatusCounters'
          description: 'The <a>ObjectiveStatusCounters</a> object that specifies the numbers of training jobs, categorized by objective metric status, that this tuning job launched.'
        ResourceLimits:
          $ref: '#/components/schemas/ResourceLimits'
          description: The <a>ResourceLimits</a> object that specifies the maximum number of training jobs and parallel training jobs allowed for this tuning job.
      description: Provides summary information about a hyperparameter tuning job.
    HyperParameterTuningJobSummaries:
      type: array
      items:
        $ref: '#/components/schemas/HyperParameterTuningJobSummary'
    ParentHyperParameterTuningJobs:
      type: array
      items:
        $ref: '#/components/schemas/ParentHyperParameterTuningJob'
      minItems: 1
      maxItems: 5
    HyperParameterTuningJobWarmStartType:
      type: string
      enum:
        - IdenticalDataAndAlgorithm
        - TransferLearning
    Image:
      type: object
      required:
        - CreationTime
        - ImageArn
        - ImageName
        - ImageStatus
        - LastModifiedTime
      properties:
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the image was created.
        Description:
          $ref: '#/components/schemas/ImageDescription'
          description: The description of the image.
        DisplayName:
          $ref: '#/components/schemas/ImageDisplayName'
          description: The name of the image as displayed.
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'When a create, update, or delete operation fails, the reason for the failure.'
        ImageArn:
          $ref: '#/components/schemas/ImageArn'
          description: The Amazon Resource Name (ARN) of the image.
        ImageName:
          $ref: '#/components/schemas/ImageName'
          description: The name of the image.
        ImageStatus:
          $ref: '#/components/schemas/ImageStatus'
          description: The status of the image.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the image was last modified.
      description: A SageMaker image. A SageMaker image represents a set of container images that are derived from a common base container image. Each of these container images is represented by a SageMaker <code>ImageVersion</code>.
    RepositoryAccessMode:
      type: string
      enum:
        - Platform
        - Vpc
    RepositoryAuthConfig:
      type: object
      required:
        - RepositoryCredentialsProviderArn
      properties:
        RepositoryCredentialsProviderArn:
          $ref: '#/components/schemas/RepositoryCredentialsProviderArn'
          description: 'The Amazon Resource Name (ARN) of an Amazon Web Services Lambda function that provides credentials to authenticate to the private Docker registry where your model image is hosted. For information about how to create an Amazon Web Services Lambda function, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/getting-started-create-function.html">Create a Lambda function with the console</a> in the <i>Amazon Web Services Lambda Developer Guide</i>.'
      description: Specifies an authentication configuration for the private docker registry where your model image is hosted. Specify a value for this property only if you specified <code>Vpc</code> as the value for the <code>RepositoryAccessMode</code> field of the <code>ImageConfig</code> object that you passed to a call to <code>CreateModel</code> and the private Docker registry where the model image is hosted requires authentication.
    ImageDeleteProperty:
      type: string
      pattern: (^DisplayName$)|(^Description$)
      minLength: 1
      maxLength: 11
    ImageDeletePropertyList:
      type: array
      items:
        $ref: '#/components/schemas/ImageDeleteProperty'
      maxItems: 2
    ImageDigest:
      type: string
      pattern: '^[Ss][Hh][Aa]256:[0-9a-fA-F]{64}$'
      maxLength: 72
    ImageNameContains:
      type: string
      pattern: '^[a-zA-Z0-9\-.]+$'
      maxLength: 63
    ImageSortBy:
      type: string
      enum:
        - CREATION_TIME
        - LAST_MODIFIED_TIME
        - IMAGE_NAME
    ImageSortOrder:
      type: string
      enum:
        - ASCENDING
        - DESCENDING
    ImageVersion:
      type: object
      required:
        - CreationTime
        - ImageArn
        - ImageVersionArn
        - ImageVersionStatus
        - LastModifiedTime
        - Version
      properties:
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the version was created.
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'When a create or delete operation fails, the reason for the failure.'
        ImageArn:
          $ref: '#/components/schemas/ImageArn'
          description: The Amazon Resource Name (ARN) of the image the version is based on.
        ImageVersionArn:
          $ref: '#/components/schemas/ImageVersionArn'
          description: The ARN of the version.
        ImageVersionStatus:
          $ref: '#/components/schemas/ImageVersionStatus'
          description: The status of the version.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the version was last modified.
        Version:
          $ref: '#/components/schemas/ImageVersionNumber'
          description: The version number.
      description: A version of a SageMaker <code>Image</code>. A version represents an existing container image.
    ImageVersionSortBy:
      type: string
      enum:
        - CREATION_TIME
        - LAST_MODIFIED_TIME
        - VERSION
    ImageVersionSortOrder:
      type: string
      enum:
        - ASCENDING
        - DESCENDING
    ImageVersions:
      type: array
      items:
        $ref: '#/components/schemas/ImageVersion'
    Images:
      type: array
      items:
        $ref: '#/components/schemas/Image'
    InferenceExecutionMode:
      type: string
      enum:
        - Serial
        - Direct
    ModelPackageContainerDefinitionList:
      type: array
      items:
        $ref: '#/components/schemas/ModelPackageContainerDefinition'
      minItems: 1
      maxItems: 15
    TransformInstanceTypes:
      type: array
      items:
        $ref: '#/components/schemas/TransformInstanceType'
      minItems: 1
    RealtimeInferenceInstanceTypes:
      type: array
      items:
        $ref: '#/components/schemas/ProductionVariantInstanceType'
    ResponseMIMETypes:
      type: array
      items:
        $ref: '#/components/schemas/ResponseMIMEType'
    InitialTaskCount:
      type: integer
      minimum: 1
    IntegerParameterRange:
      type: object
      required:
        - Name
        - MinValue
        - MaxValue
      properties:
        Name:
          $ref: '#/components/schemas/ParameterKey'
          description: The name of the hyperparameter to search.
        MinValue:
          $ref: '#/components/schemas/ParameterValue'
          description: The minimum value of the hyperparameter to search.
        MaxValue:
          $ref: '#/components/schemas/ParameterValue'
          description: The maximum value of the hyperparameter to search.
        ScalingType:
          $ref: '#/components/schemas/HyperParameterScalingType'
          description: '<p>The scale that hyperparameter tuning uses to search the hyperparameter range. For information about choosing a hyperparameter scale, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-ranges.html#scaling-type">Hyperparameter Scaling</a>. One of the following values:</p> <dl> <dt>Auto</dt> <dd> <p>Amazon SageMaker hyperparameter tuning chooses the best scale for the hyperparameter.</p> </dd> <dt>Linear</dt> <dd> <p>Hyperparameter tuning searches the values in the hyperparameter range by using a linear scale.</p> </dd> <dt>Logarithmic</dt> <dd> <p>Hyperparameter tuning searches the values in the hyperparameter range by using a logarithmic scale.</p> <p>Logarithmic scaling works only for ranges that have only values greater than 0.</p> </dd> </dl>'
      description: 'For a hyperparameter of the integer type, specifies the range that a hyperparameter tuning job searches.'
    IntegerParameterRangeSpecification:
      type: object
      required:
        - MinValue
        - MaxValue
      properties:
        MinValue:
          $ref: '#/components/schemas/ParameterValue'
          description: The minimum integer value allowed.
        MaxValue:
          $ref: '#/components/schemas/ParameterValue'
          description: The maximum integer value allowed.
      description: Defines the possible values for an integer hyperparameter.
    IntegerParameterRanges:
      type: array
      items:
        $ref: '#/components/schemas/IntegerParameterRange'
      minItems: 0
      maxItems: 20
    InvocationsMaxRetries:
      type: integer
      minimum: 0
      maximum: 3
    InvocationsTimeoutInSeconds:
      type: integer
      minimum: 1
      maximum: 3600
    JobReferenceCodeContains:
      type: string
      pattern: .+
      minLength: 1
      maxLength: 255
    JsonContentType:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*\/[a-zA-Z0-9](-*[a-zA-Z0-9.])*'
      minLength: 1
      maxLength: 256
    JupyterServerAppSettings:
      type: object
      properties:
        DefaultResourceSpec:
          $ref: '#/components/schemas/ResourceSpec'
          description: The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the JupyterServer app.
      description: The JupyterServer app settings.
    KernelDisplayName:
      type: string
      maxLength: 1024
    KernelGatewayAppSettings:
      type: object
      properties:
        DefaultResourceSpec:
          $ref: '#/components/schemas/ResourceSpec'
          description: The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the KernelGateway app.
        CustomImages:
          $ref: '#/components/schemas/CustomImages'
          description: A list of custom SageMaker images that are configured to run as a KernelGateway app.
      description: The KernelGateway app settings.
    KernelSpecs:
      type: array
      items:
        $ref: '#/components/schemas/KernelSpec'
      minItems: 1
      maxItems: 1
    KernelName:
      type: string
      maxLength: 1024
    KernelSpec:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/KernelName'
          description: The name of the Jupyter kernel in the image. This value is case sensitive.
        DisplayName:
          $ref: '#/components/schemas/KernelDisplayName'
          description: The display name of the kernel.
      description: The specification of a Jupyter kernel.
    LabelCounter:
      type: integer
      minimum: 0
    LabelCountersForWorkteam:
      type: object
      properties:
        HumanLabeled:
          $ref: '#/components/schemas/LabelCounter'
          description: The total number of data objects labeled by a human worker.
        PendingHuman:
          $ref: '#/components/schemas/LabelCounter'
          description: The total number of data objects that need to be labeled by a human worker.
        Total:
          $ref: '#/components/schemas/LabelCounter'
          description: The total number of tasks in the labeling job.
      description: Provides counts for human-labeled tasks in the labeling job.
    LabelingJobAlgorithmSpecificationArn:
      type: string
      pattern: 'arn:.*'
      maxLength: 2048
    LabelingJobResourceConfig:
      type: object
      properties:
        VolumeKmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: '<p>The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the training and inference jobs used for automated data labeling. </p> <p>You can only specify a <code>VolumeKmsKeyId</code> when you create a labeling job with automated data labeling enabled using the API operation <code>CreateLabelingJob</code>. You cannot specify an Amazon Web Services KMS customer managed CMK to encrypt the storage volume used for automated data labeling model training and inference when you create a labeling job using the console. To learn more, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-security.html">Output Data and Storage Volume Encryption</a>.</p> <p>The <code>VolumeKmsKeyId</code> can be any of the following formats:</p> <ul> <li> <p>KMS Key ID</p> <p> <code>"1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> <li> <p>Amazon Resource Name (ARN) of a KMS Key</p> <p> <code>"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> </ul>'
      description: 'Configure encryption on the storage volume attached to the ML compute instance used to run automated data labeling model training and inference. '
    LabelingJobDataAttributes:
      type: object
      properties:
        ContentClassifiers:
          $ref: '#/components/schemas/ContentClassifiers'
          description: Declares that your content is free of personally identifiable information or adult content. Amazon SageMaker may restrict the Amazon Mechanical Turk workers that can view your task based on this information.
      description: Attributes of the data specified by the customer. Use these to describe the data to be labeled.
    LabelingJobS3DataSource:
      type: object
      required:
        - ManifestS3Uri
      properties:
        ManifestS3Uri:
          $ref: '#/components/schemas/S3Uri'
          description: '<p>The Amazon S3 location of the manifest file that describes the input data objects. </p> <p>The input manifest file referenced in <code>ManifestS3Uri</code> must contain one of the following keys: <code>source-ref</code> or <code>source</code>. The value of the keys are interpreted as follows:</p> <ul> <li> <p> <code>source-ref</code>: The source of the object is the Amazon S3 object specified in the value. Use this value when the object is a binary object, such as an image.</p> </li> <li> <p> <code>source</code>: The source of the object is the value. Use this value when the object is a text value.</p> </li> </ul> <p>If you are a new user of Ground Truth, it is recommended you review <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-input-data-input-manifest.html">Use an Input Manifest File </a> in the Amazon SageMaker Developer Guide to learn how to create an input manifest file.</p>'
      description: The Amazon S3 location of the input data objects.
    LabelingJobSnsDataSource:
      type: object
      required:
        - SnsTopicArn
      properties:
        SnsTopicArn:
          $ref: '#/components/schemas/SnsTopicArn'
          description: The Amazon SNS input topic Amazon Resource Name (ARN). Specify the ARN of the input topic you will use to send new data objects to a streaming labeling job.
      description: An Amazon SNS data source used for streaming labeling jobs.
    LabelingJobDataSource:
      type: object
      properties:
        S3DataSource:
          $ref: '#/components/schemas/LabelingJobS3DataSource'
          description: The Amazon S3 location of the input data objects.
        SnsDataSource:
          $ref: '#/components/schemas/LabelingJobSnsDataSource'
          description: 'An Amazon SNS data source used for streaming labeling jobs. To learn more, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-streaming-labeling-job.html#sms-streaming-how-it-works-send-data">Send Data to a Streaming Labeling Job</a>. '
      description: '<p>Provides information about the location of input data.</p> <p>You must specify at least one of the following: <code>S3DataSource</code> or <code>SnsDataSource</code>.</p> <p>Use <code>SnsDataSource</code> to specify an SNS input topic for a streaming labeling job. If you do not specify and SNS input topic ARN, Ground Truth will create a one-time labeling job.</p> <p>Use <code>S3DataSource</code> to specify an input manifest file for both streaming and one-time labeling jobs. Adding an <code>S3DataSource</code> is optional if you use <code>SnsDataSource</code> to create a streaming labeling job.</p>'
    LabelingJobForWorkteamSummary:
      type: object
      required:
        - JobReferenceCode
        - WorkRequesterAccountId
        - CreationTime
      properties:
        LabelingJobName:
          $ref: '#/components/schemas/LabelingJobName'
          description: The name of the labeling job that the work team is assigned to.
        JobReferenceCode:
          $ref: '#/components/schemas/JobReferenceCode'
          description: A unique identifier for a labeling job. You can use this to refer to a specific labeling job.
        WorkRequesterAccountId:
          $ref: '#/components/schemas/AccountId'
          description: The Amazon Web Services account ID of the account used to start the labeling job.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time that the labeling job was created.
        LabelCounters:
          $ref: '#/components/schemas/LabelCountersForWorkteam'
          description: Provides information about the progress of a labeling job.
        NumberOfHumanWorkersPerDataObject:
          $ref: '#/components/schemas/NumberOfHumanWorkersPerDataObject'
          description: The configured number of workers per data object.
      description: Provides summary information for a work team.
    LabelingJobForWorkteamSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/LabelingJobForWorkteamSummary'
    MaxHumanLabeledObjectCount:
      type: integer
      minimum: 1
    MaxPercentageOfInputDatasetLabeled:
      type: integer
      minimum: 1
      maximum: 100
    LabelingJobSummary:
      type: object
      required:
        - LabelingJobName
        - LabelingJobArn
        - CreationTime
        - LastModifiedTime
        - LabelingJobStatus
        - LabelCounters
        - WorkteamArn
        - PreHumanTaskLambdaArn
      properties:
        LabelingJobName:
          $ref: '#/components/schemas/LabelingJobName'
          description: The name of the labeling job.
        LabelingJobArn:
          $ref: '#/components/schemas/LabelingJobArn'
          description: The Amazon Resource Name (ARN) assigned to the labeling job when it was created.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time that the job was created (timestamp).
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time that the job was last modified (timestamp).
        LabelingJobStatus:
          $ref: '#/components/schemas/LabelingJobStatus'
          description: 'The current status of the labeling job. '
        LabelCounters:
          $ref: '#/components/schemas/LabelCounters'
          description: Counts showing the progress of the labeling job.
        WorkteamArn:
          $ref: '#/components/schemas/WorkteamArn'
          description: The Amazon Resource Name (ARN) of the work team assigned to the job.
        PreHumanTaskLambdaArn:
          $ref: '#/components/schemas/LambdaFunctionArn'
          description: The Amazon Resource Name (ARN) of a Lambda function. The function is run before each data object is sent to a worker.
        AnnotationConsolidationLambdaArn:
          $ref: '#/components/schemas/LambdaFunctionArn'
          description: 'The Amazon Resource Name (ARN) of the Lambda function used to consolidate the annotations from individual workers into a label for a data object. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-annotation-consolidation.html">Annotation Consolidation</a>.'
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'If the <code>LabelingJobStatus</code> field is <code>Failed</code>, this field contains a description of the error.'
        LabelingJobOutput:
          $ref: '#/components/schemas/LabelingJobOutput'
          description: The location of the output produced by the labeling job.
        InputConfig:
          $ref: '#/components/schemas/LabelingJobInputConfig'
          description: Input configuration for the labeling job.
      description: Provides summary information about a labeling job.
    LabelingJobSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/LabelingJobSummary'
    LambdaStepMetadata:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/String256'
          description: The Amazon Resource Name (ARN) of the Lambda function that was run by this step execution.
        OutputParameters:
          $ref: '#/components/schemas/OutputParameterList'
          description: A list of the output parameters of the Lambda step.
      description: Metadata for a Lambda step.
    StringParameterValue:
      type: string
      pattern: .*
      maxLength: 256
    SourceUri:
      type: string
      pattern: .*
      maxLength: 2048
    SortActionsBy:
      type: string
      enum:
        - Name
        - CreationTime
    SortOrder:
      type: string
      enum:
        - Ascending
        - Descending
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    NameContains:
      type: string
      pattern: '[a-zA-Z0-9\-]+'
      maxLength: 63
    SortArtifactsBy:
      type: string
      enum:
        - CreationTime
    SortAssociationsBy:
      type: string
      enum:
        - SourceArn
        - DestinationArn
        - SourceType
        - DestinationType
        - CreationTime
    ListCompilationJobsSortBy:
      type: string
      enum:
        - Name
        - CreationTime
        - Status
    SortContextsBy:
      type: string
      enum:
        - Name
        - CreationTime
    MonitoringJobDefinitionSortKey:
      type: string
      enum:
        - Name
        - CreationTime
    MonitoringJobDefinitionSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/MonitoringJobDefinitionSummary'
    ListMaxResults:
      type: integer
      maximum: 100
    ListDeviceFleetsSortBy:
      type: string
      enum:
        - NAME
        - CREATION_TIME
        - LAST_MODIFIED_TIME
    ListEdgePackagingJobsSortBy:
      type: string
      enum:
        - NAME
        - MODEL_NAME
        - CREATION_TIME
        - LAST_MODIFIED_TIME
        - STATUS
    OrderKey:
      type: string
      enum:
        - Ascending
        - Descending
    PaginationToken:
      type: string
      pattern: .*
      maxLength: 8192
    SortExperimentsBy:
      type: string
      enum:
        - Name
        - CreationTime
    OfflineStoreStatusValue:
      type: string
      enum:
        - Active
        - Blocked
        - Disabled
    ListLabelingJobsForWorkteamSortByOptions:
      type: string
      enum:
        - CreationTime
    SortBy:
      type: string
      enum:
        - Name
        - CreationTime
        - Status
    ListLineageEntityParameterKey:
      type: array
      items:
        $ref: '#/components/schemas/StringParameterValue'
    ModelPackageGroupSortBy:
      type: string
      enum:
        - Name
        - CreationTime
    ModelPackageGroupSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ModelPackageGroupSummary'
    ModelPackageType:
      type: string
      enum:
        - Versioned
        - Unversioned
        - Both
    ModelPackageSortBy:
      type: string
      enum:
        - Name
        - CreationTime
    ModelPackageSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ModelPackageSummary'
    ModelSortKey:
      type: string
      enum:
        - Name
        - CreationTime
    ModelNameContains:
      type: string
      pattern: '[a-zA-Z0-9-]+'
      maxLength: 63
    ModelSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ModelSummary'
    MonitoringExecutionSortKey:
      type: string
      enum:
        - CreationTime
        - ScheduledTime
        - Status
    MonitoringExecutionSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/MonitoringExecutionSummary'
    MonitoringScheduleSortKey:
      type: string
      enum:
        - Name
        - CreationTime
        - Status
    MonitoringScheduleSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/MonitoringScheduleSummary'
    NotebookInstanceLifecycleConfigSortKey:
      type: string
      enum:
        - Name
        - CreationTime
        - LastModifiedTime
    NotebookInstanceLifecycleConfigSortOrder:
      type: string
      enum:
        - Ascending
        - Descending
    NotebookInstanceLifecycleConfigNameContains:
      type: string
      pattern: '[a-zA-Z0-9-]+'
      maxLength: 63
    NotebookInstanceLifecycleConfigSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/NotebookInstanceLifecycleConfigSummary'
    NotebookInstanceSortKey:
      type: string
      enum:
        - Name
        - CreationTime
        - Status
    NotebookInstanceSortOrder:
      type: string
      enum:
        - Ascending
        - Descending
    NotebookInstanceNameContains:
      type: string
      pattern: '[a-zA-Z0-9-]+'
      maxLength: 63
    NotebookInstanceSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/NotebookInstanceSummary'
    PipelineExecutionStepList:
      type: array
      items:
        $ref: '#/components/schemas/PipelineExecutionStep'
      minItems: 0
      maxItems: 100
    SortPipelineExecutionsBy:
      type: string
      enum:
        - CreationTime
        - PipelineExecutionArn
    PipelineExecutionSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/PipelineExecutionSummary'
      minItems: 0
      maxItems: 100
    ParameterList:
      type: array
      items:
        $ref: '#/components/schemas/Parameter'
      minItems: 0
      maxItems: 50
    SortPipelinesBy:
      type: string
      enum:
        - Name
        - CreationTime
    PipelineSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/PipelineSummary'
      minItems: 0
      maxItems: 100
    ProcessingJobSummaries:
      type: array
      items:
        $ref: '#/components/schemas/ProcessingJobSummary'
    ProjectSortBy:
      type: string
      enum:
        - Name
        - CreationTime
    ProjectSortOrder:
      type: string
      enum:
        - Ascending
        - Descending
    ProjectSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ProjectSummary'
    SubscribedWorkteams:
      type: array
      items:
        $ref: '#/components/schemas/SubscribedWorkteam'
    ListTagsMaxResults:
      type: integer
      minimum: 50
    TrainingJobSortByOptions:
      type: string
      enum:
        - Name
        - CreationTime
        - Status
        - FinalObjectiveMetricValue
    TrainingJobSummaries:
      type: array
      items:
        $ref: '#/components/schemas/TrainingJobSummary'
    TransformJobSummaries:
      type: array
      items:
        $ref: '#/components/schemas/TransformJobSummary'
    TrialComponentKey256:
      type: string
      pattern: .*
      maxLength: 256
    ListTrialComponentKey256:
      type: array
      items:
        $ref: '#/components/schemas/TrialComponentKey256'
    SortTrialComponentsBy:
      type: string
      enum:
        - Name
        - CreationTime
    TrialComponentSummaries:
      type: array
      items:
        $ref: '#/components/schemas/TrialComponentSummary'
    SortTrialsBy:
      type: string
      enum:
        - Name
        - CreationTime
    TrialSummaries:
      type: array
      items:
        $ref: '#/components/schemas/TrialSummary'
    UserProfileSortKey:
      type: string
      enum:
        - CreationTime
        - LastModifiedTime
    UserProfileList:
      type: array
      items:
        $ref: '#/components/schemas/UserProfileDetails'
    ListWorkforcesSortByOptions:
      type: string
      enum:
        - Name
        - CreateDate
    Workforces:
      type: array
      items:
        $ref: '#/components/schemas/Workforce'
    ListWorkteamsSortByOptions:
      type: string
      enum:
        - Name
        - CreateDate
    Workteams:
      type: array
      items:
        $ref: '#/components/schemas/Workteam'
    MaxNumberOfTrainingJobs:
      type: integer
      minimum: 1
    MaxParallelTrainingJobs:
      type: integer
      minimum: 1
    MaxRuntimeInSeconds:
      type: integer
      minimum: 1
    MaxWaitTimeInSeconds:
      type: integer
      minimum: 1
    MaximumRetryAttempts:
      type: integer
      minimum: 1
      maximum: 30
    MediaType:
      type: string
      pattern: '^[-\w]+\/[-\w+]+$'
      maxLength: 64
    OidcMemberDefinition:
      type: object
      required:
        - Groups
      properties:
        Groups:
          $ref: '#/components/schemas/Groups'
          description: A list of comma seperated strings that identifies user groups in your OIDC IdP. Each user group is made up of a group of private workers.
      description: 'A list of user groups that exist in your OIDC Identity Provider (IdP). One to ten groups can be used to create a single private work team. When you add a user group to the list of <code>Groups</code>, you can add that user group to one or more private work teams. If you add a user group to a private work team, all workers in that user group are added to the work team.'
    MemberDefinition:
      type: object
      properties:
        CognitoMemberDefinition:
          $ref: '#/components/schemas/CognitoMemberDefinition'
          description: The Amazon Cognito user group that is part of the work team.
        OidcMemberDefinition:
          $ref: '#/components/schemas/OidcMemberDefinition'
          description: 'A list user groups that exist in your OIDC Identity Provider (IdP). One to ten groups can be used to create a single private work team. When you add a user group to the list of <code>Groups</code>, you can add that user group to one or more private work teams. If you add a user group to a private work team, all workers in that user group are added to the work team.'
      description: Defines an Amazon Cognito or your own OIDC IdP user group that is part of a work team.
    MetadataPropertyValue:
      type: string
      pattern: .*
      maxLength: 1024
    MetricDatum:
      type: object
      properties:
        MetricName:
          $ref: '#/components/schemas/AutoMLMetricEnum'
          description: The name of the metric.
        Value:
          $ref: '#/components/schemas/Float'
          description: The value of the metric.
        Set:
          $ref: '#/components/schemas/MetricSetSource'
          description: The dataset split from which the AutoML job produced the metric.
      description: Information about the metric for a candidate produced by an AutoML job.
    MetricSetSource:
      type: string
      enum:
        - Train
        - Validation
        - Test
    MetricRegex:
      type: string
      pattern: .+
      minLength: 1
      maxLength: 500
    MetricDefinition:
      type: object
      required:
        - Name
        - Regex
      properties:
        Name:
          $ref: '#/components/schemas/MetricName'
          description: The name of the metric.
        Regex:
          $ref: '#/components/schemas/MetricRegex'
          description: 'A regular expression that searches the output of a training job and gets the value of the metric. For more information about using regular expressions to define metrics, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-metrics.html">Defining Objective Metrics</a>.'
      description: Specifies a metric that the training algorithm writes to <code>stderr</code> or <code>stdout</code>. Amazon SageMakerhyperparameter tuning captures all defined metrics. You specify one metric that a hyperparameter tuning job uses as its objective metric to choose the best training job.
    MonitoringGroundTruthS3Input:
      type: object
      properties:
        S3Uri:
          $ref: '#/components/schemas/MonitoringS3Uri'
          description: The address of the Amazon S3 location of the ground truth labels.
      description: The ground truth labels for the dataset used for the monitoring job.
    ModelCacheSetting:
      type: string
      enum:
        - Enabled
        - Disabled
    ModelDataQuality:
      type: object
      properties:
        Statistics:
          $ref: '#/components/schemas/MetricsSource'
          description: Data quality statistics for a model.
        Constraints:
          $ref: '#/components/schemas/MetricsSource'
          description: Data quality constraints for a model.
      description: Data quality constraints and statistics for a model.
    ModelQuality:
      type: object
      properties:
        Statistics:
          $ref: '#/components/schemas/MetricsSource'
          description: Model quality statistics.
        Constraints:
          $ref: '#/components/schemas/MetricsSource'
          description: Model quality constraints.
      description: Model quality statistics and constraints.
    ModelPackage:
      type: object
      properties:
        ModelPackageName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the model.
        ModelPackageGroupName:
          $ref: '#/components/schemas/EntityName'
          description: The model group to which the model belongs.
        ModelPackageVersion:
          $ref: '#/components/schemas/ModelPackageVersion'
          description: The version number of a versioned model.
        ModelPackageArn:
          $ref: '#/components/schemas/ModelPackageArn'
          description: The Amazon Resource Name (ARN) of the model package.
        ModelPackageDescription:
          $ref: '#/components/schemas/EntityDescription'
          description: The description of the model package.
        CreationTime:
          $ref: '#/components/schemas/CreationTime'
          description: The time that the model package was created.
        InferenceSpecification:
          $ref: '#/components/schemas/InferenceSpecification'
        SourceAlgorithmSpecification:
          $ref: '#/components/schemas/SourceAlgorithmSpecification'
        ValidationSpecification:
          $ref: '#/components/schemas/ModelPackageValidationSpecification'
        ModelPackageStatus:
          $ref: '#/components/schemas/ModelPackageStatus'
          description: <p>The status of the model package. This can be one of the following values.</p> <ul> <li> <p> <code>PENDING</code> - The model package is pending being created.</p> </li> <li> <p> <code>IN_PROGRESS</code> - The model package is in the process of being created.</p> </li> <li> <p> <code>COMPLETED</code> - The model package was successfully created.</p> </li> <li> <p> <code>FAILED</code> - The model package failed.</p> </li> <li> <p> <code>DELETING</code> - The model package is in the process of being deleted.</p> </li> </ul>
        ModelPackageStatusDetails:
          $ref: '#/components/schemas/ModelPackageStatusDetails'
        CertifyForMarketplace:
          $ref: '#/components/schemas/CertifyForMarketplace'
          description: 'Whether the model package is to be certified to be listed on Amazon Web Services Marketplace. For information about listing model packages on Amazon Web Services Marketplace, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-mkt-list.html">List Your Algorithm or Model Package on Amazon Web Services Marketplace</a>.'
        ModelApprovalStatus:
          $ref: '#/components/schemas/ModelApprovalStatus'
          description: <p>The approval status of the model. This can be one of the following values.</p> <ul> <li> <p> <code>APPROVED</code> - The model is approved</p> </li> <li> <p> <code>REJECTED</code> - The model is rejected.</p> </li> <li> <p> <code>PENDING_MANUAL_APPROVAL</code> - The model is waiting for manual approval.</p> </li> </ul>
        CreatedBy:
          $ref: '#/components/schemas/UserContext'
        MetadataProperties:
          $ref: '#/components/schemas/MetadataProperties'
        ModelMetrics:
          $ref: '#/components/schemas/ModelMetrics'
          description: Metrics for the model.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The last time the model package was modified.
        LastModifiedBy:
          $ref: '#/components/schemas/UserContext'
        ApprovalDescription:
          $ref: '#/components/schemas/ApprovalDescription'
          description: A description provided when the model approval is set.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'A list of the tags associated with the model package. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services resources</a> in the <i>Amazon Web Services General Reference Guide</i>.'
      description: A versioned model that can be deployed for SageMaker inference.
    ModelPackageContainerDefinition:
      type: object
      required:
        - Image
      properties:
        ContainerHostname:
          $ref: '#/components/schemas/ContainerHostname'
          description: The DNS host name for the Docker container.
        Image:
          $ref: '#/components/schemas/ContainerImage'
          description: '<p>The Amazon EC2 Container Registry (Amazon ECR) path where inference code is stored.</p> <p>If you are using your own custom algorithm instead of an algorithm provided by Amazon SageMaker, the inference code must meet Amazon SageMaker requirements. Amazon SageMaker supports both <code>registry/repository[:tag]</code> and <code>registry/repository[@digest]</code> image path formats. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms.html">Using Your Own Algorithms with Amazon SageMaker</a>.</p>'
        ImageDigest:
          $ref: '#/components/schemas/ImageDigest'
          description: An MD5 hash of the training algorithm that identifies the Docker image used for training.
        ModelDataUrl:
          $ref: '#/components/schemas/Url'
          description: '<p>The Amazon S3 path where the model artifacts, which result from model training, are stored. This path must point to a single <code>gzip</code> compressed tar archive (<code>.tar.gz</code> suffix).</p> <note> <p>The model artifacts must be in an S3 bucket that is in the same region as the model package.</p> </note>'
        ProductId:
          $ref: '#/components/schemas/ProductId'
          description: The Amazon Web Services Marketplace product ID of the model package.
        Environment:
          $ref: '#/components/schemas/EnvironmentMap'
          description: The environment variables to set in the Docker container. Each key and value in the <code>Environment</code> string to string map can have length of up to 1024. We support up to 16 entries in the map.
      description: Describes the Docker container for the model package.
    ModelPackageGroup:
      type: object
      properties:
        ModelPackageGroupName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the model group.
        ModelPackageGroupArn:
          $ref: '#/components/schemas/ModelPackageGroupArn'
          description: The Amazon Resource Name (ARN) of the model group.
        ModelPackageGroupDescription:
          $ref: '#/components/schemas/EntityDescription'
          description: The description for the model group.
        CreationTime:
          $ref: '#/components/schemas/CreationTime'
          description: The time that the model group was created.
        CreatedBy:
          $ref: '#/components/schemas/UserContext'
        ModelPackageGroupStatus:
          $ref: '#/components/schemas/ModelPackageGroupStatus'
          description: <p>The status of the model group. This can be one of the following values.</p> <ul> <li> <p> <code>PENDING</code> - The model group is pending being created.</p> </li> <li> <p> <code>IN_PROGRESS</code> - The model group is in the process of being created.</p> </li> <li> <p> <code>COMPLETED</code> - The model group was successfully created.</p> </li> <li> <p> <code>FAILED</code> - The model group failed.</p> </li> <li> <p> <code>DELETING</code> - The model group is in the process of being deleted.</p> </li> <li> <p> <code>DELETE_FAILED</code> - SageMaker failed to delete the model group.</p> </li> </ul>
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'A list of the tags associated with the model group. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services resources</a> in the <i>Amazon Web Services General Reference Guide</i>.'
      description: A group of versioned models in the model registry.
    ModelPackageGroupSummary:
      type: object
      required:
        - ModelPackageGroupName
        - ModelPackageGroupArn
        - CreationTime
        - ModelPackageGroupStatus
      properties:
        ModelPackageGroupName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the model group.
        ModelPackageGroupArn:
          $ref: '#/components/schemas/ModelPackageGroupArn'
          description: The Amazon Resource Name (ARN) of the model group.
        ModelPackageGroupDescription:
          $ref: '#/components/schemas/EntityDescription'
          description: A description of the model group.
        CreationTime:
          $ref: '#/components/schemas/CreationTime'
          description: The time that the model group was created.
        ModelPackageGroupStatus:
          $ref: '#/components/schemas/ModelPackageGroupStatus'
          description: The status of the model group.
      description: Summary information about a model group.
    ModelPackageStatusItemList:
      type: array
      items:
        $ref: '#/components/schemas/ModelPackageStatusItem'
    ModelPackageStatusItem:
      type: object
      required:
        - Name
        - Status
      properties:
        Name:
          $ref: '#/components/schemas/EntityName'
          description: The name of the model package for which the overall status is being reported.
        Status:
          $ref: '#/components/schemas/DetailedModelPackageStatus'
          description: The current status.
        FailureReason:
          $ref: '#/components/schemas/String'
          description: 'if the overall status is <code>Failed</code>, the reason for the failure.'
      description: Represents the overall status of a model package.
    ModelPackageSummary:
      type: object
      required:
        - ModelPackageName
        - ModelPackageArn
        - CreationTime
        - ModelPackageStatus
      properties:
        ModelPackageName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the model package.
        ModelPackageGroupName:
          $ref: '#/components/schemas/EntityName'
          description: 'If the model package is a versioned model, the model group that the versioned model belongs to.'
        ModelPackageVersion:
          $ref: '#/components/schemas/ModelPackageVersion'
          description: 'If the model package is a versioned model, the version of the model.'
        ModelPackageArn:
          $ref: '#/components/schemas/ModelPackageArn'
          description: The Amazon Resource Name (ARN) of the model package.
        ModelPackageDescription:
          $ref: '#/components/schemas/EntityDescription'
          description: A brief description of the model package.
        CreationTime:
          $ref: '#/components/schemas/CreationTime'
          description: A timestamp that shows when the model package was created.
        ModelPackageStatus:
          $ref: '#/components/schemas/ModelPackageStatus'
          description: The overall status of the model package.
        ModelApprovalStatus:
          $ref: '#/components/schemas/ModelApprovalStatus'
          description: <p>The approval status of the model. This can be one of the following values.</p> <ul> <li> <p> <code>APPROVED</code> - The model is approved</p> </li> <li> <p> <code>REJECTED</code> - The model is rejected.</p> </li> <li> <p> <code>PENDING_MANUAL_APPROVAL</code> - The model is waiting for manual approval.</p> </li> </ul>
      description: Provides summary information about a model package.
    ModelPackageValidationProfile:
      type: object
      required:
        - ProfileName
        - TransformJobDefinition
      properties:
        ProfileName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the profile for the model package.
        TransformJobDefinition:
          $ref: '#/components/schemas/TransformJobDefinition'
          description: The <code>TransformJobDefinition</code> object that describes the transform job used for the validation of the model package.
      description: '<p>Contains data, such as the inputs and targeted instance types that are used in the process of validating the model package.</p> <p>The data provided in the validation profile is made available to your buyers on Amazon Web Services Marketplace.</p>'
    ModelPackageValidationProfiles:
      type: array
      items:
        $ref: '#/components/schemas/ModelPackageValidationProfile'
      minItems: 1
      maxItems: 1
    MonitoringProblemType:
      type: string
      enum:
        - BinaryClassification
        - MulticlassClassification
        - Regression
    ModelStepMetadata:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/String256'
          description: The Amazon Resource Name (ARN) of the created model.
      description: Metadata for Model steps.
    ModelSummary:
      type: object
      required:
        - ModelName
        - ModelArn
        - CreationTime
      properties:
        ModelName:
          $ref: '#/components/schemas/ModelName'
          description: The name of the model that you want a summary for.
        ModelArn:
          $ref: '#/components/schemas/ModelArn'
          description: The Amazon Resource Name (ARN) of the model.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp that indicates when the model was created.
      description: Provides summary information about a model.
    MonitoringAppSpecification:
      type: object
      required:
        - ImageUri
      properties:
        ImageUri:
          $ref: '#/components/schemas/ImageUri'
          description: The container image to be run by the monitoring job.
        ContainerEntrypoint:
          $ref: '#/components/schemas/ContainerEntrypoint'
          description: Specifies the entrypoint for a container used to run the monitoring job.
        ContainerArguments:
          $ref: '#/components/schemas/MonitoringContainerArguments'
          description: An array of arguments for the container used to run the monitoring job.
        RecordPreprocessorSourceUri:
          $ref: '#/components/schemas/S3Uri'
          description: An Amazon S3 URI to a script that is called per row prior to running analysis. It can base64 decode the payload and convert it into a flatted json so that the built-in container can use the converted data. Applicable only for the built-in (first party) containers.
        PostAnalyticsProcessorSourceUri:
          $ref: '#/components/schemas/S3Uri'
          description: An Amazon S3 URI to a script that is called after analysis has been performed. Applicable only for the built-in (first party) containers.
      description: Container image configuration object for the monitoring job.
    MonitoringBaselineConfig:
      type: object
      properties:
        BaseliningJobName:
          $ref: '#/components/schemas/ProcessingJobName'
          description: The name of the job that performs baselining for the monitoring job.
        ConstraintsResource:
          $ref: '#/components/schemas/MonitoringConstraintsResource'
          description: The baseline constraint file in Amazon S3 that the current monitoring job should validated against.
        StatisticsResource:
          $ref: '#/components/schemas/MonitoringStatisticsResource'
          description: The baseline statistics file in Amazon S3 that the current monitoring job should be validated against.
      description: Configuration for monitoring constraints and monitoring statistics. These baseline resources are compared against the results of the current job from the series of jobs scheduled to collect data periodically.
    ProcessingInstanceCount:
      type: integer
      minimum: 1
      maximum: 100
    ProcessingVolumeSizeInGB:
      type: integer
      minimum: 1
      maximum: 16384
    MonitoringClusterConfig:
      type: object
      required:
        - InstanceCount
        - InstanceType
        - VolumeSizeInGB
      properties:
        InstanceCount:
          $ref: '#/components/schemas/ProcessingInstanceCount'
          description: 'The number of ML compute instances to use in the model monitoring job. For distributed processing jobs, specify a value greater than 1. The default value is 1.'
        InstanceType:
          $ref: '#/components/schemas/ProcessingInstanceType'
          description: The ML compute instance type for the processing job.
        VolumeSizeInGB:
          $ref: '#/components/schemas/ProcessingVolumeSizeInGB'
          description: 'The size of the ML storage volume, in gigabytes, that you want to provision. You must specify sufficient ML storage for your scenario.'
        VolumeKmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the model monitoring job.
      description: Configuration for the cluster used to run model monitoring jobs.
    ProcessingEnvironmentValue:
      type: string
      pattern: '[\S\s]*'
      maxLength: 256
    MonitoringS3Uri:
      type: string
      pattern: '^(https|s3)://([^/]+)/?(.*)$'
      maxLength: 512
    MonitoringInput:
      type: object
      required:
        - EndpointInput
      properties:
        EndpointInput:
          $ref: '#/components/schemas/EndpointInput'
          description: The endpoint for a monitoring job.
      description: The inputs for a monitoring job.
    MonitoringInputs:
      type: array
      items:
        $ref: '#/components/schemas/MonitoringInput'
      minItems: 1
      maxItems: 1
    MonitoringJobDefinition:
      type: object
      required:
        - MonitoringInputs
        - MonitoringOutputConfig
        - MonitoringResources
        - MonitoringAppSpecification
        - RoleArn
      properties:
        BaselineConfig:
          $ref: '#/components/schemas/MonitoringBaselineConfig'
          description: Baseline configuration used to validate that the data conforms to the specified constraints and statistics
        MonitoringInputs:
          $ref: '#/components/schemas/MonitoringInputs'
          description: The array of inputs for the monitoring job. Currently we support monitoring an Amazon SageMaker Endpoint.
        MonitoringOutputConfig:
          $ref: '#/components/schemas/MonitoringOutputConfig'
          description: The array of outputs from the monitoring job to be uploaded to Amazon Simple Storage Service (Amazon S3).
        MonitoringResources:
          $ref: '#/components/schemas/MonitoringResources'
          description: 'Identifies the resources, ML compute instances, and ML storage volumes to deploy for a monitoring job. In distributed processing, you specify more than one instance.'
        MonitoringAppSpecification:
          $ref: '#/components/schemas/MonitoringAppSpecification'
          description: Configures the monitoring job to run a specified Docker container image.
        StoppingCondition:
          $ref: '#/components/schemas/MonitoringStoppingCondition'
          description: Specifies a time limit for how long the monitoring job is allowed to run.
        Environment:
          $ref: '#/components/schemas/MonitoringEnvironmentMap'
          description: Sets the environment variables in the Docker container.
        NetworkConfig:
          $ref: '#/components/schemas/NetworkConfig'
          description: Specifies networking options for an monitoring job.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
      description: Defines the monitoring job.
    MonitoringJobDefinitionSummary:
      type: object
      required:
        - MonitoringJobDefinitionName
        - MonitoringJobDefinitionArn
        - CreationTime
        - EndpointName
      properties:
        MonitoringJobDefinitionName:
          $ref: '#/components/schemas/MonitoringJobDefinitionName'
          description: The name of the monitoring job.
        MonitoringJobDefinitionArn:
          $ref: '#/components/schemas/MonitoringJobDefinitionArn'
          description: The Amazon Resource Name (ARN) of the monitoring job.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the monitoring job was created.
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
          description: The name of the endpoint that the job monitors.
      description: Summary information about a monitoring job.
    MonitoringMaxRuntimeInSeconds:
      type: integer
      minimum: 1
      maximum: 86400
    MonitoringS3Output:
      type: object
      required:
        - S3Uri
        - LocalPath
      properties:
        S3Uri:
          $ref: '#/components/schemas/MonitoringS3Uri'
          description: A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job.
        LocalPath:
          $ref: '#/components/schemas/ProcessingLocalPath'
          description: The local path to the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job. LocalPath is an absolute path for the output data.
        S3UploadMode:
          $ref: '#/components/schemas/ProcessingS3UploadMode'
          description: Whether to upload the results of the monitoring job continuously or after the job completes.
      description: Information about where and how you want to store the results of a monitoring job.
    MonitoringOutput:
      type: object
      required:
        - S3Output
      properties:
        S3Output:
          $ref: '#/components/schemas/MonitoringS3Output'
          description: The Amazon S3 storage location where the results of a monitoring job are saved.
      description: The output object for a monitoring job.
    MonitoringOutputs:
      type: array
      items:
        $ref: '#/components/schemas/MonitoringOutput'
      minItems: 1
      maxItems: 1
    ProcessingS3UploadMode:
      type: string
      enum:
        - Continuous
        - EndOfJob
    MonitoringSchedule:
      type: object
      properties:
        MonitoringScheduleArn:
          $ref: '#/components/schemas/MonitoringScheduleArn'
          description: The Amazon Resource Name (ARN) of the monitoring schedule.
        MonitoringScheduleName:
          $ref: '#/components/schemas/MonitoringScheduleName'
          description: The name of the monitoring schedule.
        MonitoringScheduleStatus:
          $ref: '#/components/schemas/ScheduleStatus'
          description: <p>The status of the monitoring schedule. This can be one of the following values.</p> <ul> <li> <p> <code>PENDING</code> - The schedule is pending being created.</p> </li> <li> <p> <code>FAILED</code> - The schedule failed.</p> </li> <li> <p> <code>SCHEDULED</code> - The schedule was successfully created.</p> </li> <li> <p> <code>STOPPED</code> - The schedule was stopped.</p> </li> </ul>
        MonitoringType:
          $ref: '#/components/schemas/MonitoringType'
          description: The type of the monitoring job definition to schedule.
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'If the monitoring schedule failed, the reason it failed.'
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the monitoring schedule was created.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The last time the monitoring schedule was changed.
        MonitoringScheduleConfig:
          $ref: '#/components/schemas/MonitoringScheduleConfig'
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
          description: The endpoint that hosts the model being monitored.
        LastMonitoringExecutionSummary:
          $ref: '#/components/schemas/MonitoringExecutionSummary'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'A list of the tags associated with the monitoring schedlue. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services resources</a> in the <i>Amazon Web Services General Reference Guide</i>.'
      description: 'A schedule for a model monitoring job. For information about model monitor, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/model-monitor.html">Amazon SageMaker Model Monitor</a>.'
    ScheduleConfig:
      type: object
      required:
        - ScheduleExpression
      properties:
        ScheduleExpression:
          $ref: '#/components/schemas/ScheduleExpression'
          description: '<p>A cron expression that describes details about the monitoring schedule.</p> <p>Currently the only supported cron expressions are:</p> <ul> <li> <p>If you want to set the job to start every hour, please use the following:</p> <p> <code>Hourly: cron(0 * ? * * *)</code> </p> </li> <li> <p>If you want to start the job daily:</p> <p> <code>cron(0 [00-23] ? * * *)</code> </p> </li> </ul> <p>For example, the following are valid cron expressions:</p> <ul> <li> <p>Daily at noon UTC: <code>cron(0 12 ? * * *)</code> </p> </li> <li> <p>Daily at midnight UTC: <code>cron(0 0 ? * * *)</code> </p> </li> </ul> <p>To support running every 6, 12 hours, the following are also supported:</p> <p> <code>cron(0 [00-23]/[01-24] ? * * *)</code> </p> <p>For example, the following are valid cron expressions:</p> <ul> <li> <p>Every 12 hours, starting at 5pm UTC: <code>cron(0 17/12 ? * * *)</code> </p> </li> <li> <p>Every two hours starting at midnight: <code>cron(0 0/2 ? * * *)</code> </p> </li> </ul> <note> <ul> <li> <p>Even though the cron expression is set to start at 5PM UTC, note that there could be a delay of 0-20 minutes from the actual requested time to run the execution. </p> </li> <li> <p>We recommend that if you would like a daily schedule, you do not provide this parameter. Amazon SageMaker will pick a time for running every day.</p> </li> </ul> </note>'
      description: Configuration details about the monitoring schedule.
    MonitoringScheduleSummary:
      type: object
      required:
        - MonitoringScheduleName
        - MonitoringScheduleArn
        - CreationTime
        - LastModifiedTime
        - MonitoringScheduleStatus
      properties:
        MonitoringScheduleName:
          $ref: '#/components/schemas/MonitoringScheduleName'
          description: The name of the monitoring schedule.
        MonitoringScheduleArn:
          $ref: '#/components/schemas/MonitoringScheduleArn'
          description: The Amazon Resource Name (ARN) of the monitoring schedule.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The creation time of the monitoring schedule.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The last time the monitoring schedule was modified.
        MonitoringScheduleStatus:
          $ref: '#/components/schemas/ScheduleStatus'
          description: The status of the monitoring schedule.
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
          description: The name of the endpoint using the monitoring schedule.
        MonitoringJobDefinitionName:
          $ref: '#/components/schemas/MonitoringJobDefinitionName'
          description: The name of the monitoring job definition that the schedule is for.
        MonitoringType:
          $ref: '#/components/schemas/MonitoringType'
          description: The type of the monitoring job definition that the schedule is for.
      description: Summarizes the monitoring schedule.
    NeoVpcSecurityGroupIds:
      type: array
      items:
        $ref: '#/components/schemas/NeoVpcSecurityGroupId'
      minItems: 1
      maxItems: 5
    NeoVpcSubnets:
      type: array
      items:
        $ref: '#/components/schemas/NeoVpcSubnetId'
      minItems: 1
      maxItems: 16
    NeoVpcSecurityGroupId:
      type: string
      pattern: '[-0-9a-zA-Z]+'
      maxLength: 32
    NeoVpcSubnetId:
      type: string
      pattern: '[-0-9a-zA-Z]+'
      maxLength: 32
    NestedFilters:
      type: object
      required:
        - NestedPropertyName
        - Filters
      properties:
        NestedPropertyName:
          $ref: '#/components/schemas/ResourcePropertyName'
          description: 'The name of the property to use in the nested filters. The value must match a listed property name, such as <code>InputDataConfig</code>.'
        Filters:
          $ref: '#/components/schemas/FilterList'
          description: 'A list of filters. Each filter acts on a property. Filters must contain at least one <code>Filters</code> value. For example, a <code>NestedFilters</code> call might include a filter on the <code>PropertyName</code> parameter of the <code>InputDataConfig</code> property: <code>InputDataConfig.DataSource.S3DataSource.S3Uri</code>.'
      description: '<p>A list of nested <a>Filter</a> objects. A resource must satisfy the conditions of all filters to be included in the results returned from the <a>Search</a> API.</p> <p>For example, to filter on a training job''s <code>InputDataConfig</code> property with a specific channel name and <code>S3Uri</code> prefix, define the following filters:</p> <ul> <li> <p> <code>''{Name:"InputDataConfig.ChannelName", "Operator":"Equals", "Value":"train"}'',</code> </p> </li> <li> <p> <code>''{Name:"InputDataConfig.DataSource.S3DataSource.S3Uri", "Operator":"Contains", "Value":"mybucket/catdata"}''</code> </p> </li> </ul>'
    NestedFiltersList:
      type: array
      items:
        $ref: '#/components/schemas/NestedFilters'
      minItems: 1
      maxItems: 20
    NotebookInstanceAcceleratorType:
      type: string
      enum:
        - ml.eia1.medium
        - ml.eia1.large
        - ml.eia1.xlarge
        - ml.eia2.medium
        - ml.eia2.large
        - ml.eia2.xlarge
    NotebookInstanceLifecycleConfigContent:
      type: string
      pattern: '[\S\s]+'
      minLength: 1
      maxLength: 16384
    NotebookInstanceLifecycleHook:
      type: object
      properties:
        Content:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigContent'
          description: A base64-encoded string that contains a shell script for a notebook instance lifecycle configuration.
      description: '<p>Contains the notebook instance lifecycle configuration script.</p> <p>Each lifecycle configuration script has a limit of 16384 characters.</p> <p>The value of the <code>$PATH</code> environment variable that is available to both scripts is <code>/sbin:bin:/usr/sbin:/usr/bin</code>.</p> <p>View CloudWatch Logs for notebook instance lifecycle configurations in log group <code>/aws/sagemaker/NotebookInstances</code> in log stream <code>[notebook-instance-name]/[LifecycleConfigHook]</code>.</p> <p>Lifecycle configuration scripts cannot run for longer than 5 minutes. If a script runs for longer than 5 minutes, it fails and the notebook instance is not created or started.</p> <p>For information about notebook instance lifestyle configurations, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/notebook-lifecycle-config.html">Step 2.1: (Optional) Customize a Notebook Instance</a>.</p>'
    NotebookInstanceLifecycleConfigSummary:
      type: object
      required:
        - NotebookInstanceLifecycleConfigName
        - NotebookInstanceLifecycleConfigArn
      properties:
        NotebookInstanceLifecycleConfigName:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigName'
          description: The name of the lifecycle configuration.
        NotebookInstanceLifecycleConfigArn:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigArn'
          description: The Amazon Resource Name (ARN) of the lifecycle configuration.
        CreationTime:
          $ref: '#/components/schemas/CreationTime'
          description: A timestamp that tells when the lifecycle configuration was created.
        LastModifiedTime:
          $ref: '#/components/schemas/LastModifiedTime'
          description: A timestamp that tells when the lifecycle configuration was last modified.
      description: Provides a summary of a notebook instance lifecycle configuration.
    NotebookInstanceSummary:
      type: object
      required:
        - NotebookInstanceName
        - NotebookInstanceArn
      properties:
        NotebookInstanceName:
          $ref: '#/components/schemas/NotebookInstanceName'
          description: The name of the notebook instance that you want a summary for.
        NotebookInstanceArn:
          $ref: '#/components/schemas/NotebookInstanceArn'
          description: The Amazon Resource Name (ARN) of the notebook instance.
        NotebookInstanceStatus:
          $ref: '#/components/schemas/NotebookInstanceStatus'
          description: The status of the notebook instance.
        Url:
          $ref: '#/components/schemas/NotebookInstanceUrl'
          description: 'The URL that you use to connect to the Jupyter instance running in your notebook instance. '
        InstanceType:
          $ref: '#/components/schemas/InstanceType'
          description: The type of ML compute instance that the notebook instance is running on.
        CreationTime:
          $ref: '#/components/schemas/CreationTime'
          description: A timestamp that shows when the notebook instance was created.
        LastModifiedTime:
          $ref: '#/components/schemas/LastModifiedTime'
          description: A timestamp that shows when the notebook instance was last modified.
        NotebookInstanceLifecycleConfigName:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigName'
          description: '<p>The name of a notebook instance lifecycle configuration associated with this notebook instance.</p> <p>For information about notebook instance lifestyle configurations, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/notebook-lifecycle-config.html">Step 2.1: (Optional) Customize a Notebook Instance</a>.</p>'
        DefaultCodeRepository:
          $ref: '#/components/schemas/CodeRepositoryNameOrUrl'
          description: 'The Git repository associated with the notebook instance as its default code repository. This can be either the name of a Git repository stored as a resource in your account, or the URL of a Git repository in <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html">Amazon Web Services CodeCommit</a> or in any other Git repository. When you open a notebook instance, it opens in the directory that contains this repository. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/nbi-git-repo.html">Associating Git Repositories with Amazon SageMaker Notebook Instances</a>.'
        AdditionalCodeRepositories:
          $ref: '#/components/schemas/AdditionalCodeRepositoryNamesOrUrls'
          description: 'An array of up to three Git repositories associated with the notebook instance. These can be either the names of Git repositories stored as resources in your account, or the URL of Git repositories in <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html">Amazon Web Services CodeCommit</a> or in any other Git repository. These repositories are cloned at the same level as the default repository of your notebook instance. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/nbi-git-repo.html">Associating Git Repositories with Amazon SageMaker Notebook Instances</a>.'
      description: Provides summary information for an Amazon SageMaker notebook instance.
    NotebookOutputOption:
      type: string
      enum:
        - Allowed
        - Disabled
    NotificationTopicArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sns:[a-z0-9\-]*:[0-9]{12}:[a-zA-Z0-9_.-]*'
    ObjectiveStatusCounter:
      type: integer
      minimum: 0
    S3StorageConfig:
      type: object
      required:
        - S3Uri
      properties:
        S3Uri:
          $ref: '#/components/schemas/S3Uri'
          description: '<p>The S3 URI, or location in Amazon S3, of <code>OfflineStore</code>.</p> <p>S3 URIs have a format similar to the following: <code>s3://example-bucket/prefix/</code>.</p>'
        KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: '<p>The Amazon Web Services Key Management Service (KMS) key ID of the key used to encrypt any objects written into the <code>OfflineStore</code> S3 location.</p> <p>The IAM <code>roleARN</code> that is passed as a parameter to <code>CreateFeatureGroup</code> must have below permissions to the <code>KmsKeyId</code>:</p> <ul> <li> <p> <code>"kms:GenerateDataKey"</code> </p> </li> </ul>'
        ResolvedOutputS3Uri:
          $ref: '#/components/schemas/S3Uri'
          description: The S3 path where offline records are written.
      description: The Amazon Simple Storage (Amazon S3) location and and security configuration for <code>OfflineStore</code>.
    OidcEndpoint:
      type: string
      pattern: 'https://\S+'
      maxLength: 500
    OidcConfigForResponse:
      type: object
      properties:
        ClientId:
          $ref: '#/components/schemas/ClientId'
          description: The OIDC IdP client ID used to configure your private workforce.
        Issuer:
          $ref: '#/components/schemas/OidcEndpoint'
          description: The OIDC IdP issuer used to configure your private workforce.
        AuthorizationEndpoint:
          $ref: '#/components/schemas/OidcEndpoint'
          description: The OIDC IdP authorization endpoint used to configure your private workforce.
        TokenEndpoint:
          $ref: '#/components/schemas/OidcEndpoint'
          description: The OIDC IdP token endpoint used to configure your private workforce.
        UserInfoEndpoint:
          $ref: '#/components/schemas/OidcEndpoint'
          description: The OIDC IdP user information endpoint used to configure your private workforce.
        LogoutEndpoint:
          $ref: '#/components/schemas/OidcEndpoint'
          description: The OIDC IdP logout endpoint used to configure your private workforce.
        JwksUri:
          $ref: '#/components/schemas/OidcEndpoint'
          description: The OIDC IdP JSON Web Key Set (Jwks) URI used to configure your private workforce.
      description: Your OIDC IdP workforce configuration.
    OnlineStoreSecurityConfig:
      type: object
      properties:
        KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: '<p>The ID of the Amazon Web Services Key Management Service (Amazon Web Services KMS) key that SageMaker Feature Store uses to encrypt the Amazon S3 objects at rest using Amazon S3 server-side encryption.</p> <p>The caller (either IAM user or IAM role) of <code>CreateFeatureGroup</code> must have below permissions to the <code>OnlineStore</code> <code>KmsKeyId</code>:</p> <ul> <li> <p> <code>"kms:Encrypt"</code> </p> </li> <li> <p> <code>"kms:Decrypt"</code> </p> </li> <li> <p> <code>"kms:DescribeKey"</code> </p> </li> <li> <p> <code>"kms:CreateGrant"</code> </p> </li> <li> <p> <code>"kms:RetireGrant"</code> </p> </li> <li> <p> <code>"kms:ReEncryptFrom"</code> </p> </li> <li> <p> <code>"kms:ReEncryptTo"</code> </p> </li> <li> <p> <code>"kms:GenerateDataKey"</code> </p> </li> <li> <p> <code>"kms:ListAliases"</code> </p> </li> <li> <p> <code>"kms:ListGrants"</code> </p> </li> <li> <p> <code>"kms:RevokeGrant"</code> </p> </li> </ul> <p>The caller (either IAM user or IAM role) to all DataPlane operations (<code>PutRecord</code>, <code>GetRecord</code>, <code>DeleteRecord</code>) must have the following permissions to the <code>KmsKeyId</code>:</p> <ul> <li> <p> <code>"kms:Decrypt"</code> </p> </li> </ul>'
      description: The security configuration for <code>OnlineStore</code>.
    OptionalDouble:
      type: number
      format: double
    OptionalInteger:
      type: integer
    TargetPlatform:
      type: object
      required:
        - Os
        - Arch
      properties:
        Os:
          $ref: '#/components/schemas/TargetPlatformOs'
          description: '<p>Specifies a target platform OS.</p> <ul> <li> <p> <code>LINUX</code>: Linux-based operating systems.</p> </li> <li> <p> <code>ANDROID</code>: Android operating systems. Android API level can be specified using the <code>ANDROID_PLATFORM</code> compiler option. For example, <code>"CompilerOptions": {''ANDROID_PLATFORM'': 28}</code> </p> </li> </ul>'
        Arch:
          $ref: '#/components/schemas/TargetPlatformArch'
          description: '<p>Specifies a target platform architecture.</p> <ul> <li> <p> <code>X86_64</code>: 64-bit version of the x86 instruction set.</p> </li> <li> <p> <code>X86</code>: 32-bit version of the x86 instruction set.</p> </li> <li> <p> <code>ARM64</code>: ARMv8 64-bit CPU.</p> </li> <li> <p> <code>ARM_EABIHF</code>: ARMv7 32-bit, Hard Float.</p> </li> <li> <p> <code>ARM_EABI</code>: ARMv7 32-bit, Soft Float. Used by Android 32-bit ARM platform.</p> </li> </ul>'
        Accelerator:
          $ref: '#/components/schemas/TargetPlatformAccelerator'
          description: '<p>Specifies a target platform accelerator (optional).</p> <ul> <li> <p> <code>NVIDIA</code>: Nvidia graphics processing unit. It also requires <code>gpu-code</code>, <code>trt-ver</code>, <code>cuda-ver</code> compiler options</p> </li> <li> <p> <code>MALI</code>: ARM Mali graphics processor</p> </li> <li> <p> <code>INTEL_GRAPHICS</code>: Integrated Intel graphics</p> </li> </ul>'
      description: 'Contains information about a target platform that you want your model to run on, such as OS, architecture, and accelerators. It is an alternative of <code>TargetDevice</code>.'
    OutputParameter:
      type: object
      required:
        - Name
        - Value
      properties:
        Name:
          $ref: '#/components/schemas/String256'
          description: The name of the output parameter.
        Value:
          $ref: '#/components/schemas/String1024'
          description: The value of the output parameter.
      description: An output parameter of a pipeline step.
    PipelineParameterName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,255}$'
      minLength: 1
      maxLength: 256
    Parameter:
      type: object
      required:
        - Name
        - Value
      properties:
        Name:
          $ref: '#/components/schemas/PipelineParameterName'
          description: The name of the parameter to assign a value to. This parameter name must match a named parameter in the pipeline definition.
        Value:
          $ref: '#/components/schemas/String1024'
          description: The literal value for the parameter.
      description: Assigns a value to a named Pipeline parameter.
    Parent:
      type: object
      properties:
        TrialName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the trial.
        ExperimentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the experiment.
      description: The trial that a trial component is associated with and the experiment the trial is part of. A component might not be associated with a trial. A component can be associated with multiple trials.
    ParentHyperParameterTuningJob:
      type: object
      properties:
        HyperParameterTuningJobName:
          $ref: '#/components/schemas/HyperParameterTuningJobName'
          description: The name of the hyperparameter tuning job to be used as a starting point for a new hyperparameter tuning job.
      description: A previously completed or stopped hyperparameter tuning job to be used as a starting point for a new hyperparameter tuning job.
    Parents:
      type: array
      items:
        $ref: '#/components/schemas/Parent'
    Pipeline:
      type: object
      properties:
        PipelineArn:
          $ref: '#/components/schemas/PipelineArn'
          description: The Amazon Resource Name (ARN) of the pipeline.
        PipelineName:
          $ref: '#/components/schemas/PipelineName'
          description: The name of the pipeline.
        PipelineDisplayName:
          $ref: '#/components/schemas/PipelineName'
          description: The display name of the pipeline.
        PipelineDescription:
          $ref: '#/components/schemas/PipelineDescription'
          description: The description of the pipeline.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of the role that created the pipeline.
        PipelineStatus:
          $ref: '#/components/schemas/PipelineStatus'
          description: The status of the pipeline.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The creation time of the pipeline.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the pipeline was last modified.
        LastRunTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the pipeline was last run.
        CreatedBy:
          $ref: '#/components/schemas/UserContext'
        LastModifiedBy:
          $ref: '#/components/schemas/UserContext'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A list of tags that apply to the pipeline.
      description: A SageMaker Model Building Pipeline instance.
    PipelineExecution:
      type: object
      properties:
        PipelineArn:
          $ref: '#/components/schemas/PipelineArn'
          description: The Amazon Resource Name (ARN) of the pipeline that was executed.
        PipelineExecutionArn:
          $ref: '#/components/schemas/PipelineExecutionArn'
          description: The Amazon Resource Name (ARN) of the pipeline execution.
        PipelineExecutionDisplayName:
          $ref: '#/components/schemas/PipelineExecutionName'
          description: The display name of the pipeline execution.
        PipelineExecutionStatus:
          $ref: '#/components/schemas/PipelineExecutionStatus'
          description: The status of the pipeline status.
        PipelineExecutionDescription:
          $ref: '#/components/schemas/PipelineExecutionDescription'
          description: The description of the pipeline execution.
        PipelineExperimentConfig:
          $ref: '#/components/schemas/PipelineExperimentConfig'
        FailureReason:
          $ref: '#/components/schemas/PipelineExecutionFailureReason'
          description: 'If the execution failed, a message describing why.'
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The creation time of the pipeline execution.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the pipeline execution was last modified.
        CreatedBy:
          $ref: '#/components/schemas/UserContext'
        LastModifiedBy:
          $ref: '#/components/schemas/UserContext'
        PipelineParameters:
          $ref: '#/components/schemas/ParameterList'
          description: 'Contains a list of pipeline parameters. This list can be empty. '
      description: An execution of a pipeline.
    StepName:
      type: string
      pattern: .*
      maxLength: 256
    StepStatus:
      type: string
      enum:
        - Starting
        - Executing
        - Stopping
        - Stopped
        - Failed
        - Succeeded
    PipelineExecutionStepMetadata:
      type: object
      properties:
        TrainingJob:
          $ref: '#/components/schemas/TrainingJobStepMetadata'
          description: The Amazon Resource Name (ARN) of the training job that was run by this step execution.
        ProcessingJob:
          $ref: '#/components/schemas/ProcessingJobStepMetadata'
          description: The Amazon Resource Name (ARN) of the processing job that was run by this step execution.
        TransformJob:
          $ref: '#/components/schemas/TransformJobStepMetadata'
          description: The Amazon Resource Name (ARN) of the transform job that was run by this step execution.
        TuningJob:
          $ref: '#/components/schemas/TuningJobStepMetaData'
          description: The Amazon Resource Name (ARN) of the tuning job that was run by this step execution.
        Model:
          $ref: '#/components/schemas/ModelStepMetadata'
          description: The Amazon Resource Name (ARN) of the model that was created by this step execution.
        RegisterModel:
          $ref: '#/components/schemas/RegisterModelStepMetadata'
          description: The Amazon Resource Name (ARN) of the model package the model was registered to by this step execution.
        Condition:
          $ref: '#/components/schemas/ConditionStepMetadata'
          description: The outcome of the condition evaluation that was run by this step execution.
        Callback:
          $ref: '#/components/schemas/CallbackStepMetadata'
          description: 'The URL of the Amazon SQS queue used by this step execution, the pipeline generated token, and a list of output parameters.'
        Lambda:
          $ref: '#/components/schemas/LambdaStepMetadata'
          description: The Amazon Resource Name (ARN) of the Lambda function that was run by this step execution and a list of output parameters.
      description: Metadata for a step execution.
    PipelineExecutionStep:
      type: object
      properties:
        StepName:
          $ref: '#/components/schemas/StepName'
          description: The name of the step that is executed.
        StartTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the step started executing.
        EndTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the step stopped executing.
        StepStatus:
          $ref: '#/components/schemas/StepStatus'
          description: The status of the step execution.
        CacheHitResult:
          $ref: '#/components/schemas/CacheHitResult'
          description: 'If this pipeline execution step was cached, details on the cache hit.'
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: The reason why the step failed execution. This is only returned if the step failed its execution.
        Metadata:
          $ref: '#/components/schemas/PipelineExecutionStepMetadata'
          description: Metadata for the step execution.
      description: An execution of a step in a pipeline.
    TrainingJobStepMetadata:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/TrainingJobArn'
          description: The Amazon Resource Name (ARN) of the training job that was run by this step execution.
      description: Metadata for a training job step.
    ProcessingJobStepMetadata:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/ProcessingJobArn'
          description: The Amazon Resource Name (ARN) of the processing job.
      description: Metadata for a processing job step.
    TransformJobStepMetadata:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/TransformJobArn'
          description: The Amazon Resource Name (ARN) of the transform job that was run by this step execution.
      description: Metadata for a transform job step.
    TuningJobStepMetaData:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/HyperParameterTuningJobArn'
          description: The Amazon Resource Name (ARN) of the tuning job that was run by this step execution.
      description: Metadata for a tuning step.
    RegisterModelStepMetadata:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/String256'
          description: The Amazon Resource Name (ARN) of the model package.
      description: Metadata for a register model job step.
    PipelineExecutionSummary:
      type: object
      properties:
        PipelineExecutionArn:
          $ref: '#/components/schemas/PipelineExecutionArn'
          description: The Amazon Resource Name (ARN) of the pipeline execution.
        StartTime:
          $ref: '#/components/schemas/Timestamp'
          description: The start time of the pipeline execution.
        PipelineExecutionStatus:
          $ref: '#/components/schemas/PipelineExecutionStatus'
          description: The status of the pipeline execution.
        PipelineExecutionDescription:
          $ref: '#/components/schemas/PipelineExecutionDescription'
          description: The description of the pipeline execution.
        PipelineExecutionDisplayName:
          $ref: '#/components/schemas/PipelineExecutionName'
          description: The display name of the pipeline execution.
      description: A pipeline execution summary.
    PipelineSummary:
      type: object
      properties:
        PipelineArn:
          $ref: '#/components/schemas/PipelineArn'
          description: ' The Amazon Resource Name (ARN) of the pipeline.'
        PipelineName:
          $ref: '#/components/schemas/PipelineName'
          description: The name of the pipeline.
        PipelineDisplayName:
          $ref: '#/components/schemas/PipelineName'
          description: The display name of the pipeline.
        PipelineDescription:
          $ref: '#/components/schemas/PipelineDescription'
          description: The description of the pipeline.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) that the pipeline used to execute.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The creation time of the pipeline.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the pipeline was last modified.
        LastExecutionTime:
          $ref: '#/components/schemas/Timestamp'
          description: The last time that a pipeline execution began.
      description: A summary of a pipeline.
    ProcessingClusterConfig:
      type: object
      required:
        - InstanceCount
        - InstanceType
        - VolumeSizeInGB
      properties:
        InstanceCount:
          $ref: '#/components/schemas/ProcessingInstanceCount'
          description: 'The number of ML compute instances to use in the processing job. For distributed processing jobs, specify a value greater than 1. The default value is 1.'
        InstanceType:
          $ref: '#/components/schemas/ProcessingInstanceType'
          description: The ML compute instance type for the processing job.
        VolumeSizeInGB:
          $ref: '#/components/schemas/ProcessingVolumeSizeInGB'
          description: '<p>The size of the ML storage volume in gigabytes that you want to provision. You must specify sufficient ML storage for your scenario.</p> <note> <p>Certain Nitro-based instances include local storage with a fixed total size, dependent on the instance type. When using these instances for processing, Amazon SageMaker mounts the local instance storage instead of Amazon EBS gp2 storage. You can''t request a <code>VolumeSizeInGB</code> greater than the total size of the local instance storage.</p> <p>For a list of instance types that support local instance storage, including the total size per instance type, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#instance-store-volumes">Instance Store Volumes</a>.</p> </note>'
        VolumeKmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: '<p>The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the processing job. </p> <note> <p>Certain Nitro-based instances include local storage, dependent on the instance type. Local storage volumes are encrypted using a hardware module on the instance. You can''t request a <code>VolumeKmsKeyId</code> when using an instance type with local storage.</p> <p>For a list of instance types that support local instance storage, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#instance-store-volumes">Instance Store Volumes</a>.</p> <p>For more information about local instance storage encryption, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ssd-instance-store.html">SSD Instance Store Volumes</a>.</p> </note>'
      description: Configuration for the cluster used to run a processing job.
    ProcessingEnvironmentKey:
      type: string
      pattern: '[a-zA-Z_][a-zA-Z0-9_]*'
      maxLength: 256
    ProcessingFeatureStoreOutput:
      type: object
      required:
        - FeatureGroupName
      properties:
        FeatureGroupName:
          $ref: '#/components/schemas/FeatureGroupName'
          description: The name of the Amazon SageMaker FeatureGroup to use as the destination for processing job output. Note that your processing script is responsible for putting records into your Feature Store.
      description: Configuration for processing job outputs in Amazon SageMaker Feature Store.
    ProcessingS3Input:
      type: object
      required:
        - S3Uri
        - S3DataType
      properties:
        S3Uri:
          $ref: '#/components/schemas/S3Uri'
          description: The URI of the Amazon S3 prefix Amazon SageMaker downloads data required to run a processing job.
        LocalPath:
          $ref: '#/components/schemas/ProcessingLocalPath'
          description: The local path in your container where you want Amazon SageMaker to write input data to. <code>LocalPath</code> is an absolute path to the input data and must begin with <code>/opt/ml/processing/</code>. <code>LocalPath</code> is a required parameter when <code>AppManaged</code> is <code>False</code> (default).
        S3DataType:
          $ref: '#/components/schemas/ProcessingS3DataType'
          description: 'Whether you use an <code>S3Prefix</code> or a <code>ManifestFile</code> for the data type. If you choose <code>S3Prefix</code>, <code>S3Uri</code> identifies a key name prefix. Amazon SageMaker uses all objects with the specified key name prefix for the processing job. If you choose <code>ManifestFile</code>, <code>S3Uri</code> identifies an object that is a manifest file containing a list of object keys that you want Amazon SageMaker to use for the processing job.'
        S3InputMode:
          $ref: '#/components/schemas/ProcessingS3InputMode'
          description: 'Whether to use <code>File</code> or <code>Pipe</code> input mode. In File mode, Amazon SageMaker copies the data from the input source onto the local ML storage volume before starting your processing container. This is the most commonly used input mode. In <code>Pipe</code> mode, Amazon SageMaker streams input data from the source directly to your processing container into named pipes without using the ML storage volume.'
        S3DataDistributionType:
          $ref: '#/components/schemas/ProcessingS3DataDistributionType'
          description: 'Whether to distribute the data from Amazon S3 to all processing instances with <code>FullyReplicated</code>, or whether the data from Amazon S3 is shared by Amazon S3 key, downloading one shard of data to each processing instance.'
        S3CompressionType:
          $ref: '#/components/schemas/ProcessingS3CompressionType'
          description: 'Whether to GZIP-decompress the data in Amazon S3 as it is streamed into the processing container. <code>Gzip</code> can only be used when <code>Pipe</code> mode is specified as the <code>S3InputMode</code>. In <code>Pipe</code> mode, Amazon SageMaker streams input data from the source directly to your container without using the EBS volume.'
      description: Configuration for downloading input data from Amazon S3 into the processing container.
    ProcessingInput:
      type: object
      required:
        - InputName
      properties:
        InputName:
          $ref: '#/components/schemas/String'
          description: The name for the processing job input.
        AppManaged:
          $ref: '#/components/schemas/AppManaged'
          description: 'When <code>True</code>, input operations such as data download are managed natively by the processing job application. When <code>False</code> (default), input operations are managed by Amazon SageMaker.'
        S3Input:
          $ref: '#/components/schemas/ProcessingS3Input'
          description: Configuration for downloading input data from Amazon S3 into the processing container.
        DatasetDefinition:
          $ref: '#/components/schemas/DatasetDefinition'
          description: 'Configuration for a Dataset Definition input. '
      description: The inputs for a processing job. The processing input must specify exactly one of either <code>S3Input</code> or <code>DatasetDefinition</code> types.
    ProcessingJob:
      type: object
      properties:
        ProcessingInputs:
          $ref: '#/components/schemas/ProcessingInputs'
          description: List of input configurations for the processing job.
        ProcessingOutputConfig:
          $ref: '#/components/schemas/ProcessingOutputConfig'
        ProcessingJobName:
          $ref: '#/components/schemas/ProcessingJobName'
          description: The name of the processing job.
        ProcessingResources:
          $ref: '#/components/schemas/ProcessingResources'
        StoppingCondition:
          $ref: '#/components/schemas/ProcessingStoppingCondition'
        AppSpecification:
          $ref: '#/components/schemas/AppSpecification'
        Environment:
          $ref: '#/components/schemas/ProcessingEnvironmentMap'
          description: Sets the environment variables in the Docker container.
        NetworkConfig:
          $ref: '#/components/schemas/NetworkConfig'
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The ARN of the role used to create the processing job.
        ExperimentConfig:
          $ref: '#/components/schemas/ExperimentConfig'
        ProcessingJobArn:
          $ref: '#/components/schemas/ProcessingJobArn'
          description: The ARN of the processing job.
        ProcessingJobStatus:
          $ref: '#/components/schemas/ProcessingJobStatus'
          description: The status of the processing job.
        ExitMessage:
          $ref: '#/components/schemas/ExitMessage'
          description: 'A string, up to one KB in size, that contains metadata from the processing container when the processing job exits.'
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'A string, up to one KB in size, that contains the reason a processing job failed, if it failed.'
        ProcessingEndTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the processing job ended.
        ProcessingStartTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the processing job started.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time the processing job was last modified.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time the processing job was created.
        MonitoringScheduleArn:
          $ref: '#/components/schemas/MonitoringScheduleArn'
          description: The ARN of a monitoring schedule for an endpoint associated with this processing job.
        AutoMLJobArn:
          $ref: '#/components/schemas/AutoMLJobArn'
          description: The Amazon Resource Name (ARN) of the AutoML job associated with this processing job.
        TrainingJobArn:
          $ref: '#/components/schemas/TrainingJobArn'
          description: The ARN of the training job associated with this processing job.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'An array of key-value pairs. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-whatURL">Using Cost Allocation Tags</a> in the <i>Amazon Web Services Billing and Cost Management User Guide</i>.'
      description: 'An Amazon SageMaker processing job that is used to analyze data and evaluate models. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/processing-job.html">Process Data and Evaluate Models</a>.'
    ProcessingJobSummary:
      type: object
      required:
        - ProcessingJobName
        - ProcessingJobArn
        - CreationTime
        - ProcessingJobStatus
      properties:
        ProcessingJobName:
          $ref: '#/components/schemas/ProcessingJobName'
          description: The name of the processing job.
        ProcessingJobArn:
          $ref: '#/components/schemas/ProcessingJobArn'
          description: The Amazon Resource Name (ARN) of the processing job..
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the processing job was created.
        ProcessingEndTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the processing job completed.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp that indicates the last time the processing job was modified.
        ProcessingJobStatus:
          $ref: '#/components/schemas/ProcessingJobStatus'
          description: The status of the processing job.
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'A string, up to one KB in size, that contains the reason a processing job failed, if it failed.'
        ExitMessage:
          $ref: '#/components/schemas/ExitMessage'
          description: 'An optional string, up to one KB in size, that contains metadata from the processing container when the processing job exits.'
      description: Summary of information about a processing job.
    ProcessingMaxRuntimeInSeconds:
      type: integer
      minimum: 1
      maximum: 604800
    ProcessingS3Output:
      type: object
      required:
        - S3Uri
        - LocalPath
        - S3UploadMode
      properties:
        S3Uri:
          $ref: '#/components/schemas/S3Uri'
          description: A URI that identifies the Amazon S3 bucket where you want Amazon SageMaker to save the results of a processing job.
        LocalPath:
          $ref: '#/components/schemas/ProcessingLocalPath'
          description: The local path of a directory where you want Amazon SageMaker to upload its contents to Amazon S3. <code>LocalPath</code> is an absolute path to a directory containing output files. This directory will be created by the platform and exist when your container's entrypoint is invoked.
        S3UploadMode:
          $ref: '#/components/schemas/ProcessingS3UploadMode'
          description: Whether to upload the results of the processing job continuously or after the job completes.
      description: Configuration for uploading output data to Amazon S3 from the processing container.
    ProcessingOutput:
      type: object
      required:
        - OutputName
      properties:
        OutputName:
          $ref: '#/components/schemas/String'
          description: The name for the processing job output.
        S3Output:
          $ref: '#/components/schemas/ProcessingS3Output'
          description: Configuration for processing job outputs in Amazon S3.
        FeatureStoreOutput:
          $ref: '#/components/schemas/ProcessingFeatureStoreOutput'
          description: 'Configuration for processing job outputs in Amazon SageMaker Feature Store. This processing output type is only supported when <code>AppManaged</code> is specified. '
        AppManaged:
          $ref: '#/components/schemas/AppManaged'
          description: 'When <code>True</code>, output operations such as data upload are managed natively by the processing job application. When <code>False</code> (default), output operations are managed by Amazon SageMaker.'
      description: Describes the results of a processing job. The processing output must specify exactly one of either <code>S3Output</code> or <code>FeatureStoreOutput</code> types.
    ProcessingOutputs:
      type: array
      items:
        $ref: '#/components/schemas/ProcessingOutput'
      minItems: 0
      maxItems: 10
    ProcessingS3CompressionType:
      type: string
      enum:
        - None
        - Gzip
    ProcessingS3DataType:
      type: string
      enum:
        - ManifestFile
        - S3Prefix
    ProductListings:
      type: array
      items:
        $ref: '#/components/schemas/String'
    ProductionVariantInstanceType:
      type: string
      enum:
        - ml.t2.medium
        - ml.t2.large
        - ml.t2.xlarge
        - ml.t2.2xlarge
        - ml.m4.xlarge
        - ml.m4.2xlarge
        - ml.m4.4xlarge
        - ml.m4.10xlarge
        - ml.m4.16xlarge
        - ml.m5.large
        - ml.m5.xlarge
        - ml.m5.2xlarge
        - ml.m5.4xlarge
        - ml.m5.12xlarge
        - ml.m5.24xlarge
        - ml.m5d.large
        - ml.m5d.xlarge
        - ml.m5d.2xlarge
        - ml.m5d.4xlarge
        - ml.m5d.12xlarge
        - ml.m5d.24xlarge
        - ml.c4.large
        - ml.c4.xlarge
        - ml.c4.2xlarge
        - ml.c4.4xlarge
        - ml.c4.8xlarge
        - ml.p2.xlarge
        - ml.p2.8xlarge
        - ml.p2.16xlarge
        - ml.p3.2xlarge
        - ml.p3.8xlarge
        - ml.p3.16xlarge
        - ml.c5.large
        - ml.c5.xlarge
        - ml.c5.2xlarge
        - ml.c5.4xlarge
        - ml.c5.9xlarge
        - ml.c5.18xlarge
        - ml.c5d.large
        - ml.c5d.xlarge
        - ml.c5d.2xlarge
        - ml.c5d.4xlarge
        - ml.c5d.9xlarge
        - ml.c5d.18xlarge
        - ml.g4dn.xlarge
        - ml.g4dn.2xlarge
        - ml.g4dn.4xlarge
        - ml.g4dn.8xlarge
        - ml.g4dn.12xlarge
        - ml.g4dn.16xlarge
        - ml.r5.large
        - ml.r5.xlarge
        - ml.r5.2xlarge
        - ml.r5.4xlarge
        - ml.r5.12xlarge
        - ml.r5.24xlarge
        - ml.r5d.large
        - ml.r5d.xlarge
        - ml.r5d.2xlarge
        - ml.r5d.4xlarge
        - ml.r5d.12xlarge
        - ml.r5d.24xlarge
        - ml.inf1.xlarge
        - ml.inf1.2xlarge
        - ml.inf1.6xlarge
        - ml.inf1.24xlarge
    ProductionVariantAcceleratorType:
      type: string
      enum:
        - ml.eia1.medium
        - ml.eia1.large
        - ml.eia1.xlarge
        - ml.eia2.medium
        - ml.eia2.large
        - ml.eia2.xlarge
    ProductionVariantCoreDumpConfig:
      type: object
      required:
        - DestinationS3Uri
      properties:
        DestinationS3Uri:
          $ref: '#/components/schemas/DestinationS3Uri'
          description: The Amazon S3 bucket to send the core dump to.
        KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: '<p>The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that Amazon SageMaker uses to encrypt the core dump data at rest using Amazon S3 server-side encryption. The <code>KmsKeyId</code> can be any of the following formats: </p> <ul> <li> <p>// KMS Key ID</p> <p> <code>"1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> <li> <p>// Amazon Resource Name (ARN) of a KMS Key</p> <p> <code>"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> <li> <p>// KMS Key Alias</p> <p> <code>"alias/ExampleAlias"</code> </p> </li> <li> <p>// Amazon Resource Name (ARN) of a KMS Key Alias</p> <p> <code>"arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias"</code> </p> </li> </ul> <p>If you use a KMS key ID or an alias of your master key, the Amazon SageMaker execution role must include permissions to call <code>kms:Encrypt</code>. If you don''t provide a KMS key ID, Amazon SageMaker uses the default KMS key for Amazon S3 for your role''s account. Amazon SageMaker uses server-side encryption with KMS-managed keys for <code>OutputDataConfig</code>. If you use a bucket policy with an <code>s3:PutObject</code> permission that only allows objects with server-side encryption, set the condition key of <code>s3:x-amz-server-side-encryption</code> to <code>"aws:kms"</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html">KMS-Managed Encryption Keys</a> in the <i>Amazon Simple Storage Service Developer Guide.</i> </p> <p>The KMS key policy must grant permission to the IAM role that you specify in your <code>CreateEndpoint</code> and <code>UpdateEndpoint</code> requests. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html">Using Key Policies in Amazon Web Services KMS</a> in the <i>Amazon Web Services Key Management Service Developer Guide</i>.</p>'
      description: Specifies configuration for a core dump from the model container when the process crashes.
    ProductionVariant:
      type: object
      required:
        - VariantName
        - ModelName
        - InitialInstanceCount
        - InstanceType
      properties:
        VariantName:
          $ref: '#/components/schemas/VariantName'
          description: The name of the production variant.
        ModelName:
          $ref: '#/components/schemas/ModelName'
          description: The name of the model that you want to host. This is the name that you specified when creating the model.
        InitialInstanceCount:
          $ref: '#/components/schemas/InitialTaskCount'
          description: Number of instances to launch initially.
        InstanceType:
          $ref: '#/components/schemas/ProductionVariantInstanceType'
          description: The ML compute instance type.
        InitialVariantWeight:
          $ref: '#/components/schemas/VariantWeight'
          description: 'Determines initial traffic distribution among all of the models that you specify in the endpoint configuration. The traffic to a production variant is determined by the ratio of the <code>VariantWeight</code> to the sum of all <code>VariantWeight</code> values across all ProductionVariants. If unspecified, it defaults to 1.0. '
        AcceleratorType:
          $ref: '#/components/schemas/ProductionVariantAcceleratorType'
          description: 'The size of the Elastic Inference (EI) instance to use for the production variant. EI instances provide on-demand GPU computing for inference. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/ei.html">Using Elastic Inference in Amazon SageMaker</a>.'
        CoreDumpConfig:
          $ref: '#/components/schemas/ProductionVariantCoreDumpConfig'
          description: Specifies configuration for a core dump from the model container when the process crashes.
      description: 'Identifies a model that you want to host and the resources chosen to deploy for hosting it. If you are deploying multiple models, tell Amazon SageMaker how to distribute traffic among the models by specifying variant weights. '
    ProductionVariantSummary:
      type: object
      required:
        - VariantName
      properties:
        VariantName:
          $ref: '#/components/schemas/VariantName'
          description: The name of the variant.
        DeployedImages:
          $ref: '#/components/schemas/DeployedImages'
          description: An array of <code>DeployedImage</code> objects that specify the Amazon EC2 Container Registry paths of the inference images deployed on instances of this <code>ProductionVariant</code>.
        CurrentWeight:
          $ref: '#/components/schemas/VariantWeight'
          description: The weight associated with the variant.
        DesiredWeight:
          $ref: '#/components/schemas/VariantWeight'
          description: 'The requested weight, as specified in the <code>UpdateEndpointWeightsAndCapacities</code> request. '
        CurrentInstanceCount:
          $ref: '#/components/schemas/TaskCount'
          description: The number of instances associated with the variant.
        DesiredInstanceCount:
          $ref: '#/components/schemas/TaskCount'
          description: 'The number of instances requested in the <code>UpdateEndpointWeightsAndCapacities</code> request. '
      description: 'Describes weight and capacities for a production variant associated with an endpoint. If you sent a request to the <code>UpdateEndpointWeightsAndCapacities</code> API and the endpoint status is <code>Updating</code>, you get different desired and current values. '
    ProfilingIntervalInMilliseconds:
      type: integer
    ProfilingParameters:
      type: object
      minProperties: 0
      maxProperties: 20
      additionalProperties:
        $ref: '#/components/schemas/ConfigValue'
    ProfilerConfigForUpdate:
      type: object
      properties:
        S3OutputPath:
          $ref: '#/components/schemas/S3Uri'
          description: Path to Amazon S3 storage location for system and framework metrics.
        ProfilingIntervalInMilliseconds:
          $ref: '#/components/schemas/ProfilingIntervalInMilliseconds'
          description: 'A time interval for capturing system metrics in milliseconds. Available values are 100, 200, 500, 1000 (1 second), 5000 (5 seconds), and 60000 (1 minute) milliseconds. The default value is 500 milliseconds.'
        ProfilingParameters:
          $ref: '#/components/schemas/ProfilingParameters'
          description: 'Configuration information for capturing framework metrics. Available key strings for different profiling options are <code>DetailedProfilingConfig</code>, <code>PythonProfilingConfig</code>, and <code>DataLoaderProfilingConfig</code>. The following codes are configuration structures for the <code>ProfilingParameters</code> parameter. To learn more about how to configure the <code>ProfilingParameters</code> parameter, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/debugger-createtrainingjob-api.html">Use the SageMaker and Debugger Configuration API Operations to Create, Update, and Debug Your Training Job</a>. '
        DisableProfiler:
          $ref: '#/components/schemas/DisableProfiler'
          description: 'To disable Debugger monitoring and profiling, set to <code>True</code>.'
      description: 'Configuration information for updating the Debugger profile parameters, system and framework metrics configurations, and storage paths.'
    ProfilerRuleConfiguration:
      type: object
      required:
        - RuleConfigurationName
        - RuleEvaluatorImage
      properties:
        RuleConfigurationName:
          $ref: '#/components/schemas/RuleConfigurationName'
          description: The name of the rule configuration. It must be unique relative to other rule configuration names.
        LocalPath:
          $ref: '#/components/schemas/DirectoryPath'
          description: 'Path to local storage location for output of rules. Defaults to <code>/opt/ml/processing/output/rule/</code>. '
        S3OutputPath:
          $ref: '#/components/schemas/S3Uri'
          description: Path to Amazon S3 storage location for rules.
        RuleEvaluatorImage:
          $ref: '#/components/schemas/AlgorithmImage'
          description: The Amazon Elastic Container (ECR) Image for the managed rule evaluation.
        InstanceType:
          $ref: '#/components/schemas/ProcessingInstanceType'
          description: The instance type to deploy a Debugger custom rule for profiling a training job.
        VolumeSizeInGB:
          $ref: '#/components/schemas/OptionalVolumeSizeInGB'
          description: 'The size, in GB, of the ML storage volume attached to the processing instance.'
        RuleParameters:
          $ref: '#/components/schemas/RuleParameters'
          description: Runtime configuration for rule container.
      description: Configuration information for profiling rules.
    ProfilerRuleEvaluationStatus:
      type: object
      properties:
        RuleConfigurationName:
          $ref: '#/components/schemas/RuleConfigurationName'
          description: The name of the rule configuration.
        RuleEvaluationJobArn:
          $ref: '#/components/schemas/ProcessingJobArn'
          description: The Amazon Resource Name (ARN) of the rule evaluation job.
        RuleEvaluationStatus:
          $ref: '#/components/schemas/RuleEvaluationStatus'
          description: Status of the rule evaluation.
        StatusDetails:
          $ref: '#/components/schemas/StatusDetails'
          description: Details from the rule evaluation.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: Timestamp when the rule evaluation status was last modified.
      description: Information about the status of the rule evaluation.
    ProjectSummary:
      type: object
      required:
        - ProjectName
        - ProjectArn
        - ProjectId
        - CreationTime
        - ProjectStatus
      properties:
        ProjectName:
          $ref: '#/components/schemas/ProjectEntityName'
          description: The name of the project.
        ProjectDescription:
          $ref: '#/components/schemas/EntityDescription'
          description: The description of the project.
        ProjectArn:
          $ref: '#/components/schemas/ProjectArn'
          description: The Amazon Resource Name (ARN) of the project.
        ProjectId:
          $ref: '#/components/schemas/ProjectId'
          description: The ID of the project.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time that the project was created.
        ProjectStatus:
          $ref: '#/components/schemas/ProjectStatus'
          description: The status of the project.
      description: Information about a project.
    PropertyNameHint:
      type: string
      pattern: .*
      minLength: 0
      maxLength: 100
    PropertyNameQuery:
      type: object
      required:
        - PropertyNameHint
      properties:
        PropertyNameHint:
          $ref: '#/components/schemas/PropertyNameHint'
          description: Text that begins a property's name.
      description: Part of the <code>SuggestionQuery</code> type. Specifies a hint for retrieving property names that begin with the specified text.
    PropertyNameSuggestion:
      type: object
      properties:
        PropertyName:
          $ref: '#/components/schemas/ResourcePropertyName'
          description: A suggested property name based on what you entered in the search textbox in the Amazon SageMaker console.
      description: A property name returned from a <code>GetSearchSuggestions</code> call that specifies a value in the <code>PropertyNameQuery</code> field.
    ProvisionedProductStatusMessage:
      type: string
      pattern: .*
    ProvisioningParameterKey:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 1000
    ProvisioningParameterValue:
      type: string
      pattern: .*
      maxLength: 4096
    ProvisioningParameter:
      type: object
      properties:
        Key:
          $ref: '#/components/schemas/ProvisioningParameterKey'
          description: The key that identifies a provisioning parameter.
        Value:
          $ref: '#/components/schemas/ProvisioningParameterValue'
          description: The value of the provisioning parameter.
      description: 'A key value pair used when you provision a project as a service catalog product. For information, see <a href="https://docs.aws.amazon.com/servicecatalog/latest/adminguide/introduction.html">What is Amazon Web Services Service Catalog</a>.'
    ProvisioningParameters:
      type: array
      items:
        $ref: '#/components/schemas/ProvisioningParameter'
    USD:
      type: object
      properties:
        Dollars:
          $ref: '#/components/schemas/Dollars'
          description: The whole number of dollars in the amount.
        Cents:
          $ref: '#/components/schemas/Cents'
          description: 'The fractional portion, in cents, of the amount. '
        TenthFractionsOfACent:
          $ref: '#/components/schemas/TenthFractionsOfACent'
          description: 'Fractions of a cent, in tenths.'
      description: Represents an amount of money in United States dollars.
    RedshiftClusterId:
      type: string
      pattern: .*
      description: The Redshift cluster Identifier.
      minLength: 1
      maxLength: 63
    RedshiftDatabase:
      type: string
      pattern: .*
      description: The name of the Redshift database used in Redshift query execution.
      minLength: 1
      maxLength: 64
    RedshiftUserName:
      type: string
      pattern: .*
      description: The database user name used in Redshift query execution.
      minLength: 1
      maxLength: 128
    RedshiftQueryString:
      type: string
      pattern: '[\s\S]+'
      description: The SQL query statements to be executed.
      minLength: 1
      maxLength: 4096
    RedshiftResultFormat:
      type: string
      enum:
        - PARQUET
        - CSV
      description: The data storage format for Redshift query results.
    RedshiftResultCompressionType:
      type: string
      enum:
        - None
        - GZIP
        - BZIP2
        - ZSTD
        - SNAPPY
      description: The compression used for Redshift query results.
    RenderableTask:
      type: object
      required:
        - Input
      properties:
        Input:
          $ref: '#/components/schemas/TaskInput'
          description: 'A JSON object that contains values for the variables defined in the template. It is made available to the template under the substitution variable <code>task.input</code>. For example, if you define a variable <code>task.input.text</code> in your template, you can supply the variable in the JSON object as <code>"text": "sample text"</code>.'
      description: Contains input values for a task.
    RenderingErrorList:
      type: array
      items:
        $ref: '#/components/schemas/RenderingError'
    TaskInput:
      type: string
      pattern: '[\S\s]+'
      minLength: 2
      maxLength: 128000
    RenderingError:
      type: object
      required:
        - Code
        - Message
      properties:
        Code:
          $ref: '#/components/schemas/String'
          description: A unique identifier for a specific class of errors.
        Message:
          $ref: '#/components/schemas/String'
          description: A human-readable message describing the error.
      description: A description of an error that occurred while rendering the template.
    RepositoryCredentialsProviderArn:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 2048
    TrainingInstanceType:
      type: string
      enum:
        - ml.m4.xlarge
        - ml.m4.2xlarge
        - ml.m4.4xlarge
        - ml.m4.10xlarge
        - ml.m4.16xlarge
        - ml.g4dn.xlarge
        - ml.g4dn.2xlarge
        - ml.g4dn.4xlarge
        - ml.g4dn.8xlarge
        - ml.g4dn.12xlarge
        - ml.g4dn.16xlarge
        - ml.m5.large
        - ml.m5.xlarge
        - ml.m5.2xlarge
        - ml.m5.4xlarge
        - ml.m5.12xlarge
        - ml.m5.24xlarge
        - ml.c4.xlarge
        - ml.c4.2xlarge
        - ml.c4.4xlarge
        - ml.c4.8xlarge
        - ml.p2.xlarge
        - ml.p2.8xlarge
        - ml.p2.16xlarge
        - ml.p3.2xlarge
        - ml.p3.8xlarge
        - ml.p3.16xlarge
        - ml.p3dn.24xlarge
        - ml.p4d.24xlarge
        - ml.c5.xlarge
        - ml.c5.2xlarge
        - ml.c5.4xlarge
        - ml.c5.9xlarge
        - ml.c5.18xlarge
        - ml.c5n.xlarge
        - ml.c5n.2xlarge
        - ml.c5n.4xlarge
        - ml.c5n.9xlarge
        - ml.c5n.18xlarge
    TrainingInstanceCount:
      type: integer
      minimum: 1
    VolumeSizeInGB:
      type: integer
      minimum: 1
    ResponseMIMEType:
      type: string
      pattern: '^[-\w]+\/.+$'
      maxLength: 1024
    RetentionType:
      type: string
      enum:
        - Retain
        - Delete
    S3DataDistribution:
      type: string
      enum:
        - FullyReplicated
        - ShardedByS3Key
    S3DataType:
      type: string
      enum:
        - ManifestFile
        - S3Prefix
        - AugmentedManifestFile
    ScheduleExpression:
      type: string
      minLength: 1
      maxLength: 256
    SearchExpressionList:
      type: array
      items:
        $ref: '#/components/schemas/SearchExpression'
      minItems: 1
      maxItems: 20
    SearchExpression:
      type: object
      properties:
        Filters:
          $ref: '#/components/schemas/FilterList'
          description: A list of filter objects.
        NestedFilters:
          $ref: '#/components/schemas/NestedFiltersList'
          description: A list of nested filter objects.
        SubExpressions:
          $ref: '#/components/schemas/SearchExpressionList'
          description: A list of search expression objects.
        Operator:
          $ref: '#/components/schemas/BooleanOperator'
          description: 'A Boolean operator used to evaluate the search expression. If you want every conditional statement in all lists to be satisfied for the entire search expression to be true, specify <code>And</code>. If only a single conditional statement needs to be true for the entire search expression to be true, specify <code>Or</code>. The default value is <code>And</code>.'
      description: '<p>A multi-expression that searches for the specified resource or resources in a search. All resource objects that satisfy the expression''s condition are included in the search results. You must specify at least one subexpression, filter, or nested filter. A <code>SearchExpression</code> can contain up to twenty elements.</p> <p>A <code>SearchExpression</code> contains the following components:</p> <ul> <li> <p>A list of <code>Filter</code> objects. Each filter defines a simple Boolean expression comprised of a resource property name, Boolean operator, and value.</p> </li> <li> <p>A list of <code>NestedFilter</code> objects. Each nested filter defines a list of Boolean expressions using a list of resource properties. A nested filter is satisfied if a single object in the list satisfies all Boolean expressions.</p> </li> <li> <p>A list of <code>SearchExpression</code> objects. A search expression object can be nested in a list of search expression objects.</p> </li> <li> <p>A Boolean operator: <code>And</code> or <code>Or</code>.</p> </li> </ul>'
    TrainingJob:
      type: object
      properties:
        TrainingJobName:
          $ref: '#/components/schemas/TrainingJobName'
          description: The name of the training job.
        TrainingJobArn:
          $ref: '#/components/schemas/TrainingJobArn'
          description: The Amazon Resource Name (ARN) of the training job.
        TuningJobArn:
          $ref: '#/components/schemas/HyperParameterTuningJobArn'
          description: The Amazon Resource Name (ARN) of the associated hyperparameter tuning job if the training job was launched by a hyperparameter tuning job.
        LabelingJobArn:
          $ref: '#/components/schemas/LabelingJobArn'
          description: The Amazon Resource Name (ARN) of the labeling job.
        AutoMLJobArn:
          $ref: '#/components/schemas/AutoMLJobArn'
          description: The Amazon Resource Name (ARN) of the job.
        ModelArtifacts:
          $ref: '#/components/schemas/ModelArtifacts'
          description: Information about the Amazon S3 location that is configured for storing model artifacts.
        TrainingJobStatus:
          $ref: '#/components/schemas/TrainingJobStatus'
          description: '<p>The status of the training job.</p> <p>Training job statuses are:</p> <ul> <li> <p> <code>InProgress</code> - The training is in progress.</p> </li> <li> <p> <code>Completed</code> - The training job has completed.</p> </li> <li> <p> <code>Failed</code> - The training job has failed. To see the reason for the failure, see the <code>FailureReason</code> field in the response to a <code>DescribeTrainingJobResponse</code> call.</p> </li> <li> <p> <code>Stopping</code> - The training job is stopping.</p> </li> <li> <p> <code>Stopped</code> - The training job has stopped.</p> </li> </ul> <p>For more detailed information, see <code>SecondaryStatus</code>. </p>'
        SecondaryStatus:
          $ref: '#/components/schemas/SecondaryStatus'
          description: '<p> Provides detailed information about the state of the training job. For detailed information about the secondary status of the training job, see <code>StatusMessage</code> under <a>SecondaryStatusTransition</a>.</p> <p>Amazon SageMaker provides primary statuses and secondary statuses that apply to each of them:</p> <dl> <dt>InProgress</dt> <dd> <ul> <li> <p> <code>Starting</code> - Starting the training job.</p> </li> <li> <p> <code>Downloading</code> - An optional stage for algorithms that support <code>File</code> training input mode. It indicates that data is being downloaded to the ML storage volumes.</p> </li> <li> <p> <code>Training</code> - Training is in progress.</p> </li> <li> <p> <code>Uploading</code> - Training is complete and the model artifacts are being uploaded to the S3 location.</p> </li> </ul> </dd> <dt>Completed</dt> <dd> <ul> <li> <p> <code>Completed</code> - The training job has completed.</p> </li> </ul> </dd> <dt>Failed</dt> <dd> <ul> <li> <p> <code>Failed</code> - The training job has failed. The reason for the failure is returned in the <code>FailureReason</code> field of <code>DescribeTrainingJobResponse</code>.</p> </li> </ul> </dd> <dt>Stopped</dt> <dd> <ul> <li> <p> <code>MaxRuntimeExceeded</code> - The job stopped because it exceeded the maximum allowed runtime.</p> </li> <li> <p> <code>Stopped</code> - The training job has stopped.</p> </li> </ul> </dd> <dt>Stopping</dt> <dd> <ul> <li> <p> <code>Stopping</code> - Stopping the training job.</p> </li> </ul> </dd> </dl> <important> <p>Valid values for <code>SecondaryStatus</code> are subject to change. </p> </important> <p>We no longer support the following secondary statuses:</p> <ul> <li> <p> <code>LaunchingMLInstances</code> </p> </li> <li> <p> <code>PreparingTrainingStack</code> </p> </li> <li> <p> <code>DownloadingTrainingImage</code> </p> </li> </ul>'
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'If the training job failed, the reason it failed.'
        HyperParameters:
          $ref: '#/components/schemas/HyperParameters'
          description: Algorithm-specific parameters.
        AlgorithmSpecification:
          $ref: '#/components/schemas/AlgorithmSpecification'
          description: 'Information about the algorithm used for training, and algorithm metadata.'
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Web Services Identity and Access Management (IAM) role configured for the training job.
        InputDataConfig:
          $ref: '#/components/schemas/InputDataConfig'
          description: An array of <code>Channel</code> objects that describes each data input channel.
        OutputDataConfig:
          $ref: '#/components/schemas/OutputDataConfig'
          description: The S3 path where model artifacts that you configured when creating the job are stored. Amazon SageMaker creates subfolders for model artifacts.
        ResourceConfig:
          $ref: '#/components/schemas/ResourceConfig'
          description: 'Resources, including ML compute instances and ML storage volumes, that are configured for model training.'
        VpcConfig:
          $ref: '#/components/schemas/VpcConfig'
          description: 'A <a>VpcConfig</a> object that specifies the VPC that this training job has access to. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html">Protect Training Jobs by Using an Amazon Virtual Private Cloud</a>.'
        StoppingCondition:
          $ref: '#/components/schemas/StoppingCondition'
          description: '<p>Specifies a limit to how long a model training job can run. It also specifies how long a managed Spot training job has to complete. When the job reaches the time limit, Amazon SageMaker ends the training job. Use this API to cap model training costs.</p> <p>To stop a job, Amazon SageMaker sends the algorithm the <code>SIGTERM</code> signal, which delays job termination for 120 seconds. Algorithms can use this 120-second window to save the model artifacts, so the results of training are not lost. </p>'
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp that indicates when the training job was created.
        TrainingStartTime:
          $ref: '#/components/schemas/Timestamp'
          description: Indicates the time when the training job starts on training instances. You are billed for the time interval between this time and the value of <code>TrainingEndTime</code>. The start time in CloudWatch Logs might be later than this time. The difference is due to the time it takes to download the training data and to the size of the training container.
        TrainingEndTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'Indicates the time when the training job ends on training instances. You are billed for the time interval between the value of <code>TrainingStartTime</code> and this time. For successful jobs and stopped jobs, this is the time after model artifacts are uploaded. For failed jobs, this is the time when Amazon SageMaker detects a job failure.'
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp that indicates when the status of the training job was last modified.
        SecondaryStatusTransitions:
          $ref: '#/components/schemas/SecondaryStatusTransitions'
          description: A history of all of the secondary statuses that the training job has transitioned through.
        FinalMetricDataList:
          $ref: '#/components/schemas/FinalMetricDataList'
          description: A list of final metric values that are set when the training job completes. Used only if the training job was configured to use metrics.
        EnableNetworkIsolation:
          $ref: '#/components/schemas/Boolean'
          description: 'If the <code>TrainingJob</code> was created with network isolation, the value is set to <code>true</code>. If network isolation is enabled, nodes can''t communicate beyond the VPC they run in.'
        EnableInterContainerTrafficEncryption:
          $ref: '#/components/schemas/Boolean'
          description: 'To encrypt all communications between ML compute instances in distributed training, choose <code>True</code>. Encryption provides greater security for distributed training, but training might take longer. How long it takes depends on the amount of communication between compute instances, especially if you use a deep learning algorithm in distributed training.'
        EnableManagedSpotTraining:
          $ref: '#/components/schemas/Boolean'
          description: 'When true, enables managed spot training using Amazon EC2 Spot instances to run training jobs instead of on-demand instances. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/model-managed-spot-training.html">Managed Spot Training</a>.'
        CheckpointConfig:
          $ref: '#/components/schemas/CheckpointConfig'
        TrainingTimeInSeconds:
          $ref: '#/components/schemas/TrainingTimeInSeconds'
          description: The training time in seconds.
        BillableTimeInSeconds:
          $ref: '#/components/schemas/BillableTimeInSeconds'
          description: The billable time in seconds.
        DebugHookConfig:
          $ref: '#/components/schemas/DebugHookConfig'
        ExperimentConfig:
          $ref: '#/components/schemas/ExperimentConfig'
        DebugRuleConfigurations:
          $ref: '#/components/schemas/DebugRuleConfigurations'
          description: Information about the debug rule configuration.
        TensorBoardOutputConfig:
          $ref: '#/components/schemas/TensorBoardOutputConfig'
        DebugRuleEvaluationStatuses:
          $ref: '#/components/schemas/DebugRuleEvaluationStatuses'
          description: Information about the evaluation status of the rules for the training job.
        Environment:
          $ref: '#/components/schemas/TrainingEnvironmentMap'
          description: The environment variables to set in the Docker container.
        RetryStrategy:
          $ref: '#/components/schemas/RetryStrategy'
          description: The number of times to retry the job when the job fails due to an <code>InternalServerError</code>.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'An array of key-value pairs. You can use tags to categorize your Amazon Web Services resources in different ways, for example, by purpose, owner, or environment. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services Resources</a>.'
      description: Contains information about a training job.
    Trial:
      type: object
      properties:
        TrialName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the trial.
        TrialArn:
          $ref: '#/components/schemas/TrialArn'
          description: The Amazon Resource Name (ARN) of the trial.
        DisplayName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: 'The name of the trial as displayed. If <code>DisplayName</code> isn''t specified, <code>TrialName</code> is displayed.'
        ExperimentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the experiment the trial is part of.
        Source:
          $ref: '#/components/schemas/TrialSource'
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the trial was created.
        CreatedBy:
          $ref: '#/components/schemas/UserContext'
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: Who last modified the trial.
        LastModifiedBy:
          $ref: '#/components/schemas/UserContext'
        MetadataProperties:
          $ref: '#/components/schemas/MetadataProperties'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: The list of tags that are associated with the trial. You can use <a>Search</a> API to search on the tags.
        TrialComponentSummaries:
          $ref: '#/components/schemas/TrialComponentSimpleSummaries'
          description: 'A list of the components associated with the trial. For each component, a summary of the component''s properties is included.'
      description: The properties of a trial as returned by the <a>Search</a> API.
    TrialComponent:
      type: object
      properties:
        TrialComponentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the trial component.
        DisplayName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: 'The name of the component as displayed. If <code>DisplayName</code> isn''t specified, <code>TrialComponentName</code> is displayed.'
        TrialComponentArn:
          $ref: '#/components/schemas/TrialComponentArn'
          description: The Amazon Resource Name (ARN) of the trial component.
        Source:
          $ref: '#/components/schemas/TrialComponentSource'
          description: The Amazon Resource Name (ARN) and job type of the source of the component.
        Status:
          $ref: '#/components/schemas/TrialComponentStatus'
        StartTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the component started.
        EndTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the component ended.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the component was created.
        CreatedBy:
          $ref: '#/components/schemas/UserContext'
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the component was last modified.
        LastModifiedBy:
          $ref: '#/components/schemas/UserContext'
        Parameters:
          $ref: '#/components/schemas/TrialComponentParameters'
          description: The hyperparameters of the component.
        InputArtifacts:
          $ref: '#/components/schemas/TrialComponentArtifacts'
          description: The input artifacts of the component.
        OutputArtifacts:
          $ref: '#/components/schemas/TrialComponentArtifacts'
          description: The output artifacts of the component.
        Metrics:
          $ref: '#/components/schemas/TrialComponentMetricSummaries'
          description: The metrics for the component.
        MetadataProperties:
          $ref: '#/components/schemas/MetadataProperties'
        SourceDetail:
          $ref: '#/components/schemas/TrialComponentSourceDetail'
          description: Details of the source of the component.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: The list of tags that are associated with the component. You can use <a>Search</a> API to search on the tags.
        Parents:
          $ref: '#/components/schemas/Parents'
          description: An array of the parents of the component. A parent is a trial the component is associated with and the experiment the trial is part of. A component might not have any parents.
      description: The properties of a trial component as returned by the <a>Search</a> API.
    SearchRecord:
      type: object
      properties:
        TrainingJob:
          $ref: '#/components/schemas/TrainingJob'
          description: The properties of a training job.
        Experiment:
          $ref: '#/components/schemas/Experiment'
          description: The properties of an experiment.
        Trial:
          $ref: '#/components/schemas/Trial'
          description: The properties of a trial.
        TrialComponent:
          $ref: '#/components/schemas/TrialComponent'
          description: The properties of a trial component.
        Endpoint:
          $ref: '#/components/schemas/Endpoint'
        ModelPackage:
          $ref: '#/components/schemas/ModelPackage'
        ModelPackageGroup:
          $ref: '#/components/schemas/ModelPackageGroup'
        Pipeline:
          $ref: '#/components/schemas/Pipeline'
        PipelineExecution:
          $ref: '#/components/schemas/PipelineExecution'
        FeatureGroup:
          $ref: '#/components/schemas/FeatureGroup'
      description: A single resource returned as part of the <a>Search</a> API response.
    SearchSortOrder:
      type: string
      enum:
        - Ascending
        - Descending
    SearchResultsList:
      type: array
      items:
        $ref: '#/components/schemas/SearchRecord'
    StatusMessage:
      type: string
    SecondaryStatusTransition:
      type: object
      required:
        - Status
        - StartTime
      properties:
        Status:
          $ref: '#/components/schemas/SecondaryStatus'
          description: '<p>Contains a secondary status information from a training job.</p> <p>Status might be one of the following secondary statuses:</p> <dl> <dt>InProgress</dt> <dd> <ul> <li> <p> <code>Starting</code> - Starting the training job.</p> </li> <li> <p> <code>Downloading</code> - An optional stage for algorithms that support <code>File</code> training input mode. It indicates that data is being downloaded to the ML storage volumes.</p> </li> <li> <p> <code>Training</code> - Training is in progress.</p> </li> <li> <p> <code>Uploading</code> - Training is complete and the model artifacts are being uploaded to the S3 location.</p> </li> </ul> </dd> <dt>Completed</dt> <dd> <ul> <li> <p> <code>Completed</code> - The training job has completed.</p> </li> </ul> </dd> <dt>Failed</dt> <dd> <ul> <li> <p> <code>Failed</code> - The training job has failed. The reason for the failure is returned in the <code>FailureReason</code> field of <code>DescribeTrainingJobResponse</code>.</p> </li> </ul> </dd> <dt>Stopped</dt> <dd> <ul> <li> <p> <code>MaxRuntimeExceeded</code> - The job stopped because it exceeded the maximum allowed runtime.</p> </li> <li> <p> <code>Stopped</code> - The training job has stopped.</p> </li> </ul> </dd> <dt>Stopping</dt> <dd> <ul> <li> <p> <code>Stopping</code> - Stopping the training job.</p> </li> </ul> </dd> </dl> <p>We no longer support the following secondary statuses:</p> <ul> <li> <p> <code>LaunchingMLInstances</code> </p> </li> <li> <p> <code>PreparingTrainingStack</code> </p> </li> <li> <p> <code>DownloadingTrainingImage</code> </p> </li> </ul>'
        StartTime:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp that shows when the training job transitioned to the current secondary status state.
        EndTime:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp that shows when the training job transitioned out of this secondary status state into another secondary status state or when the training job has ended.
        StatusMessage:
          $ref: '#/components/schemas/StatusMessage'
          description: '<p>A detailed description of the progress within a secondary status. </p> <p>Amazon SageMaker provides secondary statuses and status messages that apply to each of them:</p> <dl> <dt>Starting</dt> <dd> <ul> <li> <p>Starting the training job.</p> </li> <li> <p>Launching requested ML instances.</p> </li> <li> <p>Insufficient capacity error from EC2 while launching instances, retrying!</p> </li> <li> <p>Launched instance was unhealthy, replacing it!</p> </li> <li> <p>Preparing the instances for training.</p> </li> </ul> </dd> <dt>Training</dt> <dd> <ul> <li> <p>Downloading the training image.</p> </li> <li> <p>Training image download completed. Training in progress.</p> </li> </ul> </dd> </dl> <important> <p>Status messages are subject to change. Therefore, we recommend not including them in code that programmatically initiates actions. For examples, don''t use status messages in if statements.</p> </important> <p>To have an overview of your training job''s progress, view <code>TrainingJobStatus</code> and <code>SecondaryStatus</code> in <a>DescribeTrainingJob</a>, and <code>StatusMessage</code> together. For example, at the start of a training job, you might see the following:</p> <ul> <li> <p> <code>TrainingJobStatus</code> - InProgress</p> </li> <li> <p> <code>SecondaryStatus</code> - Training</p> </li> <li> <p> <code>StatusMessage</code> - Downloading the training image</p> </li> </ul>'
      description: '<p>An array element of <a>DescribeTrainingJobResponse$SecondaryStatusTransitions</a>. It provides additional details about a status that the training job has transitioned through. A training job can be in one of several states, for example, starting, downloading, training, or uploading. Within each state, there are a number of intermediate states. For example, within the starting state, Amazon SageMaker could be starting the training job or launching the ML instances. These transitional states are referred to as the job''s secondary status. </p> <p/>'
    SecurityGroupId:
      type: string
      pattern: '[-0-9a-zA-Z]+'
      maxLength: 32
    Seed:
      type: integer
    ServiceCatalogEntityId:
      type: string
      pattern: '^[a-zA-Z0-9_\-]*'
      minLength: 1
      maxLength: 100
    SharingSettings:
      type: object
      properties:
        NotebookOutputOption:
          $ref: '#/components/schemas/NotebookOutputOption'
          description: Whether to include the notebook cell output when sharing the notebook. The default is <code>Disabled</code>.
        S3OutputPath:
          $ref: '#/components/schemas/S3Uri'
          description: 'When <code>NotebookOutputOption</code> is <code>Allowed</code>, the Amazon S3 bucket used to store the shared notebook snapshots.'
        S3KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: 'When <code>NotebookOutputOption</code> is <code>Allowed</code>, the Amazon Web Services Key Management Service (KMS) encryption key ID used to encrypt the notebook cell output in the Amazon S3 bucket.'
      description: 'Specifies options for sharing SageMaker Studio notebooks. These settings are specified as part of <code>DefaultUserSettings</code> when the <code>CreateDomain</code> API is called, and as part of <code>UserSettings</code> when the <code>CreateUserProfile</code> API is called. When <code>SharingSettings</code> is not specified, notebook sharing isn''t allowed.'
    SourceAlgorithm:
      type: object
      required:
        - AlgorithmName
      properties:
        ModelDataUrl:
          $ref: '#/components/schemas/Url'
          description: '<p>The Amazon S3 path where the model artifacts, which result from model training, are stored. This path must point to a single <code>gzip</code> compressed tar archive (<code>.tar.gz</code> suffix).</p> <note> <p>The model artifacts must be in an S3 bucket that is in the same region as the algorithm.</p> </note>'
        AlgorithmName:
          $ref: '#/components/schemas/ArnOrName'
          description: The name of an algorithm that was used to create the model package. The algorithm must be either an algorithm resource in your Amazon SageMaker account or an algorithm in Amazon Web Services Marketplace that you are subscribed to.
      description: Specifies an algorithm that was used to create the model package. The algorithm must be either an algorithm resource in your Amazon SageMaker account or an algorithm in Amazon Web Services Marketplace that you are subscribed to.
    SourceAlgorithmList:
      type: array
      items:
        $ref: '#/components/schemas/SourceAlgorithm'
      minItems: 1
      maxItems: 1
    SplitType:
      type: string
      enum:
        - None
        - Line
        - RecordIO
        - TFRecord
    TagKey:
      type: string
      pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
      minLength: 1
      maxLength: 128
    TagValue:
      type: string
      pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
      minLength: 0
      maxLength: 256
    Tag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          $ref: '#/components/schemas/TagKey'
          description: The tag key. Tag keys must be unique per resource.
        Value:
          $ref: '#/components/schemas/TagValue'
          description: The tag value.
      description: '<p>A tag object that consists of a key and an optional value, used to manage metadata for Amazon SageMaker Amazon Web Services resources.</p> <p>You can add tags to notebook instances, training jobs, hyperparameter tuning jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations, and endpoints. For more information on adding tags to Amazon SageMaker resources, see <a>AddTags</a>.</p> <p>For more information on adding metadata to your Amazon Web Services resources with tagging, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services resources</a>. For advice on best practices for managing Amazon Web Services resources with tagging, see <a href="https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf">Tagging Best Practices: Implement an Effective Amazon Web Services Resource Tagging Strategy</a>.</p>'
    TargetObjectiveMetricValue:
      type: number
      format: float
    TaskKeyword:
      type: string
      pattern: '^[A-Za-z0-9]+( [A-Za-z0-9]+)*$'
      minLength: 1
      maxLength: 30
    TemplateContent:
      type: string
      pattern: '[\S\s]+'
      minLength: 1
      maxLength: 128000
    TemplateContentSha256:
      type: string
      minLength: 1
      maxLength: 128000
    TemplateUrl:
      type: string
      minLength: 1
      maxLength: 2048
    TensorBoardAppSettings:
      type: object
      properties:
        DefaultResourceSpec:
          $ref: '#/components/schemas/ResourceSpec'
          description: The default instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance.
      description: The TensorBoard app settings.
    TenthFractionsOfACent:
      type: integer
      minimum: 0
      maximum: 9
    TrafficRoutingConfigType:
      type: string
      enum:
        - ALL_AT_ONCE
        - CANARY
    WaitIntervalInSeconds:
      type: integer
      minimum: 0
      maximum: 3600
    TrainingEnvironmentKey:
      type: string
      pattern: '[a-zA-Z_][a-zA-Z0-9_]*'
      maxLength: 512
    TrainingEnvironmentValue:
      type: string
      pattern: '[\S\s]*'
      maxLength: 512
    TrainingInstanceTypes:
      type: array
      items:
        $ref: '#/components/schemas/TrainingInstanceType'
    TrainingJobStatusCounter:
      type: integer
      minimum: 0
    TrainingJobSummary:
      type: object
      required:
        - TrainingJobName
        - TrainingJobArn
        - CreationTime
        - TrainingJobStatus
      properties:
        TrainingJobName:
          $ref: '#/components/schemas/TrainingJobName'
          description: The name of the training job that you want a summary for.
        TrainingJobArn:
          $ref: '#/components/schemas/TrainingJobArn'
          description: The Amazon Resource Name (ARN) of the training job.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp that shows when the training job was created.
        TrainingEndTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'A timestamp that shows when the training job ended. This field is set only if the training job has one of the terminal statuses (<code>Completed</code>, <code>Failed</code>, or <code>Stopped</code>). '
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: ' Timestamp when the training job was last modified. '
        TrainingJobStatus:
          $ref: '#/components/schemas/TrainingJobStatus'
          description: The status of the training job.
      description: Provides summary information about a training job.
    TransformS3DataSource:
      type: object
      required:
        - S3DataType
        - S3Uri
      properties:
        S3DataType:
          $ref: '#/components/schemas/S3DataType'
          description: '<p>If you choose <code>S3Prefix</code>, <code>S3Uri</code> identifies a key name prefix. Amazon SageMaker uses all objects with the specified key name prefix for batch transform. </p> <p>If you choose <code>ManifestFile</code>, <code>S3Uri</code> identifies an object that is a manifest file containing a list of object keys that you want Amazon SageMaker to use for batch transform. </p> <p>The following values are compatible: <code>ManifestFile</code>, <code>S3Prefix</code> </p> <p>The following value is not compatible: <code>AugmentedManifestFile</code> </p>'
        S3Uri:
          $ref: '#/components/schemas/S3Uri'
          description: '<p>Depending on the value specified for the <code>S3DataType</code>, identifies either a key name prefix or a manifest. For example:</p> <ul> <li> <p> A key name prefix might look like this: <code>s3://bucketname/exampleprefix</code>. </p> </li> <li> <p> A manifest might look like this: <code>s3://bucketname/example.manifest</code> </p> <p> The manifest is an S3 object which is a JSON file with the following format: </p> <p> <code>[ {"prefix": "s3://customer_bucket/some/prefix/"},</code> </p> <p> <code>"relative/path/to/custdata-1",</code> </p> <p> <code>"relative/path/custdata-2",</code> </p> <p> <code>...</code> </p> <p> <code>"relative/path/custdata-N"</code> </p> <p> <code>]</code> </p> <p> The preceding JSON matches the following <code>S3Uris</code>: </p> <p> <code>s3://customer_bucket/some/prefix/relative/path/to/custdata-1</code> </p> <p> <code>s3://customer_bucket/some/prefix/relative/path/custdata-2</code> </p> <p> <code>...</code> </p> <p> <code>s3://customer_bucket/some/prefix/relative/path/custdata-N</code> </p> <p> The complete set of <code>S3Uris</code> in this manifest constitutes the input data for the channel for this datasource. The object that each <code>S3Uris</code> points to must be readable by the IAM role that Amazon SageMaker uses to perform tasks on your behalf.</p> </li> </ul>'
      description: Describes the S3 data source.
    TransformDataSource:
      type: object
      required:
        - S3DataSource
      properties:
        S3DataSource:
          $ref: '#/components/schemas/TransformS3DataSource'
          description: The S3 location of the data source that is associated with a channel.
      description: Describes the location of the channel data.
    TransformEnvironmentKey:
      type: string
      pattern: '[a-zA-Z_][a-zA-Z0-9_]{0,1023}'
      maxLength: 1024
    TransformEnvironmentValue:
      type: string
      pattern: '[\S\s]*'
      maxLength: 10240
    TransformInstanceCount:
      type: integer
      minimum: 1
    TransformInstanceType:
      type: string
      enum:
        - ml.m4.xlarge
        - ml.m4.2xlarge
        - ml.m4.4xlarge
        - ml.m4.10xlarge
        - ml.m4.16xlarge
        - ml.c4.xlarge
        - ml.c4.2xlarge
        - ml.c4.4xlarge
        - ml.c4.8xlarge
        - ml.p2.xlarge
        - ml.p2.8xlarge
        - ml.p2.16xlarge
        - ml.p3.2xlarge
        - ml.p3.8xlarge
        - ml.p3.16xlarge
        - ml.c5.xlarge
        - ml.c5.2xlarge
        - ml.c5.4xlarge
        - ml.c5.9xlarge
        - ml.c5.18xlarge
        - ml.m5.large
        - ml.m5.xlarge
        - ml.m5.2xlarge
        - ml.m5.4xlarge
        - ml.m5.12xlarge
        - ml.m5.24xlarge
        - ml.g4dn.xlarge
        - ml.g4dn.2xlarge
        - ml.g4dn.4xlarge
        - ml.g4dn.8xlarge
        - ml.g4dn.12xlarge
        - ml.g4dn.16xlarge
    TransformJob:
      type: object
      properties:
        TransformJobName:
          $ref: '#/components/schemas/TransformJobName'
          description: The name of the transform job.
        TransformJobArn:
          $ref: '#/components/schemas/TransformJobArn'
          description: The Amazon Resource Name (ARN) of the transform job.
        TransformJobStatus:
          $ref: '#/components/schemas/TransformJobStatus'
          description: '<p>The status of the transform job.</p> <p>Transform job statuses are:</p> <ul> <li> <p> <code>InProgress</code> - The job is in progress.</p> </li> <li> <p> <code>Completed</code> - The job has completed.</p> </li> <li> <p> <code>Failed</code> - The transform job has failed. To see the reason for the failure, see the <code>FailureReason</code> field in the response to a <code>DescribeTransformJob</code> call.</p> </li> <li> <p> <code>Stopping</code> - The transform job is stopping.</p> </li> <li> <p> <code>Stopped</code> - The transform job has stopped.</p> </li> </ul>'
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'If the transform job failed, the reason it failed.'
        ModelName:
          $ref: '#/components/schemas/ModelName'
          description: The name of the model associated with the transform job.
        MaxConcurrentTransforms:
          $ref: '#/components/schemas/MaxConcurrentTransforms'
          description: 'The maximum number of parallel requests that can be sent to each instance in a transform job. If <code>MaxConcurrentTransforms</code> is set to 0 or left unset, SageMaker checks the optional execution-parameters to determine the settings for your chosen algorithm. If the execution-parameters endpoint is not enabled, the default value is 1. For built-in algorithms, you don''t need to set a value for <code>MaxConcurrentTransforms</code>.'
        ModelClientConfig:
          $ref: '#/components/schemas/ModelClientConfig'
        MaxPayloadInMB:
          $ref: '#/components/schemas/MaxPayloadInMB'
          description: 'The maximum allowed size of the payload, in MB. A payload is the data portion of a record (without metadata). The value in <code>MaxPayloadInMB</code> must be greater than, or equal to, the size of a single record. To estimate the size of a record in MB, divide the size of your dataset by the number of records. To ensure that the records fit within the maximum payload size, we recommend using a slightly larger value. The default value is 6 MB. For cases where the payload might be arbitrarily large and is transmitted using HTTP chunked encoding, set the value to 0. This feature works only in supported algorithms. Currently, SageMaker built-in algorithms do not support HTTP chunked encoding.'
        BatchStrategy:
          $ref: '#/components/schemas/BatchStrategy'
          description: 'Specifies the number of records to include in a mini-batch for an HTTP inference request. A record is a single unit of input data that inference can be made on. For example, a single line in a CSV file is a record.'
        Environment:
          $ref: '#/components/schemas/TransformEnvironmentMap'
          description: The environment variables to set in the Docker container. We support up to 16 key and values entries in the map.
        TransformInput:
          $ref: '#/components/schemas/TransformInput'
        TransformOutput:
          $ref: '#/components/schemas/TransformOutput'
        TransformResources:
          $ref: '#/components/schemas/TransformResources'
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp that shows when the transform Job was created.
        TransformStartTime:
          $ref: '#/components/schemas/Timestamp'
          description: Indicates when the transform job starts on ML instances. You are billed for the time interval between this time and the value of <code>TransformEndTime</code>.
        TransformEndTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'Indicates when the transform job has been completed, or has stopped or failed. You are billed for the time interval between this time and the value of <code>TransformStartTime</code>.'
        LabelingJobArn:
          $ref: '#/components/schemas/LabelingJobArn'
          description: The Amazon Resource Name (ARN) of the labeling job that created the transform job.
        AutoMLJobArn:
          $ref: '#/components/schemas/AutoMLJobArn'
          description: The Amazon Resource Name (ARN) of the AutoML job that created the transform job.
        DataProcessing:
          $ref: '#/components/schemas/DataProcessing'
        ExperimentConfig:
          $ref: '#/components/schemas/ExperimentConfig'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A list of tags associated with the transform job.
      description: 'A batch transform job. For information about SageMaker batch transform, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/batch-transform.html">Use Batch Transform</a>.'
    TransformJobSummary:
      type: object
      required:
        - TransformJobName
        - TransformJobArn
        - CreationTime
        - TransformJobStatus
      properties:
        TransformJobName:
          $ref: '#/components/schemas/TransformJobName'
          description: The name of the transform job.
        TransformJobArn:
          $ref: '#/components/schemas/TransformJobArn'
          description: The Amazon Resource Name (ARN) of the transform job.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp that shows when the transform Job was created.
        TransformEndTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'Indicates when the transform job ends on compute instances. For successful jobs and stopped jobs, this is the exact time recorded after the results are uploaded. For failed jobs, this is when Amazon SageMaker detected that the job failed.'
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: Indicates when the transform job was last modified.
        TransformJobStatus:
          $ref: '#/components/schemas/TransformJobStatus'
          description: The status of the transform job.
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'If the transform job failed, the reason it failed.'
      description: Provides a summary of a transform job. Multiple <code>TransformJobSummary</code> objects are returned as a list after in response to a <a>ListTransformJobs</a> call.
    TrialComponentSimpleSummaries:
      type: array
      items:
        $ref: '#/components/schemas/TrialComponentSimpleSummary'
    TrialComponentSourceDetail:
      type: object
      properties:
        SourceArn:
          $ref: '#/components/schemas/TrialComponentSourceArn'
          description: The Amazon Resource Name (ARN) of the source.
        TrainingJob:
          $ref: '#/components/schemas/TrainingJob'
          description: Information about a training job that's the source of a trial component.
        ProcessingJob:
          $ref: '#/components/schemas/ProcessingJob'
          description: Information about a processing job that's the source of a trial component.
        TransformJob:
          $ref: '#/components/schemas/TransformJob'
          description: Information about a transform job that's the source of a trial component.
      description: Detailed information about the source of a trial component. Either <code>ProcessingJob</code> or <code>TrainingJob</code> is returned.
    TrialComponentArtifactValue:
      type: string
      pattern: .*
      maxLength: 2048
    TrialComponentArtifact:
      type: object
      required:
        - Value
      properties:
        MediaType:
          $ref: '#/components/schemas/MediaType'
          description: 'The media type of the artifact, which indicates the type of data in the artifact file. The media type consists of a <i>type</i> and a <i>subtype</i> concatenated with a slash (/) character, for example, text/csv, image/jpeg, and s3/uri. The type specifies the category of the media. The subtype specifies the kind of data.'
        Value:
          $ref: '#/components/schemas/TrialComponentArtifactValue'
          description: The location of the artifact.
      description: '<p>Represents an input or output artifact of a trial component. You specify <code>TrialComponentArtifact</code> as part of the <code>InputArtifacts</code> and <code>OutputArtifacts</code> parameters in the <a>CreateTrialComponent</a> request.</p> <p>Examples of input artifacts are datasets, algorithms, hyperparameters, source code, and instance types. Examples of output artifacts are metrics, snapshots, logs, and images.</p>'
    TrialComponentKey64:
      type: string
      pattern: .*
      maxLength: 64
    TrialComponentMetricSummary:
      type: object
      properties:
        MetricName:
          $ref: '#/components/schemas/MetricName'
          description: The name of the metric.
        SourceArn:
          $ref: '#/components/schemas/TrialComponentSourceArn'
          description: The Amazon Resource Name (ARN) of the source.
        TimeStamp:
          $ref: '#/components/schemas/Timestamp'
          description: When the metric was last updated.
        Max:
          $ref: '#/components/schemas/OptionalDouble'
          description: The maximum value of the metric.
        Min:
          $ref: '#/components/schemas/OptionalDouble'
          description: The minimum value of the metric.
        Last:
          $ref: '#/components/schemas/OptionalDouble'
          description: The most recent value of the metric.
        Count:
          $ref: '#/components/schemas/OptionalInteger'
          description: The number of samples used to generate the metric.
        Avg:
          $ref: '#/components/schemas/OptionalDouble'
          description: The average value of the metric.
        StdDev:
          $ref: '#/components/schemas/OptionalDouble'
          description: The standard deviation of the metric.
      description: A summary of the metrics of a trial component.
    TrialComponentSourceArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:.*'
      maxLength: 256
    TrialComponentParameterValue:
      type: object
      properties:
        StringValue:
          $ref: '#/components/schemas/StringParameterValue'
          description: 'The string value of a categorical hyperparameter. If you specify a value for this parameter, you can''t specify the <code>NumberValue</code> parameter.'
        NumberValue:
          $ref: '#/components/schemas/DoubleParameterValue'
          description: 'The numeric value of a numeric hyperparameter. If you specify a value for this parameter, you can''t specify the <code>StringValue</code> parameter.'
      description: <p>The value of a hyperparameter. Only one of <code>NumberValue</code> or <code>StringValue</code> can be specified.</p> <p>This object is specified in the <a>CreateTrialComponent</a> request.</p>
    TrialComponentPrimaryStatus:
      type: string
      enum:
        - InProgress
        - Completed
        - Failed
        - Stopping
        - Stopped
    TrialComponentSimpleSummary:
      type: object
      properties:
        TrialComponentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the trial component.
        TrialComponentArn:
          $ref: '#/components/schemas/TrialComponentArn'
          description: The Amazon Resource Name (ARN) of the trial component.
        TrialComponentSource:
          $ref: '#/components/schemas/TrialComponentSource'
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the component was created.
        CreatedBy:
          $ref: '#/components/schemas/UserContext'
      description: A short summary of a trial component.
    TrialComponentStatusMessage:
      type: string
      pattern: .*
      maxLength: 1024
    TrialComponentSummary:
      type: object
      properties:
        TrialComponentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the trial component.
        TrialComponentArn:
          $ref: '#/components/schemas/TrialComponentArn'
          description: The ARN of the trial component.
        DisplayName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: 'The name of the component as displayed. If <code>DisplayName</code> isn''t specified, <code>TrialComponentName</code> is displayed.'
        TrialComponentSource:
          $ref: '#/components/schemas/TrialComponentSource'
        Status:
          $ref: '#/components/schemas/TrialComponentStatus'
          description: '<p>The status of the component. States include:</p> <ul> <li> <p>InProgress</p> </li> <li> <p>Completed</p> </li> <li> <p>Failed</p> </li> </ul>'
        StartTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the component started.
        EndTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the component ended.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the component was created.
        CreatedBy:
          $ref: '#/components/schemas/UserContext'
          description: Who created the component.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the component was last modified.
        LastModifiedBy:
          $ref: '#/components/schemas/UserContext'
          description: Who last modified the component.
      description: 'A summary of the properties of a trial component. To get all the properties, call the <a>DescribeTrialComponent</a> API and provide the <code>TrialComponentName</code>.'
    TrialSourceArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:.*'
      maxLength: 256
    TrialSummary:
      type: object
      properties:
        TrialArn:
          $ref: '#/components/schemas/TrialArn'
          description: The Amazon Resource Name (ARN) of the trial.
        TrialName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the trial.
        DisplayName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: 'The name of the trial as displayed. If <code>DisplayName</code> isn''t specified, <code>TrialName</code> is displayed.'
        TrialSource:
          $ref: '#/components/schemas/TrialSource'
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the trial was created.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the trial was last modified.
      description: 'A summary of the properties of a trial. To get the complete set of properties, call the <a>DescribeTrial</a> API and provide the <code>TrialName</code>.'
    VariantPropertyList:
      type: array
      items:
        $ref: '#/components/schemas/VariantProperty'
      minItems: 0
      maxItems: 3
    UserProfileDetails:
      type: object
      properties:
        DomainId:
          $ref: '#/components/schemas/DomainId'
          description: The domain ID.
        UserProfileName:
          $ref: '#/components/schemas/UserProfileName'
          description: The user profile name.
        Status:
          $ref: '#/components/schemas/UserProfileStatus'
          description: The status.
        CreationTime:
          $ref: '#/components/schemas/CreationTime'
          description: The creation time.
        LastModifiedTime:
          $ref: '#/components/schemas/LastModifiedTime'
          description: The last modified time.
      description: The user profile details.
    VariantPropertyType:
      type: string
      enum:
        - DesiredInstanceCount
        - DesiredWeight
        - DataCaptureConfig
    VariantProperty:
      type: object
      required:
        - VariantPropertyType
      properties:
        VariantPropertyType:
          $ref: '#/components/schemas/VariantPropertyType'
          description: '<p>The type of variant property. The supported values are:</p> <ul> <li> <p> <code>DesiredInstanceCount</code>: Overrides the existing variant instance counts using the <a>ProductionVariant$InitialInstanceCount</a> values in the <a>CreateEndpointConfigInput$ProductionVariants</a>.</p> </li> <li> <p> <code>DesiredWeight</code>: Overrides the existing variant weights using the <a>ProductionVariant$InitialVariantWeight</a> values in the <a>CreateEndpointConfigInput$ProductionVariants</a>.</p> </li> <li> <p> <code>DataCaptureConfig</code>: (Not currently supported.)</p> </li> </ul>'
      description: '<p>Specifies a production variant property type for an Endpoint.</p> <p>If you are updating an endpoint with the <a>UpdateEndpointInput$RetainAllVariantProperties</a> option set to <code>true</code>, the <code>VariantProperty</code> objects listed in <a>UpdateEndpointInput$ExcludeRetainedVariantProperties</a> override the existing variant properties of the endpoint.</p>'
    VpcSecurityGroupIds:
      type: array
      items:
        $ref: '#/components/schemas/SecurityGroupId'
      minItems: 1
      maxItems: 5
security:
  - hmac: []
