openapi: 3.0.0
info:
  version: '2018-11-15'
  x-release: v4
  title: AWS Backup
  description: '<fullname>AWS Backup</fullname> <p>AWS Backup is a unified backup service designed to protect AWS services and their associated data. AWS Backup simplifies the creation, migration, restoration, and deletion of backups, while also providing reporting and auditing.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: backup
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/backup-2018-11-15.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/backup/'
servers:
  - url: 'http://backup.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS Backup multi-region endpoint
  - url: 'https://backup.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS Backup multi-region endpoint
  - url: 'http://backup.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Backup endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://backup.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Backup endpoint for China (Beijing) and China (Ningxia)
paths:
  /backup/plans/:
    put:
      operationId: CreateBackupPlan
      description: '<p>Creates a backup plan using a backup plan name and backup rules. A backup plan is a document that contains information that AWS Backup uses to schedule tasks that create recovery points for resources.</p> <p>If you call <code>CreateBackupPlan</code> with a plan that already exists, an <code>AlreadyExistsException</code> is returned.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBackupPlanOutput'
        '480':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '481':
          description: AlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
        '482':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '483':
          description: MissingParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - BackupPlan
              properties:
                BackupPlan:
                  description: 'Contains an optional backup plan display name and an array of <code>BackupRule</code> objects, each of which specifies a backup rule. Each rule in a backup plan is a separate scheduled task and can back up a different selection of AWS resources. '
                  type: object
                  properties:
                    BackupPlanName:
                      $ref: '#/components/schemas/BackupPlanName'
                      description: The optional display name of a backup plan.
                    Rules:
                      $ref: '#/components/schemas/BackupRulesInput'
                      description: 'An array of <code>BackupRule</code> objects, each of which specifies a scheduled task that is used to back up a selection of resources.'
                    AdvancedBackupSettings:
                      $ref: '#/components/schemas/AdvancedBackupSettings'
                      description: Specifies a list of <code>BackupOptions</code> for each resource type. These settings are only available for Windows VSS backup jobs.
                BackupPlanTags:
                  description: 'To help organize your resources, you can assign your own metadata to the resources that you create. Each tag is a key-value pair. The specified tags are assigned to all backups created with this plan.'
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
                CreatorRequestId:
                  description: 'Identifies the request and allows failed requests to be retried without the risk of running the operation twice. If the request includes a <code>CreatorRequestId</code> that matches an existing backup plan, that plan is returned. This parameter is optional.'
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListBackupPlans
      description: 'Returns a list of existing backup plans for an authenticated account. The list is populated only if the advanced option is set for the backup plan. The list contains information such as Amazon Resource Names (ARNs), plan IDs, creation and deletion dates, version IDs, plan names, and creator request IDs.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackupPlansOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of items to be returned.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: includeDeleted
          in: query
          required: false
          description: A Boolean value with a default value of <code>FALSE</code> that returns deleted backup plans when set to <code>TRUE</code>.
          schema:
            type: boolean
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  '/backup/plans/{backupPlanId}/selections/':
    put:
      operationId: CreateBackupSelection
      description: '<p>Creates a JSON document that specifies a set of resources to assign to a backup plan. Resources can be included by specifying patterns for a <code>ListOfTags</code> and selected <code>Resources</code>. </p> <p>For example, consider the following patterns:</p> <ul> <li> <p> <code>Resources: "arn:aws:ec2:region:account-id:volume/volume-id"</code> </p> </li> <li> <p> <code>ConditionKey:"department"</code> </p> <p> <code>ConditionValue:"finance"</code> </p> <p> <code>ConditionType:"StringEquals"</code> </p> </li> <li> <p> <code>ConditionKey:"importance"</code> </p> <p> <code>ConditionValue:"critical"</code> </p> <p> <code>ConditionType:"StringEquals"</code> </p> </li> </ul> <p>Using these patterns would back up all Amazon Elastic Block Store (Amazon EBS) volumes that are tagged as <code>"department=finance"</code>, <code>"importance=critical"</code>, in addition to an EBS volume with the specified volume ID.</p> <p>Resources and conditions are additive in that all resources that match the pattern are selected. This shouldn''t be confused with a logical AND, where all conditions must match. The matching patterns are logically put together using the OR operator. In other words, all patterns that match are selected for backup.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBackupSelectionOutput'
        '480':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '481':
          description: AlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
        '482':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '483':
          description: MissingParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: backupPlanId
          in: path
          required: true
          description: Uniquely identifies the backup plan to be associated with the selection of resources.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - BackupSelection
              properties:
                BackupSelection:
                  description: Used to specify a set of resources to a backup plan.
                  type: object
                  properties:
                    SelectionName:
                      $ref: '#/components/schemas/BackupSelectionName'
                      description: The display name of a resource selection document.
                    IamRoleArn:
                      $ref: '#/components/schemas/IAMRoleArn'
                      description: 'The ARN of the IAM role that AWS Backup uses to authenticate when backing up the target resource; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'
                    Resources:
                      $ref: '#/components/schemas/ResourceArns'
                      description: An array of strings that contain Amazon Resource Names (ARNs) of resources to assign to a backup plan.
                    ListOfTags:
                      $ref: '#/components/schemas/ListOfTags'
                      description: 'An array of conditions used to specify a set of resources to assign to a backup plan; for example, <code>"StringEquals": {"ec2:ResourceTag/Department": "accounting"</code>. Assigns the backup plan to every resource with at least one matching tag.'
                CreatorRequestId:
                  description: A unique string that identifies the request and allows failed requests to be retried without the risk of running the operation twice.
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListBackupSelections
      description: Returns an array containing metadata of the resources associated with the target backup plan.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackupSelectionsOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: backupPlanId
          in: path
          required: true
          description: Uniquely identifies a backup plan.
          schema:
            type: string
        - name: nextToken
          in: query
          required: false
          description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of items to be returned.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  '/backup-vaults/{backupVaultName}':
    put:
      operationId: CreateBackupVault
      description: '<p>Creates a logical container where backups are stored. A <code>CreateBackupVault</code> request includes a name, optionally one or more resource tags, an encryption key, and a request ID.</p> <note> <p>Sensitive data, such as passport numbers, should not be included the name of a backup vault.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBackupVaultOutput'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: MissingParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
        '482':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: AlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
      parameters:
        - name: backupVaultName
          in: path
          required: true
          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of letters, numbers, and hyphens.'
          schema:
            type: string
            pattern: '^[a-zA-Z0-9\-\_]{2,50}$'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                BackupVaultTags:
                  description: Metadata that you can assign to help organize the resources that you create. Each tag is a key-value pair.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
                EncryptionKeyArn:
                  description: 'The server-side encryption key that is used to protect your backups; for example, <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.'
                  type: string
                CreatorRequestId:
                  description: A unique string that identifies the request and allows failed requests to be retried without the risk of running the operation twice.
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteBackupVault
      description: Deletes the backup vault identified by its name. A vault can be deleted only if it is empty.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      parameters:
        - name: backupVaultName
          in: path
          required: true
          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
          schema:
            type: string
    get:
      operationId: DescribeBackupVault
      description: Returns metadata about a backup vault specified by its name.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeBackupVaultOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: backupVaultName
          in: path
          required: true
          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
          schema:
            type: string
  '/backup/plans/{backupPlanId}':
    delete:
      operationId: DeleteBackupPlan
      description: 'Deletes a backup plan. A backup plan can only be deleted after all associated selections of resources have been deleted. Deleting a backup plan deletes the current version of a backup plan. Previous versions, if any, will still exist.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteBackupPlanOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      parameters:
        - name: backupPlanId
          in: path
          required: true
          description: Uniquely identifies a backup plan.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateBackupPlan
      description: Updates an existing backup plan identified by its <code>backupPlanId</code> with the input document in JSON format. The new version is uniquely identified by a <code>VersionId</code>.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBackupPlanOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: backupPlanId
          in: path
          required: true
          description: Uniquely identifies a backup plan.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - BackupPlan
              properties:
                BackupPlan:
                  description: 'Contains an optional backup plan display name and an array of <code>BackupRule</code> objects, each of which specifies a backup rule. Each rule in a backup plan is a separate scheduled task and can back up a different selection of AWS resources. '
                  type: object
                  properties:
                    BackupPlanName:
                      $ref: '#/components/schemas/BackupPlanName'
                      description: The optional display name of a backup plan.
                    Rules:
                      $ref: '#/components/schemas/BackupRulesInput'
                      description: 'An array of <code>BackupRule</code> objects, each of which specifies a scheduled task that is used to back up a selection of resources.'
                    AdvancedBackupSettings:
                      $ref: '#/components/schemas/AdvancedBackupSettings'
                      description: Specifies a list of <code>BackupOptions</code> for each resource type. These settings are only available for Windows VSS backup jobs.
  '/backup/plans/{backupPlanId}/selections/{selectionId}':
    delete:
      operationId: DeleteBackupSelection
      description: Deletes the resource selection associated with a backup plan that is specified by the <code>SelectionId</code>.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: backupPlanId
          in: path
          required: true
          description: Uniquely identifies a backup plan.
          schema:
            type: string
        - name: selectionId
          in: path
          required: true
          description: Uniquely identifies the body of a request to assign a set of resources to a backup plan.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetBackupSelection
      description: Returns selection metadata and a document in JSON format that specifies a list of resources that are associated with a backup plan.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBackupSelectionOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: backupPlanId
          in: path
          required: true
          description: Uniquely identifies a backup plan.
          schema:
            type: string
        - name: selectionId
          in: path
          required: true
          description: Uniquely identifies the body of a request to assign a set of resources to a backup plan.
          schema:
            type: string
  '/backup-vaults/{backupVaultName}/access-policy':
    delete:
      operationId: DeleteBackupVaultAccessPolicy
      description: Deletes the policy document that manages permissions on a backup vault.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: backupVaultName
          in: path
          required: true
          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
          schema:
            type: string
            pattern: '^[a-zA-Z0-9\-\_]{2,50}$'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetBackupVaultAccessPolicy
      description: Returns the access policy document that is associated with the named backup vault.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBackupVaultAccessPolicyOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: backupVaultName
          in: path
          required: true
          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
          schema:
            type: string
            pattern: '^[a-zA-Z0-9\-\_]{2,50}$'
    put:
      operationId: PutBackupVaultAccessPolicy
      description: Sets a resource-based policy that is used to manage access permissions on the target backup vault. Requires a backup vault name and an access policy document in JSON format.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: backupVaultName
          in: path
          required: true
          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
          schema:
            type: string
            pattern: '^[a-zA-Z0-9\-\_]{2,50}$'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Policy:
                  description: The backup vault access policy document in JSON format.
                  type: string
  '/backup-vaults/{backupVaultName}/notification-configuration':
    delete:
      operationId: DeleteBackupVaultNotifications
      description: Deletes event notifications for the specified backup vault.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: backupVaultName
          in: path
          required: true
          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
          schema:
            type: string
            pattern: '^[a-zA-Z0-9\-\_]{2,50}$'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetBackupVaultNotifications
      description: Returns event notifications for the specified backup vault.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBackupVaultNotificationsOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: backupVaultName
          in: path
          required: true
          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
          schema:
            type: string
            pattern: '^[a-zA-Z0-9\-\_]{2,50}$'
    put:
      operationId: PutBackupVaultNotifications
      description: Turns on notifications on a backup vault for the specified topic and events.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: backupVaultName
          in: path
          required: true
          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
          schema:
            type: string
            pattern: '^[a-zA-Z0-9\-\_]{2,50}$'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - SNSTopicArn
                - BackupVaultEvents
              properties:
                SNSTopicArn:
                  description: 'The Amazon Resource Name (ARN) that specifies the topic for a backup vault’s events; for example, <code>arn:aws:sns:us-west-2:111122223333:MyVaultTopic</code>.'
                  type: string
                BackupVaultEvents:
                  description: An array of events that indicate the status of jobs to back up resources to the backup vault.
                  type: array
                  items:
                    $ref: '#/components/schemas/BackupVaultEvent'
  '/backup-vaults/{backupVaultName}/recovery-points/{recoveryPointArn}':
    delete:
      operationId: DeleteRecoveryPoint
      description: '<p>Deletes the recovery point specified by a recovery point ID.</p> <p>If the recovery point ID belongs to a continuous backup, calling this endpoint deletes the existing continuous backup and stops future continuous backup.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
        '483':
          description: InvalidResourceStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceStateException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      parameters:
        - name: backupVaultName
          in: path
          required: true
          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
          schema:
            type: string
            pattern: '^[a-zA-Z0-9\-\_]{2,50}$'
        - name: recoveryPointArn
          in: path
          required: true
          description: 'An Amazon Resource Name (ARN) that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeRecoveryPoint
      description: 'Returns metadata associated with a recovery point, including ID, status, encryption, and lifecycle.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeRecoveryPointOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: backupVaultName
          in: path
          required: true
          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
          schema:
            type: string
            pattern: '^[a-zA-Z0-9\-\_]{2,50}$'
        - name: recoveryPointArn
          in: path
          required: true
          description: 'An Amazon Resource Name (ARN) that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
          schema:
            type: string
    post:
      operationId: UpdateRecoveryPointLifecycle
      description: '<p>Sets the transition lifecycle of a recovery point.</p> <p>The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. AWS Backup transitions and expires backups automatically according to the lifecycle that you define.</p> <p>Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold.</p> <p>Only Amazon EFS file system backups can be transitioned to cold storage.</p> <p>Does not support continuous backups.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRecoveryPointLifecycleOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: backupVaultName
          in: path
          required: true
          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
          schema:
            type: string
            pattern: '^[a-zA-Z0-9\-\_]{2,50}$'
        - name: recoveryPointArn
          in: path
          required: true
          description: 'An Amazon Resource Name (ARN) that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Lifecycle:
                  description: '<p>Contains an array of <code>Transition</code> objects specifying how long in days before a recovery point transitions to cold storage or is deleted.</p> <p>Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, on the console, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold.</p> <p>Only Amazon EFS file system backups can be transitioned to cold storage.</p>'
                  type: object
                  properties:
                    MoveToColdStorageAfterDays:
                      $ref: '#/components/schemas/Long'
                      description: Specifies the number of days after creation that a recovery point is moved to cold storage.
                    DeleteAfterDays:
                      $ref: '#/components/schemas/Long'
                      description: Specifies the number of days after creation that a recovery point is deleted. Must be greater than 90 days plus <code>MoveToColdStorageAfterDays</code>.
  '/backup-jobs/{backupJobId}':
    get:
      operationId: DescribeBackupJob
      description: Returns backup job details for the specified <code>BackupJobId</code>.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeBackupJobOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: DependencyFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependencyFailureException'
      parameters:
        - name: backupJobId
          in: path
          required: true
          description: Uniquely identifies a request to AWS Backup to back up a resource.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: StopBackupJob
      description: Attempts to cancel a job to create a one-time backup of a resource.
      responses:
        '200':
          description: Success
        '480':
          description: MissingParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '483':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: backupJobId
          in: path
          required: true
          description: Uniquely identifies a request to AWS Backup to back up a resource.
          schema:
            type: string
  '/copy-jobs/{copyJobId}':
    get:
      operationId: DescribeCopyJob
      description: Returns metadata associated with creating a copy of a resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeCopyJobOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: copyJobId
          in: path
          required: true
          description: Uniquely identifies a copy job.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /global-settings:
    get:
      operationId: DescribeGlobalSettings
      description: 'Describes the global settings of the AWS account, including whether it is opted in to cross-account backup.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeGlobalSettingsOutput'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters: []
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdateGlobalSettings
      description: Updates the current global settings for the AWS account. Use the <code>DescribeGlobalSettings</code> API to determine the current settings.
      responses:
        '200':
          description: Success
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: MissingParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
        '482':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '483':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                GlobalSettings:
                  description: A list of resources along with the opt-in preferences for the account.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/GlobalSettingsValue'
  '/resources/{resourceArn}':
    get:
      operationId: DescribeProtectedResource
      description: 'Returns information about a saved resource, including the last time it was backed up, its Amazon Resource Name (ARN), and the AWS service type of the saved resource.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeProtectedResourceOutput'
        '480':
          description: MissingParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: An Amazon Resource Name (ARN) that uniquely identifies a resource. The format of the ARN depends on the resource type.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /account-settings:
    get:
      operationId: DescribeRegionSettings
      description: 'Returns the current service opt-in settings for the Region. If service-opt-in is enabled for a service, AWS Backup tries to protect that service''s resources in this Region, when the resource is included in an on-demand backup or scheduled backup plan. Otherwise, AWS Backup does not try to protect that service''s resources in this Region, AWS Backup does not try to protect that service''s resources in this Region.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeRegionSettingsOutput'
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters: []
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdateRegionSettings
      description: 'Updates the current service opt-in settings for the Region. If service-opt-in is enabled for a service, AWS Backup tries to protect that service''s resources in this Region, when the resource is included in an on-demand backup or scheduled backup plan. Otherwise, AWS Backup does not try to protect that service''s resources in this Region. Use the <code>DescribeRegionSettings</code> API to determine the resource types that are supported.'
      responses:
        '200':
          description: Success
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: MissingParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
        '482':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ResourceTypeOptInPreference:
                  description: Updates the list of services along with the opt-in preferences for the Region.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/IsEnabled'
  '/restore-jobs/{restoreJobId}':
    get:
      operationId: DescribeRestoreJob
      description: Returns metadata associated with a restore job that is specified by a job ID.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeRestoreJobOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: DependencyFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependencyFailureException'
      parameters:
        - name: restoreJobId
          in: path
          required: true
          description: Uniquely identifies the job that restores a recovery point.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/backup-vaults/{backupVaultName}/recovery-points/{recoveryPointArn}/disassociate':
    post:
      operationId: DisassociateRecoveryPoint
      description: '<p>Deletes the specified continuous backup recovery point from AWS Backup and releases control of that continuous backup to the source service, such as Amazon RDS. The source service will continue to create and retain continuous backups using the lifecycle that you specified in your original backup plan.</p> <p>Does not support snapshot backup recovery points.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
        '483':
          description: InvalidResourceStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceStateException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      parameters:
        - name: backupVaultName
          in: path
          required: true
          description: The unique name of an AWS Backup vault. Required.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9\-\_]{2,50}$'
        - name: recoveryPointArn
          in: path
          required: true
          description: An Amazon Resource Name (ARN) that uniquely identifies an AWS Backup recovery point. Required.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/backup/plans/{backupPlanId}/toTemplate/':
    get:
      operationId: ExportBackupPlanTemplate
      description: Returns the backup plan that is specified by the plan ID as a backup template.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportBackupPlanTemplateOutput'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: MissingParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
        '482':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: backupPlanId
          in: path
          required: true
          description: Uniquely identifies a backup plan.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/backup/plans/{backupPlanId}/':
    get:
      operationId: GetBackupPlan
      description: 'Returns <code>BackupPlan</code> details for the specified <code>BackupPlanId</code>. The details are the body of a backup plan in JSON format, in addition to plan metadata.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBackupPlanOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: backupPlanId
          in: path
          required: true
          description: Uniquely identifies a backup plan.
          schema:
            type: string
        - name: versionId
          in: query
          required: false
          description: 'Unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1,024 bytes long. Version IDs cannot be edited.'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /backup/template/json/toPlan:
    post:
      operationId: GetBackupPlanFromJSON
      description: Returns a valid JSON document specifying a backup plan or an error.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBackupPlanFromJSONOutput'
        '480':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - BackupPlanTemplateJson
              properties:
                BackupPlanTemplateJson:
                  description: A customer-supplied backup plan document in JSON format.
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/backup/template/plans/{templateId}/toPlan':
    get:
      operationId: GetBackupPlanFromTemplate
      description: Returns the template specified by its <code>templateId</code> as a backup plan.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBackupPlanFromTemplateOutput'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: MissingParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
        '482':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: templateId
          in: path
          required: true
          description: Uniquely identifies a stored backup plan template.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/backup-vaults/{backupVaultName}/recovery-points/{recoveryPointArn}/restore-metadata':
    get:
      operationId: GetRecoveryPointRestoreMetadata
      description: Returns a set of metadata key-value pairs that were used to create the backup.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecoveryPointRestoreMetadataOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: backupVaultName
          in: path
          required: true
          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
          schema:
            type: string
            pattern: '^[a-zA-Z0-9\-\_]{2,50}$'
        - name: recoveryPointArn
          in: path
          required: true
          description: 'An Amazon Resource Name (ARN) that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /supported-resource-types:
    get:
      operationId: GetSupportedResourceTypes
      description: Returns the AWS resource types supported by AWS Backup.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSupportedResourceTypesOutput'
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /backup-jobs/:
    get:
      operationId: ListBackupJobs
      description: 'Returns a list of existing backup jobs for an authenticated account for the last 30 days. For a longer period of time, consider using these <a href="https://docs.aws.amazon.com/aws-backup/latest/devguide/monitoring.html">monitoring tools</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackupJobsOutput'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of items to be returned.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: resourceArn
          in: query
          required: false
          description: Returns only backup jobs that match the specified resource Amazon Resource Name (ARN).
          schema:
            type: string
        - name: state
          in: query
          required: false
          description: Returns only backup jobs that are in the specified state.
          schema:
            type: string
            enum:
              - CREATED
              - PENDING
              - RUNNING
              - ABORTING
              - ABORTED
              - COMPLETED
              - FAILED
              - EXPIRED
        - name: backupVaultName
          in: query
          required: false
          description: 'Returns only backup jobs that will be stored in the specified backup vault. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
          schema:
            type: string
            pattern: '^[a-zA-Z0-9\-\_]{2,50}$'
        - name: createdBefore
          in: query
          required: false
          description: Returns only backup jobs that were created before the specified date.
          schema:
            type: string
            format: date-time
        - name: createdAfter
          in: query
          required: false
          description: Returns only backup jobs that were created after the specified date.
          schema:
            type: string
            format: date-time
        - name: resourceType
          in: query
          required: false
          description: '<p>Returns only backup jobs for the specified resources:</p> <ul> <li> <p> <code>DynamoDB</code> for Amazon DynamoDB</p> </li> <li> <p> <code>EBS</code> for Amazon Elastic Block Store</p> </li> <li> <p> <code>EC2</code> for Amazon Elastic Compute Cloud</p> </li> <li> <p> <code>EFS</code> for Amazon Elastic File System</p> </li> <li> <p> <code>RDS</code> for Amazon Relational Database Service</p> </li> <li> <p> <code>Aurora</code> for Amazon Aurora</p> </li> <li> <p> <code>Storage Gateway</code> for AWS Storage Gateway</p> </li> </ul>'
          schema:
            type: string
            pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
        - name: accountId
          in: query
          required: false
          description: '<p>The account ID to list the jobs from. Returns only backup jobs associated with the specified account ID.</p> <p>If used from an AWS Organizations management account, passing <code>*</code> returns all jobs across the organization.</p>'
          schema:
            type: string
            pattern: '^[0-9]{12}$'
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /backup/template/plans:
    get:
      operationId: ListBackupPlanTemplates
      description: 'Returns metadata of your saved backup plan templates, including the template ID, name, and the creation and deletion dates.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackupPlanTemplatesOutput'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: MissingParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
        '482':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of items to be returned.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/backup/plans/{backupPlanId}/versions/':
    get:
      operationId: ListBackupPlanVersions
      description: 'Returns version metadata of your backup plans, including Amazon Resource Names (ARNs), backup plan IDs, creation and deletion dates, plan names, and version IDs.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackupPlanVersionsOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: backupPlanId
          in: path
          required: true
          description: Uniquely identifies a backup plan.
          schema:
            type: string
        - name: nextToken
          in: query
          required: false
          description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of items to be returned.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /backup-vaults/:
    get:
      operationId: ListBackupVaults
      description: Returns a list of recovery point storage containers along with information about them.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackupVaultsOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of items to be returned.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /copy-jobs/:
    get:
      operationId: ListCopyJobs
      description: Returns metadata about your copy jobs.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCopyJobsOutput'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: 'The next item following a partial list of returned items. For example, if a request is made to return maxResults number of items, NextToken allows you to return more items in your list starting at the location pointed to by the next token. '
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of items to be returned.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: resourceArn
          in: query
          required: false
          description: 'Returns only copy jobs that match the specified resource Amazon Resource Name (ARN). '
          schema:
            type: string
        - name: state
          in: query
          required: false
          description: Returns only copy jobs that are in the specified state.
          schema:
            type: string
            enum:
              - CREATED
              - RUNNING
              - COMPLETED
              - FAILED
        - name: createdBefore
          in: query
          required: false
          description: Returns only copy jobs that were created before the specified date.
          schema:
            type: string
            format: date-time
        - name: createdAfter
          in: query
          required: false
          description: Returns only copy jobs that were created after the specified date.
          schema:
            type: string
            format: date-time
        - name: resourceType
          in: query
          required: false
          description: '<p>Returns only backup jobs for the specified resources:</p> <ul> <li> <p> <code>DynamoDB</code> for Amazon DynamoDB</p> </li> <li> <p> <code>EBS</code> for Amazon Elastic Block Store</p> </li> <li> <p> <code>EC2</code> for Amazon Elastic Compute Cloud</p> </li> <li> <p> <code>EFS</code> for Amazon Elastic File System</p> </li> <li> <p> <code>RDS</code> for Amazon Relational Database Service</p> </li> <li> <p> <code>Aurora</code> for Amazon Aurora</p> </li> <li> <p> <code>Storage Gateway</code> for AWS Storage Gateway</p> </li> </ul>'
          schema:
            type: string
            pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
        - name: destinationVaultArn
          in: query
          required: false
          description: 'An Amazon Resource Name (ARN) that uniquely identifies a source backup vault to copy from; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>. '
          schema:
            type: string
        - name: accountId
          in: query
          required: false
          description: The account ID to list the jobs from. Returns only copy jobs associated with the specified account ID.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /resources/:
    get:
      operationId: ListProtectedResources
      description: 'Returns an array of resources successfully backed up by AWS Backup, including the time the resource was saved, an Amazon Resource Name (ARN) of the resource, and a resource type.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProtectedResourcesOutput'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of items to be returned.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/backup-vaults/{backupVaultName}/recovery-points/':
    get:
      operationId: ListRecoveryPointsByBackupVault
      description: Returns detailed information about the recovery points stored in a backup vault.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRecoveryPointsByBackupVaultOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: backupVaultName
          in: path
          required: true
          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
          schema:
            type: string
            pattern: '^[a-zA-Z0-9\-\_]{2,50}$'
        - name: nextToken
          in: query
          required: false
          description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of items to be returned.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: resourceArn
          in: query
          required: false
          description: Returns only recovery points that match the specified resource Amazon Resource Name (ARN).
          schema:
            type: string
        - name: resourceType
          in: query
          required: false
          description: Returns only recovery points that match the specified resource type.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
        - name: backupPlanId
          in: query
          required: false
          description: Returns only recovery points that match the specified backup plan ID.
          schema:
            type: string
        - name: createdBefore
          in: query
          required: false
          description: Returns only recovery points that were created before the specified timestamp.
          schema:
            type: string
            format: date-time
        - name: createdAfter
          in: query
          required: false
          description: Returns only recovery points that were created after the specified timestamp.
          schema:
            type: string
            format: date-time
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/resources/{resourceArn}/recovery-points/':
    get:
      operationId: ListRecoveryPointsByResource
      description: Returns detailed information about recovery points of the type specified by a resource Amazon Resource Name (ARN).
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRecoveryPointsByResourceOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: An ARN that uniquely identifies a resource. The format of the ARN depends on the resource type.
          schema:
            type: string
        - name: nextToken
          in: query
          required: false
          description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of items to be returned.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /restore-jobs/:
    get:
      operationId: ListRestoreJobs
      description: 'Returns a list of jobs that AWS Backup initiated to restore a saved resource, including metadata about the recovery process.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRestoreJobsOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of items to be returned.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: accountId
          in: query
          required: false
          description: The account ID to list the jobs from. Returns only restore jobs associated with the specified account ID.
          schema:
            type: string
            pattern: '^[0-9]{12}$'
        - name: createdBefore
          in: query
          required: false
          description: Returns only restore jobs that were created before the specified date.
          schema:
            type: string
            format: date-time
        - name: createdAfter
          in: query
          required: false
          description: Returns only restore jobs that were created after the specified date.
          schema:
            type: string
            format: date-time
        - name: status
          in: query
          required: false
          description: Returns only restore jobs associated with the specified job status.
          schema:
            type: string
            enum:
              - PENDING
              - RUNNING
              - COMPLETED
              - ABORTED
              - FAILED
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{resourceArn}/':
    get:
      operationId: ListTags
      description: '<p>Returns a list of key-value pairs assigned to a target recovery point, backup plan, or backup vault.</p> <note> <p> <code>ListTags</code> are currently only supported with Amazon EFS backups.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: 'An Amazon Resource Name (ARN) that uniquely identifies a resource. The format of the ARN depends on the type of resource. Valid targets for <code>ListTags</code> are recovery points, backup plans, and backup vaults.'
          schema:
            type: string
        - name: nextToken
          in: query
          required: false
          description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of items to be returned.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /backup-jobs:
    put:
      operationId: StartBackupJob
      description: Starts an on-demand backup job for the specified resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartBackupJobOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
        '483':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '485':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - BackupVaultName
                - ResourceArn
                - IamRoleArn
              properties:
                BackupVaultName:
                  description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
                  type: string
                  pattern: '^[a-zA-Z0-9\-\_]{2,50}$'
                ResourceArn:
                  description: An Amazon Resource Name (ARN) that uniquely identifies a resource. The format of the ARN depends on the resource type.
                  type: string
                IamRoleArn:
                  description: 'Specifies the IAM role ARN used to create the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'
                  type: string
                IdempotencyToken:
                  description: A customer chosen string that can be used to distinguish between calls to <code>StartBackupJob</code>.
                  type: string
                StartWindowMinutes:
                  description: 'A value in minutes after a backup is scheduled before a job will be canceled if it doesn''t start successfully. This value is optional, and the default is 8 hours.'
                  type: integer
                CompleteWindowMinutes:
                  description: 'A value in minutes during which a successfully started backup must complete, or else AWS Backup will cancel the job. This value is optional. This value begins counting down from when the backup was scheduled. It does not add additional time for <code>StartWindowMinutes</code>, or if the backup started later than scheduled.'
                  type: integer
                Lifecycle:
                  description: '<p>Contains an array of <code>Transition</code> objects specifying how long in days before a recovery point transitions to cold storage or is deleted.</p> <p>Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, on the console, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold.</p> <p>Only Amazon EFS file system backups can be transitioned to cold storage.</p>'
                  type: object
                  properties:
                    MoveToColdStorageAfterDays:
                      $ref: '#/components/schemas/Long'
                      description: Specifies the number of days after creation that a recovery point is moved to cold storage.
                    DeleteAfterDays:
                      $ref: '#/components/schemas/Long'
                      description: Specifies the number of days after creation that a recovery point is deleted. Must be greater than 90 days plus <code>MoveToColdStorageAfterDays</code>.
                RecoveryPointTags:
                  description: 'To help organize your resources, you can assign your own metadata to the resources that you create. Each tag is a key-value pair.'
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
                BackupOptions:
                  description: '<p>Specifies the backup option for a selected resource. This option is only available for Windows VSS backup jobs.</p> <p>Valid values: Set to <code>"WindowsVSS”:“enabled"</code> to enable WindowsVSS backup option and create a VSS Windows backup. Set to “WindowsVSS”:”disabled” to create a regular backup. The WindowsVSS option is not enabled by default.</p>'
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/BackupOptionValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /copy-jobs:
    put:
      operationId: StartCopyJob
      description: <p>Starts a job to create a one-time copy of the specified resource.</p> <p>Does not support continuous backups.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartCopyJobOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - RecoveryPointArn
                - SourceBackupVaultName
                - DestinationBackupVaultArn
                - IamRoleArn
              properties:
                RecoveryPointArn:
                  description: 'An ARN that uniquely identifies a recovery point to use for the copy job; for example, arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45. '
                  type: string
                SourceBackupVaultName:
                  description: 'The name of a logical source container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
                  type: string
                  pattern: '^[a-zA-Z0-9\-\_]{2,50}$'
                DestinationBackupVaultArn:
                  description: 'An Amazon Resource Name (ARN) that uniquely identifies a destination backup vault to copy to; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'
                  type: string
                IamRoleArn:
                  description: 'Specifies the IAM role ARN used to copy the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'
                  type: string
                IdempotencyToken:
                  description: A customer chosen string that can be used to distinguish between calls to <code>StartCopyJob</code>.
                  type: string
                Lifecycle:
                  description: '<p>Contains an array of <code>Transition</code> objects specifying how long in days before a recovery point transitions to cold storage or is deleted.</p> <p>Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, on the console, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold.</p> <p>Only Amazon EFS file system backups can be transitioned to cold storage.</p>'
                  type: object
                  properties:
                    MoveToColdStorageAfterDays:
                      $ref: '#/components/schemas/Long'
                      description: Specifies the number of days after creation that a recovery point is moved to cold storage.
                    DeleteAfterDays:
                      $ref: '#/components/schemas/Long'
                      description: Specifies the number of days after creation that a recovery point is deleted. Must be greater than 90 days plus <code>MoveToColdStorageAfterDays</code>.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /restore-jobs:
    put:
      operationId: StartRestoreJob
      description: Recovers the saved resource identified by an Amazon Resource Name (ARN).
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartRestoreJobOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - RecoveryPointArn
                - Metadata
                - IamRoleArn
              properties:
                RecoveryPointArn:
                  description: 'An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
                  type: string
                Metadata:
                  description: '<p>A set of metadata key-value pairs. Contains information, such as a resource name, required to restore a recovery point.</p> <p> You can get configuration metadata about a resource at the time it was backed up by calling <code>GetRecoveryPointRestoreMetadata</code>. However, values in addition to those provided by <code>GetRecoveryPointRestoreMetadata</code> might be required to restore a resource. For example, you might need to provide a new resource name if the original already exists.</p> <p>You need to specify specific metadata to restore an Amazon Elastic File System (Amazon EFS) instance:</p> <ul> <li> <p> <code>file-system-id</code>: The ID of the Amazon EFS file system that is backed up by AWS Backup. Returned in <code>GetRecoveryPointRestoreMetadata</code>.</p> </li> <li> <p> <code>Encrypted</code>: A Boolean value that, if true, specifies that the file system is encrypted. If <code>KmsKeyId</code> is specified, <code>Encrypted</code> must be set to <code>true</code>.</p> </li> <li> <p> <code>KmsKeyId</code>: Specifies the AWS KMS key that is used to encrypt the restored file system. You can specify a key from another AWS account provided that key it is properly shared with your account via AWS KMS.</p> </li> <li> <p> <code>PerformanceMode</code>: Specifies the throughput mode of the file system.</p> </li> <li> <p> <code>CreationToken</code>: A user-supplied value that ensures the uniqueness (idempotency) of the request.</p> </li> <li> <p> <code>newFileSystem</code>: A Boolean value that, if true, specifies that the recovery point is restored to a new Amazon EFS file system.</p> </li> <li> <p> <code>ItemsToRestore </code>: An array of one to five strings where each string is a file path. Use <code>ItemsToRestore</code> to restore specific files or directories rather than the entire file system. This parameter is optional. For example, <code>"itemsToRestore":"[\"/my.test\"]"</code>.</p> </li> </ul>'
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/MetadataValue'
                IamRoleArn:
                  description: 'The Amazon Resource Name (ARN) of the IAM role that AWS Backup uses to create the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'
                  type: string
                IdempotencyToken:
                  description: A customer chosen string that can be used to distinguish between calls to <code>StartRestoreJob</code>.
                  type: string
                ResourceType:
                  description: '<p>Starts a job to restore a recovery point for one of the following resources:</p> <ul> <li> <p> <code>DynamoDB</code> for Amazon DynamoDB</p> </li> <li> <p> <code>EBS</code> for Amazon Elastic Block Store</p> </li> <li> <p> <code>EC2</code> for Amazon Elastic Compute Cloud</p> </li> <li> <p> <code>EFS</code> for Amazon Elastic File System</p> </li> <li> <p> <code>RDS</code> for Amazon Relational Database Service</p> </li> <li> <p> <code>Aurora</code> for Amazon Aurora</p> </li> <li> <p> <code>Storage Gateway</code> for AWS Storage Gateway</p> </li> </ul>'
                  type: string
                  pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{resourceArn}':
    post:
      operationId: TagResource
      description: 'Assigns a set of key-value pairs to a recovery point, backup plan, or backup vault identified by an Amazon Resource Name (ARN).'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: An ARN that uniquely identifies a resource. The format of the ARN depends on the type of the tagged resource.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Tags
              properties:
                Tags:
                  description: Key-value pairs that are used to help organize your resources. You can assign your own metadata to the resources you create.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/untag/{resourceArn}':
    post:
      operationId: UntagResource
      description: 'Removes a set of key-value pairs from a recovery point, backup plan, or backup vault identified by an Amazon Resource Name (ARN)'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: An ARN that uniquely identifies a resource. The format of the ARN depends on the type of the tagged resource.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - TagKeyList
              properties:
                TagKeyList:
                  description: A list of keys to identify which key-value tags to remove from a resource.
                  type: array
                  items:
                    $ref: '#/components/schemas/string'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CreateBackupPlanOutput:
      type: object
      properties:
        BackupPlanId:
          $ref: '#/components/schemas/string'
          description: Uniquely identifies a backup plan.
        BackupPlanArn:
          $ref: '#/components/schemas/ARN'
          description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup plan; for example, <code>arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50</code>.'
        CreationDate:
          $ref: '#/components/schemas/timestamp'
          description: 'The date and time that a backup plan is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
        VersionId:
          $ref: '#/components/schemas/string'
          description: 'Unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1,024 bytes long. They cannot be edited.'
        AdvancedBackupSettings:
          $ref: '#/components/schemas/AdvancedBackupSettings'
          description: A list of <code>BackupOptions</code> settings for a resource type. This option is only available for Windows VSS backup jobs.
    BackupPlanName:
      type: string
    BackupRulesInput:
      type: array
      items:
        $ref: '#/components/schemas/BackupRuleInput'
    AdvancedBackupSettings:
      type: array
      items:
        $ref: '#/components/schemas/AdvancedBackupSetting'
    TagValue:
      type: string
    LimitExceededException: {}
    AlreadyExistsException: {}
    InvalidParameterValueException: {}
    MissingParameterValueException: {}
    ServiceUnavailableException: {}
    CreateBackupSelectionOutput:
      type: object
      properties:
        SelectionId:
          $ref: '#/components/schemas/string'
          description: Uniquely identifies the body of a request to assign a set of resources to a backup plan.
        BackupPlanId:
          $ref: '#/components/schemas/string'
          description: Uniquely identifies a backup plan.
        CreationDate:
          $ref: '#/components/schemas/timestamp'
          description: 'The date and time a backup selection is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
    BackupSelectionName:
      type: string
      pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
    IAMRoleArn:
      type: string
    ResourceArns:
      type: array
      items:
        $ref: '#/components/schemas/ARN'
    ListOfTags:
      type: array
      items:
        $ref: '#/components/schemas/Condition'
    CreateBackupVaultOutput:
      type: object
      properties:
        BackupVaultName:
          $ref: '#/components/schemas/BackupVaultName'
          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
        BackupVaultArn:
          $ref: '#/components/schemas/ARN'
          description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'
        CreationDate:
          $ref: '#/components/schemas/timestamp'
          description: 'The date and time a backup vault is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
    DeleteBackupPlanOutput:
      type: object
      properties:
        BackupPlanId:
          $ref: '#/components/schemas/string'
          description: Uniquely identifies a backup plan.
        BackupPlanArn:
          $ref: '#/components/schemas/ARN'
          description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup plan; for example, <code>arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50</code>.'
        DeletionDate:
          $ref: '#/components/schemas/timestamp'
          description: 'The date and time a backup plan is deleted, in Unix format and Coordinated Universal Time (UTC). The value of <code>DeletionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
        VersionId:
          $ref: '#/components/schemas/string'
          description: 'Unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1,024 bytes long. Version IDs cannot be edited.'
    ResourceNotFoundException: {}
    InvalidRequestException: {}
    InvalidResourceStateException: {}
    DescribeBackupJobOutput:
      type: object
      properties:
        AccountId:
          $ref: '#/components/schemas/AccountId'
          description: Returns the account ID that owns the backup job.
        BackupJobId:
          $ref: '#/components/schemas/string'
          description: Uniquely identifies a request to AWS Backup to back up a resource.
        BackupVaultName:
          $ref: '#/components/schemas/BackupVaultName'
          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
        BackupVaultArn:
          $ref: '#/components/schemas/ARN'
          description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'
        RecoveryPointArn:
          $ref: '#/components/schemas/ARN'
          description: 'An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
        ResourceArn:
          $ref: '#/components/schemas/ARN'
          description: An ARN that uniquely identifies a saved resource. The format of the ARN depends on the resource type.
        CreationDate:
          $ref: '#/components/schemas/timestamp'
          description: 'The date and time that a backup job is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
        CompletionDate:
          $ref: '#/components/schemas/timestamp'
          description: 'The date and time that a job to create a backup job is completed, in Unix format and Coordinated Universal Time (UTC). The value of <code>CompletionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
        State:
          $ref: '#/components/schemas/BackupJobState'
          description: The current state of a resource recovery point.
        StatusMessage:
          $ref: '#/components/schemas/string'
          description: A detailed message explaining the status of the job to back up a resource.
        PercentDone:
          $ref: '#/components/schemas/string'
          description: Contains an estimated percentage that is complete of a job at the time the job status was queried.
        BackupSizeInBytes:
          $ref: '#/components/schemas/Long'
          description: 'The size, in bytes, of a backup.'
        IamRoleArn:
          $ref: '#/components/schemas/IAMRoleArn'
          description: 'Specifies the IAM role ARN used to create the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'
        CreatedBy:
          $ref: '#/components/schemas/RecoveryPointCreator'
          description: 'Contains identifying information about the creation of a backup job, including the <code>BackupPlanArn</code>, <code>BackupPlanId</code>, <code>BackupPlanVersion</code>, and <code>BackupRuleId</code> of the backup plan that is used to create it.'
        ResourceType:
          $ref: '#/components/schemas/ResourceType'
          description: 'The type of AWS resource to be backed up; for example, an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon Relational Database Service (Amazon RDS) database.'
        BytesTransferred:
          $ref: '#/components/schemas/Long'
          description: The size in bytes transferred to a backup vault at the time that the job status was queried.
        ExpectedCompletionDate:
          $ref: '#/components/schemas/timestamp'
          description: 'The date and time that a job to back up resources is expected to be completed, in Unix format and Coordinated Universal Time (UTC). The value of <code>ExpectedCompletionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
        StartBy:
          $ref: '#/components/schemas/timestamp'
          description: 'Specifies the time in Unix format and Coordinated Universal Time (UTC) when a backup job must be started before it is canceled. The value is calculated by adding the start window to the scheduled time. So if the scheduled time were 6:00 PM and the start window is 2 hours, the <code>StartBy</code> time would be 8:00 PM on the date specified. The value of <code>StartBy</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
        BackupOptions:
          $ref: '#/components/schemas/BackupOptions'
          description: Represents the options specified as part of backup plan or on-demand backup job.
        BackupType:
          $ref: '#/components/schemas/string'
          description: 'Represents the actual backup type selected for a backup job. For example, if a successful WindowsVSS backup was taken, <code>BackupType</code> returns "WindowsVSS". If <code>BackupType</code> is empty, then the backup type that was is a regular backup.'
    DependencyFailureException: {}
    DescribeBackupVaultOutput:
      type: object
      properties:
        BackupVaultName:
          $ref: '#/components/schemas/string'
          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
        BackupVaultArn:
          $ref: '#/components/schemas/ARN'
          description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'
        EncryptionKeyArn:
          $ref: '#/components/schemas/ARN'
          description: 'The server-side encryption key that is used to protect your backups; for example, <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.'
        CreationDate:
          $ref: '#/components/schemas/timestamp'
          description: 'The date and time that a backup vault is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
        CreatorRequestId:
          $ref: '#/components/schemas/string'
          description: A unique string that identifies the request and allows failed requests to be retried without the risk of running the operation twice.
        NumberOfRecoveryPoints:
          $ref: '#/components/schemas/long'
          description: The number of recovery points that are stored in a backup vault.
    DescribeCopyJobOutput:
      type: object
      properties:
        CopyJob:
          $ref: '#/components/schemas/CopyJob'
          description: Contains detailed information about a copy job.
    DescribeGlobalSettingsOutput:
      type: object
      properties:
        GlobalSettings:
          $ref: '#/components/schemas/GlobalSettings'
          description: A list of resources along with the opt-in preferences for the account.
        LastUpdateTime:
          $ref: '#/components/schemas/timestamp'
          description: 'The date and time that the global settings were last updated. This update is in Unix format and Coordinated Universal Time (UTC). The value of <code>LastUpdateTime</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
    DescribeProtectedResourceOutput:
      type: object
      properties:
        ResourceArn:
          $ref: '#/components/schemas/ARN'
          description: An ARN that uniquely identifies a resource. The format of the ARN depends on the resource type.
        ResourceType:
          $ref: '#/components/schemas/ResourceType'
          description: 'The type of AWS resource saved as a recovery point; for example, an EBS volume or an Amazon RDS database.'
        LastBackupTime:
          $ref: '#/components/schemas/timestamp'
          description: 'The date and time that a resource was last backed up, in Unix format and Coordinated Universal Time (UTC). The value of <code>LastBackupTime</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
    DescribeRecoveryPointOutput:
      type: object
      properties:
        RecoveryPointArn:
          $ref: '#/components/schemas/ARN'
          description: 'An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
        BackupVaultName:
          $ref: '#/components/schemas/BackupVaultName'
          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
        BackupVaultArn:
          $ref: '#/components/schemas/ARN'
          description: 'An ARN that uniquely identifies a backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'
        SourceBackupVaultArn:
          $ref: '#/components/schemas/ARN'
          description: 'An Amazon Resource Name (ARN) that uniquely identifies the source vault where the resource was originally backed up in; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:BackupVault</code>. If the recovery is restored to the same AWS account or Region, this value will be <code>null</code>.'
        ResourceArn:
          $ref: '#/components/schemas/ARN'
          description: An ARN that uniquely identifies a saved resource. The format of the ARN depends on the resource type.
        ResourceType:
          $ref: '#/components/schemas/ResourceType'
          description: 'The type of AWS resource to save as a recovery point; for example, an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon Relational Database Service (Amazon RDS) database.'
        CreatedBy:
          $ref: '#/components/schemas/RecoveryPointCreator'
          description: 'Contains identifying information about the creation of a recovery point, including the <code>BackupPlanArn</code>, <code>BackupPlanId</code>, <code>BackupPlanVersion</code>, and <code>BackupRuleId</code> of the backup plan used to create it.'
        IamRoleArn:
          $ref: '#/components/schemas/IAMRoleArn'
          description: 'Specifies the IAM role ARN used to create the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'
        Status:
          $ref: '#/components/schemas/RecoveryPointStatus'
          description: <p>A status code specifying the state of the recovery point.</p> <note> <p>A partial status indicates that the recovery point was not successfully re-created and must be retried.</p> </note>
        CreationDate:
          $ref: '#/components/schemas/timestamp'
          description: 'The date and time that a recovery point is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
        CompletionDate:
          $ref: '#/components/schemas/timestamp'
          description: 'The date and time that a job to create a recovery point is completed, in Unix format and Coordinated Universal Time (UTC). The value of <code>CompletionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
        BackupSizeInBytes:
          $ref: '#/components/schemas/Long'
          description: 'The size, in bytes, of a backup.'
        CalculatedLifecycle:
          $ref: '#/components/schemas/CalculatedLifecycle'
          description: A <code>CalculatedLifecycle</code> object containing <code>DeleteAt</code> and <code>MoveToColdStorageAt</code> timestamps.
        Lifecycle:
          $ref: '#/components/schemas/Lifecycle'
          description: '<p>The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. AWS Backup transitions and expires backups automatically according to the lifecycle that you define. </p> <p>Backups that are transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold. </p> <p>Only Amazon EFS file system backups can be transitioned to cold storage.</p>'
        EncryptionKeyArn:
          $ref: '#/components/schemas/ARN'
          description: 'The server-side encryption key used to protect your backups; for example, <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.'
        IsEncrypted:
          $ref: '#/components/schemas/boolean'
          description: 'A Boolean value that is returned as <code>TRUE</code> if the specified recovery point is encrypted, or <code>FALSE</code> if the recovery point is not encrypted.'
        StorageClass:
          $ref: '#/components/schemas/StorageClass'
          description: Specifies the storage class of the recovery point. Valid values are <code>WARM</code> or <code>COLD</code>.
        LastRestoreTime:
          $ref: '#/components/schemas/timestamp'
          description: 'The date and time that a recovery point was last restored, in Unix format and Coordinated Universal Time (UTC). The value of <code>LastRestoreTime</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
    DescribeRegionSettingsOutput:
      type: object
      properties:
        ResourceTypeOptInPreference:
          $ref: '#/components/schemas/ResourceTypeOptInPreference'
          description: Returns a list of all services along with the opt-in preferences in the Region.
    DescribeRestoreJobOutput:
      type: object
      properties:
        AccountId:
          $ref: '#/components/schemas/AccountId'
          description: Returns the account ID that owns the restore job.
        RestoreJobId:
          $ref: '#/components/schemas/string'
          description: Uniquely identifies the job that restores a recovery point.
        RecoveryPointArn:
          $ref: '#/components/schemas/ARN'
          description: 'An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
        CreationDate:
          $ref: '#/components/schemas/timestamp'
          description: 'The date and time that a restore job is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
        CompletionDate:
          $ref: '#/components/schemas/timestamp'
          description: 'The date and time that a job to restore a recovery point is completed, in Unix format and Coordinated Universal Time (UTC). The value of <code>CompletionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
        Status:
          $ref: '#/components/schemas/RestoreJobStatus'
          description: Status code specifying the state of the job that is initiated by AWS Backup to restore a recovery point.
        StatusMessage:
          $ref: '#/components/schemas/string'
          description: A message showing the status of a job to restore a recovery point.
        PercentDone:
          $ref: '#/components/schemas/string'
          description: Contains an estimated percentage that is complete of a job at the time the job status was queried.
        BackupSizeInBytes:
          $ref: '#/components/schemas/Long'
          description: 'The size, in bytes, of the restored resource.'
        IamRoleArn:
          $ref: '#/components/schemas/IAMRoleArn'
          description: 'Specifies the IAM role ARN used to create the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'
        ExpectedCompletionTimeMinutes:
          $ref: '#/components/schemas/Long'
          description: The amount of time in minutes that a job restoring a recovery point is expected to take.
        CreatedResourceArn:
          $ref: '#/components/schemas/ARN'
          description: An Amazon Resource Name (ARN) that uniquely identifies a resource whose recovery point is being restored. The format of the ARN depends on the resource type of the backed-up resource.
        ResourceType:
          $ref: '#/components/schemas/ResourceType'
          description: Returns metadata associated with a restore job listed by resource type.
    ExportBackupPlanTemplateOutput:
      type: object
      properties:
        BackupPlanTemplateJson:
          $ref: '#/components/schemas/string'
          description: <p>The body of a backup plan template in JSON format.</p> <note> <p>This is a signed JSON document that cannot be modified before being passed to <code>GetBackupPlanFromJSON.</code> </p> </note>
    GetBackupPlanOutput:
      type: object
      properties:
        BackupPlan:
          $ref: '#/components/schemas/BackupPlan'
          description: Specifies the body of a backup plan. Includes a <code>BackupPlanName</code> and one or more sets of <code>Rules</code>.
        BackupPlanId:
          $ref: '#/components/schemas/string'
          description: Uniquely identifies a backup plan.
        BackupPlanArn:
          $ref: '#/components/schemas/ARN'
          description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup plan; for example, <code>arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50</code>.'
        VersionId:
          $ref: '#/components/schemas/string'
          description: 'Unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1,024 bytes long. Version IDs cannot be edited.'
        CreatorRequestId:
          $ref: '#/components/schemas/string'
          description: A unique string that identifies the request and allows failed requests to be retried without the risk of running the operation twice.
        CreationDate:
          $ref: '#/components/schemas/timestamp'
          description: 'The date and time that a backup plan is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
        DeletionDate:
          $ref: '#/components/schemas/timestamp'
          description: 'The date and time that a backup plan is deleted, in Unix format and Coordinated Universal Time (UTC). The value of <code>DeletionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
        LastExecutionDate:
          $ref: '#/components/schemas/timestamp'
          description: 'The last time a job to back up resources was run with this backup plan. A date and time, in Unix format and Coordinated Universal Time (UTC). The value of <code>LastExecutionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
        AdvancedBackupSettings:
          $ref: '#/components/schemas/AdvancedBackupSettings'
          description: Contains a list of <code>BackupOptions</code> for each resource type. The list is populated only if the advanced option is set for the backup plan.
    GetBackupPlanFromJSONOutput:
      type: object
      properties:
        BackupPlan:
          $ref: '#/components/schemas/BackupPlan'
          description: Specifies the body of a backup plan. Includes a <code>BackupPlanName</code> and one or more sets of <code>Rules</code>.
    GetBackupPlanFromTemplateOutput:
      type: object
      properties:
        BackupPlanDocument:
          $ref: '#/components/schemas/BackupPlan'
          description: 'Returns the body of a backup plan based on the target template, including the name, rules, and backup vault of the plan.'
    GetBackupSelectionOutput:
      type: object
      properties:
        BackupSelection:
          $ref: '#/components/schemas/BackupSelection'
          description: Specifies the body of a request to assign a set of resources to a backup plan.
        SelectionId:
          $ref: '#/components/schemas/string'
          description: Uniquely identifies the body of a request to assign a set of resources to a backup plan.
        BackupPlanId:
          $ref: '#/components/schemas/string'
          description: Uniquely identifies a backup plan.
        CreationDate:
          $ref: '#/components/schemas/timestamp'
          description: 'The date and time a backup selection is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
        CreatorRequestId:
          $ref: '#/components/schemas/string'
          description: A unique string that identifies the request and allows failed requests to be retried without the risk of running the operation twice.
    GetBackupVaultAccessPolicyOutput:
      type: object
      properties:
        BackupVaultName:
          $ref: '#/components/schemas/BackupVaultName'
          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
        BackupVaultArn:
          $ref: '#/components/schemas/ARN'
          description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'
        Policy:
          $ref: '#/components/schemas/IAMPolicy'
          description: The backup vault access policy document in JSON format.
    GetBackupVaultNotificationsOutput:
      type: object
      properties:
        BackupVaultName:
          $ref: '#/components/schemas/BackupVaultName'
          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
        BackupVaultArn:
          $ref: '#/components/schemas/ARN'
          description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'
        SNSTopicArn:
          $ref: '#/components/schemas/ARN'
          description: 'An ARN that uniquely identifies an Amazon Simple Notification Service (Amazon SNS) topic; for example, <code>arn:aws:sns:us-west-2:111122223333:MyTopic</code>.'
        BackupVaultEvents:
          $ref: '#/components/schemas/BackupVaultEvents'
          description: An array of events that indicate the status of jobs to back up resources to the backup vault.
    GetRecoveryPointRestoreMetadataOutput:
      type: object
      properties:
        BackupVaultArn:
          $ref: '#/components/schemas/ARN'
          description: 'An ARN that uniquely identifies a backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'
        RecoveryPointArn:
          $ref: '#/components/schemas/ARN'
          description: 'An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
        RestoreMetadata:
          $ref: '#/components/schemas/Metadata'
          description: The set of metadata key-value pairs that describe the original configuration of the backed-up resource. These values vary depending on the service that is being restored.
    GetSupportedResourceTypesOutput:
      type: object
      properties:
        ResourceTypes:
          $ref: '#/components/schemas/ResourceTypes'
          description: '<p>Contains a string with the supported AWS resource types:</p> <ul> <li> <p> <code>DynamoDB</code> for Amazon DynamoDB</p> </li> <li> <p> <code>EBS</code> for Amazon Elastic Block Store</p> </li> <li> <p> <code>EC2</code> for Amazon Elastic Compute Cloud</p> </li> <li> <p> <code>EFS</code> for Amazon Elastic File System</p> </li> <li> <p> <code>RDS</code> for Amazon Relational Database Service</p> </li> <li> <p> <code>Aurora</code> for Amazon Aurora</p> </li> <li> <p> <code>Storage Gateway</code> for AWS Storage Gateway</p> </li> </ul>'
    ListBackupJobsOutput:
      type: object
      properties:
        BackupJobs:
          $ref: '#/components/schemas/BackupJobsList'
          description: An array of structures containing metadata about your backup jobs returned in JSON format.
        NextToken:
          $ref: '#/components/schemas/string'
          description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
    ListBackupPlanTemplatesOutput:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/string'
          description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
        BackupPlanTemplatesList:
          $ref: '#/components/schemas/BackupPlanTemplatesList'
          description: An array of template list items containing metadata about your saved templates.
    ListBackupPlanVersionsOutput:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/string'
          description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
        BackupPlanVersionsList:
          $ref: '#/components/schemas/BackupPlanVersionsList'
          description: An array of version list items containing metadata about your backup plans.
    ListBackupPlansOutput:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/string'
          description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
        BackupPlansList:
          $ref: '#/components/schemas/BackupPlansList'
          description: An array of backup plan list items containing metadata about your saved backup plans.
    ListBackupSelectionsOutput:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/string'
          description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
        BackupSelectionsList:
          $ref: '#/components/schemas/BackupSelectionsList'
          description: An array of backup selection list items containing metadata about each resource in the list.
    ListBackupVaultsOutput:
      type: object
      properties:
        BackupVaultList:
          $ref: '#/components/schemas/BackupVaultList'
          description: 'An array of backup vault list members containing vault metadata, including Amazon Resource Name (ARN), display name, creation date, number of saved recovery points, and encryption information if the resources saved in the backup vault are encrypted.'
        NextToken:
          $ref: '#/components/schemas/string'
          description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
    ListCopyJobsOutput:
      type: object
      properties:
        CopyJobs:
          $ref: '#/components/schemas/CopyJobsList'
          description: 'An array of structures containing metadata about your copy jobs returned in JSON format. '
        NextToken:
          $ref: '#/components/schemas/string'
          description: 'The next item following a partial list of returned items. For example, if a request is made to return maxResults number of items, NextToken allows you to return more items in your list starting at the location pointed to by the next token. '
    ListProtectedResourcesOutput:
      type: object
      properties:
        Results:
          $ref: '#/components/schemas/ProtectedResourcesList'
          description: 'An array of resources successfully backed up by AWS Backup including the time the resource was saved, an Amazon Resource Name (ARN) of the resource, and a resource type.'
        NextToken:
          $ref: '#/components/schemas/string'
          description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
    ListRecoveryPointsByBackupVaultOutput:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/string'
          description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
        RecoveryPoints:
          $ref: '#/components/schemas/RecoveryPointByBackupVaultList'
          description: An array of objects that contain detailed information about recovery points saved in a backup vault.
    ListRecoveryPointsByResourceOutput:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/string'
          description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
        RecoveryPoints:
          $ref: '#/components/schemas/RecoveryPointByResourceList'
          description: An array of objects that contain detailed information about recovery points of the specified resource type.
    ListRestoreJobsOutput:
      type: object
      properties:
        RestoreJobs:
          $ref: '#/components/schemas/RestoreJobsList'
          description: An array of objects that contain detailed information about jobs to restore saved resources.
        NextToken:
          $ref: '#/components/schemas/string'
          description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
    ListTagsOutput:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/string'
          description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
        Tags:
          $ref: '#/components/schemas/Tags'
          description: 'To help organize your resources, you can assign your own metadata to the resources you create. Each tag is a key-value pair.'
    BackupVaultEvent:
      type: string
      enum:
        - BACKUP_JOB_STARTED
        - BACKUP_JOB_COMPLETED
        - BACKUP_JOB_SUCCESSFUL
        - BACKUP_JOB_FAILED
        - BACKUP_JOB_EXPIRED
        - RESTORE_JOB_STARTED
        - RESTORE_JOB_COMPLETED
        - RESTORE_JOB_SUCCESSFUL
        - RESTORE_JOB_FAILED
        - COPY_JOB_STARTED
        - COPY_JOB_SUCCESSFUL
        - COPY_JOB_FAILED
        - RECOVERY_POINT_MODIFIED
        - BACKUP_PLAN_CREATED
        - BACKUP_PLAN_MODIFIED
    StartBackupJobOutput:
      type: object
      properties:
        BackupJobId:
          $ref: '#/components/schemas/string'
          description: Uniquely identifies a request to AWS Backup to back up a resource.
        RecoveryPointArn:
          $ref: '#/components/schemas/ARN'
          description: 'An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
        CreationDate:
          $ref: '#/components/schemas/timestamp'
          description: 'The date and time that a backup job is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
    Long:
      type: integer
    BackupOptionValue:
      type: string
      pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
    StartCopyJobOutput:
      type: object
      properties:
        CopyJobId:
          $ref: '#/components/schemas/string'
          description: Uniquely identifies a copy job.
        CreationDate:
          $ref: '#/components/schemas/timestamp'
          description: 'The date and time that a copy job is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
    StartRestoreJobOutput:
      type: object
      properties:
        RestoreJobId:
          $ref: '#/components/schemas/RestoreJobId'
          description: Uniquely identifies the job that restores a recovery point.
    MetadataValue:
      type: string
    string:
      type: string
    UpdateBackupPlanOutput:
      type: object
      properties:
        BackupPlanId:
          $ref: '#/components/schemas/string'
          description: Uniquely identifies a backup plan.
        BackupPlanArn:
          $ref: '#/components/schemas/ARN'
          description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup plan; for example, <code>arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50</code>.'
        CreationDate:
          $ref: '#/components/schemas/timestamp'
          description: 'The date and time a backup plan is updated, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
        VersionId:
          $ref: '#/components/schemas/string'
          description: 'Unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1,024 bytes long. Version Ids cannot be edited.'
        AdvancedBackupSettings:
          $ref: '#/components/schemas/AdvancedBackupSettings'
          description: Contains a list of <code>BackupOptions</code> for each resource type.
    GlobalSettingsValue:
      type: string
    UpdateRecoveryPointLifecycleOutput:
      type: object
      properties:
        BackupVaultArn:
          $ref: '#/components/schemas/ARN'
          description: 'An ARN that uniquely identifies a backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'
        RecoveryPointArn:
          $ref: '#/components/schemas/ARN'
          description: 'An Amazon Resource Name (ARN) that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
        Lifecycle:
          $ref: '#/components/schemas/Lifecycle'
          description: '<p>The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. AWS Backup transitions and expires backups automatically according to the lifecycle that you define. </p> <p>Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold. </p> <p>Only Amazon EFS file system backups can be transitioned to cold storage.</p>'
        CalculatedLifecycle:
          $ref: '#/components/schemas/CalculatedLifecycle'
          description: A <code>CalculatedLifecycle</code> object containing <code>DeleteAt</code> and <code>MoveToColdStorageAt</code> timestamps.
    IsEnabled:
      type: boolean
    ARN:
      type: string
    AccountId:
      type: string
      pattern: '^[0-9]{12}$'
    ResourceType:
      type: string
      pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
    BackupOptions:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/BackupOptionValue'
    AdvancedBackupSetting:
      type: object
      properties:
        ResourceType:
          $ref: '#/components/schemas/ResourceType'
          description: '<p>Specifies an object containing resource type and backup options. The only supported resource type is Amazon EC2 instances with Windows VSS. For an CloudFormation example, see the <a href="https://docs.aws.amazon.com/aws-backup/latest/devguide/integrate-cloudformation-with-aws-backup.html">sample CloudFormation template to enable Windows VSS</a> in the <i>AWS Backup User Guide</i>.</p> <p>Valid values: <code>EC2</code>.</p>'
        BackupOptions:
          $ref: '#/components/schemas/BackupOptions'
          description: '<p>Specifies the backup option for a selected resource. This option is only available for Windows VSS backup jobs.</p> <p>Valid values: </p> <p>Set to <code>"WindowsVSS":"enabled"</code> to enable the WindowsVSS backup option and create a VSS Windows backup. </p> <p>Set to <code>"WindowsVSS":"disabled"</code> to create a regular backup. The WindowsVSS option is not enabled by default.</p> <p>If you specify an invalid option, you get an <code>InvalidParameterValueException</code> exception.</p> <p>For more information about Windows VSS backups, see <a href="https://docs.aws.amazon.com/aws-backup/latest/devguide/windows-backups.html">Creating a VSS-Enabled Windows Backup</a>.</p>'
      description: A list of backup options for each resource type.
    BackupVaultName:
      type: string
      pattern: '^[a-zA-Z0-9\-\_]{2,50}$'
    timestamp:
      type: string
      format: date-time
    BackupJobState:
      type: string
      enum:
        - CREATED
        - PENDING
        - RUNNING
        - ABORTING
        - ABORTED
        - COMPLETED
        - FAILED
        - EXPIRED
    RecoveryPointCreator:
      type: object
      properties:
        BackupPlanId:
          $ref: '#/components/schemas/string'
          description: Uniquely identifies a backup plan.
        BackupPlanArn:
          $ref: '#/components/schemas/ARN'
          description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup plan; for example, <code>arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50</code>.'
        BackupPlanVersion:
          $ref: '#/components/schemas/string'
          description: 'Version IDs are unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1,024 bytes long. They cannot be edited.'
        BackupRuleId:
          $ref: '#/components/schemas/string'
          description: Uniquely identifies a rule used to schedule the backup of a selection of resources.
      description: Contains information about the backup plan and rule that AWS Backup used to initiate the recovery point backup.
    BackupJob:
      type: object
      properties:
        AccountId:
          $ref: '#/components/schemas/AccountId'
          description: The account ID that owns the backup job.
        BackupJobId:
          $ref: '#/components/schemas/string'
          description: Uniquely identifies a request to AWS Backup to back up a resource.
        BackupVaultName:
          $ref: '#/components/schemas/BackupVaultName'
          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
        BackupVaultArn:
          $ref: '#/components/schemas/ARN'
          description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'
        RecoveryPointArn:
          $ref: '#/components/schemas/ARN'
          description: 'An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
        ResourceArn:
          $ref: '#/components/schemas/ARN'
          description: An ARN that uniquely identifies a resource. The format of the ARN depends on the resource type.
        CreationDate:
          $ref: '#/components/schemas/timestamp'
          description: 'The date and time a backup job is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
        CompletionDate:
          $ref: '#/components/schemas/timestamp'
          description: 'The date and time a job to create a backup job is completed, in Unix format and Coordinated Universal Time (UTC). The value of <code>CompletionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
        State:
          $ref: '#/components/schemas/BackupJobState'
          description: The current state of a resource recovery point.
        StatusMessage:
          $ref: '#/components/schemas/string'
          description: A detailed message explaining the status of the job to back up a resource.
        PercentDone:
          $ref: '#/components/schemas/string'
          description: Contains an estimated percentage complete of a job at the time the job status was queried.
        BackupSizeInBytes:
          $ref: '#/components/schemas/Long'
          description: 'The size, in bytes, of a backup.'
        IamRoleArn:
          $ref: '#/components/schemas/IAMRoleArn'
          description: 'Specifies the IAM role ARN used to create the target recovery point. IAM roles other than the default role must include either <code>AWSBackup</code> or <code>AwsBackup</code> in the role name. For example, <code>arn:aws:iam::123456789012:role/AWSBackupRDSAccess</code>. Role names without those strings lack permissions to perform backup jobs.'
        CreatedBy:
          $ref: '#/components/schemas/RecoveryPointCreator'
          description: 'Contains identifying information about the creation of a backup job, including the <code>BackupPlanArn</code>, <code>BackupPlanId</code>, <code>BackupPlanVersion</code>, and <code>BackupRuleId</code> of the backup plan used to create it.'
        ExpectedCompletionDate:
          $ref: '#/components/schemas/timestamp'
          description: 'The date and time a job to back up resources is expected to be completed, in Unix format and Coordinated Universal Time (UTC). The value of <code>ExpectedCompletionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
        StartBy:
          $ref: '#/components/schemas/timestamp'
          description: 'Specifies the time in Unix format and Coordinated Universal Time (UTC) when a backup job must be started before it is canceled. The value is calculated by adding the start window to the scheduled time. So if the scheduled time were 6:00 PM and the start window is 2 hours, the <code>StartBy</code> time would be 8:00 PM on the date specified. The value of <code>StartBy</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
        ResourceType:
          $ref: '#/components/schemas/ResourceType'
          description: 'The type of AWS resource to be backed up; for example, an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon Relational Database Service (Amazon RDS) database. For VSS Windows backups, the only supported resource type is Amazon EC2.'
        BytesTransferred:
          $ref: '#/components/schemas/Long'
          description: The size in bytes transferred to a backup vault at the time that the job status was queried.
        BackupOptions:
          $ref: '#/components/schemas/BackupOptions'
          description: '<p>Specifies the backup option for a selected resource. This option is only available for Windows VSS backup jobs.</p> <p>Valid values: Set to <code>"WindowsVSS”:“enabled"</code> to enable WindowsVSS backup option and create a VSS Windows backup. Set to “WindowsVSS”:”disabled” to create a regular backup. If you specify an invalid option, you get an <code>InvalidParameterValueException</code> exception.</p>'
        BackupType:
          $ref: '#/components/schemas/string'
          description: Represents the type of backup for a backup job.
      description: Contains detailed information about a backup job.
    BackupJobsList:
      type: array
      items:
        $ref: '#/components/schemas/BackupJob'
    BackupOptionKey:
      type: string
      pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
    BackupRules:
      type: array
      items:
        $ref: '#/components/schemas/BackupRule'
    BackupPlan:
      type: object
      required:
        - BackupPlanName
        - Rules
      properties:
        BackupPlanName:
          $ref: '#/components/schemas/BackupPlanName'
          description: The display name of a backup plan.
        Rules:
          $ref: '#/components/schemas/BackupRules'
          description: 'An array of <code>BackupRule</code> objects, each of which specifies a scheduled task that is used to back up a selection of resources. '
        AdvancedBackupSettings:
          $ref: '#/components/schemas/AdvancedBackupSettings'
          description: Contains a list of <code>BackupOptions</code> for each resource type.
      description: 'Contains an optional backup plan display name and an array of <code>BackupRule</code> objects, each of which specifies a backup rule. Each rule in a backup plan is a separate scheduled task and can back up a different selection of AWS resources.'
    BackupPlanInput:
      type: object
      required:
        - BackupPlanName
        - Rules
      properties:
        BackupPlanName:
          $ref: '#/components/schemas/BackupPlanName'
          description: The optional display name of a backup plan.
        Rules:
          $ref: '#/components/schemas/BackupRulesInput'
          description: 'An array of <code>BackupRule</code> objects, each of which specifies a scheduled task that is used to back up a selection of resources.'
        AdvancedBackupSettings:
          $ref: '#/components/schemas/AdvancedBackupSettings'
          description: Specifies a list of <code>BackupOptions</code> for each resource type. These settings are only available for Windows VSS backup jobs.
      description: 'Contains an optional backup plan display name and an array of <code>BackupRule</code> objects, each of which specifies a backup rule. Each rule in a backup plan is a separate scheduled task and can back up a different selection of AWS resources. '
    BackupPlanTemplatesListMember:
      type: object
      properties:
        BackupPlanTemplateId:
          $ref: '#/components/schemas/string'
          description: Uniquely identifies a stored backup plan template.
        BackupPlanTemplateName:
          $ref: '#/components/schemas/string'
          description: The optional display name of a backup plan template.
      description: An object specifying metadata associated with a backup plan template.
    BackupPlanTemplatesList:
      type: array
      items:
        $ref: '#/components/schemas/BackupPlanTemplatesListMember'
    BackupPlansListMember:
      type: object
      properties:
        BackupPlanArn:
          $ref: '#/components/schemas/ARN'
          description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup plan; for example, <code>arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50</code>.'
        BackupPlanId:
          $ref: '#/components/schemas/string'
          description: Uniquely identifies a backup plan.
        CreationDate:
          $ref: '#/components/schemas/timestamp'
          description: 'The date and time a resource backup plan is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
        DeletionDate:
          $ref: '#/components/schemas/timestamp'
          description: 'The date and time a backup plan is deleted, in Unix format and Coordinated Universal Time (UTC). The value of <code>DeletionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
        VersionId:
          $ref: '#/components/schemas/string'
          description: 'Unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1,024 bytes long. Version IDs cannot be edited.'
        BackupPlanName:
          $ref: '#/components/schemas/BackupPlanName'
          description: The display name of a saved backup plan.
        CreatorRequestId:
          $ref: '#/components/schemas/string'
          description: A unique string that identifies the request and allows failed requests to be retried without the risk of running the operation twice.
        LastExecutionDate:
          $ref: '#/components/schemas/timestamp'
          description: 'The last time a job to back up resources was run with this rule. A date and time, in Unix format and Coordinated Universal Time (UTC). The value of <code>LastExecutionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
        AdvancedBackupSettings:
          $ref: '#/components/schemas/AdvancedBackupSettings'
          description: Contains a list of <code>BackupOptions</code> for a resource type.
      description: Contains metadata about a backup plan.
    BackupPlanVersionsList:
      type: array
      items:
        $ref: '#/components/schemas/BackupPlansListMember'
    BackupPlansList:
      type: array
      items:
        $ref: '#/components/schemas/BackupPlansListMember'
    BackupRuleName:
      type: string
      pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
    CronExpression:
      type: string
    WindowMinutes:
      type: integer
    Lifecycle:
      type: object
      properties:
        MoveToColdStorageAfterDays:
          $ref: '#/components/schemas/Long'
          description: Specifies the number of days after creation that a recovery point is moved to cold storage.
        DeleteAfterDays:
          $ref: '#/components/schemas/Long'
          description: Specifies the number of days after creation that a recovery point is deleted. Must be greater than 90 days plus <code>MoveToColdStorageAfterDays</code>.
      description: '<p>Contains an array of <code>Transition</code> objects specifying how long in days before a recovery point transitions to cold storage or is deleted.</p> <p>Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, on the console, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold.</p> <p>Only Amazon EFS file system backups can be transitioned to cold storage.</p>'
    Tags:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    CopyActions:
      type: array
      items:
        $ref: '#/components/schemas/CopyAction'
    Boolean:
      type: boolean
    BackupRule:
      type: object
      required:
        - RuleName
        - TargetBackupVaultName
      properties:
        RuleName:
          $ref: '#/components/schemas/BackupRuleName'
          description: An optional display name for a backup rule.
        TargetBackupVaultName:
          $ref: '#/components/schemas/BackupVaultName'
          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
        ScheduleExpression:
          $ref: '#/components/schemas/CronExpression'
          description: 'A CRON expression specifying when AWS Backup initiates a backup job. For more information about cron expressions, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html">Schedule Expressions for Rules</a> in the <i>Amazon CloudWatch Events User Guide.</i>. Prior to specifying a value for this parameter, we recommend testing your cron expression using one of the many available cron generator and testing tools.'
        StartWindowMinutes:
          $ref: '#/components/schemas/WindowMinutes'
          description: A value in minutes after a backup is scheduled before a job will be canceled if it doesn't start successfully. This value is optional.
        CompletionWindowMinutes:
          $ref: '#/components/schemas/WindowMinutes'
          description: A value in minutes after a backup job is successfully started before it must be completed or it will be canceled by AWS Backup. This value is optional.
        Lifecycle:
          $ref: '#/components/schemas/Lifecycle'
          description: '<p>The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. AWS Backup transitions and expires backups automatically according to the lifecycle that you define. </p> <p>Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold. </p> <p>Only Amazon EFS file system backups can be transitioned to cold storage.</p>'
        RecoveryPointTags:
          $ref: '#/components/schemas/Tags'
          description: An array of key-value pair strings that are assigned to resources that are associated with this rule when restored from backup.
        RuleId:
          $ref: '#/components/schemas/string'
          description: Uniquely identifies a rule that is used to schedule the backup of a selection of resources.
        CopyActions:
          $ref: '#/components/schemas/CopyActions'
          description: 'An array of <code>CopyAction</code> objects, which contains the details of the copy operation.'
        EnableContinuousBackup:
          $ref: '#/components/schemas/Boolean'
          description: Specifies whether AWS Backup creates continuous backups. True causes AWS Backup to create continuous backups capable of point-in-time restore (PITR). False (or not specified) causes AWS Backup to create snapshot backups.
      description: Specifies a scheduled task used to back up a selection of resources.
    BackupRuleInput:
      type: object
      required:
        - RuleName
        - TargetBackupVaultName
      properties:
        RuleName:
          $ref: '#/components/schemas/BackupRuleName'
          description: An optional display name for a backup rule.
        TargetBackupVaultName:
          $ref: '#/components/schemas/BackupVaultName'
          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
        ScheduleExpression:
          $ref: '#/components/schemas/CronExpression'
          description: A CRON expression specifying when AWS Backup initiates a backup job.
        StartWindowMinutes:
          $ref: '#/components/schemas/WindowMinutes'
          description: A value in minutes after a backup is scheduled before a job will be canceled if it doesn't start successfully. This value is optional.
        CompletionWindowMinutes:
          $ref: '#/components/schemas/WindowMinutes'
          description: A value in minutes after a backup job is successfully started before it must be completed or it will be canceled by AWS Backup. This value is optional.
        Lifecycle:
          $ref: '#/components/schemas/Lifecycle'
          description: '<p>The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. AWS Backup will transition and expire backups automatically according to the lifecycle that you define. </p> <p>Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold. </p> <p>Only Amazon EFS file system backups can be transitioned to cold storage.</p>'
        RecoveryPointTags:
          $ref: '#/components/schemas/Tags'
          description: 'To help organize your resources, you can assign your own metadata to the resources that you create. Each tag is a key-value pair.'
        CopyActions:
          $ref: '#/components/schemas/CopyActions'
          description: 'An array of <code>CopyAction</code> objects, which contains the details of the copy operation.'
        EnableContinuousBackup:
          $ref: '#/components/schemas/Boolean'
          description: Specifies whether AWS Backup creates continuous backups. True causes AWS Backup to create continuous backups capable of point-in-time restore (PITR). False (or not specified) causes AWS Backup to create snapshot backups.
      description: Specifies a scheduled task used to back up a selection of resources.
    BackupSelection:
      type: object
      required:
        - SelectionName
        - IamRoleArn
      properties:
        SelectionName:
          $ref: '#/components/schemas/BackupSelectionName'
          description: The display name of a resource selection document.
        IamRoleArn:
          $ref: '#/components/schemas/IAMRoleArn'
          description: 'The ARN of the IAM role that AWS Backup uses to authenticate when backing up the target resource; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'
        Resources:
          $ref: '#/components/schemas/ResourceArns'
          description: An array of strings that contain Amazon Resource Names (ARNs) of resources to assign to a backup plan.
        ListOfTags:
          $ref: '#/components/schemas/ListOfTags'
          description: 'An array of conditions used to specify a set of resources to assign to a backup plan; for example, <code>"StringEquals": {"ec2:ResourceTag/Department": "accounting"</code>. Assigns the backup plan to every resource with at least one matching tag.'
      description: Used to specify a set of resources to a backup plan.
    BackupSelectionsListMember:
      type: object
      properties:
        SelectionId:
          $ref: '#/components/schemas/string'
          description: Uniquely identifies a request to assign a set of resources to a backup plan.
        SelectionName:
          $ref: '#/components/schemas/BackupSelectionName'
          description: The display name of a resource selection document.
        BackupPlanId:
          $ref: '#/components/schemas/string'
          description: Uniquely identifies a backup plan.
        CreationDate:
          $ref: '#/components/schemas/timestamp'
          description: 'The date and time a backup plan is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
        CreatorRequestId:
          $ref: '#/components/schemas/string'
          description: A unique string that identifies the request and allows failed requests to be retried without the risk of running the operation twice.
        IamRoleArn:
          $ref: '#/components/schemas/IAMRoleArn'
          description: 'Specifies the IAM role Amazon Resource Name (ARN) to create the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'
      description: Contains metadata about a <code>BackupSelection</code> object.
    BackupSelectionsList:
      type: array
      items:
        $ref: '#/components/schemas/BackupSelectionsListMember'
    BackupVaultEvents:
      type: array
      items:
        $ref: '#/components/schemas/BackupVaultEvent'
    BackupVaultListMember:
      type: object
      properties:
        BackupVaultName:
          $ref: '#/components/schemas/BackupVaultName'
          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
        BackupVaultArn:
          $ref: '#/components/schemas/ARN'
          description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'
        CreationDate:
          $ref: '#/components/schemas/timestamp'
          description: 'The date and time a resource backup is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
        EncryptionKeyArn:
          $ref: '#/components/schemas/ARN'
          description: 'The server-side encryption key that is used to protect your backups; for example, <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.'
        CreatorRequestId:
          $ref: '#/components/schemas/string'
          description: A unique string that identifies the request and allows failed requests to be retried without the risk of running the operation twice.
        NumberOfRecoveryPoints:
          $ref: '#/components/schemas/long'
          description: The number of recovery points that are stored in a backup vault.
      description: Contains metadata about a backup vault.
    BackupVaultList:
      type: array
      items:
        $ref: '#/components/schemas/BackupVaultListMember'
    long:
      type: integer
    CalculatedLifecycle:
      type: object
      properties:
        MoveToColdStorageAt:
          $ref: '#/components/schemas/timestamp'
          description: A timestamp that specifies when to transition a recovery point to cold storage.
        DeleteAt:
          $ref: '#/components/schemas/timestamp'
          description: A timestamp that specifies when to delete a recovery point.
      description: '<p>Contains <code>DeleteAt</code> and <code>MoveToColdStorageAt</code> timestamps, which are used to specify a lifecycle for a recovery point.</p> <p>The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. AWS Backup transitions and expires backups automatically according to the lifecycle that you define.</p> <p>Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold.</p> <p>Only Amazon EFS file system backups can be transitioned to cold storage.</p>'
    ConditionType:
      type: string
      enum:
        - STRINGEQUALS
    ConditionKey:
      type: string
    ConditionValue:
      type: string
    Condition:
      type: object
      required:
        - ConditionType
        - ConditionKey
        - ConditionValue
      properties:
        ConditionType:
          $ref: '#/components/schemas/ConditionType'
          description: 'An operation, such as <code>StringEquals</code>, that is applied to a key-value pair used to filter resources in a selection.'
        ConditionKey:
          $ref: '#/components/schemas/ConditionKey'
          description: 'The key in a key-value pair. For example, in <code>"ec2:ResourceTag/Department": "accounting"</code>, <code>"ec2:ResourceTag/Department"</code> is the key.'
        ConditionValue:
          $ref: '#/components/schemas/ConditionValue'
          description: 'The value in a key-value pair. For example, in <code>"ec2:ResourceTag/Department": "accounting"</code>, <code>"accounting"</code> is the value.'
      description: 'Contains an array of triplets made up of a condition type (such as <code>StringEquals</code>), a key, and a value. Conditions are used to filter resources in a selection that is assigned to a backup plan.'
    CopyAction:
      type: object
      required:
        - DestinationBackupVaultArn
      properties:
        Lifecycle:
          $ref: '#/components/schemas/Lifecycle'
        DestinationBackupVaultArn:
          $ref: '#/components/schemas/ARN'
          description: 'An Amazon Resource Name (ARN) that uniquely identifies the destination backup vault for the copied backup. For example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'
      description: The details of the copy operation.
    CopyJobState:
      type: string
      enum:
        - CREATED
        - RUNNING
        - COMPLETED
        - FAILED
    CopyJob:
      type: object
      properties:
        AccountId:
          $ref: '#/components/schemas/AccountId'
          description: The account ID that owns the copy job.
        CopyJobId:
          $ref: '#/components/schemas/string'
          description: Uniquely identifies a copy job.
        SourceBackupVaultArn:
          $ref: '#/components/schemas/ARN'
          description: 'An Amazon Resource Name (ARN) that uniquely identifies a source copy vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>. '
        SourceRecoveryPointArn:
          $ref: '#/components/schemas/ARN'
          description: 'An ARN that uniquely identifies a source recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
        DestinationBackupVaultArn:
          $ref: '#/components/schemas/ARN'
          description: 'An Amazon Resource Name (ARN) that uniquely identifies a destination copy vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'
        DestinationRecoveryPointArn:
          $ref: '#/components/schemas/ARN'
          description: 'An ARN that uniquely identifies a destination recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
        ResourceArn:
          $ref: '#/components/schemas/ARN'
          description: 'The AWS resource to be copied; for example, an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon Relational Database Service (Amazon RDS) database.'
        CreationDate:
          $ref: '#/components/schemas/timestamp'
          description: 'The date and time a copy job is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
        CompletionDate:
          $ref: '#/components/schemas/timestamp'
          description: 'The date and time a copy job is completed, in Unix format and Coordinated Universal Time (UTC). The value of <code>CompletionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
        State:
          $ref: '#/components/schemas/CopyJobState'
          description: The current state of a copy job.
        StatusMessage:
          $ref: '#/components/schemas/string'
          description: A detailed message explaining the status of the job to copy a resource.
        BackupSizeInBytes:
          $ref: '#/components/schemas/Long'
          description: 'The size, in bytes, of a copy job.'
        IamRoleArn:
          $ref: '#/components/schemas/IAMRoleArn'
          description: 'Specifies the IAM role ARN used to copy the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'
        CreatedBy:
          $ref: '#/components/schemas/RecoveryPointCreator'
        ResourceType:
          $ref: '#/components/schemas/ResourceType'
          description: 'The type of AWS resource to be copied; for example, an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon Relational Database Service (Amazon RDS) database.'
      description: Contains detailed information about a copy job.
    CopyJobsList:
      type: array
      items:
        $ref: '#/components/schemas/CopyJob'
    CreateBackupPlanInput:
      type: object
      required:
        - BackupPlan
      title: CreateBackupPlanInput
      properties:
        BackupPlan:
          $ref: '#/components/schemas/BackupPlanInput'
          description: Specifies the body of a backup plan. Includes a <code>BackupPlanName</code> and one or more sets of <code>Rules</code>.
        BackupPlanTags:
          $ref: '#/components/schemas/Tags'
          description: 'To help organize your resources, you can assign your own metadata to the resources that you create. Each tag is a key-value pair. The specified tags are assigned to all backups created with this plan.'
        CreatorRequestId:
          $ref: '#/components/schemas/string'
          description: 'Identifies the request and allows failed requests to be retried without the risk of running the operation twice. If the request includes a <code>CreatorRequestId</code> that matches an existing backup plan, that plan is returned. This parameter is optional.'
    CreateBackupSelectionInput:
      type: object
      required:
        - BackupSelection
      title: CreateBackupSelectionInput
      properties:
        BackupSelection:
          $ref: '#/components/schemas/BackupSelection'
          description: Specifies the body of a request to assign a set of resources to a backup plan.
        CreatorRequestId:
          $ref: '#/components/schemas/string'
          description: A unique string that identifies the request and allows failed requests to be retried without the risk of running the operation twice.
    CreateBackupVaultInput:
      type: object
      title: CreateBackupVaultInput
      properties:
        BackupVaultTags:
          $ref: '#/components/schemas/Tags'
          description: Metadata that you can assign to help organize the resources that you create. Each tag is a key-value pair.
        EncryptionKeyArn:
          $ref: '#/components/schemas/ARN'
          description: 'The server-side encryption key that is used to protect your backups; for example, <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.'
        CreatorRequestId:
          $ref: '#/components/schemas/string'
          description: A unique string that identifies the request and allows failed requests to be retried without the risk of running the operation twice.
    DeleteBackupPlanInput:
      type: object
      title: DeleteBackupPlanInput
      properties: {}
    DeleteBackupSelectionInput:
      type: object
      title: DeleteBackupSelectionInput
      properties: {}
    DeleteBackupVaultAccessPolicyInput:
      type: object
      title: DeleteBackupVaultAccessPolicyInput
      properties: {}
    DeleteBackupVaultInput:
      type: object
      title: DeleteBackupVaultInput
      properties: {}
    DeleteBackupVaultNotificationsInput:
      type: object
      title: DeleteBackupVaultNotificationsInput
      properties: {}
    DeleteRecoveryPointInput:
      type: object
      title: DeleteRecoveryPointInput
      properties: {}
    DescribeBackupJobInput:
      type: object
      title: DescribeBackupJobInput
      properties: {}
    DescribeBackupVaultInput:
      type: object
      title: DescribeBackupVaultInput
      properties: {}
    DescribeCopyJobInput:
      type: object
      title: DescribeCopyJobInput
      properties: {}
    DescribeGlobalSettingsInput:
      type: object
      title: DescribeGlobalSettingsInput
      properties: {}
    GlobalSettings:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/GlobalSettingsValue'
    DescribeProtectedResourceInput:
      type: object
      title: DescribeProtectedResourceInput
      properties: {}
    DescribeRecoveryPointInput:
      type: object
      title: DescribeRecoveryPointInput
      properties: {}
    RecoveryPointStatus:
      type: string
      enum:
        - COMPLETED
        - PARTIAL
        - DELETING
        - EXPIRED
    boolean:
      type: boolean
    StorageClass:
      type: string
      enum:
        - WARM
        - COLD
        - DELETED
    DescribeRegionSettingsInput:
      type: object
      title: DescribeRegionSettingsInput
      properties: {}
    ResourceTypeOptInPreference:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/IsEnabled'
    RestoreJobId:
      type: string
    DescribeRestoreJobInput:
      type: object
      title: DescribeRestoreJobInput
      properties: {}
    RestoreJobStatus:
      type: string
      enum:
        - PENDING
        - RUNNING
        - COMPLETED
        - ABORTED
        - FAILED
    DisassociateRecoveryPointInput:
      type: object
      title: DisassociateRecoveryPointInput
      properties: {}
    ExportBackupPlanTemplateInput:
      type: object
      title: ExportBackupPlanTemplateInput
      properties: {}
    GetBackupPlanFromJSONInput:
      type: object
      required:
        - BackupPlanTemplateJson
      title: GetBackupPlanFromJSONInput
      properties:
        BackupPlanTemplateJson:
          $ref: '#/components/schemas/string'
          description: A customer-supplied backup plan document in JSON format.
    GetBackupPlanFromTemplateInput:
      type: object
      title: GetBackupPlanFromTemplateInput
      properties: {}
    GetBackupPlanInput:
      type: object
      title: GetBackupPlanInput
      properties: {}
    GetBackupSelectionInput:
      type: object
      title: GetBackupSelectionInput
      properties: {}
    GetBackupVaultAccessPolicyInput:
      type: object
      title: GetBackupVaultAccessPolicyInput
      properties: {}
    IAMPolicy:
      type: string
    GetBackupVaultNotificationsInput:
      type: object
      title: GetBackupVaultNotificationsInput
      properties: {}
    GetRecoveryPointRestoreMetadataInput:
      type: object
      title: GetRecoveryPointRestoreMetadataInput
      properties: {}
    Metadata:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/MetadataValue'
    ResourceTypes:
      type: array
      items:
        $ref: '#/components/schemas/ResourceType'
    GlobalSettingsName:
      type: string
    MaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    ListBackupJobsInput:
      type: object
      title: ListBackupJobsInput
      properties: {}
    ListBackupPlanTemplatesInput:
      type: object
      title: ListBackupPlanTemplatesInput
      properties: {}
    ListBackupPlanVersionsInput:
      type: object
      title: ListBackupPlanVersionsInput
      properties: {}
    ListBackupPlansInput:
      type: object
      title: ListBackupPlansInput
      properties: {}
    ListBackupSelectionsInput:
      type: object
      title: ListBackupSelectionsInput
      properties: {}
    ListBackupVaultsInput:
      type: object
      title: ListBackupVaultsInput
      properties: {}
    ListCopyJobsInput:
      type: object
      title: ListCopyJobsInput
      properties: {}
    ListProtectedResourcesInput:
      type: object
      title: ListProtectedResourcesInput
      properties: {}
    ProtectedResourcesList:
      type: array
      items:
        $ref: '#/components/schemas/ProtectedResource'
    ListRecoveryPointsByBackupVaultInput:
      type: object
      title: ListRecoveryPointsByBackupVaultInput
      properties: {}
    RecoveryPointByBackupVaultList:
      type: array
      items:
        $ref: '#/components/schemas/RecoveryPointByBackupVault'
    ListRecoveryPointsByResourceInput:
      type: object
      title: ListRecoveryPointsByResourceInput
      properties: {}
    RecoveryPointByResourceList:
      type: array
      items:
        $ref: '#/components/schemas/RecoveryPointByResource'
    ListRestoreJobsInput:
      type: object
      title: ListRestoreJobsInput
      properties: {}
    RestoreJobsList:
      type: array
      items:
        $ref: '#/components/schemas/RestoreJobsListMember'
    ListTagsInput:
      type: object
      title: ListTagsInput
      properties: {}
    MetadataKey:
      type: string
    ProtectedResource:
      type: object
      properties:
        ResourceArn:
          $ref: '#/components/schemas/ARN'
          description: An Amazon Resource Name (ARN) that uniquely identifies a resource. The format of the ARN depends on the resource type.
        ResourceType:
          $ref: '#/components/schemas/ResourceType'
          description: 'The type of AWS resource; for example, an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon Relational Database Service (Amazon RDS) database. For VSS Windows backups, the only supported resource type is Amazon EC2.'
        LastBackupTime:
          $ref: '#/components/schemas/timestamp'
          description: 'The date and time a resource was last backed up, in Unix format and Coordinated Universal Time (UTC). The value of <code>LastBackupTime</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      description: A structure that contains information about a backed-up resource.
    PutBackupVaultAccessPolicyInput:
      type: object
      title: PutBackupVaultAccessPolicyInput
      properties:
        Policy:
          $ref: '#/components/schemas/IAMPolicy'
          description: The backup vault access policy document in JSON format.
    PutBackupVaultNotificationsInput:
      type: object
      required:
        - SNSTopicArn
        - BackupVaultEvents
      title: PutBackupVaultNotificationsInput
      properties:
        SNSTopicArn:
          $ref: '#/components/schemas/ARN'
          description: 'The Amazon Resource Name (ARN) that specifies the topic for a backup vault’s events; for example, <code>arn:aws:sns:us-west-2:111122223333:MyVaultTopic</code>.'
        BackupVaultEvents:
          $ref: '#/components/schemas/BackupVaultEvents'
          description: An array of events that indicate the status of jobs to back up resources to the backup vault.
    RecoveryPointByBackupVault:
      type: object
      properties:
        RecoveryPointArn:
          $ref: '#/components/schemas/ARN'
          description: 'An Amazon Resource Name (ARN) that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
        BackupVaultName:
          $ref: '#/components/schemas/BackupVaultName'
          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
        BackupVaultArn:
          $ref: '#/components/schemas/ARN'
          description: 'An ARN that uniquely identifies a backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'
        SourceBackupVaultArn:
          $ref: '#/components/schemas/ARN'
          description: The backup vault where the recovery point was originally copied from. If the recovery point is restored to the same account this value will be <code>null</code>.
        ResourceArn:
          $ref: '#/components/schemas/ARN'
          description: An ARN that uniquely identifies a resource. The format of the ARN depends on the resource type.
        ResourceType:
          $ref: '#/components/schemas/ResourceType'
          description: 'The type of AWS resource saved as a recovery point; for example, an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon Relational Database Service (Amazon RDS) database. For VSS Windows backups, the only supported resource type is Amazon EC2.'
        CreatedBy:
          $ref: '#/components/schemas/RecoveryPointCreator'
          description: 'Contains identifying information about the creation of a recovery point, including the <code>BackupPlanArn</code>, <code>BackupPlanId</code>, <code>BackupPlanVersion</code>, and <code>BackupRuleId</code> of the backup plan that is used to create it.'
        IamRoleArn:
          $ref: '#/components/schemas/IAMRoleArn'
          description: 'Specifies the IAM role ARN used to create the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'
        Status:
          $ref: '#/components/schemas/RecoveryPointStatus'
          description: A status code specifying the state of the recovery point.
        CreationDate:
          $ref: '#/components/schemas/timestamp'
          description: 'The date and time a recovery point is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
        CompletionDate:
          $ref: '#/components/schemas/timestamp'
          description: 'The date and time a job to restore a recovery point is completed, in Unix format and Coordinated Universal Time (UTC). The value of <code>CompletionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
        BackupSizeInBytes:
          $ref: '#/components/schemas/Long'
          description: 'The size, in bytes, of a backup.'
        CalculatedLifecycle:
          $ref: '#/components/schemas/CalculatedLifecycle'
          description: A <code>CalculatedLifecycle</code> object containing <code>DeleteAt</code> and <code>MoveToColdStorageAt</code> timestamps.
        Lifecycle:
          $ref: '#/components/schemas/Lifecycle'
          description: '<p>The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. AWS Backup transitions and expires backups automatically according to the lifecycle that you define. </p> <p>Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold. </p> <p>Only Amazon EFS file system backups can be transitioned to cold storage.</p>'
        EncryptionKeyArn:
          $ref: '#/components/schemas/ARN'
          description: 'The server-side encryption key that is used to protect your backups; for example, <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.'
        IsEncrypted:
          $ref: '#/components/schemas/boolean'
          description: 'A Boolean value that is returned as <code>TRUE</code> if the specified recovery point is encrypted, or <code>FALSE</code> if the recovery point is not encrypted.'
        LastRestoreTime:
          $ref: '#/components/schemas/timestamp'
          description: 'The date and time a recovery point was last restored, in Unix format and Coordinated Universal Time (UTC). The value of <code>LastRestoreTime</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      description: Contains detailed information about the recovery points stored in a backup vault.
    RecoveryPointByResource:
      type: object
      properties:
        RecoveryPointArn:
          $ref: '#/components/schemas/ARN'
          description: 'An Amazon Resource Name (ARN) that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
        CreationDate:
          $ref: '#/components/schemas/timestamp'
          description: 'The date and time a recovery point is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
        Status:
          $ref: '#/components/schemas/RecoveryPointStatus'
          description: A status code specifying the state of the recovery point.
        EncryptionKeyArn:
          $ref: '#/components/schemas/ARN'
          description: 'The server-side encryption key that is used to protect your backups; for example, <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.'
        BackupSizeBytes:
          $ref: '#/components/schemas/Long'
          description: 'The size, in bytes, of a backup.'
        BackupVaultName:
          $ref: '#/components/schemas/BackupVaultName'
          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
      description: Contains detailed information about a saved recovery point.
    RestoreJobsListMember:
      type: object
      properties:
        AccountId:
          $ref: '#/components/schemas/AccountId'
          description: The account ID that owns the restore job.
        RestoreJobId:
          $ref: '#/components/schemas/string'
          description: Uniquely identifies the job that restores a recovery point.
        RecoveryPointArn:
          $ref: '#/components/schemas/ARN'
          description: 'An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
        CreationDate:
          $ref: '#/components/schemas/timestamp'
          description: 'The date and time a restore job is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
        CompletionDate:
          $ref: '#/components/schemas/timestamp'
          description: 'The date and time a job to restore a recovery point is completed, in Unix format and Coordinated Universal Time (UTC). The value of <code>CompletionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
        Status:
          $ref: '#/components/schemas/RestoreJobStatus'
          description: A status code specifying the state of the job initiated by AWS Backup to restore a recovery point.
        StatusMessage:
          $ref: '#/components/schemas/string'
          description: A detailed message explaining the status of the job to restore a recovery point.
        PercentDone:
          $ref: '#/components/schemas/string'
          description: Contains an estimated percentage complete of a job at the time the job status was queried.
        BackupSizeInBytes:
          $ref: '#/components/schemas/Long'
          description: 'The size, in bytes, of the restored resource.'
        IamRoleArn:
          $ref: '#/components/schemas/IAMRoleArn'
          description: 'Specifies the IAM role ARN used to create the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'
        ExpectedCompletionTimeMinutes:
          $ref: '#/components/schemas/Long'
          description: The amount of time in minutes that a job restoring a recovery point is expected to take.
        CreatedResourceArn:
          $ref: '#/components/schemas/ARN'
          description: An Amazon Resource Name (ARN) that uniquely identifies a resource. The format of the ARN depends on the resource type.
        ResourceType:
          $ref: '#/components/schemas/ResourceType'
          description: 'The resource type of the listed restore jobs; for example, an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon Relational Database Service (Amazon RDS) database. For VSS Windows backups, the only supported resource type is Amazon EC2.'
      description: Contains metadata about a restore job.
    StartBackupJobInput:
      type: object
      required:
        - BackupVaultName
        - ResourceArn
        - IamRoleArn
      title: StartBackupJobInput
      properties:
        BackupVaultName:
          $ref: '#/components/schemas/BackupVaultName'
          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
        ResourceArn:
          $ref: '#/components/schemas/ARN'
          description: An Amazon Resource Name (ARN) that uniquely identifies a resource. The format of the ARN depends on the resource type.
        IamRoleArn:
          $ref: '#/components/schemas/IAMRoleArn'
          description: 'Specifies the IAM role ARN used to create the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'
        IdempotencyToken:
          $ref: '#/components/schemas/string'
          description: A customer chosen string that can be used to distinguish between calls to <code>StartBackupJob</code>.
        StartWindowMinutes:
          $ref: '#/components/schemas/WindowMinutes'
          description: 'A value in minutes after a backup is scheduled before a job will be canceled if it doesn''t start successfully. This value is optional, and the default is 8 hours.'
        CompleteWindowMinutes:
          $ref: '#/components/schemas/WindowMinutes'
          description: 'A value in minutes during which a successfully started backup must complete, or else AWS Backup will cancel the job. This value is optional. This value begins counting down from when the backup was scheduled. It does not add additional time for <code>StartWindowMinutes</code>, or if the backup started later than scheduled.'
        Lifecycle:
          $ref: '#/components/schemas/Lifecycle'
          description: '<p>The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. AWS Backup will transition and expire backups automatically according to the lifecycle that you define. </p> <p>Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold. </p> <p>Only Amazon EFS file system backups can be transitioned to cold storage.</p>'
        RecoveryPointTags:
          $ref: '#/components/schemas/Tags'
          description: 'To help organize your resources, you can assign your own metadata to the resources that you create. Each tag is a key-value pair.'
        BackupOptions:
          $ref: '#/components/schemas/BackupOptions'
          description: '<p>Specifies the backup option for a selected resource. This option is only available for Windows VSS backup jobs.</p> <p>Valid values: Set to <code>"WindowsVSS”:“enabled"</code> to enable WindowsVSS backup option and create a VSS Windows backup. Set to “WindowsVSS”:”disabled” to create a regular backup. The WindowsVSS option is not enabled by default.</p>'
    StartCopyJobInput:
      type: object
      required:
        - RecoveryPointArn
        - SourceBackupVaultName
        - DestinationBackupVaultArn
        - IamRoleArn
      title: StartCopyJobInput
      properties:
        RecoveryPointArn:
          $ref: '#/components/schemas/ARN'
          description: 'An ARN that uniquely identifies a recovery point to use for the copy job; for example, arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45. '
        SourceBackupVaultName:
          $ref: '#/components/schemas/BackupVaultName'
          description: 'The name of a logical source container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
        DestinationBackupVaultArn:
          $ref: '#/components/schemas/ARN'
          description: 'An Amazon Resource Name (ARN) that uniquely identifies a destination backup vault to copy to; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'
        IamRoleArn:
          $ref: '#/components/schemas/IAMRoleArn'
          description: 'Specifies the IAM role ARN used to copy the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'
        IdempotencyToken:
          $ref: '#/components/schemas/string'
          description: A customer chosen string that can be used to distinguish between calls to <code>StartCopyJob</code>.
        Lifecycle:
          $ref: '#/components/schemas/Lifecycle'
    StartRestoreJobInput:
      type: object
      required:
        - RecoveryPointArn
        - Metadata
        - IamRoleArn
      title: StartRestoreJobInput
      properties:
        RecoveryPointArn:
          $ref: '#/components/schemas/ARN'
          description: 'An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
        Metadata:
          $ref: '#/components/schemas/Metadata'
          description: '<p>A set of metadata key-value pairs. Contains information, such as a resource name, required to restore a recovery point.</p> <p> You can get configuration metadata about a resource at the time it was backed up by calling <code>GetRecoveryPointRestoreMetadata</code>. However, values in addition to those provided by <code>GetRecoveryPointRestoreMetadata</code> might be required to restore a resource. For example, you might need to provide a new resource name if the original already exists.</p> <p>You need to specify specific metadata to restore an Amazon Elastic File System (Amazon EFS) instance:</p> <ul> <li> <p> <code>file-system-id</code>: The ID of the Amazon EFS file system that is backed up by AWS Backup. Returned in <code>GetRecoveryPointRestoreMetadata</code>.</p> </li> <li> <p> <code>Encrypted</code>: A Boolean value that, if true, specifies that the file system is encrypted. If <code>KmsKeyId</code> is specified, <code>Encrypted</code> must be set to <code>true</code>.</p> </li> <li> <p> <code>KmsKeyId</code>: Specifies the AWS KMS key that is used to encrypt the restored file system. You can specify a key from another AWS account provided that key it is properly shared with your account via AWS KMS.</p> </li> <li> <p> <code>PerformanceMode</code>: Specifies the throughput mode of the file system.</p> </li> <li> <p> <code>CreationToken</code>: A user-supplied value that ensures the uniqueness (idempotency) of the request.</p> </li> <li> <p> <code>newFileSystem</code>: A Boolean value that, if true, specifies that the recovery point is restored to a new Amazon EFS file system.</p> </li> <li> <p> <code>ItemsToRestore </code>: An array of one to five strings where each string is a file path. Use <code>ItemsToRestore</code> to restore specific files or directories rather than the entire file system. This parameter is optional. For example, <code>"itemsToRestore":"[\"/my.test\"]"</code>.</p> </li> </ul>'
        IamRoleArn:
          $ref: '#/components/schemas/IAMRoleArn'
          description: 'The Amazon Resource Name (ARN) of the IAM role that AWS Backup uses to create the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'
        IdempotencyToken:
          $ref: '#/components/schemas/string'
          description: A customer chosen string that can be used to distinguish between calls to <code>StartRestoreJob</code>.
        ResourceType:
          $ref: '#/components/schemas/ResourceType'
          description: '<p>Starts a job to restore a recovery point for one of the following resources:</p> <ul> <li> <p> <code>DynamoDB</code> for Amazon DynamoDB</p> </li> <li> <p> <code>EBS</code> for Amazon Elastic Block Store</p> </li> <li> <p> <code>EC2</code> for Amazon Elastic Compute Cloud</p> </li> <li> <p> <code>EFS</code> for Amazon Elastic File System</p> </li> <li> <p> <code>RDS</code> for Amazon Relational Database Service</p> </li> <li> <p> <code>Aurora</code> for Amazon Aurora</p> </li> <li> <p> <code>Storage Gateway</code> for AWS Storage Gateway</p> </li> </ul>'
    StopBackupJobInput:
      type: object
      title: StopBackupJobInput
      properties: {}
    TagKey:
      type: string
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/string'
    TagResourceInput:
      type: object
      required:
        - Tags
      title: TagResourceInput
      properties:
        Tags:
          $ref: '#/components/schemas/Tags'
          description: Key-value pairs that are used to help organize your resources. You can assign your own metadata to the resources you create.
    UntagResourceInput:
      type: object
      required:
        - TagKeyList
      title: UntagResourceInput
      properties:
        TagKeyList:
          $ref: '#/components/schemas/TagKeyList'
          description: A list of keys to identify which key-value tags to remove from a resource.
    UpdateBackupPlanInput:
      type: object
      required:
        - BackupPlan
      title: UpdateBackupPlanInput
      properties:
        BackupPlan:
          $ref: '#/components/schemas/BackupPlanInput'
          description: Specifies the body of a backup plan. Includes a <code>BackupPlanName</code> and one or more sets of <code>Rules</code>.
    UpdateGlobalSettingsInput:
      type: object
      title: UpdateGlobalSettingsInput
      properties:
        GlobalSettings:
          $ref: '#/components/schemas/GlobalSettings'
          description: A list of resources along with the opt-in preferences for the account.
    UpdateRecoveryPointLifecycleInput:
      type: object
      title: UpdateRecoveryPointLifecycleInput
      properties:
        Lifecycle:
          $ref: '#/components/schemas/Lifecycle'
          description: '<p>The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. AWS Backup transitions and expires backups automatically according to the lifecycle that you define. </p> <p>Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold. </p>'
    UpdateRegionSettingsInput:
      type: object
      title: UpdateRegionSettingsInput
      properties:
        ResourceTypeOptInPreference:
          $ref: '#/components/schemas/ResourceTypeOptInPreference'
          description: Updates the list of services along with the opt-in preferences for the Region.
security:
  - hmac: []
