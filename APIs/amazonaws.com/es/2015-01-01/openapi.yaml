openapi: 3.0.0
info:
  version: '2015-01-01'
  x-release: v4
  title: Amazon Elasticsearch Service
  description: '<fullname>Amazon Elasticsearch Configuration Service</fullname> <p>Use the Amazon Elasticsearch Configuration API to create, configure, and manage Elasticsearch domains.</p> <p>For sample code that uses the Configuration API, see the <a href="https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-configuration-samples.html">Amazon Elasticsearch Service Developer Guide</a>. The guide also contains <a href="https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-request-signing.html">sample code for sending signed HTTP requests to the Elasticsearch APIs</a>.</p> <p>The endpoint for configuration service requests is region-specific: es.<i>region</i>.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#elasticsearch-service-regions" target="_blank">Regions and Endpoints</a>.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: es
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/es-2015-01-01.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/es/'
servers:
  - url: 'http://es.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon Elasticsearch Service multi-region endpoint
  - url: 'https://es.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon Elasticsearch Service multi-region endpoint
  - url: 'http://es.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Elasticsearch Service endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://es.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Elasticsearch Service endpoint for China (Beijing) and China (Ningxia)
paths:
  '/2015-01-01/es/ccs/inboundConnection/{ConnectionId}/accept':
    put:
      operationId: AcceptInboundCrossClusterSearchConnection
      description: Allows the destination domain owner to accept an inbound cross-cluster search connection request.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptInboundCrossClusterSearchConnectionResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
      parameters:
        - name: ConnectionId
          in: path
          required: true
          description: The id of the inbound connection that you want to accept.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2015-01-01/tags:
    post:
      operationId: AddTags
      description: 'Attaches tags to an existing Elasticsearch domain. Tags are a set of case-sensitive key value pairs. An Elasticsearch domain may have up to 10 tags. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-managedomains.html#es-managedomains-awsresorcetagging" target="_blank"> Tagging Amazon Elasticsearch Service Domains for more information.</a>'
      responses:
        '200':
          description: Success
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ARN
                - TagList
              properties:
                ARN:
                  description: 'The Amazon Resource Name (ARN) of the Elasticsearch domain. See <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html" target="_blank">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access Management</i> for more information.'
                  type: string
                TagList:
                  description: 'A list of <code>Tag</code> '
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2015-01-01/packages/associate/{PackageID}/{DomainName}':
    post:
      operationId: AssociatePackage
      description: Associates a package with an Amazon ES domain.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociatePackageResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: PackageID
          in: path
          required: true
          description: Internal ID of the package that you want to associate with a domain. Use <code>DescribePackages</code> to find this value.
          schema:
            type: string
        - name: DomainName
          in: path
          required: true
          description: Name of the domain that you want to associate the package with.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).'
            minLength: 3
            maxLength: 28
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2015-01-01/es/serviceSoftwareUpdate/cancel:
    post:
      operationId: CancelElasticsearchServiceSoftwareUpdate
      description: Cancels a scheduled service software update for an Amazon ES domain. You can only perform this operation before the <code>AutomatedUpdateDate</code> and when the <code>UpdateStatus</code> is in the <code>PENDING_UPDATE</code> state.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelElasticsearchServiceSoftwareUpdateResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - DomainName
              properties:
                DomainName:
                  description: 'The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).'
                  type: string
                  pattern: '[a-z][a-z0-9\-]+'
                  minLength: 3
                  maxLength: 28
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2015-01-01/es/domain:
    post:
      operationId: CreateElasticsearchDomain
      description: 'Creates a new Elasticsearch domain. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomains" target="_blank">Creating Elasticsearch Domains</a> in the <i>Amazon Elasticsearch Service Developer Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateElasticsearchDomainResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '482':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '483':
          description: InvalidTypeException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTypeException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '486':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - DomainName
              properties:
                DomainName:
                  description: 'The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).'
                  type: string
                  pattern: '[a-z][a-z0-9\-]+'
                  minLength: 3
                  maxLength: 28
                ElasticsearchVersion:
                  description: 'String of format X.Y to specify version for the Elasticsearch domain eg. "1.5" or "2.3". For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomains" target="_blank">Creating Elasticsearch Domains</a> in the <i>Amazon Elasticsearch Service Developer Guide</i>.'
                  type: string
                ElasticsearchClusterConfig:
                  description: 'Specifies the configuration for the domain cluster, such as the type and number of instances.'
                  type: object
                  properties:
                    InstanceType:
                      $ref: '#/components/schemas/ESPartitionInstanceType'
                      description: The instance type for an Elasticsearch cluster. UltraWarm instance types are not supported for data instances.
                    InstanceCount:
                      $ref: '#/components/schemas/IntegerClass'
                      description: The number of instances in the specified domain cluster.
                    DedicatedMasterEnabled:
                      $ref: '#/components/schemas/Boolean'
                      description: 'A boolean value to indicate whether a dedicated master node is enabled. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-managedomains.html#es-managedomains-dedicatedmasternodes" target="_blank">About Dedicated Master Nodes</a> for more information.'
                    ZoneAwarenessEnabled:
                      $ref: '#/components/schemas/Boolean'
                      description: 'A boolean value to indicate whether zone awareness is enabled. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-managedomains.html#es-managedomains-zoneawareness" target="_blank">About Zone Awareness</a> for more information.'
                    ZoneAwarenessConfig:
                      $ref: '#/components/schemas/ZoneAwarenessConfig'
                      description: Specifies the zone awareness configuration for a domain when zone awareness is enabled.
                    DedicatedMasterType:
                      $ref: '#/components/schemas/ESPartitionInstanceType'
                      description: The instance type for a dedicated master node.
                    DedicatedMasterCount:
                      $ref: '#/components/schemas/IntegerClass'
                      description: 'Total number of dedicated master nodes, active and on standby, for the cluster.'
                    WarmEnabled:
                      $ref: '#/components/schemas/Boolean'
                      description: True to enable warm storage.
                    WarmType:
                      $ref: '#/components/schemas/ESWarmPartitionInstanceType'
                      description: The instance type for the Elasticsearch cluster's warm nodes.
                    WarmCount:
                      $ref: '#/components/schemas/IntegerClass'
                      description: The number of warm nodes in the cluster.
                    ColdStorageOptions:
                      $ref: '#/components/schemas/ColdStorageOptions'
                      description: Specifies the <code>ColdStorageOptions</code> configuration for an Elasticsearch domain.
                EBSOptions:
                  description: 'Options to enable, disable, and specify the properties of EBS storage volumes. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-ebs" target="_blank"> Configuring EBS-based Storage</a>.'
                  type: object
                  properties:
                    EBSEnabled:
                      $ref: '#/components/schemas/Boolean'
                      description: Specifies whether EBS-based storage is enabled.
                    VolumeType:
                      $ref: '#/components/schemas/VolumeType'
                      description: ' Specifies the volume type for EBS-based storage.'
                    VolumeSize:
                      $ref: '#/components/schemas/IntegerClass'
                      description: ' Integer to specify the size of an EBS volume.'
                    Iops:
                      $ref: '#/components/schemas/IntegerClass'
                      description: Specifies the IOPD for a Provisioned IOPS EBS volume (SSD).
                AccessPolicies:
                  description: 'Access policy rules for an Elasticsearch domain service endpoints. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-access-policies" target="_blank">Configuring Access Policies</a> in the <i>Amazon Elasticsearch Service Developer Guide</i>. The maximum size of a policy document is 100 KB.'
                  type: string
                SnapshotOptions:
                  description: 'Specifies the time, in UTC format, when the service takes a daily automated snapshot of the specified Elasticsearch domain. Default value is <code>0</code> hours.'
                  type: object
                  properties:
                    AutomatedSnapshotStartHour:
                      $ref: '#/components/schemas/IntegerClass'
                      description: 'Specifies the time, in UTC format, when the service takes a daily automated snapshot of the specified Elasticsearch domain. Default value is <code>0</code> hours.'
                VPCOptions:
                  description: 'Options to specify the subnets and security groups for VPC endpoint. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html" target="_blank"> VPC Endpoints for Amazon Elasticsearch Service Domains</a>.'
                  type: object
                  properties:
                    SubnetIds:
                      $ref: '#/components/schemas/StringList'
                      description: Specifies the subnets for VPC endpoint.
                    SecurityGroupIds:
                      $ref: '#/components/schemas/StringList'
                      description: Specifies the security groups for VPC endpoint.
                CognitoOptions:
                  description: 'Options to specify the Cognito user and identity pools for Kibana authentication. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-cognito-auth.html" target="_blank">Amazon Cognito Authentication for Kibana</a>.'
                  type: object
                  properties:
                    Enabled:
                      $ref: '#/components/schemas/Boolean'
                      description: Specifies the option to enable Cognito for Kibana authentication.
                    UserPoolId:
                      $ref: '#/components/schemas/UserPoolId'
                      description: Specifies the Cognito user pool ID for Kibana authentication.
                    IdentityPoolId:
                      $ref: '#/components/schemas/IdentityPoolId'
                      description: Specifies the Cognito identity pool ID for Kibana authentication.
                    RoleArn:
                      $ref: '#/components/schemas/RoleArn'
                      description: Specifies the role ARN that provides Elasticsearch permissions for accessing Cognito resources.
                EncryptionAtRestOptions:
                  description: Specifies the Encryption At Rest Options.
                  type: object
                  properties:
                    Enabled:
                      $ref: '#/components/schemas/Boolean'
                      description: Specifies the option to enable Encryption At Rest.
                    KmsKeyId:
                      $ref: '#/components/schemas/KmsKeyId'
                      description: ' Specifies the KMS Key ID for Encryption At Rest options.'
                NodeToNodeEncryptionOptions:
                  description: Specifies the node-to-node encryption options.
                  type: object
                  properties:
                    Enabled:
                      $ref: '#/components/schemas/Boolean'
                      description: Specify true to enable node-to-node encryption.
                AdvancedOptions:
                  description: '<p> Exposes select native Elasticsearch configuration values from <code>elasticsearch.yml</code>. Currently, the following advanced options are available:</p> <ul> <li>Option to allow references to indices in an HTTP request body. Must be <code>false</code> when configuring access to individual sub-resources. By default, the value is <code>true</code>. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options" target="_blank">Configuration Advanced Options</a> for more information.</li> <li>Option to specify the percentage of heap space that is allocated to field data. By default, this setting is unbounded.</li> </ul> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options">Configuring Advanced Options</a>.</p>'
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/String'
                LogPublishingOptions:
                  description: 'Map of <code>LogType</code> and <code>LogPublishingOption</code>, each containing options to publish a given type of Elasticsearch log.'
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/LogPublishingOption'
                DomainEndpointOptions:
                  description: Options to configure endpoint for the Elasticsearch domain.
                  type: object
                  properties:
                    EnforceHTTPS:
                      $ref: '#/components/schemas/Boolean'
                      description: Specify if only HTTPS endpoint should be enabled for the Elasticsearch domain.
                    TLSSecurityPolicy:
                      $ref: '#/components/schemas/TLSSecurityPolicy'
                      description: 'Specify the TLS security policy that needs to be applied to the HTTPS endpoint of Elasticsearch domain. <br/> It can be one of the following values: <ul> <li><b>Policy-Min-TLS-1-0-2019-07: </b> TLS security policy which supports TLSv1.0 and higher.</li> <li><b>Policy-Min-TLS-1-2-2019-07: </b> TLS security policy which supports only TLSv1.2</li> </ul> '
                    CustomEndpointEnabled:
                      $ref: '#/components/schemas/Boolean'
                      description: Specify if custom endpoint should be enabled for the Elasticsearch domain.
                    CustomEndpoint:
                      $ref: '#/components/schemas/DomainNameFqdn'
                      description: Specify the fully qualified domain for your custom endpoint.
                    CustomEndpointCertificateArn:
                      $ref: '#/components/schemas/ARN'
                      description: Specify ACM certificate ARN for your custom endpoint.
                AdvancedSecurityOptions:
                  description: 'Specifies the advanced security configuration: whether advanced security is enabled, whether the internal database option is enabled, master username and password (if internal database is enabled), and master user ARN (if IAM is enabled).'
                  type: object
                  properties:
                    Enabled:
                      $ref: '#/components/schemas/Boolean'
                      description: True if advanced security is enabled.
                    InternalUserDatabaseEnabled:
                      $ref: '#/components/schemas/Boolean'
                      description: True if the internal user database is enabled.
                    MasterUserOptions:
                      $ref: '#/components/schemas/MasterUserOptions'
                      description: 'Credentials for the master user: username and password, ARN, or both.'
                    SAMLOptions:
                      $ref: '#/components/schemas/SAMLOptionsInput'
                      description: Specifies the SAML application configuration for the domain.
                AutoTuneOptions:
                  description: 'Specifies the Auto-Tune options: the Auto-Tune desired state for the domain and list of maintenance schedules.'
                  type: object
                  properties:
                    DesiredState:
                      $ref: '#/components/schemas/AutoTuneDesiredState'
                      description: 'Specifies the Auto-Tune desired state. Valid values are ENABLED, DISABLED. '
                    MaintenanceSchedules:
                      $ref: '#/components/schemas/AutoTuneMaintenanceScheduleList'
                      description: 'Specifies list of maitenance schedules. See the <a href="https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/auto-tune.html" target="_blank">Developer Guide</a> for more information.'
                TagList:
                  description: 'A list of <code>Tag</code> '
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2015-01-01/es/ccs/outboundConnection:
    post:
      operationId: CreateOutboundCrossClusterSearchConnection
      description: Creates a new cross-cluster search connection from a source domain to a destination domain.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOutboundCrossClusterSearchConnectionResponse'
        '480':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '483':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - SourceDomainInfo
                - DestinationDomainInfo
                - ConnectionAlias
              properties:
                SourceDomainInfo:
                  description: Specifies the <code><a>DomainInformation</a></code> for the source Elasticsearch domain.
                  type: object
                  properties:
                    OwnerId:
                      $ref: '#/components/schemas/OwnerId'
                    DomainName:
                      $ref: '#/components/schemas/DomainName'
                    Region:
                      $ref: '#/components/schemas/Region'
                DestinationDomainInfo:
                  description: Specifies the <code><a>DomainInformation</a></code> for the destination Elasticsearch domain.
                  type: object
                  properties:
                    OwnerId:
                      $ref: '#/components/schemas/OwnerId'
                    DomainName:
                      $ref: '#/components/schemas/DomainName'
                    Region:
                      $ref: '#/components/schemas/Region'
                ConnectionAlias:
                  description: Specifies the connection alias that will be used by the customer for this connection.
                  type: string
                  maxLength: 20
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2015-01-01/packages:
    post:
      operationId: CreatePackage
      description: Create a package for use with Amazon ES domains.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePackageResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: InvalidTypeException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTypeException'
        '484':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - PackageName
                - PackageType
                - PackageSource
              properties:
                PackageName:
                  description: Unique identifier for the package.
                  type: string
                  pattern: '[a-z][a-z0-9\-]+'
                  minLength: 3
                  maxLength: 28
                PackageType:
                  description: Type of package. Currently supports only TXT-DICTIONARY.
                  type: string
                  enum:
                    - TXT-DICTIONARY
                PackageDescription:
                  description: Description of the package.
                  type: string
                  maxLength: 1024
                PackageSource:
                  description: The S3 location for importing the package specified as <code>S3BucketName</code> and <code>S3Key</code>
                  type: object
                  properties:
                    S3BucketName:
                      $ref: '#/components/schemas/S3BucketName'
                      description: Name of the bucket containing the package.
                    S3Key:
                      $ref: '#/components/schemas/S3Key'
                      description: Key (file name) of the package.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2015-01-01/es/domain/{DomainName}':
    delete:
      operationId: DeleteElasticsearchDomain
      description: 'Permanently deletes the specified Elasticsearch domain and all of its data. Once a domain is deleted, it cannot be recovered.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteElasticsearchDomainResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: DomainName
          in: path
          required: true
          description: The name of the Elasticsearch domain that you want to permanently delete.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).'
            minLength: 3
            maxLength: 28
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeElasticsearchDomain
      description: 'Returns domain configuration information about the specified Elasticsearch domain, including the domain ID, domain endpoint, and domain ARN.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeElasticsearchDomainResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: DomainName
          in: path
          required: true
          description: The name of the Elasticsearch domain for which you want information.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).'
            minLength: 3
            maxLength: 28
  /2015-01-01/es/role:
    delete:
      operationId: DeleteElasticsearchServiceRole
      description: 'Deletes the service-linked role that Elasticsearch Service uses to manage and maintain VPC domains. Role deletion will fail if any existing VPC domains use the role. You must delete any such Elasticsearch domains before deleting the role. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html#es-enabling-slr" target="_blank">Deleting Elasticsearch Service Role</a> in <i>VPC Endpoints for Amazon Elasticsearch Service Domains</i>.'
      responses:
        '200':
          description: Success
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2015-01-01/es/ccs/inboundConnection/{ConnectionId}':
    delete:
      operationId: DeleteInboundCrossClusterSearchConnection
      description: Allows the destination domain owner to delete an existing inbound cross-cluster search connection.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteInboundCrossClusterSearchConnectionResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
      parameters:
        - name: ConnectionId
          in: path
          required: true
          description: The id of the inbound connection that you want to permanently delete.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2015-01-01/es/ccs/outboundConnection/{ConnectionId}':
    delete:
      operationId: DeleteOutboundCrossClusterSearchConnection
      description: Allows the source domain owner to delete an existing outbound cross-cluster search connection.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteOutboundCrossClusterSearchConnectionResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
      parameters:
        - name: ConnectionId
          in: path
          required: true
          description: The id of the outbound connection that you want to permanently delete.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2015-01-01/packages/{PackageID}':
    delete:
      operationId: DeletePackage
      description: Delete the package.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePackageResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: PackageID
          in: path
          required: true
          description: Internal ID of the package that you want to delete. Use <code>DescribePackages</code> to find this value.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2015-01-01/es/domain/{DomainName}/autoTunes':
    get:
      operationId: DescribeDomainAutoTunes
      description: 'Provides scheduled Auto-Tune action details for the Elasticsearch domain, such as Auto-Tune action type, description, severity, and scheduled date.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDomainAutoTunesResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: DomainName
          in: path
          required: true
          description: Specifies the domain name for which you want Auto-Tune action details.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).'
            minLength: 3
            maxLength: 28
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MaxResults:
                  description: ' Set this value to limit the number of results returned. '
                  type: integer
                  maximum: 100
                NextToken:
                  description: ' Paginated APIs accepts NextToken input to returns next page results and provides a NextToken output in the response which can be used by the client to retrieve more results. '
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2015-01-01/es/domain/{DomainName}/config':
    get:
      operationId: DescribeElasticsearchDomainConfig
      description: 'Provides cluster configuration information about the specified Elasticsearch domain, such as the state, creation date, update version, and update date for cluster options.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeElasticsearchDomainConfigResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: DomainName
          in: path
          required: true
          description: The Elasticsearch domain that you want to get information about.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).'
            minLength: 3
            maxLength: 28
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateElasticsearchDomainConfig
      description: 'Modifies the cluster configuration of the specified Elasticsearch domain, setting as setting the instance type and the number of instances. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateElasticsearchDomainConfigResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: InvalidTypeException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTypeException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: DomainName
          in: path
          required: true
          description: 'The name of the Elasticsearch domain that you are updating. '
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).'
            minLength: 3
            maxLength: 28
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ElasticsearchClusterConfig:
                  description: 'Specifies the configuration for the domain cluster, such as the type and number of instances.'
                  type: object
                  properties:
                    InstanceType:
                      $ref: '#/components/schemas/ESPartitionInstanceType'
                      description: The instance type for an Elasticsearch cluster. UltraWarm instance types are not supported for data instances.
                    InstanceCount:
                      $ref: '#/components/schemas/IntegerClass'
                      description: The number of instances in the specified domain cluster.
                    DedicatedMasterEnabled:
                      $ref: '#/components/schemas/Boolean'
                      description: 'A boolean value to indicate whether a dedicated master node is enabled. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-managedomains.html#es-managedomains-dedicatedmasternodes" target="_blank">About Dedicated Master Nodes</a> for more information.'
                    ZoneAwarenessEnabled:
                      $ref: '#/components/schemas/Boolean'
                      description: 'A boolean value to indicate whether zone awareness is enabled. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-managedomains.html#es-managedomains-zoneawareness" target="_blank">About Zone Awareness</a> for more information.'
                    ZoneAwarenessConfig:
                      $ref: '#/components/schemas/ZoneAwarenessConfig'
                      description: Specifies the zone awareness configuration for a domain when zone awareness is enabled.
                    DedicatedMasterType:
                      $ref: '#/components/schemas/ESPartitionInstanceType'
                      description: The instance type for a dedicated master node.
                    DedicatedMasterCount:
                      $ref: '#/components/schemas/IntegerClass'
                      description: 'Total number of dedicated master nodes, active and on standby, for the cluster.'
                    WarmEnabled:
                      $ref: '#/components/schemas/Boolean'
                      description: True to enable warm storage.
                    WarmType:
                      $ref: '#/components/schemas/ESWarmPartitionInstanceType'
                      description: The instance type for the Elasticsearch cluster's warm nodes.
                    WarmCount:
                      $ref: '#/components/schemas/IntegerClass'
                      description: The number of warm nodes in the cluster.
                    ColdStorageOptions:
                      $ref: '#/components/schemas/ColdStorageOptions'
                      description: Specifies the <code>ColdStorageOptions</code> configuration for an Elasticsearch domain.
                EBSOptions:
                  description: 'Options to enable, disable, and specify the properties of EBS storage volumes. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-ebs" target="_blank"> Configuring EBS-based Storage</a>.'
                  type: object
                  properties:
                    EBSEnabled:
                      $ref: '#/components/schemas/Boolean'
                      description: Specifies whether EBS-based storage is enabled.
                    VolumeType:
                      $ref: '#/components/schemas/VolumeType'
                      description: ' Specifies the volume type for EBS-based storage.'
                    VolumeSize:
                      $ref: '#/components/schemas/IntegerClass'
                      description: ' Integer to specify the size of an EBS volume.'
                    Iops:
                      $ref: '#/components/schemas/IntegerClass'
                      description: Specifies the IOPD for a Provisioned IOPS EBS volume (SSD).
                SnapshotOptions:
                  description: 'Specifies the time, in UTC format, when the service takes a daily automated snapshot of the specified Elasticsearch domain. Default value is <code>0</code> hours.'
                  type: object
                  properties:
                    AutomatedSnapshotStartHour:
                      $ref: '#/components/schemas/IntegerClass'
                      description: 'Specifies the time, in UTC format, when the service takes a daily automated snapshot of the specified Elasticsearch domain. Default value is <code>0</code> hours.'
                VPCOptions:
                  description: 'Options to specify the subnets and security groups for VPC endpoint. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html" target="_blank"> VPC Endpoints for Amazon Elasticsearch Service Domains</a>.'
                  type: object
                  properties:
                    SubnetIds:
                      $ref: '#/components/schemas/StringList'
                      description: Specifies the subnets for VPC endpoint.
                    SecurityGroupIds:
                      $ref: '#/components/schemas/StringList'
                      description: Specifies the security groups for VPC endpoint.
                CognitoOptions:
                  description: 'Options to specify the Cognito user and identity pools for Kibana authentication. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-cognito-auth.html" target="_blank">Amazon Cognito Authentication for Kibana</a>.'
                  type: object
                  properties:
                    Enabled:
                      $ref: '#/components/schemas/Boolean'
                      description: Specifies the option to enable Cognito for Kibana authentication.
                    UserPoolId:
                      $ref: '#/components/schemas/UserPoolId'
                      description: Specifies the Cognito user pool ID for Kibana authentication.
                    IdentityPoolId:
                      $ref: '#/components/schemas/IdentityPoolId'
                      description: Specifies the Cognito identity pool ID for Kibana authentication.
                    RoleArn:
                      $ref: '#/components/schemas/RoleArn'
                      description: Specifies the role ARN that provides Elasticsearch permissions for accessing Cognito resources.
                AdvancedOptions:
                  description: '<p> Exposes select native Elasticsearch configuration values from <code>elasticsearch.yml</code>. Currently, the following advanced options are available:</p> <ul> <li>Option to allow references to indices in an HTTP request body. Must be <code>false</code> when configuring access to individual sub-resources. By default, the value is <code>true</code>. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options" target="_blank">Configuration Advanced Options</a> for more information.</li> <li>Option to specify the percentage of heap space that is allocated to field data. By default, this setting is unbounded.</li> </ul> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options">Configuring Advanced Options</a>.</p>'
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/String'
                AccessPolicies:
                  description: 'Access policy rules for an Elasticsearch domain service endpoints. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-access-policies" target="_blank">Configuring Access Policies</a> in the <i>Amazon Elasticsearch Service Developer Guide</i>. The maximum size of a policy document is 100 KB.'
                  type: string
                LogPublishingOptions:
                  description: 'Map of <code>LogType</code> and <code>LogPublishingOption</code>, each containing options to publish a given type of Elasticsearch log.'
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/LogPublishingOption'
                DomainEndpointOptions:
                  description: Options to configure endpoint for the Elasticsearch domain.
                  type: object
                  properties:
                    EnforceHTTPS:
                      $ref: '#/components/schemas/Boolean'
                      description: Specify if only HTTPS endpoint should be enabled for the Elasticsearch domain.
                    TLSSecurityPolicy:
                      $ref: '#/components/schemas/TLSSecurityPolicy'
                      description: 'Specify the TLS security policy that needs to be applied to the HTTPS endpoint of Elasticsearch domain. <br/> It can be one of the following values: <ul> <li><b>Policy-Min-TLS-1-0-2019-07: </b> TLS security policy which supports TLSv1.0 and higher.</li> <li><b>Policy-Min-TLS-1-2-2019-07: </b> TLS security policy which supports only TLSv1.2</li> </ul> '
                    CustomEndpointEnabled:
                      $ref: '#/components/schemas/Boolean'
                      description: Specify if custom endpoint should be enabled for the Elasticsearch domain.
                    CustomEndpoint:
                      $ref: '#/components/schemas/DomainNameFqdn'
                      description: Specify the fully qualified domain for your custom endpoint.
                    CustomEndpointCertificateArn:
                      $ref: '#/components/schemas/ARN'
                      description: Specify ACM certificate ARN for your custom endpoint.
                AdvancedSecurityOptions:
                  description: 'Specifies the advanced security configuration: whether advanced security is enabled, whether the internal database option is enabled, master username and password (if internal database is enabled), and master user ARN (if IAM is enabled).'
                  type: object
                  properties:
                    Enabled:
                      $ref: '#/components/schemas/Boolean'
                      description: True if advanced security is enabled.
                    InternalUserDatabaseEnabled:
                      $ref: '#/components/schemas/Boolean'
                      description: True if the internal user database is enabled.
                    MasterUserOptions:
                      $ref: '#/components/schemas/MasterUserOptions'
                      description: 'Credentials for the master user: username and password, ARN, or both.'
                    SAMLOptions:
                      $ref: '#/components/schemas/SAMLOptionsInput'
                      description: Specifies the SAML application configuration for the domain.
                NodeToNodeEncryptionOptions:
                  description: Specifies the node-to-node encryption options.
                  type: object
                  properties:
                    Enabled:
                      $ref: '#/components/schemas/Boolean'
                      description: Specify true to enable node-to-node encryption.
                EncryptionAtRestOptions:
                  description: Specifies the Encryption At Rest Options.
                  type: object
                  properties:
                    Enabled:
                      $ref: '#/components/schemas/Boolean'
                      description: Specifies the option to enable Encryption At Rest.
                    KmsKeyId:
                      $ref: '#/components/schemas/KmsKeyId'
                      description: ' Specifies the KMS Key ID for Encryption At Rest options.'
                AutoTuneOptions:
                  description: 'Specifies the Auto-Tune options: the Auto-Tune desired state for the domain, rollback state when disabling Auto-Tune options and list of maintenance schedules.'
                  type: object
                  properties:
                    DesiredState:
                      $ref: '#/components/schemas/AutoTuneDesiredState'
                      description: 'Specifies the Auto-Tune desired state. Valid values are ENABLED, DISABLED. '
                    RollbackOnDisable:
                      $ref: '#/components/schemas/RollbackOnDisable'
                      description: 'Specifies the rollback state while disabling Auto-Tune for the domain. Valid values are NO_ROLLBACK, DEFAULT_ROLLBACK. '
                    MaintenanceSchedules:
                      $ref: '#/components/schemas/AutoTuneMaintenanceScheduleList'
                      description: 'Specifies list of maitenance schedules. See the <a href="https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/auto-tune.html" target="_blank">Developer Guide</a> for more information.'
  /2015-01-01/es/domain-info:
    post:
      operationId: DescribeElasticsearchDomains
      description: 'Returns domain configuration information about the specified Elasticsearch domains, including the domain ID, domain endpoint, and domain ARN.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeElasticsearchDomainsResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - DomainNames
              properties:
                DomainNames:
                  description: A list of Elasticsearch domain names.
                  type: array
                  items:
                    $ref: '#/components/schemas/DomainName'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2015-01-01/es/instanceTypeLimits/{ElasticsearchVersion}/{InstanceType}':
    get:
      operationId: DescribeElasticsearchInstanceTypeLimits
      description: ' Describe Elasticsearch Limits for a given InstanceType and ElasticsearchVersion. When modifying existing Domain, specify the <code> <a>DomainName</a> </code> to know what Limits are supported for modifying. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeElasticsearchInstanceTypeLimitsResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: InvalidTypeException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTypeException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: domainName
          in: query
          required: false
          description: ' DomainName represents the name of the Domain that we are trying to modify. This should be present only if we are querying for Elasticsearch <code> <a>Limits</a> </code> for existing domain. '
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).'
            minLength: 3
            maxLength: 28
        - name: InstanceType
          in: path
          required: true
          description: ' The instance type for an Elasticsearch cluster for which Elasticsearch <code> <a>Limits</a> </code> are needed. '
          schema:
            type: string
            enum:
              - m3.medium.elasticsearch
              - m3.large.elasticsearch
              - m3.xlarge.elasticsearch
              - m3.2xlarge.elasticsearch
              - m4.large.elasticsearch
              - m4.xlarge.elasticsearch
              - m4.2xlarge.elasticsearch
              - m4.4xlarge.elasticsearch
              - m4.10xlarge.elasticsearch
              - m5.large.elasticsearch
              - m5.xlarge.elasticsearch
              - m5.2xlarge.elasticsearch
              - m5.4xlarge.elasticsearch
              - m5.12xlarge.elasticsearch
              - r5.large.elasticsearch
              - r5.xlarge.elasticsearch
              - r5.2xlarge.elasticsearch
              - r5.4xlarge.elasticsearch
              - r5.12xlarge.elasticsearch
              - c5.large.elasticsearch
              - c5.xlarge.elasticsearch
              - c5.2xlarge.elasticsearch
              - c5.4xlarge.elasticsearch
              - c5.9xlarge.elasticsearch
              - c5.18xlarge.elasticsearch
              - ultrawarm1.medium.elasticsearch
              - ultrawarm1.large.elasticsearch
              - t2.micro.elasticsearch
              - t2.small.elasticsearch
              - t2.medium.elasticsearch
              - r3.large.elasticsearch
              - r3.xlarge.elasticsearch
              - r3.2xlarge.elasticsearch
              - r3.4xlarge.elasticsearch
              - r3.8xlarge.elasticsearch
              - i2.xlarge.elasticsearch
              - i2.2xlarge.elasticsearch
              - d2.xlarge.elasticsearch
              - d2.2xlarge.elasticsearch
              - d2.4xlarge.elasticsearch
              - d2.8xlarge.elasticsearch
              - c4.large.elasticsearch
              - c4.xlarge.elasticsearch
              - c4.2xlarge.elasticsearch
              - c4.4xlarge.elasticsearch
              - c4.8xlarge.elasticsearch
              - r4.large.elasticsearch
              - r4.xlarge.elasticsearch
              - r4.2xlarge.elasticsearch
              - r4.4xlarge.elasticsearch
              - r4.8xlarge.elasticsearch
              - r4.16xlarge.elasticsearch
              - i3.large.elasticsearch
              - i3.xlarge.elasticsearch
              - i3.2xlarge.elasticsearch
              - i3.4xlarge.elasticsearch
              - i3.8xlarge.elasticsearch
              - i3.16xlarge.elasticsearch
        - name: ElasticsearchVersion
          in: path
          required: true
          description: ' Version of Elasticsearch for which <code> <a>Limits</a> </code> are needed. '
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2015-01-01/es/ccs/inboundConnection/search:
    post:
      operationId: DescribeInboundCrossClusterSearchConnections
      description: Lists all the inbound cross-cluster search connections for a destination domain.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeInboundCrossClusterSearchConnectionsResponse'
        '480':
          description: InvalidPaginationTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPaginationTokenException'
        '481':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Filters:
                  description: ' A list of filters used to match properties for inbound cross-cluster search connection. Available <code><a>Filter</a></code> names for this operation are: <ul> <li>cross-cluster-search-connection-id</li> <li>source-domain-info.domain-name</li> <li>source-domain-info.owner-id</li> <li>source-domain-info.region</li> <li>destination-domain-info.domain-name</li> </ul> '
                  type: array
                  items:
                    $ref: '#/components/schemas/Filter'
                MaxResults:
                  description: ' Set this value to limit the number of results returned. '
                  type: integer
                  maximum: 100
                NextToken:
                  description: ' Paginated APIs accepts NextToken input to returns next page results and provides a NextToken output in the response which can be used by the client to retrieve more results. '
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2015-01-01/es/ccs/outboundConnection/search:
    post:
      operationId: DescribeOutboundCrossClusterSearchConnections
      description: Lists all the outbound cross-cluster search connections for a source domain.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeOutboundCrossClusterSearchConnectionsResponse'
        '480':
          description: InvalidPaginationTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPaginationTokenException'
        '481':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Filters:
                  description: ' A list of filters used to match properties for outbound cross-cluster search connection. Available <code><a>Filter</a></code> names for this operation are: <ul> <li>cross-cluster-search-connection-id</li> <li>destination-domain-info.domain-name</li> <li>destination-domain-info.owner-id</li> <li>destination-domain-info.region</li> <li>source-domain-info.domain-name</li> </ul> '
                  type: array
                  items:
                    $ref: '#/components/schemas/Filter'
                MaxResults:
                  description: ' Set this value to limit the number of results returned. '
                  type: integer
                  maximum: 100
                NextToken:
                  description: ' Paginated APIs accepts NextToken input to returns next page results and provides a NextToken output in the response which can be used by the client to retrieve more results. '
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2015-01-01/packages/describe:
    post:
      operationId: DescribePackages
      description: 'Describes all packages available to Amazon ES. Includes options for filtering, limiting the number of results, and pagination.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePackagesResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Filters:
                  description: A list of <code>DescribePackagesFilter</code> to filter the packages included in a <code>DescribePackages</code> response.
                  type: array
                  items:
                    $ref: '#/components/schemas/DescribePackagesFilter'
                MaxResults:
                  description: ' Set this value to limit the number of results returned. '
                  type: integer
                  maximum: 100
                NextToken:
                  description: ' Paginated APIs accepts NextToken input to returns next page results and provides a NextToken output in the response which can be used by the client to retrieve more results. '
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2015-01-01/es/reservedInstanceOfferings:
    get:
      operationId: DescribeReservedElasticsearchInstanceOfferings
      description: Lists available reserved Elasticsearch instance offerings.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeReservedElasticsearchInstanceOfferingsResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '483':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
      parameters:
        - name: offeringId
          in: query
          required: false
          description: The offering identifier filter value. Use this parameter to show only the available offering that matches the specified reservation identifier.
          schema:
            type: string
            pattern: '\p{XDigit}{8}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{12}'
        - name: maxResults
          in: query
          required: false
          description: 'Set this value to limit the number of results returned. If not specified, defaults to 100.'
          schema:
            type: integer
            description: ' Set this value to limit the number of results returned. '
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: NextToken should be sent in case if earlier API call produced result containing NextToken. It is used for pagination.
          schema:
            type: string
            description: ' Paginated APIs accepts NextToken input to returns next page results and provides a NextToken output in the response which can be used by the client to retrieve more results. '
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2015-01-01/es/reservedInstances:
    get:
      operationId: DescribeReservedElasticsearchInstances
      description: Returns information about reserved Elasticsearch instances for this account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeReservedElasticsearchInstancesResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
      parameters:
        - name: reservationId
          in: query
          required: false
          description: The reserved instance identifier filter value. Use this parameter to show only the reservation that matches the specified reserved Elasticsearch instance ID.
          schema:
            type: string
            pattern: '\p{XDigit}{8}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{12}'
        - name: maxResults
          in: query
          required: false
          description: 'Set this value to limit the number of results returned. If not specified, defaults to 100.'
          schema:
            type: integer
            description: ' Set this value to limit the number of results returned. '
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: NextToken should be sent in case if earlier API call produced result containing NextToken. It is used for pagination.
          schema:
            type: string
            description: ' Paginated APIs accepts NextToken input to returns next page results and provides a NextToken output in the response which can be used by the client to retrieve more results. '
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2015-01-01/packages/dissociate/{PackageID}/{DomainName}':
    post:
      operationId: DissociatePackage
      description: Dissociates a package from the Amazon ES domain.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DissociatePackageResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: PackageID
          in: path
          required: true
          description: Internal ID of the package that you want to associate with a domain. Use <code>DescribePackages</code> to find this value.
          schema:
            type: string
        - name: DomainName
          in: path
          required: true
          description: Name of the domain that you want to associate the package with.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).'
            minLength: 3
            maxLength: 28
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2015-01-01/es/compatibleVersions:
    get:
      operationId: GetCompatibleElasticsearchVersions
      description: ' Returns a list of upgrade compatible Elastisearch versions. You can optionally pass a <code> <a>DomainName</a> </code> to get all upgrade compatible Elasticsearch versions for that specific domain. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCompatibleElasticsearchVersionsResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
      parameters:
        - name: domainName
          in: query
          required: false
          description: ''
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).'
            minLength: 3
            maxLength: 28
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2015-01-01/packages/{PackageID}/history':
    get:
      operationId: GetPackageVersionHistory
      description: 'Returns a list of versions of the package, along with their creation time and commit message.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPackageVersionHistoryResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: PackageID
          in: path
          required: true
          description: Returns an audit history of versions of the package.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: Limits results to a maximum number of versions.
          schema:
            type: integer
            description: ' Set this value to limit the number of results returned. '
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: 'Used for pagination. Only necessary if a previous API call includes a non-null NextToken value. If provided, returns results for the next page.'
          schema:
            type: string
            description: ' Paginated APIs accepts NextToken input to returns next page results and provides a NextToken output in the response which can be used by the client to retrieve more results. '
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2015-01-01/es/upgradeDomain/{DomainName}/history':
    get:
      operationId: GetUpgradeHistory
      description: Retrieves the complete history of the last 10 upgrades that were performed on the domain.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUpgradeHistoryResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
      parameters:
        - name: DomainName
          in: path
          required: true
          description: ''
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).'
            minLength: 3
            maxLength: 28
        - name: maxResults
          in: query
          required: false
          description: ''
          schema:
            type: integer
            description: ' Set this value to limit the number of results returned. '
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: ''
          schema:
            type: string
            description: ' Paginated APIs accepts NextToken input to returns next page results and provides a NextToken output in the response which can be used by the client to retrieve more results. '
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2015-01-01/es/upgradeDomain/{DomainName}/status':
    get:
      operationId: GetUpgradeStatus
      description: Retrieves the latest status of the last upgrade or upgrade eligibility check that was performed on the domain.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUpgradeStatusResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
      parameters:
        - name: DomainName
          in: path
          required: true
          description: ''
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).'
            minLength: 3
            maxLength: 28
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2015-01-01/domain:
    get:
      operationId: ListDomainNames
      description: 'Returns the name of all Elasticsearch domains owned by the current user''s account. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDomainNamesResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2015-01-01/packages/{PackageID}/domains':
    get:
      operationId: ListDomainsForPackage
      description: Lists all Amazon ES domains associated with the package.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDomainsForPackageResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: PackageID
          in: path
          required: true
          description: The package for which to list domains.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: Limits results to a maximum number of domains.
          schema:
            type: integer
            description: ' Set this value to limit the number of results returned. '
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: 'Used for pagination. Only necessary if a previous API call includes a non-null NextToken value. If provided, returns results for the next page.'
          schema:
            type: string
            description: ' Paginated APIs accepts NextToken input to returns next page results and provides a NextToken output in the response which can be used by the client to retrieve more results. '
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2015-01-01/es/instanceTypes/{ElasticsearchVersion}':
    get:
      operationId: ListElasticsearchInstanceTypes
      description: List all Elasticsearch instance types that are supported for given ElasticsearchVersion
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListElasticsearchInstanceTypesResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: ElasticsearchVersion
          in: path
          required: true
          description: 'Version of Elasticsearch for which list of supported elasticsearch instance types are needed. '
          schema:
            type: string
        - name: domainName
          in: query
          required: false
          description: 'DomainName represents the name of the Domain that we are trying to modify. This should be present only if we are querying for list of available Elasticsearch instance types when modifying existing domain. '
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).'
            minLength: 3
            maxLength: 28
        - name: maxResults
          in: query
          required: false
          description: ' Set this value to limit the number of results returned. Value provided must be greater than 30 else it wont be honored. '
          schema:
            type: integer
            description: ' Set this value to limit the number of results returned. '
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: 'NextToken should be sent in case if earlier API call produced result containing NextToken. It is used for pagination. '
          schema:
            type: string
            description: ' Paginated APIs accepts NextToken input to returns next page results and provides a NextToken output in the response which can be used by the client to retrieve more results. '
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2015-01-01/es/versions:
    get:
      operationId: ListElasticsearchVersions
      description: List all supported Elasticsearch versions
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListElasticsearchVersionsResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: ' Set this value to limit the number of results returned. Value provided must be greater than 10 else it wont be honored. '
          schema:
            type: integer
            description: ' Set this value to limit the number of results returned. '
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: ''
          schema:
            type: string
            description: ' Paginated APIs accepts NextToken input to returns next page results and provides a NextToken output in the response which can be used by the client to retrieve more results. '
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2015-01-01/domain/{DomainName}/packages':
    get:
      operationId: ListPackagesForDomain
      description: Lists all packages associated with the Amazon ES domain.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPackagesForDomainResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: DomainName
          in: path
          required: true
          description: The name of the domain for which you want to list associated packages.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: 'The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).'
            minLength: 3
            maxLength: 28
        - name: maxResults
          in: query
          required: false
          description: Limits results to a maximum number of packages.
          schema:
            type: integer
            description: ' Set this value to limit the number of results returned. '
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: 'Used for pagination. Only necessary if a previous API call includes a non-null NextToken value. If provided, returns results for the next page.'
          schema:
            type: string
            description: ' Paginated APIs accepts NextToken input to returns next page results and provides a NextToken output in the response which can be used by the client to retrieve more results. '
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2015-01-01/tags/#arn:
    get:
      operationId: ListTags
      description: Returns all tags for the given Elasticsearch domain.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
      parameters:
        - name: arn
          in: query
          required: true
          description: ' Specify the <code>ARN</code> for the Elasticsearch domain to which the tags are attached that you want to view.'
          schema:
            type: string
            description: 'The Amazon Resource Name (ARN) of the Elasticsearch domain. See <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html" target="_blank">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access Management</i> for more information.'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2015-01-01/es/purchaseReservedInstanceOffering:
    post:
      operationId: PurchaseReservedElasticsearchInstanceOffering
      description: Allows you to purchase reserved Elasticsearch instances.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseReservedElasticsearchInstanceOfferingResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ReservedElasticsearchInstanceOfferingId
                - ReservationName
              properties:
                ReservedElasticsearchInstanceOfferingId:
                  description: The ID of the reserved Elasticsearch instance offering to purchase.
                  type: string
                  pattern: '\p{XDigit}{8}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{12}'
                ReservationName:
                  description: A customer-specified identifier to track this reservation.
                  type: string
                  minLength: 5
                  maxLength: 64
                InstanceCount:
                  description: Specifies the number of EC2 instances in the Elasticsearch domain.
                  type: integer
                  minimum: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2015-01-01/es/ccs/inboundConnection/{ConnectionId}/reject':
    put:
      operationId: RejectInboundCrossClusterSearchConnection
      description: Allows the destination domain owner to reject an inbound cross-cluster search connection request.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RejectInboundCrossClusterSearchConnectionResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
      parameters:
        - name: ConnectionId
          in: path
          required: true
          description: The id of the inbound connection that you want to reject.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2015-01-01/tags-removal:
    post:
      operationId: RemoveTags
      description: Removes the specified set of tags from the specified Elasticsearch domain.
      responses:
        '200':
          description: Success
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ARN
                - TagKeys
              properties:
                ARN:
                  description: 'The Amazon Resource Name (ARN) of the Elasticsearch domain. See <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html" target="_blank">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access Management</i> for more information.'
                  type: string
                TagKeys:
                  description: Specifies the <code>TagKey</code> list which you want to remove from the Elasticsearch domain.
                  type: array
                  items:
                    $ref: '#/components/schemas/String'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2015-01-01/es/serviceSoftwareUpdate/start:
    post:
      operationId: StartElasticsearchServiceSoftwareUpdate
      description: Schedules a service software update for an Amazon ES domain.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartElasticsearchServiceSoftwareUpdateResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - DomainName
              properties:
                DomainName:
                  description: 'The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).'
                  type: string
                  pattern: '[a-z][a-z0-9\-]+'
                  minLength: 3
                  maxLength: 28
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2015-01-01/packages/update:
    post:
      operationId: UpdatePackage
      description: Updates a package for use with Amazon ES domains.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePackageResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - PackageID
                - PackageSource
              properties:
                PackageID:
                  description: Unique identifier for the package.
                  type: string
                PackageSource:
                  description: The S3 location for importing the package specified as <code>S3BucketName</code> and <code>S3Key</code>
                  type: object
                  properties:
                    S3BucketName:
                      $ref: '#/components/schemas/S3BucketName'
                      description: Name of the bucket containing the package.
                    S3Key:
                      $ref: '#/components/schemas/S3Key'
                      description: Key (file name) of the package.
                PackageDescription:
                  description: New description of the package.
                  type: string
                  maxLength: 1024
                CommitMessage:
                  description: An info message for the new version which will be shown as part of <code>GetPackageVersionHistoryResponse</code>.
                  type: string
                  maxLength: 160
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2015-01-01/es/upgradeDomain:
    post:
      operationId: UpgradeElasticsearchDomain
      description: Allows you to either upgrade your domain or perform an Upgrade eligibility check to a compatible Elasticsearch version.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpgradeElasticsearchDomainResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '483':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - DomainName
                - TargetVersion
              properties:
                DomainName:
                  description: 'The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).'
                  type: string
                  pattern: '[a-z][a-z0-9\-]+'
                  minLength: 3
                  maxLength: 28
                TargetVersion:
                  description: The version of Elasticsearch that you intend to upgrade the domain to.
                  type: string
                PerformCheckOnly:
                  description: ' This flag, when set to True, indicates that an Upgrade Eligibility Check needs to be performed. This will not actually perform the Upgrade. '
                  type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AcceptInboundCrossClusterSearchConnectionResponse:
      type: object
      properties:
        CrossClusterSearchConnection:
          $ref: '#/components/schemas/InboundCrossClusterSearchConnection'
          description: 'Specifies the <code><a>InboundCrossClusterSearchConnection</a></code> of accepted inbound connection. '
      description: The result of a <code><a>AcceptInboundCrossClusterSearchConnection</a></code> operation. Contains details of accepted inbound connection.
    ResourceNotFoundException: {}
    LimitExceededException: {}
    DisabledOperationException: {}
    Tag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          $ref: '#/components/schemas/TagKey'
          description: 'Specifies the <code>TagKey</code>, the name of the tag. Tag keys must be unique for the Elasticsearch domain to which they are attached.'
        Value:
          $ref: '#/components/schemas/TagValue'
          description: 'Specifies the <code>TagValue</code>, the value assigned to the corresponding tag key. Tag values can be null and do not have to be unique in a tag set. For example, you can have a key value pair in a tag set of <code>project : Trinity</code> and <code>cost-center : Trinity</code>'
      description: Specifies a key value pair for a resource tag.
    BaseException: {}
    ValidationException: {}
    InternalException: {}
    AssociatePackageResponse:
      type: object
      properties:
        DomainPackageDetails:
          $ref: '#/components/schemas/DomainPackageDetails'
          description: <code>DomainPackageDetails</code>
      description: ' Container for response returned by <code> <a>AssociatePackage</a> </code> operation. '
    AccessDeniedException: {}
    ConflictException: {}
    CancelElasticsearchServiceSoftwareUpdateResponse:
      type: object
      properties:
        ServiceSoftwareOptions:
          $ref: '#/components/schemas/ServiceSoftwareOptions'
          description: The current status of the Elasticsearch service software update.
      description: The result of a <code>CancelElasticsearchServiceSoftwareUpdate</code> operation. Contains the status of the update.
    CreateElasticsearchDomainResponse:
      type: object
      properties:
        DomainStatus:
          $ref: '#/components/schemas/ElasticsearchDomainStatus'
          description: 'The status of the newly created Elasticsearch domain. '
      description: The result of a <code>CreateElasticsearchDomain</code> operation. Contains the status of the newly created Elasticsearch domain.
    ESPartitionInstanceType:
      type: string
      enum:
        - m3.medium.elasticsearch
        - m3.large.elasticsearch
        - m3.xlarge.elasticsearch
        - m3.2xlarge.elasticsearch
        - m4.large.elasticsearch
        - m4.xlarge.elasticsearch
        - m4.2xlarge.elasticsearch
        - m4.4xlarge.elasticsearch
        - m4.10xlarge.elasticsearch
        - m5.large.elasticsearch
        - m5.xlarge.elasticsearch
        - m5.2xlarge.elasticsearch
        - m5.4xlarge.elasticsearch
        - m5.12xlarge.elasticsearch
        - r5.large.elasticsearch
        - r5.xlarge.elasticsearch
        - r5.2xlarge.elasticsearch
        - r5.4xlarge.elasticsearch
        - r5.12xlarge.elasticsearch
        - c5.large.elasticsearch
        - c5.xlarge.elasticsearch
        - c5.2xlarge.elasticsearch
        - c5.4xlarge.elasticsearch
        - c5.9xlarge.elasticsearch
        - c5.18xlarge.elasticsearch
        - ultrawarm1.medium.elasticsearch
        - ultrawarm1.large.elasticsearch
        - t2.micro.elasticsearch
        - t2.small.elasticsearch
        - t2.medium.elasticsearch
        - r3.large.elasticsearch
        - r3.xlarge.elasticsearch
        - r3.2xlarge.elasticsearch
        - r3.4xlarge.elasticsearch
        - r3.8xlarge.elasticsearch
        - i2.xlarge.elasticsearch
        - i2.2xlarge.elasticsearch
        - d2.xlarge.elasticsearch
        - d2.2xlarge.elasticsearch
        - d2.4xlarge.elasticsearch
        - d2.8xlarge.elasticsearch
        - c4.large.elasticsearch
        - c4.xlarge.elasticsearch
        - c4.2xlarge.elasticsearch
        - c4.4xlarge.elasticsearch
        - c4.8xlarge.elasticsearch
        - r4.large.elasticsearch
        - r4.xlarge.elasticsearch
        - r4.2xlarge.elasticsearch
        - r4.4xlarge.elasticsearch
        - r4.8xlarge.elasticsearch
        - r4.16xlarge.elasticsearch
        - i3.large.elasticsearch
        - i3.xlarge.elasticsearch
        - i3.2xlarge.elasticsearch
        - i3.4xlarge.elasticsearch
        - i3.8xlarge.elasticsearch
        - i3.16xlarge.elasticsearch
    IntegerClass:
      type: integer
    Boolean:
      type: boolean
    ZoneAwarenessConfig:
      type: object
      properties:
        AvailabilityZoneCount:
          $ref: '#/components/schemas/IntegerClass'
          description: An integer value to indicate the number of availability zones for a domain when zone awareness is enabled. This should be equal to number of subnets if VPC endpoints is enabled
      description: 'Specifies the zone awareness configuration for the domain cluster, such as the number of availability zones.'
    ESWarmPartitionInstanceType:
      type: string
      enum:
        - ultrawarm1.medium.elasticsearch
        - ultrawarm1.large.elasticsearch
    ColdStorageOptions:
      type: object
      required:
        - Enabled
      properties:
        Enabled:
          $ref: '#/components/schemas/Boolean'
          description: True to enable cold storage for an Elasticsearch domain.
      description: Specifies settings for cold storage.
    VolumeType:
      type: string
      enum:
        - standard
        - gp2
        - io1
      description: ' The type of EBS volume, standard, gp2, or io1. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-ebs" target="_blank">Configuring EBS-based Storage</a>for more information.'
    StringList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    UserPoolId:
      type: string
      pattern: '[\w-]+_[0-9a-zA-Z]+'
      minLength: 1
      maxLength: 55
    IdentityPoolId:
      type: string
      pattern: '[\w-]+:[0-9a-f-]+'
      minLength: 1
      maxLength: 55
    RoleArn:
      type: string
      minLength: 20
      maxLength: 2048
    KmsKeyId:
      type: string
      minLength: 1
      maxLength: 500
    String:
      type: string
    LogPublishingOption:
      type: object
      properties:
        CloudWatchLogsLogGroupArn:
          $ref: '#/components/schemas/CloudWatchLogsLogGroupArn'
        Enabled:
          $ref: '#/components/schemas/Boolean'
          description: ' Specifies whether given log publishing option is enabled or not.'
      description: 'Log Publishing option that is set for given domain. <br/>Attributes and their details: <ul> <li>CloudWatchLogsLogGroupArn: ARN of the Cloudwatch log group to which log needs to be published.</li> <li>Enabled: Whether the log publishing for given log type is enabled or not</li> </ul> '
    TLSSecurityPolicy:
      type: string
      enum:
        - Policy-Min-TLS-1-0-2019-07
        - Policy-Min-TLS-1-2-2019-07
    DomainNameFqdn:
      type: string
      pattern: '^(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$'
      minLength: 1
      maxLength: 255
    ARN:
      type: string
      description: 'The Amazon Resource Name (ARN) of the Elasticsearch domain. See <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html" target="_blank">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access Management</i> for more information.'
    MasterUserOptions:
      type: object
      properties:
        MasterUserARN:
          $ref: '#/components/schemas/ARN'
          description: ARN for the master user (if IAM is enabled).
        MasterUserName:
          $ref: '#/components/schemas/Username'
          description: 'The master user''s username, which is stored in the Amazon Elasticsearch Service domain''s internal database.'
        MasterUserPassword:
          $ref: '#/components/schemas/Password'
          description: 'The master user''s password, which is stored in the Amazon Elasticsearch Service domain''s internal database.'
      description: 'Credentials for the master user: username and password, ARN, or both.'
    SAMLOptionsInput:
      type: object
      properties:
        Enabled:
          $ref: '#/components/schemas/Boolean'
          description: True if SAML is enabled.
        Idp:
          $ref: '#/components/schemas/SAMLIdp'
          description: Specifies the SAML Identity Provider's information.
        MasterUserName:
          $ref: '#/components/schemas/Username'
          description: 'The SAML master username, which is stored in the Amazon Elasticsearch Service domain''s internal database.'
        MasterBackendRole:
          $ref: '#/components/schemas/BackendRole'
          description: The backend role to which the SAML master user is mapped to.
        SubjectKey:
          $ref: '#/components/schemas/String'
          description: The key to use for matching the SAML Subject attribute.
        RolesKey:
          $ref: '#/components/schemas/String'
          description: The key to use for matching the SAML Roles attribute.
        SessionTimeoutMinutes:
          $ref: '#/components/schemas/IntegerClass'
          description: 'The duration, in minutes, after which a user session becomes inactive. Acceptable values are between 1 and 1440, and the default value is 60.'
      description: Specifies the SAML application configuration for the domain.
    AutoTuneDesiredState:
      type: string
      enum:
        - ENABLED
        - DISABLED
      description: 'Specifies the Auto-Tune desired state. Valid values are ENABLED, DISABLED.'
    AutoTuneMaintenanceScheduleList:
      type: array
      items:
        $ref: '#/components/schemas/AutoTuneMaintenanceSchedule'
      maxItems: 100
    InvalidTypeException: {}
    ResourceAlreadyExistsException: {}
    CreateOutboundCrossClusterSearchConnectionResponse:
      type: object
      properties:
        SourceDomainInfo:
          $ref: '#/components/schemas/DomainInformation'
          description: Specifies the <code><a>DomainInformation</a></code> for the source Elasticsearch domain.
        DestinationDomainInfo:
          $ref: '#/components/schemas/DomainInformation'
          description: Specifies the <code><a>DomainInformation</a></code> for the destination Elasticsearch domain.
        ConnectionAlias:
          $ref: '#/components/schemas/ConnectionAlias'
          description: Specifies the connection alias provided during the create connection request.
        ConnectionStatus:
          $ref: '#/components/schemas/OutboundCrossClusterSearchConnectionStatus'
          description: Specifies the <code><a>OutboundCrossClusterSearchConnectionStatus</a></code> for the newly created connection.
        CrossClusterSearchConnectionId:
          $ref: '#/components/schemas/CrossClusterSearchConnectionId'
          description: 'Unique id for the created outbound connection, which is used for subsequent operations on connection.'
      description: The result of a <code><a>CreateOutboundCrossClusterSearchConnection</a></code> request. Contains the details of the newly created cross-cluster search connection.
    OwnerId:
      type: string
      minLength: 12
      maxLength: 12
    DomainName:
      type: string
      pattern: '[a-z][a-z0-9\-]+'
      description: 'The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).'
      minLength: 3
      maxLength: 28
    Region:
      type: string
    CreatePackageResponse:
      type: object
      properties:
        PackageDetails:
          $ref: '#/components/schemas/PackageDetails'
          description: Information about the package <code>PackageDetails</code>.
      description: ' Container for response returned by <code> <a>CreatePackage</a> </code> operation. '
    S3BucketName:
      type: string
      minLength: 3
      maxLength: 63
    S3Key:
      type: string
    DeleteElasticsearchDomainResponse:
      type: object
      properties:
        DomainStatus:
          $ref: '#/components/schemas/ElasticsearchDomainStatus'
          description: The status of the Elasticsearch domain being deleted.
      description: 'The result of a <code>DeleteElasticsearchDomain</code> request. Contains the status of the pending deletion, or no status if the domain and all of its resources have been deleted.'
    DeleteInboundCrossClusterSearchConnectionResponse:
      type: object
      properties:
        CrossClusterSearchConnection:
          $ref: '#/components/schemas/InboundCrossClusterSearchConnection'
          description: 'Specifies the <code><a>InboundCrossClusterSearchConnection</a></code> of deleted inbound connection. '
      description: The result of a <code><a>DeleteInboundCrossClusterSearchConnection</a></code> operation. Contains details of deleted inbound connection.
    DeleteOutboundCrossClusterSearchConnectionResponse:
      type: object
      properties:
        CrossClusterSearchConnection:
          $ref: '#/components/schemas/OutboundCrossClusterSearchConnection'
          description: 'Specifies the <code><a>OutboundCrossClusterSearchConnection</a></code> of deleted outbound connection. '
      description: The result of a <code><a>DeleteOutboundCrossClusterSearchConnection</a></code> operation. Contains details of deleted outbound connection.
    DeletePackageResponse:
      type: object
      properties:
        PackageDetails:
          $ref: '#/components/schemas/PackageDetails'
          description: <code>PackageDetails</code>
      description: ' Container for response parameters to <code> <a>DeletePackage</a> </code> operation. '
    DescribeDomainAutoTunesResponse:
      type: object
      properties:
        AutoTunes:
          $ref: '#/components/schemas/AutoTuneList'
          description: 'Specifies the list of setting adjustments that Auto-Tune has made to the domain. See the <a href="https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/auto-tune.html" target="_blank">Developer Guide</a> for more information.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: Specifies an identifier to allow retrieval of paginated results.
      description: 'The result of <code>DescribeDomainAutoTunes</code> request. See the <a href="https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/auto-tune.html" target="_blank">Developer Guide</a> for more information. '
    DescribeElasticsearchDomainResponse:
      type: object
      required:
        - DomainStatus
      properties:
        DomainStatus:
          $ref: '#/components/schemas/ElasticsearchDomainStatus'
          description: The current status of the Elasticsearch domain.
      description: The result of a <code>DescribeElasticsearchDomain</code> request. Contains the status of the domain specified in the request.
    DescribeElasticsearchDomainConfigResponse:
      type: object
      required:
        - DomainConfig
      properties:
        DomainConfig:
          $ref: '#/components/schemas/ElasticsearchDomainConfig'
          description: The configuration information of the domain requested in the <code>DescribeElasticsearchDomainConfig</code> request.
      description: The result of a <code>DescribeElasticsearchDomainConfig</code> request. Contains the configuration information of the requested domain.
    DescribeElasticsearchDomainsResponse:
      type: object
      required:
        - DomainStatusList
      properties:
        DomainStatusList:
          $ref: '#/components/schemas/ElasticsearchDomainStatusList'
          description: The status of the domains requested in the <code>DescribeElasticsearchDomains</code> request.
      description: The result of a <code>DescribeElasticsearchDomains</code> request. Contains the status of the specified domains or all domains owned by the account.
    DescribeElasticsearchInstanceTypeLimitsResponse:
      type: object
      properties:
        LimitsByRole:
          $ref: '#/components/schemas/LimitsByRole'
      description: ' Container for the parameters received from <code> <a>DescribeElasticsearchInstanceTypeLimits</a> </code> operation. '
    DescribeInboundCrossClusterSearchConnectionsResponse:
      type: object
      properties:
        CrossClusterSearchConnections:
          $ref: '#/components/schemas/InboundCrossClusterSearchConnections'
          description: Consists of list of <code><a>InboundCrossClusterSearchConnection</a></code> matching the specified filter criteria.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If more results are available and NextToken is present, make the next request to the same API with the received NextToken to paginate the remaining results. '
      description: The result of a <code><a>DescribeInboundCrossClusterSearchConnections</a></code> request. Contains the list of connections matching the filter criteria.
    Filter:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/NonEmptyString'
          description: ' Specifies the name of the filter. '
        Values:
          $ref: '#/components/schemas/ValueStringList'
          description: ' Contains one or more values for the filter. '
      description: ' A filter used to limit results when describing inbound or outbound cross-cluster search connections. Multiple values can be specified per filter. A cross-cluster search connection must match at least one of the specified values for it to be returned from an operation. '
    InvalidPaginationTokenException: {}
    DescribeOutboundCrossClusterSearchConnectionsResponse:
      type: object
      properties:
        CrossClusterSearchConnections:
          $ref: '#/components/schemas/OutboundCrossClusterSearchConnections'
          description: Consists of list of <code><a>OutboundCrossClusterSearchConnection</a></code> matching the specified filter criteria.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If more results are available and NextToken is present, make the next request to the same API with the received NextToken to paginate the remaining results. '
      description: The result of a <code><a>DescribeOutboundCrossClusterSearchConnections</a></code> request. Contains the list of connections matching the filter criteria.
    DescribePackagesResponse:
      type: object
      properties:
        PackageDetailsList:
          $ref: '#/components/schemas/PackageDetailsList'
          description: List of <code>PackageDetails</code> objects.
        NextToken:
          $ref: '#/components/schemas/String'
      description: ' Container for response returned by <code> <a>DescribePackages</a> </code> operation. '
    DescribePackagesFilter:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/DescribePackagesFilterName'
          description: Any field from <code>PackageDetails</code>.
        Value:
          $ref: '#/components/schemas/DescribePackagesFilterValues'
          description: A list of values for the specified field.
      description: Filter to apply in <code>DescribePackage</code> response.
    DescribeReservedElasticsearchInstanceOfferingsResponse:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: Provides an identifier to allow retrieval of paginated results.
        ReservedElasticsearchInstanceOfferings:
          $ref: '#/components/schemas/ReservedElasticsearchInstanceOfferingList'
          description: List of reserved Elasticsearch instance offerings
      description: Container for results from <code>DescribeReservedElasticsearchInstanceOfferings</code>
    DescribeReservedElasticsearchInstancesResponse:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/String'
          description: Provides an identifier to allow retrieval of paginated results.
        ReservedElasticsearchInstances:
          $ref: '#/components/schemas/ReservedElasticsearchInstanceList'
          description: List of reserved Elasticsearch instances.
      description: Container for results from <code>DescribeReservedElasticsearchInstances</code>
    DissociatePackageResponse:
      type: object
      properties:
        DomainPackageDetails:
          $ref: '#/components/schemas/DomainPackageDetails'
          description: <code>DomainPackageDetails</code>
      description: ' Container for response returned by <code> <a>DissociatePackage</a> </code> operation. '
    GetCompatibleElasticsearchVersionsResponse:
      type: object
      properties:
        CompatibleElasticsearchVersions:
          $ref: '#/components/schemas/CompatibleElasticsearchVersionsList'
          description: ' A map of compatible Elasticsearch versions returned as part of the <code> <a>GetCompatibleElasticsearchVersions</a> </code> operation. '
      description: ' Container for response returned by <code> <a>GetCompatibleElasticsearchVersions</a> </code> operation. '
    GetPackageVersionHistoryResponse:
      type: object
      properties:
        PackageID:
          $ref: '#/components/schemas/PackageID'
        PackageVersionHistoryList:
          $ref: '#/components/schemas/PackageVersionHistoryList'
          description: List of <code>PackageVersionHistory</code> objects.
        NextToken:
          $ref: '#/components/schemas/String'
      description: ' Container for response returned by <code> <a>GetPackageVersionHistory</a> </code> operation. '
    GetUpgradeHistoryResponse:
      type: object
      properties:
        UpgradeHistories:
          $ref: '#/components/schemas/UpgradeHistoryList'
          description: ' A list of <code> <a>UpgradeHistory</a> </code> objects corresponding to each Upgrade or Upgrade Eligibility Check performed on a domain returned as part of <code> <a>GetUpgradeHistoryResponse</a> </code> object. '
        NextToken:
          $ref: '#/components/schemas/String'
          description: Pagination token that needs to be supplied to the next call to get the next page of results
      description: ' Container for response returned by <code> <a>GetUpgradeHistory</a> </code> operation. '
    GetUpgradeStatusResponse:
      type: object
      properties:
        UpgradeStep:
          $ref: '#/components/schemas/UpgradeStep'
          description: ' Represents one of 3 steps that an Upgrade or Upgrade Eligibility Check does through: <ul> <li>PreUpgradeCheck</li> <li>Snapshot</li> <li>Upgrade</li> </ul> '
        StepStatus:
          $ref: '#/components/schemas/UpgradeStatus'
          description: ' One of 4 statuses that a step can go through returned as part of the <code> <a>GetUpgradeStatusResponse</a> </code> object. The status can take one of the following values: <ul> <li>In Progress</li> <li>Succeeded</li> <li>Succeeded with Issues</li> <li>Failed</li> </ul> '
        UpgradeName:
          $ref: '#/components/schemas/UpgradeName'
          description: A string that describes the update briefly
      description: ' Container for response returned by <code> <a>GetUpgradeStatus</a> </code> operation. '
    ListDomainNamesResponse:
      type: object
      properties:
        DomainNames:
          $ref: '#/components/schemas/DomainInfoList'
          description: List of Elasticsearch domain names.
      description: The result of a <code>ListDomainNames</code> operation. Contains the names of all Elasticsearch domains owned by this account.
    ListDomainsForPackageResponse:
      type: object
      properties:
        DomainPackageDetailsList:
          $ref: '#/components/schemas/DomainPackageDetailsList'
          description: List of <code>DomainPackageDetails</code> objects.
        NextToken:
          $ref: '#/components/schemas/String'
      description: ' Container for response parameters to <code> <a>ListDomainsForPackage</a> </code> operation. '
    ListElasticsearchInstanceTypesResponse:
      type: object
      properties:
        ElasticsearchInstanceTypes:
          $ref: '#/components/schemas/ElasticsearchInstanceTypeList'
          description: ' List of instance types supported by Amazon Elasticsearch service for given <code> <a>ElasticsearchVersion</a> </code> '
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'In case if there are more results available NextToken would be present, make further request to the same API with received NextToken to paginate remaining results. '
      description: ' Container for the parameters returned by <code> <a>ListElasticsearchInstanceTypes</a> </code> operation. '
    ListElasticsearchVersionsResponse:
      type: object
      properties:
        ElasticsearchVersions:
          $ref: '#/components/schemas/ElasticsearchVersionList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
      description: ' Container for the parameters for response received from <code> <a>ListElasticsearchVersions</a> </code> operation. '
    ListPackagesForDomainResponse:
      type: object
      properties:
        DomainPackageDetailsList:
          $ref: '#/components/schemas/DomainPackageDetailsList'
          description: List of <code>DomainPackageDetails</code> objects.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Pagination token that needs to be supplied to the next call to get the next page of results.
      description: ' Container for response parameters to <code> <a>ListPackagesForDomain</a> </code> operation. '
    ListTagsResponse:
      type: object
      properties:
        TagList:
          $ref: '#/components/schemas/TagList'
          description: ' List of <code>Tag</code> for the requested Elasticsearch domain.'
      description: The result of a <code>ListTags</code> operation. Contains tags for all requested Elasticsearch domains.
    PurchaseReservedElasticsearchInstanceOfferingResponse:
      type: object
      properties:
        ReservedElasticsearchInstanceId:
          $ref: '#/components/schemas/GUID'
          description: Details of the reserved Elasticsearch instance which was purchased.
        ReservationName:
          $ref: '#/components/schemas/ReservationToken'
          description: The customer-specified identifier used to track this reservation.
      description: Represents the output of a <code>PurchaseReservedElasticsearchInstanceOffering</code> operation.
    RejectInboundCrossClusterSearchConnectionResponse:
      type: object
      properties:
        CrossClusterSearchConnection:
          $ref: '#/components/schemas/InboundCrossClusterSearchConnection'
          description: 'Specifies the <code><a>InboundCrossClusterSearchConnection</a></code> of rejected inbound connection. '
      description: The result of a <code><a>RejectInboundCrossClusterSearchConnection</a></code> operation. Contains details of rejected inbound connection.
    StartElasticsearchServiceSoftwareUpdateResponse:
      type: object
      properties:
        ServiceSoftwareOptions:
          $ref: '#/components/schemas/ServiceSoftwareOptions'
          description: The current status of the Elasticsearch service software update.
      description: The result of a <code>StartElasticsearchServiceSoftwareUpdate</code> operation. Contains the status of the update.
    UpdateElasticsearchDomainConfigResponse:
      type: object
      required:
        - DomainConfig
      properties:
        DomainConfig:
          $ref: '#/components/schemas/ElasticsearchDomainConfig'
          description: 'The status of the updated Elasticsearch domain. '
      description: The result of an <code>UpdateElasticsearchDomain</code> request. Contains the status of the Elasticsearch domain being updated.
    RollbackOnDisable:
      type: string
      enum:
        - NO_ROLLBACK
        - DEFAULT_ROLLBACK
      description: 'Specifies the rollback state while disabling Auto-Tune for the domain. Valid values are NO_ROLLBACK, DEFAULT_ROLLBACK.'
    UpdatePackageResponse:
      type: object
      properties:
        PackageDetails:
          $ref: '#/components/schemas/PackageDetails'
          description: Information about the package <code>PackageDetails</code>.
      description: ' Container for response returned by <code> <a>UpdatePackage</a> </code> operation. '
    UpgradeElasticsearchDomainResponse:
      type: object
      properties:
        DomainName:
          $ref: '#/components/schemas/DomainName'
        TargetVersion:
          $ref: '#/components/schemas/ElasticsearchVersionString'
          description: The version of Elasticsearch that you intend to upgrade the domain to.
        PerformCheckOnly:
          $ref: '#/components/schemas/Boolean'
          description: ' This flag, when set to True, indicates that an Upgrade Eligibility Check needs to be performed. This will not actually perform the Upgrade. '
      description: ' Container for response returned by <code> <a>UpgradeElasticsearchDomain</a> </code> operation. '
    CrossClusterSearchConnectionId:
      type: string
    AcceptInboundCrossClusterSearchConnectionRequest:
      type: object
      title: AcceptInboundCrossClusterSearchConnectionRequest
      properties: {}
      description: Container for the parameters to the <code><a>AcceptInboundCrossClusterSearchConnection</a></code> operation.
    InboundCrossClusterSearchConnection:
      type: object
      properties:
        SourceDomainInfo:
          $ref: '#/components/schemas/DomainInformation'
          description: Specifies the <code><a>DomainInformation</a></code> for the source Elasticsearch domain.
        DestinationDomainInfo:
          $ref: '#/components/schemas/DomainInformation'
          description: Specifies the <code><a>DomainInformation</a></code> for the destination Elasticsearch domain.
        CrossClusterSearchConnectionId:
          $ref: '#/components/schemas/CrossClusterSearchConnectionId'
          description: Specifies the connection id for the inbound cross-cluster search connection.
        ConnectionStatus:
          $ref: '#/components/schemas/InboundCrossClusterSearchConnectionStatus'
          description: Specifies the <code><a>InboundCrossClusterSearchConnectionStatus</a></code> for the outbound connection.
      description: Specifies details of an inbound connection.
    PolicyDocument:
      type: string
      description: 'Access policy rules for an Elasticsearch domain service endpoints. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-access-policies" target="_blank">Configuring Access Policies</a> in the <i>Amazon Elasticsearch Service Developer Guide</i>. The maximum size of a policy document is 100 KB.'
    OptionStatus:
      type: object
      required:
        - CreationDate
        - UpdateDate
        - State
      properties:
        CreationDate:
          $ref: '#/components/schemas/UpdateTimestamp'
          description: Timestamp which tells the creation date for the entity.
        UpdateDate:
          $ref: '#/components/schemas/UpdateTimestamp'
          description: Timestamp which tells the last updated time for the entity.
        UpdateVersion:
          $ref: '#/components/schemas/UIntValue'
          description: Specifies the latest version for the entity.
        State:
          $ref: '#/components/schemas/OptionState'
          description: Provides the <code>OptionState</code> for the Elasticsearch domain.
        PendingDeletion:
          $ref: '#/components/schemas/Boolean'
          description: Indicates whether the Elasticsearch domain is being deleted.
      description: Provides the current status of the entity.
    AccessPoliciesStatus:
      type: object
      required:
        - Options
        - Status
      properties:
        Options:
          $ref: '#/components/schemas/PolicyDocument'
          description: 'The access policy configured for the Elasticsearch domain. Access policies may be resource-based, IP-based, or IAM-based. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-access-policies" target="_blank"> Configuring Access Policies</a>for more information.'
        Status:
          $ref: '#/components/schemas/OptionStatus'
          description: 'The status of the access policy for the Elasticsearch domain. See <code>OptionStatus</code> for the status information that''s included. '
      description: 'The configured access rules for the domain''s document and search endpoints, and the current status of those rules.'
    TagList:
      type: array
      description: 'A list of <code>Tag</code> '
      items:
        $ref: '#/components/schemas/Tag'
    AddTagsRequest:
      type: object
      required:
        - ARN
        - TagList
      title: AddTagsRequest
      properties:
        ARN:
          $ref: '#/components/schemas/ARN'
          description: ' Specify the <code>ARN</code> for which you want to add the tags.'
        TagList:
          $ref: '#/components/schemas/TagList'
          description: ' List of <code>Tag</code> that need to be added for the Elasticsearch domain. '
      description: Container for the parameters to the <code><a>AddTags</a></code> operation. Specify the tags that you want to attach to the Elasticsearch domain.
    LimitName:
      type: string
    LimitValueList:
      type: array
      items:
        $ref: '#/components/schemas/LimitValue'
    AdditionalLimit:
      type: object
      properties:
        LimitName:
          $ref: '#/components/schemas/LimitName'
          description: ' Name of Additional Limit is specific to a given InstanceType and for each of it''s <code> <a>InstanceRole</a> </code> etc. <br/> Attributes and their details: <br/> <ul> <li>MaximumNumberOfDataNodesSupported</li> This attribute will be present in Master node only to specify how much data nodes upto which given <code> <a>ESPartitionInstanceType</a> </code> can support as master node. <li>MaximumNumberOfDataNodesWithoutMasterNode</li> This attribute will be present in Data node only to specify how much data nodes of given <code> <a>ESPartitionInstanceType</a> </code> upto which you don''t need any master nodes to govern them. </ul> '
        LimitValues:
          $ref: '#/components/schemas/LimitValueList'
          description: ' Value for given <code> <a>AdditionalLimit$LimitName</a> </code> . '
      description: ' List of limits that are specific to a given InstanceType and for each of it''s <code> <a>InstanceRole</a> </code> . '
    AdditionalLimitList:
      type: array
      items:
        $ref: '#/components/schemas/AdditionalLimit'
    AdvancedOptions:
      type: object
      description: '<p> Exposes select native Elasticsearch configuration values from <code>elasticsearch.yml</code>. Currently, the following advanced options are available:</p> <ul> <li>Option to allow references to indices in an HTTP request body. Must be <code>false</code> when configuring access to individual sub-resources. By default, the value is <code>true</code>. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options" target="_blank">Configuration Advanced Options</a> for more information.</li> <li>Option to specify the percentage of heap space that is allocated to field data. By default, this setting is unbounded.</li> </ul> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options">Configuring Advanced Options</a>.</p>'
      additionalProperties:
        $ref: '#/components/schemas/String'
    AdvancedOptionsStatus:
      type: object
      required:
        - Options
        - Status
      properties:
        Options:
          $ref: '#/components/schemas/AdvancedOptions'
          description: ' Specifies the status of advanced options for the specified Elasticsearch domain.'
        Status:
          $ref: '#/components/schemas/OptionStatus'
          description: ' Specifies the status of <code>OptionStatus</code> for advanced options for the specified Elasticsearch domain.'
      description: '<p> Status of the advanced options for the specified Elasticsearch domain. Currently, the following advanced options are available:</p> <ul> <li>Option to allow references to indices in an HTTP request body. Must be <code>false</code> when configuring access to individual sub-resources. By default, the value is <code>true</code>. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options" target="_blank">Configuration Advanced Options</a> for more information.</li> <li>Option to specify the percentage of heap space that is allocated to field data. By default, this setting is unbounded.</li> </ul> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options">Configuring Advanced Options</a>.</p>'
    SAMLOptionsOutput:
      type: object
      properties:
        Enabled:
          $ref: '#/components/schemas/Boolean'
          description: True if SAML is enabled.
        Idp:
          $ref: '#/components/schemas/SAMLIdp'
          description: Describes the SAML Identity Provider's information.
        SubjectKey:
          $ref: '#/components/schemas/String'
          description: The key used for matching the SAML Subject attribute.
        RolesKey:
          $ref: '#/components/schemas/String'
          description: The key used for matching the SAML Roles attribute.
        SessionTimeoutMinutes:
          $ref: '#/components/schemas/IntegerClass'
          description: 'The duration, in minutes, after which a user session becomes inactive.'
      description: Describes the SAML application configured for the domain.
    AdvancedSecurityOptions:
      type: object
      properties:
        Enabled:
          $ref: '#/components/schemas/Boolean'
          description: True if advanced security is enabled.
        InternalUserDatabaseEnabled:
          $ref: '#/components/schemas/Boolean'
          description: True if the internal user database is enabled.
        SAMLOptions:
          $ref: '#/components/schemas/SAMLOptionsOutput'
          description: Describes the SAML application configured for a domain.
      description: 'Specifies the advanced security configuration: whether advanced security is enabled, whether the internal database option is enabled.'
    AdvancedSecurityOptionsInput:
      type: object
      properties:
        Enabled:
          $ref: '#/components/schemas/Boolean'
          description: True if advanced security is enabled.
        InternalUserDatabaseEnabled:
          $ref: '#/components/schemas/Boolean'
          description: True if the internal user database is enabled.
        MasterUserOptions:
          $ref: '#/components/schemas/MasterUserOptions'
          description: 'Credentials for the master user: username and password, ARN, or both.'
        SAMLOptions:
          $ref: '#/components/schemas/SAMLOptionsInput'
          description: Specifies the SAML application configuration for the domain.
      description: 'Specifies the advanced security configuration: whether advanced security is enabled, whether the internal database option is enabled, master username and password (if internal database is enabled), and master user ARN (if IAM is enabled).'
    AdvancedSecurityOptionsStatus:
      type: object
      required:
        - Options
        - Status
      properties:
        Options:
          $ref: '#/components/schemas/AdvancedSecurityOptions'
          description: ' Specifies advanced security options for the specified Elasticsearch domain.'
        Status:
          $ref: '#/components/schemas/OptionStatus'
          description: ' Status of the advanced security options for the specified Elasticsearch domain.'
      description: ' Specifies the status of advanced security options for the specified Elasticsearch domain.'
    PackageID:
      type: string
    AssociatePackageRequest:
      type: object
      title: AssociatePackageRequest
      properties: {}
      description: ' Container for request parameters to <code> <a>AssociatePackage</a> </code> operation. '
    DomainPackageDetails:
      type: object
      properties:
        PackageID:
          $ref: '#/components/schemas/PackageID'
          description: Internal ID of the package.
        PackageName:
          $ref: '#/components/schemas/PackageName'
          description: User specified name of the package.
        PackageType:
          $ref: '#/components/schemas/PackageType'
          description: Currently supports only TXT-DICTIONARY.
        LastUpdated:
          $ref: '#/components/schemas/LastUpdated'
          description: Timestamp of the most-recent update to the association status.
        DomainName:
          $ref: '#/components/schemas/DomainName'
          description: Name of the domain you've associated a package with.
        DomainPackageStatus:
          $ref: '#/components/schemas/DomainPackageStatus'
          description: State of the association. Values are ASSOCIATING/ASSOCIATION_FAILED/ACTIVE/DISSOCIATING/DISSOCIATION_FAILED.
        PackageVersion:
          $ref: '#/components/schemas/PackageVersion'
        ReferencePath:
          $ref: '#/components/schemas/ReferencePath'
          description: 'The relative path on Amazon ES nodes, which can be used as synonym_path when the package is synonym file.'
        ErrorDetails:
          $ref: '#/components/schemas/ErrorDetails'
          description: Additional information if the package is in an error state. Null otherwise.
      description: Information on a package that is associated with a domain.
    AutoTuneType:
      type: string
      enum:
        - SCHEDULED_ACTION
      description: 'Specifies Auto-Tune type. Valid value is SCHEDULED_ACTION. '
    AutoTuneDetails:
      type: object
      properties:
        ScheduledAutoTuneDetails:
          $ref: '#/components/schemas/ScheduledAutoTuneDetails'
      description: 'Specifies details of the Auto-Tune action. See the <a href="https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/auto-tune.html" target="_blank">Developer Guide</a> for more information. '
    AutoTune:
      type: object
      properties:
        AutoTuneType:
          $ref: '#/components/schemas/AutoTuneType'
          description: 'Specifies Auto-Tune type. Valid value is SCHEDULED_ACTION. '
        AutoTuneDetails:
          $ref: '#/components/schemas/AutoTuneDetails'
          description: 'Specifies details of the Auto-Tune action. See the <a href="https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/auto-tune.html" target="_blank">Developer Guide</a> for more information. '
      description: 'Specifies Auto-Tune type and Auto-Tune action details. '
    AutoTuneDate:
      type: string
      description: 'Specifies timestamp for the Auto-Tune action scheduled for the domain. '
      format: date-time
    ScheduledAutoTuneDetails:
      type: object
      properties:
        Date:
          $ref: '#/components/schemas/AutoTuneDate'
          description: 'Specifies timestamp for the Auto-Tune action scheduled for the domain. '
        ActionType:
          $ref: '#/components/schemas/ScheduledAutoTuneActionType'
          description: 'Specifies Auto-Tune action type. Valid values are JVM_HEAP_SIZE_TUNING and JVM_YOUNG_GEN_TUNING. '
        Action:
          $ref: '#/components/schemas/ScheduledAutoTuneDescription'
          description: 'Specifies Auto-Tune action description. '
        Severity:
          $ref: '#/components/schemas/ScheduledAutoTuneSeverityType'
          description: 'Specifies Auto-Tune action severity. Valid values are LOW, MEDIUM and HIGH. '
      description: 'Specifies details of the scheduled Auto-Tune action. See the <a href="https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/auto-tune.html" target="_blank">Developer Guide</a> for more information. '
    AutoTuneList:
      type: array
      items:
        $ref: '#/components/schemas/AutoTune'
    StartAt:
      type: string
      format: date-time
    Duration:
      type: object
      properties:
        Value:
          $ref: '#/components/schemas/DurationValue'
          description: ' Integer to specify the value of a maintenance schedule duration. See the <a href="https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/auto-tune.html" target="_blank">Developer Guide</a> for more information.'
        Unit:
          $ref: '#/components/schemas/TimeUnit'
          description: 'Specifies the unit of a maintenance schedule duration. Valid value is HOURS. See the <a href="https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/auto-tune.html" target="_blank">Developer Guide</a> for more information.'
      description: 'Specifies maintenance schedule duration: duration value and duration unit. See the <a href="https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/auto-tune.html" target="_blank">Developer Guide</a> for more information.'
    AutoTuneMaintenanceSchedule:
      type: object
      properties:
        StartAt:
          $ref: '#/components/schemas/StartAt'
          description: 'Specifies timestamp at which Auto-Tune maintenance schedule start. '
        Duration:
          $ref: '#/components/schemas/Duration'
          description: 'Specifies maintenance schedule duration: duration value and duration unit. See the <a href="https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/auto-tune.html" target="_blank">Developer Guide</a> for more information.'
        CronExpressionForRecurrence:
          $ref: '#/components/schemas/String'
          description: 'Specifies cron expression for a recurring maintenance schedule. See the <a href="https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/auto-tune.html" target="_blank">Developer Guide</a> for more information.'
      description: 'Specifies Auto-Tune maitenance schedule. See the <a href="https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/auto-tune.html" target="_blank">Developer Guide</a> for more information.'
    AutoTuneOptions:
      type: object
      properties:
        DesiredState:
          $ref: '#/components/schemas/AutoTuneDesiredState'
          description: 'Specifies the Auto-Tune desired state. Valid values are ENABLED, DISABLED. '
        RollbackOnDisable:
          $ref: '#/components/schemas/RollbackOnDisable'
          description: 'Specifies the rollback state while disabling Auto-Tune for the domain. Valid values are NO_ROLLBACK, DEFAULT_ROLLBACK. '
        MaintenanceSchedules:
          $ref: '#/components/schemas/AutoTuneMaintenanceScheduleList'
          description: 'Specifies list of maitenance schedules. See the <a href="https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/auto-tune.html" target="_blank">Developer Guide</a> for more information.'
      description: 'Specifies the Auto-Tune options: the Auto-Tune desired state for the domain, rollback state when disabling Auto-Tune options and list of maintenance schedules.'
    AutoTuneOptionsInput:
      type: object
      properties:
        DesiredState:
          $ref: '#/components/schemas/AutoTuneDesiredState'
          description: 'Specifies the Auto-Tune desired state. Valid values are ENABLED, DISABLED. '
        MaintenanceSchedules:
          $ref: '#/components/schemas/AutoTuneMaintenanceScheduleList'
          description: 'Specifies list of maitenance schedules. See the <a href="https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/auto-tune.html" target="_blank">Developer Guide</a> for more information.'
      description: 'Specifies the Auto-Tune options: the Auto-Tune desired state for the domain and list of maintenance schedules.'
    AutoTuneState:
      type: string
      enum:
        - ENABLED
        - DISABLED
        - ENABLE_IN_PROGRESS
        - DISABLE_IN_PROGRESS
        - DISABLED_AND_ROLLBACK_SCHEDULED
        - DISABLED_AND_ROLLBACK_IN_PROGRESS
        - DISABLED_AND_ROLLBACK_COMPLETE
        - DISABLED_AND_ROLLBACK_ERROR
        - ERROR
      description: 'Specifies the Auto-Tune state for the Elasticsearch domain. For valid states see the <a href="https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/auto-tune.html" target="_blank">Developer Guide</a>.'
    AutoTuneOptionsOutput:
      type: object
      properties:
        State:
          $ref: '#/components/schemas/AutoTuneState'
          description: Specifies the <code>AutoTuneState</code> for the Elasticsearch domain.
        ErrorMessage:
          $ref: '#/components/schemas/String'
          description: Specifies the error message while enabling or disabling the Auto-Tune.
      description: 'Specifies the Auto-Tune options: the Auto-Tune desired state for the domain and list of maintenance schedules.'
    AutoTuneStatus:
      type: object
      required:
        - CreationDate
        - UpdateDate
        - State
      properties:
        CreationDate:
          $ref: '#/components/schemas/UpdateTimestamp'
          description: Timestamp which tells Auto-Tune options creation date .
        UpdateDate:
          $ref: '#/components/schemas/UpdateTimestamp'
          description: Timestamp which tells Auto-Tune options last updated time.
        UpdateVersion:
          $ref: '#/components/schemas/UIntValue'
          description: Specifies the Auto-Tune options latest version.
        State:
          $ref: '#/components/schemas/AutoTuneState'
          description: Specifies the <code>AutoTuneState</code> for the Elasticsearch domain.
        ErrorMessage:
          $ref: '#/components/schemas/String'
          description: Specifies the error message while enabling or disabling the Auto-Tune options.
        PendingDeletion:
          $ref: '#/components/schemas/Boolean'
          description: Indicates whether the Elasticsearch domain is being deleted.
      description: 'Provides the current status of the Auto-Tune options. '
    AutoTuneOptionsStatus:
      type: object
      properties:
        Options:
          $ref: '#/components/schemas/AutoTuneOptions'
          description: ' Specifies Auto-Tune options for the specified Elasticsearch domain.'
        Status:
          $ref: '#/components/schemas/AutoTuneStatus'
          description: ' Specifies Status of the Auto-Tune options for the specified Elasticsearch domain.'
      description: ' Specifies the status of Auto-Tune options for the specified Elasticsearch domain.'
    UpdateTimestamp:
      type: string
      format: date-time
    UIntValue:
      type: integer
      minimum: 0
    BackendRole:
      type: string
      minLength: 1
      maxLength: 256
    CancelElasticsearchServiceSoftwareUpdateRequest:
      type: object
      required:
        - DomainName
      title: CancelElasticsearchServiceSoftwareUpdateRequest
      properties:
        DomainName:
          $ref: '#/components/schemas/DomainName'
          description: The name of the domain that you want to stop the latest service software update on.
      description: Container for the parameters to the <code><a>CancelElasticsearchServiceSoftwareUpdate</a></code> operation. Specifies the name of the Elasticsearch domain that you wish to cancel a service software update on.
    ServiceSoftwareOptions:
      type: object
      properties:
        CurrentVersion:
          $ref: '#/components/schemas/String'
          description: The current service software version that is present on the domain.
        NewVersion:
          $ref: '#/components/schemas/String'
          description: The new service software version if one is available.
        UpdateAvailable:
          $ref: '#/components/schemas/Boolean'
          description: '<code>True</code> if you are able to update you service software version. <code>False</code> if you are not able to update your service software version. '
        Cancellable:
          $ref: '#/components/schemas/Boolean'
          description: '<code>True</code> if you are able to cancel your service software version update. <code>False</code> if you are not able to cancel your service software version. '
        UpdateStatus:
          $ref: '#/components/schemas/DeploymentStatus'
          description: 'The status of your service software update. This field can take the following values: <code>ELIGIBLE</code>, <code>PENDING_UPDATE</code>, <code>IN_PROGRESS</code>, <code>COMPLETED</code>, and <code>NOT_ELIGIBLE</code>.'
        Description:
          $ref: '#/components/schemas/String'
          description: The description of the <code>UpdateStatus</code>.
        AutomatedUpdateDate:
          $ref: '#/components/schemas/DeploymentCloseDateTimeStamp'
          description: 'Timestamp, in Epoch time, until which you can manually request a service software update. After this date, we automatically update your service software.'
        OptionalDeployment:
          $ref: '#/components/schemas/Boolean'
          description: '<code>True</code> if a service software is never automatically updated. <code>False</code> if a service software is automatically updated after <code>AutomatedUpdateDate</code>. '
      description: The current options of an Elasticsearch domain service software options.
    CloudWatchLogsLogGroupArn:
      type: string
      description: ARN of the Cloudwatch log group to which log needs to be published.
    CognitoOptions:
      type: object
      properties:
        Enabled:
          $ref: '#/components/schemas/Boolean'
          description: Specifies the option to enable Cognito for Kibana authentication.
        UserPoolId:
          $ref: '#/components/schemas/UserPoolId'
          description: Specifies the Cognito user pool ID for Kibana authentication.
        IdentityPoolId:
          $ref: '#/components/schemas/IdentityPoolId'
          description: Specifies the Cognito identity pool ID for Kibana authentication.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: Specifies the role ARN that provides Elasticsearch permissions for accessing Cognito resources.
      description: 'Options to specify the Cognito user and identity pools for Kibana authentication. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-cognito-auth.html" target="_blank">Amazon Cognito Authentication for Kibana</a>.'
    CognitoOptionsStatus:
      type: object
      required:
        - Options
        - Status
      properties:
        Options:
          $ref: '#/components/schemas/CognitoOptions'
          description: Specifies the Cognito options for the specified Elasticsearch domain.
        Status:
          $ref: '#/components/schemas/OptionStatus'
          description: Specifies the status of the Cognito options for the specified Elasticsearch domain.
      description: Status of the Cognito options for the specified Elasticsearch domain.
    CommitMessage:
      type: string
      maxLength: 160
    CompatibleVersionsMap:
      type: object
      properties:
        SourceVersion:
          $ref: '#/components/schemas/ElasticsearchVersionString'
          description: The current version of Elasticsearch on which a domain is.
        TargetVersions:
          $ref: '#/components/schemas/ElasticsearchVersionList'
      description: ' A map from an <code> <a>ElasticsearchVersion</a> </code> to a list of compatible <code> <a>ElasticsearchVersion</a> </code> s to which the domain can be upgraded. '
    CompatibleElasticsearchVersionsList:
      type: array
      items:
        $ref: '#/components/schemas/CompatibleVersionsMap'
    ElasticsearchVersionString:
      type: string
    ElasticsearchVersionList:
      type: array
      description: 'List of supported elastic search versions. '
      items:
        $ref: '#/components/schemas/ElasticsearchVersionString'
    ConnectionAlias:
      type: string
      maxLength: 20
    ElasticsearchClusterConfig:
      type: object
      properties:
        InstanceType:
          $ref: '#/components/schemas/ESPartitionInstanceType'
          description: The instance type for an Elasticsearch cluster. UltraWarm instance types are not supported for data instances.
        InstanceCount:
          $ref: '#/components/schemas/IntegerClass'
          description: The number of instances in the specified domain cluster.
        DedicatedMasterEnabled:
          $ref: '#/components/schemas/Boolean'
          description: 'A boolean value to indicate whether a dedicated master node is enabled. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-managedomains.html#es-managedomains-dedicatedmasternodes" target="_blank">About Dedicated Master Nodes</a> for more information.'
        ZoneAwarenessEnabled:
          $ref: '#/components/schemas/Boolean'
          description: 'A boolean value to indicate whether zone awareness is enabled. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-managedomains.html#es-managedomains-zoneawareness" target="_blank">About Zone Awareness</a> for more information.'
        ZoneAwarenessConfig:
          $ref: '#/components/schemas/ZoneAwarenessConfig'
          description: Specifies the zone awareness configuration for a domain when zone awareness is enabled.
        DedicatedMasterType:
          $ref: '#/components/schemas/ESPartitionInstanceType'
          description: The instance type for a dedicated master node.
        DedicatedMasterCount:
          $ref: '#/components/schemas/IntegerClass'
          description: 'Total number of dedicated master nodes, active and on standby, for the cluster.'
        WarmEnabled:
          $ref: '#/components/schemas/Boolean'
          description: True to enable warm storage.
        WarmType:
          $ref: '#/components/schemas/ESWarmPartitionInstanceType'
          description: The instance type for the Elasticsearch cluster's warm nodes.
        WarmCount:
          $ref: '#/components/schemas/IntegerClass'
          description: The number of warm nodes in the cluster.
        ColdStorageOptions:
          $ref: '#/components/schemas/ColdStorageOptions'
          description: Specifies the <code>ColdStorageOptions</code> configuration for an Elasticsearch domain.
      description: 'Specifies the configuration for the domain cluster, such as the type and number of instances.'
    EBSOptions:
      type: object
      properties:
        EBSEnabled:
          $ref: '#/components/schemas/Boolean'
          description: Specifies whether EBS-based storage is enabled.
        VolumeType:
          $ref: '#/components/schemas/VolumeType'
          description: ' Specifies the volume type for EBS-based storage.'
        VolumeSize:
          $ref: '#/components/schemas/IntegerClass'
          description: ' Integer to specify the size of an EBS volume.'
        Iops:
          $ref: '#/components/schemas/IntegerClass'
          description: Specifies the IOPD for a Provisioned IOPS EBS volume (SSD).
      description: 'Options to enable, disable, and specify the properties of EBS storage volumes. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-ebs" target="_blank"> Configuring EBS-based Storage</a>.'
    SnapshotOptions:
      type: object
      properties:
        AutomatedSnapshotStartHour:
          $ref: '#/components/schemas/IntegerClass'
          description: 'Specifies the time, in UTC format, when the service takes a daily automated snapshot of the specified Elasticsearch domain. Default value is <code>0</code> hours.'
      description: 'Specifies the time, in UTC format, when the service takes a daily automated snapshot of the specified Elasticsearch domain. Default value is <code>0</code> hours.'
    VPCOptions:
      type: object
      properties:
        SubnetIds:
          $ref: '#/components/schemas/StringList'
          description: Specifies the subnets for VPC endpoint.
        SecurityGroupIds:
          $ref: '#/components/schemas/StringList'
          description: Specifies the security groups for VPC endpoint.
      description: 'Options to specify the subnets and security groups for VPC endpoint. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html" target="_blank"> VPC Endpoints for Amazon Elasticsearch Service Domains</a>.'
    EncryptionAtRestOptions:
      type: object
      properties:
        Enabled:
          $ref: '#/components/schemas/Boolean'
          description: Specifies the option to enable Encryption At Rest.
        KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: ' Specifies the KMS Key ID for Encryption At Rest options.'
      description: Specifies the Encryption At Rest Options.
    NodeToNodeEncryptionOptions:
      type: object
      properties:
        Enabled:
          $ref: '#/components/schemas/Boolean'
          description: Specify true to enable node-to-node encryption.
      description: Specifies the node-to-node encryption options.
    LogPublishingOptions:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/LogPublishingOption'
    DomainEndpointOptions:
      type: object
      properties:
        EnforceHTTPS:
          $ref: '#/components/schemas/Boolean'
          description: Specify if only HTTPS endpoint should be enabled for the Elasticsearch domain.
        TLSSecurityPolicy:
          $ref: '#/components/schemas/TLSSecurityPolicy'
          description: 'Specify the TLS security policy that needs to be applied to the HTTPS endpoint of Elasticsearch domain. <br/> It can be one of the following values: <ul> <li><b>Policy-Min-TLS-1-0-2019-07: </b> TLS security policy which supports TLSv1.0 and higher.</li> <li><b>Policy-Min-TLS-1-2-2019-07: </b> TLS security policy which supports only TLSv1.2</li> </ul> '
        CustomEndpointEnabled:
          $ref: '#/components/schemas/Boolean'
          description: Specify if custom endpoint should be enabled for the Elasticsearch domain.
        CustomEndpoint:
          $ref: '#/components/schemas/DomainNameFqdn'
          description: Specify the fully qualified domain for your custom endpoint.
        CustomEndpointCertificateArn:
          $ref: '#/components/schemas/ARN'
          description: Specify ACM certificate ARN for your custom endpoint.
      description: Options to configure endpoint for the Elasticsearch domain.
    CreateElasticsearchDomainRequest:
      type: object
      required:
        - DomainName
      title: CreateElasticsearchDomainRequest
      properties:
        DomainName:
          $ref: '#/components/schemas/DomainName'
          description: 'The name of the Elasticsearch domain that you are creating. Domain names are unique across the domains owned by an account within an AWS region. Domain names must start with a lowercase letter and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).'
        ElasticsearchVersion:
          $ref: '#/components/schemas/ElasticsearchVersionString'
          description: 'String of format X.Y to specify version for the Elasticsearch domain eg. "1.5" or "2.3". For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomains" target="_blank">Creating Elasticsearch Domains</a> in the <i>Amazon Elasticsearch Service Developer Guide</i>.'
        ElasticsearchClusterConfig:
          $ref: '#/components/schemas/ElasticsearchClusterConfig'
          description: 'Configuration options for an Elasticsearch domain. Specifies the instance type and number of instances in the domain cluster. '
        EBSOptions:
          $ref: '#/components/schemas/EBSOptions'
          description: 'Options to enable, disable and specify the type and size of EBS storage volumes. '
        AccessPolicies:
          $ref: '#/components/schemas/PolicyDocument'
          description: ' IAM access policy as a JSON-formatted string.'
        SnapshotOptions:
          $ref: '#/components/schemas/SnapshotOptions'
          description: 'Option to set time, in UTC format, of the daily automated snapshot. Default value is 0 hours. '
        VPCOptions:
          $ref: '#/components/schemas/VPCOptions'
          description: 'Options to specify the subnets and security groups for VPC endpoint. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html#es-creating-vpc" target="_blank">Creating a VPC</a> in <i>VPC Endpoints for Amazon Elasticsearch Service Domains</i>'
        CognitoOptions:
          $ref: '#/components/schemas/CognitoOptions'
          description: 'Options to specify the Cognito user and identity pools for Kibana authentication. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-cognito-auth.html" target="_blank">Amazon Cognito Authentication for Kibana</a>.'
        EncryptionAtRestOptions:
          $ref: '#/components/schemas/EncryptionAtRestOptions'
          description: Specifies the Encryption At Rest Options.
        NodeToNodeEncryptionOptions:
          $ref: '#/components/schemas/NodeToNodeEncryptionOptions'
          description: Specifies the NodeToNodeEncryptionOptions.
        AdvancedOptions:
          $ref: '#/components/schemas/AdvancedOptions'
          description: ' Option to allow references to indices in an HTTP request body. Must be <code>false</code> when configuring access to individual sub-resources. By default, the value is <code>true</code>. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options" target="_blank">Configuration Advanced Options</a> for more information.'
        LogPublishingOptions:
          $ref: '#/components/schemas/LogPublishingOptions'
          description: 'Map of <code>LogType</code> and <code>LogPublishingOption</code>, each containing options to publish a given type of Elasticsearch log.'
        DomainEndpointOptions:
          $ref: '#/components/schemas/DomainEndpointOptions'
          description: Options to specify configuration that will be applied to the domain endpoint.
        AdvancedSecurityOptions:
          $ref: '#/components/schemas/AdvancedSecurityOptionsInput'
          description: Specifies advanced security options.
        AutoTuneOptions:
          $ref: '#/components/schemas/AutoTuneOptionsInput'
          description: Specifies Auto-Tune options.
        TagList:
          $ref: '#/components/schemas/TagList'
          description: A list of <code>Tag</code> added during domain creation.
    ElasticsearchDomainStatus:
      type: object
      required:
        - DomainId
        - DomainName
        - ARN
        - ElasticsearchClusterConfig
      properties:
        DomainId:
          $ref: '#/components/schemas/DomainId'
          description: The unique identifier for the specified Elasticsearch domain.
        DomainName:
          $ref: '#/components/schemas/DomainName'
          description: 'The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).'
        ARN:
          $ref: '#/components/schemas/ARN'
          description: 'The Amazon resource name (ARN) of an Elasticsearch domain. See <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html" target="_blank">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access Management</i> for more information.'
        Created:
          $ref: '#/components/schemas/Boolean'
          description: The domain creation status. <code>True</code> if the creation of an Elasticsearch domain is complete. <code>False</code> if domain creation is still in progress.
        Deleted:
          $ref: '#/components/schemas/Boolean'
          description: 'The domain deletion status. <code>True</code> if a delete request has been received for the domain but resource cleanup is still in progress. <code>False</code> if the domain has not been deleted. Once domain deletion is complete, the status of the domain is no longer returned.'
        Endpoint:
          $ref: '#/components/schemas/ServiceUrl'
          description: The Elasticsearch domain endpoint that you use to submit index and search requests.
        Endpoints:
          $ref: '#/components/schemas/EndpointsMap'
          description: 'Map containing the Elasticsearch domain endpoints used to submit index and search requests. Example <code>key, value</code>: <code>''vpc'',''vpc-endpoint-h2dsd34efgyghrtguk5gt6j2foh4.us-east-1.es.amazonaws.com''</code>.'
        Processing:
          $ref: '#/components/schemas/Boolean'
          description: The status of the Elasticsearch domain configuration. <code>True</code> if Amazon Elasticsearch Service is processing configuration changes. <code>False</code> if the configuration is active.
        UpgradeProcessing:
          $ref: '#/components/schemas/Boolean'
          description: The status of an Elasticsearch domain version upgrade. <code>True</code> if Amazon Elasticsearch Service is undergoing a version upgrade. <code>False</code> if the configuration is active.
        ElasticsearchVersion:
          $ref: '#/components/schemas/ElasticsearchVersionString'
        ElasticsearchClusterConfig:
          $ref: '#/components/schemas/ElasticsearchClusterConfig'
          description: The type and number of instances in the domain cluster.
        EBSOptions:
          $ref: '#/components/schemas/EBSOptions'
          description: 'The <code>EBSOptions</code> for the specified domain. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-ebs" target="_blank">Configuring EBS-based Storage</a> for more information.'
        AccessPolicies:
          $ref: '#/components/schemas/PolicyDocument'
          description: ' IAM access policy as a JSON-formatted string.'
        SnapshotOptions:
          $ref: '#/components/schemas/SnapshotOptions'
          description: Specifies the status of the <code>SnapshotOptions</code>
        VPCOptions:
          $ref: '#/components/schemas/VPCDerivedInfo'
          description: 'The <code>VPCOptions</code> for the specified domain. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html" target="_blank">VPC Endpoints for Amazon Elasticsearch Service Domains</a>.'
        CognitoOptions:
          $ref: '#/components/schemas/CognitoOptions'
          description: 'The <code>CognitoOptions</code> for the specified domain. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-cognito-auth.html" target="_blank">Amazon Cognito Authentication for Kibana</a>.'
        EncryptionAtRestOptions:
          $ref: '#/components/schemas/EncryptionAtRestOptions'
          description: ' Specifies the status of the <code>EncryptionAtRestOptions</code>.'
        NodeToNodeEncryptionOptions:
          $ref: '#/components/schemas/NodeToNodeEncryptionOptions'
          description: Specifies the status of the <code>NodeToNodeEncryptionOptions</code>.
        AdvancedOptions:
          $ref: '#/components/schemas/AdvancedOptions'
          description: Specifies the status of the <code>AdvancedOptions</code>
        LogPublishingOptions:
          $ref: '#/components/schemas/LogPublishingOptions'
          description: Log publishing options for the given domain.
        ServiceSoftwareOptions:
          $ref: '#/components/schemas/ServiceSoftwareOptions'
          description: The current status of the Elasticsearch domain's service software.
        DomainEndpointOptions:
          $ref: '#/components/schemas/DomainEndpointOptions'
          description: The current status of the Elasticsearch domain's endpoint options.
        AdvancedSecurityOptions:
          $ref: '#/components/schemas/AdvancedSecurityOptions'
          description: The current status of the Elasticsearch domain's advanced security options.
        AutoTuneOptions:
          $ref: '#/components/schemas/AutoTuneOptionsOutput'
          description: The current status of the Elasticsearch domain's Auto-Tune options.
      description: The current status of an Elasticsearch domain.
    DomainInformation:
      type: object
      required:
        - DomainName
      properties:
        OwnerId:
          $ref: '#/components/schemas/OwnerId'
        DomainName:
          $ref: '#/components/schemas/DomainName'
        Region:
          $ref: '#/components/schemas/Region'
    CreateOutboundCrossClusterSearchConnectionRequest:
      type: object
      required:
        - SourceDomainInfo
        - DestinationDomainInfo
        - ConnectionAlias
      title: CreateOutboundCrossClusterSearchConnectionRequest
      properties:
        SourceDomainInfo:
          $ref: '#/components/schemas/DomainInformation'
          description: Specifies the <code><a>DomainInformation</a></code> for the source Elasticsearch domain.
        DestinationDomainInfo:
          $ref: '#/components/schemas/DomainInformation'
          description: Specifies the <code><a>DomainInformation</a></code> for the destination Elasticsearch domain.
        ConnectionAlias:
          $ref: '#/components/schemas/ConnectionAlias'
          description: Specifies the connection alias that will be used by the customer for this connection.
      description: Container for the parameters to the <code><a>CreateOutboundCrossClusterSearchConnection</a></code> operation.
    OutboundCrossClusterSearchConnectionStatus:
      type: object
      properties:
        StatusCode:
          $ref: '#/components/schemas/OutboundCrossClusterSearchConnectionStatusCode'
          description: '<p>The state code for outbound connection. This can be one of the following:</p> <ul> <li>VALIDATING: The outbound connection request is being validated.</li> <li>VALIDATION_FAILED: Validation failed for the connection request.</li> <li>PENDING_ACCEPTANCE: Outbound connection request is validated and is not yet accepted by destination domain owner.</li> <li>PROVISIONING: Outbound connection request is in process.</li> <li>ACTIVE: Outbound connection is active and ready to use.</li> <li>REJECTED: Outbound connection request is rejected by destination domain owner.</li> <li>DELETING: Outbound connection deletion is in progress.</li> <li>DELETED: Outbound connection is deleted and cannot be used further.</li> </ul>'
        Message:
          $ref: '#/components/schemas/CrossClusterSearchConnectionStatusMessage'
          description: Specifies verbose information for the outbound connection status.
      description: Specifies the connection status of an outbound cross-cluster search connection.
    PackageName:
      type: string
      pattern: '[a-z][a-z0-9\-]+'
      minLength: 3
      maxLength: 28
    PackageType:
      type: string
      enum:
        - TXT-DICTIONARY
    PackageDescription:
      type: string
      maxLength: 1024
    PackageSource:
      type: object
      properties:
        S3BucketName:
          $ref: '#/components/schemas/S3BucketName'
          description: Name of the bucket containing the package.
        S3Key:
          $ref: '#/components/schemas/S3Key'
          description: Key (file name) of the package.
      description: The S3 location for importing the package specified as <code>S3BucketName</code> and <code>S3Key</code>
    CreatePackageRequest:
      type: object
      required:
        - PackageName
        - PackageType
        - PackageSource
      title: CreatePackageRequest
      properties:
        PackageName:
          $ref: '#/components/schemas/PackageName'
          description: Unique identifier for the package.
        PackageType:
          $ref: '#/components/schemas/PackageType'
          description: Type of package. Currently supports only TXT-DICTIONARY.
        PackageDescription:
          $ref: '#/components/schemas/PackageDescription'
          description: Description of the package.
        PackageSource:
          $ref: '#/components/schemas/PackageSource'
          description: The customer S3 location <code>PackageSource</code> for importing the package.
      description: ' Container for request parameters to <code> <a>CreatePackage</a> </code> operation. '
    PackageDetails:
      type: object
      properties:
        PackageID:
          $ref: '#/components/schemas/PackageID'
          description: Internal ID of the package.
        PackageName:
          $ref: '#/components/schemas/PackageName'
          description: User specified name of the package.
        PackageType:
          $ref: '#/components/schemas/PackageType'
          description: Currently supports only TXT-DICTIONARY.
        PackageDescription:
          $ref: '#/components/schemas/PackageDescription'
          description: User-specified description of the package.
        PackageStatus:
          $ref: '#/components/schemas/PackageStatus'
          description: Current state of the package. Values are COPYING/COPY_FAILED/AVAILABLE/DELETING/DELETE_FAILED
        CreatedAt:
          $ref: '#/components/schemas/CreatedAt'
          description: Timestamp which tells creation date of the package.
        LastUpdatedAt:
          $ref: '#/components/schemas/LastUpdated'
        AvailablePackageVersion:
          $ref: '#/components/schemas/PackageVersion'
        ErrorDetails:
          $ref: '#/components/schemas/ErrorDetails'
          description: Additional information if the package is in an error state. Null otherwise.
      description: Basic information about a package.
    CreatedAt:
      type: string
      format: date-time
    CrossClusterSearchConnectionStatusMessage:
      type: string
    DeleteElasticsearchDomainRequest:
      type: object
      title: DeleteElasticsearchDomainRequest
      properties: {}
      description: Container for the parameters to the <code><a>DeleteElasticsearchDomain</a></code> operation. Specifies the name of the Elasticsearch domain that you want to delete.
    DeleteInboundCrossClusterSearchConnectionRequest:
      type: object
      title: DeleteInboundCrossClusterSearchConnectionRequest
      properties: {}
      description: Container for the parameters to the <code><a>DeleteInboundCrossClusterSearchConnection</a></code> operation.
    DeleteOutboundCrossClusterSearchConnectionRequest:
      type: object
      title: DeleteOutboundCrossClusterSearchConnectionRequest
      properties: {}
      description: Container for the parameters to the <code><a>DeleteOutboundCrossClusterSearchConnection</a></code> operation.
    OutboundCrossClusterSearchConnection:
      type: object
      properties:
        SourceDomainInfo:
          $ref: '#/components/schemas/DomainInformation'
          description: Specifies the <code><a>DomainInformation</a></code> for the source Elasticsearch domain.
        DestinationDomainInfo:
          $ref: '#/components/schemas/DomainInformation'
          description: Specifies the <code><a>DomainInformation</a></code> for the destination Elasticsearch domain.
        CrossClusterSearchConnectionId:
          $ref: '#/components/schemas/CrossClusterSearchConnectionId'
          description: Specifies the connection id for the outbound cross-cluster search connection.
        ConnectionAlias:
          $ref: '#/components/schemas/ConnectionAlias'
          description: Specifies the connection alias for the outbound cross-cluster search connection.
        ConnectionStatus:
          $ref: '#/components/schemas/OutboundCrossClusterSearchConnectionStatus'
          description: Specifies the <code><a>OutboundCrossClusterSearchConnectionStatus</a></code> for the outbound connection.
      description: Specifies details of an outbound connection.
    DeletePackageRequest:
      type: object
      title: DeletePackageRequest
      properties: {}
      description: ' Container for request parameters to <code> <a>DeletePackage</a> </code> operation. '
    DeploymentCloseDateTimeStamp:
      type: string
      format: date-time
    DeploymentStatus:
      type: string
      enum:
        - PENDING_UPDATE
        - IN_PROGRESS
        - COMPLETED
        - NOT_ELIGIBLE
        - ELIGIBLE
    MaxResults:
      type: integer
      description: ' Set this value to limit the number of results returned. '
      maximum: 100
    NextToken:
      type: string
      description: ' Paginated APIs accepts NextToken input to returns next page results and provides a NextToken output in the response which can be used by the client to retrieve more results. '
    DescribeDomainAutoTunesRequest:
      type: object
      title: DescribeDomainAutoTunesRequest
      properties:
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: 'Set this value to limit the number of results returned. If not specified, defaults to 100.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: NextToken is sent in case the earlier API call results contain the NextToken. It is used for pagination.
      description: Container for the parameters to the <code>DescribeDomainAutoTunes</code> operation.
    DescribeElasticsearchDomainConfigRequest:
      type: object
      title: DescribeElasticsearchDomainConfigRequest
      properties: {}
      description: ' Container for the parameters to the <code>DescribeElasticsearchDomainConfig</code> operation. Specifies the domain name for which you want configuration information.'
    ElasticsearchDomainConfig:
      type: object
      properties:
        ElasticsearchVersion:
          $ref: '#/components/schemas/ElasticsearchVersionStatus'
          description: String of format X.Y to specify version for the Elasticsearch domain.
        ElasticsearchClusterConfig:
          $ref: '#/components/schemas/ElasticsearchClusterConfigStatus'
          description: Specifies the <code>ElasticsearchClusterConfig</code> for the Elasticsearch domain.
        EBSOptions:
          $ref: '#/components/schemas/EBSOptionsStatus'
          description: Specifies the <code>EBSOptions</code> for the Elasticsearch domain.
        AccessPolicies:
          $ref: '#/components/schemas/AccessPoliciesStatus'
          description: IAM access policy as a JSON-formatted string.
        SnapshotOptions:
          $ref: '#/components/schemas/SnapshotOptionsStatus'
          description: Specifies the <code>SnapshotOptions</code> for the Elasticsearch domain.
        VPCOptions:
          $ref: '#/components/schemas/VPCDerivedInfoStatus'
          description: 'The <code>VPCOptions</code> for the specified domain. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html" target="_blank">VPC Endpoints for Amazon Elasticsearch Service Domains</a>.'
        CognitoOptions:
          $ref: '#/components/schemas/CognitoOptionsStatus'
          description: 'The <code>CognitoOptions</code> for the specified domain. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-cognito-auth.html" target="_blank">Amazon Cognito Authentication for Kibana</a>.'
        EncryptionAtRestOptions:
          $ref: '#/components/schemas/EncryptionAtRestOptionsStatus'
          description: Specifies the <code>EncryptionAtRestOptions</code> for the Elasticsearch domain.
        NodeToNodeEncryptionOptions:
          $ref: '#/components/schemas/NodeToNodeEncryptionOptionsStatus'
          description: Specifies the <code>NodeToNodeEncryptionOptions</code> for the Elasticsearch domain.
        AdvancedOptions:
          $ref: '#/components/schemas/AdvancedOptionsStatus'
          description: 'Specifies the <code>AdvancedOptions</code> for the domain. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options" target="_blank">Configuring Advanced Options</a> for more information.'
        LogPublishingOptions:
          $ref: '#/components/schemas/LogPublishingOptionsStatus'
          description: Log publishing options for the given domain.
        DomainEndpointOptions:
          $ref: '#/components/schemas/DomainEndpointOptionsStatus'
          description: Specifies the <code>DomainEndpointOptions</code> for the Elasticsearch domain.
        AdvancedSecurityOptions:
          $ref: '#/components/schemas/AdvancedSecurityOptionsStatus'
          description: 'Specifies <code>AdvancedSecurityOptions</code> for the domain. '
        AutoTuneOptions:
          $ref: '#/components/schemas/AutoTuneOptionsStatus'
          description: 'Specifies <code>AutoTuneOptions</code> for the domain. '
      description: The configuration of an Elasticsearch domain.
    DescribeElasticsearchDomainRequest:
      type: object
      title: DescribeElasticsearchDomainRequest
      properties: {}
      description: Container for the parameters to the <code><a>DescribeElasticsearchDomain</a></code> operation.
    DomainNameList:
      type: array
      description: A list of Elasticsearch domain names.
      items:
        $ref: '#/components/schemas/DomainName'
    DescribeElasticsearchDomainsRequest:
      type: object
      required:
        - DomainNames
      title: DescribeElasticsearchDomainsRequest
      properties:
        DomainNames:
          $ref: '#/components/schemas/DomainNameList'
          description: The Elasticsearch domains for which you want information.
      description: 'Container for the parameters to the <code><a>DescribeElasticsearchDomains</a></code> operation. By default, the API returns the status of all Elasticsearch domains.'
    ElasticsearchDomainStatusList:
      type: array
      description: A list that contains the status of each requested Elasticsearch domain.
      items:
        $ref: '#/components/schemas/ElasticsearchDomainStatus'
    DescribeElasticsearchInstanceTypeLimitsRequest:
      type: object
      title: DescribeElasticsearchInstanceTypeLimitsRequest
      properties: {}
      description: ' Container for the parameters to <code> <a>DescribeElasticsearchInstanceTypeLimits</a> </code> operation. '
    LimitsByRole:
      type: object
      description: ' Map of Role of the Instance and Limits that are applicable. Role performed by given Instance in Elasticsearch can be one of the following: <ul> <li>data: If the given InstanceType is used as data node</li> <li>master: If the given InstanceType is used as master node</li> <li>ultra_warm: If the given InstanceType is used as warm node</li> </ul> '
      additionalProperties:
        $ref: '#/components/schemas/Limits'
    FilterList:
      type: array
      items:
        $ref: '#/components/schemas/Filter'
    DescribeInboundCrossClusterSearchConnectionsRequest:
      type: object
      title: DescribeInboundCrossClusterSearchConnectionsRequest
      properties:
        Filters:
          $ref: '#/components/schemas/FilterList'
          description: ' A list of filters used to match properties for inbound cross-cluster search connection. Available <code><a>Filter</a></code> names for this operation are: <ul> <li>cross-cluster-search-connection-id</li> <li>source-domain-info.domain-name</li> <li>source-domain-info.owner-id</li> <li>source-domain-info.region</li> <li>destination-domain-info.domain-name</li> </ul> '
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: 'Set this value to limit the number of results returned. If not specified, defaults to 100.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: ' NextToken is sent in case the earlier API call results contain the NextToken. It is used for pagination.'
      description: Container for the parameters to the <code><a>DescribeInboundCrossClusterSearchConnections</a></code> operation.
    InboundCrossClusterSearchConnections:
      type: array
      items:
        $ref: '#/components/schemas/InboundCrossClusterSearchConnection'
    DescribeOutboundCrossClusterSearchConnectionsRequest:
      type: object
      title: DescribeOutboundCrossClusterSearchConnectionsRequest
      properties:
        Filters:
          $ref: '#/components/schemas/FilterList'
          description: ' A list of filters used to match properties for outbound cross-cluster search connection. Available <code><a>Filter</a></code> names for this operation are: <ul> <li>cross-cluster-search-connection-id</li> <li>destination-domain-info.domain-name</li> <li>destination-domain-info.owner-id</li> <li>destination-domain-info.region</li> <li>source-domain-info.domain-name</li> </ul> '
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: 'Set this value to limit the number of results returned. If not specified, defaults to 100.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: ' NextToken is sent in case the earlier API call results contain the NextToken. It is used for pagination.'
      description: Container for the parameters to the <code><a>DescribeOutboundCrossClusterSearchConnections</a></code> operation.
    OutboundCrossClusterSearchConnections:
      type: array
      items:
        $ref: '#/components/schemas/OutboundCrossClusterSearchConnection'
    DescribePackagesFilterName:
      type: string
      enum:
        - PackageID
        - PackageName
        - PackageStatus
    DescribePackagesFilterValues:
      type: array
      items:
        $ref: '#/components/schemas/DescribePackagesFilterValue'
    DescribePackagesFilterList:
      type: array
      description: A list of <code>DescribePackagesFilter</code> to filter the packages included in a <code>DescribePackages</code> response.
      items:
        $ref: '#/components/schemas/DescribePackagesFilter'
    DescribePackagesFilterValue:
      type: string
      pattern: '^[0-9a-zA-Z\*\.\\/\?-]*$'
    DescribePackagesRequest:
      type: object
      title: DescribePackagesRequest
      properties:
        Filters:
          $ref: '#/components/schemas/DescribePackagesFilterList'
          description: Only returns packages that match the <code>DescribePackagesFilterList</code> values.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: Limits results to a maximum number of packages.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'Used for pagination. Only necessary if a previous API call includes a non-null NextToken value. If provided, returns results for the next page.'
      description: ' Container for request parameters to <code> <a>DescribePackage</a> </code> operation. '
    PackageDetailsList:
      type: array
      items:
        $ref: '#/components/schemas/PackageDetails'
    GUID:
      type: string
      pattern: '\p{XDigit}{8}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{12}'
    DescribeReservedElasticsearchInstanceOfferingsRequest:
      type: object
      title: DescribeReservedElasticsearchInstanceOfferingsRequest
      properties: {}
      description: Container for parameters to <code>DescribeReservedElasticsearchInstanceOfferings</code>
    ReservedElasticsearchInstanceOfferingList:
      type: array
      items:
        $ref: '#/components/schemas/ReservedElasticsearchInstanceOffering'
    DescribeReservedElasticsearchInstancesRequest:
      type: object
      title: DescribeReservedElasticsearchInstancesRequest
      properties: {}
      description: Container for parameters to <code>DescribeReservedElasticsearchInstances</code>
    ReservedElasticsearchInstanceList:
      type: array
      items:
        $ref: '#/components/schemas/ReservedElasticsearchInstance'
    DissociatePackageRequest:
      type: object
      title: DissociatePackageRequest
      properties: {}
      description: ' Container for request parameters to <code> <a>DissociatePackage</a> </code> operation. '
    DomainEndpointOptionsStatus:
      type: object
      required:
        - Options
        - Status
      properties:
        Options:
          $ref: '#/components/schemas/DomainEndpointOptions'
          description: Options to configure endpoint for the Elasticsearch domain.
        Status:
          $ref: '#/components/schemas/OptionStatus'
          description: 'The status of the endpoint options for the Elasticsearch domain. See <code>OptionStatus</code> for the status information that''s included. '
      description: The configured endpoint options for the domain and their current status.
    DomainId:
      type: string
      description: Unique identifier for an Elasticsearch domain.
      minLength: 1
      maxLength: 64
    DomainInfo:
      type: object
      properties:
        DomainName:
          $ref: '#/components/schemas/DomainName'
          description: ' Specifies the <code>DomainName</code>.'
    DomainInfoList:
      type: array
      description: ' Contains the list of Elasticsearch domain information.'
      items:
        $ref: '#/components/schemas/DomainInfo'
    LastUpdated:
      type: string
      format: date-time
    DomainPackageStatus:
      type: string
      enum:
        - ASSOCIATING
        - ASSOCIATION_FAILED
        - ACTIVE
        - DISSOCIATING
        - DISSOCIATION_FAILED
    PackageVersion:
      type: string
    ReferencePath:
      type: string
    ErrorDetails:
      type: object
      properties:
        ErrorType:
          $ref: '#/components/schemas/ErrorType'
        ErrorMessage:
          $ref: '#/components/schemas/ErrorMessage'
    DomainPackageDetailsList:
      type: array
      items:
        $ref: '#/components/schemas/DomainPackageDetails'
    Double:
      type: number
      format: double
    DurationValue:
      type: integer
      description: ' Integer to specify the value of a maintenance schedule duration. See the <a href="https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/auto-tune.html" target="_blank">Developer Guide</a> for more information.'
      minimum: 1
      maximum: 24
    TimeUnit:
      type: string
      enum:
        - HOURS
      description: 'Specifies the unit of a maintenance schedule duration. Valid value is HOUR. See the <a href="https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/auto-tune.html" target="_blank">Developer Guide</a> for more information.'
    EBSOptionsStatus:
      type: object
      required:
        - Options
        - Status
      properties:
        Options:
          $ref: '#/components/schemas/EBSOptions'
          description: ' Specifies the EBS options for the specified Elasticsearch domain.'
        Status:
          $ref: '#/components/schemas/OptionStatus'
          description: ' Specifies the status of the EBS options for the specified Elasticsearch domain.'
      description: ' Status of the EBS options for the specified Elasticsearch domain.'
    ElasticsearchClusterConfigStatus:
      type: object
      required:
        - Options
        - Status
      properties:
        Options:
          $ref: '#/components/schemas/ElasticsearchClusterConfig'
          description: ' Specifies the cluster configuration for the specified Elasticsearch domain.'
        Status:
          $ref: '#/components/schemas/OptionStatus'
          description: ' Specifies the status of the configuration for the specified Elasticsearch domain.'
      description: ' Specifies the configuration status for the specified Elasticsearch domain.'
    ElasticsearchVersionStatus:
      type: object
      required:
        - Options
        - Status
      properties:
        Options:
          $ref: '#/components/schemas/ElasticsearchVersionString'
          description: ' Specifies the Elasticsearch version for the specified Elasticsearch domain.'
        Status:
          $ref: '#/components/schemas/OptionStatus'
          description: ' Specifies the status of the Elasticsearch version options for the specified Elasticsearch domain.'
      description: ' Status of the Elasticsearch version options for the specified Elasticsearch domain.'
    SnapshotOptionsStatus:
      type: object
      required:
        - Options
        - Status
      properties:
        Options:
          $ref: '#/components/schemas/SnapshotOptions'
          description: Specifies the daily snapshot options specified for the Elasticsearch domain.
        Status:
          $ref: '#/components/schemas/OptionStatus'
          description: Specifies the status of a daily automated snapshot.
      description: Status of a daily automated snapshot.
    VPCDerivedInfoStatus:
      type: object
      required:
        - Options
        - Status
      properties:
        Options:
          $ref: '#/components/schemas/VPCDerivedInfo'
          description: ' Specifies the VPC options for the specified Elasticsearch domain.'
        Status:
          $ref: '#/components/schemas/OptionStatus'
          description: ' Specifies the status of the VPC options for the specified Elasticsearch domain.'
      description: ' Status of the VPC options for the specified Elasticsearch domain.'
    EncryptionAtRestOptionsStatus:
      type: object
      required:
        - Options
        - Status
      properties:
        Options:
          $ref: '#/components/schemas/EncryptionAtRestOptions'
          description: ' Specifies the Encryption At Rest options for the specified Elasticsearch domain.'
        Status:
          $ref: '#/components/schemas/OptionStatus'
          description: ' Specifies the status of the Encryption At Rest options for the specified Elasticsearch domain.'
      description: ' Status of the Encryption At Rest options for the specified Elasticsearch domain.'
    NodeToNodeEncryptionOptionsStatus:
      type: object
      required:
        - Options
        - Status
      properties:
        Options:
          $ref: '#/components/schemas/NodeToNodeEncryptionOptions'
          description: Specifies the node-to-node encryption options for the specified Elasticsearch domain.
        Status:
          $ref: '#/components/schemas/OptionStatus'
          description: Specifies the status of the node-to-node encryption options for the specified Elasticsearch domain.
      description: Status of the node-to-node encryption options for the specified Elasticsearch domain.
    LogPublishingOptionsStatus:
      type: object
      properties:
        Options:
          $ref: '#/components/schemas/LogPublishingOptions'
          description: The log publishing options configured for the Elasticsearch domain.
        Status:
          $ref: '#/components/schemas/OptionStatus'
          description: 'The status of the log publishing options for the Elasticsearch domain. See <code>OptionStatus</code> for the status information that''s included. '
      description: The configured log publishing options for the domain and their current status.
    ServiceUrl:
      type: string
      description: 'The endpoint to which service requests are submitted. For example, <code>search-imdb-movies-oopcnjfn6ugofer3zx5iadxxca.eu-west-1.es.amazonaws.com</code> or <code>doc-imdb-movies-oopcnjfn6ugofer3zx5iadxxca.eu-west-1.es.amazonaws.com</code>.'
    EndpointsMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ServiceUrl'
    VPCDerivedInfo:
      type: object
      properties:
        VPCId:
          $ref: '#/components/schemas/String'
          description: The VPC Id for the Elasticsearch domain. Exists only if the domain was created with VPCOptions.
        SubnetIds:
          $ref: '#/components/schemas/StringList'
          description: Specifies the subnets for VPC endpoint.
        AvailabilityZones:
          $ref: '#/components/schemas/StringList'
          description: The availability zones for the Elasticsearch domain. Exists only if the domain was created with VPCOptions.
        SecurityGroupIds:
          $ref: '#/components/schemas/StringList'
          description: Specifies the security groups for VPC endpoint.
      description: 'Options to specify the subnets and security groups for VPC endpoint. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html" target="_blank"> VPC Endpoints for Amazon Elasticsearch Service Domains</a>.'
    ElasticsearchInstanceTypeList:
      type: array
      description: ' List of instance types supported by Amazon Elasticsearch service. '
      items:
        $ref: '#/components/schemas/ESPartitionInstanceType'
    ErrorType:
      type: string
    ErrorMessage:
      type: string
    NonEmptyString:
      type: string
      minLength: 1
    ValueStringList:
      type: array
      items:
        $ref: '#/components/schemas/NonEmptyString'
      minItems: 1
    GetCompatibleElasticsearchVersionsRequest:
      type: object
      title: GetCompatibleElasticsearchVersionsRequest
      properties: {}
      description: ' Container for request parameters to <code> <a>GetCompatibleElasticsearchVersions</a> </code> operation. '
    GetPackageVersionHistoryRequest:
      type: object
      title: GetPackageVersionHistoryRequest
      properties: {}
      description: ' Container for request parameters to <code> <a>GetPackageVersionHistory</a> </code> operation. '
    PackageVersionHistoryList:
      type: array
      items:
        $ref: '#/components/schemas/PackageVersionHistory'
    GetUpgradeHistoryRequest:
      type: object
      title: GetUpgradeHistoryRequest
      properties: {}
      description: ' Container for request parameters to <code> <a>GetUpgradeHistory</a> </code> operation. '
    UpgradeHistoryList:
      type: array
      items:
        $ref: '#/components/schemas/UpgradeHistory'
    GetUpgradeStatusRequest:
      type: object
      title: GetUpgradeStatusRequest
      properties: {}
      description: ' Container for request parameters to <code> <a>GetUpgradeStatus</a> </code> operation. '
    UpgradeStep:
      type: string
      enum:
        - PRE_UPGRADE_CHECK
        - SNAPSHOT
        - UPGRADE
    UpgradeStatus:
      type: string
      enum:
        - IN_PROGRESS
        - SUCCEEDED
        - SUCCEEDED_WITH_ISSUES
        - FAILED
    UpgradeName:
      type: string
    InboundCrossClusterSearchConnectionStatus:
      type: object
      properties:
        StatusCode:
          $ref: '#/components/schemas/InboundCrossClusterSearchConnectionStatusCode'
          description: '<p>The state code for inbound connection. This can be one of the following:</p> <ul> <li>PENDING_ACCEPTANCE: Inbound connection is not yet accepted by destination domain owner.</li> <li>APPROVED: Inbound connection is pending acceptance by destination domain owner.</li> <li>REJECTING: Inbound connection rejection is in process.</li> <li>REJECTED: Inbound connection is rejected.</li> <li>DELETING: Inbound connection deletion is in progress.</li> <li>DELETED: Inbound connection is deleted and cannot be used further.</li> </ul>'
        Message:
          $ref: '#/components/schemas/CrossClusterSearchConnectionStatusMessage'
          description: Specifies verbose information for the inbound connection status.
      description: Specifies the coonection status of an inbound cross-cluster search connection.
    InboundCrossClusterSearchConnectionStatusCode:
      type: string
      enum:
        - PENDING_ACCEPTANCE
        - APPROVED
        - REJECTING
        - REJECTED
        - DELETING
        - DELETED
    InstanceCount:
      type: integer
      description: Specifies the number of EC2 instances in the Elasticsearch domain.
      minimum: 1
    MinimumInstanceCount:
      type: integer
      description: ' Minimum number of Instances that can be instantiated for given InstanceType. '
    MaximumInstanceCount:
      type: integer
      description: ' Maximum number of Instances that can be instantiated for given InstanceType. '
    InstanceCountLimits:
      type: object
      properties:
        MinimumInstanceCount:
          $ref: '#/components/schemas/MinimumInstanceCount'
        MaximumInstanceCount:
          $ref: '#/components/schemas/MaximumInstanceCount'
      description: ' InstanceCountLimits represents the limits on number of instances that be created in Amazon Elasticsearch for given InstanceType. '
    InstanceLimits:
      type: object
      properties:
        InstanceCountLimits:
          $ref: '#/components/schemas/InstanceCountLimits'
      description: 'InstanceLimits represents the list of instance related attributes that are available for given InstanceType. '
    InstanceRole:
      type: string
    Integer:
      type: integer
    Issue:
      type: string
    Issues:
      type: array
      items:
        $ref: '#/components/schemas/Issue'
    LimitValue:
      type: string
    StorageTypeList:
      type: array
      items:
        $ref: '#/components/schemas/StorageType'
    Limits:
      type: object
      properties:
        StorageTypes:
          $ref: '#/components/schemas/StorageTypeList'
          description: 'StorageType represents the list of storage related types and attributes that are available for given InstanceType. '
        InstanceLimits:
          $ref: '#/components/schemas/InstanceLimits'
        AdditionalLimits:
          $ref: '#/components/schemas/AdditionalLimitList'
          description: ' List of additional limits that are specific to a given InstanceType and for each of it''s <code> <a>InstanceRole</a> </code> . '
      description: ' Limits for given InstanceType and for each of it''s role. <br/> Limits contains following <code> <a>StorageTypes,</a> </code> <code> <a>InstanceLimits</a> </code> and <code> <a>AdditionalLimits</a> </code> '
    ListDomainsForPackageRequest:
      type: object
      title: ListDomainsForPackageRequest
      properties: {}
      description: ' Container for request parameters to <code> <a>ListDomainsForPackage</a> </code> operation. '
    ListElasticsearchInstanceTypesRequest:
      type: object
      title: ListElasticsearchInstanceTypesRequest
      properties: {}
      description: ' Container for the parameters to the <code> <a>ListElasticsearchInstanceTypes</a> </code> operation. '
    ListElasticsearchVersionsRequest:
      type: object
      title: ListElasticsearchVersionsRequest
      properties: {}
      description: '<p> Container for the parameters to the <code> <a>ListElasticsearchVersions</a> </code> operation. <p> Use <code> <a>MaxResults</a> </code> to control the maximum number of results to retrieve in a single call. </p> <p> Use <code> <a>NextToken</a> </code> in response to retrieve more results. If the received response does not contain a NextToken, then there are no more results to retrieve. </p> </p>'
    ListPackagesForDomainRequest:
      type: object
      title: ListPackagesForDomainRequest
      properties: {}
      description: ' Container for request parameters to <code> <a>ListPackagesForDomain</a> </code> operation. '
    ListTagsRequest:
      type: object
      title: ListTagsRequest
      properties: {}
      description: Container for the parameters to the <code><a>ListTags</a></code> operation. Specify the <code>ARN</code> for the Elasticsearch domain to which the tags are attached that you want to view are attached.
    LogType:
      type: string
      enum:
        - INDEX_SLOW_LOGS
        - SEARCH_SLOW_LOGS
        - ES_APPLICATION_LOGS
        - AUDIT_LOGS
      description: 'Type of Log File, it can be one of the following: <ul> <li>INDEX_SLOW_LOGS: Index slow logs contain insert requests that took more time than configured index query log threshold to execute.</li> <li>SEARCH_SLOW_LOGS: Search slow logs contain search queries that took more time than configured search query log threshold to execute.</li> <li>ES_APPLICATION_LOGS: Elasticsearch application logs contain information about errors and warnings raised during the operation of the service and can be useful for troubleshooting.</li> <li>AUDIT_LOGS: Audit logs contain records of user requests for access from the domain.</li> </ul> '
    Username:
      type: string
      minLength: 1
      format: password
    Password:
      type: string
      minLength: 8
      format: password
    OptionState:
      type: string
      enum:
        - RequiresIndexDocuments
        - Processing
        - Active
      description: '<p>The state of a requested change. One of the following:</p> <ul> <li>Processing: The request change is still in-process.</li> <li>Active: The request change is processed and deployed to the Elasticsearch domain.</li> </ul>'
    OutboundCrossClusterSearchConnectionStatusCode:
      type: string
      enum:
        - PENDING_ACCEPTANCE
        - VALIDATING
        - VALIDATION_FAILED
        - PROVISIONING
        - ACTIVE
        - REJECTED
        - DELETING
        - DELETED
    PackageStatus:
      type: string
      enum:
        - COPYING
        - COPY_FAILED
        - VALIDATING
        - VALIDATION_FAILED
        - AVAILABLE
        - DELETING
        - DELETED
        - DELETE_FAILED
    PackageVersionHistory:
      type: object
      properties:
        PackageVersion:
          $ref: '#/components/schemas/PackageVersion'
          description: Version of the package.
        CommitMessage:
          $ref: '#/components/schemas/CommitMessage'
          description: A message associated with the version.
        CreatedAt:
          $ref: '#/components/schemas/CreatedAt'
          description: Timestamp which tells creation time of the package version.
      description: Details of a package version.
    ReservationToken:
      type: string
      minLength: 5
      maxLength: 64
    PurchaseReservedElasticsearchInstanceOfferingRequest:
      type: object
      required:
        - ReservedElasticsearchInstanceOfferingId
        - ReservationName
      title: PurchaseReservedElasticsearchInstanceOfferingRequest
      properties:
        ReservedElasticsearchInstanceOfferingId:
          $ref: '#/components/schemas/GUID'
          description: The ID of the reserved Elasticsearch instance offering to purchase.
        ReservationName:
          $ref: '#/components/schemas/ReservationToken'
          description: A customer-specified identifier to track this reservation.
        InstanceCount:
          $ref: '#/components/schemas/InstanceCount'
          description: The number of Elasticsearch instances to reserve.
      description: Container for parameters to <code>PurchaseReservedElasticsearchInstanceOffering</code>
    RecurringCharge:
      type: object
      properties:
        RecurringChargeAmount:
          $ref: '#/components/schemas/Double'
          description: The monetary amount of the recurring charge.
        RecurringChargeFrequency:
          $ref: '#/components/schemas/String'
          description: The frequency of the recurring charge.
      description: 'Contains the specific price and frequency of a recurring charges for a reserved Elasticsearch instance, or for a reserved Elasticsearch instance offering.'
    RecurringChargeList:
      type: array
      items:
        $ref: '#/components/schemas/RecurringCharge'
    RejectInboundCrossClusterSearchConnectionRequest:
      type: object
      title: RejectInboundCrossClusterSearchConnectionRequest
      properties: {}
      description: Container for the parameters to the <code><a>RejectInboundCrossClusterSearchConnection</a></code> operation.
    RemoveTagsRequest:
      type: object
      required:
        - ARN
        - TagKeys
      title: RemoveTagsRequest
      properties:
        ARN:
          $ref: '#/components/schemas/ARN'
          description: Specifies the <code>ARN</code> for the Elasticsearch domain from which you want to delete the specified tags.
        TagKeys:
          $ref: '#/components/schemas/StringList'
          description: Specifies the <code>TagKey</code> list which you want to remove from the Elasticsearch domain.
      description: Container for the parameters to the <code><a>RemoveTags</a></code> operation. Specify the <code>ARN</code> for the Elasticsearch domain from which you want to remove the specified <code>TagKey</code>.
    ReservedElasticsearchInstancePaymentOption:
      type: string
      enum:
        - ALL_UPFRONT
        - PARTIAL_UPFRONT
        - NO_UPFRONT
    ReservedElasticsearchInstance:
      type: object
      properties:
        ReservationName:
          $ref: '#/components/schemas/ReservationToken'
          description: The customer-specified identifier to track this reservation.
        ReservedElasticsearchInstanceId:
          $ref: '#/components/schemas/GUID'
          description: The unique identifier for the reservation.
        ReservedElasticsearchInstanceOfferingId:
          $ref: '#/components/schemas/String'
          description: The offering identifier.
        ElasticsearchInstanceType:
          $ref: '#/components/schemas/ESPartitionInstanceType'
          description: The Elasticsearch instance type offered by the reserved instance offering.
        StartTime:
          $ref: '#/components/schemas/UpdateTimestamp'
          description: The time the reservation started.
        Duration:
          $ref: '#/components/schemas/Integer'
          description: 'The duration, in seconds, for which the Elasticsearch instance is reserved.'
        FixedPrice:
          $ref: '#/components/schemas/Double'
          description: 'The upfront fixed charge you will paid to purchase the specific reserved Elasticsearch instance offering. '
        UsagePrice:
          $ref: '#/components/schemas/Double'
          description: The rate you are charged for each hour for the domain that is using this reserved instance.
        CurrencyCode:
          $ref: '#/components/schemas/String'
          description: The currency code for the reserved Elasticsearch instance offering.
        ElasticsearchInstanceCount:
          $ref: '#/components/schemas/Integer'
          description: The number of Elasticsearch instances that have been reserved.
        State:
          $ref: '#/components/schemas/String'
          description: The state of the reserved Elasticsearch instance.
        PaymentOption:
          $ref: '#/components/schemas/ReservedElasticsearchInstancePaymentOption'
          description: The payment option as defined in the reserved Elasticsearch instance offering.
        RecurringCharges:
          $ref: '#/components/schemas/RecurringChargeList'
          description: The charge to your account regardless of whether you are creating any domains using the instance offering.
      description: Details of a reserved Elasticsearch instance.
    ReservedElasticsearchInstanceOffering:
      type: object
      properties:
        ReservedElasticsearchInstanceOfferingId:
          $ref: '#/components/schemas/GUID'
          description: The Elasticsearch reserved instance offering identifier.
        ElasticsearchInstanceType:
          $ref: '#/components/schemas/ESPartitionInstanceType'
          description: The Elasticsearch instance type offered by the reserved instance offering.
        Duration:
          $ref: '#/components/schemas/Integer'
          description: 'The duration, in seconds, for which the offering will reserve the Elasticsearch instance.'
        FixedPrice:
          $ref: '#/components/schemas/Double'
          description: 'The upfront fixed charge you will pay to purchase the specific reserved Elasticsearch instance offering. '
        UsagePrice:
          $ref: '#/components/schemas/Double'
          description: The rate you are charged for each hour the domain that is using the offering is running.
        CurrencyCode:
          $ref: '#/components/schemas/String'
          description: The currency code for the reserved Elasticsearch instance offering.
        PaymentOption:
          $ref: '#/components/schemas/ReservedElasticsearchInstancePaymentOption'
          description: Payment option for the reserved Elasticsearch instance offering
        RecurringCharges:
          $ref: '#/components/schemas/RecurringChargeList'
          description: The charge to your account regardless of whether you are creating any domains using the instance offering.
      description: Details of a reserved Elasticsearch instance offering.
    SAMLEntityId:
      type: string
      minLength: 8
      maxLength: 512
    SAMLMetadata:
      type: string
      minLength: 1
      maxLength: 1048576
    SAMLIdp:
      type: object
      required:
        - MetadataContent
        - EntityId
      properties:
        MetadataContent:
          $ref: '#/components/schemas/SAMLMetadata'
          description: The Metadata of the SAML application in xml format.
        EntityId:
          $ref: '#/components/schemas/SAMLEntityId'
          description: The unique Entity ID of the application in SAML Identity Provider.
      description: Specifies the SAML Identity Provider's information.
    ScheduledAutoTuneActionType:
      type: string
      enum:
        - JVM_HEAP_SIZE_TUNING
        - JVM_YOUNG_GEN_TUNING
      description: 'Specifies Auto-Tune action type. Valid values are JVM_HEAP_SIZE_TUNING and JVM_YOUNG_GEN_TUNING. '
    ScheduledAutoTuneDescription:
      type: string
      description: 'Specifies Auto-Tune action description. '
    ScheduledAutoTuneSeverityType:
      type: string
      enum:
        - LOW
        - MEDIUM
        - HIGH
      description: 'Specifies Auto-Tune action severity. Valid values are LOW, MEDIUM and HIGH. '
    StartElasticsearchServiceSoftwareUpdateRequest:
      type: object
      required:
        - DomainName
      title: StartElasticsearchServiceSoftwareUpdateRequest
      properties:
        DomainName:
          $ref: '#/components/schemas/DomainName'
          description: The name of the domain that you want to update to the latest service software.
      description: Container for the parameters to the <code><a>StartElasticsearchServiceSoftwareUpdate</a></code> operation. Specifies the name of the Elasticsearch domain that you wish to schedule a service software update on.
    StartTimestamp:
      type: string
      format: date-time
    StorageSubTypeName:
      type: string
      description: ' SubType of the given storage type. List of available sub-storage options: For "instance" storageType we wont have any storageSubType, in case of "ebs" storageType we will have following valid storageSubTypes <ol> <li>standard</li> <li>gp2</li> <li>io1</li> </ol> Refer <code><a>VolumeType</a></code> for more information regarding above EBS storage options. '
    StorageTypeName:
      type: string
      description: ' Type of the storage. List of available storage options: <ol> <li>instance</li> Inbuilt storage available for the given Instance <li>ebs</li> Elastic block storage that would be attached to the given Instance </ol> '
    StorageTypeLimitList:
      type: array
      items:
        $ref: '#/components/schemas/StorageTypeLimit'
    StorageType:
      type: object
      properties:
        StorageTypeName:
          $ref: '#/components/schemas/StorageTypeName'
        StorageSubTypeName:
          $ref: '#/components/schemas/StorageSubTypeName'
        StorageTypeLimits:
          $ref: '#/components/schemas/StorageTypeLimitList'
          description: 'List of limits that are applicable for given storage type. '
      description: 'StorageTypes represents the list of storage related types and their attributes that are available for given InstanceType. '
    StorageTypeLimit:
      type: object
      properties:
        LimitName:
          $ref: '#/components/schemas/LimitName'
          description: ' Name of storage limits that are applicable for given storage type. If <code> <a>StorageType</a> </code> is ebs, following storage options are applicable <ol> <li>MinimumVolumeSize</li> Minimum amount of volume size that is applicable for given storage type.It can be empty if it is not applicable. <li>MaximumVolumeSize</li> Maximum amount of volume size that is applicable for given storage type.It can be empty if it is not applicable. <li>MaximumIops</li> Maximum amount of Iops that is applicable for given storage type.It can be empty if it is not applicable. <li>MinimumIops</li> Minimum amount of Iops that is applicable for given storage type.It can be empty if it is not applicable. </ol> '
        LimitValues:
          $ref: '#/components/schemas/LimitValueList'
          description: ' Values for the <code> <a>StorageTypeLimit$LimitName</a> </code> . '
      description: 'Limits that are applicable for given storage type. '
    TagKey:
      type: string
      description: A string of length from 1 to 128 characters that specifies the key for a Tag. Tag keys must be unique for the Elasticsearch domain to which they are attached.
      minLength: 1
      maxLength: 128
    TagValue:
      type: string
      description: A string of length from 0 to 256 characters that specifies the value for a Tag. Tag values can be null and do not have to be unique in a tag set.
      minLength: 0
      maxLength: 256
    UpdateElasticsearchDomainConfigRequest:
      type: object
      title: UpdateElasticsearchDomainConfigRequest
      properties:
        ElasticsearchClusterConfig:
          $ref: '#/components/schemas/ElasticsearchClusterConfig'
          description: The type and number of instances to instantiate for the domain cluster.
        EBSOptions:
          $ref: '#/components/schemas/EBSOptions'
          description: 'Specify the type and size of the EBS volume that you want to use. '
        SnapshotOptions:
          $ref: '#/components/schemas/SnapshotOptions'
          description: 'Option to set the time, in UTC format, for the daily automated snapshot. Default value is <code>0</code> hours. '
        VPCOptions:
          $ref: '#/components/schemas/VPCOptions'
          description: 'Options to specify the subnets and security groups for VPC endpoint. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html#es-creating-vpc" target="_blank">Creating a VPC</a> in <i>VPC Endpoints for Amazon Elasticsearch Service Domains</i>'
        CognitoOptions:
          $ref: '#/components/schemas/CognitoOptions'
          description: 'Options to specify the Cognito user and identity pools for Kibana authentication. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-cognito-auth.html" target="_blank">Amazon Cognito Authentication for Kibana</a>.'
        AdvancedOptions:
          $ref: '#/components/schemas/AdvancedOptions'
          description: 'Modifies the advanced option to allow references to indices in an HTTP request body. Must be <code>false</code> when configuring access to individual sub-resources. By default, the value is <code>true</code>. See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options" target="_blank">Configuration Advanced Options</a> for more information.'
        AccessPolicies:
          $ref: '#/components/schemas/PolicyDocument'
          description: IAM access policy as a JSON-formatted string.
        LogPublishingOptions:
          $ref: '#/components/schemas/LogPublishingOptions'
          description: 'Map of <code>LogType</code> and <code>LogPublishingOption</code>, each containing options to publish a given type of Elasticsearch log.'
        DomainEndpointOptions:
          $ref: '#/components/schemas/DomainEndpointOptions'
          description: Options to specify configuration that will be applied to the domain endpoint.
        AdvancedSecurityOptions:
          $ref: '#/components/schemas/AdvancedSecurityOptionsInput'
          description: Specifies advanced security options.
        NodeToNodeEncryptionOptions:
          $ref: '#/components/schemas/NodeToNodeEncryptionOptions'
          description: Specifies the NodeToNodeEncryptionOptions.
        EncryptionAtRestOptions:
          $ref: '#/components/schemas/EncryptionAtRestOptions'
          description: Specifies the Encryption At Rest Options.
        AutoTuneOptions:
          $ref: '#/components/schemas/AutoTuneOptions'
          description: Specifies Auto-Tune options.
      description: Container for the parameters to the <code><a>UpdateElasticsearchDomain</a></code> operation. Specifies the type and number of instances in the domain cluster.
    UpdatePackageRequest:
      type: object
      required:
        - PackageID
        - PackageSource
      title: UpdatePackageRequest
      properties:
        PackageID:
          $ref: '#/components/schemas/PackageID'
          description: Unique identifier for the package.
        PackageSource:
          $ref: '#/components/schemas/PackageSource'
        PackageDescription:
          $ref: '#/components/schemas/PackageDescription'
          description: New description of the package.
        CommitMessage:
          $ref: '#/components/schemas/CommitMessage'
          description: An info message for the new version which will be shown as part of <code>GetPackageVersionHistoryResponse</code>.
      description: ' Container for request parameters to <code> <a>UpdatePackage</a> </code> operation. '
    UpgradeElasticsearchDomainRequest:
      type: object
      required:
        - DomainName
        - TargetVersion
      title: UpgradeElasticsearchDomainRequest
      properties:
        DomainName:
          $ref: '#/components/schemas/DomainName'
        TargetVersion:
          $ref: '#/components/schemas/ElasticsearchVersionString'
          description: The version of Elasticsearch that you intend to upgrade the domain to.
        PerformCheckOnly:
          $ref: '#/components/schemas/Boolean'
          description: ' This flag, when set to True, indicates that an Upgrade Eligibility Check needs to be performed. This will not actually perform the Upgrade. '
      description: ' Container for request parameters to <code> <a>UpgradeElasticsearchDomain</a> </code> operation. '
    UpgradeStepsList:
      type: array
      items:
        $ref: '#/components/schemas/UpgradeStepItem'
    UpgradeHistory:
      type: object
      properties:
        UpgradeName:
          $ref: '#/components/schemas/UpgradeName'
          description: A string that describes the update briefly
        StartTimestamp:
          $ref: '#/components/schemas/StartTimestamp'
          description: 'UTC Timestamp at which the Upgrade API call was made in "yyyy-MM-ddTHH:mm:ssZ" format.'
        UpgradeStatus:
          $ref: '#/components/schemas/UpgradeStatus'
          description: ' The overall status of the update. The status can take one of the following values: <ul> <li>In Progress</li> <li>Succeeded</li> <li>Succeeded with Issues</li> <li>Failed</li> </ul> '
        StepsList:
          $ref: '#/components/schemas/UpgradeStepsList'
          description: ' A list of <code> <a>UpgradeStepItem</a> </code> s representing information about each step performed as pard of a specific Upgrade or Upgrade Eligibility Check. '
      description: History of the last 10 Upgrades and Upgrade Eligibility Checks.
    UpgradeStepItem:
      type: object
      properties:
        UpgradeStep:
          $ref: '#/components/schemas/UpgradeStep'
          description: ' Represents one of 3 steps that an Upgrade or Upgrade Eligibility Check does through: <ul> <li>PreUpgradeCheck</li> <li>Snapshot</li> <li>Upgrade</li> </ul> '
        UpgradeStepStatus:
          $ref: '#/components/schemas/UpgradeStatus'
          description: ' The status of a particular step during an upgrade. The status can take one of the following values: <ul> <li>In Progress</li> <li>Succeeded</li> <li>Succeeded with Issues</li> <li>Failed</li> </ul> '
        Issues:
          $ref: '#/components/schemas/Issues'
          description: A list of strings containing detailed information about the errors encountered in a particular step.
        ProgressPercent:
          $ref: '#/components/schemas/Double'
          description: The Floating point value representing progress percentage of a particular step.
      description: Represents a single step of the Upgrade or Upgrade Eligibility Check workflow.
security:
  - hmac: []
