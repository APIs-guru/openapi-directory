openapi: 3.0.0
info:
  version: '2015-04-16'
  x-release: v4
  title: AWS Directory Service
  description: '<fullname>Directory Service</fullname> <p>Directory Service is a web service that makes it easy for you to setup and run directories in the Amazon Web Services cloud, or connect your Amazon Web Services resources with an existing self-managed Microsoft Active Directory. This guide provides detailed information about Directory Service operations, data types, parameters, and errors. For information about Directory Services features, see <a href="https://aws.amazon.com/directoryservice/">Directory Service</a> and the <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/what_is.html">Directory Service Administration Guide</a>.</p> <note> <p>Amazon Web Services provides SDKs that consist of libraries and sample code for various programming languages and platforms (Java, Ruby, .Net, iOS, Android, etc.). The SDKs provide a convenient way to create programmatic access to Directory Service and other Amazon Web Services services. For more information about the Amazon Web Services SDKs, including how to download and install them, see <a href="http://aws.amazon.com/tools/">Tools for Amazon Web Services</a>.</p> </note>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: ds
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/ds-2015-04-16.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/ds/'
servers:
  - url: 'http://ds.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Directory Service multi-region endpoint
  - url: 'https://ds.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Directory Service multi-region endpoint
  - url: 'http://ds.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Directory Service endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://ds.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Directory Service endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /#X-Amz-Target=DirectoryService_20150416.AcceptSharedDirectory:
    post:
      operationId: AcceptSharedDirectory
      description: Accepts a directory sharing request that was sent from the directory owner account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptSharedDirectoryResult'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '482':
          description: DirectoryAlreadySharedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryAlreadySharedException'
        '483':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '484':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptSharedDirectoryRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.AcceptSharedDirectory
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.AddIpRoutes:
    post:
      operationId: AddIpRoutes
      description: '<p>If the DNS server for your self-managed domain uses a publicly addressable IP address, you must add a CIDR address block to correctly route traffic to and from your Microsoft AD on Amazon Web Services. <i>AddIpRoutes</i> adds this address block. You can also use <i>AddIpRoutes</i> to facilitate routing traffic that uses public IP ranges from your Microsoft AD on Amazon Web Services to a peer VPC. </p> <p>Before you call <i>AddIpRoutes</i>, ensure that all of the required permissions have been explicitly granted through a policy. For details about what permissions are required to run the <i>AddIpRoutes</i> operation, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/UsingWithDS_IAM_ResourcePermissions.html">Directory Service API Permissions: Actions, Resources, and Conditions Reference</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddIpRoutesResult'
        '480':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '481':
          description: EntityAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '483':
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryUnavailableException'
        '484':
          description: IpRouteLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpRouteLimitExceededException'
        '485':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '486':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddIpRoutesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.AddIpRoutes
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.AddRegion:
    post:
      operationId: AddRegion
      description: Adds two domain controllers in the specified Region for the specified directory.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddRegionResult'
        '480':
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryUnavailableException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '483':
          description: DirectoryAlreadyInRegionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryAlreadyInRegionException'
        '484':
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '485':
          description: DirectoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryDoesNotExistException'
        '486':
          description: RegionLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionLimitExceededException'
        '487':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '488':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '489':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddRegionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.AddRegion
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.AddTagsToResource:
    post:
      operationId: AddTagsToResource
      description: Adds or overwrites one or more tags for the specified directory. Each directory can have a maximum of 50 tags. Each tag consists of a key and optional value. Tag keys must be unique to each resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddTagsToResourceResult'
        '480':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: TagLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagLimitExceededException'
        '483':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '484':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddTagsToResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.AddTagsToResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.CancelSchemaExtension:
    post:
      operationId: CancelSchemaExtension
      description: 'Cancels an in-progress schema extension to a Microsoft AD directory. Once a schema extension has started replicating to all domain controllers, the task can no longer be canceled. A schema extension can be canceled during any of the following states; <code>Initializing</code>, <code>CreatingSnapshot</code>, and <code>UpdatingSchema</code>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelSchemaExtensionResult'
        '480':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '481':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '482':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelSchemaExtensionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.CancelSchemaExtension
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.ConnectDirectory:
    post:
      operationId: ConnectDirectory
      description: '<p>Creates an AD Connector to connect to a self-managed directory.</p> <p>Before you call <code>ConnectDirectory</code>, ensure that all of the required permissions have been explicitly granted through a policy. For details about what permissions are required to run the <code>ConnectDirectory</code> operation, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/UsingWithDS_IAM_ResourcePermissions.html">Directory Service API Permissions: Actions, Resources, and Conditions Reference</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectDirectoryResult'
        '480':
          description: DirectoryLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryLimitExceededException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '483':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectDirectoryRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.ConnectDirectory
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.CreateAlias:
    post:
      operationId: CreateAlias
      description: '<p>Creates an alias for a directory and assigns the alias to the directory. The alias is used to construct the access URL for the directory, such as <code>http://&lt;alias&gt;.awsapps.com</code>.</p> <important> <p>After an alias has been created, it cannot be deleted or reused, so this operation should only be used when absolutely necessary.</p> </important>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAliasResult'
        '480':
          description: EntityAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
        '481':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '483':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '484':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAliasRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.CreateAlias
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.CreateComputer:
    post:
      operationId: CreateComputer
      description: Creates an Active Directory computer object in the specified directory.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateComputerResult'
        '480':
          description: AuthenticationFailedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationFailedException'
        '481':
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryUnavailableException'
        '482':
          description: EntityAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
        '483':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '484':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '485':
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '486':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '487':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateComputerRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.CreateComputer
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.CreateConditionalForwarder:
    post:
      operationId: CreateConditionalForwarder
      description: Creates a conditional forwarder associated with your Amazon Web Services directory. Conditional forwarders are required in order to set up a trust relationship with another domain. The conditional forwarder points to the trusted domain.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateConditionalForwarderResult'
        '480':
          description: EntityAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
        '481':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '482':
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryUnavailableException'
        '483':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '484':
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '485':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '486':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConditionalForwarderRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.CreateConditionalForwarder
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.CreateDirectory:
    post:
      operationId: CreateDirectory
      description: '<p>Creates a Simple AD directory. For more information, see <a href="https://docs.aws.amazon.com/directoryservice/latest/admin-guide/directory_simple_ad.html">Simple Active Directory</a> in the <i>Directory Service Admin Guide</i>.</p> <p>Before you call <code>CreateDirectory</code>, ensure that all of the required permissions have been explicitly granted through a policy. For details about what permissions are required to run the <code>CreateDirectory</code> operation, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/UsingWithDS_IAM_ResourcePermissions.html">Directory Service API Permissions: Actions, Resources, and Conditions Reference</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDirectoryResult'
        '480':
          description: DirectoryLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryLimitExceededException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '483':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDirectoryRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.CreateDirectory
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.CreateLogSubscription:
    post:
      operationId: CreateLogSubscription
      description: Creates a subscription to forward real-time Directory Service domain controller security logs to the specified Amazon CloudWatch log group in your Amazon Web Services account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLogSubscriptionResult'
        '480':
          description: EntityAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
        '481':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '482':
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '483':
          description: InsufficientPermissionsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientPermissionsException'
        '484':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '485':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLogSubscriptionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.CreateLogSubscription
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.CreateMicrosoftAD:
    post:
      operationId: CreateMicrosoftAD
      description: '<p>Creates a Microsoft AD directory in the Amazon Web Services Cloud. For more information, see <a href="https://docs.aws.amazon.com/directoryservice/latest/admin-guide/directory_microsoft_ad.html">Managed Microsoft AD</a> in the <i>Directory Service Admin Guide</i>.</p> <p>Before you call <i>CreateMicrosoftAD</i>, ensure that all of the required permissions have been explicitly granted through a policy. For details about what permissions are required to run the <i>CreateMicrosoftAD</i> operation, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/UsingWithDS_IAM_ResourcePermissions.html">Directory Service API Permissions: Actions, Resources, and Conditions Reference</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMicrosoftADResult'
        '480':
          description: DirectoryLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryLimitExceededException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '483':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '484':
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMicrosoftADRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.CreateMicrosoftAD
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.CreateSnapshot:
    post:
      operationId: CreateSnapshot
      description: <p>Creates a snapshot of a Simple AD or Microsoft AD directory in the Amazon Web Services cloud.</p> <note> <p>You cannot take snapshots of AD Connector directories.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSnapshotResult'
        '480':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: SnapshotLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotLimitExceededException'
        '483':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '484':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSnapshotRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.CreateSnapshot
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.CreateTrust:
    post:
      operationId: CreateTrust
      description: '<p>Directory Service for Microsoft Active Directory allows you to configure trust relationships. For example, you can establish a trust between your Managed Microsoft AD directory, and your existing self-managed Microsoft Active Directory. This would allow you to provide users and groups access to resources in either domain, with a single set of credentials.</p> <p>This action initiates the creation of the Amazon Web Services side of a trust relationship between an Managed Microsoft AD directory and an external domain. You can create either a forest trust or an external trust.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTrustResult'
        '480':
          description: EntityAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
        '481':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '483':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '484':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '485':
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTrustRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.CreateTrust
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.DeleteConditionalForwarder:
    post:
      operationId: DeleteConditionalForwarder
      description: Deletes a conditional forwarder that has been set up for your Amazon Web Services directory.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteConditionalForwarderResult'
        '480':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '481':
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryUnavailableException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '483':
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '484':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '485':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteConditionalForwarderRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.DeleteConditionalForwarder
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.DeleteDirectory:
    post:
      operationId: DeleteDirectory
      description: '<p>Deletes an Directory Service directory.</p> <p>Before you call <code>DeleteDirectory</code>, ensure that all of the required permissions have been explicitly granted through a policy. For details about what permissions are required to run the <code>DeleteDirectory</code> operation, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/UsingWithDS_IAM_ResourcePermissions.html">Directory Service API Permissions: Actions, Resources, and Conditions Reference</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDirectoryResult'
        '480':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '481':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '482':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDirectoryRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.DeleteDirectory
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.DeleteLogSubscription:
    post:
      operationId: DeleteLogSubscription
      description: Deletes the specified log subscription.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteLogSubscriptionResult'
        '480':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '481':
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '482':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '483':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteLogSubscriptionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.DeleteLogSubscription
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.DeleteSnapshot:
    post:
      operationId: DeleteSnapshot
      description: Deletes a directory snapshot.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSnapshotResult'
        '480':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '483':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteSnapshotRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.DeleteSnapshot
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.DeleteTrust:
    post:
      operationId: DeleteTrust
      description: Deletes an existing trust relationship between your Managed Microsoft AD directory and an external domain.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTrustResult'
        '480':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '483':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '484':
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTrustRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.DeleteTrust
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.DeregisterCertificate:
    post:
      operationId: DeregisterCertificate
      description: Deletes from the system the certificate that was registered for secure LDAP or client certificate authentication.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeregisterCertificateResult'
        '480':
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryUnavailableException'
        '481':
          description: DirectoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryDoesNotExistException'
        '482':
          description: CertificateDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateDoesNotExistException'
        '483':
          description: CertificateInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateInUseException'
        '484':
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '485':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '486':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '487':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeregisterCertificateRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.DeregisterCertificate
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.DeregisterEventTopic:
    post:
      operationId: DeregisterEventTopic
      description: Removes the specified directory as a publisher to the specified Amazon SNS topic.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeregisterEventTopicResult'
        '480':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '483':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeregisterEventTopicRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.DeregisterEventTopic
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.DescribeCertificate:
    post:
      operationId: DescribeCertificate
      description: Displays information about the certificate registered for secure LDAP or client certificate authentication.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeCertificateResult'
        '480':
          description: DirectoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryDoesNotExistException'
        '481':
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '482':
          description: CertificateDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateDoesNotExistException'
        '483':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '484':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '485':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeCertificateRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.DescribeCertificate
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.DescribeClientAuthenticationSettings:
    post:
      operationId: DescribeClientAuthenticationSettings
      description: 'Retrieves information about the type of client authentication for the specified directory, if the type is specified. If no type is specified, information about all client authentication types that are supported for the specified directory is retrieved. Currently, only <code>SmartCard</code> is supported. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeClientAuthenticationSettingsResult'
        '480':
          description: DirectoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryDoesNotExistException'
        '481':
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '484':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '485':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeClientAuthenticationSettingsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.DescribeClientAuthenticationSettings
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.DescribeConditionalForwarders:
    post:
      operationId: DescribeConditionalForwarders
      description: '<p>Obtains information about the conditional forwarders for this account.</p> <p>If no input parameters are provided for RemoteDomainNames, this request describes all conditional forwarders for the specified directory ID.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeConditionalForwardersResult'
        '480':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '481':
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryUnavailableException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '483':
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '484':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '485':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeConditionalForwardersRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.DescribeConditionalForwarders
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.DescribeDirectories:
    post:
      operationId: DescribeDirectories
      description: '<p>Obtains information about the directories that belong to this account.</p> <p>You can retrieve information about specific directories by passing the directory identifiers in the <code>DirectoryIds</code> parameter. Otherwise, all directories that belong to the current account are returned.</p> <p>This operation supports pagination with the use of the <code>NextToken</code> request and response parameters. If more results are available, the <code>DescribeDirectoriesResult.NextToken</code> member contains a token that you pass in the next call to <a>DescribeDirectories</a> to retrieve the next set of items.</p> <p>You can also specify a maximum number of return results with the <code>Limit</code> parameter.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDirectoriesResult'
        '480':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '483':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '484':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDirectoriesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.DescribeDirectories
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.DescribeDomainControllers:
    post:
      operationId: DescribeDomainControllers
      description: Provides information about any domain controllers in your directory.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDomainControllersResult'
        '480':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '481':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '483':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '484':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '485':
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDomainControllersRequest'
      parameters:
        - name: Limit
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.DescribeDomainControllers
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.DescribeEventTopics:
    post:
      operationId: DescribeEventTopics
      description: '<p>Obtains information about which Amazon SNS topics receive status messages from the specified directory.</p> <p>If no input parameters are provided, such as DirectoryId or TopicName, this request describes all of the associations in the account.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeEventTopicsResult'
        '480':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '483':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeEventTopicsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.DescribeEventTopics
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.DescribeLDAPSSettings:
    post:
      operationId: DescribeLDAPSSettings
      description: Describes the status of LDAP security for the specified directory.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeLDAPSSettingsResult'
        '480':
          description: DirectoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryDoesNotExistException'
        '481':
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '482':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '483':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '484':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '485':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeLDAPSSettingsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.DescribeLDAPSSettings
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.DescribeRegions:
    post:
      operationId: DescribeRegions
      description: Provides information about the Regions that are configured for multi-Region replication.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeRegionsResult'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: DirectoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryDoesNotExistException'
        '482':
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '483':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '486':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeRegionsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.DescribeRegions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.DescribeSharedDirectories:
    post:
      operationId: DescribeSharedDirectories
      description: 'Returns the shared directories in your account. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeSharedDirectoriesResult'
        '480':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '481':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '483':
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '484':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '485':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeSharedDirectoriesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.DescribeSharedDirectories
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.DescribeSnapshots:
    post:
      operationId: DescribeSnapshots
      description: '<p>Obtains information about the directory snapshots that belong to this account.</p> <p>This operation supports pagination with the use of the <i>NextToken</i> request and response parameters. If more results are available, the <i>DescribeSnapshots.NextToken</i> member contains a token that you pass in the next call to <a>DescribeSnapshots</a> to retrieve the next set of items.</p> <p>You can also specify a maximum number of return results with the <i>Limit</i> parameter.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeSnapshotsResult'
        '480':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '483':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '484':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeSnapshotsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.DescribeSnapshots
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.DescribeTrusts:
    post:
      operationId: DescribeTrusts
      description: '<p>Obtains information about the trust relationships for this account.</p> <p>If no input parameters are provided, such as DirectoryId or TrustIds, this request describes all the trust relationships belonging to the account.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeTrustsResult'
        '480':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '481':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '483':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '484':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '485':
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeTrustsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.DescribeTrusts
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.DisableClientAuthentication:
    post:
      operationId: DisableClientAuthentication
      description: 'Disables alternative client authentication methods for the specified directory. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisableClientAuthenticationResult'
        '480':
          description: DirectoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryDoesNotExistException'
        '481':
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '482':
          description: InvalidClientAuthStatusException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidClientAuthStatusException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '485':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisableClientAuthenticationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.DisableClientAuthentication
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.DisableLDAPS:
    post:
      operationId: DisableLDAPS
      description: Deactivates LDAP secure calls for the specified directory.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisableLDAPSResult'
        '480':
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryUnavailableException'
        '481':
          description: DirectoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryDoesNotExistException'
        '482':
          description: InvalidLDAPSStatusException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLDAPSStatusException'
        '483':
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '484':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '485':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '486':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisableLDAPSRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.DisableLDAPS
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.DisableRadius:
    post:
      operationId: DisableRadius
      description: Disables multi-factor authentication (MFA) with the Remote Authentication Dial In User Service (RADIUS) server for an AD Connector or Microsoft AD directory.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisableRadiusResult'
        '480':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '481':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '482':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisableRadiusRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.DisableRadius
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.DisableSso:
    post:
      operationId: DisableSso
      description: Disables single-sign on for a directory.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisableSsoResult'
        '480':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '481':
          description: InsufficientPermissionsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientPermissionsException'
        '482':
          description: AuthenticationFailedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationFailedException'
        '483':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '484':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisableSsoRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.DisableSso
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.EnableClientAuthentication:
    post:
      operationId: EnableClientAuthentication
      description: Enables alternative client authentication methods for the specified directory.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnableClientAuthenticationResult'
        '480':
          description: DirectoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryDoesNotExistException'
        '481':
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '482':
          description: InvalidClientAuthStatusException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidClientAuthStatusException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: NoAvailableCertificateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoAvailableCertificateException'
        '485':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '486':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableClientAuthenticationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.EnableClientAuthentication
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.EnableLDAPS:
    post:
      operationId: EnableLDAPS
      description: Activates the switch for the specific directory to always use LDAP secure calls.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnableLDAPSResult'
        '480':
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryUnavailableException'
        '481':
          description: DirectoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryDoesNotExistException'
        '482':
          description: NoAvailableCertificateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoAvailableCertificateException'
        '483':
          description: InvalidLDAPSStatusException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLDAPSStatusException'
        '484':
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '485':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '486':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '487':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableLDAPSRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.EnableLDAPS
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.EnableRadius:
    post:
      operationId: EnableRadius
      description: Enables multi-factor authentication (MFA) with the Remote Authentication Dial In User Service (RADIUS) server for an AD Connector or Microsoft AD directory.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnableRadiusResult'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: EntityAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
        '482':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '483':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '484':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableRadiusRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.EnableRadius
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.EnableSso:
    post:
      operationId: EnableSso
      description: Enables single sign-on for a directory. Single sign-on allows users in your directory to access certain Amazon Web Services services from a computer joined to the directory without having to enter their credentials separately.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnableSsoResult'
        '480':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '481':
          description: InsufficientPermissionsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientPermissionsException'
        '482':
          description: AuthenticationFailedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationFailedException'
        '483':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '484':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableSsoRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.EnableSso
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.GetDirectoryLimits:
    post:
      operationId: GetDirectoryLimits
      description: Obtains directory limit information for the current Region.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDirectoryLimitsResult'
        '480':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '481':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '482':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDirectoryLimitsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.GetDirectoryLimits
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.GetSnapshotLimits:
    post:
      operationId: GetSnapshotLimits
      description: Obtains the manual snapshot limits for a directory.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSnapshotLimitsResult'
        '480':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '481':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '482':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSnapshotLimitsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.GetSnapshotLimits
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.ListCertificates:
    post:
      operationId: ListCertificates
      description: 'For the specified directory, lists all the certificates registered for a secure LDAP or client certificate authentication.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCertificatesResult'
        '480':
          description: DirectoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryDoesNotExistException'
        '481':
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '483':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '484':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '485':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListCertificatesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.ListCertificates
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.ListIpRoutes:
    post:
      operationId: ListIpRoutes
      description: Lists the address blocks that you have added to a directory.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListIpRoutesResult'
        '480':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '481':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '483':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '484':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListIpRoutesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.ListIpRoutes
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.ListLogSubscriptions:
    post:
      operationId: ListLogSubscriptions
      description: Lists the active log subscriptions for the Amazon Web Services account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLogSubscriptionsResult'
        '480':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '481':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '482':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '483':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListLogSubscriptionsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.ListLogSubscriptions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.ListSchemaExtensions:
    post:
      operationId: ListSchemaExtensions
      description: Lists all schema extensions applied to a Microsoft AD Directory.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSchemaExtensionsResult'
        '480':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '481':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '482':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '483':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListSchemaExtensionsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.ListSchemaExtensions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.ListTagsForResource:
    post:
      operationId: ListTagsForResource
      description: Lists all tags on a directory.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResult'
        '480':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '481':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '483':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '484':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.ListTagsForResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.RegisterCertificate:
    post:
      operationId: RegisterCertificate
      description: Registers a certificate for a secure LDAP or client certificate authentication.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterCertificateResult'
        '480':
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryUnavailableException'
        '481':
          description: DirectoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryDoesNotExistException'
        '482':
          description: InvalidCertificateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidCertificateException'
        '483':
          description: CertificateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateLimitExceededException'
        '484':
          description: CertificateAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateAlreadyExistsException'
        '485':
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '486':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '487':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '488':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterCertificateRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.RegisterCertificate
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.RegisterEventTopic:
    post:
      operationId: RegisterEventTopic
      description: Associates a directory with an Amazon SNS topic. This establishes the directory as a publisher to the specified Amazon SNS topic. You can then receive email or text (SMS) messages when the status of your directory changes. You get notified if your directory goes from an Active status to an Impaired or Inoperable status. You also receive a notification when the directory returns to an Active status.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterEventTopicResult'
        '480':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '483':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterEventTopicRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.RegisterEventTopic
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.RejectSharedDirectory:
    post:
      operationId: RejectSharedDirectory
      description: Rejects a directory sharing request that was sent from the directory owner account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RejectSharedDirectoryResult'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '482':
          description: DirectoryAlreadySharedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryAlreadySharedException'
        '483':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '484':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RejectSharedDirectoryRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.RejectSharedDirectory
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.RemoveIpRoutes:
    post:
      operationId: RemoveIpRoutes
      description: Removes IP address blocks from a directory.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveIpRoutesResult'
        '480':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryUnavailableException'
        '483':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '484':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveIpRoutesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.RemoveIpRoutes
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.RemoveRegion:
    post:
      operationId: RemoveRegion
      description: 'Stops all replication and removes the domain controllers from the specified Region. You cannot remove the primary Region with this operation. Instead, use the <code>DeleteDirectory</code> API.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveRegionResult'
        '480':
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryUnavailableException'
        '481':
          description: DirectoryDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryDoesNotExistException'
        '482':
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '485':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveRegionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.RemoveRegion
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.RemoveTagsFromResource:
    post:
      operationId: RemoveTagsFromResource
      description: Removes tags from a directory.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveTagsFromResourceResult'
        '480':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '483':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveTagsFromResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.RemoveTagsFromResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.ResetUserPassword:
    post:
      operationId: ResetUserPassword
      description: '<p>Resets the password for any user in your Managed Microsoft AD or Simple AD directory.</p> <p>You can reset the password for any user in your directory with the following exceptions:</p> <ul> <li> <p>For Simple AD, you cannot reset the password for any user that is a member of either the <b>Domain Admins</b> or <b>Enterprise Admins</b> group except for the administrator user.</p> </li> <li> <p>For Managed Microsoft AD, you can only reset the password for a user that is in an OU based off of the NetBIOS name that you typed when you created your directory. For example, you cannot reset the password for a user in the <b>Amazon Web Services Reserved</b> OU. For more information about the OU structure for an Managed Microsoft AD directory, see <a href="https://docs.aws.amazon.com/directoryservice/latest/admin-guide/ms_ad_getting_started_what_gets_created.html">What Gets Created</a> in the <i>Directory Service Administration Guide</i>.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetUserPasswordResult'
        '480':
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryUnavailableException'
        '481':
          description: UserDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDoesNotExistException'
        '482':
          description: InvalidPasswordException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPasswordException'
        '483':
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '484':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '485':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '486':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetUserPasswordRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.ResetUserPassword
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.RestoreFromSnapshot:
    post:
      operationId: RestoreFromSnapshot
      description: '<p>Restores a directory using an existing directory snapshot.</p> <p>When you restore a directory from a snapshot, any changes made to the directory after the snapshot date are overwritten.</p> <p>This action returns as soon as the restore operation is initiated. You can monitor the progress of the restore operation by calling the <a>DescribeDirectories</a> operation with the directory identifier. When the <b>DirectoryDescription.Stage</b> value changes to <code>Active</code>, the restore operation is complete.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestoreFromSnapshotResult'
        '480':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '483':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreFromSnapshotRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.RestoreFromSnapshot
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.ShareDirectory:
    post:
      operationId: ShareDirectory
      description: '<p>Shares a specified directory (<code>DirectoryId</code>) in your Amazon Web Services account (directory owner) with another Amazon Web Services account (directory consumer). With this operation you can use your directory from any Amazon Web Services account and from any Amazon VPC within an Amazon Web Services Region.</p> <p>When you share your Managed Microsoft AD directory, Directory Service creates a shared directory in the directory consumer account. This shared directory contains the metadata to provide access to the directory within the directory owner account. The shared directory is visible in all VPCs in the directory consumer account.</p> <p>The <code>ShareMethod</code> parameter determines whether the specified directory can be shared between Amazon Web Services accounts inside the same Amazon Web Services organization (<code>ORGANIZATIONS</code>). It also determines whether you can share the directory with any other Amazon Web Services account either inside or outside of the organization (<code>HANDSHAKE</code>).</p> <p>The <code>ShareNotes</code> parameter is only used when <code>HANDSHAKE</code> is called, which sends a directory sharing request to the directory consumer. </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareDirectoryResult'
        '480':
          description: DirectoryAlreadySharedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryAlreadySharedException'
        '481':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '482':
          description: InvalidTargetException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTargetException'
        '483':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '484':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '485':
          description: ShareLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareLimitExceededException'
        '486':
          description: OrganizationsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsException'
        '487':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '488':
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '489':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShareDirectoryRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.ShareDirectory
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.StartSchemaExtension:
    post:
      operationId: StartSchemaExtension
      description: Applies a schema extension to a Microsoft AD directory.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartSchemaExtensionResult'
        '480':
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryUnavailableException'
        '481':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '483':
          description: SnapshotLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotLimitExceededException'
        '484':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '485':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartSchemaExtensionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.StartSchemaExtension
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.UnshareDirectory:
    post:
      operationId: UnshareDirectory
      description: 'Stops the directory sharing between the directory owner and consumer accounts. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnshareDirectoryResult'
        '480':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '481':
          description: InvalidTargetException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTargetException'
        '482':
          description: DirectoryNotSharedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotSharedException'
        '483':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '484':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnshareDirectoryRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.UnshareDirectory
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.UpdateConditionalForwarder:
    post:
      operationId: UpdateConditionalForwarder
      description: Updates a conditional forwarder that has been set up for your Amazon Web Services directory.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateConditionalForwarderResult'
        '480':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '481':
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryUnavailableException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '483':
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '484':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '485':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConditionalForwarderRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.UpdateConditionalForwarder
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.UpdateNumberOfDomainControllers:
    post:
      operationId: UpdateNumberOfDomainControllers
      description: 'Adds or removes domain controllers to or from the directory. Based on the difference between current value and new value (provided through this API call), domain controllers will be added or removed. It may take up to 45 minutes for any new domain controllers to become fully active once the requested number of domain controllers is updated. During this time, you cannot make another update request.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateNumberOfDomainControllersResult'
        '480':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '481':
          description: DirectoryUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryUnavailableException'
        '482':
          description: DomainControllerLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainControllerLimitExceededException'
        '483':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '484':
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '485':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '486':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNumberOfDomainControllersRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.UpdateNumberOfDomainControllers
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.UpdateRadius:
    post:
      operationId: UpdateRadius
      description: Updates the Remote Authentication Dial In User Service (RADIUS) server information for an AD Connector or Microsoft AD directory.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRadiusResult'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '482':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '483':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRadiusRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.UpdateRadius
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.UpdateTrust:
    post:
      operationId: UpdateTrust
      description: Updates the trust that has been set up between your Managed Microsoft AD directory and an self-managed Active Directory.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTrustResult'
        '480':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '483':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTrustRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.UpdateTrust
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=DirectoryService_20150416.VerifyTrust:
    post:
      operationId: VerifyTrust
      description: <p>Directory Service for Microsoft Active Directory allows you to configure and verify trust relationships.</p> <p>This action verifies a trust relationship between your Managed Microsoft AD directory and an external domain.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyTrustResult'
        '480':
          description: EntityDoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDoesNotExistException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ClientException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '483':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '484':
          description: UnsupportedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyTrustRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - DirectoryService_20150416.VerifyTrust
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AcceptSharedDirectoryResult:
      type: object
      properties:
        SharedDirectory:
          $ref: '#/components/schemas/SharedDirectory'
          description: The shared directory in the directory consumer account.
    AcceptSharedDirectoryRequest:
      type: object
      required:
        - SharedDirectoryId
      title: AcceptSharedDirectoryRequest
      properties:
        SharedDirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: 'Identifier of the shared directory in the directory consumer account. This identifier is different for each directory owner account. '
    InvalidParameterException: {}
    EntityDoesNotExistException: {}
    DirectoryAlreadySharedException: {}
    ClientException: {}
    ServiceException: {}
    AddIpRoutesResult:
      type: object
      properties: {}
    AddIpRoutesRequest:
      type: object
      required:
        - DirectoryId
        - IpRoutes
      title: AddIpRoutesRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: Identifier (ID) of the directory to which to add the address block.
        IpRoutes:
          $ref: '#/components/schemas/IpRoutes'
          description: 'IP address blocks, using CIDR format, of the traffic to route. This is often the IP address block of the DNS server used for your self-managed domain.'
        UpdateSecurityGroupForDirectoryControllers:
          $ref: '#/components/schemas/UpdateSecurityGroupForDirectoryControllers'
          description: '<p>If set to true, updates the inbound and outbound rules of the security group that has the description: "Amazon Web Services created security group for <i>directory ID</i> directory controllers." Following are the new rules: </p> <p>Inbound:</p> <ul> <li> <p>Type: Custom UDP Rule, Protocol: UDP, Range: 88, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom UDP Rule, Protocol: UDP, Range: 123, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom UDP Rule, Protocol: UDP, Range: 138, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom UDP Rule, Protocol: UDP, Range: 389, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom UDP Rule, Protocol: UDP, Range: 464, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom UDP Rule, Protocol: UDP, Range: 445, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom TCP Rule, Protocol: TCP, Range: 88, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom TCP Rule, Protocol: TCP, Range: 135, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom TCP Rule, Protocol: TCP, Range: 445, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom TCP Rule, Protocol: TCP, Range: 464, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom TCP Rule, Protocol: TCP, Range: 636, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom TCP Rule, Protocol: TCP, Range: 1024-65535, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom TCP Rule, Protocol: TCP, Range: 3268-33269, Source: 0.0.0.0/0</p> </li> <li> <p>Type: DNS (UDP), Protocol: UDP, Range: 53, Source: 0.0.0.0/0</p> </li> <li> <p>Type: DNS (TCP), Protocol: TCP, Range: 53, Source: 0.0.0.0/0</p> </li> <li> <p>Type: LDAP, Protocol: TCP, Range: 389, Source: 0.0.0.0/0</p> </li> <li> <p>Type: All ICMP, Protocol: All, Range: N/A, Source: 0.0.0.0/0</p> </li> </ul> <p/> <p>Outbound:</p> <ul> <li> <p>Type: All traffic, Protocol: All, Range: All, Destination: 0.0.0.0/0</p> </li> </ul> <p>These security rules impact an internal network interface that is not exposed publicly.</p>'
    EntityAlreadyExistsException: {}
    DirectoryUnavailableException: {}
    IpRouteLimitExceededException: {}
    AddRegionResult:
      type: object
      properties: {}
    AddRegionRequest:
      type: object
      required:
        - DirectoryId
        - RegionName
        - VPCSettings
      title: AddRegionRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The identifier of the directory to which you want to add Region replication.
        RegionName:
          $ref: '#/components/schemas/RegionName'
          description: 'The name of the Region where you want to add domain controllers for replication. For example, <code>us-east-1</code>.'
        VPCSettings:
          $ref: '#/components/schemas/DirectoryVpcSettings'
    DirectoryAlreadyInRegionException: {}
    UnsupportedOperationException: {}
    DirectoryDoesNotExistException: {}
    RegionLimitExceededException: {}
    AccessDeniedException: {}
    AddTagsToResourceResult:
      type: object
      properties: {}
    AddTagsToResourceRequest:
      type: object
      required:
        - ResourceId
        - Tags
      title: AddTagsToResourceRequest
      properties:
        ResourceId:
          $ref: '#/components/schemas/ResourceId'
          description: Identifier (ID) for the directory to which to add the tag.
        Tags:
          $ref: '#/components/schemas/Tags'
          description: The tags to be assigned to the directory.
    TagLimitExceededException: {}
    CancelSchemaExtensionResult:
      type: object
      properties: {}
    CancelSchemaExtensionRequest:
      type: object
      required:
        - DirectoryId
        - SchemaExtensionId
      title: CancelSchemaExtensionRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The identifier of the directory whose schema extension will be canceled.
        SchemaExtensionId:
          $ref: '#/components/schemas/SchemaExtensionId'
          description: The identifier of the schema extension that will be canceled.
    ConnectDirectoryResult:
      type: object
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The identifier of the new directory.
      description: Contains the results of the <a>ConnectDirectory</a> operation.
    ConnectDirectoryRequest:
      type: object
      required:
        - Name
        - Password
        - Size
        - ConnectSettings
      title: ConnectDirectoryRequest
      properties:
        Name:
          $ref: '#/components/schemas/DirectoryName'
          description: 'The fully qualified name of your self-managed directory, such as <code>corp.example.com</code>.'
        ShortName:
          $ref: '#/components/schemas/DirectoryShortName'
          description: 'The NetBIOS name of your self-managed directory, such as <code>CORP</code>.'
        Password:
          $ref: '#/components/schemas/ConnectPassword'
          description: The password for your self-managed user account.
        Description:
          $ref: '#/components/schemas/Description'
          description: A description for the directory.
        Size:
          $ref: '#/components/schemas/DirectorySize'
          description: The size of the directory.
        ConnectSettings:
          $ref: '#/components/schemas/DirectoryConnectSettings'
          description: A <a>DirectoryConnectSettings</a> object that contains additional information for the operation.
        Tags:
          $ref: '#/components/schemas/Tags'
          description: The tags to be assigned to AD Connector.
      description: Contains the inputs for the <a>ConnectDirectory</a> operation.
    DirectoryLimitExceededException: {}
    CreateAliasResult:
      type: object
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The identifier of the directory.
        Alias:
          $ref: '#/components/schemas/AliasName'
          description: The alias for the directory.
      description: Contains the results of the <a>CreateAlias</a> operation.
    CreateAliasRequest:
      type: object
      required:
        - DirectoryId
        - Alias
      title: CreateAliasRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The identifier of the directory for which to create the alias.
        Alias:
          $ref: '#/components/schemas/AliasName'
          description: <p>The requested alias.</p> <p>The alias must be unique amongst all aliases in Amazon Web Services. This operation throws an <code>EntityAlreadyExistsException</code> error if the alias already exists.</p>
      description: Contains the inputs for the <a>CreateAlias</a> operation.
    CreateComputerResult:
      type: object
      properties:
        Computer:
          $ref: '#/components/schemas/Computer'
          description: A <a>Computer</a> object that represents the computer account.
      description: Contains the results for the <a>CreateComputer</a> operation.
    CreateComputerRequest:
      type: object
      required:
        - DirectoryId
        - ComputerName
        - Password
      title: CreateComputerRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The identifier of the directory in which to create the computer account.
        ComputerName:
          $ref: '#/components/schemas/ComputerName'
          description: The name of the computer account.
        Password:
          $ref: '#/components/schemas/ComputerPassword'
          description: 'A one-time password that is used to join the computer to the directory. You should generate a random, strong password to use for this parameter.'
        OrganizationalUnitDistinguishedName:
          $ref: '#/components/schemas/OrganizationalUnitDN'
          description: The fully-qualified distinguished name of the organizational unit to place the computer account in.
        ComputerAttributes:
          $ref: '#/components/schemas/Attributes'
          description: An array of <a>Attribute</a> objects that contain any LDAP attributes to apply to the computer account.
      description: Contains the inputs for the <a>CreateComputer</a> operation.
    AuthenticationFailedException: {}
    CreateConditionalForwarderResult:
      type: object
      properties: {}
      description: The result of a CreateConditinalForwarder request.
    CreateConditionalForwarderRequest:
      type: object
      required:
        - DirectoryId
        - RemoteDomainName
        - DnsIpAddrs
      title: CreateConditionalForwarderRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The directory ID of the Amazon Web Services directory for which you are creating the conditional forwarder.
        RemoteDomainName:
          $ref: '#/components/schemas/RemoteDomainName'
          description: The fully qualified domain name (FQDN) of the remote domain with which you will set up a trust relationship.
        DnsIpAddrs:
          $ref: '#/components/schemas/DnsIpAddrs'
          description: The IP addresses of the remote DNS server associated with RemoteDomainName.
      description: Initiates the creation of a conditional forwarder for your Directory Service for Microsoft Active Directory. Conditional forwarders are required in order to set up a trust relationship with another domain.
    CreateDirectoryResult:
      type: object
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The identifier of the directory that was created.
      description: Contains the results of the <a>CreateDirectory</a> operation.
    CreateDirectoryRequest:
      type: object
      required:
        - Name
        - Password
        - Size
      title: CreateDirectoryRequest
      properties:
        Name:
          $ref: '#/components/schemas/DirectoryName'
          description: 'The fully qualified name for the directory, such as <code>corp.example.com</code>.'
        ShortName:
          $ref: '#/components/schemas/DirectoryShortName'
          description: 'The NetBIOS name of the directory, such as <code>CORP</code>.'
        Password:
          $ref: '#/components/schemas/Password'
          description: '<p>The password for the directory administrator. The directory creation process creates a directory administrator account with the user name <code>Administrator</code> and this password.</p> <p>If you need to change the password for the administrator account, you can use the <a>ResetUserPassword</a> API call.</p> <p>The regex pattern for this string is made up of the following conditions:</p> <ul> <li> <p>Length (?=^.{8,64}$) – Must be between 8 and 64 characters</p> </li> </ul> <p>AND any 3 of the following password complexity rules required by Active Directory:</p> <ul> <li> <p>Numbers and upper case and lowercase (?=.*\d)(?=.*[A-Z])(?=.*[a-z])</p> </li> <li> <p>Numbers and special characters and lower case (?=.*\d)(?=.*[^A-Za-z0-9\s])(?=.*[a-z])</p> </li> <li> <p>Special characters and upper case and lower case (?=.*[^A-Za-z0-9\s])(?=.*[A-Z])(?=.*[a-z])</p> </li> <li> <p>Numbers and upper case and special characters (?=.*\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9\s])</p> </li> </ul> <p>For additional information about how Active Directory passwords are enforced, see <a href="https://docs.microsoft.com/en-us/windows/security/threat-protection/security-policy-settings/password-must-meet-complexity-requirements">Password must meet complexity requirements</a> on the Microsoft website.</p>'
        Description:
          $ref: '#/components/schemas/Description'
          description: A description for the directory.
        Size:
          $ref: '#/components/schemas/DirectorySize'
          description: The size of the directory.
        VpcSettings:
          $ref: '#/components/schemas/DirectoryVpcSettings'
          description: A <a>DirectoryVpcSettings</a> object that contains additional information for the operation.
        Tags:
          $ref: '#/components/schemas/Tags'
          description: The tags to be assigned to the Simple AD directory.
      description: 'Contains the inputs for the <a>CreateDirectory</a> operation. '
    CreateLogSubscriptionResult:
      type: object
      properties: {}
    CreateLogSubscriptionRequest:
      type: object
      required:
        - DirectoryId
        - LogGroupName
      title: CreateLogSubscriptionRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: Identifier of the directory to which you want to subscribe and receive real-time logs to your specified CloudWatch log group.
        LogGroupName:
          $ref: '#/components/schemas/LogGroupName'
          description: The name of the CloudWatch log group where the real-time domain controller logs are forwarded.
    InsufficientPermissionsException: {}
    CreateMicrosoftADResult:
      type: object
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The identifier of the directory that was created.
      description: Result of a CreateMicrosoftAD request.
    CreateMicrosoftADRequest:
      type: object
      required:
        - Name
        - Password
        - VpcSettings
      title: CreateMicrosoftADRequest
      properties:
        Name:
          $ref: '#/components/schemas/DirectoryName'
          description: 'The fully qualified domain name for the Managed Microsoft AD directory, such as <code>corp.example.com</code>. This name will resolve inside your VPC only. It does not need to be publicly resolvable.'
        ShortName:
          $ref: '#/components/schemas/DirectoryShortName'
          description: 'The NetBIOS name for your domain, such as <code>CORP</code>. If you don''t specify a NetBIOS name, it will default to the first part of your directory DNS. For example, <code>CORP</code> for the directory DNS <code>corp.example.com</code>. '
        Password:
          $ref: '#/components/schemas/Password'
          description: '<p>The password for the default administrative user named <code>Admin</code>.</p> <p>If you need to change the password for the administrator account, you can use the <a>ResetUserPassword</a> API call.</p>'
        Description:
          $ref: '#/components/schemas/Description'
          description: A description for the directory. This label will appear on the Amazon Web Services console <code>Directory Details</code> page after the directory is created.
        VpcSettings:
          $ref: '#/components/schemas/DirectoryVpcSettings'
          description: Contains VPC information for the <a>CreateDirectory</a> or <a>CreateMicrosoftAD</a> operation.
        Edition:
          $ref: '#/components/schemas/DirectoryEdition'
          description: 'Managed Microsoft AD is available in two editions: <code>Standard</code> and <code>Enterprise</code>. <code>Enterprise</code> is the default.'
        Tags:
          $ref: '#/components/schemas/Tags'
          description: The tags to be assigned to the Managed Microsoft AD directory.
      description: Creates an Managed Microsoft AD directory.
    CreateSnapshotResult:
      type: object
      properties:
        SnapshotId:
          $ref: '#/components/schemas/SnapshotId'
          description: The identifier of the snapshot that was created.
      description: Contains the results of the <a>CreateSnapshot</a> operation.
    CreateSnapshotRequest:
      type: object
      required:
        - DirectoryId
      title: CreateSnapshotRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The identifier of the directory of which to take a snapshot.
        Name:
          $ref: '#/components/schemas/SnapshotName'
          description: The descriptive name to apply to the snapshot.
      description: Contains the inputs for the <a>CreateSnapshot</a> operation.
    SnapshotLimitExceededException: {}
    CreateTrustResult:
      type: object
      properties:
        TrustId:
          $ref: '#/components/schemas/TrustId'
          description: A unique identifier for the trust relationship that was created.
      description: The result of a CreateTrust request.
    CreateTrustRequest:
      type: object
      required:
        - DirectoryId
        - RemoteDomainName
        - TrustPassword
        - TrustDirection
      title: CreateTrustRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The Directory ID of the Managed Microsoft AD directory for which to establish the trust relationship.
        RemoteDomainName:
          $ref: '#/components/schemas/RemoteDomainName'
          description: The Fully Qualified Domain Name (FQDN) of the external domain for which to create the trust relationship.
        TrustPassword:
          $ref: '#/components/schemas/TrustPassword'
          description: The trust password. The must be the same password that was used when creating the trust relationship on the external domain.
        TrustDirection:
          $ref: '#/components/schemas/TrustDirection'
          description: The direction of the trust relationship.
        TrustType:
          $ref: '#/components/schemas/TrustType'
          description: The trust relationship type. <code>Forest</code> is the default.
        ConditionalForwarderIpAddrs:
          $ref: '#/components/schemas/DnsIpAddrs'
          description: The IP addresses of the remote DNS server associated with RemoteDomainName.
        SelectiveAuth:
          $ref: '#/components/schemas/SelectiveAuth'
          description: Optional parameter to enable selective authentication for the trust.
      description: '<p>Directory Service for Microsoft Active Directory allows you to configure trust relationships. For example, you can establish a trust between your Managed Microsoft AD directory, and your existing self-managed Microsoft Active Directory. This would allow you to provide users and groups access to resources in either domain, with a single set of credentials.</p> <p>This action initiates the creation of the Amazon Web Services side of a trust relationship between an Managed Microsoft AD directory and an external domain.</p>'
    DeleteConditionalForwarderResult:
      type: object
      properties: {}
      description: The result of a DeleteConditionalForwarder request.
    DeleteConditionalForwarderRequest:
      type: object
      required:
        - DirectoryId
        - RemoteDomainName
      title: DeleteConditionalForwarderRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The directory ID for which you are deleting the conditional forwarder.
        RemoteDomainName:
          $ref: '#/components/schemas/RemoteDomainName'
          description: The fully qualified domain name (FQDN) of the remote domain with which you are deleting the conditional forwarder.
      description: Deletes a conditional forwarder.
    DeleteDirectoryResult:
      type: object
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The directory identifier.
      description: Contains the results of the <a>DeleteDirectory</a> operation.
    DeleteDirectoryRequest:
      type: object
      required:
        - DirectoryId
      title: DeleteDirectoryRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The identifier of the directory to delete.
      description: Contains the inputs for the <a>DeleteDirectory</a> operation.
    DeleteLogSubscriptionResult:
      type: object
      properties: {}
    DeleteLogSubscriptionRequest:
      type: object
      required:
        - DirectoryId
      title: DeleteLogSubscriptionRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: Identifier of the directory whose log subscription you want to delete.
    DeleteSnapshotResult:
      type: object
      properties:
        SnapshotId:
          $ref: '#/components/schemas/SnapshotId'
          description: The identifier of the directory snapshot that was deleted.
      description: Contains the results of the <a>DeleteSnapshot</a> operation.
    DeleteSnapshotRequest:
      type: object
      required:
        - SnapshotId
      title: DeleteSnapshotRequest
      properties:
        SnapshotId:
          $ref: '#/components/schemas/SnapshotId'
          description: The identifier of the directory snapshot to be deleted.
      description: Contains the inputs for the <a>DeleteSnapshot</a> operation.
    DeleteTrustResult:
      type: object
      properties:
        TrustId:
          $ref: '#/components/schemas/TrustId'
          description: The Trust ID of the trust relationship that was deleted.
      description: The result of a DeleteTrust request.
    DeleteTrustRequest:
      type: object
      required:
        - TrustId
      title: DeleteTrustRequest
      properties:
        TrustId:
          $ref: '#/components/schemas/TrustId'
          description: The Trust ID of the trust relationship to be deleted.
        DeleteAssociatedConditionalForwarder:
          $ref: '#/components/schemas/DeleteAssociatedConditionalForwarder'
          description: Delete a conditional forwarder as part of a DeleteTrustRequest.
      description: Deletes the local side of an existing trust relationship between the Managed Microsoft AD directory and the external domain.
    DeregisterCertificateResult:
      type: object
      properties: {}
    DeregisterCertificateRequest:
      type: object
      required:
        - DirectoryId
        - CertificateId
      title: DeregisterCertificateRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The identifier of the directory.
        CertificateId:
          $ref: '#/components/schemas/CertificateId'
          description: The identifier of the certificate.
    CertificateDoesNotExistException: {}
    CertificateInUseException: {}
    DeregisterEventTopicResult:
      type: object
      properties: {}
      description: The result of a DeregisterEventTopic request.
    DeregisterEventTopicRequest:
      type: object
      required:
        - DirectoryId
        - TopicName
      title: DeregisterEventTopicRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The Directory ID to remove as a publisher. This directory will no longer send messages to the specified Amazon SNS topic.
        TopicName:
          $ref: '#/components/schemas/TopicName'
          description: The name of the Amazon SNS topic from which to remove the directory as a publisher.
      description: Removes the specified directory as a publisher to the specified Amazon SNS topic.
    DescribeCertificateResult:
      type: object
      properties:
        Certificate:
          $ref: '#/components/schemas/Certificate'
          description: 'Information about the certificate, including registered date time, certificate state, the reason for the state, expiration date time, and certificate common name.'
    DescribeCertificateRequest:
      type: object
      required:
        - DirectoryId
        - CertificateId
      title: DescribeCertificateRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The identifier of the directory.
        CertificateId:
          $ref: '#/components/schemas/CertificateId'
          description: The identifier of the certificate.
    DescribeClientAuthenticationSettingsResult:
      type: object
      properties:
        ClientAuthenticationSettingsInfo:
          $ref: '#/components/schemas/ClientAuthenticationSettingsInfo'
          description: 'Information about the type of client authentication for the specified directory. The following information is retrieved: The date and time when the status of the client authentication type was last updated, whether the client authentication type is enabled or disabled, and the type of client authentication.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The next token used to retrieve the client authentication settings if the number of setting types exceeds page limit and there is another page.
    DescribeClientAuthenticationSettingsRequest:
      type: object
      required:
        - DirectoryId
      title: DescribeClientAuthenticationSettingsRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The identifier of the directory for which to retrieve information.
        Type:
          $ref: '#/components/schemas/ClientAuthenticationType'
          description: 'The type of client authentication for which to retrieve information. If no type is specified, a list of all client authentication types that are supported for the specified directory is retrieved.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The <i>DescribeClientAuthenticationSettingsResult.NextToken</i> value from a previous call to <a>DescribeClientAuthenticationSettings</a>. Pass null if this is the first call.
        Limit:
          $ref: '#/components/schemas/PageLimit'
          description: 'The maximum number of items to return. If this value is zero, the maximum number of items is specified by the limitations of the operation. '
    DescribeConditionalForwardersResult:
      type: object
      properties:
        ConditionalForwarders:
          $ref: '#/components/schemas/ConditionalForwarders'
          description: The list of conditional forwarders that have been created.
      description: The result of a DescribeConditionalForwarder request.
    DescribeConditionalForwardersRequest:
      type: object
      required:
        - DirectoryId
      title: DescribeConditionalForwardersRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The directory ID for which to get the list of associated conditional forwarders.
        RemoteDomainNames:
          $ref: '#/components/schemas/RemoteDomainNames'
          description: 'The fully qualified domain names (FQDN) of the remote domains for which to get the list of associated conditional forwarders. If this member is null, all conditional forwarders are returned.'
      description: Describes a conditional forwarder.
    DescribeDirectoriesResult:
      type: object
      properties:
        DirectoryDescriptions:
          $ref: '#/components/schemas/DirectoryDescriptions'
          description: '<p>The list of <a>DirectoryDescription</a> objects that were retrieved.</p> <p>It is possible that this list contains less than the number of items specified in the <code>Limit</code> member of the request. This occurs if there are less than the requested number of items left to retrieve, or if the limitations of the operation have been exceeded.</p>'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If not null, more results are available. Pass this value for the <code>NextToken</code> parameter in a subsequent call to <a>DescribeDirectories</a> to retrieve the next set of items.'
      description: Contains the results of the <a>DescribeDirectories</a> operation.
    DescribeDirectoriesRequest:
      type: object
      title: DescribeDirectoriesRequest
      properties:
        DirectoryIds:
          $ref: '#/components/schemas/DirectoryIds'
          description: '<p>A list of identifiers of the directories for which to obtain the information. If this member is null, all directories that belong to the current account are returned.</p> <p>An empty list results in an <code>InvalidParameterException</code> being thrown.</p>'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The <code>DescribeDirectoriesResult.NextToken</code> value from a previous call to <a>DescribeDirectories</a>. Pass null if this is the first call.
        Limit:
          $ref: '#/components/schemas/Limit'
          description: 'The maximum number of items to return. If this value is zero, the maximum number of items is specified by the limitations of the operation.'
      description: Contains the inputs for the <a>DescribeDirectories</a> operation.
    InvalidNextTokenException: {}
    DescribeDomainControllersResult:
      type: object
      properties:
        DomainControllers:
          $ref: '#/components/schemas/DomainControllers'
          description: List of the <a>DomainController</a> objects that were retrieved.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If not null, more results are available. Pass this value for the <code>NextToken</code> parameter in a subsequent call to <a>DescribeDomainControllers</a> retrieve the next set of items.'
    DescribeDomainControllersRequest:
      type: object
      required:
        - DirectoryId
      title: DescribeDomainControllersRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: Identifier of the directory for which to retrieve the domain controller information.
        DomainControllerIds:
          $ref: '#/components/schemas/DomainControllerIds'
          description: A list of identifiers for the domain controllers whose information will be provided.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The <i>DescribeDomainControllers.NextToken</i> value from a previous call to <a>DescribeDomainControllers</a>. Pass null if this is the first call. '
        Limit:
          $ref: '#/components/schemas/Limit'
          description: The maximum number of items to return.
    DescribeEventTopicsResult:
      type: object
      properties:
        EventTopics:
          $ref: '#/components/schemas/EventTopics'
          description: A list of Amazon SNS topic names that receive status messages from the specified Directory ID.
      description: The result of a DescribeEventTopic request.
    DescribeEventTopicsRequest:
      type: object
      title: DescribeEventTopicsRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: 'The Directory ID for which to get the list of associated Amazon SNS topics. If this member is null, associations for all Directory IDs are returned.'
        TopicNames:
          $ref: '#/components/schemas/TopicNames'
          description: '<p>A list of Amazon SNS topic names for which to obtain the information. If this member is null, all associations for the specified Directory ID are returned.</p> <p>An empty list results in an <code>InvalidParameterException</code> being thrown.</p>'
      description: Describes event topics.
    DescribeLDAPSSettingsResult:
      type: object
      properties:
        LDAPSSettingsInfo:
          $ref: '#/components/schemas/LDAPSSettingsInfo'
          description: 'Information about LDAP security for the specified directory, including status of enablement, state last updated date time, and the reason for the state.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The next token used to retrieve the LDAPS settings if the number of setting types exceeds page limit and there is another page.
    DescribeLDAPSSettingsRequest:
      type: object
      required:
        - DirectoryId
      title: DescribeLDAPSSettingsRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The identifier of the directory.
        Type:
          $ref: '#/components/schemas/LDAPSType'
          description: The type of LDAP security to enable. Currently only the value <code>Client</code> is supported.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The type of next token used for pagination.
        Limit:
          $ref: '#/components/schemas/PageLimit'
          description: Specifies the number of items that should be displayed on one page.
    DescribeRegionsResult:
      type: object
      properties:
        RegionsDescription:
          $ref: '#/components/schemas/RegionsDescription'
          description: List of Region information related to the directory for each replicated Region.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If not null, more results are available. Pass this value for the <code>NextToken</code> parameter in a subsequent call to <a>DescribeRegions</a> to retrieve the next set of items.'
    DescribeRegionsRequest:
      type: object
      required:
        - DirectoryId
      title: DescribeRegionsRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The identifier of the directory.
        RegionName:
          $ref: '#/components/schemas/RegionName'
          description: 'The name of the Region. For example, <code>us-east-1</code>.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The <code>DescribeRegionsResult.NextToken</code> value from a previous call to <a>DescribeRegions</a>. Pass null if this is the first call.
    DescribeSharedDirectoriesResult:
      type: object
      properties:
        SharedDirectories:
          $ref: '#/components/schemas/SharedDirectories'
          description: A list of all shared directories in your account.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If not null, token that indicates that more results are available. Pass this value for the <code>NextToken</code> parameter in a subsequent call to <a>DescribeSharedDirectories</a> to retrieve the next set of items.'
    DescribeSharedDirectoriesRequest:
      type: object
      required:
        - OwnerDirectoryId
      title: DescribeSharedDirectoriesRequest
      properties:
        OwnerDirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: 'Returns the identifier of the directory in the directory owner account. '
        SharedDirectoryIds:
          $ref: '#/components/schemas/DirectoryIds'
          description: 'A list of identifiers of all shared directories in your account. '
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The <code>DescribeSharedDirectoriesResult.NextToken</code> value from a previous call to <a>DescribeSharedDirectories</a>. Pass null if this is the first call. '
        Limit:
          $ref: '#/components/schemas/Limit'
          description: The number of shared directories to return in the response object.
    DescribeSnapshotsResult:
      type: object
      properties:
        Snapshots:
          $ref: '#/components/schemas/Snapshots'
          description: '<p>The list of <a>Snapshot</a> objects that were retrieved.</p> <p>It is possible that this list contains less than the number of items specified in the <i>Limit</i> member of the request. This occurs if there are less than the requested number of items left to retrieve, or if the limitations of the operation have been exceeded.</p>'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If not null, more results are available. Pass this value in the <i>NextToken</i> member of a subsequent call to <a>DescribeSnapshots</a>.'
      description: Contains the results of the <a>DescribeSnapshots</a> operation.
    DescribeSnapshotsRequest:
      type: object
      title: DescribeSnapshotsRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The identifier of the directory for which to retrieve snapshot information.
        SnapshotIds:
          $ref: '#/components/schemas/SnapshotIds'
          description: 'A list of identifiers of the snapshots to obtain the information for. If this member is null or empty, all snapshots are returned using the <i>Limit</i> and <i>NextToken</i> members.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The <i>DescribeSnapshotsResult.NextToken</i> value from a previous call to <a>DescribeSnapshots</a>. Pass null if this is the first call.
        Limit:
          $ref: '#/components/schemas/Limit'
          description: The maximum number of objects to return.
      description: Contains the inputs for the <a>DescribeSnapshots</a> operation.
    DescribeTrustsResult:
      type: object
      properties:
        Trusts:
          $ref: '#/components/schemas/Trusts'
          description: '<p>The list of Trust objects that were retrieved.</p> <p>It is possible that this list contains less than the number of items specified in the <i>Limit</i> member of the request. This occurs if there are less than the requested number of items left to retrieve, or if the limitations of the operation have been exceeded.</p>'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If not null, more results are available. Pass this value for the <i>NextToken</i> parameter in a subsequent call to <a>DescribeTrusts</a> to retrieve the next set of items.'
      description: The result of a DescribeTrust request.
    DescribeTrustsRequest:
      type: object
      title: DescribeTrustsRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The Directory ID of the Amazon Web Services directory that is a part of the requested trust relationship.
        TrustIds:
          $ref: '#/components/schemas/TrustIds'
          description: '<p>A list of identifiers of the trust relationships for which to obtain the information. If this member is null, all trust relationships that belong to the current account are returned.</p> <p>An empty list results in an <code>InvalidParameterException</code> being thrown.</p>'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The <i>DescribeTrustsResult.NextToken</i> value from a previous call to <a>DescribeTrusts</a>. Pass null if this is the first call.
        Limit:
          $ref: '#/components/schemas/Limit'
          description: The maximum number of objects to return.
      description: 'Describes the trust relationships for a particular Managed Microsoft AD directory. If no input parameters are provided, such as directory ID or trust ID, this request describes all the trust relationships.'
    DisableClientAuthenticationResult:
      type: object
      properties: {}
    DisableClientAuthenticationRequest:
      type: object
      required:
        - DirectoryId
        - Type
      title: DisableClientAuthenticationRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: 'The identifier of the directory '
        Type:
          $ref: '#/components/schemas/ClientAuthenticationType'
          description: 'The type of client authentication to disable. Currently, only the parameter, <code>SmartCard</code> is supported.'
    InvalidClientAuthStatusException: {}
    DisableLDAPSResult:
      type: object
      properties: {}
    DisableLDAPSRequest:
      type: object
      required:
        - DirectoryId
        - Type
      title: DisableLDAPSRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The identifier of the directory.
        Type:
          $ref: '#/components/schemas/LDAPSType'
          description: The type of LDAP security to enable. Currently only the value <code>Client</code> is supported.
    InvalidLDAPSStatusException: {}
    DisableRadiusResult:
      type: object
      properties: {}
      description: Contains the results of the <a>DisableRadius</a> operation.
    DisableRadiusRequest:
      type: object
      required:
        - DirectoryId
      title: DisableRadiusRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The identifier of the directory for which to disable MFA.
      description: Contains the inputs for the <a>DisableRadius</a> operation.
    DisableSsoResult:
      type: object
      properties: {}
      description: Contains the results of the <a>DisableSso</a> operation.
    DisableSsoRequest:
      type: object
      required:
        - DirectoryId
      title: DisableSsoRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The identifier of the directory for which to disable single-sign on.
        UserName:
          $ref: '#/components/schemas/UserName'
          description: '<p>The username of an alternate account to use to disable single-sign on. This is only used for AD Connector directories. This account must have privileges to remove a service principal name.</p> <p>If the AD Connector service account does not have privileges to remove a service principal name, you can specify an alternate account with the <i>UserName</i> and <i>Password</i> parameters. These credentials are only used to disable single sign-on and are not stored by the service. The AD Connector service account is not changed.</p>'
        Password:
          $ref: '#/components/schemas/ConnectPassword'
          description: 'The password of an alternate account to use to disable single-sign on. This is only used for AD Connector directories. For more information, see the <i>UserName</i> parameter.'
      description: Contains the inputs for the <a>DisableSso</a> operation.
    EnableClientAuthenticationResult:
      type: object
      properties: {}
    EnableClientAuthenticationRequest:
      type: object
      required:
        - DirectoryId
        - Type
      title: EnableClientAuthenticationRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: 'The identifier of the specified directory. '
        Type:
          $ref: '#/components/schemas/ClientAuthenticationType'
          description: 'The type of client authentication to enable. Currently only the value <code>SmartCard</code> is supported. Smart card authentication in AD Connector requires that you enable Kerberos Constrained Delegation for the Service User to the LDAP service in your self-managed AD. '
    NoAvailableCertificateException: {}
    EnableLDAPSResult:
      type: object
      properties: {}
    EnableLDAPSRequest:
      type: object
      required:
        - DirectoryId
        - Type
      title: EnableLDAPSRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The identifier of the directory.
        Type:
          $ref: '#/components/schemas/LDAPSType'
          description: The type of LDAP security to enable. Currently only the value <code>Client</code> is supported.
    EnableRadiusResult:
      type: object
      properties: {}
      description: Contains the results of the <a>EnableRadius</a> operation.
    EnableRadiusRequest:
      type: object
      required:
        - DirectoryId
        - RadiusSettings
      title: EnableRadiusRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The identifier of the directory for which to enable MFA.
        RadiusSettings:
          $ref: '#/components/schemas/RadiusSettings'
          description: A <a>RadiusSettings</a> object that contains information about the RADIUS server.
      description: Contains the inputs for the <a>EnableRadius</a> operation.
    EnableSsoResult:
      type: object
      properties: {}
      description: Contains the results of the <a>EnableSso</a> operation.
    EnableSsoRequest:
      type: object
      required:
        - DirectoryId
      title: EnableSsoRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The identifier of the directory for which to enable single-sign on.
        UserName:
          $ref: '#/components/schemas/UserName'
          description: '<p>The username of an alternate account to use to enable single-sign on. This is only used for AD Connector directories. This account must have privileges to add a service principal name.</p> <p>If the AD Connector service account does not have privileges to add a service principal name, you can specify an alternate account with the <i>UserName</i> and <i>Password</i> parameters. These credentials are only used to enable single sign-on and are not stored by the service. The AD Connector service account is not changed.</p>'
        Password:
          $ref: '#/components/schemas/ConnectPassword'
          description: 'The password of an alternate account to use to enable single-sign on. This is only used for AD Connector directories. For more information, see the <i>UserName</i> parameter.'
      description: Contains the inputs for the <a>EnableSso</a> operation.
    GetDirectoryLimitsResult:
      type: object
      properties:
        DirectoryLimits:
          $ref: '#/components/schemas/DirectoryLimits'
          description: A <a>DirectoryLimits</a> object that contains the directory limits for the current Region.
      description: Contains the results of the <a>GetDirectoryLimits</a> operation.
    GetDirectoryLimitsRequest:
      type: object
      title: GetDirectoryLimitsRequest
      properties: {}
      description: Contains the inputs for the <a>GetDirectoryLimits</a> operation.
    GetSnapshotLimitsResult:
      type: object
      properties:
        SnapshotLimits:
          $ref: '#/components/schemas/SnapshotLimits'
          description: A <a>SnapshotLimits</a> object that contains the manual snapshot limits for the specified directory.
      description: Contains the results of the <a>GetSnapshotLimits</a> operation.
    GetSnapshotLimitsRequest:
      type: object
      required:
        - DirectoryId
      title: GetSnapshotLimitsRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: Contains the identifier of the directory to obtain the limits for.
      description: Contains the inputs for the <a>GetSnapshotLimits</a> operation.
    ListCertificatesResult:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: Indicates whether another page of certificates is available when the number of available certificates exceeds the page limit.
        CertificatesInfo:
          $ref: '#/components/schemas/CertificatesInfo'
          description: 'A list of certificates with basic details including certificate ID, certificate common name, certificate state.'
    ListCertificatesRequest:
      type: object
      required:
        - DirectoryId
      title: ListCertificatesRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The identifier of the directory.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token for requesting another page of certificates if the <code>NextToken</code> response element indicates that more certificates are available. Use the value of the returned <code>NextToken</code> element in your request until the token comes back as <code>null</code>. Pass <code>null</code> if this is the first call.
        Limit:
          $ref: '#/components/schemas/PageLimit'
          description: The number of items that should show up on one page
    ListIpRoutesResult:
      type: object
      properties:
        IpRoutesInfo:
          $ref: '#/components/schemas/IpRoutesInfo'
          description: A list of <a>IpRoute</a>s.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If not null, more results are available. Pass this value for the <i>NextToken</i> parameter in a subsequent call to <a>ListIpRoutes</a> to retrieve the next set of items.'
    ListIpRoutesRequest:
      type: object
      required:
        - DirectoryId
      title: ListIpRoutesRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: Identifier (ID) of the directory for which you want to retrieve the IP addresses.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The <i>ListIpRoutes.NextToken</i> value from a previous call to <a>ListIpRoutes</a>. Pass null if this is the first call.
        Limit:
          $ref: '#/components/schemas/Limit'
          description: 'Maximum number of items to return. If this value is zero, the maximum number of items is specified by the limitations of the operation.'
    ListLogSubscriptionsResult:
      type: object
      properties:
        LogSubscriptions:
          $ref: '#/components/schemas/LogSubscriptions'
          description: A list of active <a>LogSubscription</a> objects for calling the Amazon Web Services account.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token for the next set of items to return.
    ListLogSubscriptionsRequest:
      type: object
      title: ListLogSubscriptionsRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: 'If a <i>DirectoryID</i> is provided, lists only the log subscription associated with that directory. If no <i>DirectoryId</i> is provided, lists all log subscriptions associated with your Amazon Web Services account. If there are no log subscriptions for the Amazon Web Services account or the directory, an empty list will be returned.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token for the next set of items to return.
        Limit:
          $ref: '#/components/schemas/Limit'
          description: The maximum number of items returned.
    ListSchemaExtensionsResult:
      type: object
      properties:
        SchemaExtensionsInfo:
          $ref: '#/components/schemas/SchemaExtensionsInfo'
          description: Information about the schema extensions applied to the directory.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If not null, more results are available. Pass this value for the <code>NextToken</code> parameter in a subsequent call to <code>ListSchemaExtensions</code> to retrieve the next set of items.'
    ListSchemaExtensionsRequest:
      type: object
      required:
        - DirectoryId
      title: ListSchemaExtensionsRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The identifier of the directory from which to retrieve the schema extension information.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The <code>ListSchemaExtensions.NextToken</code> value from a previous call to <code>ListSchemaExtensions</code>. Pass null if this is the first call.
        Limit:
          $ref: '#/components/schemas/Limit'
          description: The maximum number of items to return.
    ListTagsForResourceResult:
      type: object
      properties:
        Tags:
          $ref: '#/components/schemas/Tags'
          description: List of tags returned by the ListTagsForResource operation.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: Reserved for future use.
    ListTagsForResourceRequest:
      type: object
      required:
        - ResourceId
      title: ListTagsForResourceRequest
      properties:
        ResourceId:
          $ref: '#/components/schemas/ResourceId'
          description: Identifier (ID) of the directory for which you want to retrieve tags.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: Reserved for future use.
        Limit:
          $ref: '#/components/schemas/Limit'
          description: Reserved for future use.
    RegisterCertificateResult:
      type: object
      properties:
        CertificateId:
          $ref: '#/components/schemas/CertificateId'
          description: The identifier of the certificate.
    RegisterCertificateRequest:
      type: object
      required:
        - DirectoryId
        - CertificateData
      title: RegisterCertificateRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The identifier of the directory.
        CertificateData:
          $ref: '#/components/schemas/CertificateData'
          description: The certificate PEM string that needs to be registered.
        Type:
          $ref: '#/components/schemas/CertificateType'
          description: The function that the registered certificate performs. Valid values include <code>ClientLDAPS</code> or <code>ClientCertAuth</code>. The default value is <code>ClientLDAPS</code>.
        ClientCertAuthSettings:
          $ref: '#/components/schemas/ClientCertAuthSettings'
          description: A <code>ClientCertAuthSettings</code> object that contains client certificate authentication settings.
    InvalidCertificateException: {}
    CertificateLimitExceededException: {}
    CertificateAlreadyExistsException: {}
    RegisterEventTopicResult:
      type: object
      properties: {}
      description: The result of a RegisterEventTopic request.
    RegisterEventTopicRequest:
      type: object
      required:
        - DirectoryId
        - TopicName
      title: RegisterEventTopicRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The Directory ID that will publish status messages to the Amazon SNS topic.
        TopicName:
          $ref: '#/components/schemas/TopicName'
          description: The Amazon SNS topic name to which the directory will publish status messages. This Amazon SNS topic must be in the same region as the specified Directory ID.
      description: Registers a new event topic.
    RejectSharedDirectoryResult:
      type: object
      properties:
        SharedDirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: Identifier of the shared directory in the directory consumer account.
    RejectSharedDirectoryRequest:
      type: object
      required:
        - SharedDirectoryId
      title: RejectSharedDirectoryRequest
      properties:
        SharedDirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: Identifier of the shared directory in the directory consumer account. This identifier is different for each directory owner account.
    RemoveIpRoutesResult:
      type: object
      properties: {}
    RemoveIpRoutesRequest:
      type: object
      required:
        - DirectoryId
        - CidrIps
      title: RemoveIpRoutesRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: Identifier (ID) of the directory from which you want to remove the IP addresses.
        CidrIps:
          $ref: '#/components/schemas/CidrIps'
          description: IP address blocks that you want to remove.
    RemoveRegionResult:
      type: object
      properties: {}
    RemoveRegionRequest:
      type: object
      required:
        - DirectoryId
      title: RemoveRegionRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The identifier of the directory for which you want to remove Region replication.
    RemoveTagsFromResourceResult:
      type: object
      properties: {}
    RemoveTagsFromResourceRequest:
      type: object
      required:
        - ResourceId
        - TagKeys
      title: RemoveTagsFromResourceRequest
      properties:
        ResourceId:
          $ref: '#/components/schemas/ResourceId'
          description: Identifier (ID) of the directory from which to remove the tag.
        TagKeys:
          $ref: '#/components/schemas/TagKeys'
          description: The tag key (name) of the tag to be removed.
    ResetUserPasswordResult:
      type: object
      properties: {}
    ResetUserPasswordRequest:
      type: object
      required:
        - DirectoryId
        - UserName
        - NewPassword
      title: ResetUserPasswordRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: Identifier of the Managed Microsoft AD or Simple AD directory in which the user resides.
        UserName:
          $ref: '#/components/schemas/CustomerUserName'
          description: The user name of the user whose password will be reset.
        NewPassword:
          $ref: '#/components/schemas/UserPassword'
          description: The new password that will be reset.
    UserDoesNotExistException: {}
    InvalidPasswordException: {}
    RestoreFromSnapshotResult:
      type: object
      properties: {}
      description: Contains the results of the <a>RestoreFromSnapshot</a> operation.
    RestoreFromSnapshotRequest:
      type: object
      required:
        - SnapshotId
      title: RestoreFromSnapshotRequest
      properties:
        SnapshotId:
          $ref: '#/components/schemas/SnapshotId'
          description: The identifier of the snapshot to restore from.
      description: An object representing the inputs for the <a>RestoreFromSnapshot</a> operation.
    ShareDirectoryResult:
      type: object
      properties:
        SharedDirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: Identifier of the directory that is stored in the directory consumer account that is shared from the specified directory (<code>DirectoryId</code>).
    ShareDirectoryRequest:
      type: object
      required:
        - DirectoryId
        - ShareTarget
        - ShareMethod
      title: ShareDirectoryRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: Identifier of the Managed Microsoft AD directory that you want to share with other Amazon Web Services accounts.
        ShareNotes:
          $ref: '#/components/schemas/Notes'
          description: A directory share request that is sent by the directory owner to the directory consumer. The request includes a typed message to help the directory consumer administrator determine whether to approve or reject the share invitation.
        ShareTarget:
          $ref: '#/components/schemas/ShareTarget'
          description: Identifier for the directory consumer account with whom the directory is to be shared.
        ShareMethod:
          $ref: '#/components/schemas/ShareMethod'
          description: The method used when sharing a directory to determine whether the directory should be shared within your Amazon Web Services organization (<code>ORGANIZATIONS</code>) or with any Amazon Web Services account by sending a directory sharing request (<code>HANDSHAKE</code>).
    InvalidTargetException: {}
    ShareLimitExceededException: {}
    OrganizationsException: {}
    StartSchemaExtensionResult:
      type: object
      properties:
        SchemaExtensionId:
          $ref: '#/components/schemas/SchemaExtensionId'
          description: The identifier of the schema extension that will be applied.
    StartSchemaExtensionRequest:
      type: object
      required:
        - DirectoryId
        - CreateSnapshotBeforeSchemaExtension
        - LdifContent
        - Description
      title: StartSchemaExtensionRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The identifier of the directory for which the schema extension will be applied to.
        CreateSnapshotBeforeSchemaExtension:
          $ref: '#/components/schemas/CreateSnapshotBeforeSchemaExtension'
          description: 'If true, creates a snapshot of the directory before applying the schema extension.'
        LdifContent:
          $ref: '#/components/schemas/LdifContent'
          description: 'The LDIF file represented as a string. To construct the LdifContent string, precede each line as it would be formatted in an ldif file with \n. See the example request below for more details. The file size can be no larger than 1MB.'
        Description:
          $ref: '#/components/schemas/Description'
          description: A description of the schema extension.
    UnshareDirectoryResult:
      type: object
      properties:
        SharedDirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: Identifier of the directory stored in the directory consumer account that is to be unshared from the specified directory (<code>DirectoryId</code>).
    UnshareDirectoryRequest:
      type: object
      required:
        - DirectoryId
        - UnshareTarget
      title: UnshareDirectoryRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The identifier of the Managed Microsoft AD directory that you want to stop sharing.
        UnshareTarget:
          $ref: '#/components/schemas/UnshareTarget'
          description: Identifier for the directory consumer account with whom the directory has to be unshared.
    DirectoryNotSharedException: {}
    UpdateConditionalForwarderResult:
      type: object
      properties: {}
      description: The result of an UpdateConditionalForwarder request.
    UpdateConditionalForwarderRequest:
      type: object
      required:
        - DirectoryId
        - RemoteDomainName
        - DnsIpAddrs
      title: UpdateConditionalForwarderRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The directory ID of the Amazon Web Services directory for which to update the conditional forwarder.
        RemoteDomainName:
          $ref: '#/components/schemas/RemoteDomainName'
          description: The fully qualified domain name (FQDN) of the remote domain with which you will set up a trust relationship.
        DnsIpAddrs:
          $ref: '#/components/schemas/DnsIpAddrs'
          description: The updated IP addresses of the remote DNS server associated with the conditional forwarder.
      description: Updates a conditional forwarder.
    UpdateNumberOfDomainControllersResult:
      type: object
      properties: {}
    UpdateNumberOfDomainControllersRequest:
      type: object
      required:
        - DirectoryId
        - DesiredNumber
      title: UpdateNumberOfDomainControllersRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: Identifier of the directory to which the domain controllers will be added or removed.
        DesiredNumber:
          $ref: '#/components/schemas/DesiredNumberOfDomainControllers'
          description: The number of domain controllers desired in the directory.
    DomainControllerLimitExceededException: {}
    UpdateRadiusResult:
      type: object
      properties: {}
      description: Contains the results of the <a>UpdateRadius</a> operation.
    UpdateRadiusRequest:
      type: object
      required:
        - DirectoryId
        - RadiusSettings
      title: UpdateRadiusRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The identifier of the directory for which to update the RADIUS server information.
        RadiusSettings:
          $ref: '#/components/schemas/RadiusSettings'
          description: A <a>RadiusSettings</a> object that contains information about the RADIUS server.
      description: Contains the inputs for the <a>UpdateRadius</a> operation.
    UpdateTrustResult:
      type: object
      properties:
        RequestId:
          $ref: '#/components/schemas/RequestId'
        TrustId:
          $ref: '#/components/schemas/TrustId'
          description: Identifier of the trust relationship.
    UpdateTrustRequest:
      type: object
      required:
        - TrustId
      title: UpdateTrustRequest
      properties:
        TrustId:
          $ref: '#/components/schemas/TrustId'
          description: Identifier of the trust relationship.
        SelectiveAuth:
          $ref: '#/components/schemas/SelectiveAuth'
          description: Updates selective authentication for the trust.
    VerifyTrustResult:
      type: object
      properties:
        TrustId:
          $ref: '#/components/schemas/TrustId'
          description: The unique Trust ID of the trust relationship that was verified.
      description: Result of a VerifyTrust request.
    VerifyTrustRequest:
      type: object
      required:
        - TrustId
      title: VerifyTrustRequest
      properties:
        TrustId:
          $ref: '#/components/schemas/TrustId'
          description: The unique Trust ID of the trust relationship to verify.
      description: Initiates the verification of an existing trust relationship between an Managed Microsoft AD directory and an external domain.
    DirectoryId:
      type: string
      pattern: '^d-[0-9a-f]{10}$'
    SharedDirectory:
      type: object
      properties:
        OwnerAccountId:
          $ref: '#/components/schemas/CustomerId'
          description: 'Identifier of the directory owner account, which contains the directory that has been shared to the consumer account.'
        OwnerDirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: 'Identifier of the directory in the directory owner account. '
        ShareMethod:
          $ref: '#/components/schemas/ShareMethod'
          description: The method used when sharing a directory to determine whether the directory should be shared within your Amazon Web Services organization (<code>ORGANIZATIONS</code>) or with any Amazon Web Services account by sending a shared directory request (<code>HANDSHAKE</code>).
        SharedAccountId:
          $ref: '#/components/schemas/CustomerId'
          description: Identifier of the directory consumer account that has access to the shared directory (<code>OwnerDirectoryId</code>) in the directory owner account.
        SharedDirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: Identifier of the shared directory in the directory consumer account. This identifier is different for each directory owner account.
        ShareStatus:
          $ref: '#/components/schemas/ShareStatus'
          description: Current directory status of the shared Managed Microsoft AD directory.
        ShareNotes:
          $ref: '#/components/schemas/Notes'
          description: A directory share request that is sent by the directory owner to the directory consumer. The request includes a typed message to help the directory consumer administrator determine whether to approve or reject the share invitation.
        CreatedDateTime:
          $ref: '#/components/schemas/CreatedDateTime'
          description: The date and time that the shared directory was created.
        LastUpdatedDateTime:
          $ref: '#/components/schemas/LastUpdatedDateTime'
          description: The date and time that the shared directory was last updated.
      description: Details about the shared directory in the directory owner account for which the share request in the directory consumer account has been accepted.
    AccessUrl:
      type: string
      minLength: 1
      maxLength: 128
    IpRoutes:
      type: array
      items:
        $ref: '#/components/schemas/IpRoute'
    UpdateSecurityGroupForDirectoryControllers:
      type: boolean
    RegionName:
      type: string
      minLength: 8
      maxLength: 32
    DirectoryVpcSettings:
      type: object
      required:
        - VpcId
        - SubnetIds
      properties:
        VpcId:
          $ref: '#/components/schemas/VpcId'
          description: The identifier of the VPC in which to create the directory.
        SubnetIds:
          $ref: '#/components/schemas/SubnetIds'
          description: The identifiers of the subnets for the directory servers. The two subnets must be in different Availability Zones. Directory Service creates a directory server and a DNS server in each of these subnets.
      description: Contains VPC information for the <a>CreateDirectory</a> or <a>CreateMicrosoftAD</a> operation.
    ResourceId:
      type: string
      pattern: '^[d]-[0-9a-f]{10}$'
    Tags:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    AddedDateTime:
      type: string
      format: date-time
    AdditionalRegions:
      type: array
      items:
        $ref: '#/components/schemas/RegionName'
    AliasName:
      type: string
      pattern: '^(?!D-|d-)([\da-zA-Z]+)([-]*[\da-zA-Z])*'
      minLength: 1
      maxLength: 62
    AttributeName:
      type: string
      minLength: 1
    AttributeValue:
      type: string
    Attribute:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/AttributeName'
          description: The name of the attribute.
        Value:
          $ref: '#/components/schemas/AttributeValue'
          description: The value of the attribute.
      description: Represents a named directory attribute.
    Attributes:
      type: array
      items:
        $ref: '#/components/schemas/Attribute'
    AvailabilityZone:
      type: string
    AvailabilityZones:
      type: array
      items:
        $ref: '#/components/schemas/AvailabilityZone'
    SchemaExtensionId:
      type: string
      pattern: '^e-[0-9a-f]{10}$'
    CertificateId:
      type: string
      pattern: '^c-[0-9a-f]{10}$'
    CertificateState:
      type: string
      enum:
        - Registering
        - Registered
        - RegisterFailed
        - Deregistering
        - Deregistered
        - DeregisterFailed
    CertificateStateReason:
      type: string
    CertificateCN:
      type: string
    CertificateRegisteredDateTime:
      type: string
      format: date-time
    CertificateExpiryDateTime:
      type: string
      format: date-time
    CertificateType:
      type: string
      enum:
        - ClientCertAuth
        - ClientLDAPS
    ClientCertAuthSettings:
      type: object
      properties:
        OCSPUrl:
          $ref: '#/components/schemas/OCSPUrl'
          description: Specifies the URL of the default OCSP server used to check for revocation status. A secondary value to any OCSP address found in the AIA extension of the user certificate.
      description: 'Contains information about the client certificate authentication settings for the <code>RegisterCertificate</code> and <code>DescribeCertificate</code> operations. '
    Certificate:
      type: object
      properties:
        CertificateId:
          $ref: '#/components/schemas/CertificateId'
          description: The identifier of the certificate.
        State:
          $ref: '#/components/schemas/CertificateState'
          description: The state of the certificate.
        StateReason:
          $ref: '#/components/schemas/CertificateStateReason'
          description: Describes a state change for the certificate.
        CommonName:
          $ref: '#/components/schemas/CertificateCN'
          description: The common name for the certificate.
        RegisteredDateTime:
          $ref: '#/components/schemas/CertificateRegisteredDateTime'
          description: The date and time that the certificate was registered.
        ExpiryDateTime:
          $ref: '#/components/schemas/CertificateExpiryDateTime'
          description: The date and time when the certificate will expire.
        Type:
          $ref: '#/components/schemas/CertificateType'
          description: The function that the registered certificate performs. Valid values include <code>ClientLDAPS</code> or <code>ClientCertAuth</code>. The default value is <code>ClientLDAPS</code>.
        ClientCertAuthSettings:
          $ref: '#/components/schemas/ClientCertAuthSettings'
          description: A <code>ClientCertAuthSettings</code> object that contains client certificate authentication settings.
      description: Information about the certificate.
    CertificateData:
      type: string
      minLength: 1
      maxLength: 8192
    CertificateInfo:
      type: object
      properties:
        CertificateId:
          $ref: '#/components/schemas/CertificateId'
          description: The identifier of the certificate.
        CommonName:
          $ref: '#/components/schemas/CertificateCN'
          description: The common name for the certificate.
        State:
          $ref: '#/components/schemas/CertificateState'
          description: The state of the certificate.
        ExpiryDateTime:
          $ref: '#/components/schemas/CertificateExpiryDateTime'
          description: The date and time when the certificate will expire.
        Type:
          $ref: '#/components/schemas/CertificateType'
          description: The function that the registered certificate performs. Valid values include <code>ClientLDAPS</code> or <code>ClientCertAuth</code>. The default value is <code>ClientLDAPS</code>.
      description: Contains general information about a certificate.
    CertificatesInfo:
      type: array
      items:
        $ref: '#/components/schemas/CertificateInfo'
    CidrIp:
      type: string
      pattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([1-9]|[1-2][0-9]|3[0-2]))$'
    CidrIps:
      type: array
      items:
        $ref: '#/components/schemas/CidrIp'
    ClientAuthenticationType:
      type: string
      enum:
        - SmartCard
    ClientAuthenticationStatus:
      type: string
      enum:
        - Enabled
        - Disabled
    LastUpdatedDateTime:
      type: string
      format: date-time
    ClientAuthenticationSettingInfo:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/ClientAuthenticationType'
          description: 'The type of client authentication for the specified directory. If no type is specified, a list of all client authentication types that are supported for the directory is retrieved. '
        Status:
          $ref: '#/components/schemas/ClientAuthenticationStatus'
          description: Whether the client authentication type is enabled or disabled for the specified directory.
        LastUpdatedDateTime:
          $ref: '#/components/schemas/LastUpdatedDateTime'
          description: The date and time when the status of the client authentication type was last updated.
      description: Contains information about a client authentication method for a directory.
    ClientAuthenticationSettingsInfo:
      type: array
      items:
        $ref: '#/components/schemas/ClientAuthenticationSettingInfo'
    OCSPUrl:
      type: string
      pattern: '^(https?|ftp|file|ldaps?)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;()]*[-a-zA-Z0-9+&@#/%=~_|()]'
      minLength: 1
      maxLength: 1024
    CloudOnlyDirectoriesLimitReached:
      type: boolean
    SID:
      type: string
      pattern: '[&\w+-.@]+'
      minLength: 1
      maxLength: 256
    ComputerName:
      type: string
      minLength: 1
      maxLength: 15
    Computer:
      type: object
      properties:
        ComputerId:
          $ref: '#/components/schemas/SID'
          description: The identifier of the computer.
        ComputerName:
          $ref: '#/components/schemas/ComputerName'
          description: The computer name.
        ComputerAttributes:
          $ref: '#/components/schemas/Attributes'
          description: An array of <a>Attribute</a> objects containing the LDAP attributes that belong to the computer account.
      description: Contains information about a computer account in a directory.
    ComputerPassword:
      type: string
      pattern: '[\u0020-\u00FF]+'
      minLength: 8
      maxLength: 64
      format: password
    RemoteDomainName:
      type: string
      pattern: '^([a-zA-Z0-9]+[\\.-])+([a-zA-Z0-9])+[.]?$'
    DnsIpAddrs:
      type: array
      items:
        $ref: '#/components/schemas/IpAddr'
    ReplicationScope:
      type: string
      enum:
        - Domain
    ConditionalForwarder:
      type: object
      properties:
        RemoteDomainName:
          $ref: '#/components/schemas/RemoteDomainName'
          description: The fully qualified domain name (FQDN) of the remote domains pointed to by the conditional forwarder.
        DnsIpAddrs:
          $ref: '#/components/schemas/DnsIpAddrs'
          description: The IP addresses of the remote DNS server associated with RemoteDomainName. This is the IP address of the DNS server that your conditional forwarder points to.
        ReplicationScope:
          $ref: '#/components/schemas/ReplicationScope'
          description: 'The replication scope of the conditional forwarder. The only allowed value is <code>Domain</code>, which will replicate the conditional forwarder to all of the domain controllers for your Amazon Web Services directory.'
      description: Points to a remote domain with which you are setting up a trust relationship. Conditional forwarders are required in order to set up a trust relationship with another domain.
    ConditionalForwarders:
      type: array
      items:
        $ref: '#/components/schemas/ConditionalForwarder'
    DirectoryName:
      type: string
      pattern: '^([a-zA-Z0-9]+[\\.-])+([a-zA-Z0-9])+$'
    DirectoryShortName:
      type: string
      pattern: '^[^\\/:*?"<>|.]+[^\\/:*?"<>|]*$'
    ConnectPassword:
      type: string
      minLength: 1
      maxLength: 128
      format: password
    Description:
      type: string
      pattern: '^([a-zA-Z0-9_])[\\a-zA-Z0-9_@#%*+=:?./!\s-]*$'
      minLength: 0
      maxLength: 128
    DirectorySize:
      type: string
      enum:
        - Small
        - Large
    DirectoryConnectSettings:
      type: object
      required:
        - VpcId
        - SubnetIds
        - CustomerDnsIps
        - CustomerUserName
      properties:
        VpcId:
          $ref: '#/components/schemas/VpcId'
          description: The identifier of the VPC in which the AD Connector is created.
        SubnetIds:
          $ref: '#/components/schemas/SubnetIds'
          description: A list of subnet identifiers in the VPC in which the AD Connector is created.
        CustomerDnsIps:
          $ref: '#/components/schemas/DnsIpAddrs'
          description: A list of one or more IP addresses of DNS servers or domain controllers in your self-managed directory.
        CustomerUserName:
          $ref: '#/components/schemas/UserName'
          description: '<p>The user name of an account in your self-managed directory that is used to connect to the directory. This account must have the following permissions:</p> <ul> <li> <p>Read users and groups</p> </li> <li> <p>Create computer objects</p> </li> <li> <p>Join computers to the domain</p> </li> </ul>'
      description: Contains information for the <a>ConnectDirectory</a> operation when an AD Connector directory is being created.
    ConnectedDirectoriesLimitReached:
      type: boolean
    OrganizationalUnitDN:
      type: string
      minLength: 1
      maxLength: 2000
    Password:
      type: string
      pattern: '(?=^.{8,64}$)((?=.*\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[^A-Za-z0-9\s])(?=.*[a-z])|(?=.*[^A-Za-z0-9\s])(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9\s]))^.*'
      format: password
    LogGroupName:
      type: string
      pattern: '[-._/#A-Za-z0-9]+'
      minLength: 1
      maxLength: 512
    DirectoryEdition:
      type: string
      enum:
        - Enterprise
        - Standard
    CreateSnapshotBeforeSchemaExtension:
      type: boolean
    SnapshotName:
      type: string
      pattern: '^([a-zA-Z0-9_])[\\a-zA-Z0-9_@#%*+=:?./!\s-]*$'
      minLength: 0
      maxLength: 128
    SnapshotId:
      type: string
      pattern: '^s-[0-9a-f]{10}$'
    TrustPassword:
      type: string
      pattern: (.|\s)*\S(.|\s)*
      minLength: 1
      maxLength: 128
      format: password
    TrustDirection:
      type: string
      enum:
        - 'One-Way: Outgoing'
        - 'One-Way: Incoming'
        - Two-Way
    TrustType:
      type: string
      enum:
        - Forest
        - External
    SelectiveAuth:
      type: string
      enum:
        - Enabled
        - Disabled
    TrustId:
      type: string
      pattern: '^t-[0-9a-f]{10}$'
    CreatedDateTime:
      type: string
      format: date-time
    CustomerId:
      type: string
      pattern: '^(\d{12})$'
    CustomerUserName:
      type: string
      pattern: '^(?!.*\\|.*"|.*\/|.*\[|.*\]|.*:|.*;|.*\||.*=|.*,|.*\+|.*\*|.*\?|.*<|.*>|.*@).*$'
      minLength: 1
      maxLength: 64
    DeleteAssociatedConditionalForwarder:
      type: boolean
    TopicName:
      type: string
      pattern: '[a-zA-Z0-9_-]+'
      minLength: 1
      maxLength: 256
    NextToken:
      type: string
    PageLimit:
      type: integer
      minimum: 1
      maximum: 50
    RemoteDomainNames:
      type: array
      items:
        $ref: '#/components/schemas/RemoteDomainName'
    DirectoryIds:
      type: array
      description: A list of directory identifiers.
      items:
        $ref: '#/components/schemas/DirectoryId'
    Limit:
      type: integer
      minimum: 0
    DirectoryDescriptions:
      type: array
      description: A list of directory descriptions.
      items:
        $ref: '#/components/schemas/DirectoryDescription'
    DomainControllerIds:
      type: array
      items:
        $ref: '#/components/schemas/DomainControllerId'
    DomainControllers:
      type: array
      items:
        $ref: '#/components/schemas/DomainController'
    TopicNames:
      type: array
      items:
        $ref: '#/components/schemas/TopicName'
    EventTopics:
      type: array
      items:
        $ref: '#/components/schemas/EventTopic'
    LDAPSType:
      type: string
      enum:
        - Client
    LDAPSSettingsInfo:
      type: array
      items:
        $ref: '#/components/schemas/LDAPSSettingInfo'
    RegionsDescription:
      type: array
      items:
        $ref: '#/components/schemas/RegionDescription'
    SharedDirectories:
      type: array
      items:
        $ref: '#/components/schemas/SharedDirectory'
    SnapshotIds:
      type: array
      description: A list of directory snapshot identifiers.
      items:
        $ref: '#/components/schemas/SnapshotId'
    Snapshots:
      type: array
      description: A list of descriptions of directory snapshots.
      items:
        $ref: '#/components/schemas/Snapshot'
    TrustIds:
      type: array
      items:
        $ref: '#/components/schemas/TrustId'
    Trusts:
      type: array
      items:
        $ref: '#/components/schemas/Trust'
    DesiredNumberOfDomainControllers:
      type: integer
      minimum: 2
    VpcId:
      type: string
      pattern: '^(vpc-[0-9a-f]{8}|vpc-[0-9a-f]{17})$'
    SubnetIds:
      type: array
      items:
        $ref: '#/components/schemas/SubnetId'
    UserName:
      type: string
      pattern: '[a-zA-Z0-9._-]+'
      minLength: 1
    SecurityGroupId:
      type: string
      pattern: '^(sg-[0-9a-f]{8}|sg-[0-9a-f]{17})$'
    IpAddrs:
      type: array
      items:
        $ref: '#/components/schemas/IpAddr'
    DirectoryConnectSettingsDescription:
      type: object
      properties:
        VpcId:
          $ref: '#/components/schemas/VpcId'
          description: The identifier of the VPC that the AD Connector is in.
        SubnetIds:
          $ref: '#/components/schemas/SubnetIds'
          description: A list of subnet identifiers in the VPC that the AD Connector is in.
        CustomerUserName:
          $ref: '#/components/schemas/UserName'
          description: The user name of the service account in your self-managed directory.
        SecurityGroupId:
          $ref: '#/components/schemas/SecurityGroupId'
          description: The security group identifier for the AD Connector directory.
        AvailabilityZones:
          $ref: '#/components/schemas/AvailabilityZones'
          description: A list of the Availability Zones that the directory is in.
        ConnectIps:
          $ref: '#/components/schemas/IpAddrs'
          description: The IP addresses of the AD Connector servers.
      description: Contains information about an AD Connector directory.
    DirectoryStage:
      type: string
      enum:
        - Requested
        - Creating
        - Created
        - Active
        - Inoperable
        - Impaired
        - Restoring
        - RestoreFailed
        - Deleting
        - Deleted
        - Failed
    ShareStatus:
      type: string
      enum:
        - Shared
        - PendingAcceptance
        - Rejected
        - Rejecting
        - RejectFailed
        - Sharing
        - ShareFailed
        - Deleted
        - Deleting
    ShareMethod:
      type: string
      enum:
        - ORGANIZATIONS
        - HANDSHAKE
    Notes:
      type: string
      maxLength: 1024
      format: password
    LaunchTime:
      type: string
      format: date-time
    DirectoryType:
      type: string
      enum:
        - SimpleAD
        - ADConnector
        - MicrosoftAD
        - SharedMicrosoftAD
    DirectoryVpcSettingsDescription:
      type: object
      properties:
        VpcId:
          $ref: '#/components/schemas/VpcId'
          description: The identifier of the VPC that the directory is in.
        SubnetIds:
          $ref: '#/components/schemas/SubnetIds'
          description: The identifiers of the subnets for the directory servers.
        SecurityGroupId:
          $ref: '#/components/schemas/SecurityGroupId'
          description: The domain controller security group identifier for the directory.
        AvailabilityZones:
          $ref: '#/components/schemas/AvailabilityZones'
          description: The list of Availability Zones that the directory is in.
      description: Contains information about the directory.
    RadiusSettings:
      type: object
      properties:
        RadiusServers:
          $ref: '#/components/schemas/Servers'
          description: 'An array of strings that contains the fully qualified domain name (FQDN) or IP addresses of the RADIUS server endpoints, or the FQDN or IP addresses of your RADIUS server load balancer.'
        RadiusPort:
          $ref: '#/components/schemas/PortNumber'
          description: The port that your RADIUS server is using for communications. Your self-managed network must allow inbound traffic over this port from the Directory Service servers.
        RadiusTimeout:
          $ref: '#/components/schemas/RadiusTimeout'
          description: 'The amount of time, in seconds, to wait for the RADIUS server to respond.'
        RadiusRetries:
          $ref: '#/components/schemas/RadiusRetries'
          description: The maximum number of times that communication with the RADIUS server is attempted.
        SharedSecret:
          $ref: '#/components/schemas/RadiusSharedSecret'
          description: Required for enabling RADIUS on the directory.
        AuthenticationProtocol:
          $ref: '#/components/schemas/RadiusAuthenticationProtocol'
          description: The protocol specified for your RADIUS endpoints.
        DisplayLabel:
          $ref: '#/components/schemas/RadiusDisplayLabel'
          description: Not currently used.
        UseSameUsername:
          $ref: '#/components/schemas/UseSameUsername'
          description: Not currently used.
      description: Contains information about a Remote Authentication Dial In User Service (RADIUS) server.
    RadiusStatus:
      type: string
      enum:
        - Creating
        - Completed
        - Failed
    StageReason:
      type: string
    SsoEnabled:
      type: boolean
    OwnerDirectoryDescription:
      type: object
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: Identifier of the Managed Microsoft AD directory in the directory owner account.
        AccountId:
          $ref: '#/components/schemas/CustomerId'
          description: Identifier of the directory owner account.
        DnsIpAddrs:
          $ref: '#/components/schemas/DnsIpAddrs'
          description: IP address of the directory’s domain controllers.
        VpcSettings:
          $ref: '#/components/schemas/DirectoryVpcSettingsDescription'
          description: Information about the VPC settings for the directory.
        RadiusSettings:
          $ref: '#/components/schemas/RadiusSettings'
          description: A <a>RadiusSettings</a> object that contains information about the RADIUS server.
        RadiusStatus:
          $ref: '#/components/schemas/RadiusStatus'
          description: Information about the status of the RADIUS server.
      description: Describes the directory owner account details that have been shared to the directory consumer account.
    RegionsInfo:
      type: object
      properties:
        PrimaryRegion:
          $ref: '#/components/schemas/RegionName'
          description: The Region where the Managed Microsoft AD directory was originally created.
        AdditionalRegions:
          $ref: '#/components/schemas/AdditionalRegions'
          description: 'Lists the Regions where the directory has been replicated, excluding the primary Region.'
      description: Provides information about the Regions that are configured for multi-Region replication.
    DirectoryDescription:
      type: object
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The directory identifier.
        Name:
          $ref: '#/components/schemas/DirectoryName'
          description: The fully qualified name of the directory.
        ShortName:
          $ref: '#/components/schemas/DirectoryShortName'
          description: The short name of the directory.
        Size:
          $ref: '#/components/schemas/DirectorySize'
          description: The directory size.
        Edition:
          $ref: '#/components/schemas/DirectoryEdition'
          description: The edition associated with this directory.
        Alias:
          $ref: '#/components/schemas/AliasName'
          description: 'The alias for the directory. If no alias has been created for the directory, the alias is the directory identifier, such as <code>d-XXXXXXXXXX</code>.'
        AccessUrl:
          $ref: '#/components/schemas/AccessUrl'
          description: 'The access URL for the directory, such as <code>http://&lt;alias&gt;.awsapps.com</code>. If no alias has been created for the directory, <code>&lt;alias&gt;</code> is the directory identifier, such as <code>d-XXXXXXXXXX</code>.'
        Description:
          $ref: '#/components/schemas/Description'
          description: The description for the directory.
        DnsIpAddrs:
          $ref: '#/components/schemas/DnsIpAddrs'
          description: 'The IP addresses of the DNS servers for the directory. For a Simple AD or Microsoft AD directory, these are the IP addresses of the Simple AD or Microsoft AD directory servers. For an AD Connector directory, these are the IP addresses of the DNS servers or domain controllers in your self-managed directory to which the AD Connector is connected.'
        Stage:
          $ref: '#/components/schemas/DirectoryStage'
          description: The current stage of the directory.
        ShareStatus:
          $ref: '#/components/schemas/ShareStatus'
          description: Current directory status of the shared Managed Microsoft AD directory.
        ShareMethod:
          $ref: '#/components/schemas/ShareMethod'
          description: The method used when sharing a directory to determine whether the directory should be shared within your Amazon Web Services organization (<code>ORGANIZATIONS</code>) or with any Amazon Web Services account by sending a shared directory request (<code>HANDSHAKE</code>).
        ShareNotes:
          $ref: '#/components/schemas/Notes'
          description: A directory share request that is sent by the directory owner to the directory consumer. The request includes a typed message to help the directory consumer administrator determine whether to approve or reject the share invitation.
        LaunchTime:
          $ref: '#/components/schemas/LaunchTime'
          description: Specifies when the directory was created.
        StageLastUpdatedDateTime:
          $ref: '#/components/schemas/LastUpdatedDateTime'
          description: The date and time that the stage was last updated.
        Type:
          $ref: '#/components/schemas/DirectoryType'
          description: The directory size.
        VpcSettings:
          $ref: '#/components/schemas/DirectoryVpcSettingsDescription'
          description: A <a>DirectoryVpcSettingsDescription</a> object that contains additional information about a directory. This member is only present if the directory is a Simple AD or Managed Microsoft AD directory.
        ConnectSettings:
          $ref: '#/components/schemas/DirectoryConnectSettingsDescription'
          description: A <a>DirectoryConnectSettingsDescription</a> object that contains additional information about an AD Connector directory. This member is only present if the directory is an AD Connector directory.
        RadiusSettings:
          $ref: '#/components/schemas/RadiusSettings'
          description: A <a>RadiusSettings</a> object that contains information about the RADIUS server configured for this directory.
        RadiusStatus:
          $ref: '#/components/schemas/RadiusStatus'
          description: The status of the RADIUS MFA server connection.
        StageReason:
          $ref: '#/components/schemas/StageReason'
          description: Additional information about the directory stage.
        SsoEnabled:
          $ref: '#/components/schemas/SsoEnabled'
          description: 'Indicates if single sign-on is enabled for the directory. For more information, see <a>EnableSso</a> and <a>DisableSso</a>.'
        DesiredNumberOfDomainControllers:
          $ref: '#/components/schemas/DesiredNumberOfDomainControllers'
          description: The desired number of domain controllers in the directory if the directory is Microsoft AD.
        OwnerDirectoryDescription:
          $ref: '#/components/schemas/OwnerDirectoryDescription'
          description: Describes the Managed Microsoft AD directory in the directory owner account.
        RegionsInfo:
          $ref: '#/components/schemas/RegionsInfo'
          description: Lists the Regions where the directory has replicated.
      description: Contains information about an Directory Service directory.
    DirectoryLimits:
      type: object
      properties:
        CloudOnlyDirectoriesLimit:
          $ref: '#/components/schemas/Limit'
          description: The maximum number of cloud directories allowed in the Region.
        CloudOnlyDirectoriesCurrentCount:
          $ref: '#/components/schemas/Limit'
          description: The current number of cloud directories in the Region.
        CloudOnlyDirectoriesLimitReached:
          $ref: '#/components/schemas/CloudOnlyDirectoriesLimitReached'
          description: Indicates if the cloud directory limit has been reached.
        CloudOnlyMicrosoftADLimit:
          $ref: '#/components/schemas/Limit'
          description: The maximum number of Managed Microsoft AD directories allowed in the region.
        CloudOnlyMicrosoftADCurrentCount:
          $ref: '#/components/schemas/Limit'
          description: The current number of Managed Microsoft AD directories in the region.
        CloudOnlyMicrosoftADLimitReached:
          $ref: '#/components/schemas/CloudOnlyDirectoriesLimitReached'
          description: Indicates if the Managed Microsoft AD directory limit has been reached.
        ConnectedDirectoriesLimit:
          $ref: '#/components/schemas/Limit'
          description: The maximum number of connected directories allowed in the Region.
        ConnectedDirectoriesCurrentCount:
          $ref: '#/components/schemas/Limit'
          description: The current number of connected directories in the Region.
        ConnectedDirectoriesLimitReached:
          $ref: '#/components/schemas/ConnectedDirectoriesLimitReached'
          description: Indicates if the connected directory limit has been reached.
      description: Contains directory limit information for a Region.
    IpAddr:
      type: string
      pattern: '^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$'
    DomainControllerId:
      type: string
      pattern: '^dc-[0-9a-f]{10}$'
    SubnetId:
      type: string
      pattern: '^(subnet-[0-9a-f]{8}|subnet-[0-9a-f]{17})$'
    DomainControllerStatus:
      type: string
      enum:
        - Creating
        - Active
        - Impaired
        - Restoring
        - Deleting
        - Deleted
        - Failed
    DomainControllerStatusReason:
      type: string
    DomainController:
      type: object
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: Identifier of the directory where the domain controller resides.
        DomainControllerId:
          $ref: '#/components/schemas/DomainControllerId'
          description: Identifies a specific domain controller in the directory.
        DnsIpAddr:
          $ref: '#/components/schemas/IpAddr'
          description: The IP address of the domain controller.
        VpcId:
          $ref: '#/components/schemas/VpcId'
          description: The identifier of the VPC that contains the domain controller.
        SubnetId:
          $ref: '#/components/schemas/SubnetId'
          description: Identifier of the subnet in the VPC that contains the domain controller.
        AvailabilityZone:
          $ref: '#/components/schemas/AvailabilityZone'
          description: The Availability Zone where the domain controller is located.
        Status:
          $ref: '#/components/schemas/DomainControllerStatus'
          description: The status of the domain controller.
        StatusReason:
          $ref: '#/components/schemas/DomainControllerStatusReason'
          description: A description of the domain controller state.
        LaunchTime:
          $ref: '#/components/schemas/LaunchTime'
          description: Specifies when the domain controller was created.
        StatusLastUpdatedDateTime:
          $ref: '#/components/schemas/LastUpdatedDateTime'
          description: The date and time that the status was last updated.
      description: Contains information about the domain controllers for a specified directory.
    EndDateTime:
      type: string
      format: date-time
    TopicArn:
      type: string
    TopicStatus:
      type: string
      enum:
        - Registered
        - Topic not found
        - Failed
        - Deleted
    EventTopic:
      type: object
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The Directory ID of an Directory Service directory that will publish status messages to an Amazon SNS topic.
        TopicName:
          $ref: '#/components/schemas/TopicName'
          description: The name of an Amazon SNS topic the receives status messages from the directory.
        TopicArn:
          $ref: '#/components/schemas/TopicArn'
          description: The Amazon SNS topic ARN (Amazon Resource Name).
        CreatedDateTime:
          $ref: '#/components/schemas/CreatedDateTime'
          description: The date and time of when you associated your directory with the Amazon SNS topic.
        Status:
          $ref: '#/components/schemas/TopicStatus'
          description: The topic registration status.
      description: Information about Amazon SNS topic and Directory Service directory associations.
    SnapshotLimits:
      type: object
      properties:
        ManualSnapshotsLimit:
          $ref: '#/components/schemas/Limit'
          description: The maximum number of manual snapshots allowed.
        ManualSnapshotsCurrentCount:
          $ref: '#/components/schemas/Limit'
          description: The current number of manual snapshots of the directory.
        ManualSnapshotsLimitReached:
          $ref: '#/components/schemas/ManualSnapshotsLimitReached'
          description: Indicates if the manual snapshot limit has been reached.
      description: Contains manual snapshot limit information for a directory.
    IpRoute:
      type: object
      properties:
        CidrIp:
          $ref: '#/components/schemas/CidrIp'
          description: 'IP address block using CIDR format, for example 10.0.0.0/24. This is often the address block of the DNS server used for your self-managed domain. For a single IP address use a CIDR address block with /32. For example 10.0.0.0/32.'
        Description:
          $ref: '#/components/schemas/Description'
          description: Description of the address block.
      description: 'IP address block. This is often the address block of the DNS server used for your self-managed domain. '
    IpRouteStatusMsg:
      type: string
      enum:
        - Adding
        - Added
        - Removing
        - Removed
        - AddFailed
        - RemoveFailed
    IpRouteStatusReason:
      type: string
    IpRouteInfo:
      type: object
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: Identifier (ID) of the directory associated with the IP addresses.
        CidrIp:
          $ref: '#/components/schemas/CidrIp'
          description: IP address block in the <a>IpRoute</a>.
        IpRouteStatusMsg:
          $ref: '#/components/schemas/IpRouteStatusMsg'
          description: The status of the IP address block.
        AddedDateTime:
          $ref: '#/components/schemas/AddedDateTime'
          description: The date and time the address block was added to the directory.
        IpRouteStatusReason:
          $ref: '#/components/schemas/IpRouteStatusReason'
          description: The reason for the IpRouteStatusMsg.
        Description:
          $ref: '#/components/schemas/Description'
          description: Description of the <a>IpRouteInfo</a>.
      description: Information about one or more IP address blocks.
    IpRoutesInfo:
      type: array
      items:
        $ref: '#/components/schemas/IpRouteInfo'
    LDAPSStatus:
      type: string
      enum:
        - Enabling
        - Enabled
        - EnableFailed
        - Disabled
    LDAPSStatusReason:
      type: string
    LDAPSSettingInfo:
      type: object
      properties:
        LDAPSStatus:
          $ref: '#/components/schemas/LDAPSStatus'
          description: The state of the LDAPS settings.
        LDAPSStatusReason:
          $ref: '#/components/schemas/LDAPSStatusReason'
          description: Describes a state change for LDAPS.
        LastUpdatedDateTime:
          $ref: '#/components/schemas/LastUpdatedDateTime'
          description: The date and time when the LDAPS settings were last updated.
      description: Contains general information about the LDAPS settings.
    LdifContent:
      type: string
      minLength: 1
      maxLength: 500000
    LogSubscriptions:
      type: array
      items:
        $ref: '#/components/schemas/LogSubscription'
    SchemaExtensionsInfo:
      type: array
      items:
        $ref: '#/components/schemas/SchemaExtensionInfo'
    SubscriptionCreatedDateTime:
      type: string
      format: date-time
    LogSubscription:
      type: object
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: Identifier (ID) of the directory that you want to associate with the log subscription.
        LogGroupName:
          $ref: '#/components/schemas/LogGroupName'
          description: The name of the log group.
        SubscriptionCreatedDateTime:
          $ref: '#/components/schemas/SubscriptionCreatedDateTime'
          description: The date and time that the log subscription was created.
      description: 'Represents a log subscription, which tracks real-time data from a chosen log group to a specified destination.'
    ManualSnapshotsLimitReached:
      type: boolean
    PortNumber:
      type: integer
      minimum: 1025
      maximum: 65535
    RadiusAuthenticationProtocol:
      type: string
      enum:
        - PAP
        - CHAP
        - MS-CHAPv1
        - MS-CHAPv2
    RadiusDisplayLabel:
      type: string
      minLength: 1
      maxLength: 64
    RadiusRetries:
      type: integer
      minimum: 0
      maximum: 10
    Servers:
      type: array
      items:
        $ref: '#/components/schemas/Server'
    RadiusTimeout:
      type: integer
      minimum: 1
      maximum: 20
    RadiusSharedSecret:
      type: string
      pattern: '^(\p{LD}|\p{Punct}| )+$'
      minLength: 8
      maxLength: 512
      format: password
    UseSameUsername:
      type: boolean
    RegionType:
      type: string
      enum:
        - Primary
        - Additional
    StateLastUpdatedDateTime:
      type: string
      format: date-time
    RegionDescription:
      type: object
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The identifier of the directory.
        RegionName:
          $ref: '#/components/schemas/RegionName'
          description: 'The name of the Region. For example, <code>us-east-1</code>.'
        RegionType:
          $ref: '#/components/schemas/RegionType'
          description: Specifies whether the Region is the primary Region or an additional Region.
        Status:
          $ref: '#/components/schemas/DirectoryStage'
          description: The status of the replication process for the specified Region.
        VpcSettings:
          $ref: '#/components/schemas/DirectoryVpcSettings'
        DesiredNumberOfDomainControllers:
          $ref: '#/components/schemas/DesiredNumberOfDomainControllers'
          description: The desired number of domain controllers in the specified Region for the specified directory.
        LaunchTime:
          $ref: '#/components/schemas/LaunchTime'
          description: Specifies when the Region replication began.
        StatusLastUpdatedDateTime:
          $ref: '#/components/schemas/StateLastUpdatedDateTime'
          description: The date and time that the Region status was last updated.
        LastUpdatedDateTime:
          $ref: '#/components/schemas/LastUpdatedDateTime'
          description: The date and time that the Region description was last updated.
      description: The replicated Region information for a directory.
    TagKeys:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    RequestId:
      type: string
      pattern: '^([A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12})$'
      description: The Amazon Web Services request identifier.
    UserPassword:
      type: string
      minLength: 1
      maxLength: 127
      format: password
    SchemaExtensionStatus:
      type: string
      enum:
        - Initializing
        - CreatingSnapshot
        - UpdatingSchema
        - Replicating
        - CancelInProgress
        - RollbackInProgress
        - Cancelled
        - Failed
        - Completed
    SchemaExtensionStatusReason:
      type: string
    StartDateTime:
      type: string
      format: date-time
    SchemaExtensionInfo:
      type: object
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The identifier of the directory to which the schema extension is applied.
        SchemaExtensionId:
          $ref: '#/components/schemas/SchemaExtensionId'
          description: The identifier of the schema extension.
        Description:
          $ref: '#/components/schemas/Description'
          description: A description of the schema extension.
        SchemaExtensionStatus:
          $ref: '#/components/schemas/SchemaExtensionStatus'
          description: The current status of the schema extension.
        SchemaExtensionStatusReason:
          $ref: '#/components/schemas/SchemaExtensionStatusReason'
          description: The reason for the <code>SchemaExtensionStatus</code>.
        StartDateTime:
          $ref: '#/components/schemas/StartDateTime'
          description: The date and time that the schema extension started being applied to the directory.
        EndDateTime:
          $ref: '#/components/schemas/EndDateTime'
          description: The date and time that the schema extension was completed.
      description: Information about a schema extension.
    Server:
      type: string
      minLength: 1
      maxLength: 256
    ShareTarget:
      type: object
      required:
        - Id
        - Type
      properties:
        Id:
          $ref: '#/components/schemas/TargetId'
          description: Identifier of the directory consumer account.
        Type:
          $ref: '#/components/schemas/TargetType'
          description: Type of identifier to be used in the <code>Id</code> field.
      description: Identifier that contains details about the directory consumer account.
    TargetId:
      type: string
      minLength: 1
      maxLength: 64
    TargetType:
      type: string
      enum:
        - ACCOUNT
    SnapshotType:
      type: string
      enum:
        - Auto
        - Manual
    SnapshotStatus:
      type: string
      enum:
        - Creating
        - Completed
        - Failed
    StartTime:
      type: string
      format: date-time
    Snapshot:
      type: object
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The directory identifier.
        SnapshotId:
          $ref: '#/components/schemas/SnapshotId'
          description: The snapshot identifier.
        Type:
          $ref: '#/components/schemas/SnapshotType'
          description: The snapshot type.
        Name:
          $ref: '#/components/schemas/SnapshotName'
          description: The descriptive name of the snapshot.
        Status:
          $ref: '#/components/schemas/SnapshotStatus'
          description: The snapshot status.
        StartTime:
          $ref: '#/components/schemas/StartTime'
          description: The date and time that the snapshot was taken.
      description: Describes a directory snapshot.
    TagKey:
      type: string
      pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
      minLength: 1
      maxLength: 128
    TagValue:
      type: string
      pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
      minLength: 0
      maxLength: 256
    Tag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          $ref: '#/components/schemas/TagKey'
          description: 'Required name of the tag. The string value can be Unicode characters and cannot be prefixed with "aws:". The string can contain only the set of Unicode letters, digits, white-space, ''_'', ''.'', ''/'', ''='', ''+'', ''-'' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").'
        Value:
          $ref: '#/components/schemas/TagValue'
          description: 'The optional value of the tag. The string value can be Unicode characters. The string can contain only the set of Unicode letters, digits, white-space, ''_'', ''.'', ''/'', ''='', ''+'', ''-'' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").'
      description: Metadata assigned to a directory consisting of a key-value pair.
    TrustState:
      type: string
      enum:
        - Creating
        - Created
        - Verifying
        - VerifyFailed
        - Verified
        - Updating
        - UpdateFailed
        - Updated
        - Deleting
        - Deleted
        - Failed
    TrustStateReason:
      type: string
    Trust:
      type: object
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The Directory ID of the Amazon Web Services directory involved in the trust relationship.
        TrustId:
          $ref: '#/components/schemas/TrustId'
          description: The unique ID of the trust relationship.
        RemoteDomainName:
          $ref: '#/components/schemas/RemoteDomainName'
          description: The Fully Qualified Domain Name (FQDN) of the external domain involved in the trust relationship.
        TrustType:
          $ref: '#/components/schemas/TrustType'
          description: The trust relationship type. <code>Forest</code> is the default.
        TrustDirection:
          $ref: '#/components/schemas/TrustDirection'
          description: The trust relationship direction.
        TrustState:
          $ref: '#/components/schemas/TrustState'
          description: The trust relationship state.
        CreatedDateTime:
          $ref: '#/components/schemas/CreatedDateTime'
          description: The date and time that the trust relationship was created.
        LastUpdatedDateTime:
          $ref: '#/components/schemas/LastUpdatedDateTime'
          description: The date and time that the trust relationship was last updated.
        StateLastUpdatedDateTime:
          $ref: '#/components/schemas/StateLastUpdatedDateTime'
          description: The date and time that the TrustState was last updated.
        TrustStateReason:
          $ref: '#/components/schemas/TrustStateReason'
          description: The reason for the TrustState.
        SelectiveAuth:
          $ref: '#/components/schemas/SelectiveAuth'
          description: Current state of selective authentication for the trust.
      description: Describes a trust relationship between an Managed Microsoft AD directory and an external domain.
    UnshareTarget:
      type: object
      required:
        - Id
        - Type
      properties:
        Id:
          $ref: '#/components/schemas/TargetId'
          description: Identifier of the directory consumer account.
        Type:
          $ref: '#/components/schemas/TargetType'
          description: Type of identifier to be used in the <i>Id</i> field.
      description: Identifier that contains details about the directory consumer account with whom the directory is being unshared.
security:
  - hmac: []
