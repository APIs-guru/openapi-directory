openapi: 3.0.0
info:
  version: '2020-05-31'
  x-release: v4
  title: Amazon CloudFront
  description: '<fullname>Amazon CloudFront</fullname> <p>This is the <i>Amazon CloudFront API Reference</i>. This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the <i>Amazon CloudFront Developer Guide</i>.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: cloudfront
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/cloudfront-2020-05-31.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/cloudfront/'
servers:
  - url: 'https://cloudfront.amazonaws.com'
    variables: {}
    description: The general CloudFront multi-region endpoint
  - url: 'http://cloudfront.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudFront endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://cloudfront.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudFront endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  '/2020-05-31/distribution/{TargetDistributionId}/associate-alias#Alias':
    put:
      operationId: AssociateAlias2020_05_31
      description: '<p>Associates an alias (also known as a CNAME or an alternate domain name) with a CloudFront distribution.</p> <p>With this operation you can move an alias that’s already in use on a CloudFront distribution to a different distribution in one step. This prevents the downtime that could occur if you first remove the alias from one distribution and then separately add the alias to another distribution.</p> <p>To use this operation to associate an alias with a distribution, you provide the alias and the ID of the target distribution for the alias. For more information, including how to set up the target distribution, prerequisites that you must complete, and other restrictions, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/CNAMEs.html#alternate-domain-names-move">Moving an alternate domain name to a different distribution</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
        '481':
          description: NoSuchDistribution
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchDistribution'
        '482':
          description: TooManyDistributionCNAMEs
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyDistributionCNAMEs'
        '483':
          description: IllegalUpdate
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/IllegalUpdate'
        '484':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
      parameters:
        - name: TargetDistributionId
          in: path
          required: true
          description: The ID of the distribution that you’re associating the alias with.
          schema:
            type: string
        - name: Alias
          in: query
          required: true
          description: The alias (also known as a CNAME) to add to the target distribution.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2020-05-31/cache-policy:
    post:
      operationId: CreateCachePolicy2020_05_31
      description: '<p>Creates a cache policy.</p> <p>After you create a cache policy, you can attach it to one or more cache behaviors. When it’s attached to a cache behavior, the cache policy determines the following:</p> <ul> <li> <p>The values that CloudFront includes in the <i>cache key</i>. These values can include HTTP headers, cookies, and URL query strings. CloudFront uses the cache key to find an object in its cache that it can return to the viewer.</p> </li> <li> <p>The default, minimum, and maximum time to live (TTL) values that you want objects to stay in the CloudFront cache.</p> </li> </ul> <p>The headers, cookies, and query strings that are included in the cache key are automatically included in requests that CloudFront sends to the origin. CloudFront sends a request when it can’t find an object in its cache that matches the request’s cache key. If you want to send values to the origin but <i>not</i> include them in the cache key, use <code>OriginRequestPolicy</code>.</p> <p>For more information about cache policies, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html">Controlling the cache key</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
      responses:
        '201':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateCachePolicyResult'
        '480':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        '481':
          description: InconsistentQuantities
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InconsistentQuantities'
        '482':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
        '483':
          description: CachePolicyAlreadyExists
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CachePolicyAlreadyExists'
        '484':
          description: TooManyCachePolicies
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyCachePolicies'
        '485':
          description: TooManyHeadersInCachePolicy
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyHeadersInCachePolicy'
        '486':
          description: TooManyCookiesInCachePolicy
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyCookiesInCachePolicy'
        '487':
          description: TooManyQueryStringsInCachePolicy
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyQueryStringsInCachePolicy'
      parameters: []
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - CachePolicyConfig
              properties:
                CachePolicyConfig:
                  description: '<p>A cache policy configuration.</p> <p>This configuration determines the following:</p> <ul> <li> <p>The values that CloudFront includes in the cache key. These values can include HTTP headers, cookies, and URL query strings. CloudFront uses the cache key to find an object in its cache that it can return to the viewer.</p> </li> <li> <p>The default, minimum, and maximum time to live (TTL) values that you want objects to stay in the CloudFront cache.</p> </li> </ul> <p>The headers, cookies, and query strings that are included in the cache key are automatically included in requests that CloudFront sends to the origin. CloudFront sends a request when it can’t find a valid object in its cache that matches the request’s cache key. If you want to send values to the origin but <i>not</i> include them in the cache key, use <code>OriginRequestPolicy</code>.</p>'
                  type: object
                  properties:
                    Comment:
                      $ref: '#/components/schemas/string'
                      description: A comment to describe the cache policy. The comment cannot be longer than 128 characters.
                    Name:
                      $ref: '#/components/schemas/string'
                      description: A unique name to identify the cache policy.
                    DefaultTTL:
                      $ref: '#/components/schemas/long'
                      description: '<p>The default amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated. CloudFront uses this value as the object’s time to live (TTL) only when the origin does <i>not</i> send <code>Cache-Control</code> or <code>Expires</code> headers with the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html">Managing How Long Content Stays in an Edge Cache (Expiration)</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <p>The default value for this field is 86400 seconds (one day). If the value of <code>MinTTL</code> is more than 86400 seconds, then the default value for this field is the same as the value of <code>MinTTL</code>.</p>'
                    MaxTTL:
                      $ref: '#/components/schemas/long'
                      description: '<p>The maximum amount of time, in seconds, that objects stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated. CloudFront uses this value only when the origin sends <code>Cache-Control</code> or <code>Expires</code> headers with the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html">Managing How Long Content Stays in an Edge Cache (Expiration)</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <p>The default value for this field is 31536000 seconds (one year). If the value of <code>MinTTL</code> or <code>DefaultTTL</code> is more than 31536000 seconds, then the default value for this field is the same as the value of <code>DefaultTTL</code>.</p>'
                    MinTTL:
                      $ref: '#/components/schemas/long'
                      description: 'The minimum amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html">Managing How Long Content Stays in an Edge Cache (Expiration)</a> in the <i>Amazon CloudFront Developer Guide</i>.'
                    ParametersInCacheKeyAndForwardedToOrigin:
                      $ref: '#/components/schemas/ParametersInCacheKeyAndForwardedToOrigin'
                      description: 'The HTTP headers, cookies, and URL query strings to include in the cache key. The values included in the cache key are automatically included in requests that CloudFront sends to the origin.'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListCachePolicies2020_05_31
      description: '<p>Gets a list of cache policies.</p> <p>You can optionally apply a filter to return only the managed policies created by Amazon Web Services, or only the custom policies created in your account.</p> <p>You can optionally specify the maximum number of items to receive in the response. If the total number of items in the list exceeds the maximum that you specify, or the default maximum, the response is paginated. To get the next page of items, send a subsequent request that specifies the <code>NextMarker</code> value from the current response as the <code>Marker</code> value in the subsequent request.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListCachePoliciesResult'
        '480':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        '481':
          description: NoSuchCachePolicy
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchCachePolicy'
        '482':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
      parameters:
        - name: Type
          in: query
          required: false
          description: '<p>A filter to return only the specified kinds of cache policies. Valid values are:</p> <ul> <li> <p> <code>managed</code> – Returns only the managed policies created by Amazon Web Services.</p> </li> <li> <p> <code>custom</code> – Returns only the custom policies created in your account.</p> </li> </ul>'
          schema:
            type: string
            enum:
              - managed
              - custom
        - name: Marker
          in: query
          required: false
          description: 'Use this field when paginating results to indicate where to begin in your list of cache policies. The response includes cache policies in the list that occur after the marker. To get the next page of the list, set this field’s value to the value of <code>NextMarker</code> from the current page’s response.'
          schema:
            type: string
        - name: MaxItems
          in: query
          required: false
          description: The maximum number of cache policies that you want in the response.
          schema:
            type: string
  /2020-05-31/origin-access-identity/cloudfront:
    post:
      operationId: CreateCloudFrontOriginAccessIdentity2020_05_31
      description: 'Creates a new origin access identity. If you''re using Amazon S3 for your origin, you can use an origin access identity to require users to access your content using a CloudFront URL instead of the Amazon S3 URL. For more information about how to use origin access identities, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">Serving Private Content through CloudFront</a> in the <i>Amazon CloudFront Developer Guide</i>.'
      responses:
        '201':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateCloudFrontOriginAccessIdentityResult'
        '480':
          description: CloudFrontOriginAccessIdentityAlreadyExists
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CloudFrontOriginAccessIdentityAlreadyExists'
        '481':
          description: MissingBody
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MissingBody'
        '482':
          description: TooManyCloudFrontOriginAccessIdentities
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyCloudFrontOriginAccessIdentities'
        '483':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
        '484':
          description: InconsistentQuantities
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InconsistentQuantities'
      parameters: []
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - CloudFrontOriginAccessIdentityConfig
              properties:
                CloudFrontOriginAccessIdentityConfig:
                  description: 'Origin access identity configuration. Send a <code>GET</code> request to the <code>/<i>CloudFront API version</i>/CloudFront/identity ID/config</code> resource. '
                  type: object
                  properties:
                    CallerReference:
                      $ref: '#/components/schemas/string'
                      description: '<p>A unique value (for example, a date-time stamp) that ensures that the request can''t be replayed.</p> <p>If the value of <code>CallerReference</code> is new (regardless of the content of the <code>CloudFrontOriginAccessIdentityConfig</code> object), a new origin access identity is created.</p> <p>If the <code>CallerReference</code> is a value already sent in a previous identity request, and the content of the <code>CloudFrontOriginAccessIdentityConfig</code> is identical to the original request (ignoring white space), the response includes the same information returned to the original request. </p> <p>If the <code>CallerReference</code> is a value you already sent in a previous request to create an identity, but the content of the <code>CloudFrontOriginAccessIdentityConfig</code> is different from the original request, CloudFront returns a <code>CloudFrontOriginAccessIdentityAlreadyExists</code> error. </p>'
                    Comment:
                      $ref: '#/components/schemas/string'
                      description: A comment to describe the origin access identity. The comment cannot be longer than 128 characters.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListCloudFrontOriginAccessIdentities2020_05_31
      description: Lists origin access identities.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListCloudFrontOriginAccessIdentitiesResult'
        '480':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
      parameters:
        - name: Marker
          in: query
          required: false
          description: 'Use this when paginating results to indicate where to begin in your list of origin access identities. The results include identities in the list that occur after the marker. To get the next page of results, set the <code>Marker</code> to the value of the <code>NextMarker</code> from the current page''s response (which is also the ID of the last identity on that page).'
          schema:
            type: string
        - name: MaxItems
          in: query
          required: false
          description: 'The maximum number of origin access identities you want in the response body. '
          schema:
            type: string
  /2020-05-31/distribution:
    post:
      operationId: CreateDistribution2020_05_31
      description: '<p>Creates a new web distribution. You create a CloudFront distribution to tell CloudFront where you want content to be delivered from, and the details about how to track and manage content delivery. Send a <code>POST</code> request to the <code>/<i>CloudFront API version</i>/distribution</code>/<code>distribution ID</code> resource.</p> <important> <p>When you update a distribution, there are more required fields than when you create a distribution. When you update your distribution by using <a href="https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_UpdateDistribution.html">UpdateDistribution</a>, follow the steps included in the documentation to get the current configuration and then make your updates. This helps to make sure that you include all of the required fields. To view a summary, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-overview-required-fields.html">Required Fields for Create Distribution and Update Distribution</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> </important>'
      responses:
        '201':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateDistributionResult'
        '480':
          description: CNAMEAlreadyExists
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CNAMEAlreadyExists'
        '481':
          description: DistributionAlreadyExists
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DistributionAlreadyExists'
        '482':
          description: InvalidOrigin
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidOrigin'
        '483':
          description: InvalidOriginAccessIdentity
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidOriginAccessIdentity'
        '484':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        '485':
          description: TooManyTrustedSigners
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyTrustedSigners'
        '486':
          description: TrustedSignerDoesNotExist
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TrustedSignerDoesNotExist'
        '487':
          description: InvalidViewerCertificate
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidViewerCertificate'
        '488':
          description: InvalidMinimumProtocolVersion
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidMinimumProtocolVersion'
        '489':
          description: MissingBody
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MissingBody'
        '490':
          description: TooManyDistributionCNAMEs
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyDistributionCNAMEs'
        '491':
          description: TooManyDistributions
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyDistributions'
        '492':
          description: InvalidDefaultRootObject
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDefaultRootObject'
        '493':
          description: InvalidRelativePath
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidRelativePath'
        '494':
          description: InvalidErrorCode
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidErrorCode'
        '495':
          description: InvalidResponseCode
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidResponseCode'
        '496':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
        '497':
          description: InvalidRequiredProtocol
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidRequiredProtocol'
        '498':
          description: NoSuchOrigin
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchOrigin'
        '499':
          description: TooManyOrigins
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyOrigins'
        '500':
          description: TooManyOriginGroupsPerDistribution
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyOriginGroupsPerDistribution'
        '501':
          description: TooManyCacheBehaviors
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyCacheBehaviors'
        '502':
          description: TooManyCookieNamesInWhiteList
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyCookieNamesInWhiteList'
        '503':
          description: InvalidForwardCookies
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidForwardCookies'
        '504':
          description: TooManyHeadersInForwardedValues
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyHeadersInForwardedValues'
        '505':
          description: InvalidHeadersForS3Origin
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidHeadersForS3Origin'
        '506':
          description: InconsistentQuantities
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InconsistentQuantities'
        '507':
          description: TooManyCertificates
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyCertificates'
        '508':
          description: InvalidLocationCode
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidLocationCode'
        '509':
          description: InvalidGeoRestrictionParameter
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGeoRestrictionParameter'
        '510':
          description: InvalidProtocolSettings
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidProtocolSettings'
        '511':
          description: InvalidTTLOrder
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTTLOrder'
        '512':
          description: InvalidWebACLId
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidWebACLId'
        '513':
          description: TooManyOriginCustomHeaders
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyOriginCustomHeaders'
        '514':
          description: TooManyQueryStringParameters
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyQueryStringParameters'
        '515':
          description: InvalidQueryStringParameters
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidQueryStringParameters'
        '516':
          description: TooManyDistributionsWithLambdaAssociations
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyDistributionsWithLambdaAssociations'
        '517':
          description: TooManyDistributionsWithSingleFunctionARN
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyDistributionsWithSingleFunctionARN'
        '518':
          description: TooManyLambdaFunctionAssociations
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyLambdaFunctionAssociations'
        '519':
          description: InvalidLambdaFunctionAssociation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidLambdaFunctionAssociation'
        '520':
          description: TooManyDistributionsWithFunctionAssociations
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyDistributionsWithFunctionAssociations'
        '521':
          description: TooManyFunctionAssociations
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyFunctionAssociations'
        '522':
          description: InvalidFunctionAssociation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidFunctionAssociation'
        '523':
          description: InvalidOriginReadTimeout
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidOriginReadTimeout'
        '524':
          description: InvalidOriginKeepaliveTimeout
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidOriginKeepaliveTimeout'
        '525':
          description: NoSuchFieldLevelEncryptionConfig
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchFieldLevelEncryptionConfig'
        '526':
          description: IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior'
        '527':
          description: TooManyDistributionsAssociatedToFieldLevelEncryptionConfig
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyDistributionsAssociatedToFieldLevelEncryptionConfig'
        '528':
          description: NoSuchCachePolicy
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchCachePolicy'
        '529':
          description: TooManyDistributionsAssociatedToCachePolicy
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyDistributionsAssociatedToCachePolicy'
        '530':
          description: NoSuchOriginRequestPolicy
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchOriginRequestPolicy'
        '531':
          description: TooManyDistributionsAssociatedToOriginRequestPolicy
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyDistributionsAssociatedToOriginRequestPolicy'
        '532':
          description: TooManyDistributionsAssociatedToKeyGroup
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyDistributionsAssociatedToKeyGroup'
        '533':
          description: TooManyKeyGroupsAssociatedToDistribution
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyKeyGroupsAssociatedToDistribution'
        '534':
          description: TrustedKeyGroupDoesNotExist
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TrustedKeyGroupDoesNotExist'
        '535':
          description: NoSuchRealtimeLogConfig
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchRealtimeLogConfig'
        '536':
          description: RealtimeLogConfigOwnerMismatch
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RealtimeLogConfigOwnerMismatch'
      parameters: []
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - DistributionConfig
              properties:
                DistributionConfig:
                  description: A distribution configuration.
                  type: object
                  properties:
                    CallerReference:
                      $ref: '#/components/schemas/string'
                      description: '<p>A unique value (for example, a date-time stamp) that ensures that the request can''t be replayed.</p> <p>If the value of <code>CallerReference</code> is new (regardless of the content of the <code>DistributionConfig</code> object), CloudFront creates a new distribution.</p> <p>If <code>CallerReference</code> is a value that you already sent in a previous request to create a distribution, CloudFront returns a <code>DistributionAlreadyExists</code> error.</p>'
                    Aliases:
                      $ref: '#/components/schemas/Aliases'
                      description: 'A complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution.'
                    DefaultRootObject:
                      $ref: '#/components/schemas/string'
                      description: '<p>The object that you want CloudFront to request from your origin (for example, <code>index.html</code>) when a viewer requests the root URL for your distribution (<code>http://www.example.com</code>) instead of an object in your distribution (<code>http://www.example.com/product-description.html</code>). Specifying a default root object avoids exposing the contents of your distribution.</p> <p>Specify only the object name, for example, <code>index.html</code>. Don''t add a <code>/</code> before the object name.</p> <p>If you don''t want to specify a default root object when you create a distribution, include an empty <code>DefaultRootObject</code> element.</p> <p>To delete the default root object from an existing distribution, update the distribution configuration and include an empty <code>DefaultRootObject</code> element.</p> <p>To replace the default root object, update the distribution configuration and specify the new object.</p> <p>For more information about the default root object, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/DefaultRootObject.html">Creating a Default Root Object</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
                    Origins:
                      $ref: '#/components/schemas/Origins'
                      description: 'A complex type that contains information about origins for this distribution. '
                    OriginGroups:
                      $ref: '#/components/schemas/OriginGroups'
                      description: ' A complex type that contains information about origin groups for this distribution.'
                    DefaultCacheBehavior:
                      $ref: '#/components/schemas/DefaultCacheBehavior'
                      description: A complex type that describes the default cache behavior if you don't specify a <code>CacheBehavior</code> element or if files don't match any of the values of <code>PathPattern</code> in <code>CacheBehavior</code> elements. You must create exactly one default cache behavior.
                    CacheBehaviors:
                      $ref: '#/components/schemas/CacheBehaviors'
                      description: 'A complex type that contains zero or more <code>CacheBehavior</code> elements. '
                    CustomErrorResponses:
                      $ref: '#/components/schemas/CustomErrorResponses'
                      description: '<p>A complex type that controls the following:</p> <ul> <li> <p>Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom error messages before returning the response to the viewer.</p> </li> <li> <p>How long CloudFront caches HTTP status codes in the 4xx and 5xx range.</p> </li> </ul> <p>For more information about custom error pages, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html">Customizing Error Responses</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
                    Comment:
                      $ref: '#/components/schemas/CommentType'
                      description: An optional comment to describe the distribution. The comment cannot be longer than 128 characters.
                    Logging:
                      $ref: '#/components/schemas/LoggingConfig'
                      description: '<p>A complex type that controls whether access logs are written for the distribution.</p> <p>For more information about logging, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/AccessLogs.html">Access Logs</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
                    PriceClass:
                      $ref: '#/components/schemas/PriceClass'
                      description: '<p>The price class that corresponds with the maximum price that you want to pay for CloudFront service. If you specify <code>PriceClass_All</code>, CloudFront responds to requests for your objects from all CloudFront edge locations.</p> <p>If you specify a price class other than <code>PriceClass_All</code>, CloudFront serves your objects from the CloudFront edge location that has the lowest latency among the edge locations in your price class. Viewers who are in or near regions that are excluded from your specified price class may encounter slower performance.</p> <p>For more information about price classes, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PriceClass.html">Choosing the Price Class for a CloudFront Distribution</a> in the <i>Amazon CloudFront Developer Guide</i>. For information about CloudFront pricing, including how price classes (such as Price Class 100) map to CloudFront regions, see <a href="http://aws.amazon.com/cloudfront/pricing/">Amazon CloudFront Pricing</a>.</p>'
                    Enabled:
                      $ref: '#/components/schemas/boolean'
                      description: 'From this field, you can enable or disable the selected distribution.'
                    ViewerCertificate:
                      $ref: '#/components/schemas/ViewerCertificate'
                      description: A complex type that determines the distribution’s SSL/TLS configuration for communicating with viewers.
                    Restrictions:
                      $ref: '#/components/schemas/Restrictions'
                      description: A complex type that identifies ways in which you want to restrict distribution of your content.
                    WebACLId:
                      $ref: '#/components/schemas/string'
                      description: '<p>A unique identifier that specifies the WAF web ACL, if any, to associate with this distribution. To specify a web ACL created using the latest version of WAF, use the ACL ARN, for example <code>arn:aws:wafv2:us-east-1:123456789012:global/webacl/ExampleWebACL/473e64fd-f30b-4765-81a0-62ad96dd167a</code>. To specify a web ACL created using WAF Classic, use the ACL ID, for example <code>473e64fd-f30b-4765-81a0-62ad96dd167a</code>.</p> <p>WAF is a web application firewall that lets you monitor the HTTP and HTTPS requests that are forwarded to CloudFront, and lets you control access to your content. Based on conditions that you specify, such as the IP addresses that requests originate from or the values of query strings, CloudFront responds to requests either with the requested content or with an HTTP 403 status code (Forbidden). You can also configure CloudFront to return a custom error page when a request is blocked. For more information about WAF, see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/what-is-aws-waf.html">WAF Developer Guide</a>. </p>'
                    HttpVersion:
                      $ref: '#/components/schemas/HttpVersion'
                      description: '<p>(Optional) Specify the maximum HTTP version that you want viewers to use to communicate with CloudFront. The default value for new web distributions is http2. Viewers that don''t support HTTP/2 automatically use an earlier HTTP version.</p> <p>For viewers and CloudFront to use HTTP/2, viewers must support TLS 1.2 or later, and must support Server Name Identification (SNI).</p> <p>In general, configuring CloudFront to communicate with viewers using HTTP/2 reduces latency. You can improve performance by optimizing for HTTP/2. For more information, do an Internet search for "http/2 optimization." </p>'
                    IsIPV6Enabled:
                      $ref: '#/components/schemas/boolean'
                      description: '<p>If you want CloudFront to respond to IPv6 DNS requests with an IPv6 address for your distribution, specify <code>true</code>. If you specify <code>false</code>, CloudFront responds to IPv6 DNS requests with the DNS response code <code>NOERROR</code> and with no IP addresses. This allows viewers to submit a second request, for an IPv4 address for your distribution. </p> <p>In general, you should enable IPv6 if you have users on IPv6 networks who want to access your content. However, if you''re using signed URLs or signed cookies to restrict access to your content, and if you''re using a custom policy that includes the <code>IpAddress</code> parameter to restrict the IP addresses that can access your content, don''t enable IPv6. If you want to restrict access to some content by IP address and not restrict access to other content (or restrict access but not by IP address), you can create two distributions. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-creating-signed-url-custom-policy.html">Creating a Signed URL Using a Custom Policy</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <p>If you''re using an Route 53 Amazon Web Services Integration alias resource record set to route traffic to your CloudFront distribution, you need to create a second alias resource record set when both of the following are true:</p> <ul> <li> <p>You enable IPv6 for the distribution</p> </li> <li> <p>You''re using alternate domain names in the URLs for your objects</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-to-cloudfront-distribution.html">Routing Traffic to an Amazon CloudFront Web Distribution by Using Your Domain Name</a> in the <i>Route 53 Amazon Web Services Integration Developer Guide</i>.</p> <p>If you created a CNAME resource record set, either with Route 53 Amazon Web Services Integration or with another DNS service, you don''t need to make any changes. A CNAME record will route traffic to your distribution regardless of the IP address format of the viewer request.</p>'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListDistributions2020_05_31
      description: List CloudFront distributions.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListDistributionsResult'
        '480':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
      parameters:
        - name: Marker
          in: query
          required: false
          description: 'Use this when paginating results to indicate where to begin in your list of distributions. The results include distributions in the list that occur after the marker. To get the next page of results, set the <code>Marker</code> to the value of the <code>NextMarker</code> from the current page''s response (which is also the ID of the last distribution on that page).'
          schema:
            type: string
        - name: MaxItems
          in: query
          required: false
          description: The maximum number of distributions you want in the response body.
          schema:
            type: string
  /2020-05-31/distribution#WithTags:
    post:
      operationId: CreateDistributionWithTags2020_05_31
      description: Create a new distribution with tags.
      responses:
        '201':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateDistributionWithTagsResult'
        '480':
          description: CNAMEAlreadyExists
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CNAMEAlreadyExists'
        '481':
          description: DistributionAlreadyExists
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DistributionAlreadyExists'
        '482':
          description: InvalidOrigin
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidOrigin'
        '483':
          description: InvalidOriginAccessIdentity
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidOriginAccessIdentity'
        '484':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        '485':
          description: TooManyTrustedSigners
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyTrustedSigners'
        '486':
          description: TrustedSignerDoesNotExist
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TrustedSignerDoesNotExist'
        '487':
          description: InvalidViewerCertificate
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidViewerCertificate'
        '488':
          description: InvalidMinimumProtocolVersion
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidMinimumProtocolVersion'
        '489':
          description: MissingBody
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MissingBody'
        '490':
          description: TooManyDistributionCNAMEs
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyDistributionCNAMEs'
        '491':
          description: TooManyDistributions
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyDistributions'
        '492':
          description: InvalidDefaultRootObject
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDefaultRootObject'
        '493':
          description: InvalidRelativePath
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidRelativePath'
        '494':
          description: InvalidErrorCode
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidErrorCode'
        '495':
          description: InvalidResponseCode
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidResponseCode'
        '496':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
        '497':
          description: InvalidRequiredProtocol
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidRequiredProtocol'
        '498':
          description: NoSuchOrigin
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchOrigin'
        '499':
          description: TooManyOrigins
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyOrigins'
        '500':
          description: TooManyOriginGroupsPerDistribution
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyOriginGroupsPerDistribution'
        '501':
          description: TooManyCacheBehaviors
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyCacheBehaviors'
        '502':
          description: TooManyCookieNamesInWhiteList
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyCookieNamesInWhiteList'
        '503':
          description: InvalidForwardCookies
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidForwardCookies'
        '504':
          description: TooManyHeadersInForwardedValues
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyHeadersInForwardedValues'
        '505':
          description: InvalidHeadersForS3Origin
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidHeadersForS3Origin'
        '506':
          description: InconsistentQuantities
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InconsistentQuantities'
        '507':
          description: TooManyCertificates
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyCertificates'
        '508':
          description: InvalidLocationCode
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidLocationCode'
        '509':
          description: InvalidGeoRestrictionParameter
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGeoRestrictionParameter'
        '510':
          description: InvalidProtocolSettings
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidProtocolSettings'
        '511':
          description: InvalidTTLOrder
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTTLOrder'
        '512':
          description: InvalidWebACLId
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidWebACLId'
        '513':
          description: TooManyOriginCustomHeaders
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyOriginCustomHeaders'
        '514':
          description: InvalidTagging
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagging'
        '515':
          description: TooManyQueryStringParameters
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyQueryStringParameters'
        '516':
          description: InvalidQueryStringParameters
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidQueryStringParameters'
        '517':
          description: TooManyDistributionsWithLambdaAssociations
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyDistributionsWithLambdaAssociations'
        '518':
          description: TooManyDistributionsWithSingleFunctionARN
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyDistributionsWithSingleFunctionARN'
        '519':
          description: TooManyLambdaFunctionAssociations
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyLambdaFunctionAssociations'
        '520':
          description: InvalidLambdaFunctionAssociation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidLambdaFunctionAssociation'
        '521':
          description: TooManyDistributionsWithFunctionAssociations
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyDistributionsWithFunctionAssociations'
        '522':
          description: TooManyFunctionAssociations
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyFunctionAssociations'
        '523':
          description: InvalidFunctionAssociation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidFunctionAssociation'
        '524':
          description: InvalidOriginReadTimeout
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidOriginReadTimeout'
        '525':
          description: InvalidOriginKeepaliveTimeout
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidOriginKeepaliveTimeout'
        '526':
          description: NoSuchFieldLevelEncryptionConfig
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchFieldLevelEncryptionConfig'
        '527':
          description: IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior'
        '528':
          description: TooManyDistributionsAssociatedToFieldLevelEncryptionConfig
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyDistributionsAssociatedToFieldLevelEncryptionConfig'
        '529':
          description: NoSuchCachePolicy
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchCachePolicy'
        '530':
          description: TooManyDistributionsAssociatedToCachePolicy
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyDistributionsAssociatedToCachePolicy'
        '531':
          description: NoSuchOriginRequestPolicy
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchOriginRequestPolicy'
        '532':
          description: TooManyDistributionsAssociatedToOriginRequestPolicy
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyDistributionsAssociatedToOriginRequestPolicy'
        '533':
          description: TooManyDistributionsAssociatedToKeyGroup
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyDistributionsAssociatedToKeyGroup'
        '534':
          description: TooManyKeyGroupsAssociatedToDistribution
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyKeyGroupsAssociatedToDistribution'
        '535':
          description: TrustedKeyGroupDoesNotExist
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TrustedKeyGroupDoesNotExist'
        '536':
          description: NoSuchRealtimeLogConfig
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchRealtimeLogConfig'
        '537':
          description: RealtimeLogConfigOwnerMismatch
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RealtimeLogConfigOwnerMismatch'
      parameters:
        - name: WithTags
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - DistributionConfigWithTags
              properties:
                DistributionConfigWithTags:
                  description: A distribution Configuration and a list of tags to be associated with the distribution.
                  type: object
                  properties:
                    DistributionConfig:
                      $ref: '#/components/schemas/DistributionConfig'
                      description: A distribution configuration.
                    Tags:
                      $ref: '#/components/schemas/Tags'
                      description: A complex type that contains zero or more <code>Tag</code> elements.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2020-05-31/field-level-encryption:
    post:
      operationId: CreateFieldLevelEncryptionConfig2020_05_31
      description: Create a new field-level encryption configuration.
      responses:
        '201':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateFieldLevelEncryptionConfigResult'
        '480':
          description: InconsistentQuantities
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InconsistentQuantities'
        '481':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
        '482':
          description: NoSuchFieldLevelEncryptionProfile
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchFieldLevelEncryptionProfile'
        '483':
          description: FieldLevelEncryptionConfigAlreadyExists
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/FieldLevelEncryptionConfigAlreadyExists'
        '484':
          description: TooManyFieldLevelEncryptionConfigs
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyFieldLevelEncryptionConfigs'
        '485':
          description: TooManyFieldLevelEncryptionQueryArgProfiles
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyFieldLevelEncryptionQueryArgProfiles'
        '486':
          description: TooManyFieldLevelEncryptionContentTypeProfiles
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyFieldLevelEncryptionContentTypeProfiles'
        '487':
          description: QueryArgProfileEmpty
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/QueryArgProfileEmpty'
      parameters: []
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - FieldLevelEncryptionConfig
              properties:
                FieldLevelEncryptionConfig:
                  description: 'A complex data type that includes the profile configurations specified for field-level encryption. '
                  type: object
                  properties:
                    CallerReference:
                      $ref: '#/components/schemas/string'
                      description: A unique number that ensures the request can't be replayed.
                    Comment:
                      $ref: '#/components/schemas/string'
                      description: An optional comment about the configuration. The comment cannot be longer than 128 characters.
                    QueryArgProfileConfig:
                      $ref: '#/components/schemas/QueryArgProfileConfig'
                      description: A complex data type that specifies when to forward content if a profile isn't found and the profile that can be provided as a query argument in a request.
                    ContentTypeProfileConfig:
                      $ref: '#/components/schemas/ContentTypeProfileConfig'
                      description: A complex data type that specifies when to forward content if a content type isn't recognized and profiles to use as by default in a request if a query argument doesn't specify a profile to use.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListFieldLevelEncryptionConfigs2020_05_31
      description: List all field-level encryption configurations that have been created in CloudFront for this account.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListFieldLevelEncryptionConfigsResult'
        '480':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
      parameters:
        - name: Marker
          in: query
          required: false
          description: 'Use this when paginating results to indicate where to begin in your list of configurations. The results include configurations in the list that occur after the marker. To get the next page of results, set the <code>Marker</code> to the value of the <code>NextMarker</code> from the current page''s response (which is also the ID of the last configuration on that page). '
          schema:
            type: string
        - name: MaxItems
          in: query
          required: false
          description: 'The maximum number of field-level encryption configurations you want in the response body. '
          schema:
            type: string
  /2020-05-31/field-level-encryption-profile:
    post:
      operationId: CreateFieldLevelEncryptionProfile2020_05_31
      description: Create a field-level encryption profile.
      responses:
        '201':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateFieldLevelEncryptionProfileResult'
        '480':
          description: InconsistentQuantities
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InconsistentQuantities'
        '481':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
        '482':
          description: NoSuchPublicKey
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchPublicKey'
        '483':
          description: FieldLevelEncryptionProfileAlreadyExists
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/FieldLevelEncryptionProfileAlreadyExists'
        '484':
          description: FieldLevelEncryptionProfileSizeExceeded
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/FieldLevelEncryptionProfileSizeExceeded'
        '485':
          description: TooManyFieldLevelEncryptionProfiles
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyFieldLevelEncryptionProfiles'
        '486':
          description: TooManyFieldLevelEncryptionEncryptionEntities
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyFieldLevelEncryptionEncryptionEntities'
        '487':
          description: TooManyFieldLevelEncryptionFieldPatterns
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyFieldLevelEncryptionFieldPatterns'
      parameters: []
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - FieldLevelEncryptionProfileConfig
              properties:
                FieldLevelEncryptionProfileConfig:
                  description: A complex data type of profiles for the field-level encryption.
                  type: object
                  properties:
                    Name:
                      $ref: '#/components/schemas/string'
                      description: Profile name for the field-level encryption profile.
                    CallerReference:
                      $ref: '#/components/schemas/string'
                      description: A unique number that ensures that the request can't be replayed.
                    Comment:
                      $ref: '#/components/schemas/string'
                      description: An optional comment for the field-level encryption profile. The comment cannot be longer than 128 characters.
                    EncryptionEntities:
                      $ref: '#/components/schemas/EncryptionEntities'
                      description: 'A complex data type of encryption entities for the field-level encryption profile that include the public key ID, provider, and field patterns for specifying which fields to encrypt with this key.'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListFieldLevelEncryptionProfiles2020_05_31
      description: Request a list of field-level encryption profiles that have been created in CloudFront for this account.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListFieldLevelEncryptionProfilesResult'
        '480':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
      parameters:
        - name: Marker
          in: query
          required: false
          description: 'Use this when paginating results to indicate where to begin in your list of profiles. The results include profiles in the list that occur after the marker. To get the next page of results, set the <code>Marker</code> to the value of the <code>NextMarker</code> from the current page''s response (which is also the ID of the last profile on that page). '
          schema:
            type: string
        - name: MaxItems
          in: query
          required: false
          description: 'The maximum number of field-level encryption profiles you want in the response body. '
          schema:
            type: string
  /2020-05-31/function:
    post:
      operationId: CreateFunction2020_05_31
      description: '<p>Creates a CloudFront function.</p> <p>To create a function, you provide the function code and some configuration information about the function. The response contains an Amazon Resource Name (ARN) that uniquely identifies the function.</p> <p>When you create a function, it’s in the <code>DEVELOPMENT</code> stage. In this stage, you can test the function with <code>TestFunction</code>, and update it with <code>UpdateFunction</code>.</p> <p>When you’re ready to use your function with a CloudFront distribution, use <code>PublishFunction</code> to copy the function from the <code>DEVELOPMENT</code> stage to <code>LIVE</code>. When it’s live, you can attach the function to a distribution’s cache behavior, using the function’s ARN.</p>'
      responses:
        '201':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateFunctionResult'
        '480':
          description: TooManyFunctions
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyFunctions'
        '481':
          description: FunctionAlreadyExists
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/FunctionAlreadyExists'
        '482':
          description: FunctionSizeLimitExceeded
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/FunctionSizeLimitExceeded'
        '483':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
        '484':
          description: UnsupportedOperation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnsupportedOperation'
      parameters: []
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - Name
                - FunctionConfig
                - FunctionCode
              properties:
                Name:
                  description: A name to identify the function.
                  type: string
                  pattern: '^[a-zA-Z0-9-_]{1,64}$'
                  minLength: 1
                  maxLength: 64
                FunctionConfig:
                  description: Contains configuration information about a CloudFront function.
                  type: object
                  properties:
                    Comment:
                      $ref: '#/components/schemas/string'
                      description: A comment to describe the function.
                    Runtime:
                      $ref: '#/components/schemas/FunctionRuntime'
                      description: The function’s runtime environment. The only valid value is <code>cloudfront-js-1.0</code>.
                FunctionCode:
                  description: 'The function code. For more information about writing a CloudFront function, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/writing-function-code.html">Writing function code for CloudFront Functions</a> in the <i>Amazon CloudFront Developer Guide</i>.'
                  type: string
                  minLength: 1
                  maxLength: 40960
                  format: password
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListFunctions2020_05_31
      description: '<p>Gets a list of all CloudFront functions in your account.</p> <p>You can optionally apply a filter to return only the functions that are in the specified stage, either <code>DEVELOPMENT</code> or <code>LIVE</code>.</p> <p>You can optionally specify the maximum number of items to receive in the response. If the total number of items in the list exceeds the maximum that you specify, or the default maximum, the response is paginated. To get the next page of items, send a subsequent request that specifies the <code>NextMarker</code> value from the current response as the <code>Marker</code> value in the subsequent request.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListFunctionsResult'
        '480':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
        '481':
          description: UnsupportedOperation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnsupportedOperation'
      parameters:
        - name: Marker
          in: query
          required: false
          description: 'Use this field when paginating results to indicate where to begin in your list of functions. The response includes functions in the list that occur after the marker. To get the next page of the list, set this field’s value to the value of <code>NextMarker</code> from the current page’s response.'
          schema:
            type: string
        - name: MaxItems
          in: query
          required: false
          description: The maximum number of functions that you want in the response.
          schema:
            type: string
        - name: Stage
          in: query
          required: false
          description: 'An optional filter to return only the functions that are in the specified stage, either <code>DEVELOPMENT</code> or <code>LIVE</code>.'
          schema:
            type: string
            enum:
              - DEVELOPMENT
              - LIVE
  '/2020-05-31/distribution/{DistributionId}/invalidation':
    post:
      operationId: CreateInvalidation2020_05_31
      description: 'Create a new invalidation. '
      responses:
        '201':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateInvalidationResult'
        '480':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        '481':
          description: MissingBody
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MissingBody'
        '482':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
        '483':
          description: NoSuchDistribution
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchDistribution'
        '484':
          description: BatchTooLarge
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BatchTooLarge'
        '485':
          description: TooManyInvalidationsInProgress
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyInvalidationsInProgress'
        '486':
          description: InconsistentQuantities
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InconsistentQuantities'
      parameters:
        - name: DistributionId
          in: path
          required: true
          description: The distribution's id.
          schema:
            type: string
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - InvalidationBatch
              properties:
                InvalidationBatch:
                  description: An invalidation batch.
                  type: object
                  properties:
                    Paths:
                      $ref: '#/components/schemas/Paths'
                      description: 'A complex type that contains information about the objects that you want to invalidate. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Invalidation.html#invalidation-specifying-objects">Specifying the Objects to Invalidate</a> in the <i>Amazon CloudFront Developer Guide</i>. '
                    CallerReference:
                      $ref: '#/components/schemas/string'
                      description: '<p>A value that you specify to uniquely identify an invalidation request. CloudFront uses the value to prevent you from accidentally resubmitting an identical request. Whenever you create a new invalidation request, you must specify a new value for <code>CallerReference</code> and change other values in the request as applicable. One way to ensure that the value of <code>CallerReference</code> is unique is to use a <code>timestamp</code>, for example, <code>20120301090000</code>.</p> <p>If you make a second invalidation request with the same value for <code>CallerReference</code>, and if the rest of the request is the same, CloudFront doesn''t create a new invalidation request. Instead, CloudFront returns information about the invalidation request that you previously created with the same <code>CallerReference</code>.</p> <p>If <code>CallerReference</code> is a value you already sent in a previous invalidation batch request but the content of any <code>Path</code> is different from the original request, CloudFront returns an <code>InvalidationBatchAlreadyExists</code> error.</p>'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListInvalidations2020_05_31
      description: 'Lists invalidation batches. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListInvalidationsResult'
        '480':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
        '481':
          description: NoSuchDistribution
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchDistribution'
        '482':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
      parameters:
        - name: DistributionId
          in: path
          required: true
          description: The distribution's ID.
          schema:
            type: string
        - name: Marker
          in: query
          required: false
          description: 'Use this parameter when paginating results to indicate where to begin in your list of invalidation batches. Because the results are returned in decreasing order from most recent to oldest, the most recent results are on the first page, the second page will contain earlier results, and so on. To get the next page of results, set <code>Marker</code> to the value of the <code>NextMarker</code> from the current page''s response. This value is the same as the ID of the last invalidation batch on that page. '
          schema:
            type: string
        - name: MaxItems
          in: query
          required: false
          description: The maximum number of invalidation batches that you want in the response body.
          schema:
            type: string
  /2020-05-31/key-group:
    post:
      operationId: CreateKeyGroup2020_05_31
      description: '<p>Creates a key group that you can use with <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">CloudFront signed URLs and signed cookies</a>.</p> <p>To create a key group, you must specify at least one public key for the key group. After you create a key group, you can reference it from one or more cache behaviors. When you reference a key group in a cache behavior, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with a private key whose corresponding public key is in the key group. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">Serving private content</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
      responses:
        '201':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateKeyGroupResult'
        '480':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
        '481':
          description: KeyGroupAlreadyExists
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyGroupAlreadyExists'
        '482':
          description: TooManyKeyGroups
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyKeyGroups'
        '483':
          description: TooManyPublicKeysInKeyGroup
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyPublicKeysInKeyGroup'
      parameters: []
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - KeyGroupConfig
              properties:
                KeyGroupConfig:
                  description: '<p>A key group configuration.</p> <p>A key group contains a list of public keys that you can use with <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">CloudFront signed URLs and signed cookies</a>.</p>'
                  type: object
                  properties:
                    Name:
                      $ref: '#/components/schemas/string'
                      description: A name to identify the key group.
                    Items:
                      $ref: '#/components/schemas/PublicKeyIdList'
                      description: A list of the identifiers of the public keys in the key group.
                    Comment:
                      $ref: '#/components/schemas/string'
                      description: A comment to describe the key group. The comment cannot be longer than 128 characters.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListKeyGroups2020_05_31
      description: '<p>Gets a list of key groups.</p> <p>You can optionally specify the maximum number of items to receive in the response. If the total number of items in the list exceeds the maximum that you specify, or the default maximum, the response is paginated. To get the next page of items, send a subsequent request that specifies the <code>NextMarker</code> value from the current response as the <code>Marker</code> value in the subsequent request.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListKeyGroupsResult'
        '480':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
      parameters:
        - name: Marker
          in: query
          required: false
          description: 'Use this field when paginating results to indicate where to begin in your list of key groups. The response includes key groups in the list that occur after the marker. To get the next page of the list, set this field’s value to the value of <code>NextMarker</code> from the current page’s response.'
          schema:
            type: string
        - name: MaxItems
          in: query
          required: false
          description: The maximum number of key groups that you want in the response.
          schema:
            type: string
  '/2020-05-31/distributions/{DistributionId}/monitoring-subscription':
    post:
      operationId: CreateMonitoringSubscription2020_05_31
      description: '<p>Enables additional CloudWatch metrics for the specified CloudFront distribution. The additional metrics incur an additional cost.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/viewing-cloudfront-metrics.html#monitoring-console.distributions-additional">Viewing additional CloudFront distribution metrics</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateMonitoringSubscriptionResult'
        '480':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        '481':
          description: NoSuchDistribution
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchDistribution'
        '482':
          description: UnsupportedOperation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnsupportedOperation'
      parameters:
        - name: DistributionId
          in: path
          required: true
          description: The ID of the distribution that you are enabling metrics for.
          schema:
            type: string
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - MonitoringSubscription
              properties:
                MonitoringSubscription:
                  description: A monitoring subscription. This structure contains information about whether additional CloudWatch metrics are enabled for a given CloudFront distribution.
                  type: object
                  properties:
                    RealtimeMetricsSubscriptionConfig:
                      $ref: '#/components/schemas/RealtimeMetricsSubscriptionConfig'
                      description: A subscription configuration for additional CloudWatch metrics.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteMonitoringSubscription2020_05_31
      description: Disables additional CloudWatch metrics for the specified CloudFront distribution.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteMonitoringSubscriptionResult'
        '480':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        '481':
          description: NoSuchDistribution
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchDistribution'
        '482':
          description: UnsupportedOperation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnsupportedOperation'
      parameters:
        - name: DistributionId
          in: path
          required: true
          description: The ID of the distribution that you are disabling metrics for.
          schema:
            type: string
    get:
      operationId: GetMonitoringSubscription2020_05_31
      description: Gets information about whether additional CloudWatch metrics are enabled for the specified CloudFront distribution.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetMonitoringSubscriptionResult'
        '480':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        '481':
          description: NoSuchDistribution
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchDistribution'
        '482':
          description: UnsupportedOperation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnsupportedOperation'
      parameters:
        - name: DistributionId
          in: path
          required: true
          description: The ID of the distribution that you are getting metrics information for.
          schema:
            type: string
  /2020-05-31/origin-request-policy:
    post:
      operationId: CreateOriginRequestPolicy2020_05_31
      description: '<p>Creates an origin request policy.</p> <p>After you create an origin request policy, you can attach it to one or more cache behaviors. When it’s attached to a cache behavior, the origin request policy determines the values that CloudFront includes in requests that it sends to the origin. Each request that CloudFront sends to the origin includes the following:</p> <ul> <li> <p>The request body and the URL path (without the domain name) from the viewer request.</p> </li> <li> <p>The headers that CloudFront automatically includes in every origin request, including <code>Host</code>, <code>User-Agent</code>, and <code>X-Amz-Cf-Id</code>.</p> </li> <li> <p>All HTTP headers, cookies, and URL query strings that are specified in the cache policy or the origin request policy. These can include items from the viewer request and, in the case of headers, additional ones that are added by CloudFront.</p> </li> </ul> <p>CloudFront sends a request when it can’t find a valid object in its cache that matches the request. If you want to send values to the origin and also include them in the cache key, use <code>CachePolicy</code>.</p> <p>For more information about origin request policies, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html">Controlling origin requests</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
      responses:
        '201':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateOriginRequestPolicyResult'
        '480':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        '481':
          description: InconsistentQuantities
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InconsistentQuantities'
        '482':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
        '483':
          description: OriginRequestPolicyAlreadyExists
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OriginRequestPolicyAlreadyExists'
        '484':
          description: TooManyOriginRequestPolicies
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyOriginRequestPolicies'
        '485':
          description: TooManyHeadersInOriginRequestPolicy
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyHeadersInOriginRequestPolicy'
        '486':
          description: TooManyCookiesInOriginRequestPolicy
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyCookiesInOriginRequestPolicy'
        '487':
          description: TooManyQueryStringsInOriginRequestPolicy
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyQueryStringsInOriginRequestPolicy'
      parameters: []
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - OriginRequestPolicyConfig
              properties:
                OriginRequestPolicyConfig:
                  description: '<p>An origin request policy configuration.</p> <p>This configuration determines the values that CloudFront includes in requests that it sends to the origin. Each request that CloudFront sends to the origin includes the following:</p> <ul> <li> <p>The request body and the URL path (without the domain name) from the viewer request.</p> </li> <li> <p>The headers that CloudFront automatically includes in every origin request, including <code>Host</code>, <code>User-Agent</code>, and <code>X-Amz-Cf-Id</code>.</p> </li> <li> <p>All HTTP headers, cookies, and URL query strings that are specified in the cache policy or the origin request policy. These can include items from the viewer request and, in the case of headers, additional ones that are added by CloudFront.</p> </li> </ul> <p>CloudFront sends a request when it can’t find an object in its cache that matches the request. If you want to send values to the origin and also include them in the cache key, use <code>CachePolicy</code>.</p>'
                  type: object
                  properties:
                    Comment:
                      $ref: '#/components/schemas/string'
                      description: A comment to describe the origin request policy. The comment cannot be longer than 128 characters.
                    Name:
                      $ref: '#/components/schemas/string'
                      description: A unique name to identify the origin request policy.
                    HeadersConfig:
                      $ref: '#/components/schemas/OriginRequestPolicyHeadersConfig'
                      description: The HTTP headers to include in origin requests. These can include headers from viewer requests and additional headers added by CloudFront.
                    CookiesConfig:
                      $ref: '#/components/schemas/OriginRequestPolicyCookiesConfig'
                      description: The cookies from viewer requests to include in origin requests.
                    QueryStringsConfig:
                      $ref: '#/components/schemas/OriginRequestPolicyQueryStringsConfig'
                      description: The URL query strings from viewer requests to include in origin requests.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListOriginRequestPolicies2020_05_31
      description: '<p>Gets a list of origin request policies.</p> <p>You can optionally apply a filter to return only the managed policies created by Amazon Web Services, or only the custom policies created in your account.</p> <p>You can optionally specify the maximum number of items to receive in the response. If the total number of items in the list exceeds the maximum that you specify, or the default maximum, the response is paginated. To get the next page of items, send a subsequent request that specifies the <code>NextMarker</code> value from the current response as the <code>Marker</code> value in the subsequent request.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListOriginRequestPoliciesResult'
        '480':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        '481':
          description: NoSuchOriginRequestPolicy
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchOriginRequestPolicy'
        '482':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
      parameters:
        - name: Type
          in: query
          required: false
          description: '<p>A filter to return only the specified kinds of origin request policies. Valid values are:</p> <ul> <li> <p> <code>managed</code> – Returns only the managed policies created by Amazon Web Services.</p> </li> <li> <p> <code>custom</code> – Returns only the custom policies created in your account.</p> </li> </ul>'
          schema:
            type: string
            enum:
              - managed
              - custom
        - name: Marker
          in: query
          required: false
          description: 'Use this field when paginating results to indicate where to begin in your list of origin request policies. The response includes origin request policies in the list that occur after the marker. To get the next page of the list, set this field’s value to the value of <code>NextMarker</code> from the current page’s response.'
          schema:
            type: string
        - name: MaxItems
          in: query
          required: false
          description: The maximum number of origin request policies that you want in the response.
          schema:
            type: string
  /2020-05-31/public-key:
    post:
      operationId: CreatePublicKey2020_05_31
      description: 'Uploads a public key to CloudFront that you can use with <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">signed URLs and signed cookies</a>, or with <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/field-level-encryption.html">field-level encryption</a>.'
      responses:
        '201':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreatePublicKeyResult'
        '480':
          description: PublicKeyAlreadyExists
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PublicKeyAlreadyExists'
        '481':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
        '482':
          description: TooManyPublicKeys
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyPublicKeys'
      parameters: []
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - PublicKeyConfig
              properties:
                PublicKeyConfig:
                  description: 'Configuration information about a public key that you can use with <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">signed URLs and signed cookies</a>, or with <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/field-level-encryption.html">field-level encryption</a>.'
                  type: object
                  properties:
                    CallerReference:
                      $ref: '#/components/schemas/string'
                      description: A string included in the request to help make sure that the request can’t be replayed.
                    Name:
                      $ref: '#/components/schemas/string'
                      description: A name to help identify the public key.
                    EncodedKey:
                      $ref: '#/components/schemas/string'
                      description: 'The public key that you can use with <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">signed URLs and signed cookies</a>, or with <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/field-level-encryption.html">field-level encryption</a>.'
                    Comment:
                      $ref: '#/components/schemas/string'
                      description: A comment to describe the public key. The comment cannot be longer than 128 characters.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListPublicKeys2020_05_31
      description: List all public keys that have been added to CloudFront for this account.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListPublicKeysResult'
        '480':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
      parameters:
        - name: Marker
          in: query
          required: false
          description: 'Use this when paginating results to indicate where to begin in your list of public keys. The results include public keys in the list that occur after the marker. To get the next page of results, set the <code>Marker</code> to the value of the <code>NextMarker</code> from the current page''s response (which is also the ID of the last public key on that page). '
          schema:
            type: string
        - name: MaxItems
          in: query
          required: false
          description: 'The maximum number of public keys you want in the response body. '
          schema:
            type: string
  /2020-05-31/realtime-log-config:
    post:
      operationId: CreateRealtimeLogConfig2020_05_31
      description: '<p>Creates a real-time log configuration.</p> <p>After you create a real-time log configuration, you can attach it to one or more cache behaviors to send real-time log data to the specified Amazon Kinesis data stream.</p> <p>For more information about real-time log configurations, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html">Real-time logs</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
      responses:
        '201':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateRealtimeLogConfigResult'
        '480':
          description: RealtimeLogConfigAlreadyExists
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RealtimeLogConfigAlreadyExists'
        '481':
          description: TooManyRealtimeLogConfigs
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyRealtimeLogConfigs'
        '482':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
        '483':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
      parameters: []
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - EndPoints
                - Fields
                - Name
                - SamplingRate
              properties:
                EndPoints:
                  description: Contains information about the Amazon Kinesis data stream where you are sending real-time log data.
                  type: array
                  items:
                    $ref: '#/components/schemas/EndPoint'
                Fields:
                  description: '<p>A list of fields to include in each real-time log record.</p> <p>For more information about fields, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-fields">Real-time log configuration fields</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
                  type: array
                  items:
                    allOf:
                      - $ref: '#/components/schemas/string'
                      - xml:
                          name: Field
                Name:
                  description: A unique name to identify this real-time log configuration.
                  type: string
                SamplingRate:
                  description: 'The sampling rate for this real-time log configuration. The sampling rate determines the percentage of viewer requests that are represented in the real-time log data. You must provide an integer between 1 and 100, inclusive.'
                  type: integer
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListRealtimeLogConfigs2020_05_31
      description: '<p>Gets a list of real-time log configurations.</p> <p>You can optionally specify the maximum number of items to receive in the response. If the total number of items in the list exceeds the maximum that you specify, or the default maximum, the response is paginated. To get the next page of items, send a subsequent request that specifies the <code>NextMarker</code> value from the current response as the <code>Marker</code> value in the subsequent request. </p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListRealtimeLogConfigsResult'
        '480':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
        '481':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        '482':
          description: NoSuchRealtimeLogConfig
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchRealtimeLogConfig'
      parameters:
        - name: MaxItems
          in: query
          required: false
          description: The maximum number of real-time log configurations that you want in the response.
          schema:
            type: string
        - name: Marker
          in: query
          required: false
          description: 'Use this field when paginating results to indicate where to begin in your list of real-time log configurations. The response includes real-time log configurations in the list that occur after the marker. To get the next page of the list, set this field’s value to the value of <code>NextMarker</code> from the current page’s response.'
          schema:
            type: string
  /2020-05-31/streaming-distribution:
    post:
      operationId: CreateStreamingDistribution2020_05_31
      description: 'This API is deprecated. Amazon CloudFront is deprecating real-time messaging protocol (RTMP) distributions on December 31, 2020. For more information, <a href="http://forums.aws.amazon.com/ann.jspa?annID=7356">read the announcement</a> on the Amazon CloudFront discussion forum.'
      responses:
        '201':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateStreamingDistributionResult'
        '480':
          description: CNAMEAlreadyExists
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CNAMEAlreadyExists'
        '481':
          description: StreamingDistributionAlreadyExists
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StreamingDistributionAlreadyExists'
        '482':
          description: InvalidOrigin
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidOrigin'
        '483':
          description: InvalidOriginAccessIdentity
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidOriginAccessIdentity'
        '484':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        '485':
          description: TooManyTrustedSigners
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyTrustedSigners'
        '486':
          description: TrustedSignerDoesNotExist
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TrustedSignerDoesNotExist'
        '487':
          description: MissingBody
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MissingBody'
        '488':
          description: TooManyStreamingDistributionCNAMEs
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyStreamingDistributionCNAMEs'
        '489':
          description: TooManyStreamingDistributions
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyStreamingDistributions'
        '490':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
        '491':
          description: InconsistentQuantities
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InconsistentQuantities'
      parameters: []
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - StreamingDistributionConfig
              properties:
                StreamingDistributionConfig:
                  description: The RTMP distribution's configuration information.
                  type: object
                  properties:
                    CallerReference:
                      $ref: '#/components/schemas/string'
                      description: '<p>A unique value (for example, a date-time stamp) that ensures that the request can''t be replayed.</p> <p>If the value of <code>CallerReference</code> is new (regardless of the content of the <code>StreamingDistributionConfig</code> object), CloudFront creates a new distribution.</p> <p>If <code>CallerReference</code> is a value that you already sent in a previous request to create a distribution, CloudFront returns a <code>DistributionAlreadyExists</code> error.</p>'
                    S3Origin:
                      $ref: '#/components/schemas/S3Origin'
                      description: 'A complex type that contains information about the Amazon S3 bucket from which you want CloudFront to get your media files for distribution. '
                    Aliases:
                      $ref: '#/components/schemas/Aliases'
                      description: 'A complex type that contains information about CNAMEs (alternate domain names), if any, for this streaming distribution. '
                    Comment:
                      $ref: '#/components/schemas/string'
                      description: 'Any comments you want to include about the streaming distribution. '
                    Logging:
                      $ref: '#/components/schemas/StreamingLoggingConfig'
                      description: 'A complex type that controls whether access logs are written for the streaming distribution. '
                    TrustedSigners:
                      $ref: '#/components/schemas/TrustedSigners'
                      description: 'A complex type that specifies any accounts that you want to permit to create signed URLs for private content. If you want the distribution to use signed URLs, include this element; if you want the distribution to use public URLs, remove this element. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">Serving Private Content through CloudFront</a> in the <i>Amazon CloudFront Developer Guide</i>. '
                    PriceClass:
                      $ref: '#/components/schemas/PriceClass'
                      description: 'A complex type that contains information about price class for this streaming distribution. '
                    Enabled:
                      $ref: '#/components/schemas/boolean'
                      description: Whether the streaming distribution is enabled to accept user requests for content.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListStreamingDistributions2020_05_31
      description: 'List streaming distributions. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListStreamingDistributionsResult'
        '480':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
      parameters:
        - name: Marker
          in: query
          required: false
          description: The value that you provided for the <code>Marker</code> request parameter.
          schema:
            type: string
        - name: MaxItems
          in: query
          required: false
          description: The value that you provided for the <code>MaxItems</code> request parameter.
          schema:
            type: string
  /2020-05-31/streaming-distribution#WithTags:
    post:
      operationId: CreateStreamingDistributionWithTags2020_05_31
      description: 'This API is deprecated. Amazon CloudFront is deprecating real-time messaging protocol (RTMP) distributions on December 31, 2020. For more information, <a href="http://forums.aws.amazon.com/ann.jspa?annID=7356">read the announcement</a> on the Amazon CloudFront discussion forum.'
      responses:
        '201':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateStreamingDistributionWithTagsResult'
        '480':
          description: CNAMEAlreadyExists
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CNAMEAlreadyExists'
        '481':
          description: StreamingDistributionAlreadyExists
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StreamingDistributionAlreadyExists'
        '482':
          description: InvalidOrigin
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidOrigin'
        '483':
          description: InvalidOriginAccessIdentity
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidOriginAccessIdentity'
        '484':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        '485':
          description: TooManyTrustedSigners
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyTrustedSigners'
        '486':
          description: TrustedSignerDoesNotExist
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TrustedSignerDoesNotExist'
        '487':
          description: MissingBody
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MissingBody'
        '488':
          description: TooManyStreamingDistributionCNAMEs
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyStreamingDistributionCNAMEs'
        '489':
          description: TooManyStreamingDistributions
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyStreamingDistributions'
        '490':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
        '491':
          description: InconsistentQuantities
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InconsistentQuantities'
        '492':
          description: InvalidTagging
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagging'
      parameters:
        - name: WithTags
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
          allowEmptyValue: true
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - StreamingDistributionConfigWithTags
              properties:
                StreamingDistributionConfigWithTags:
                  description: A streaming distribution Configuration and a list of tags to be associated with the streaming distribution.
                  type: object
                  properties:
                    StreamingDistributionConfig:
                      $ref: '#/components/schemas/StreamingDistributionConfig'
                      description: A streaming distribution Configuration.
                    Tags:
                      $ref: '#/components/schemas/Tags'
                      description: A complex type that contains zero or more <code>Tag</code> elements.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2020-05-31/cache-policy/{Id}':
    delete:
      operationId: DeleteCachePolicy2020_05_31
      description: '<p>Deletes a cache policy.</p> <p>You cannot delete a cache policy if it’s attached to a cache behavior. First update your distributions to remove the cache policy from all cache behaviors, then delete the cache policy.</p> <p>To delete a cache policy, you must provide the policy’s identifier and version. To get these values, you can use <code>ListCachePolicies</code> or <code>GetCachePolicy</code>.</p>'
      responses:
        '204':
          description: Success
        '480':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        '481':
          description: InvalidIfMatchVersion
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidIfMatchVersion'
        '482':
          description: NoSuchCachePolicy
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchCachePolicy'
        '483':
          description: PreconditionFailed
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PreconditionFailed'
        '484':
          description: IllegalDelete
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/IllegalDelete'
        '485':
          description: CachePolicyInUse
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CachePolicyInUse'
      parameters:
        - name: Id
          in: path
          required: true
          description: 'The unique identifier for the cache policy that you are deleting. To get the identifier, you can use <code>ListCachePolicies</code>.'
          schema:
            type: string
        - name: If-Match
          in: header
          required: false
          description: 'The version of the cache policy that you are deleting. The version is the cache policy’s <code>ETag</code> value, which you can get using <code>ListCachePolicies</code>, <code>GetCachePolicy</code>, or <code>GetCachePolicyConfig</code>.'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetCachePolicy2020_05_31
      description: '<p>Gets a cache policy, including the following metadata:</p> <ul> <li> <p>The policy’s identifier.</p> </li> <li> <p>The date and time when the policy was last modified.</p> </li> </ul> <p>To get a cache policy, you must provide the policy’s identifier. If the cache policy is attached to a distribution’s cache behavior, you can get the policy’s identifier using <code>ListDistributions</code> or <code>GetDistribution</code>. If the cache policy is not attached to a cache behavior, you can get the identifier using <code>ListCachePolicies</code>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetCachePolicyResult'
        '480':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        '481':
          description: NoSuchCachePolicy
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchCachePolicy'
      parameters:
        - name: Id
          in: path
          required: true
          description: 'The unique identifier for the cache policy. If the cache policy is attached to a distribution’s cache behavior, you can get the policy’s identifier using <code>ListDistributions</code> or <code>GetDistribution</code>. If the cache policy is not attached to a cache behavior, you can get the identifier using <code>ListCachePolicies</code>.'
          schema:
            type: string
    put:
      operationId: UpdateCachePolicy2020_05_31
      description: '<p>Updates a cache policy configuration.</p> <p>When you update a cache policy configuration, all the fields are updated with the values provided in the request. You cannot update some fields independent of others. To update a cache policy configuration:</p> <ol> <li> <p>Use <code>GetCachePolicyConfig</code> to get the current configuration.</p> </li> <li> <p>Locally modify the fields in the cache policy configuration that you want to update.</p> </li> <li> <p>Call <code>UpdateCachePolicy</code> by providing the entire cache policy configuration, including the fields that you modified and those that you didn’t.</p> </li> </ol>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateCachePolicyResult'
        '480':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        '481':
          description: IllegalUpdate
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/IllegalUpdate'
        '482':
          description: InconsistentQuantities
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InconsistentQuantities'
        '483':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
        '484':
          description: InvalidIfMatchVersion
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidIfMatchVersion'
        '485':
          description: NoSuchCachePolicy
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchCachePolicy'
        '486':
          description: PreconditionFailed
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PreconditionFailed'
        '487':
          description: CachePolicyAlreadyExists
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CachePolicyAlreadyExists'
        '488':
          description: TooManyHeadersInCachePolicy
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyHeadersInCachePolicy'
        '489':
          description: TooManyCookiesInCachePolicy
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyCookiesInCachePolicy'
        '490':
          description: TooManyQueryStringsInCachePolicy
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyQueryStringsInCachePolicy'
      parameters:
        - name: Id
          in: path
          required: true
          description: The unique identifier for the cache policy that you are updating. The identifier is returned in a cache behavior’s <code>CachePolicyId</code> field in the response to <code>GetDistributionConfig</code>.
          schema:
            type: string
        - name: If-Match
          in: header
          required: false
          description: The version of the cache policy that you are updating. The version is returned in the cache policy’s <code>ETag</code> field in the response to <code>GetCachePolicyConfig</code>.
          schema:
            type: string
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - CachePolicyConfig
              properties:
                CachePolicyConfig:
                  description: '<p>A cache policy configuration.</p> <p>This configuration determines the following:</p> <ul> <li> <p>The values that CloudFront includes in the cache key. These values can include HTTP headers, cookies, and URL query strings. CloudFront uses the cache key to find an object in its cache that it can return to the viewer.</p> </li> <li> <p>The default, minimum, and maximum time to live (TTL) values that you want objects to stay in the CloudFront cache.</p> </li> </ul> <p>The headers, cookies, and query strings that are included in the cache key are automatically included in requests that CloudFront sends to the origin. CloudFront sends a request when it can’t find a valid object in its cache that matches the request’s cache key. If you want to send values to the origin but <i>not</i> include them in the cache key, use <code>OriginRequestPolicy</code>.</p>'
                  type: object
                  properties:
                    Comment:
                      $ref: '#/components/schemas/string'
                      description: A comment to describe the cache policy. The comment cannot be longer than 128 characters.
                    Name:
                      $ref: '#/components/schemas/string'
                      description: A unique name to identify the cache policy.
                    DefaultTTL:
                      $ref: '#/components/schemas/long'
                      description: '<p>The default amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated. CloudFront uses this value as the object’s time to live (TTL) only when the origin does <i>not</i> send <code>Cache-Control</code> or <code>Expires</code> headers with the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html">Managing How Long Content Stays in an Edge Cache (Expiration)</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <p>The default value for this field is 86400 seconds (one day). If the value of <code>MinTTL</code> is more than 86400 seconds, then the default value for this field is the same as the value of <code>MinTTL</code>.</p>'
                    MaxTTL:
                      $ref: '#/components/schemas/long'
                      description: '<p>The maximum amount of time, in seconds, that objects stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated. CloudFront uses this value only when the origin sends <code>Cache-Control</code> or <code>Expires</code> headers with the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html">Managing How Long Content Stays in an Edge Cache (Expiration)</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <p>The default value for this field is 31536000 seconds (one year). If the value of <code>MinTTL</code> or <code>DefaultTTL</code> is more than 31536000 seconds, then the default value for this field is the same as the value of <code>DefaultTTL</code>.</p>'
                    MinTTL:
                      $ref: '#/components/schemas/long'
                      description: 'The minimum amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html">Managing How Long Content Stays in an Edge Cache (Expiration)</a> in the <i>Amazon CloudFront Developer Guide</i>.'
                    ParametersInCacheKeyAndForwardedToOrigin:
                      $ref: '#/components/schemas/ParametersInCacheKeyAndForwardedToOrigin'
                      description: 'The HTTP headers, cookies, and URL query strings to include in the cache key. The values included in the cache key are automatically included in requests that CloudFront sends to the origin.'
  '/2020-05-31/origin-access-identity/cloudfront/{Id}':
    delete:
      operationId: DeleteCloudFrontOriginAccessIdentity2020_05_31
      description: 'Delete an origin access identity. '
      responses:
        '204':
          description: Success
        '480':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        '481':
          description: InvalidIfMatchVersion
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidIfMatchVersion'
        '482':
          description: NoSuchCloudFrontOriginAccessIdentity
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchCloudFrontOriginAccessIdentity'
        '483':
          description: PreconditionFailed
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PreconditionFailed'
        '484':
          description: CloudFrontOriginAccessIdentityInUse
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CloudFrontOriginAccessIdentityInUse'
      parameters:
        - name: Id
          in: path
          required: true
          description: The origin access identity's ID.
          schema:
            type: string
        - name: If-Match
          in: header
          required: false
          description: 'The value of the <code>ETag</code> header you received from a previous <code>GET</code> or <code>PUT</code> request. For example: <code>E2QWRUHAPOMQZL</code>.'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetCloudFrontOriginAccessIdentity2020_05_31
      description: 'Get the information about an origin access identity. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetCloudFrontOriginAccessIdentityResult'
        '480':
          description: NoSuchCloudFrontOriginAccessIdentity
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchCloudFrontOriginAccessIdentity'
        '481':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
      parameters:
        - name: Id
          in: path
          required: true
          description: The identity's ID.
          schema:
            type: string
  '/2020-05-31/distribution/{Id}':
    delete:
      operationId: DeleteDistribution2020_05_31
      description: 'Delete a distribution. '
      responses:
        '204':
          description: Success
        '480':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        '481':
          description: DistributionNotDisabled
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DistributionNotDisabled'
        '482':
          description: InvalidIfMatchVersion
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidIfMatchVersion'
        '483':
          description: NoSuchDistribution
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchDistribution'
        '484':
          description: PreconditionFailed
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PreconditionFailed'
      parameters:
        - name: Id
          in: path
          required: true
          description: 'The distribution ID. '
          schema:
            type: string
        - name: If-Match
          in: header
          required: false
          description: 'The value of the <code>ETag</code> header that you received when you disabled the distribution. For example: <code>E2QWRUHAPOMQZL</code>. '
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetDistribution2020_05_31
      description: Get the information about a distribution.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetDistributionResult'
        '480':
          description: NoSuchDistribution
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchDistribution'
        '481':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
      parameters:
        - name: Id
          in: path
          required: true
          description: 'The distribution''s ID. If the ID is empty, an empty distribution configuration is returned.'
          schema:
            type: string
  '/2020-05-31/field-level-encryption/{Id}':
    delete:
      operationId: DeleteFieldLevelEncryptionConfig2020_05_31
      description: Remove a field-level encryption configuration.
      responses:
        '204':
          description: Success
        '480':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        '481':
          description: InvalidIfMatchVersion
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidIfMatchVersion'
        '482':
          description: NoSuchFieldLevelEncryptionConfig
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchFieldLevelEncryptionConfig'
        '483':
          description: PreconditionFailed
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PreconditionFailed'
        '484':
          description: FieldLevelEncryptionConfigInUse
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/FieldLevelEncryptionConfigInUse'
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the configuration you want to delete from CloudFront.
          schema:
            type: string
        - name: If-Match
          in: header
          required: false
          description: 'The value of the <code>ETag</code> header that you received when retrieving the configuration identity to delete. For example: <code>E2QWRUHAPOMQZL</code>.'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetFieldLevelEncryption2020_05_31
      description: Get the field-level encryption configuration information.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetFieldLevelEncryptionResult'
        '480':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        '481':
          description: NoSuchFieldLevelEncryptionConfig
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchFieldLevelEncryptionConfig'
      parameters:
        - name: Id
          in: path
          required: true
          description: Request the ID for the field-level encryption configuration information.
          schema:
            type: string
  '/2020-05-31/field-level-encryption-profile/{Id}':
    delete:
      operationId: DeleteFieldLevelEncryptionProfile2020_05_31
      description: Remove a field-level encryption profile.
      responses:
        '204':
          description: Success
        '480':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        '481':
          description: InvalidIfMatchVersion
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidIfMatchVersion'
        '482':
          description: NoSuchFieldLevelEncryptionProfile
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchFieldLevelEncryptionProfile'
        '483':
          description: PreconditionFailed
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PreconditionFailed'
        '484':
          description: FieldLevelEncryptionProfileInUse
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/FieldLevelEncryptionProfileInUse'
      parameters:
        - name: Id
          in: path
          required: true
          description: Request the ID of the profile you want to delete from CloudFront.
          schema:
            type: string
        - name: If-Match
          in: header
          required: false
          description: 'The value of the <code>ETag</code> header that you received when retrieving the profile to delete. For example: <code>E2QWRUHAPOMQZL</code>.'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetFieldLevelEncryptionProfile2020_05_31
      description: Get the field-level encryption profile information.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetFieldLevelEncryptionProfileResult'
        '480':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        '481':
          description: NoSuchFieldLevelEncryptionProfile
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchFieldLevelEncryptionProfile'
      parameters:
        - name: Id
          in: path
          required: true
          description: Get the ID for the field-level encryption profile information.
          schema:
            type: string
  '/2020-05-31/function/{Name}#If-Match':
    delete:
      operationId: DeleteFunction2020_05_31
      description: '<p>Deletes a CloudFront function.</p> <p>You cannot delete a function if it’s associated with a cache behavior. First, update your distributions to remove the function association from all cache behaviors, then delete the function.</p> <p>To delete a function, you must provide the function’s name and version (<code>ETag</code> value). To get these values, you can use <code>ListFunctions</code> and <code>DescribeFunction</code>.</p>'
      responses:
        '204':
          description: Success
        '480':
          description: InvalidIfMatchVersion
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidIfMatchVersion'
        '481':
          description: NoSuchFunctionExists
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchFunctionExists'
        '482':
          description: FunctionInUse
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/FunctionInUse'
        '483':
          description: PreconditionFailed
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PreconditionFailed'
        '484':
          description: UnsupportedOperation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnsupportedOperation'
      parameters:
        - name: Name
          in: path
          required: true
          description: The name of the function that you are deleting.
          schema:
            type: string
        - name: If-Match
          in: header
          required: true
          description: 'The current version (<code>ETag</code> value) of the function that you are deleting, which you can get using <code>DescribeFunction</code>.'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdateFunction2020_05_31
      description: '<p>Updates a CloudFront function.</p> <p>You can update a function’s code or the comment that describes the function. You cannot update a function’s name.</p> <p>To update a function, you provide the function’s name and version (<code>ETag</code> value) along with the updated function code. To get the name and version, you can use <code>ListFunctions</code> and <code>DescribeFunction</code>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateFunctionResult'
        '480':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
        '481':
          description: InvalidIfMatchVersion
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidIfMatchVersion'
        '482':
          description: NoSuchFunctionExists
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchFunctionExists'
        '483':
          description: PreconditionFailed
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PreconditionFailed'
        '484':
          description: FunctionSizeLimitExceeded
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/FunctionSizeLimitExceeded'
        '485':
          description: UnsupportedOperation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnsupportedOperation'
      parameters:
        - name: Name
          in: path
          required: true
          description: The name of the function that you are updating.
          schema:
            type: string
        - name: If-Match
          in: header
          required: true
          description: 'The current version (<code>ETag</code> value) of the function that you are updating, which you can get using <code>DescribeFunction</code>.'
          schema:
            type: string
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - FunctionConfig
                - FunctionCode
              properties:
                FunctionConfig:
                  description: Contains configuration information about a CloudFront function.
                  type: object
                  properties:
                    Comment:
                      $ref: '#/components/schemas/string'
                      description: A comment to describe the function.
                    Runtime:
                      $ref: '#/components/schemas/FunctionRuntime'
                      description: The function’s runtime environment. The only valid value is <code>cloudfront-js-1.0</code>.
                FunctionCode:
                  description: 'The function code. For more information about writing a CloudFront function, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/writing-function-code.html">Writing function code for CloudFront Functions</a> in the <i>Amazon CloudFront Developer Guide</i>.'
                  type: string
                  minLength: 1
                  maxLength: 40960
                  format: password
  '/2020-05-31/key-group/{Id}':
    delete:
      operationId: DeleteKeyGroup2020_05_31
      description: '<p>Deletes a key group.</p> <p>You cannot delete a key group that is referenced in a cache behavior. First update your distributions to remove the key group from all cache behaviors, then delete the key group.</p> <p>To delete a key group, you must provide the key group’s identifier and version. To get these values, use <code>ListKeyGroups</code> followed by <code>GetKeyGroup</code> or <code>GetKeyGroupConfig</code>.</p>'
      responses:
        '204':
          description: Success
        '480':
          description: InvalidIfMatchVersion
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidIfMatchVersion'
        '481':
          description: NoSuchResource
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchResource'
        '482':
          description: PreconditionFailed
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PreconditionFailed'
        '483':
          description: ResourceInUse
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
      parameters:
        - name: Id
          in: path
          required: true
          description: 'The identifier of the key group that you are deleting. To get the identifier, use <code>ListKeyGroups</code>.'
          schema:
            type: string
        - name: If-Match
          in: header
          required: false
          description: 'The version of the key group that you are deleting. The version is the key group’s <code>ETag</code> value. To get the <code>ETag</code>, use <code>GetKeyGroup</code> or <code>GetKeyGroupConfig</code>.'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetKeyGroup2020_05_31
      description: '<p>Gets a key group, including the date and time when the key group was last modified.</p> <p>To get a key group, you must provide the key group’s identifier. If the key group is referenced in a distribution’s cache behavior, you can get the key group’s identifier using <code>ListDistributions</code> or <code>GetDistribution</code>. If the key group is not referenced in a cache behavior, you can get the identifier using <code>ListKeyGroups</code>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetKeyGroupResult'
        '480':
          description: NoSuchResource
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchResource'
      parameters:
        - name: Id
          in: path
          required: true
          description: 'The identifier of the key group that you are getting. To get the identifier, use <code>ListKeyGroups</code>.'
          schema:
            type: string
    put:
      operationId: UpdateKeyGroup2020_05_31
      description: '<p>Updates a key group.</p> <p>When you update a key group, all the fields are updated with the values provided in the request. You cannot update some fields independent of others. To update a key group:</p> <ol> <li> <p>Get the current key group with <code>GetKeyGroup</code> or <code>GetKeyGroupConfig</code>.</p> </li> <li> <p>Locally modify the fields in the key group that you want to update. For example, add or remove public key IDs.</p> </li> <li> <p>Call <code>UpdateKeyGroup</code> with the entire key group object, including the fields that you modified and those that you didn’t.</p> </li> </ol>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateKeyGroupResult'
        '480':
          description: InvalidIfMatchVersion
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidIfMatchVersion'
        '481':
          description: NoSuchResource
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchResource'
        '482':
          description: PreconditionFailed
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PreconditionFailed'
        '483':
          description: KeyGroupAlreadyExists
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyGroupAlreadyExists'
        '484':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
        '485':
          description: TooManyPublicKeysInKeyGroup
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyPublicKeysInKeyGroup'
      parameters:
        - name: Id
          in: path
          required: true
          description: The identifier of the key group that you are updating.
          schema:
            type: string
        - name: If-Match
          in: header
          required: false
          description: The version of the key group that you are updating. The version is the key group’s <code>ETag</code> value.
          schema:
            type: string
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - KeyGroupConfig
              properties:
                KeyGroupConfig:
                  description: '<p>A key group configuration.</p> <p>A key group contains a list of public keys that you can use with <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">CloudFront signed URLs and signed cookies</a>.</p>'
                  type: object
                  properties:
                    Name:
                      $ref: '#/components/schemas/string'
                      description: A name to identify the key group.
                    Items:
                      $ref: '#/components/schemas/PublicKeyIdList'
                      description: A list of the identifiers of the public keys in the key group.
                    Comment:
                      $ref: '#/components/schemas/string'
                      description: A comment to describe the key group. The comment cannot be longer than 128 characters.
  '/2020-05-31/origin-request-policy/{Id}':
    delete:
      operationId: DeleteOriginRequestPolicy2020_05_31
      description: '<p>Deletes an origin request policy.</p> <p>You cannot delete an origin request policy if it’s attached to any cache behaviors. First update your distributions to remove the origin request policy from all cache behaviors, then delete the origin request policy.</p> <p>To delete an origin request policy, you must provide the policy’s identifier and version. To get the identifier, you can use <code>ListOriginRequestPolicies</code> or <code>GetOriginRequestPolicy</code>.</p>'
      responses:
        '204':
          description: Success
        '480':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        '481':
          description: InvalidIfMatchVersion
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidIfMatchVersion'
        '482':
          description: NoSuchOriginRequestPolicy
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchOriginRequestPolicy'
        '483':
          description: PreconditionFailed
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PreconditionFailed'
        '484':
          description: IllegalDelete
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/IllegalDelete'
        '485':
          description: OriginRequestPolicyInUse
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OriginRequestPolicyInUse'
      parameters:
        - name: Id
          in: path
          required: true
          description: 'The unique identifier for the origin request policy that you are deleting. To get the identifier, you can use <code>ListOriginRequestPolicies</code>.'
          schema:
            type: string
        - name: If-Match
          in: header
          required: false
          description: 'The version of the origin request policy that you are deleting. The version is the origin request policy’s <code>ETag</code> value, which you can get using <code>ListOriginRequestPolicies</code>, <code>GetOriginRequestPolicy</code>, or <code>GetOriginRequestPolicyConfig</code>.'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetOriginRequestPolicy2020_05_31
      description: '<p>Gets an origin request policy, including the following metadata:</p> <ul> <li> <p>The policy’s identifier.</p> </li> <li> <p>The date and time when the policy was last modified.</p> </li> </ul> <p>To get an origin request policy, you must provide the policy’s identifier. If the origin request policy is attached to a distribution’s cache behavior, you can get the policy’s identifier using <code>ListDistributions</code> or <code>GetDistribution</code>. If the origin request policy is not attached to a cache behavior, you can get the identifier using <code>ListOriginRequestPolicies</code>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetOriginRequestPolicyResult'
        '480':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        '481':
          description: NoSuchOriginRequestPolicy
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchOriginRequestPolicy'
      parameters:
        - name: Id
          in: path
          required: true
          description: 'The unique identifier for the origin request policy. If the origin request policy is attached to a distribution’s cache behavior, you can get the policy’s identifier using <code>ListDistributions</code> or <code>GetDistribution</code>. If the origin request policy is not attached to a cache behavior, you can get the identifier using <code>ListOriginRequestPolicies</code>.'
          schema:
            type: string
    put:
      operationId: UpdateOriginRequestPolicy2020_05_31
      description: '<p>Updates an origin request policy configuration.</p> <p>When you update an origin request policy configuration, all the fields are updated with the values provided in the request. You cannot update some fields independent of others. To update an origin request policy configuration:</p> <ol> <li> <p>Use <code>GetOriginRequestPolicyConfig</code> to get the current configuration.</p> </li> <li> <p>Locally modify the fields in the origin request policy configuration that you want to update.</p> </li> <li> <p>Call <code>UpdateOriginRequestPolicy</code> by providing the entire origin request policy configuration, including the fields that you modified and those that you didn’t.</p> </li> </ol>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateOriginRequestPolicyResult'
        '480':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        '481':
          description: IllegalUpdate
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/IllegalUpdate'
        '482':
          description: InconsistentQuantities
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InconsistentQuantities'
        '483':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
        '484':
          description: InvalidIfMatchVersion
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidIfMatchVersion'
        '485':
          description: NoSuchOriginRequestPolicy
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchOriginRequestPolicy'
        '486':
          description: PreconditionFailed
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PreconditionFailed'
        '487':
          description: OriginRequestPolicyAlreadyExists
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OriginRequestPolicyAlreadyExists'
        '488':
          description: TooManyHeadersInOriginRequestPolicy
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyHeadersInOriginRequestPolicy'
        '489':
          description: TooManyCookiesInOriginRequestPolicy
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyCookiesInOriginRequestPolicy'
        '490':
          description: TooManyQueryStringsInOriginRequestPolicy
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyQueryStringsInOriginRequestPolicy'
      parameters:
        - name: Id
          in: path
          required: true
          description: The unique identifier for the origin request policy that you are updating. The identifier is returned in a cache behavior’s <code>OriginRequestPolicyId</code> field in the response to <code>GetDistributionConfig</code>.
          schema:
            type: string
        - name: If-Match
          in: header
          required: false
          description: The version of the origin request policy that you are updating. The version is returned in the origin request policy’s <code>ETag</code> field in the response to <code>GetOriginRequestPolicyConfig</code>.
          schema:
            type: string
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - OriginRequestPolicyConfig
              properties:
                OriginRequestPolicyConfig:
                  description: '<p>An origin request policy configuration.</p> <p>This configuration determines the values that CloudFront includes in requests that it sends to the origin. Each request that CloudFront sends to the origin includes the following:</p> <ul> <li> <p>The request body and the URL path (without the domain name) from the viewer request.</p> </li> <li> <p>The headers that CloudFront automatically includes in every origin request, including <code>Host</code>, <code>User-Agent</code>, and <code>X-Amz-Cf-Id</code>.</p> </li> <li> <p>All HTTP headers, cookies, and URL query strings that are specified in the cache policy or the origin request policy. These can include items from the viewer request and, in the case of headers, additional ones that are added by CloudFront.</p> </li> </ul> <p>CloudFront sends a request when it can’t find an object in its cache that matches the request. If you want to send values to the origin and also include them in the cache key, use <code>CachePolicy</code>.</p>'
                  type: object
                  properties:
                    Comment:
                      $ref: '#/components/schemas/string'
                      description: A comment to describe the origin request policy. The comment cannot be longer than 128 characters.
                    Name:
                      $ref: '#/components/schemas/string'
                      description: A unique name to identify the origin request policy.
                    HeadersConfig:
                      $ref: '#/components/schemas/OriginRequestPolicyHeadersConfig'
                      description: The HTTP headers to include in origin requests. These can include headers from viewer requests and additional headers added by CloudFront.
                    CookiesConfig:
                      $ref: '#/components/schemas/OriginRequestPolicyCookiesConfig'
                      description: The cookies from viewer requests to include in origin requests.
                    QueryStringsConfig:
                      $ref: '#/components/schemas/OriginRequestPolicyQueryStringsConfig'
                      description: The URL query strings from viewer requests to include in origin requests.
  '/2020-05-31/public-key/{Id}':
    delete:
      operationId: DeletePublicKey2020_05_31
      description: Remove a public key you previously added to CloudFront.
      responses:
        '204':
          description: Success
        '480':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        '481':
          description: PublicKeyInUse
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PublicKeyInUse'
        '482':
          description: InvalidIfMatchVersion
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidIfMatchVersion'
        '483':
          description: NoSuchPublicKey
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchPublicKey'
        '484':
          description: PreconditionFailed
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PreconditionFailed'
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the public key you want to remove from CloudFront.
          schema:
            type: string
        - name: If-Match
          in: header
          required: false
          description: 'The value of the <code>ETag</code> header that you received when retrieving the public key identity to delete. For example: <code>E2QWRUHAPOMQZL</code>.'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetPublicKey2020_05_31
      description: Gets a public key.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetPublicKeyResult'
        '480':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        '481':
          description: NoSuchPublicKey
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchPublicKey'
      parameters:
        - name: Id
          in: path
          required: true
          description: The identifier of the public key you are getting.
          schema:
            type: string
  /2020-05-31/delete-realtime-log-config/:
    post:
      operationId: DeleteRealtimeLogConfig2020_05_31
      description: '<p>Deletes a real-time log configuration.</p> <p>You cannot delete a real-time log configuration if it’s attached to a cache behavior. First update your distributions to remove the real-time log configuration from all cache behaviors, then delete the real-time log configuration.</p> <p>To delete a real-time log configuration, you can provide the configuration’s name or its Amazon Resource Name (ARN). You must provide at least one. If you provide both, CloudFront uses the name to identify the real-time log configuration to delete.</p>'
      responses:
        '204':
          description: Success
        '480':
          description: NoSuchRealtimeLogConfig
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchRealtimeLogConfig'
        '481':
          description: RealtimeLogConfigInUse
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RealtimeLogConfigInUse'
        '482':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
        '483':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
      parameters: []
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              properties:
                Name:
                  description: The name of the real-time log configuration to delete.
                  type: string
                ARN:
                  description: The Amazon Resource Name (ARN) of the real-time log configuration to delete.
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2020-05-31/streaming-distribution/{Id}':
    delete:
      operationId: DeleteStreamingDistribution2020_05_31
      description: '<p>Delete a streaming distribution. To delete an RTMP distribution using the CloudFront API, perform the following steps.</p> <p> <b>To delete an RTMP distribution using the CloudFront API</b>:</p> <ol> <li> <p>Disable the RTMP distribution.</p> </li> <li> <p>Submit a <code>GET Streaming Distribution Config</code> request to get the current configuration and the <code>Etag</code> header for the distribution. </p> </li> <li> <p>Update the XML document that was returned in the response to your <code>GET Streaming Distribution Config</code> request to change the value of <code>Enabled</code> to <code>false</code>.</p> </li> <li> <p>Submit a <code>PUT Streaming Distribution Config</code> request to update the configuration for your distribution. In the request body, include the XML document that you updated in Step 3. Then set the value of the HTTP <code>If-Match</code> header to the value of the <code>ETag</code> header that CloudFront returned when you submitted the <code>GET Streaming Distribution Config</code> request in Step 2.</p> </li> <li> <p>Review the response to the <code>PUT Streaming Distribution Config</code> request to confirm that the distribution was successfully disabled.</p> </li> <li> <p>Submit a <code>GET Streaming Distribution Config</code> request to confirm that your changes have propagated. When propagation is complete, the value of <code>Status</code> is <code>Deployed</code>.</p> </li> <li> <p>Submit a <code>DELETE Streaming Distribution</code> request. Set the value of the HTTP <code>If-Match</code> header to the value of the <code>ETag</code> header that CloudFront returned when you submitted the <code>GET Streaming Distribution Config</code> request in Step 2.</p> </li> <li> <p>Review the response to your <code>DELETE Streaming Distribution</code> request to confirm that the distribution was successfully deleted.</p> </li> </ol> <p>For information about deleting a distribution using the CloudFront console, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/HowToDeleteDistribution.html">Deleting a Distribution</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
      responses:
        '204':
          description: Success
        '480':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        '481':
          description: StreamingDistributionNotDisabled
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StreamingDistributionNotDisabled'
        '482':
          description: InvalidIfMatchVersion
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidIfMatchVersion'
        '483':
          description: NoSuchStreamingDistribution
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchStreamingDistribution'
        '484':
          description: PreconditionFailed
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PreconditionFailed'
      parameters:
        - name: Id
          in: path
          required: true
          description: 'The distribution ID. '
          schema:
            type: string
        - name: If-Match
          in: header
          required: false
          description: 'The value of the <code>ETag</code> header that you received when you disabled the streaming distribution. For example: <code>E2QWRUHAPOMQZL</code>.'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetStreamingDistribution2020_05_31
      description: 'Gets information about a specified RTMP distribution, including the distribution configuration.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetStreamingDistributionResult'
        '480':
          description: NoSuchStreamingDistribution
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchStreamingDistribution'
        '481':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
      parameters:
        - name: Id
          in: path
          required: true
          description: The streaming distribution's ID.
          schema:
            type: string
  '/2020-05-31/function/{Name}/describe':
    get:
      operationId: DescribeFunction2020_05_31
      description: '<p>Gets configuration information and metadata about a CloudFront function, but not the function’s code. To get a function’s code, use <code>GetFunction</code>.</p> <p>To get configuration information and metadata about a function, you must provide the function’s name and stage. To get these values, you can use <code>ListFunctions</code>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeFunctionResult'
        '480':
          description: NoSuchFunctionExists
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchFunctionExists'
        '481':
          description: UnsupportedOperation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnsupportedOperation'
      parameters:
        - name: Name
          in: path
          required: true
          description: The name of the function that you are getting information about.
          schema:
            type: string
        - name: Stage
          in: query
          required: false
          description: 'The function’s stage, either <code>DEVELOPMENT</code> or <code>LIVE</code>.'
          schema:
            type: string
            enum:
              - DEVELOPMENT
              - LIVE
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2020-05-31/cache-policy/{Id}/config':
    get:
      operationId: GetCachePolicyConfig2020_05_31
      description: '<p>Gets a cache policy configuration.</p> <p>To get a cache policy configuration, you must provide the policy’s identifier. If the cache policy is attached to a distribution’s cache behavior, you can get the policy’s identifier using <code>ListDistributions</code> or <code>GetDistribution</code>. If the cache policy is not attached to a cache behavior, you can get the identifier using <code>ListCachePolicies</code>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetCachePolicyConfigResult'
        '480':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        '481':
          description: NoSuchCachePolicy
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchCachePolicy'
      parameters:
        - name: Id
          in: path
          required: true
          description: 'The unique identifier for the cache policy. If the cache policy is attached to a distribution’s cache behavior, you can get the policy’s identifier using <code>ListDistributions</code> or <code>GetDistribution</code>. If the cache policy is not attached to a cache behavior, you can get the identifier using <code>ListCachePolicies</code>.'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2020-05-31/origin-access-identity/cloudfront/{Id}/config':
    get:
      operationId: GetCloudFrontOriginAccessIdentityConfig2020_05_31
      description: 'Get the configuration information about an origin access identity. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetCloudFrontOriginAccessIdentityConfigResult'
        '480':
          description: NoSuchCloudFrontOriginAccessIdentity
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchCloudFrontOriginAccessIdentity'
        '481':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
      parameters:
        - name: Id
          in: path
          required: true
          description: 'The identity''s ID. '
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdateCloudFrontOriginAccessIdentity2020_05_31
      description: 'Update an origin access identity. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateCloudFrontOriginAccessIdentityResult'
        '480':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        '481':
          description: IllegalUpdate
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/IllegalUpdate'
        '482':
          description: InvalidIfMatchVersion
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidIfMatchVersion'
        '483':
          description: MissingBody
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MissingBody'
        '484':
          description: NoSuchCloudFrontOriginAccessIdentity
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchCloudFrontOriginAccessIdentity'
        '485':
          description: PreconditionFailed
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PreconditionFailed'
        '486':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
        '487':
          description: InconsistentQuantities
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InconsistentQuantities'
      parameters:
        - name: Id
          in: path
          required: true
          description: The identity's id.
          schema:
            type: string
        - name: If-Match
          in: header
          required: false
          description: 'The value of the <code>ETag</code> header that you received when retrieving the identity''s configuration. For example: <code>E2QWRUHAPOMQZL</code>.'
          schema:
            type: string
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - CloudFrontOriginAccessIdentityConfig
              properties:
                CloudFrontOriginAccessIdentityConfig:
                  description: 'Origin access identity configuration. Send a <code>GET</code> request to the <code>/<i>CloudFront API version</i>/CloudFront/identity ID/config</code> resource. '
                  type: object
                  properties:
                    CallerReference:
                      $ref: '#/components/schemas/string'
                      description: '<p>A unique value (for example, a date-time stamp) that ensures that the request can''t be replayed.</p> <p>If the value of <code>CallerReference</code> is new (regardless of the content of the <code>CloudFrontOriginAccessIdentityConfig</code> object), a new origin access identity is created.</p> <p>If the <code>CallerReference</code> is a value already sent in a previous identity request, and the content of the <code>CloudFrontOriginAccessIdentityConfig</code> is identical to the original request (ignoring white space), the response includes the same information returned to the original request. </p> <p>If the <code>CallerReference</code> is a value you already sent in a previous request to create an identity, but the content of the <code>CloudFrontOriginAccessIdentityConfig</code> is different from the original request, CloudFront returns a <code>CloudFrontOriginAccessIdentityAlreadyExists</code> error. </p>'
                    Comment:
                      $ref: '#/components/schemas/string'
                      description: A comment to describe the origin access identity. The comment cannot be longer than 128 characters.
  '/2020-05-31/distribution/{Id}/config':
    get:
      operationId: GetDistributionConfig2020_05_31
      description: 'Get the configuration information about a distribution. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetDistributionConfigResult'
        '480':
          description: NoSuchDistribution
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchDistribution'
        '481':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
      parameters:
        - name: Id
          in: path
          required: true
          description: 'The distribution''s ID. If the ID is empty, an empty distribution configuration is returned.'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdateDistribution2020_05_31
      description: '<p>Updates the configuration for a web distribution. </p> <important> <p>When you update a distribution, there are more required fields than when you create a distribution. When you update your distribution by using this API action, follow the steps here to get the current configuration and then make your updates, to make sure that you include all of the required fields. To view a summary, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-overview-required-fields.html">Required Fields for Create Distribution and Update Distribution</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> </important> <p>The update process includes getting the current distribution configuration, updating the XML document that is returned to make your changes, and then submitting an <code>UpdateDistribution</code> request to make the updates.</p> <p>For information about updating a distribution using the CloudFront console instead, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-creating-console.html">Creating a Distribution</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <p> <b>To update a web distribution using the CloudFront API</b> </p> <ol> <li> <p>Submit a <a href="https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_GetDistributionConfig.html">GetDistributionConfig</a> request to get the current configuration and an <code>Etag</code> header for the distribution.</p> <note> <p>If you update the distribution again, you must get a new <code>Etag</code> header.</p> </note> </li> <li> <p>Update the XML document that was returned in the response to your <code>GetDistributionConfig</code> request to include your changes. </p> <important> <p>When you edit the XML file, be aware of the following:</p> <ul> <li> <p>You must strip out the ETag parameter that is returned.</p> </li> <li> <p>Additional fields are required when you update a distribution. There may be fields included in the XML file for features that you haven''t configured for your distribution. This is expected and required to successfully update the distribution.</p> </li> <li> <p>You can''t change the value of <code>CallerReference</code>. If you try to change this value, CloudFront returns an <code>IllegalUpdate</code> error. </p> </li> <li> <p>The new configuration replaces the existing configuration; the values that you specify in an <code>UpdateDistribution</code> request are not merged into your existing configuration. When you add, delete, or replace values in an element that allows multiple values (for example, <code>CNAME</code>), you must specify all of the values that you want to appear in the updated distribution. In addition, you must update the corresponding <code>Quantity</code> element.</p> </li> </ul> </important> </li> <li> <p>Submit an <code>UpdateDistribution</code> request to update the configuration for your distribution:</p> <ul> <li> <p>In the request body, include the XML document that you updated in Step 2. The request body must include an XML document with a <code>DistributionConfig</code> element.</p> </li> <li> <p>Set the value of the HTTP <code>If-Match</code> header to the value of the <code>ETag</code> header that CloudFront returned when you submitted the <code>GetDistributionConfig</code> request in Step 1.</p> </li> </ul> </li> <li> <p>Review the response to the <code>UpdateDistribution</code> request to confirm that the configuration was successfully updated.</p> </li> <li> <p>Optional: Submit a <a href="https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_GetDistribution.html">GetDistribution</a> request to confirm that your changes have propagated. When propagation is complete, the value of <code>Status</code> is <code>Deployed</code>.</p> </li> </ol>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateDistributionResult'
        '480':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        '481':
          description: CNAMEAlreadyExists
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CNAMEAlreadyExists'
        '482':
          description: IllegalUpdate
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/IllegalUpdate'
        '483':
          description: InvalidIfMatchVersion
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidIfMatchVersion'
        '484':
          description: MissingBody
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MissingBody'
        '485':
          description: NoSuchDistribution
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchDistribution'
        '486':
          description: PreconditionFailed
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PreconditionFailed'
        '487':
          description: TooManyDistributionCNAMEs
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyDistributionCNAMEs'
        '488':
          description: InvalidDefaultRootObject
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDefaultRootObject'
        '489':
          description: InvalidRelativePath
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidRelativePath'
        '490':
          description: InvalidErrorCode
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidErrorCode'
        '491':
          description: InvalidResponseCode
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidResponseCode'
        '492':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
        '493':
          description: InvalidOriginAccessIdentity
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidOriginAccessIdentity'
        '494':
          description: TooManyTrustedSigners
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyTrustedSigners'
        '495':
          description: TrustedSignerDoesNotExist
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TrustedSignerDoesNotExist'
        '496':
          description: InvalidViewerCertificate
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidViewerCertificate'
        '497':
          description: InvalidMinimumProtocolVersion
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidMinimumProtocolVersion'
        '498':
          description: InvalidRequiredProtocol
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidRequiredProtocol'
        '499':
          description: NoSuchOrigin
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchOrigin'
        '500':
          description: TooManyOrigins
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyOrigins'
        '501':
          description: TooManyOriginGroupsPerDistribution
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyOriginGroupsPerDistribution'
        '502':
          description: TooManyCacheBehaviors
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyCacheBehaviors'
        '503':
          description: TooManyCookieNamesInWhiteList
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyCookieNamesInWhiteList'
        '504':
          description: InvalidForwardCookies
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidForwardCookies'
        '505':
          description: TooManyHeadersInForwardedValues
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyHeadersInForwardedValues'
        '506':
          description: InvalidHeadersForS3Origin
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidHeadersForS3Origin'
        '507':
          description: InconsistentQuantities
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InconsistentQuantities'
        '508':
          description: TooManyCertificates
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyCertificates'
        '509':
          description: InvalidLocationCode
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidLocationCode'
        '510':
          description: InvalidGeoRestrictionParameter
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGeoRestrictionParameter'
        '511':
          description: InvalidTTLOrder
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTTLOrder'
        '512':
          description: InvalidWebACLId
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidWebACLId'
        '513':
          description: TooManyOriginCustomHeaders
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyOriginCustomHeaders'
        '514':
          description: TooManyQueryStringParameters
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyQueryStringParameters'
        '515':
          description: InvalidQueryStringParameters
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidQueryStringParameters'
        '516':
          description: TooManyDistributionsWithLambdaAssociations
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyDistributionsWithLambdaAssociations'
        '517':
          description: TooManyDistributionsWithSingleFunctionARN
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyDistributionsWithSingleFunctionARN'
        '518':
          description: TooManyLambdaFunctionAssociations
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyLambdaFunctionAssociations'
        '519':
          description: InvalidLambdaFunctionAssociation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidLambdaFunctionAssociation'
        '520':
          description: TooManyDistributionsWithFunctionAssociations
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyDistributionsWithFunctionAssociations'
        '521':
          description: TooManyFunctionAssociations
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyFunctionAssociations'
        '522':
          description: InvalidFunctionAssociation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidFunctionAssociation'
        '523':
          description: InvalidOriginReadTimeout
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidOriginReadTimeout'
        '524':
          description: InvalidOriginKeepaliveTimeout
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidOriginKeepaliveTimeout'
        '525':
          description: NoSuchFieldLevelEncryptionConfig
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchFieldLevelEncryptionConfig'
        '526':
          description: IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior'
        '527':
          description: TooManyDistributionsAssociatedToFieldLevelEncryptionConfig
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyDistributionsAssociatedToFieldLevelEncryptionConfig'
        '528':
          description: NoSuchCachePolicy
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchCachePolicy'
        '529':
          description: TooManyDistributionsAssociatedToCachePolicy
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyDistributionsAssociatedToCachePolicy'
        '530':
          description: NoSuchOriginRequestPolicy
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchOriginRequestPolicy'
        '531':
          description: TooManyDistributionsAssociatedToOriginRequestPolicy
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyDistributionsAssociatedToOriginRequestPolicy'
        '532':
          description: TooManyDistributionsAssociatedToKeyGroup
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyDistributionsAssociatedToKeyGroup'
        '533':
          description: TooManyKeyGroupsAssociatedToDistribution
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyKeyGroupsAssociatedToDistribution'
        '534':
          description: TrustedKeyGroupDoesNotExist
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TrustedKeyGroupDoesNotExist'
        '535':
          description: NoSuchRealtimeLogConfig
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchRealtimeLogConfig'
        '536':
          description: RealtimeLogConfigOwnerMismatch
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RealtimeLogConfigOwnerMismatch'
      parameters:
        - name: Id
          in: path
          required: true
          description: The distribution's id.
          schema:
            type: string
        - name: If-Match
          in: header
          required: false
          description: 'The value of the <code>ETag</code> header that you received when retrieving the distribution''s configuration. For example: <code>E2QWRUHAPOMQZL</code>.'
          schema:
            type: string
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - DistributionConfig
              properties:
                DistributionConfig:
                  description: A distribution configuration.
                  type: object
                  properties:
                    CallerReference:
                      $ref: '#/components/schemas/string'
                      description: '<p>A unique value (for example, a date-time stamp) that ensures that the request can''t be replayed.</p> <p>If the value of <code>CallerReference</code> is new (regardless of the content of the <code>DistributionConfig</code> object), CloudFront creates a new distribution.</p> <p>If <code>CallerReference</code> is a value that you already sent in a previous request to create a distribution, CloudFront returns a <code>DistributionAlreadyExists</code> error.</p>'
                    Aliases:
                      $ref: '#/components/schemas/Aliases'
                      description: 'A complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution.'
                    DefaultRootObject:
                      $ref: '#/components/schemas/string'
                      description: '<p>The object that you want CloudFront to request from your origin (for example, <code>index.html</code>) when a viewer requests the root URL for your distribution (<code>http://www.example.com</code>) instead of an object in your distribution (<code>http://www.example.com/product-description.html</code>). Specifying a default root object avoids exposing the contents of your distribution.</p> <p>Specify only the object name, for example, <code>index.html</code>. Don''t add a <code>/</code> before the object name.</p> <p>If you don''t want to specify a default root object when you create a distribution, include an empty <code>DefaultRootObject</code> element.</p> <p>To delete the default root object from an existing distribution, update the distribution configuration and include an empty <code>DefaultRootObject</code> element.</p> <p>To replace the default root object, update the distribution configuration and specify the new object.</p> <p>For more information about the default root object, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/DefaultRootObject.html">Creating a Default Root Object</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
                    Origins:
                      $ref: '#/components/schemas/Origins'
                      description: 'A complex type that contains information about origins for this distribution. '
                    OriginGroups:
                      $ref: '#/components/schemas/OriginGroups'
                      description: ' A complex type that contains information about origin groups for this distribution.'
                    DefaultCacheBehavior:
                      $ref: '#/components/schemas/DefaultCacheBehavior'
                      description: A complex type that describes the default cache behavior if you don't specify a <code>CacheBehavior</code> element or if files don't match any of the values of <code>PathPattern</code> in <code>CacheBehavior</code> elements. You must create exactly one default cache behavior.
                    CacheBehaviors:
                      $ref: '#/components/schemas/CacheBehaviors'
                      description: 'A complex type that contains zero or more <code>CacheBehavior</code> elements. '
                    CustomErrorResponses:
                      $ref: '#/components/schemas/CustomErrorResponses'
                      description: '<p>A complex type that controls the following:</p> <ul> <li> <p>Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom error messages before returning the response to the viewer.</p> </li> <li> <p>How long CloudFront caches HTTP status codes in the 4xx and 5xx range.</p> </li> </ul> <p>For more information about custom error pages, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html">Customizing Error Responses</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
                    Comment:
                      $ref: '#/components/schemas/CommentType'
                      description: An optional comment to describe the distribution. The comment cannot be longer than 128 characters.
                    Logging:
                      $ref: '#/components/schemas/LoggingConfig'
                      description: '<p>A complex type that controls whether access logs are written for the distribution.</p> <p>For more information about logging, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/AccessLogs.html">Access Logs</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
                    PriceClass:
                      $ref: '#/components/schemas/PriceClass'
                      description: '<p>The price class that corresponds with the maximum price that you want to pay for CloudFront service. If you specify <code>PriceClass_All</code>, CloudFront responds to requests for your objects from all CloudFront edge locations.</p> <p>If you specify a price class other than <code>PriceClass_All</code>, CloudFront serves your objects from the CloudFront edge location that has the lowest latency among the edge locations in your price class. Viewers who are in or near regions that are excluded from your specified price class may encounter slower performance.</p> <p>For more information about price classes, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PriceClass.html">Choosing the Price Class for a CloudFront Distribution</a> in the <i>Amazon CloudFront Developer Guide</i>. For information about CloudFront pricing, including how price classes (such as Price Class 100) map to CloudFront regions, see <a href="http://aws.amazon.com/cloudfront/pricing/">Amazon CloudFront Pricing</a>.</p>'
                    Enabled:
                      $ref: '#/components/schemas/boolean'
                      description: 'From this field, you can enable or disable the selected distribution.'
                    ViewerCertificate:
                      $ref: '#/components/schemas/ViewerCertificate'
                      description: A complex type that determines the distribution’s SSL/TLS configuration for communicating with viewers.
                    Restrictions:
                      $ref: '#/components/schemas/Restrictions'
                      description: A complex type that identifies ways in which you want to restrict distribution of your content.
                    WebACLId:
                      $ref: '#/components/schemas/string'
                      description: '<p>A unique identifier that specifies the WAF web ACL, if any, to associate with this distribution. To specify a web ACL created using the latest version of WAF, use the ACL ARN, for example <code>arn:aws:wafv2:us-east-1:123456789012:global/webacl/ExampleWebACL/473e64fd-f30b-4765-81a0-62ad96dd167a</code>. To specify a web ACL created using WAF Classic, use the ACL ID, for example <code>473e64fd-f30b-4765-81a0-62ad96dd167a</code>.</p> <p>WAF is a web application firewall that lets you monitor the HTTP and HTTPS requests that are forwarded to CloudFront, and lets you control access to your content. Based on conditions that you specify, such as the IP addresses that requests originate from or the values of query strings, CloudFront responds to requests either with the requested content or with an HTTP 403 status code (Forbidden). You can also configure CloudFront to return a custom error page when a request is blocked. For more information about WAF, see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/what-is-aws-waf.html">WAF Developer Guide</a>. </p>'
                    HttpVersion:
                      $ref: '#/components/schemas/HttpVersion'
                      description: '<p>(Optional) Specify the maximum HTTP version that you want viewers to use to communicate with CloudFront. The default value for new web distributions is http2. Viewers that don''t support HTTP/2 automatically use an earlier HTTP version.</p> <p>For viewers and CloudFront to use HTTP/2, viewers must support TLS 1.2 or later, and must support Server Name Identification (SNI).</p> <p>In general, configuring CloudFront to communicate with viewers using HTTP/2 reduces latency. You can improve performance by optimizing for HTTP/2. For more information, do an Internet search for "http/2 optimization." </p>'
                    IsIPV6Enabled:
                      $ref: '#/components/schemas/boolean'
                      description: '<p>If you want CloudFront to respond to IPv6 DNS requests with an IPv6 address for your distribution, specify <code>true</code>. If you specify <code>false</code>, CloudFront responds to IPv6 DNS requests with the DNS response code <code>NOERROR</code> and with no IP addresses. This allows viewers to submit a second request, for an IPv4 address for your distribution. </p> <p>In general, you should enable IPv6 if you have users on IPv6 networks who want to access your content. However, if you''re using signed URLs or signed cookies to restrict access to your content, and if you''re using a custom policy that includes the <code>IpAddress</code> parameter to restrict the IP addresses that can access your content, don''t enable IPv6. If you want to restrict access to some content by IP address and not restrict access to other content (or restrict access but not by IP address), you can create two distributions. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-creating-signed-url-custom-policy.html">Creating a Signed URL Using a Custom Policy</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <p>If you''re using an Route 53 Amazon Web Services Integration alias resource record set to route traffic to your CloudFront distribution, you need to create a second alias resource record set when both of the following are true:</p> <ul> <li> <p>You enable IPv6 for the distribution</p> </li> <li> <p>You''re using alternate domain names in the URLs for your objects</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-to-cloudfront-distribution.html">Routing Traffic to an Amazon CloudFront Web Distribution by Using Your Domain Name</a> in the <i>Route 53 Amazon Web Services Integration Developer Guide</i>.</p> <p>If you created a CNAME resource record set, either with Route 53 Amazon Web Services Integration or with another DNS service, you don''t need to make any changes. A CNAME record will route traffic to your distribution regardless of the IP address format of the viewer request.</p>'
  '/2020-05-31/field-level-encryption/{Id}/config':
    get:
      operationId: GetFieldLevelEncryptionConfig2020_05_31
      description: Get the field-level encryption configuration information.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetFieldLevelEncryptionConfigResult'
        '480':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        '481':
          description: NoSuchFieldLevelEncryptionConfig
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchFieldLevelEncryptionConfig'
      parameters:
        - name: Id
          in: path
          required: true
          description: Request the ID for the field-level encryption configuration information.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdateFieldLevelEncryptionConfig2020_05_31
      description: 'Update a field-level encryption configuration. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateFieldLevelEncryptionConfigResult'
        '480':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        '481':
          description: IllegalUpdate
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/IllegalUpdate'
        '482':
          description: InconsistentQuantities
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InconsistentQuantities'
        '483':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
        '484':
          description: InvalidIfMatchVersion
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidIfMatchVersion'
        '485':
          description: NoSuchFieldLevelEncryptionProfile
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchFieldLevelEncryptionProfile'
        '486':
          description: NoSuchFieldLevelEncryptionConfig
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchFieldLevelEncryptionConfig'
        '487':
          description: PreconditionFailed
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PreconditionFailed'
        '488':
          description: TooManyFieldLevelEncryptionQueryArgProfiles
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyFieldLevelEncryptionQueryArgProfiles'
        '489':
          description: TooManyFieldLevelEncryptionContentTypeProfiles
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyFieldLevelEncryptionContentTypeProfiles'
        '490':
          description: QueryArgProfileEmpty
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/QueryArgProfileEmpty'
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the configuration you want to update.
          schema:
            type: string
        - name: If-Match
          in: header
          required: false
          description: 'The value of the <code>ETag</code> header that you received when retrieving the configuration identity to update. For example: <code>E2QWRUHAPOMQZL</code>.'
          schema:
            type: string
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - FieldLevelEncryptionConfig
              properties:
                FieldLevelEncryptionConfig:
                  description: 'A complex data type that includes the profile configurations specified for field-level encryption. '
                  type: object
                  properties:
                    CallerReference:
                      $ref: '#/components/schemas/string'
                      description: A unique number that ensures the request can't be replayed.
                    Comment:
                      $ref: '#/components/schemas/string'
                      description: An optional comment about the configuration. The comment cannot be longer than 128 characters.
                    QueryArgProfileConfig:
                      $ref: '#/components/schemas/QueryArgProfileConfig'
                      description: A complex data type that specifies when to forward content if a profile isn't found and the profile that can be provided as a query argument in a request.
                    ContentTypeProfileConfig:
                      $ref: '#/components/schemas/ContentTypeProfileConfig'
                      description: A complex data type that specifies when to forward content if a content type isn't recognized and profiles to use as by default in a request if a query argument doesn't specify a profile to use.
  '/2020-05-31/field-level-encryption-profile/{Id}/config':
    get:
      operationId: GetFieldLevelEncryptionProfileConfig2020_05_31
      description: Get the field-level encryption profile configuration information.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetFieldLevelEncryptionProfileConfigResult'
        '480':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        '481':
          description: NoSuchFieldLevelEncryptionProfile
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchFieldLevelEncryptionProfile'
      parameters:
        - name: Id
          in: path
          required: true
          description: Get the ID for the field-level encryption profile configuration information.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdateFieldLevelEncryptionProfile2020_05_31
      description: 'Update a field-level encryption profile. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateFieldLevelEncryptionProfileResult'
        '480':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        '481':
          description: FieldLevelEncryptionProfileAlreadyExists
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/FieldLevelEncryptionProfileAlreadyExists'
        '482':
          description: IllegalUpdate
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/IllegalUpdate'
        '483':
          description: InconsistentQuantities
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InconsistentQuantities'
        '484':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
        '485':
          description: InvalidIfMatchVersion
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidIfMatchVersion'
        '486':
          description: NoSuchPublicKey
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchPublicKey'
        '487':
          description: NoSuchFieldLevelEncryptionProfile
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchFieldLevelEncryptionProfile'
        '488':
          description: PreconditionFailed
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PreconditionFailed'
        '489':
          description: FieldLevelEncryptionProfileSizeExceeded
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/FieldLevelEncryptionProfileSizeExceeded'
        '490':
          description: TooManyFieldLevelEncryptionEncryptionEntities
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyFieldLevelEncryptionEncryptionEntities'
        '491':
          description: TooManyFieldLevelEncryptionFieldPatterns
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyFieldLevelEncryptionFieldPatterns'
      parameters:
        - name: Id
          in: path
          required: true
          description: 'The ID of the field-level encryption profile request. '
          schema:
            type: string
        - name: If-Match
          in: header
          required: false
          description: 'The value of the <code>ETag</code> header that you received when retrieving the profile identity to update. For example: <code>E2QWRUHAPOMQZL</code>.'
          schema:
            type: string
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - FieldLevelEncryptionProfileConfig
              properties:
                FieldLevelEncryptionProfileConfig:
                  description: A complex data type of profiles for the field-level encryption.
                  type: object
                  properties:
                    Name:
                      $ref: '#/components/schemas/string'
                      description: Profile name for the field-level encryption profile.
                    CallerReference:
                      $ref: '#/components/schemas/string'
                      description: A unique number that ensures that the request can't be replayed.
                    Comment:
                      $ref: '#/components/schemas/string'
                      description: An optional comment for the field-level encryption profile. The comment cannot be longer than 128 characters.
                    EncryptionEntities:
                      $ref: '#/components/schemas/EncryptionEntities'
                      description: 'A complex data type of encryption entities for the field-level encryption profile that include the public key ID, provider, and field patterns for specifying which fields to encrypt with this key.'
  '/2020-05-31/function/{Name}':
    get:
      operationId: GetFunction2020_05_31
      description: '<p>Gets the code of a CloudFront function. To get configuration information and metadata about a function, use <code>DescribeFunction</code>.</p> <p>To get a function’s code, you must provide the function’s name and stage. To get these values, you can use <code>ListFunctions</code>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetFunctionResult'
        '480':
          description: NoSuchFunctionExists
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchFunctionExists'
        '481':
          description: UnsupportedOperation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnsupportedOperation'
      parameters:
        - name: Name
          in: path
          required: true
          description: The name of the function whose code you are getting.
          schema:
            type: string
        - name: Stage
          in: query
          required: false
          description: 'The function’s stage, either <code>DEVELOPMENT</code> or <code>LIVE</code>.'
          schema:
            type: string
            enum:
              - DEVELOPMENT
              - LIVE
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2020-05-31/distribution/{DistributionId}/invalidation/{Id}':
    get:
      operationId: GetInvalidation2020_05_31
      description: 'Get the information about an invalidation. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetInvalidationResult'
        '480':
          description: NoSuchInvalidation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchInvalidation'
        '481':
          description: NoSuchDistribution
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchDistribution'
        '482':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
      parameters:
        - name: DistributionId
          in: path
          required: true
          description: The distribution's ID.
          schema:
            type: string
        - name: Id
          in: path
          required: true
          description: 'The identifier for the invalidation request, for example, <code>IDFDVBD632BHDS5</code>.'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2020-05-31/key-group/{Id}/config':
    get:
      operationId: GetKeyGroupConfig2020_05_31
      description: '<p>Gets a key group configuration.</p> <p>To get a key group configuration, you must provide the key group’s identifier. If the key group is referenced in a distribution’s cache behavior, you can get the key group’s identifier using <code>ListDistributions</code> or <code>GetDistribution</code>. If the key group is not referenced in a cache behavior, you can get the identifier using <code>ListKeyGroups</code>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetKeyGroupConfigResult'
        '480':
          description: NoSuchResource
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchResource'
      parameters:
        - name: Id
          in: path
          required: true
          description: 'The identifier of the key group whose configuration you are getting. To get the identifier, use <code>ListKeyGroups</code>.'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2020-05-31/origin-request-policy/{Id}/config':
    get:
      operationId: GetOriginRequestPolicyConfig2020_05_31
      description: '<p>Gets an origin request policy configuration.</p> <p>To get an origin request policy configuration, you must provide the policy’s identifier. If the origin request policy is attached to a distribution’s cache behavior, you can get the policy’s identifier using <code>ListDistributions</code> or <code>GetDistribution</code>. If the origin request policy is not attached to a cache behavior, you can get the identifier using <code>ListOriginRequestPolicies</code>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetOriginRequestPolicyConfigResult'
        '480':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        '481':
          description: NoSuchOriginRequestPolicy
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchOriginRequestPolicy'
      parameters:
        - name: Id
          in: path
          required: true
          description: 'The unique identifier for the origin request policy. If the origin request policy is attached to a distribution’s cache behavior, you can get the policy’s identifier using <code>ListDistributions</code> or <code>GetDistribution</code>. If the origin request policy is not attached to a cache behavior, you can get the identifier using <code>ListOriginRequestPolicies</code>.'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2020-05-31/public-key/{Id}/config':
    get:
      operationId: GetPublicKeyConfig2020_05_31
      description: Gets a public key configuration.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetPublicKeyConfigResult'
        '480':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        '481':
          description: NoSuchPublicKey
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchPublicKey'
      parameters:
        - name: Id
          in: path
          required: true
          description: The identifier of the public key whose configuration you are getting.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdatePublicKey2020_05_31
      description: Update public key information. Note that the only value you can change is the comment.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdatePublicKeyResult'
        '480':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        '481':
          description: CannotChangeImmutablePublicKeyFields
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CannotChangeImmutablePublicKeyFields'
        '482':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
        '483':
          description: InvalidIfMatchVersion
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidIfMatchVersion'
        '484':
          description: IllegalUpdate
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/IllegalUpdate'
        '485':
          description: NoSuchPublicKey
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchPublicKey'
        '486':
          description: PreconditionFailed
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PreconditionFailed'
      parameters:
        - name: Id
          in: path
          required: true
          description: The identifier of the public key that you are updating.
          schema:
            type: string
        - name: If-Match
          in: header
          required: false
          description: 'The value of the <code>ETag</code> header that you received when retrieving the public key to update. For example: <code>E2QWRUHAPOMQZL</code>.'
          schema:
            type: string
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - PublicKeyConfig
              properties:
                PublicKeyConfig:
                  description: 'Configuration information about a public key that you can use with <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">signed URLs and signed cookies</a>, or with <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/field-level-encryption.html">field-level encryption</a>.'
                  type: object
                  properties:
                    CallerReference:
                      $ref: '#/components/schemas/string'
                      description: A string included in the request to help make sure that the request can’t be replayed.
                    Name:
                      $ref: '#/components/schemas/string'
                      description: A name to help identify the public key.
                    EncodedKey:
                      $ref: '#/components/schemas/string'
                      description: 'The public key that you can use with <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">signed URLs and signed cookies</a>, or with <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/field-level-encryption.html">field-level encryption</a>.'
                    Comment:
                      $ref: '#/components/schemas/string'
                      description: A comment to describe the public key. The comment cannot be longer than 128 characters.
  /2020-05-31/get-realtime-log-config/:
    post:
      operationId: GetRealtimeLogConfig2020_05_31
      description: '<p>Gets a real-time log configuration.</p> <p>To get a real-time log configuration, you can provide the configuration’s name or its Amazon Resource Name (ARN). You must provide at least one. If you provide both, CloudFront uses the name to identify the real-time log configuration to get.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetRealtimeLogConfigResult'
        '480':
          description: NoSuchRealtimeLogConfig
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchRealtimeLogConfig'
        '481':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
        '482':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
      parameters: []
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              properties:
                Name:
                  description: The name of the real-time log configuration to get.
                  type: string
                ARN:
                  description: The Amazon Resource Name (ARN) of the real-time log configuration to get.
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2020-05-31/streaming-distribution/{Id}/config':
    get:
      operationId: GetStreamingDistributionConfig2020_05_31
      description: 'Get the configuration information about a streaming distribution. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetStreamingDistributionConfigResult'
        '480':
          description: NoSuchStreamingDistribution
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchStreamingDistribution'
        '481':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
      parameters:
        - name: Id
          in: path
          required: true
          description: The streaming distribution's ID.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdateStreamingDistribution2020_05_31
      description: 'Update a streaming distribution. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateStreamingDistributionResult'
        '480':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        '481':
          description: CNAMEAlreadyExists
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CNAMEAlreadyExists'
        '482':
          description: IllegalUpdate
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/IllegalUpdate'
        '483':
          description: InvalidIfMatchVersion
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidIfMatchVersion'
        '484':
          description: MissingBody
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MissingBody'
        '485':
          description: NoSuchStreamingDistribution
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchStreamingDistribution'
        '486':
          description: PreconditionFailed
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PreconditionFailed'
        '487':
          description: TooManyStreamingDistributionCNAMEs
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyStreamingDistributionCNAMEs'
        '488':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
        '489':
          description: InvalidOriginAccessIdentity
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidOriginAccessIdentity'
        '490':
          description: TooManyTrustedSigners
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyTrustedSigners'
        '491':
          description: TrustedSignerDoesNotExist
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TrustedSignerDoesNotExist'
        '492':
          description: InconsistentQuantities
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InconsistentQuantities'
      parameters:
        - name: Id
          in: path
          required: true
          description: The streaming distribution's id.
          schema:
            type: string
        - name: If-Match
          in: header
          required: false
          description: 'The value of the <code>ETag</code> header that you received when retrieving the streaming distribution''s configuration. For example: <code>E2QWRUHAPOMQZL</code>.'
          schema:
            type: string
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - StreamingDistributionConfig
              properties:
                StreamingDistributionConfig:
                  description: The RTMP distribution's configuration information.
                  type: object
                  properties:
                    CallerReference:
                      $ref: '#/components/schemas/string'
                      description: '<p>A unique value (for example, a date-time stamp) that ensures that the request can''t be replayed.</p> <p>If the value of <code>CallerReference</code> is new (regardless of the content of the <code>StreamingDistributionConfig</code> object), CloudFront creates a new distribution.</p> <p>If <code>CallerReference</code> is a value that you already sent in a previous request to create a distribution, CloudFront returns a <code>DistributionAlreadyExists</code> error.</p>'
                    S3Origin:
                      $ref: '#/components/schemas/S3Origin'
                      description: 'A complex type that contains information about the Amazon S3 bucket from which you want CloudFront to get your media files for distribution. '
                    Aliases:
                      $ref: '#/components/schemas/Aliases'
                      description: 'A complex type that contains information about CNAMEs (alternate domain names), if any, for this streaming distribution. '
                    Comment:
                      $ref: '#/components/schemas/string'
                      description: 'Any comments you want to include about the streaming distribution. '
                    Logging:
                      $ref: '#/components/schemas/StreamingLoggingConfig'
                      description: 'A complex type that controls whether access logs are written for the streaming distribution. '
                    TrustedSigners:
                      $ref: '#/components/schemas/TrustedSigners'
                      description: 'A complex type that specifies any accounts that you want to permit to create signed URLs for private content. If you want the distribution to use signed URLs, include this element; if you want the distribution to use public URLs, remove this element. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">Serving Private Content through CloudFront</a> in the <i>Amazon CloudFront Developer Guide</i>. '
                    PriceClass:
                      $ref: '#/components/schemas/PriceClass'
                      description: 'A complex type that contains information about price class for this streaming distribution. '
                    Enabled:
                      $ref: '#/components/schemas/boolean'
                      description: Whether the streaming distribution is enabled to accept user requests for content.
  /2020-05-31/conflicting-alias#DistributionId&Alias:
    get:
      operationId: ListConflictingAliases2020_05_31
      description: '<p>Gets a list of aliases (also called CNAMEs or alternate domain names) that conflict or overlap with the provided alias, and the associated CloudFront distributions and Amazon Web Services accounts for each conflicting alias. In the returned list, the distribution and account IDs are partially hidden, which allows you to identify the distributions and accounts that you own, but helps to protect the information of ones that you don’t own.</p> <p>Use this operation to find aliases that are in use in CloudFront that conflict or overlap with the provided alias. For example, if you provide <code>www.example.com</code> as input, the returned list can include <code>www.example.com</code> and the overlapping wildcard alternate domain name (<code>*.example.com</code>), if they exist. If you provide <code>*.example.com</code> as input, the returned list can include <code>*.example.com</code> and any alternate domain names covered by that wildcard (for example, <code>www.example.com</code>, <code>test.example.com</code>, <code>dev.example.com</code>, and so on), if they exist.</p> <p>To list conflicting aliases, you provide the alias to search and the ID of a distribution in your account that has an attached SSL/TLS certificate that includes the provided alias. For more information, including how to set up the distribution and certificate, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/CNAMEs.html#alternate-domain-names-move">Moving an alternate domain name to a different distribution</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <p>You can optionally specify the maximum number of items to receive in the response. If the total number of items in the list exceeds the maximum that you specify, or the default maximum, the response is paginated. To get the next page of items, send a subsequent request that specifies the <code>NextMarker</code> value from the current response as the <code>Marker</code> value in the subsequent request.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListConflictingAliasesResult'
        '480':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
        '481':
          description: NoSuchDistribution
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchDistribution'
      parameters:
        - name: DistributionId
          in: query
          required: true
          description: The ID of a distribution in your account that has an attached SSL/TLS certificate that includes the provided alias.
          schema:
            type: string
            maxLength: 25
        - name: Alias
          in: query
          required: true
          description: The alias (also called a CNAME) to search for conflicting aliases.
          schema:
            type: string
            maxLength: 253
        - name: Marker
          in: query
          required: false
          description: 'Use this field when paginating results to indicate where to begin in the list of conflicting aliases. The response includes conflicting aliases in the list that occur after the marker. To get the next page of the list, set this field’s value to the value of <code>NextMarker</code> from the current page’s response.'
          schema:
            type: string
        - name: MaxItems
          in: query
          required: false
          description: The maximum number of conflicting aliases that you want in the response.
          schema:
            type: integer
            maximum: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2020-05-31/distributionsByCachePolicyId/{CachePolicyId}':
    get:
      operationId: ListDistributionsByCachePolicyId2020_05_31
      description: '<p>Gets a list of distribution IDs for distributions that have a cache behavior that’s associated with the specified cache policy.</p> <p>You can optionally specify the maximum number of items to receive in the response. If the total number of items in the list exceeds the maximum that you specify, or the default maximum, the response is paginated. To get the next page of items, send a subsequent request that specifies the <code>NextMarker</code> value from the current response as the <code>Marker</code> value in the subsequent request.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListDistributionsByCachePolicyIdResult'
        '480':
          description: NoSuchCachePolicy
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchCachePolicy'
        '481':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
        '482':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
      parameters:
        - name: Marker
          in: query
          required: false
          description: 'Use this field when paginating results to indicate where to begin in your list of distribution IDs. The response includes distribution IDs in the list that occur after the marker. To get the next page of the list, set this field’s value to the value of <code>NextMarker</code> from the current page’s response.'
          schema:
            type: string
        - name: MaxItems
          in: query
          required: false
          description: The maximum number of distribution IDs that you want in the response.
          schema:
            type: string
        - name: CachePolicyId
          in: path
          required: true
          description: The ID of the cache policy whose associated distribution IDs you want to list.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2020-05-31/distributionsByKeyGroupId/{KeyGroupId}':
    get:
      operationId: ListDistributionsByKeyGroup2020_05_31
      description: '<p>Gets a list of distribution IDs for distributions that have a cache behavior that references the specified key group.</p> <p>You can optionally specify the maximum number of items to receive in the response. If the total number of items in the list exceeds the maximum that you specify, or the default maximum, the response is paginated. To get the next page of items, send a subsequent request that specifies the <code>NextMarker</code> value from the current response as the <code>Marker</code> value in the subsequent request.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListDistributionsByKeyGroupResult'
        '480':
          description: NoSuchResource
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchResource'
        '481':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
      parameters:
        - name: Marker
          in: query
          required: false
          description: 'Use this field when paginating results to indicate where to begin in your list of distribution IDs. The response includes distribution IDs in the list that occur after the marker. To get the next page of the list, set this field’s value to the value of <code>NextMarker</code> from the current page’s response.'
          schema:
            type: string
        - name: MaxItems
          in: query
          required: false
          description: The maximum number of distribution IDs that you want in the response.
          schema:
            type: string
        - name: KeyGroupId
          in: path
          required: true
          description: The ID of the key group whose associated distribution IDs you are listing.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2020-05-31/distributionsByOriginRequestPolicyId/{OriginRequestPolicyId}':
    get:
      operationId: ListDistributionsByOriginRequestPolicyId2020_05_31
      description: '<p>Gets a list of distribution IDs for distributions that have a cache behavior that’s associated with the specified origin request policy.</p> <p>You can optionally specify the maximum number of items to receive in the response. If the total number of items in the list exceeds the maximum that you specify, or the default maximum, the response is paginated. To get the next page of items, send a subsequent request that specifies the <code>NextMarker</code> value from the current response as the <code>Marker</code> value in the subsequent request.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListDistributionsByOriginRequestPolicyIdResult'
        '480':
          description: NoSuchOriginRequestPolicy
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchOriginRequestPolicy'
        '481':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
        '482':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
      parameters:
        - name: Marker
          in: query
          required: false
          description: 'Use this field when paginating results to indicate where to begin in your list of distribution IDs. The response includes distribution IDs in the list that occur after the marker. To get the next page of the list, set this field’s value to the value of <code>NextMarker</code> from the current page’s response.'
          schema:
            type: string
        - name: MaxItems
          in: query
          required: false
          description: The maximum number of distribution IDs that you want in the response.
          schema:
            type: string
        - name: OriginRequestPolicyId
          in: path
          required: true
          description: The ID of the origin request policy whose associated distribution IDs you want to list.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2020-05-31/distributionsByRealtimeLogConfig/:
    post:
      operationId: ListDistributionsByRealtimeLogConfig2020_05_31
      description: '<p>Gets a list of distributions that have a cache behavior that’s associated with the specified real-time log configuration.</p> <p>You can specify the real-time log configuration by its name or its Amazon Resource Name (ARN). You must provide at least one. If you provide both, CloudFront uses the name to identify the real-time log configuration to list distributions for.</p> <p>You can optionally specify the maximum number of items to receive in the response. If the total number of items in the list exceeds the maximum that you specify, or the default maximum, the response is paginated. To get the next page of items, send a subsequent request that specifies the <code>NextMarker</code> value from the current response as the <code>Marker</code> value in the subsequent request. </p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListDistributionsByRealtimeLogConfigResult'
        '480':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
      parameters: []
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              properties:
                Marker:
                  description: 'Use this field when paginating results to indicate where to begin in your list of distributions. The response includes distributions in the list that occur after the marker. To get the next page of the list, set this field’s value to the value of <code>NextMarker</code> from the current page’s response.'
                  type: string
                MaxItems:
                  description: The maximum number of distributions that you want in the response.
                  type: string
                RealtimeLogConfigName:
                  description: The name of the real-time log configuration whose associated distributions you want to list.
                  type: string
                RealtimeLogConfigArn:
                  description: The Amazon Resource Name (ARN) of the real-time log configuration whose associated distributions you want to list.
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2020-05-31/distributionsByWebACLId/{WebACLId}':
    get:
      operationId: ListDistributionsByWebACLId2020_05_31
      description: List the distributions that are associated with a specified WAF web ACL.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListDistributionsByWebACLIdResult'
        '480':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
        '481':
          description: InvalidWebACLId
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidWebACLId'
      parameters:
        - name: Marker
          in: query
          required: false
          description: 'Use <code>Marker</code> and <code>MaxItems</code> to control pagination of results. If you have more than <code>MaxItems</code> distributions that satisfy the request, the response includes a <code>NextMarker</code> element. To get the next page of results, submit another request. For the value of <code>Marker</code>, specify the value of <code>NextMarker</code> from the last response. (For the first request, omit <code>Marker</code>.) '
          schema:
            type: string
        - name: MaxItems
          in: query
          required: false
          description: The maximum number of distributions that you want CloudFront to return in the response body. The maximum and default values are both 100.
          schema:
            type: string
        - name: WebACLId
          in: path
          required: true
          description: 'The ID of the WAF web ACL that you want to list the associated distributions. If you specify "null" for the ID, the request returns a list of the distributions that aren''t associated with a web ACL.'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2020-05-31/tagging#Resource:
    get:
      operationId: ListTagsForResource2020_05_31
      description: List tags for a CloudFront resource.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResult'
        '480':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        '481':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
        '482':
          description: InvalidTagging
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagging'
        '483':
          description: NoSuchResource
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchResource'
      parameters:
        - name: Resource
          in: query
          required: true
          description: ' An ARN of a CloudFront resource.'
          schema:
            type: string
            pattern: 'arn:aws(-cn)?:cloudfront::[0-9]+:.*'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2020-05-31/function/{Name}/publish#If-Match':
    post:
      operationId: PublishFunction2020_05_31
      description: '<p>Publishes a CloudFront function by copying the function code from the <code>DEVELOPMENT</code> stage to <code>LIVE</code>. This automatically updates all cache behaviors that are using this function to use the newly published copy in the <code>LIVE</code> stage.</p> <p>When a function is published to the <code>LIVE</code> stage, you can attach the function to a distribution’s cache behavior, using the function’s Amazon Resource Name (ARN).</p> <p>To publish a function, you must provide the function’s name and version (<code>ETag</code> value). To get these values, you can use <code>ListFunctions</code> and <code>DescribeFunction</code>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PublishFunctionResult'
        '480':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
        '481':
          description: InvalidIfMatchVersion
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidIfMatchVersion'
        '482':
          description: NoSuchFunctionExists
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchFunctionExists'
        '483':
          description: PreconditionFailed
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PreconditionFailed'
        '484':
          description: UnsupportedOperation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnsupportedOperation'
      parameters:
        - name: Name
          in: path
          required: true
          description: The name of the function that you are publishing.
          schema:
            type: string
        - name: If-Match
          in: header
          required: true
          description: 'The current version (<code>ETag</code> value) of the function that you are publishing, which you can get using <code>DescribeFunction</code>.'
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2020-05-31/tagging#Operation=Tag&Resource:
    post:
      operationId: TagResource2020_05_31
      description: Add tags to a CloudFront resource.
      responses:
        '204':
          description: Success
        '480':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        '481':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
        '482':
          description: InvalidTagging
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagging'
        '483':
          description: NoSuchResource
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchResource'
      parameters:
        - name: Resource
          in: query
          required: true
          description: ' An ARN of a CloudFront resource.'
          schema:
            type: string
            pattern: 'arn:aws(-cn)?:cloudfront::[0-9]+:.*'
        - name: Operation
          in: query
          required: true
          schema:
            type: string
            enum:
              - Tag
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - Tags
              properties:
                Tags:
                  description: ' A complex type that contains zero or more <code>Tag</code> elements.'
                  type: object
                  properties:
                    Items:
                      $ref: '#/components/schemas/TagList'
                      description: ' A complex type that contains <code>Tag</code> elements.'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2020-05-31/function/{Name}/test#If-Match':
    post:
      operationId: TestFunction2020_05_31
      description: '<p>Tests a CloudFront function.</p> <p>To test a function, you provide an <i>event object</i> that represents an HTTP request or response that your CloudFront distribution could receive in production. CloudFront runs the function, passing it the event object that you provided, and returns the function’s result (the modified event object) in the response. The response also contains function logs and error messages, if any exist. For more information about testing functions, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/managing-functions.html#test-function">Testing functions</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <p>To test a function, you provide the function’s name and version (<code>ETag</code> value) along with the event object. To get the function’s name and version, you can use <code>ListFunctions</code> and <code>DescribeFunction</code>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TestFunctionResult'
        '480':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
        '481':
          description: InvalidIfMatchVersion
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidIfMatchVersion'
        '482':
          description: NoSuchFunctionExists
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchFunctionExists'
        '483':
          description: TestFunctionFailed
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TestFunctionFailed'
        '484':
          description: UnsupportedOperation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnsupportedOperation'
      parameters:
        - name: Name
          in: path
          required: true
          description: The name of the function that you are testing.
          schema:
            type: string
        - name: If-Match
          in: header
          required: true
          description: 'The current version (<code>ETag</code> value) of the function that you are testing, which you can get using <code>DescribeFunction</code>.'
          schema:
            type: string
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - EventObject
              properties:
                Stage:
                  description: 'The stage of the function that you are testing, either <code>DEVELOPMENT</code> or <code>LIVE</code>.'
                  type: string
                  enum:
                    - DEVELOPMENT
                    - LIVE
                EventObject:
                  description: 'The event object to test the function with. For more information about the structure of the event object, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/managing-functions.html#test-function">Testing functions</a> in the <i>Amazon CloudFront Developer Guide</i>.'
                  type: string
                  maxLength: 40960
                  format: password
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2020-05-31/tagging#Operation=Untag&Resource:
    post:
      operationId: UntagResource2020_05_31
      description: Remove tags from a CloudFront resource.
      responses:
        '204':
          description: Success
        '480':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
        '481':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
        '482':
          description: InvalidTagging
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTagging'
        '483':
          description: NoSuchResource
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchResource'
      parameters:
        - name: Resource
          in: query
          required: true
          description: ' An ARN of a CloudFront resource.'
          schema:
            type: string
            pattern: 'arn:aws(-cn)?:cloudfront::[0-9]+:.*'
        - name: Operation
          in: query
          required: true
          schema:
            type: string
            enum:
              - Untag
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              required:
                - TagKeys
              properties:
                TagKeys:
                  description: ' A complex type that contains zero or more <code>Tag</code> elements.'
                  type: object
                  properties:
                    Items:
                      $ref: '#/components/schemas/TagKeyList'
                      description: ' A complex type that contains <code>Tag</code> key elements.'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2020-05-31/realtime-log-config/:
    put:
      operationId: UpdateRealtimeLogConfig2020_05_31
      description: '<p>Updates a real-time log configuration.</p> <p>When you update a real-time log configuration, all the parameters are updated with the values provided in the request. You cannot update some parameters independent of others. To update a real-time log configuration:</p> <ol> <li> <p>Call <code>GetRealtimeLogConfig</code> to get the current real-time log configuration.</p> </li> <li> <p>Locally modify the parameters in the real-time log configuration that you want to update.</p> </li> <li> <p>Call this API (<code>UpdateRealtimeLogConfig</code>) by providing the entire real-time log configuration, including the parameters that you modified and those that you didn’t.</p> </li> </ol> <p>You cannot update a real-time log configuration’s <code>Name</code> or <code>ARN</code>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateRealtimeLogConfigResult'
        '480':
          description: NoSuchRealtimeLogConfig
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchRealtimeLogConfig'
        '481':
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
        '482':
          description: AccessDenied
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessDenied'
      parameters: []
      requestBody:
        required: true
        content:
          text/xml:
            schema:
              type: object
              properties:
                EndPoints:
                  description: Contains information about the Amazon Kinesis data stream where you are sending real-time log data.
                  type: array
                  items:
                    $ref: '#/components/schemas/EndPoint'
                Fields:
                  description: '<p>A list of fields to include in each real-time log record.</p> <p>For more information about fields, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-fields">Real-time log configuration fields</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
                  type: array
                  items:
                    allOf:
                      - $ref: '#/components/schemas/string'
                      - xml:
                          name: Field
                Name:
                  description: The name for this real-time log configuration.
                  type: string
                ARN:
                  description: The Amazon Resource Name (ARN) for this real-time log configuration.
                  type: string
                SamplingRate:
                  description: 'The sampling rate for this real-time log configuration. The sampling rate determines the percentage of viewer requests that are represented in the real-time log data. You must provide an integer between 1 and 100, inclusive.'
                  type: integer
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    InvalidArgument: {}
    NoSuchDistribution: {}
    TooManyDistributionCNAMEs: {}
    IllegalUpdate: {}
    AccessDenied: {}
    CreateCachePolicyResult:
      type: object
      properties:
        CachePolicy:
          $ref: '#/components/schemas/CachePolicy'
          description: A cache policy.
    string:
      type: string
    long:
      type: integer
    ParametersInCacheKeyAndForwardedToOrigin:
      type: object
      required:
        - EnableAcceptEncodingGzip
        - HeadersConfig
        - CookiesConfig
        - QueryStringsConfig
      properties:
        EnableAcceptEncodingGzip:
          $ref: '#/components/schemas/boolean'
          description: '<p>A flag that can affect whether the <code>Accept-Encoding</code> HTTP header is included in the cache key and included in requests that CloudFront sends to the origin.</p> <p>This field is related to the <code>EnableAcceptEncodingBrotli</code> field. If one or both of these fields is <code>true</code> <i>and</i> the viewer request includes the <code>Accept-Encoding</code> header, then CloudFront does the following:</p> <ul> <li> <p>Normalizes the value of the viewer’s <code>Accept-Encoding</code> header</p> </li> <li> <p>Includes the normalized header in the cache key</p> </li> <li> <p>Includes the normalized header in the request to the origin, if a request is necessary</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-policy-compressed-objects">Compression support</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <p>If you set this value to <code>true</code>, and this cache behavior also has an origin request policy attached, do not include the <code>Accept-Encoding</code> header in the origin request policy. CloudFront always includes the <code>Accept-Encoding</code> header in origin requests when the value of this field is <code>true</code>, so including this header in an origin request policy has no effect.</p> <p>If both of these fields are <code>false</code>, then CloudFront treats the <code>Accept-Encoding</code> header the same as any other HTTP header in the viewer request. By default, it’s not included in the cache key and it’s not included in origin requests. In this case, you can manually add <code>Accept-Encoding</code> to the headers whitelist like any other HTTP header.</p>'
        EnableAcceptEncodingBrotli:
          $ref: '#/components/schemas/boolean'
          description: '<p>A flag that can affect whether the <code>Accept-Encoding</code> HTTP header is included in the cache key and included in requests that CloudFront sends to the origin.</p> <p>This field is related to the <code>EnableAcceptEncodingGzip</code> field. If one or both of these fields is <code>true</code> <i>and</i> the viewer request includes the <code>Accept-Encoding</code> header, then CloudFront does the following:</p> <ul> <li> <p>Normalizes the value of the viewer’s <code>Accept-Encoding</code> header</p> </li> <li> <p>Includes the normalized header in the cache key</p> </li> <li> <p>Includes the normalized header in the request to the origin, if a request is necessary</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-policy-compressed-objects">Compression support</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <p>If you set this value to <code>true</code>, and this cache behavior also has an origin request policy attached, do not include the <code>Accept-Encoding</code> header in the origin request policy. CloudFront always includes the <code>Accept-Encoding</code> header in origin requests when the value of this field is <code>true</code>, so including this header in an origin request policy has no effect.</p> <p>If both of these fields are <code>false</code>, then CloudFront treats the <code>Accept-Encoding</code> header the same as any other HTTP header in the viewer request. By default, it’s not included in the cache key and it’s not included in origin requests. In this case, you can manually add <code>Accept-Encoding</code> to the headers whitelist like any other HTTP header.</p>'
        HeadersConfig:
          $ref: '#/components/schemas/CachePolicyHeadersConfig'
          description: 'An object that determines whether any HTTP headers (and if so, which headers) are included in the cache key and automatically included in requests that CloudFront sends to the origin.'
        CookiesConfig:
          $ref: '#/components/schemas/CachePolicyCookiesConfig'
          description: 'An object that determines whether any cookies in viewer requests (and if so, which cookies) are included in the cache key and automatically included in requests that CloudFront sends to the origin.'
        QueryStringsConfig:
          $ref: '#/components/schemas/CachePolicyQueryStringsConfig'
          description: 'An object that determines whether any URL query strings in viewer requests (and if so, which query strings) are included in the cache key and automatically included in requests that CloudFront sends to the origin.'
      description: '<p>This object determines the values that CloudFront includes in the cache key. These values can include HTTP headers, cookies, and URL query strings. CloudFront uses the cache key to find an object in its cache that it can return to the viewer.</p> <p>The headers, cookies, and query strings that are included in the cache key are automatically included in requests that CloudFront sends to the origin. CloudFront sends a request when it can’t find an object in its cache that matches the request’s cache key. If you want to send values to the origin but <i>not</i> include them in the cache key, use <code>OriginRequestPolicy</code>.</p>'
    InconsistentQuantities: {}
    CachePolicyAlreadyExists: {}
    TooManyCachePolicies: {}
    TooManyHeadersInCachePolicy: {}
    TooManyCookiesInCachePolicy: {}
    TooManyQueryStringsInCachePolicy: {}
    CreateCloudFrontOriginAccessIdentityResult:
      type: object
      properties:
        CloudFrontOriginAccessIdentity:
          $ref: '#/components/schemas/CloudFrontOriginAccessIdentity'
          description: The origin access identity's information.
      description: The returned result of the corresponding request.
    CloudFrontOriginAccessIdentityAlreadyExists: {}
    MissingBody: {}
    TooManyCloudFrontOriginAccessIdentities: {}
    CreateDistributionResult:
      type: object
      properties:
        Distribution:
          $ref: '#/components/schemas/Distribution'
          description: The distribution's information.
      description: The returned result of the corresponding request.
    Aliases:
      type: object
      required:
        - Quantity
      properties:
        Quantity:
          $ref: '#/components/schemas/integer'
          description: 'The number of CNAME aliases, if any, that you want to associate with this distribution.'
        Items:
          $ref: '#/components/schemas/AliasList'
          description: 'A complex type that contains the CNAME aliases, if any, that you want to associate with this distribution.'
      description: 'A complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution. '
    Origins:
      type: object
      required:
        - Quantity
        - Items
      properties:
        Quantity:
          $ref: '#/components/schemas/integer'
          description: The number of origins for this distribution.
        Items:
          $ref: '#/components/schemas/OriginList'
          description: A list of origins.
      description: Contains information about the origins for this distribution.
    OriginGroups:
      type: object
      required:
        - Quantity
      properties:
        Quantity:
          $ref: '#/components/schemas/integer'
          description: The number of origin groups.
        Items:
          $ref: '#/components/schemas/OriginGroupList'
          description: The items (origin groups) in a distribution.
      description: A complex data type for the origin groups specified for a distribution.
    DefaultCacheBehavior:
      type: object
      required:
        - TargetOriginId
        - ViewerProtocolPolicy
      properties:
        TargetOriginId:
          $ref: '#/components/schemas/string'
          description: The value of <code>ID</code> for the origin that you want CloudFront to route requests to when they use the default cache behavior.
        TrustedSigners:
          $ref: '#/components/schemas/TrustedSigners'
          description: '<important> <p>We recommend using <code>TrustedKeyGroups</code> instead of <code>TrustedSigners</code>.</p> </important> <p>A list of account IDs whose public keys CloudFront can use to validate signed URLs or signed cookies.</p> <p>When a cache behavior contains trusted signers, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with the private key of a CloudFront key pair in a trusted signer’s account. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">Serving private content</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
        TrustedKeyGroups:
          $ref: '#/components/schemas/TrustedKeyGroups'
          description: '<p>A list of key groups that CloudFront can use to validate signed URLs or signed cookies.</p> <p>When a cache behavior contains trusted key groups, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with a private key whose corresponding public key is in the key group. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">Serving private content</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
        ViewerProtocolPolicy:
          $ref: '#/components/schemas/ViewerProtocolPolicy'
          description: '<p>The protocol that viewers can use to access the files in the origin specified by <code>TargetOriginId</code> when a request matches the path pattern in <code>PathPattern</code>. You can specify the following options:</p> <ul> <li> <p> <code>allow-all</code>: Viewers can use HTTP or HTTPS.</p> </li> <li> <p> <code>redirect-to-https</code>: If a viewer submits an HTTP request, CloudFront returns an HTTP status code of 301 (Moved Permanently) to the viewer along with the HTTPS URL. The viewer then resubmits the request using the new URL.</p> </li> <li> <p> <code>https-only</code>: If a viewer sends an HTTP request, CloudFront returns an HTTP status code of 403 (Forbidden).</p> </li> </ul> <p>For more information about requiring the HTTPS protocol, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-viewers-to-cloudfront.html">Requiring HTTPS Between Viewers and CloudFront</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <note> <p>The only way to guarantee that viewers retrieve an object that was fetched from the origin using HTTPS is never to use any other protocol to fetch the object. If you have recently changed from HTTP to HTTPS, we recommend that you clear your objects’ cache because cached objects are protocol agnostic. That means that an edge location will return an object from the cache regardless of whether the current request protocol matches the protocol used previously. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html">Managing Cache Expiration</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> </note>'
        AllowedMethods:
          $ref: '#/components/schemas/AllowedMethods'
        SmoothStreaming:
          $ref: '#/components/schemas/boolean'
          description: 'Indicates whether you want to distribute media files in the Microsoft Smooth Streaming format using the origin that is associated with this cache behavior. If so, specify <code>true</code>; if not, specify <code>false</code>. If you specify <code>true</code> for <code>SmoothStreaming</code>, you can still distribute other content using this cache behavior if the content matches the value of <code>PathPattern</code>. '
        Compress:
          $ref: '#/components/schemas/boolean'
          description: 'Whether you want CloudFront to automatically compress certain files for this cache behavior. If so, specify <code>true</code>; if not, specify <code>false</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/ServingCompressedFiles.html">Serving Compressed Files</a> in the <i>Amazon CloudFront Developer Guide</i>.'
        LambdaFunctionAssociations:
          $ref: '#/components/schemas/LambdaFunctionAssociations'
          description: A complex type that contains zero or more Lambda@Edge function associations for a cache behavior.
        FunctionAssociations:
          $ref: '#/components/schemas/FunctionAssociations'
          description: A list of CloudFront functions that are associated with this cache behavior. CloudFront functions must be published to the <code>LIVE</code> stage to associate them with a cache behavior.
        FieldLevelEncryptionId:
          $ref: '#/components/schemas/string'
          description: The value of <code>ID</code> for the field-level encryption configuration that you want CloudFront to use for encrypting specific fields of data for the default cache behavior.
        RealtimeLogConfigArn:
          $ref: '#/components/schemas/string'
          description: 'The Amazon Resource Name (ARN) of the real-time log configuration that is attached to this cache behavior. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html">Real-time logs</a> in the <i>Amazon CloudFront Developer Guide</i>.'
        CachePolicyId:
          $ref: '#/components/schemas/string'
          description: '<p>The unique identifier of the cache policy that is attached to the default cache behavior. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy">Creating cache policies</a> or <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html">Using the managed cache policies</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <p>A <code>DefaultCacheBehavior</code> must include either a <code>CachePolicyId</code> or <code>ForwardedValues</code>. We recommend that you use a <code>CachePolicyId</code>.</p>'
        OriginRequestPolicyId:
          $ref: '#/components/schemas/string'
          description: 'The unique identifier of the origin request policy that is attached to the default cache behavior. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy">Creating origin request policies</a> or <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-origin-request-policies.html">Using the managed origin request policies</a> in the <i>Amazon CloudFront Developer Guide</i>.'
        ForwardedValues:
          allOf:
            - $ref: '#/components/schemas/ForwardedValues'
            - deprecated: true
              description: '<p>This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/working-with-policies.html">Working with policies</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <p>If you want to include values in the cache key, use a cache policy. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy">Creating cache policies</a> or <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html">Using the managed cache policies</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <p>If you want to send values to the origin but not include them in the cache key, use an origin request policy. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy">Creating origin request policies</a> or <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-origin-request-policies.html">Using the managed origin request policies</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <p>A <code>DefaultCacheBehavior</code> must include either a <code>CachePolicyId</code> or <code>ForwardedValues</code>. We recommend that you use a <code>CachePolicyId</code>.</p> <p>A complex type that specifies how CloudFront handles query strings, cookies, and HTTP headers.</p>'
        MinTTL:
          allOf:
            - $ref: '#/components/schemas/long'
            - deprecated: true
              description: '<p>This field is deprecated. We recommend that you use the <code>MinTTL</code> field in a cache policy instead of this field. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy">Creating cache policies</a> or <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html">Using the managed cache policies</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <p>The minimum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html">Managing How Long Content Stays in an Edge Cache (Expiration)</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <p>You must specify <code>0</code> for <code>MinTTL</code> if you configure CloudFront to forward all headers to your origin (under <code>Headers</code>, if you specify <code>1</code> for <code>Quantity</code> and <code>*</code> for <code>Name</code>).</p>'
        DefaultTTL:
          allOf:
            - $ref: '#/components/schemas/long'
            - deprecated: true
              description: '<p>This field is deprecated. We recommend that you use the <code>DefaultTTL</code> field in a cache policy instead of this field. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy">Creating cache policies</a> or <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html">Using the managed cache policies</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <p>The default amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin does not add HTTP headers such as <code>Cache-Control max-age</code>, <code>Cache-Control s-maxage</code>, and <code>Expires</code> to objects. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html">Managing How Long Content Stays in an Edge Cache (Expiration)</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
        MaxTTL:
          allOf:
            - $ref: '#/components/schemas/long'
            - deprecated: true
              description: '<p>This field is deprecated. We recommend that you use the <code>MaxTTL</code> field in a cache policy instead of this field. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy">Creating cache policies</a> or <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html">Using the managed cache policies</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <p>The maximum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin adds HTTP headers such as <code>Cache-Control max-age</code>, <code>Cache-Control s-maxage</code>, and <code>Expires</code> to objects. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html">Managing How Long Content Stays in an Edge Cache (Expiration)</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
      description: A complex type that describes the default cache behavior if you don’t specify a <code>CacheBehavior</code> element or if request URLs don’t match any of the values of <code>PathPattern</code> in <code>CacheBehavior</code> elements. You must create exactly one default cache behavior.
    CacheBehaviors:
      type: object
      required:
        - Quantity
      properties:
        Quantity:
          $ref: '#/components/schemas/integer'
          description: 'The number of cache behaviors for this distribution. '
        Items:
          $ref: '#/components/schemas/CacheBehaviorList'
          description: 'Optional: A complex type that contains cache behaviors for this distribution. If <code>Quantity</code> is <code>0</code>, you can omit <code>Items</code>.'
      description: 'A complex type that contains zero or more <code>CacheBehavior</code> elements. '
    CustomErrorResponses:
      type: object
      required:
        - Quantity
      properties:
        Quantity:
          $ref: '#/components/schemas/integer'
          description: 'The number of HTTP status codes for which you want to specify a custom error page and/or a caching duration. If <code>Quantity</code> is <code>0</code>, you can omit <code>Items</code>.'
        Items:
          $ref: '#/components/schemas/CustomErrorResponseList'
          description: 'A complex type that contains a <code>CustomErrorResponse</code> element for each HTTP status code for which you want to specify a custom error page and/or a caching duration. '
      description: '<p>A complex type that controls:</p> <ul> <li> <p>Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom error messages before returning the response to the viewer.</p> </li> <li> <p>How long CloudFront caches HTTP status codes in the 4xx and 5xx range.</p> </li> </ul> <p>For more information about custom error pages, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html">Customizing Error Responses</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
    CommentType:
      type: string
      format: password
    LoggingConfig:
      type: object
      required:
        - Enabled
        - IncludeCookies
        - Bucket
        - Prefix
      properties:
        Enabled:
          $ref: '#/components/schemas/boolean'
          description: 'Specifies whether you want CloudFront to save access logs to an Amazon S3 bucket. If you don''t want to enable logging when you create a distribution or if you want to disable logging for an existing distribution, specify <code>false</code> for <code>Enabled</code>, and specify empty <code>Bucket</code> and <code>Prefix</code> elements. If you specify <code>false</code> for <code>Enabled</code> but you specify values for <code>Bucket</code>, <code>prefix</code>, and <code>IncludeCookies</code>, the values are automatically deleted.'
        IncludeCookies:
          $ref: '#/components/schemas/boolean'
          description: 'Specifies whether you want CloudFront to include cookies in access logs, specify <code>true</code> for <code>IncludeCookies</code>. If you choose to include cookies in logs, CloudFront logs all cookies regardless of how you configure the cache behaviors for this distribution. If you don''t want to include cookies when you create a distribution or if you want to disable include cookies for an existing distribution, specify <code>false</code> for <code>IncludeCookies</code>.'
        Bucket:
          $ref: '#/components/schemas/string'
          description: 'The Amazon S3 bucket to store the access logs in, for example, <code>myawslogbucket.s3.amazonaws.com</code>.'
        Prefix:
          $ref: '#/components/schemas/string'
          description: 'An optional string that you want CloudFront to prefix to the access log <code>filenames</code> for this distribution, for example, <code>myprefix/</code>. If you want to enable logging, but you don''t want to specify a prefix, you still must include an empty <code>Prefix</code> element in the <code>Logging</code> element.'
      description: A complex type that controls whether access logs are written for the distribution.
    PriceClass:
      type: string
      enum:
        - PriceClass_100
        - PriceClass_200
        - PriceClass_All
    boolean:
      type: boolean
    ViewerCertificate:
      type: object
      properties:
        CloudFrontDefaultCertificate:
          $ref: '#/components/schemas/boolean'
          description: '<p>If the distribution uses the CloudFront domain name such as <code>d111111abcdef8.cloudfront.net</code>, set this field to <code>true</code>.</p> <p>If the distribution uses <code>Aliases</code> (alternate domain names or CNAMEs), set this field to <code>false</code> and specify values for the following fields:</p> <ul> <li> <p> <code>ACMCertificateArn</code> or <code>IAMCertificateId</code> (specify a value for one, not both)</p> </li> <li> <p> <code>MinimumProtocolVersion</code> </p> </li> <li> <p> <code>SSLSupportMethod</code> </p> </li> </ul>'
        IAMCertificateId:
          $ref: '#/components/schemas/string'
          description: '<p>If the distribution uses <code>Aliases</code> (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html">Identity and Access Management (IAM)</a>, provide the ID of the IAM certificate.</p> <p>If you specify an IAM certificate ID, you must also specify values for <code>MinimumProtocolVersion</code> and <code>SSLSupportMethod</code>. </p>'
        ACMCertificateArn:
          $ref: '#/components/schemas/string'
          description: '<p>If the distribution uses <code>Aliases</code> (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in <a href="https://docs.aws.amazon.com/acm/latest/userguide/acm-overview.html">Certificate Manager (ACM)</a>, provide the Amazon Resource Name (ARN) of the ACM certificate. CloudFront only supports ACM certificates in the US East (N. Virginia) Region (<code>us-east-1</code>).</p> <p>If you specify an ACM certificate ARN, you must also specify values for <code>MinimumProtocolVersion</code> and <code>SSLSupportMethod</code>.</p>'
        SSLSupportMethod:
          $ref: '#/components/schemas/SSLSupportMethod'
          description: '<p>If the distribution uses <code>Aliases</code> (alternate domain names or CNAMEs), specify which viewers the distribution accepts HTTPS connections from.</p> <ul> <li> <p> <code>sni-only</code> – The distribution accepts HTTPS connections from only viewers that support <a href="https://en.wikipedia.org/wiki/Server_Name_Indication">server name indication (SNI)</a>. This is recommended. Most browsers and clients support SNI.</p> </li> <li> <p> <code>vip</code> – The distribution accepts HTTPS connections from all viewers including those that don’t support SNI. This is not recommended, and results in additional monthly charges from CloudFront.</p> </li> <li> <p> <code>static-ip</code> - Do not specify this value unless your distribution has been enabled for this feature by the CloudFront team. If you have a use case that requires static IP addresses for a distribution, contact CloudFront through the <a href="https://console.aws.amazon.com/support/home">Amazon Web Services Support Center</a>.</p> </li> </ul> <p>If the distribution uses the CloudFront domain name such as <code>d111111abcdef8.cloudfront.net</code>, don’t set a value for this field.</p>'
        MinimumProtocolVersion:
          $ref: '#/components/schemas/MinimumProtocolVersion'
          description: '<p>If the distribution uses <code>Aliases</code> (alternate domain names or CNAMEs), specify the security policy that you want CloudFront to use for HTTPS connections with viewers. The security policy determines two settings:</p> <ul> <li> <p>The minimum SSL/TLS protocol that CloudFront can use to communicate with viewers.</p> </li> <li> <p>The ciphers that CloudFront can use to encrypt the content that it returns to viewers.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValues-security-policy">Security Policy</a> and <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html#secure-connections-supported-ciphers">Supported Protocols and Ciphers Between Viewers and CloudFront</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <note> <p>On the CloudFront console, this setting is called <b>Security Policy</b>.</p> </note> <p>When you’re using SNI only (you set <code>SSLSupportMethod</code> to <code>sni-only</code>), you must specify <code>TLSv1</code> or higher.</p> <p>If the distribution uses the CloudFront domain name such as <code>d111111abcdef8.cloudfront.net</code> (you set <code>CloudFrontDefaultCertificate</code> to <code>true</code>), CloudFront automatically sets the security policy to <code>TLSv1</code> regardless of the value that you set here.</p>'
        Certificate:
          allOf:
            - $ref: '#/components/schemas/string'
            - deprecated: true
              description: '<p>This field is deprecated. Use one of the following fields instead:</p> <ul> <li> <p> <code>ACMCertificateArn</code> </p> </li> <li> <p> <code>IAMCertificateId</code> </p> </li> <li> <p> <code>CloudFrontDefaultCertificate</code> </p> </li> </ul>'
        CertificateSource:
          allOf:
            - $ref: '#/components/schemas/CertificateSource'
            - deprecated: true
              description: '<p>This field is deprecated. Use one of the following fields instead:</p> <ul> <li> <p> <code>ACMCertificateArn</code> </p> </li> <li> <p> <code>IAMCertificateId</code> </p> </li> <li> <p> <code>CloudFrontDefaultCertificate</code> </p> </li> </ul>'
      description: '<p>A complex type that determines the distribution’s SSL/TLS configuration for communicating with viewers.</p> <p>If the distribution doesn’t use <code>Aliases</code> (also known as alternate domain names or CNAMEs)—that is, if the distribution uses the CloudFront domain name such as <code>d111111abcdef8.cloudfront.net</code>—set <code>CloudFrontDefaultCertificate</code> to <code>true</code> and leave all other fields empty.</p> <p>If the distribution uses <code>Aliases</code> (alternate domain names or CNAMEs), use the fields in this type to specify the following settings:</p> <ul> <li> <p>Which viewers the distribution accepts HTTPS connections from: only viewers that support <a href="https://en.wikipedia.org/wiki/Server_Name_Indication">server name indication (SNI)</a> (recommended), or all viewers including those that don’t support SNI.</p> <ul> <li> <p>To accept HTTPS connections from only viewers that support SNI, set <code>SSLSupportMethod</code> to <code>sni-only</code>. This is recommended. Most browsers and clients support SNI. </p> </li> <li> <p>To accept HTTPS connections from all viewers, including those that don’t support SNI, set <code>SSLSupportMethod</code> to <code>vip</code>. This is not recommended, and results in additional monthly charges from CloudFront.</p> </li> </ul> </li> <li> <p>The minimum SSL/TLS protocol version that the distribution can use to communicate with viewers. To specify a minimum version, choose a value for <code>MinimumProtocolVersion</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValues-security-policy">Security Policy</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> </li> <li> <p>The location of the SSL/TLS certificate, <a href="https://docs.aws.amazon.com/acm/latest/userguide/acm-overview.html">Certificate Manager (ACM)</a> (recommended) or <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html">Identity and Access Management (IAM)</a>. You specify the location by setting a value in one of the following fields (not both):</p> <ul> <li> <p> <code>ACMCertificateArn</code> </p> </li> <li> <p> <code>IAMCertificateId</code> </p> </li> </ul> </li> </ul> <p>All distributions support HTTPS connections from viewers. To require viewers to use HTTPS only, or to redirect them from HTTP to HTTPS, use <code>ViewerProtocolPolicy</code> in the <code>CacheBehavior</code> or <code>DefaultCacheBehavior</code>. To specify how CloudFront should use SSL/TLS to communicate with your custom origin, use <code>CustomOriginConfig</code>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https.html">Using HTTPS with CloudFront</a> and <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-alternate-domain-names.html"> Using Alternate Domain Names and HTTPS</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
    Restrictions:
      type: object
      required:
        - GeoRestriction
      properties:
        GeoRestriction:
          $ref: '#/components/schemas/GeoRestriction'
          description: A complex type that controls the countries in which your content is distributed. CloudFront determines the location of your users using <code>MaxMind</code> GeoIP databases.
      description: A complex type that identifies ways in which you want to restrict distribution of your content.
    HttpVersion:
      type: string
      enum:
        - http1.1
        - http2
    CNAMEAlreadyExists: {}
    DistributionAlreadyExists: {}
    InvalidOrigin: {}
    InvalidOriginAccessIdentity: {}
    TooManyTrustedSigners: {}
    TrustedSignerDoesNotExist: {}
    InvalidViewerCertificate: {}
    InvalidMinimumProtocolVersion: {}
    TooManyDistributions: {}
    InvalidDefaultRootObject: {}
    InvalidRelativePath: {}
    InvalidErrorCode: {}
    InvalidResponseCode: {}
    InvalidRequiredProtocol: {}
    NoSuchOrigin: {}
    TooManyOrigins: {}
    TooManyOriginGroupsPerDistribution: {}
    TooManyCacheBehaviors: {}
    TooManyCookieNamesInWhiteList: {}
    InvalidForwardCookies: {}
    TooManyHeadersInForwardedValues: {}
    InvalidHeadersForS3Origin: {}
    TooManyCertificates: {}
    InvalidLocationCode: {}
    InvalidGeoRestrictionParameter: {}
    InvalidProtocolSettings: {}
    InvalidTTLOrder: {}
    InvalidWebACLId: {}
    TooManyOriginCustomHeaders: {}
    TooManyQueryStringParameters: {}
    InvalidQueryStringParameters: {}
    TooManyDistributionsWithLambdaAssociations: {}
    TooManyDistributionsWithSingleFunctionARN: {}
    TooManyLambdaFunctionAssociations: {}
    InvalidLambdaFunctionAssociation: {}
    TooManyDistributionsWithFunctionAssociations: {}
    TooManyFunctionAssociations: {}
    InvalidFunctionAssociation: {}
    InvalidOriginReadTimeout: {}
    InvalidOriginKeepaliveTimeout: {}
    NoSuchFieldLevelEncryptionConfig: {}
    IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior: {}
    TooManyDistributionsAssociatedToFieldLevelEncryptionConfig: {}
    NoSuchCachePolicy: {}
    TooManyDistributionsAssociatedToCachePolicy: {}
    NoSuchOriginRequestPolicy: {}
    TooManyDistributionsAssociatedToOriginRequestPolicy: {}
    TooManyDistributionsAssociatedToKeyGroup: {}
    TooManyKeyGroupsAssociatedToDistribution: {}
    TrustedKeyGroupDoesNotExist: {}
    NoSuchRealtimeLogConfig: {}
    RealtimeLogConfigOwnerMismatch: {}
    CreateDistributionWithTagsResult:
      type: object
      properties:
        Distribution:
          $ref: '#/components/schemas/Distribution'
          description: 'The distribution''s information. '
      description: 'The returned result of the corresponding request. '
    DistributionConfig:
      type: object
      required:
        - CallerReference
        - Origins
        - DefaultCacheBehavior
        - Comment
        - Enabled
      properties:
        CallerReference:
          $ref: '#/components/schemas/string'
          description: '<p>A unique value (for example, a date-time stamp) that ensures that the request can''t be replayed.</p> <p>If the value of <code>CallerReference</code> is new (regardless of the content of the <code>DistributionConfig</code> object), CloudFront creates a new distribution.</p> <p>If <code>CallerReference</code> is a value that you already sent in a previous request to create a distribution, CloudFront returns a <code>DistributionAlreadyExists</code> error.</p>'
        Aliases:
          $ref: '#/components/schemas/Aliases'
          description: 'A complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution.'
        DefaultRootObject:
          $ref: '#/components/schemas/string'
          description: '<p>The object that you want CloudFront to request from your origin (for example, <code>index.html</code>) when a viewer requests the root URL for your distribution (<code>http://www.example.com</code>) instead of an object in your distribution (<code>http://www.example.com/product-description.html</code>). Specifying a default root object avoids exposing the contents of your distribution.</p> <p>Specify only the object name, for example, <code>index.html</code>. Don''t add a <code>/</code> before the object name.</p> <p>If you don''t want to specify a default root object when you create a distribution, include an empty <code>DefaultRootObject</code> element.</p> <p>To delete the default root object from an existing distribution, update the distribution configuration and include an empty <code>DefaultRootObject</code> element.</p> <p>To replace the default root object, update the distribution configuration and specify the new object.</p> <p>For more information about the default root object, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/DefaultRootObject.html">Creating a Default Root Object</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
        Origins:
          $ref: '#/components/schemas/Origins'
          description: 'A complex type that contains information about origins for this distribution. '
        OriginGroups:
          $ref: '#/components/schemas/OriginGroups'
          description: ' A complex type that contains information about origin groups for this distribution.'
        DefaultCacheBehavior:
          $ref: '#/components/schemas/DefaultCacheBehavior'
          description: A complex type that describes the default cache behavior if you don't specify a <code>CacheBehavior</code> element or if files don't match any of the values of <code>PathPattern</code> in <code>CacheBehavior</code> elements. You must create exactly one default cache behavior.
        CacheBehaviors:
          $ref: '#/components/schemas/CacheBehaviors'
          description: 'A complex type that contains zero or more <code>CacheBehavior</code> elements. '
        CustomErrorResponses:
          $ref: '#/components/schemas/CustomErrorResponses'
          description: '<p>A complex type that controls the following:</p> <ul> <li> <p>Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom error messages before returning the response to the viewer.</p> </li> <li> <p>How long CloudFront caches HTTP status codes in the 4xx and 5xx range.</p> </li> </ul> <p>For more information about custom error pages, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html">Customizing Error Responses</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
        Comment:
          $ref: '#/components/schemas/CommentType'
          description: An optional comment to describe the distribution. The comment cannot be longer than 128 characters.
        Logging:
          $ref: '#/components/schemas/LoggingConfig'
          description: '<p>A complex type that controls whether access logs are written for the distribution.</p> <p>For more information about logging, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/AccessLogs.html">Access Logs</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
        PriceClass:
          $ref: '#/components/schemas/PriceClass'
          description: '<p>The price class that corresponds with the maximum price that you want to pay for CloudFront service. If you specify <code>PriceClass_All</code>, CloudFront responds to requests for your objects from all CloudFront edge locations.</p> <p>If you specify a price class other than <code>PriceClass_All</code>, CloudFront serves your objects from the CloudFront edge location that has the lowest latency among the edge locations in your price class. Viewers who are in or near regions that are excluded from your specified price class may encounter slower performance.</p> <p>For more information about price classes, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PriceClass.html">Choosing the Price Class for a CloudFront Distribution</a> in the <i>Amazon CloudFront Developer Guide</i>. For information about CloudFront pricing, including how price classes (such as Price Class 100) map to CloudFront regions, see <a href="http://aws.amazon.com/cloudfront/pricing/">Amazon CloudFront Pricing</a>.</p>'
        Enabled:
          $ref: '#/components/schemas/boolean'
          description: 'From this field, you can enable or disable the selected distribution.'
        ViewerCertificate:
          $ref: '#/components/schemas/ViewerCertificate'
          description: A complex type that determines the distribution’s SSL/TLS configuration for communicating with viewers.
        Restrictions:
          $ref: '#/components/schemas/Restrictions'
          description: A complex type that identifies ways in which you want to restrict distribution of your content.
        WebACLId:
          $ref: '#/components/schemas/string'
          description: '<p>A unique identifier that specifies the WAF web ACL, if any, to associate with this distribution. To specify a web ACL created using the latest version of WAF, use the ACL ARN, for example <code>arn:aws:wafv2:us-east-1:123456789012:global/webacl/ExampleWebACL/473e64fd-f30b-4765-81a0-62ad96dd167a</code>. To specify a web ACL created using WAF Classic, use the ACL ID, for example <code>473e64fd-f30b-4765-81a0-62ad96dd167a</code>.</p> <p>WAF is a web application firewall that lets you monitor the HTTP and HTTPS requests that are forwarded to CloudFront, and lets you control access to your content. Based on conditions that you specify, such as the IP addresses that requests originate from or the values of query strings, CloudFront responds to requests either with the requested content or with an HTTP 403 status code (Forbidden). You can also configure CloudFront to return a custom error page when a request is blocked. For more information about WAF, see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/what-is-aws-waf.html">WAF Developer Guide</a>. </p>'
        HttpVersion:
          $ref: '#/components/schemas/HttpVersion'
          description: '<p>(Optional) Specify the maximum HTTP version that you want viewers to use to communicate with CloudFront. The default value for new web distributions is http2. Viewers that don''t support HTTP/2 automatically use an earlier HTTP version.</p> <p>For viewers and CloudFront to use HTTP/2, viewers must support TLS 1.2 or later, and must support Server Name Identification (SNI).</p> <p>In general, configuring CloudFront to communicate with viewers using HTTP/2 reduces latency. You can improve performance by optimizing for HTTP/2. For more information, do an Internet search for "http/2 optimization." </p>'
        IsIPV6Enabled:
          $ref: '#/components/schemas/boolean'
          description: '<p>If you want CloudFront to respond to IPv6 DNS requests with an IPv6 address for your distribution, specify <code>true</code>. If you specify <code>false</code>, CloudFront responds to IPv6 DNS requests with the DNS response code <code>NOERROR</code> and with no IP addresses. This allows viewers to submit a second request, for an IPv4 address for your distribution. </p> <p>In general, you should enable IPv6 if you have users on IPv6 networks who want to access your content. However, if you''re using signed URLs or signed cookies to restrict access to your content, and if you''re using a custom policy that includes the <code>IpAddress</code> parameter to restrict the IP addresses that can access your content, don''t enable IPv6. If you want to restrict access to some content by IP address and not restrict access to other content (or restrict access but not by IP address), you can create two distributions. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-creating-signed-url-custom-policy.html">Creating a Signed URL Using a Custom Policy</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <p>If you''re using an Route 53 Amazon Web Services Integration alias resource record set to route traffic to your CloudFront distribution, you need to create a second alias resource record set when both of the following are true:</p> <ul> <li> <p>You enable IPv6 for the distribution</p> </li> <li> <p>You''re using alternate domain names in the URLs for your objects</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-to-cloudfront-distribution.html">Routing Traffic to an Amazon CloudFront Web Distribution by Using Your Domain Name</a> in the <i>Route 53 Amazon Web Services Integration Developer Guide</i>.</p> <p>If you created a CNAME resource record set, either with Route 53 Amazon Web Services Integration or with another DNS service, you don''t need to make any changes. A CNAME record will route traffic to your distribution regardless of the IP address format of the viewer request.</p>'
      description: A distribution configuration.
    Tags:
      type: object
      properties:
        Items:
          $ref: '#/components/schemas/TagList'
          description: ' A complex type that contains <code>Tag</code> elements.'
      description: ' A complex type that contains zero or more <code>Tag</code> elements.'
    InvalidTagging: {}
    CreateFieldLevelEncryptionConfigResult:
      type: object
      properties:
        FieldLevelEncryption:
          $ref: '#/components/schemas/FieldLevelEncryption'
          description: Returned when you create a new field-level encryption configuration.
    QueryArgProfileConfig:
      type: object
      required:
        - ForwardWhenQueryArgProfileIsUnknown
      properties:
        ForwardWhenQueryArgProfileIsUnknown:
          $ref: '#/components/schemas/boolean'
          description: 'Flag to set if you want a request to be forwarded to the origin even if the profile specified by the field-level encryption query argument, fle-profile, is unknown.'
        QueryArgProfiles:
          $ref: '#/components/schemas/QueryArgProfiles'
          description: Profiles specified for query argument-profile mapping for field-level encryption.
      description: Configuration for query argument-profile mapping for field-level encryption.
    ContentTypeProfileConfig:
      type: object
      required:
        - ForwardWhenContentTypeIsUnknown
      properties:
        ForwardWhenContentTypeIsUnknown:
          $ref: '#/components/schemas/boolean'
          description: 'The setting in a field-level encryption content type-profile mapping that specifies what to do when an unknown content type is provided for the profile. If true, content is forwarded without being encrypted when the content type is unknown. If false (the default), an error is returned when the content type is unknown. '
        ContentTypeProfiles:
          $ref: '#/components/schemas/ContentTypeProfiles'
          description: 'The configuration for a field-level encryption content type-profile. '
      description: 'The configuration for a field-level encryption content type-profile mapping. '
    NoSuchFieldLevelEncryptionProfile: {}
    FieldLevelEncryptionConfigAlreadyExists: {}
    TooManyFieldLevelEncryptionConfigs: {}
    TooManyFieldLevelEncryptionQueryArgProfiles: {}
    TooManyFieldLevelEncryptionContentTypeProfiles: {}
    QueryArgProfileEmpty: {}
    CreateFieldLevelEncryptionProfileResult:
      type: object
      properties:
        FieldLevelEncryptionProfile:
          $ref: '#/components/schemas/FieldLevelEncryptionProfile'
          description: Returned when you create a new field-level encryption profile.
    EncryptionEntities:
      type: object
      required:
        - Quantity
      properties:
        Quantity:
          $ref: '#/components/schemas/integer'
          description: 'Number of field pattern items in a field-level encryption content type-profile mapping. '
        Items:
          $ref: '#/components/schemas/EncryptionEntityList'
          description: 'An array of field patterns in a field-level encryption content type-profile mapping. '
      description: 'Complex data type for field-level encryption profiles that includes all of the encryption entities. '
    NoSuchPublicKey: {}
    FieldLevelEncryptionProfileAlreadyExists: {}
    FieldLevelEncryptionProfileSizeExceeded: {}
    TooManyFieldLevelEncryptionProfiles: {}
    TooManyFieldLevelEncryptionEncryptionEntities: {}
    TooManyFieldLevelEncryptionFieldPatterns: {}
    CreateFunctionResult:
      type: object
      properties:
        FunctionSummary:
          $ref: '#/components/schemas/FunctionSummary'
          description: Contains configuration information and metadata about a CloudFront function.
    FunctionRuntime:
      type: string
      enum:
        - cloudfront-js-1.0
    TooManyFunctions: {}
    FunctionAlreadyExists: {}
    FunctionSizeLimitExceeded: {}
    UnsupportedOperation: {}
    CreateInvalidationResult:
      type: object
      properties:
        Invalidation:
          $ref: '#/components/schemas/Invalidation'
          description: The invalidation's information.
      description: The returned result of the corresponding request.
    Paths:
      type: object
      required:
        - Quantity
      properties:
        Quantity:
          $ref: '#/components/schemas/integer'
          description: The number of invalidation paths specified for the objects that you want to invalidate.
        Items:
          $ref: '#/components/schemas/PathList'
          description: A complex type that contains a list of the paths that you want to invalidate.
      description: 'A complex type that contains information about the objects that you want to invalidate. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Invalidation.html#invalidation-specifying-objects">Specifying the Objects to Invalidate</a> in the <i>Amazon CloudFront Developer Guide</i>. '
    BatchTooLarge: {}
    TooManyInvalidationsInProgress: {}
    CreateKeyGroupResult:
      type: object
      properties:
        KeyGroup:
          $ref: '#/components/schemas/KeyGroup'
          description: The key group that was just created.
    PublicKeyIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/string'
          - xml:
              name: PublicKey
    KeyGroupAlreadyExists: {}
    TooManyKeyGroups: {}
    TooManyPublicKeysInKeyGroup: {}
    CreateMonitoringSubscriptionResult:
      type: object
      properties:
        MonitoringSubscription:
          $ref: '#/components/schemas/MonitoringSubscription'
          description: A monitoring subscription. This structure contains information about whether additional CloudWatch metrics are enabled for a given CloudFront distribution.
    RealtimeMetricsSubscriptionConfig:
      type: object
      required:
        - RealtimeMetricsSubscriptionStatus
      properties:
        RealtimeMetricsSubscriptionStatus:
          $ref: '#/components/schemas/RealtimeMetricsSubscriptionStatus'
          description: A flag that indicates whether additional CloudWatch metrics are enabled for a given CloudFront distribution.
      description: A subscription configuration for additional CloudWatch metrics.
    CreateOriginRequestPolicyResult:
      type: object
      properties:
        OriginRequestPolicy:
          $ref: '#/components/schemas/OriginRequestPolicy'
          description: An origin request policy.
    OriginRequestPolicyHeadersConfig:
      type: object
      required:
        - HeaderBehavior
      properties:
        HeaderBehavior:
          $ref: '#/components/schemas/OriginRequestPolicyHeaderBehavior'
          description: '<p>Determines whether any HTTP headers are included in requests that CloudFront sends to the origin. Valid values are:</p> <ul> <li> <p> <code>none</code> – HTTP headers are not included in requests that CloudFront sends to the origin. Even when this field is set to <code>none</code>, any headers that are listed in a <code>CachePolicy</code> <i>are</i> included in origin requests.</p> </li> <li> <p> <code>whitelist</code> – The HTTP headers that are listed in the <code>Headers</code> type are included in requests that CloudFront sends to the origin.</p> </li> <li> <p> <code>allViewer</code> – All HTTP headers in viewer requests are included in requests that CloudFront sends to the origin.</p> </li> <li> <p> <code>allViewerAndWhitelistCloudFront</code> – All HTTP headers in viewer requests and the additional CloudFront headers that are listed in the <code>Headers</code> type are included in requests that CloudFront sends to the origin. The additional headers are added by CloudFront.</p> </li> </ul>'
        Headers:
          $ref: '#/components/schemas/Headers'
      description: 'An object that determines whether any HTTP headers (and if so, which headers) are included in requests that CloudFront sends to the origin.'
    OriginRequestPolicyCookiesConfig:
      type: object
      required:
        - CookieBehavior
      properties:
        CookieBehavior:
          $ref: '#/components/schemas/OriginRequestPolicyCookieBehavior'
          description: '<p>Determines whether cookies in viewer requests are included in requests that CloudFront sends to the origin. Valid values are:</p> <ul> <li> <p> <code>none</code> – Cookies in viewer requests are not included in requests that CloudFront sends to the origin. Even when this field is set to <code>none</code>, any cookies that are listed in a <code>CachePolicy</code> <i>are</i> included in origin requests.</p> </li> <li> <p> <code>whitelist</code> – The cookies in viewer requests that are listed in the <code>CookieNames</code> type are included in requests that CloudFront sends to the origin.</p> </li> <li> <p> <code>all</code> – All cookies in viewer requests are included in requests that CloudFront sends to the origin.</p> </li> </ul>'
        Cookies:
          $ref: '#/components/schemas/CookieNames'
      description: 'An object that determines whether any cookies in viewer requests (and if so, which cookies) are included in requests that CloudFront sends to the origin.'
    OriginRequestPolicyQueryStringsConfig:
      type: object
      required:
        - QueryStringBehavior
      properties:
        QueryStringBehavior:
          $ref: '#/components/schemas/OriginRequestPolicyQueryStringBehavior'
          description: '<p>Determines whether any URL query strings in viewer requests are included in requests that CloudFront sends to the origin. Valid values are:</p> <ul> <li> <p> <code>none</code> – Query strings in viewer requests are not included in requests that CloudFront sends to the origin. Even when this field is set to <code>none</code>, any query strings that are listed in a <code>CachePolicy</code> <i>are</i> included in origin requests.</p> </li> <li> <p> <code>whitelist</code> – The query strings in viewer requests that are listed in the <code>QueryStringNames</code> type are included in requests that CloudFront sends to the origin.</p> </li> <li> <p> <code>all</code> – All query strings in viewer requests are included in requests that CloudFront sends to the origin.</p> </li> </ul>'
        QueryStrings:
          $ref: '#/components/schemas/QueryStringNames'
          description: Contains a list of the query strings in viewer requests that are included in requests that CloudFront sends to the origin.
      description: 'An object that determines whether any URL query strings in viewer requests (and if so, which query strings) are included in requests that CloudFront sends to the origin.'
    OriginRequestPolicyAlreadyExists: {}
    TooManyOriginRequestPolicies: {}
    TooManyHeadersInOriginRequestPolicy: {}
    TooManyCookiesInOriginRequestPolicy: {}
    TooManyQueryStringsInOriginRequestPolicy: {}
    CreatePublicKeyResult:
      type: object
      properties:
        PublicKey:
          $ref: '#/components/schemas/PublicKey'
          description: The public key.
    PublicKeyAlreadyExists: {}
    TooManyPublicKeys: {}
    CreateRealtimeLogConfigResult:
      type: object
      properties:
        RealtimeLogConfig:
          $ref: '#/components/schemas/RealtimeLogConfig'
          description: A real-time log configuration.
    EndPoint:
      type: object
      required:
        - StreamType
      properties:
        StreamType:
          $ref: '#/components/schemas/string'
          description: The type of data stream where you are sending real-time log data. The only valid value is <code>Kinesis</code>.
        KinesisStreamConfig:
          $ref: '#/components/schemas/KinesisStreamConfig'
          description: Contains information about the Amazon Kinesis data stream where you are sending real-time log data.
      description: Contains information about the Amazon Kinesis data stream where you are sending real-time log data in a real-time log configuration.
    RealtimeLogConfigAlreadyExists: {}
    TooManyRealtimeLogConfigs: {}
    CreateStreamingDistributionResult:
      type: object
      properties:
        StreamingDistribution:
          $ref: '#/components/schemas/StreamingDistribution'
          description: The streaming distribution's information.
      description: The returned result of the corresponding request.
    S3Origin:
      type: object
      required:
        - DomainName
        - OriginAccessIdentity
      properties:
        DomainName:
          $ref: '#/components/schemas/string'
          description: 'The DNS name of the Amazon S3 origin. '
        OriginAccessIdentity:
          $ref: '#/components/schemas/string'
          description: '<p>The CloudFront origin access identity to associate with the distribution. Use an origin access identity to configure the distribution so that end users can only access objects in an Amazon S3 bucket through CloudFront.</p> <p>If you want end users to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty <code>OriginAccessIdentity</code> element.</p> <p>To delete the origin access identity from an existing distribution, update the distribution configuration and include an empty <code>OriginAccessIdentity</code> element.</p> <p>To replace the origin access identity, update the distribution configuration and specify the new origin access identity.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html">Using an Origin Access Identity to Restrict Access to Your Amazon S3 Content</a> in the <i> Amazon CloudFront Developer Guide</i>.</p>'
      description: A complex type that contains information about the Amazon S3 bucket from which you want CloudFront to get your media files for distribution.
    StreamingLoggingConfig:
      type: object
      required:
        - Enabled
        - Bucket
        - Prefix
      properties:
        Enabled:
          $ref: '#/components/schemas/boolean'
          description: 'Specifies whether you want CloudFront to save access logs to an Amazon S3 bucket. If you don''t want to enable logging when you create a streaming distribution or if you want to disable logging for an existing streaming distribution, specify <code>false</code> for <code>Enabled</code>, and specify <code>empty Bucket</code> and <code>Prefix</code> elements. If you specify <code>false</code> for <code>Enabled</code> but you specify values for <code>Bucket</code> and <code>Prefix</code>, the values are automatically deleted. '
        Bucket:
          $ref: '#/components/schemas/string'
          description: 'The Amazon S3 bucket to store the access logs in, for example, <code>myawslogbucket.s3.amazonaws.com</code>.'
        Prefix:
          $ref: '#/components/schemas/string'
          description: 'An optional string that you want CloudFront to prefix to the access log filenames for this streaming distribution, for example, <code>myprefix/</code>. If you want to enable logging, but you don''t want to specify a prefix, you still must include an empty <code>Prefix</code> element in the <code>Logging</code> element.'
      description: A complex type that controls whether access logs are written for this streaming distribution.
    TrustedSigners:
      type: object
      required:
        - Enabled
        - Quantity
      properties:
        Enabled:
          $ref: '#/components/schemas/boolean'
          description: 'This field is <code>true</code> if any of the accounts have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is <code>false</code>.'
        Quantity:
          $ref: '#/components/schemas/integer'
          description: The number of accounts in the list.
        Items:
          $ref: '#/components/schemas/AwsAccountNumberList'
          description: A list of account identifiers.
      description: A list of accounts whose public keys CloudFront can use to verify the signatures of signed URLs and signed cookies.
    StreamingDistributionAlreadyExists: {}
    TooManyStreamingDistributionCNAMEs: {}
    TooManyStreamingDistributions: {}
    CreateStreamingDistributionWithTagsResult:
      type: object
      properties:
        StreamingDistribution:
          $ref: '#/components/schemas/StreamingDistribution'
          description: 'The streaming distribution''s information. '
      description: 'The returned result of the corresponding request. '
    StreamingDistributionConfig:
      type: object
      required:
        - CallerReference
        - S3Origin
        - Comment
        - TrustedSigners
        - Enabled
      properties:
        CallerReference:
          $ref: '#/components/schemas/string'
          description: '<p>A unique value (for example, a date-time stamp) that ensures that the request can''t be replayed.</p> <p>If the value of <code>CallerReference</code> is new (regardless of the content of the <code>StreamingDistributionConfig</code> object), CloudFront creates a new distribution.</p> <p>If <code>CallerReference</code> is a value that you already sent in a previous request to create a distribution, CloudFront returns a <code>DistributionAlreadyExists</code> error.</p>'
        S3Origin:
          $ref: '#/components/schemas/S3Origin'
          description: 'A complex type that contains information about the Amazon S3 bucket from which you want CloudFront to get your media files for distribution. '
        Aliases:
          $ref: '#/components/schemas/Aliases'
          description: 'A complex type that contains information about CNAMEs (alternate domain names), if any, for this streaming distribution. '
        Comment:
          $ref: '#/components/schemas/string'
          description: 'Any comments you want to include about the streaming distribution. '
        Logging:
          $ref: '#/components/schemas/StreamingLoggingConfig'
          description: 'A complex type that controls whether access logs are written for the streaming distribution. '
        TrustedSigners:
          $ref: '#/components/schemas/TrustedSigners'
          description: 'A complex type that specifies any accounts that you want to permit to create signed URLs for private content. If you want the distribution to use signed URLs, include this element; if you want the distribution to use public URLs, remove this element. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">Serving Private Content through CloudFront</a> in the <i>Amazon CloudFront Developer Guide</i>. '
        PriceClass:
          $ref: '#/components/schemas/PriceClass'
          description: 'A complex type that contains information about price class for this streaming distribution. '
        Enabled:
          $ref: '#/components/schemas/boolean'
          description: Whether the streaming distribution is enabled to accept user requests for content.
      description: The RTMP distribution's configuration information.
    InvalidIfMatchVersion: {}
    PreconditionFailed: {}
    IllegalDelete: {}
    CachePolicyInUse: {}
    NoSuchCloudFrontOriginAccessIdentity: {}
    CloudFrontOriginAccessIdentityInUse: {}
    DistributionNotDisabled: {}
    FieldLevelEncryptionConfigInUse: {}
    FieldLevelEncryptionProfileInUse: {}
    NoSuchFunctionExists: {}
    FunctionInUse: {}
    NoSuchResource: {}
    ResourceInUse: {}
    DeleteMonitoringSubscriptionResult:
      type: object
      properties: {}
    OriginRequestPolicyInUse: {}
    PublicKeyInUse: {}
    RealtimeLogConfigInUse: {}
    StreamingDistributionNotDisabled: {}
    NoSuchStreamingDistribution: {}
    DescribeFunctionResult:
      type: object
      properties:
        FunctionSummary:
          $ref: '#/components/schemas/FunctionSummary'
          description: Contains configuration information and metadata about a CloudFront function.
    GetCachePolicyResult:
      type: object
      properties:
        CachePolicy:
          $ref: '#/components/schemas/CachePolicy'
          description: The cache policy.
    GetCachePolicyConfigResult:
      type: object
      properties:
        CachePolicyConfig:
          $ref: '#/components/schemas/CachePolicyConfig'
          description: The cache policy configuration.
    GetCloudFrontOriginAccessIdentityResult:
      type: object
      properties:
        CloudFrontOriginAccessIdentity:
          $ref: '#/components/schemas/CloudFrontOriginAccessIdentity'
          description: The origin access identity's information.
      description: The returned result of the corresponding request.
    GetCloudFrontOriginAccessIdentityConfigResult:
      type: object
      properties:
        CloudFrontOriginAccessIdentityConfig:
          $ref: '#/components/schemas/CloudFrontOriginAccessIdentityConfig'
          description: 'The origin access identity''s configuration information. '
      description: The returned result of the corresponding request.
    GetDistributionResult:
      type: object
      properties:
        Distribution:
          $ref: '#/components/schemas/Distribution'
          description: The distribution's information.
      description: The returned result of the corresponding request.
    GetDistributionConfigResult:
      type: object
      properties:
        DistributionConfig:
          $ref: '#/components/schemas/DistributionConfig'
          description: The distribution's configuration information.
      description: The returned result of the corresponding request.
    GetFieldLevelEncryptionResult:
      type: object
      properties:
        FieldLevelEncryption:
          $ref: '#/components/schemas/FieldLevelEncryption'
          description: Return the field-level encryption configuration information.
    GetFieldLevelEncryptionConfigResult:
      type: object
      properties:
        FieldLevelEncryptionConfig:
          $ref: '#/components/schemas/FieldLevelEncryptionConfig'
          description: Return the field-level encryption configuration information.
    GetFieldLevelEncryptionProfileResult:
      type: object
      properties:
        FieldLevelEncryptionProfile:
          $ref: '#/components/schemas/FieldLevelEncryptionProfile'
          description: Return the field-level encryption profile information.
    GetFieldLevelEncryptionProfileConfigResult:
      type: object
      properties:
        FieldLevelEncryptionProfileConfig:
          $ref: '#/components/schemas/FieldLevelEncryptionProfileConfig'
          description: Return the field-level encryption profile configuration information.
    GetFunctionResult:
      type: object
      properties:
        FunctionCode:
          $ref: '#/components/schemas/FunctionBlob'
          description: The function code of a CloudFront function.
    GetInvalidationResult:
      type: object
      properties:
        Invalidation:
          $ref: '#/components/schemas/Invalidation'
          description: 'The invalidation''s information. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/InvalidationDatatype.html">Invalidation Complex Type</a>. '
      description: The returned result of the corresponding request.
    NoSuchInvalidation: {}
    GetKeyGroupResult:
      type: object
      properties:
        KeyGroup:
          $ref: '#/components/schemas/KeyGroup'
          description: The key group.
    GetKeyGroupConfigResult:
      type: object
      properties:
        KeyGroupConfig:
          $ref: '#/components/schemas/KeyGroupConfig'
          description: The key group configuration.
    GetMonitoringSubscriptionResult:
      type: object
      properties:
        MonitoringSubscription:
          $ref: '#/components/schemas/MonitoringSubscription'
          description: A monitoring subscription. This structure contains information about whether additional CloudWatch metrics are enabled for a given CloudFront distribution.
    GetOriginRequestPolicyResult:
      type: object
      properties:
        OriginRequestPolicy:
          $ref: '#/components/schemas/OriginRequestPolicy'
          description: The origin request policy.
    GetOriginRequestPolicyConfigResult:
      type: object
      properties:
        OriginRequestPolicyConfig:
          $ref: '#/components/schemas/OriginRequestPolicyConfig'
          description: The origin request policy configuration.
    GetPublicKeyResult:
      type: object
      properties:
        PublicKey:
          $ref: '#/components/schemas/PublicKey'
          description: The public key.
    GetPublicKeyConfigResult:
      type: object
      properties:
        PublicKeyConfig:
          $ref: '#/components/schemas/PublicKeyConfig'
          description: A public key configuration.
    GetRealtimeLogConfigResult:
      type: object
      properties:
        RealtimeLogConfig:
          $ref: '#/components/schemas/RealtimeLogConfig'
          description: A real-time log configuration.
    GetStreamingDistributionResult:
      type: object
      properties:
        StreamingDistribution:
          $ref: '#/components/schemas/StreamingDistribution'
          description: The streaming distribution's information.
      description: The returned result of the corresponding request.
    GetStreamingDistributionConfigResult:
      type: object
      properties:
        StreamingDistributionConfig:
          $ref: '#/components/schemas/StreamingDistributionConfig'
          description: The streaming distribution's configuration information.
      description: The returned result of the corresponding request.
    ListCachePoliciesResult:
      type: object
      properties:
        CachePolicyList:
          $ref: '#/components/schemas/CachePolicyList'
          description: A list of cache policies.
    ListCloudFrontOriginAccessIdentitiesResult:
      type: object
      properties:
        CloudFrontOriginAccessIdentityList:
          $ref: '#/components/schemas/CloudFrontOriginAccessIdentityList'
          description: 'The <code>CloudFrontOriginAccessIdentityList</code> type. '
      description: 'The returned result of the corresponding request. '
    ListConflictingAliasesResult:
      type: object
      properties:
        ConflictingAliasesList:
          $ref: '#/components/schemas/ConflictingAliasesList'
          description: A list of conflicting aliases.
    ListDistributionsResult:
      type: object
      properties:
        DistributionList:
          $ref: '#/components/schemas/DistributionList'
          description: 'The <code>DistributionList</code> type. '
      description: 'The returned result of the corresponding request. '
    ListDistributionsByCachePolicyIdResult:
      type: object
      properties:
        DistributionIdList:
          $ref: '#/components/schemas/DistributionIdList'
          description: A list of distribution IDs.
    ListDistributionsByKeyGroupResult:
      type: object
      properties:
        DistributionIdList:
          $ref: '#/components/schemas/DistributionIdList'
    ListDistributionsByOriginRequestPolicyIdResult:
      type: object
      properties:
        DistributionIdList:
          $ref: '#/components/schemas/DistributionIdList'
          description: A list of distribution IDs.
    ListDistributionsByRealtimeLogConfigResult:
      type: object
      properties:
        DistributionList:
          $ref: '#/components/schemas/DistributionList'
    ListDistributionsByWebACLIdResult:
      type: object
      properties:
        DistributionList:
          $ref: '#/components/schemas/DistributionList'
          description: 'The <code>DistributionList</code> type. '
      description: The response to a request to list the distributions that are associated with a specified WAF web ACL.
    ListFieldLevelEncryptionConfigsResult:
      type: object
      properties:
        FieldLevelEncryptionList:
          $ref: '#/components/schemas/FieldLevelEncryptionList'
          description: Returns a list of all field-level encryption configurations that have been created in CloudFront for this account.
    ListFieldLevelEncryptionProfilesResult:
      type: object
      properties:
        FieldLevelEncryptionProfileList:
          $ref: '#/components/schemas/FieldLevelEncryptionProfileList'
          description: Returns a list of the field-level encryption profiles that have been created in CloudFront for this account.
    ListFunctionsResult:
      type: object
      properties:
        FunctionList:
          $ref: '#/components/schemas/FunctionList'
          description: A list of CloudFront functions.
    ListInvalidationsResult:
      type: object
      properties:
        InvalidationList:
          $ref: '#/components/schemas/InvalidationList'
          description: 'Information about invalidation batches. '
      description: 'The returned result of the corresponding request. '
    ListKeyGroupsResult:
      type: object
      properties:
        KeyGroupList:
          $ref: '#/components/schemas/KeyGroupList'
          description: A list of key groups.
    ListOriginRequestPoliciesResult:
      type: object
      properties:
        OriginRequestPolicyList:
          $ref: '#/components/schemas/OriginRequestPolicyList'
          description: A list of origin request policies.
    ListPublicKeysResult:
      type: object
      properties:
        PublicKeyList:
          $ref: '#/components/schemas/PublicKeyList'
          description: Returns a list of all public keys that have been added to CloudFront for this account.
    ListRealtimeLogConfigsResult:
      type: object
      properties:
        RealtimeLogConfigs:
          $ref: '#/components/schemas/RealtimeLogConfigs'
          description: A list of real-time log configurations.
    ListStreamingDistributionsResult:
      type: object
      properties:
        StreamingDistributionList:
          $ref: '#/components/schemas/StreamingDistributionList'
          description: 'The <code>StreamingDistributionList</code> type. '
      description: 'The returned result of the corresponding request. '
    ListTagsForResourceResult:
      type: object
      required:
        - Tags
      properties:
        Tags:
          $ref: '#/components/schemas/Tags'
          description: ' A complex type that contains zero or more <code>Tag</code> elements.'
      description: ' The returned result of the corresponding request.'
    PublishFunctionResult:
      type: object
      properties:
        FunctionSummary:
          $ref: '#/components/schemas/FunctionSummary'
          description: Contains configuration information and metadata about a CloudFront function.
    TagList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Tag'
          - xml:
              name: Tag
    TestFunctionResult:
      type: object
      properties:
        TestResult:
          $ref: '#/components/schemas/TestResult'
          description: An object that represents the result of running the function with the provided event object.
    TestFunctionFailed: {}
    TagKeyList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/TagKey'
          - xml:
              name: Key
    UpdateCachePolicyResult:
      type: object
      properties:
        CachePolicy:
          $ref: '#/components/schemas/CachePolicy'
          description: A cache policy.
    UpdateCloudFrontOriginAccessIdentityResult:
      type: object
      properties:
        CloudFrontOriginAccessIdentity:
          $ref: '#/components/schemas/CloudFrontOriginAccessIdentity'
          description: The origin access identity's information.
      description: The returned result of the corresponding request.
    UpdateDistributionResult:
      type: object
      properties:
        Distribution:
          $ref: '#/components/schemas/Distribution'
          description: The distribution's information.
      description: The returned result of the corresponding request.
    UpdateFieldLevelEncryptionConfigResult:
      type: object
      properties:
        FieldLevelEncryption:
          $ref: '#/components/schemas/FieldLevelEncryption'
          description: Return the results of updating the configuration.
    UpdateFieldLevelEncryptionProfileResult:
      type: object
      properties:
        FieldLevelEncryptionProfile:
          $ref: '#/components/schemas/FieldLevelEncryptionProfile'
          description: Return the results of updating the profile.
    UpdateFunctionResult:
      type: object
      properties:
        FunctionSummary:
          $ref: '#/components/schemas/FunctionSummary'
          description: Contains configuration information and metadata about a CloudFront function.
    UpdateKeyGroupResult:
      type: object
      properties:
        KeyGroup:
          $ref: '#/components/schemas/KeyGroup'
          description: The key group that was just updated.
    UpdateOriginRequestPolicyResult:
      type: object
      properties:
        OriginRequestPolicy:
          $ref: '#/components/schemas/OriginRequestPolicy'
          description: An origin request policy.
    UpdatePublicKeyResult:
      type: object
      properties:
        PublicKey:
          $ref: '#/components/schemas/PublicKey'
          description: The public key.
    CannotChangeImmutablePublicKeyFields: {}
    UpdateRealtimeLogConfigResult:
      type: object
      properties:
        RealtimeLogConfig:
          $ref: '#/components/schemas/RealtimeLogConfig'
          description: A real-time log configuration.
    UpdateStreamingDistributionResult:
      type: object
      properties:
        StreamingDistribution:
          $ref: '#/components/schemas/StreamingDistribution'
          description: The streaming distribution's information.
      description: The returned result of the corresponding request.
    integer:
      type: integer
    KGKeyPairIdsList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/KGKeyPairIds'
          - xml:
              name: KeyGroup
    ActiveTrustedKeyGroups:
      type: object
      required:
        - Enabled
        - Quantity
      properties:
        Enabled:
          $ref: '#/components/schemas/boolean'
          description: 'This field is <code>true</code> if any of the key groups have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is <code>false</code>.'
        Quantity:
          $ref: '#/components/schemas/integer'
          description: The number of key groups in the list.
        Items:
          $ref: '#/components/schemas/KGKeyPairIdsList'
          description: 'A list of key groups, including the identifiers of the public keys in each key group that CloudFront can use to verify the signatures of signed URLs and signed cookies.'
      description: 'A list of key groups, and the public keys in each key group, that CloudFront can use to verify the signatures of signed URLs and signed cookies.'
    SignerList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Signer'
          - xml:
              name: Signer
    ActiveTrustedSigners:
      type: object
      required:
        - Enabled
        - Quantity
      properties:
        Enabled:
          $ref: '#/components/schemas/boolean'
          description: 'This field is <code>true</code> if any of the accounts in the list have active CloudFront key pairs that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is <code>false</code>.'
        Quantity:
          $ref: '#/components/schemas/integer'
          description: The number of accounts in the list.
        Items:
          $ref: '#/components/schemas/SignerList'
          description: A list of accounts and the identifiers of active CloudFront key pairs in each account that CloudFront can use to verify the signatures of signed URLs and signed cookies.
      description: A list of accounts and the active CloudFront key pairs in each account that CloudFront can use to verify the signatures of signed URLs and signed cookies.
    ICPRecordalStatus:
      type: string
      enum:
        - APPROVED
        - SUSPENDED
        - PENDING
    AliasICPRecordal:
      type: object
      properties:
        CNAME:
          $ref: '#/components/schemas/string'
          description: 'A domain name associated with a distribution. '
        ICPRecordalStatus:
          $ref: '#/components/schemas/ICPRecordalStatus'
          description: '<p>The Internet Content Provider (ICP) recordal status for a CNAME. The ICPRecordalStatus is set to APPROVED for all CNAMEs (aliases) in regions outside of China. </p> <p>The status values returned are the following:</p> <ul> <li> <p> <b>APPROVED</b> indicates that the associated CNAME has a valid ICP recordal number. Multiple CNAMEs can be associated with a distribution, and CNAMEs can correspond to different ICP recordals. To be marked as APPROVED, that is, valid to use with China region, a CNAME must have one ICP recordal number associated with it.</p> </li> <li> <p> <b>SUSPENDED</b> indicates that the associated CNAME does not have a valid ICP recordal number.</p> </li> <li> <p> <b>PENDING</b> indicates that CloudFront can''t determine the ICP recordal status of the CNAME associated with the distribution because there was an error in trying to determine the status. You can try again to see if the error is resolved in which case CloudFront returns an APPROVED or SUSPENDED status.</p> </li> </ul>'
      description: '<p>Amazon Web Services services in China customers must file for an Internet Content Provider (ICP) recordal if they want to serve content publicly on an alternate domain name, also known as a CNAME, that they''ve added to CloudFront. AliasICPRecordal provides the ICP recordal status for CNAMEs associated with distributions. The status is returned in the CloudFront response; you can''t configure it yourself.</p> <p>For more information about ICP recordals, see <a href="https://docs.amazonaws.cn/en_us/aws/latest/userguide/accounts-and-credentials.html"> Signup, Accounts, and Credentials</a> in <i>Getting Started with Amazon Web Services services in China</i>.</p>'
    AliasICPRecordals:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/AliasICPRecordal'
          - xml:
              name: AliasICPRecordal
    AliasList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/string'
          - xml:
              name: CNAME
    MethodsList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Method'
          - xml:
              name: Method
    CachedMethods:
      type: object
      required:
        - Quantity
        - Items
      properties:
        Quantity:
          $ref: '#/components/schemas/integer'
          description: 'The number of HTTP methods for which you want CloudFront to cache responses. Valid values are <code>2</code> (for caching responses to <code>GET</code> and <code>HEAD</code> requests) and <code>3</code> (for caching responses to <code>GET</code>, <code>HEAD</code>, and <code>OPTIONS</code> requests).'
        Items:
          $ref: '#/components/schemas/MethodsList'
          description: A complex type that contains the HTTP methods that you want CloudFront to cache responses to.
      description: '<p>A complex type that controls whether CloudFront caches the response to requests using the specified HTTP methods. There are two choices:</p> <ul> <li> <p>CloudFront caches responses to <code>GET</code> and <code>HEAD</code> requests.</p> </li> <li> <p>CloudFront caches responses to <code>GET</code>, <code>HEAD</code>, and <code>OPTIONS</code> requests.</p> </li> </ul> <p>If you pick the second choice for your Amazon S3 Origin, you may need to forward Access-Control-Request-Method, Access-Control-Request-Headers, and Origin headers for the responses to be cached correctly. </p>'
    AllowedMethods:
      type: object
      required:
        - Quantity
        - Items
      properties:
        Quantity:
          $ref: '#/components/schemas/integer'
          description: 'The number of HTTP methods that you want CloudFront to forward to your origin. Valid values are 2 (for <code>GET</code> and <code>HEAD</code> requests), 3 (for <code>GET</code>, <code>HEAD</code>, and <code>OPTIONS</code> requests) and 7 (for <code>GET, HEAD, OPTIONS, PUT, PATCH, POST</code>, and <code>DELETE</code> requests).'
        Items:
          $ref: '#/components/schemas/MethodsList'
          description: A complex type that contains the HTTP methods that you want CloudFront to process and forward to your origin.
        CachedMethods:
          $ref: '#/components/schemas/CachedMethods'
      description: '<p>A complex type that controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin. There are three choices:</p> <ul> <li> <p>CloudFront forwards only <code>GET</code> and <code>HEAD</code> requests.</p> </li> <li> <p>CloudFront forwards only <code>GET</code>, <code>HEAD</code>, and <code>OPTIONS</code> requests.</p> </li> <li> <p>CloudFront forwards <code>GET, HEAD, OPTIONS, PUT, PATCH, POST</code>, and <code>DELETE</code> requests.</p> </li> </ul> <p>If you pick the third choice, you may need to restrict access to your Amazon S3 bucket or to your custom origin so users can''t perform operations that you don''t want them to. For example, you might not want users to have permissions to delete objects from your origin.</p>'
    AssociateAliasRequest:
      type: object
      title: AssociateAliasRequest
      properties: {}
    AwsAccountNumberList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/string'
          - xml:
              name: AwsAccountNumber
    TrustedKeyGroups:
      type: object
      required:
        - Enabled
        - Quantity
      properties:
        Enabled:
          $ref: '#/components/schemas/boolean'
          description: 'This field is <code>true</code> if any of the key groups in the list have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is <code>false</code>.'
        Quantity:
          $ref: '#/components/schemas/integer'
          description: The number of key groups in the list.
        Items:
          $ref: '#/components/schemas/TrustedKeyGroupIdList'
          description: A list of key groups identifiers.
      description: A list of key groups whose public keys CloudFront can use to verify the signatures of signed URLs and signed cookies.
    ViewerProtocolPolicy:
      type: string
      enum:
        - allow-all
        - https-only
        - redirect-to-https
    LambdaFunctionAssociations:
      type: object
      required:
        - Quantity
      properties:
        Quantity:
          $ref: '#/components/schemas/integer'
          description: The number of Lambda@Edge function associations for this cache behavior.
        Items:
          $ref: '#/components/schemas/LambdaFunctionAssociationList'
          description: ' <b>Optional</b>: A complex type that contains <code>LambdaFunctionAssociation</code> items for this cache behavior. If <code>Quantity</code> is <code>0</code>, you can omit <code>Items</code>.'
      description: '<p>A complex type that specifies a list of Lambda@Edge functions associations for a cache behavior.</p> <p>If you want to invoke one or more Lambda@Edge functions triggered by requests that match the <code>PathPattern</code> of the cache behavior, specify the applicable values for <code>Quantity</code> and <code>Items</code>. Note that there can be up to 4 <code>LambdaFunctionAssociation</code> items in this list (one for each possible value of <code>EventType</code>) and each <code>EventType</code> can be associated with only one function.</p> <p>If you don''t want to invoke any Lambda@Edge functions for the requests that match <code>PathPattern</code>, specify <code>0</code> for <code>Quantity</code> and omit <code>Items</code>. </p>'
    FunctionAssociations:
      type: object
      required:
        - Quantity
      properties:
        Quantity:
          $ref: '#/components/schemas/integer'
          description: The number of CloudFront functions in the list.
        Items:
          $ref: '#/components/schemas/FunctionAssociationList'
          description: The CloudFront functions that are associated with a cache behavior in a CloudFront distribution. CloudFront functions must be published to the <code>LIVE</code> stage to associate them with a cache behavior.
      description: A list of CloudFront functions that are associated with a cache behavior in a CloudFront distribution. CloudFront functions must be published to the <code>LIVE</code> stage to associate them with a cache behavior.
    ForwardedValues:
      type: object
      required:
        - QueryString
        - Cookies
      properties:
        QueryString:
          $ref: '#/components/schemas/boolean'
          description: '<p>This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.</p> <p>If you want to include query strings in the cache key, use a cache policy. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy">Creating cache policies</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <p>If you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy">Creating origin request policies</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <p>Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior and cache based on the query string parameters. CloudFront behavior depends on the value of <code>QueryString</code> and on the values that you specify for <code>QueryStringCacheKeys</code>, if any:</p> <p>If you specify true for <code>QueryString</code> and you don''t specify any values for <code>QueryStringCacheKeys</code>, CloudFront forwards all query string parameters to the origin and caches based on all query string parameters. Depending on how many query string parameters and values you have, this can adversely affect performance because CloudFront must forward more requests to the origin.</p> <p>If you specify true for <code>QueryString</code> and you specify one or more values for <code>QueryStringCacheKeys</code>, CloudFront forwards all query string parameters to the origin, but it only caches based on the query string parameters that you specify.</p> <p>If you specify false for <code>QueryString</code>, CloudFront doesn''t forward any query string parameters to the origin, and doesn''t cache based on query string parameters.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/QueryStringParameters.html">Configuring CloudFront to Cache Based on Query String Parameters</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
        Cookies:
          $ref: '#/components/schemas/CookiePreference'
          description: '<p>This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.</p> <p>If you want to include cookies in the cache key, use a cache policy. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy">Creating cache policies</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <p>If you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy">Creating origin request policies</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <p>A complex type that specifies whether you want CloudFront to forward cookies to the origin and, if so, which ones. For more information about forwarding cookies to the origin, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Cookies.html">How CloudFront Forwards, Caches, and Logs Cookies</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
        Headers:
          $ref: '#/components/schemas/Headers'
          description: '<p>This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.</p> <p>If you want to include headers in the cache key, use a cache policy. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy">Creating cache policies</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <p>If you want to send headers to the origin but not include them in the cache key, use an origin request policy. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy">Creating origin request policies</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <p>A complex type that specifies the <code>Headers</code>, if any, that you want CloudFront to forward to the origin for this cache behavior (whitelisted headers). For the headers that you specify, CloudFront also caches separate versions of a specified object that is based on the header values in viewer requests.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/header-caching.html"> Caching Content Based on Request Headers</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
        QueryStringCacheKeys:
          $ref: '#/components/schemas/QueryStringCacheKeys'
          description: '<p>This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.</p> <p>If you want to include query strings in the cache key, use a cache policy. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy">Creating cache policies</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <p>If you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy">Creating origin request policies</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <p>A complex type that contains information about the query string parameters that you want CloudFront to use for caching for this cache behavior.</p>'
      description: '<p>This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.</p> <p>If you want to include values in the cache key, use a cache policy. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy">Creating cache policies</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <p>If you want to send values to the origin but not include them in the cache key, use an origin request policy. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy">Creating origin request policies</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <p>A complex type that specifies how CloudFront handles query strings, cookies, and HTTP headers.</p>'
    CacheBehavior:
      type: object
      required:
        - PathPattern
        - TargetOriginId
        - ViewerProtocolPolicy
      properties:
        PathPattern:
          $ref: '#/components/schemas/string'
          description: '<p>The pattern (for example, <code>images/*.jpg</code>) that specifies which requests to apply the behavior to. When CloudFront receives a viewer request, the requested path is compared with path patterns in the order in which cache behaviors are listed in the distribution.</p> <note> <p>You can optionally include a slash (<code>/</code>) at the beginning of the path pattern. For example, <code>/images/*.jpg</code>. CloudFront behavior is the same with or without the leading <code>/</code>.</p> </note> <p>The path pattern for the default cache behavior is <code>*</code> and cannot be changed. If the request for an object does not match the path pattern for any cache behaviors, CloudFront applies the behavior in the default cache behavior.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesPathPattern">Path Pattern</a> in the <i> Amazon CloudFront Developer Guide</i>.</p>'
        TargetOriginId:
          $ref: '#/components/schemas/string'
          description: The value of <code>ID</code> for the origin that you want CloudFront to route requests to when they match this cache behavior.
        TrustedSigners:
          $ref: '#/components/schemas/TrustedSigners'
          description: '<important> <p>We recommend using <code>TrustedKeyGroups</code> instead of <code>TrustedSigners</code>.</p> </important> <p>A list of account IDs whose public keys CloudFront can use to validate signed URLs or signed cookies.</p> <p>When a cache behavior contains trusted signers, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with the private key of a CloudFront key pair in the trusted signer’s account. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">Serving private content</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
        TrustedKeyGroups:
          $ref: '#/components/schemas/TrustedKeyGroups'
          description: '<p>A list of key groups that CloudFront can use to validate signed URLs or signed cookies.</p> <p>When a cache behavior contains trusted key groups, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with a private key whose corresponding public key is in the key group. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">Serving private content</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
        ViewerProtocolPolicy:
          $ref: '#/components/schemas/ViewerProtocolPolicy'
          description: '<p>The protocol that viewers can use to access the files in the origin specified by <code>TargetOriginId</code> when a request matches the path pattern in <code>PathPattern</code>. You can specify the following options:</p> <ul> <li> <p> <code>allow-all</code>: Viewers can use HTTP or HTTPS.</p> </li> <li> <p> <code>redirect-to-https</code>: If a viewer submits an HTTP request, CloudFront returns an HTTP status code of 301 (Moved Permanently) to the viewer along with the HTTPS URL. The viewer then resubmits the request using the new URL. </p> </li> <li> <p> <code>https-only</code>: If a viewer sends an HTTP request, CloudFront returns an HTTP status code of 403 (Forbidden). </p> </li> </ul> <p>For more information about requiring the HTTPS protocol, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-viewers-to-cloudfront.html">Requiring HTTPS Between Viewers and CloudFront</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <note> <p>The only way to guarantee that viewers retrieve an object that was fetched from the origin using HTTPS is never to use any other protocol to fetch the object. If you have recently changed from HTTP to HTTPS, we recommend that you clear your objects’ cache because cached objects are protocol agnostic. That means that an edge location will return an object from the cache regardless of whether the current request protocol matches the protocol used previously. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html">Managing Cache Expiration</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> </note>'
        AllowedMethods:
          $ref: '#/components/schemas/AllowedMethods'
        SmoothStreaming:
          $ref: '#/components/schemas/boolean'
          description: 'Indicates whether you want to distribute media files in the Microsoft Smooth Streaming format using the origin that is associated with this cache behavior. If so, specify <code>true</code>; if not, specify <code>false</code>. If you specify <code>true</code> for <code>SmoothStreaming</code>, you can still distribute other content using this cache behavior if the content matches the value of <code>PathPattern</code>. '
        Compress:
          $ref: '#/components/schemas/boolean'
          description: 'Whether you want CloudFront to automatically compress certain files for this cache behavior. If so, specify true; if not, specify false. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/ServingCompressedFiles.html">Serving Compressed Files</a> in the <i>Amazon CloudFront Developer Guide</i>.'
        LambdaFunctionAssociations:
          $ref: '#/components/schemas/LambdaFunctionAssociations'
          description: A complex type that contains zero or more Lambda@Edge function associations for a cache behavior.
        FunctionAssociations:
          $ref: '#/components/schemas/FunctionAssociations'
          description: A list of CloudFront functions that are associated with this cache behavior. CloudFront functions must be published to the <code>LIVE</code> stage to associate them with a cache behavior.
        FieldLevelEncryptionId:
          $ref: '#/components/schemas/string'
          description: The value of <code>ID</code> for the field-level encryption configuration that you want CloudFront to use for encrypting specific fields of data for this cache behavior.
        RealtimeLogConfigArn:
          $ref: '#/components/schemas/string'
          description: 'The Amazon Resource Name (ARN) of the real-time log configuration that is attached to this cache behavior. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html">Real-time logs</a> in the <i>Amazon CloudFront Developer Guide</i>.'
        CachePolicyId:
          $ref: '#/components/schemas/string'
          description: '<p>The unique identifier of the cache policy that is attached to this cache behavior. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy">Creating cache policies</a> or <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html">Using the managed cache policies</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <p>A <code>CacheBehavior</code> must include either a <code>CachePolicyId</code> or <code>ForwardedValues</code>. We recommend that you use a <code>CachePolicyId</code>.</p>'
        OriginRequestPolicyId:
          $ref: '#/components/schemas/string'
          description: 'The unique identifier of the origin request policy that is attached to this cache behavior. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy">Creating origin request policies</a> or <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-origin-request-policies.html">Using the managed origin request policies</a> in the <i>Amazon CloudFront Developer Guide</i>.'
        ForwardedValues:
          allOf:
            - $ref: '#/components/schemas/ForwardedValues'
            - deprecated: true
              description: '<p>This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/working-with-policies.html">Working with policies</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <p>If you want to include values in the cache key, use a cache policy. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy">Creating cache policies</a> or <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html">Using the managed cache policies</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <p>If you want to send values to the origin but not include them in the cache key, use an origin request policy. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy">Creating origin request policies</a> or <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-origin-request-policies.html">Using the managed origin request policies</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <p>A <code>CacheBehavior</code> must include either a <code>CachePolicyId</code> or <code>ForwardedValues</code>. We recommend that you use a <code>CachePolicyId</code>.</p> <p>A complex type that specifies how CloudFront handles query strings, cookies, and HTTP headers.</p>'
        MinTTL:
          allOf:
            - $ref: '#/components/schemas/long'
            - deprecated: true
              description: '<p>This field is deprecated. We recommend that you use the <code>MinTTL</code> field in a cache policy instead of this field. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy">Creating cache policies</a> or <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html">Using the managed cache policies</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <p>The minimum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html"> Managing How Long Content Stays in an Edge Cache (Expiration)</a> in the <i> Amazon CloudFront Developer Guide</i>.</p> <p>You must specify <code>0</code> for <code>MinTTL</code> if you configure CloudFront to forward all headers to your origin (under <code>Headers</code>, if you specify <code>1</code> for <code>Quantity</code> and <code>*</code> for <code>Name</code>).</p>'
        DefaultTTL:
          allOf:
            - $ref: '#/components/schemas/long'
            - deprecated: true
              description: '<p>This field is deprecated. We recommend that you use the <code>DefaultTTL</code> field in a cache policy instead of this field. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy">Creating cache policies</a> or <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html">Using the managed cache policies</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <p>The default amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin does not add HTTP headers such as <code>Cache-Control max-age</code>, <code>Cache-Control s-maxage</code>, and <code>Expires</code> to objects. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html">Managing How Long Content Stays in an Edge Cache (Expiration)</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
        MaxTTL:
          allOf:
            - $ref: '#/components/schemas/long'
            - deprecated: true
              description: '<p>This field is deprecated. We recommend that you use the <code>MaxTTL</code> field in a cache policy instead of this field. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy">Creating cache policies</a> or <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html">Using the managed cache policies</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <p>The maximum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin adds HTTP headers such as <code>Cache-Control max-age</code>, <code>Cache-Control s-maxage</code>, and <code>Expires</code> to objects. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html">Managing How Long Content Stays in an Edge Cache (Expiration)</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
      description: '<p>A complex type that describes how CloudFront processes requests.</p> <p>You must create at least as many cache behaviors (including the default cache behavior) as you have origins if you want CloudFront to serve objects from all of the origins. Each cache behavior specifies the one origin from which you want CloudFront to get objects. If you have two origins and only the default cache behavior, the default cache behavior will cause CloudFront to get objects from one of the origins, but the other origin is never used.</p> <p>For the current quota (formerly known as limit) on the number of cache behaviors that you can add to a distribution, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cloudfront-limits.html">Quotas</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <p>If you don’t want to specify any cache behaviors, include only an empty <code>CacheBehaviors</code> element. Don’t include an empty <code>CacheBehavior</code> element because this is invalid.</p> <p>To delete all cache behaviors in an existing distribution, update the distribution configuration and include only an empty <code>CacheBehaviors</code> element.</p> <p>To add, change, or remove one or more cache behaviors, update the distribution configuration and specify all of the cache behaviors that you want to include in the updated distribution.</p> <p>For more information about cache behaviors, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesCacheBehavior">Cache Behavior Settings</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
    CacheBehaviorList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/CacheBehavior'
          - xml:
              name: CacheBehavior
    timestamp:
      type: string
      format: date-time
    CachePolicyConfig:
      type: object
      required:
        - Name
        - MinTTL
      properties:
        Comment:
          $ref: '#/components/schemas/string'
          description: A comment to describe the cache policy. The comment cannot be longer than 128 characters.
        Name:
          $ref: '#/components/schemas/string'
          description: A unique name to identify the cache policy.
        DefaultTTL:
          $ref: '#/components/schemas/long'
          description: '<p>The default amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated. CloudFront uses this value as the object’s time to live (TTL) only when the origin does <i>not</i> send <code>Cache-Control</code> or <code>Expires</code> headers with the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html">Managing How Long Content Stays in an Edge Cache (Expiration)</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <p>The default value for this field is 86400 seconds (one day). If the value of <code>MinTTL</code> is more than 86400 seconds, then the default value for this field is the same as the value of <code>MinTTL</code>.</p>'
        MaxTTL:
          $ref: '#/components/schemas/long'
          description: '<p>The maximum amount of time, in seconds, that objects stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated. CloudFront uses this value only when the origin sends <code>Cache-Control</code> or <code>Expires</code> headers with the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html">Managing How Long Content Stays in an Edge Cache (Expiration)</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <p>The default value for this field is 31536000 seconds (one year). If the value of <code>MinTTL</code> or <code>DefaultTTL</code> is more than 31536000 seconds, then the default value for this field is the same as the value of <code>DefaultTTL</code>.</p>'
        MinTTL:
          $ref: '#/components/schemas/long'
          description: 'The minimum amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html">Managing How Long Content Stays in an Edge Cache (Expiration)</a> in the <i>Amazon CloudFront Developer Guide</i>.'
        ParametersInCacheKeyAndForwardedToOrigin:
          $ref: '#/components/schemas/ParametersInCacheKeyAndForwardedToOrigin'
          description: 'The HTTP headers, cookies, and URL query strings to include in the cache key. The values included in the cache key are automatically included in requests that CloudFront sends to the origin.'
      description: '<p>A cache policy configuration.</p> <p>This configuration determines the following:</p> <ul> <li> <p>The values that CloudFront includes in the cache key. These values can include HTTP headers, cookies, and URL query strings. CloudFront uses the cache key to find an object in its cache that it can return to the viewer.</p> </li> <li> <p>The default, minimum, and maximum time to live (TTL) values that you want objects to stay in the CloudFront cache.</p> </li> </ul> <p>The headers, cookies, and query strings that are included in the cache key are automatically included in requests that CloudFront sends to the origin. CloudFront sends a request when it can’t find a valid object in its cache that matches the request’s cache key. If you want to send values to the origin but <i>not</i> include them in the cache key, use <code>OriginRequestPolicy</code>.</p>'
    CachePolicy:
      type: object
      required:
        - Id
        - LastModifiedTime
        - CachePolicyConfig
      properties:
        Id:
          $ref: '#/components/schemas/string'
          description: The unique identifier for the cache policy.
        LastModifiedTime:
          $ref: '#/components/schemas/timestamp'
          description: The date and time when the cache policy was last modified.
        CachePolicyConfig:
          $ref: '#/components/schemas/CachePolicyConfig'
          description: The cache policy configuration.
      description: '<p>A cache policy.</p> <p>When it’s attached to a cache behavior, the cache policy determines the following:</p> <ul> <li> <p>The values that CloudFront includes in the cache key. These values can include HTTP headers, cookies, and URL query strings. CloudFront uses the cache key to find an object in its cache that it can return to the viewer.</p> </li> <li> <p>The default, minimum, and maximum time to live (TTL) values that you want objects to stay in the CloudFront cache.</p> </li> </ul> <p>The headers, cookies, and query strings that are included in the cache key are automatically included in requests that CloudFront sends to the origin. CloudFront sends a request when it can’t find a valid object in its cache that matches the request’s cache key. If you want to send values to the origin but <i>not</i> include them in the cache key, use <code>OriginRequestPolicy</code>.</p>'
    CachePolicyCookieBehavior:
      type: string
      enum:
        - none
        - whitelist
        - allExcept
        - all
    CookieNames:
      type: object
      required:
        - Quantity
      properties:
        Quantity:
          $ref: '#/components/schemas/integer'
          description: The number of cookie names in the <code>Items</code> list.
        Items:
          $ref: '#/components/schemas/CookieNameList'
          description: A list of cookie names.
      description: Contains a list of cookie names.
    CachePolicyCookiesConfig:
      type: object
      required:
        - CookieBehavior
      properties:
        CookieBehavior:
          $ref: '#/components/schemas/CachePolicyCookieBehavior'
          description: '<p>Determines whether any cookies in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values are:</p> <ul> <li> <p> <code>none</code> – Cookies in viewer requests are not included in the cache key and are not automatically included in requests that CloudFront sends to the origin. Even when this field is set to <code>none</code>, any cookies that are listed in an <code>OriginRequestPolicy</code> <i>are</i> included in origin requests.</p> </li> <li> <p> <code>whitelist</code> – The cookies in viewer requests that are listed in the <code>CookieNames</code> type are included in the cache key and automatically included in requests that CloudFront sends to the origin.</p> </li> <li> <p> <code>allExcept</code> – All cookies in viewer requests that are <i> <b>not</b> </i> listed in the <code>CookieNames</code> type are included in the cache key and automatically included in requests that CloudFront sends to the origin.</p> </li> <li> <p> <code>all</code> – All cookies in viewer requests are included in the cache key and are automatically included in requests that CloudFront sends to the origin.</p> </li> </ul>'
        Cookies:
          $ref: '#/components/schemas/CookieNames'
      description: 'An object that determines whether any cookies in viewer requests (and if so, which cookies) are included in the cache key and automatically included in requests that CloudFront sends to the origin.'
    CachePolicyHeaderBehavior:
      type: string
      enum:
        - none
        - whitelist
    Headers:
      type: object
      required:
        - Quantity
      properties:
        Quantity:
          $ref: '#/components/schemas/integer'
          description: The number of header names in the <code>Items</code> list.
        Items:
          $ref: '#/components/schemas/HeaderList'
          description: A list of HTTP header names.
      description: Contains a list of HTTP header names.
    CachePolicyHeadersConfig:
      type: object
      required:
        - HeaderBehavior
      properties:
        HeaderBehavior:
          $ref: '#/components/schemas/CachePolicyHeaderBehavior'
          description: '<p>Determines whether any HTTP headers are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values are:</p> <ul> <li> <p> <code>none</code> – HTTP headers are not included in the cache key and are not automatically included in requests that CloudFront sends to the origin. Even when this field is set to <code>none</code>, any headers that are listed in an <code>OriginRequestPolicy</code> <i>are</i> included in origin requests.</p> </li> <li> <p> <code>whitelist</code> – The HTTP headers that are listed in the <code>Headers</code> type are included in the cache key and are automatically included in requests that CloudFront sends to the origin.</p> </li> </ul>'
        Headers:
          $ref: '#/components/schemas/Headers'
      description: 'An object that determines whether any HTTP headers (and if so, which headers) are included in the cache key and automatically included in requests that CloudFront sends to the origin.'
    CachePolicySummaryList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/CachePolicySummary'
          - xml:
              name: CachePolicySummary
    CachePolicyList:
      type: object
      required:
        - MaxItems
        - Quantity
      properties:
        NextMarker:
          $ref: '#/components/schemas/string'
          description: 'If there are more items in the list than are in this response, this element is present. It contains the value that you should use in the <code>Marker</code> field of a subsequent request to continue listing cache policies where you left off.'
        MaxItems:
          $ref: '#/components/schemas/integer'
          description: The maximum number of cache policies requested.
        Quantity:
          $ref: '#/components/schemas/integer'
          description: The total number of cache policies returned in the response.
        Items:
          $ref: '#/components/schemas/CachePolicySummaryList'
          description: Contains the cache policies in the list.
      description: A list of cache policies.
    CachePolicyQueryStringBehavior:
      type: string
      enum:
        - none
        - whitelist
        - allExcept
        - all
    QueryStringNames:
      type: object
      required:
        - Quantity
      properties:
        Quantity:
          $ref: '#/components/schemas/integer'
          description: The number of query string names in the <code>Items</code> list.
        Items:
          $ref: '#/components/schemas/QueryStringNamesList'
          description: A list of query string names.
      description: Contains a list of query string names.
    CachePolicyQueryStringsConfig:
      type: object
      required:
        - QueryStringBehavior
      properties:
        QueryStringBehavior:
          $ref: '#/components/schemas/CachePolicyQueryStringBehavior'
          description: '<p>Determines whether any URL query strings in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values are:</p> <ul> <li> <p> <code>none</code> – Query strings in viewer requests are not included in the cache key and are not automatically included in requests that CloudFront sends to the origin. Even when this field is set to <code>none</code>, any query strings that are listed in an <code>OriginRequestPolicy</code> <i>are</i> included in origin requests.</p> </li> <li> <p> <code>whitelist</code> – The query strings in viewer requests that are listed in the <code>QueryStringNames</code> type are included in the cache key and automatically included in requests that CloudFront sends to the origin.</p> </li> <li> <p> <code>allExcept</code> – All query strings in viewer requests that are <i> <b>not</b> </i> listed in the <code>QueryStringNames</code> type are included in the cache key and automatically included in requests that CloudFront sends to the origin.</p> </li> <li> <p> <code>all</code> – All query strings in viewer requests are included in the cache key and are automatically included in requests that CloudFront sends to the origin.</p> </li> </ul>'
        QueryStrings:
          $ref: '#/components/schemas/QueryStringNames'
          description: 'Contains the specific query strings in viewer requests that either <i> <b>are</b> </i> or <i> <b>are not</b> </i> included in the cache key and automatically included in requests that CloudFront sends to the origin. The behavior depends on whether the <code>QueryStringBehavior</code> field in the <code>CachePolicyQueryStringsConfig</code> type is set to <code>whitelist</code> (the listed query strings <i> <b>are</b> </i> included) or <code>allExcept</code> (the listed query strings <i> <b>are not</b> </i> included, but all other query strings are).'
      description: 'An object that determines whether any URL query strings in viewer requests (and if so, which query strings) are included in the cache key and automatically included in requests that CloudFront sends to the origin.'
    CachePolicyType:
      type: string
      enum:
        - managed
        - custom
    CachePolicySummary:
      type: object
      required:
        - Type
        - CachePolicy
      properties:
        Type:
          $ref: '#/components/schemas/CachePolicyType'
          description: 'The type of cache policy, either <code>managed</code> (created by Amazon Web Services) or <code>custom</code> (created in this account).'
        CachePolicy:
          $ref: '#/components/schemas/CachePolicy'
          description: The cache policy.
      description: Contains a cache policy.
    CertificateSource:
      type: string
      enum:
        - cloudfront
        - iam
        - acm
    CloudFrontOriginAccessIdentityConfig:
      type: object
      required:
        - CallerReference
        - Comment
      properties:
        CallerReference:
          $ref: '#/components/schemas/string'
          description: '<p>A unique value (for example, a date-time stamp) that ensures that the request can''t be replayed.</p> <p>If the value of <code>CallerReference</code> is new (regardless of the content of the <code>CloudFrontOriginAccessIdentityConfig</code> object), a new origin access identity is created.</p> <p>If the <code>CallerReference</code> is a value already sent in a previous identity request, and the content of the <code>CloudFrontOriginAccessIdentityConfig</code> is identical to the original request (ignoring white space), the response includes the same information returned to the original request. </p> <p>If the <code>CallerReference</code> is a value you already sent in a previous request to create an identity, but the content of the <code>CloudFrontOriginAccessIdentityConfig</code> is different from the original request, CloudFront returns a <code>CloudFrontOriginAccessIdentityAlreadyExists</code> error. </p>'
        Comment:
          $ref: '#/components/schemas/string'
          description: A comment to describe the origin access identity. The comment cannot be longer than 128 characters.
      description: 'Origin access identity configuration. Send a <code>GET</code> request to the <code>/<i>CloudFront API version</i>/CloudFront/identity ID/config</code> resource. '
    CloudFrontOriginAccessIdentity:
      type: object
      required:
        - Id
        - S3CanonicalUserId
      properties:
        Id:
          $ref: '#/components/schemas/string'
          description: 'The ID for the origin access identity, for example, <code>E74FTE3AJFJ256A</code>. '
        S3CanonicalUserId:
          $ref: '#/components/schemas/string'
          description: 'The Amazon S3 canonical user ID for the origin access identity, used when giving the origin access identity read permission to an object in Amazon S3. '
        CloudFrontOriginAccessIdentityConfig:
          $ref: '#/components/schemas/CloudFrontOriginAccessIdentityConfig'
          description: 'The current configuration information for the identity. '
      description: CloudFront origin access identity.
    CloudFrontOriginAccessIdentitySummaryList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/CloudFrontOriginAccessIdentitySummary'
          - xml:
              name: CloudFrontOriginAccessIdentitySummary
    CloudFrontOriginAccessIdentityList:
      type: object
      required:
        - Marker
        - MaxItems
        - IsTruncated
        - Quantity
      properties:
        Marker:
          $ref: '#/components/schemas/string'
          description: 'Use this when paginating results to indicate where to begin in your list of origin access identities. The results include identities in the list that occur after the marker. To get the next page of results, set the <code>Marker</code> to the value of the <code>NextMarker</code> from the current page''s response (which is also the ID of the last identity on that page). '
        NextMarker:
          $ref: '#/components/schemas/string'
          description: 'If <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value you can use for the <code>Marker</code> request parameter to continue listing your origin access identities where they left off. '
        MaxItems:
          $ref: '#/components/schemas/integer'
          description: 'The maximum number of origin access identities you want in the response body. '
        IsTruncated:
          $ref: '#/components/schemas/boolean'
          description: 'A flag that indicates whether more origin access identities remain to be listed. If your results were truncated, you can make a follow-up pagination request using the <code>Marker</code> request parameter to retrieve more items in the list.'
        Quantity:
          $ref: '#/components/schemas/integer'
          description: The number of CloudFront origin access identities that were created by the current account.
        Items:
          $ref: '#/components/schemas/CloudFrontOriginAccessIdentitySummaryList'
          description: A complex type that contains one <code>CloudFrontOriginAccessIdentitySummary</code> element for each origin access identity that was created by the current account.
      description: 'Lists the origin access identities for CloudFront.Send a <code>GET</code> request to the <code>/<i>CloudFront API version</i>/origin-access-identity/cloudfront</code> resource. The response includes a <code>CloudFrontOriginAccessIdentityList</code> element with zero or more <code>CloudFrontOriginAccessIdentitySummary</code> child elements. By default, your entire list of origin access identities is returned in one single page. If the list is long, you can paginate it using the <code>MaxItems</code> and <code>Marker</code> parameters.'
    CloudFrontOriginAccessIdentitySummary:
      type: object
      required:
        - Id
        - S3CanonicalUserId
        - Comment
      properties:
        Id:
          $ref: '#/components/schemas/string'
          description: 'The ID for the origin access identity. For example: <code>E74FTE3AJFJ256A</code>.'
        S3CanonicalUserId:
          $ref: '#/components/schemas/string'
          description: 'The Amazon S3 canonical user ID for the origin access identity, which you use when giving the origin access identity read permission to an object in Amazon S3.'
        Comment:
          $ref: '#/components/schemas/string'
          description: 'The comment for this origin access identity, as originally specified when created.'
      description: Summary of the information about a CloudFront origin access identity.
    ConflictingAlias:
      type: object
      properties:
        Alias:
          $ref: '#/components/schemas/string'
          description: An alias (also called a CNAME).
        DistributionId:
          $ref: '#/components/schemas/string'
          description: The (partially hidden) ID of the CloudFront distribution associated with the alias.
        AccountId:
          $ref: '#/components/schemas/string'
          description: The (partially hidden) ID of the Amazon Web Services account that owns the distribution that’s associated with the alias.
      description: 'An alias (also called a CNAME) and the CloudFront distribution and Amazon Web Services account ID that it’s associated with. The distribution and account IDs are partially hidden, which allows you to identify the distributions and accounts that you own, but helps to protect the information of ones that you don’t own.'
    ConflictingAliases:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ConflictingAlias'
          - xml:
              name: ConflictingAlias
    ConflictingAliasesList:
      type: object
      properties:
        NextMarker:
          $ref: '#/components/schemas/string'
          description: 'If there are more items in the list than are in this response, this element is present. It contains the value that you should use in the <code>Marker</code> field of a subsequent request to continue listing conflicting aliases where you left off.'
        MaxItems:
          $ref: '#/components/schemas/integer'
          description: The maximum number of conflicting aliases requested.
        Quantity:
          $ref: '#/components/schemas/integer'
          description: The number of conflicting aliases returned in the response.
        Items:
          $ref: '#/components/schemas/ConflictingAliases'
          description: Contains the conflicting aliases in the list.
      description: 'A list of aliases (also called CNAMEs) and the CloudFront distributions and Amazon Web Services accounts that they are associated with. In the list, the distribution and account IDs are partially hidden, which allows you to identify the distributions and accounts that you own, but helps to protect the information of ones that you don’t own.'
    Format:
      type: string
      enum:
        - URLEncoded
    ContentTypeProfile:
      type: object
      required:
        - Format
        - ContentType
      properties:
        Format:
          $ref: '#/components/schemas/Format'
          description: 'The format for a field-level encryption content type-profile mapping. '
        ProfileId:
          $ref: '#/components/schemas/string'
          description: 'The profile ID for a field-level encryption content type-profile mapping. '
        ContentType:
          $ref: '#/components/schemas/string'
          description: 'The content type for a field-level encryption content type-profile mapping. '
      description: 'A field-level encryption content type profile. '
    ContentTypeProfiles:
      type: object
      required:
        - Quantity
      properties:
        Quantity:
          $ref: '#/components/schemas/integer'
          description: 'The number of field-level encryption content type-profile mappings. '
        Items:
          $ref: '#/components/schemas/ContentTypeProfileList'
          description: 'Items in a field-level encryption content type-profile mapping. '
      description: 'Field-level encryption content type-profile. '
    ContentTypeProfileList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/ContentTypeProfile'
          - xml:
              name: ContentTypeProfile
    CookieNameList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/string'
          - xml:
              name: Name
    ItemSelection:
      type: string
      enum:
        - none
        - whitelist
        - all
    CookiePreference:
      type: object
      required:
        - Forward
      properties:
        Forward:
          $ref: '#/components/schemas/ItemSelection'
          description: '<p>This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.</p> <p>If you want to include cookies in the cache key, use a cache policy. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy">Creating cache policies</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <p>If you want to send cookies to the origin but not include them in the cache key, use origin request policy. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy">Creating origin request policies</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <p>Specifies which cookies to forward to the origin for this cache behavior: all, none, or the list of cookies specified in the <code>WhitelistedNames</code> complex type.</p> <p>Amazon S3 doesn''t process cookies. When the cache behavior is forwarding requests to an Amazon S3 origin, specify none for the <code>Forward</code> element.</p>'
        WhitelistedNames:
          $ref: '#/components/schemas/CookieNames'
          description: '<p>This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.</p> <p>If you want to include cookies in the cache key, use a cache policy. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy">Creating cache policies</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <p>If you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy">Creating origin request policies</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> <p>Required if you specify <code>whitelist</code> for the value of <code>Forward</code>. A complex type that specifies how many different cookies you want CloudFront to forward to the origin for this cache behavior and, if you want to forward selected cookies, the names of those cookies.</p> <p>If you specify <code>all</code> or <code>none</code> for the value of <code>Forward</code>, omit <code>WhitelistedNames</code>. If you change the value of <code>Forward</code> from <code>whitelist</code> to <code>all</code> or <code>none</code> and you don''t delete the <code>WhitelistedNames</code> element and its child elements, CloudFront deletes them automatically.</p> <p>For the current limit on the number of cookie names that you can whitelist for each cache behavior, see <a href="https://docs.aws.amazon.com/general/latest/gr/xrefaws_service_limits.html#limits_cloudfront"> CloudFront Limits</a> in the <i>Amazon Web Services General Reference</i>.</p>'
      description: '<p>This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.</p> <p>If you want to include cookies in the cache key, use <code>CookiesConfig</code> in a cache policy. See <code>CachePolicy</code>.</p> <p>If you want to send cookies to the origin but not include them in the cache key, use <code>CookiesConfig</code> in an origin request policy. See <code>OriginRequestPolicy</code>.</p> <p>A complex type that specifies whether you want CloudFront to forward cookies to the origin and, if so, which ones. For more information about forwarding cookies to the origin, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Cookies.html">Caching Content Based on Cookies</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
    CreateCachePolicyRequest:
      type: object
      required:
        - CachePolicyConfig
      title: CreateCachePolicyRequest
      properties:
        CachePolicyConfig:
          $ref: '#/components/schemas/CachePolicyConfig'
          description: A cache policy configuration.
      xml:
        namespace: 'http://cloudfront.amazonaws.com/doc/2020-05-31/'
    CreateCloudFrontOriginAccessIdentityRequest:
      type: object
      required:
        - CloudFrontOriginAccessIdentityConfig
      title: CreateCloudFrontOriginAccessIdentityRequest
      properties:
        CloudFrontOriginAccessIdentityConfig:
          $ref: '#/components/schemas/CloudFrontOriginAccessIdentityConfig'
          description: The current configuration information for the identity.
      description: 'The request to create a new origin access identity (OAI). An origin access identity is a special CloudFront user that you can associate with Amazon S3 origins, so that you can secure all or just some of your Amazon S3 content. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html"> Restricting Access to Amazon S3 Content by Using an Origin Access Identity</a> in the <i>Amazon CloudFront Developer Guide</i>. '
      xml:
        namespace: 'http://cloudfront.amazonaws.com/doc/2020-05-31/'
    CreateDistributionRequest:
      type: object
      required:
        - DistributionConfig
      title: CreateDistributionRequest
      properties:
        DistributionConfig:
          $ref: '#/components/schemas/DistributionConfig'
          description: The distribution's configuration information.
      description: The request to create a new distribution.
      xml:
        namespace: 'http://cloudfront.amazonaws.com/doc/2020-05-31/'
    Distribution:
      type: object
      required:
        - Id
        - ARN
        - Status
        - LastModifiedTime
        - InProgressInvalidationBatches
        - DomainName
        - DistributionConfig
      properties:
        Id:
          $ref: '#/components/schemas/string'
          description: 'The identifier for the distribution. For example: <code>EDFDVBD632BHDS5</code>. '
        ARN:
          $ref: '#/components/schemas/string'
          description: 'The ARN (Amazon Resource Name) for the distribution. For example: <code>arn:aws:cloudfront::123456789012:distribution/EDFDVBD632BHDS5</code>, where <code>123456789012</code> is your account ID.'
        Status:
          $ref: '#/components/schemas/string'
          description: 'This response element indicates the current status of the distribution. When the status is <code>Deployed</code>, the distribution''s information is fully propagated to all CloudFront edge locations. '
        LastModifiedTime:
          $ref: '#/components/schemas/timestamp'
          description: 'The date and time the distribution was last modified. '
        InProgressInvalidationBatches:
          $ref: '#/components/schemas/integer'
          description: 'The number of invalidation batches currently in progress. '
        DomainName:
          $ref: '#/components/schemas/string'
          description: 'The domain name corresponding to the distribution, for example, <code>d111111abcdef8.cloudfront.net</code>. '
        ActiveTrustedSigners:
          $ref: '#/components/schemas/ActiveTrustedSigners'
          description: <important> <p>We recommend using <code>TrustedKeyGroups</code> instead of <code>TrustedSigners</code>.</p> </important> <p>CloudFront automatically adds this field to the response if you’ve configured a cache behavior in this distribution to serve private content using trusted signers. This field contains a list of account IDs and the active CloudFront key pairs in each account that CloudFront can use to verify the signatures of signed URLs or signed cookies.</p>
        ActiveTrustedKeyGroups:
          $ref: '#/components/schemas/ActiveTrustedKeyGroups'
          description: CloudFront automatically adds this field to the response if you’ve configured a cache behavior in this distribution to serve private content using key groups. This field contains a list of key groups and the public keys in each key group that CloudFront can use to verify the signatures of signed URLs or signed cookies.
        DistributionConfig:
          $ref: '#/components/schemas/DistributionConfig'
          description: The current configuration information for the distribution. Send a <code>GET</code> request to the <code>/<i>CloudFront API version</i>/distribution ID/config</code> resource.
        AliasICPRecordals:
          $ref: '#/components/schemas/AliasICPRecordals'
          description: '<p>Amazon Web Services services in China customers must file for an Internet Content Provider (ICP) recordal if they want to serve content publicly on an alternate domain name, also known as a CNAME, that they''ve added to CloudFront. AliasICPRecordal provides the ICP recordal status for CNAMEs associated with distributions.</p> <p>For more information about ICP recordals, see <a href="https://docs.amazonaws.cn/en_us/aws/latest/userguide/accounts-and-credentials.html"> Signup, Accounts, and Credentials</a> in <i>Getting Started with Amazon Web Services services in China</i>.</p>'
      description: 'A distribution tells CloudFront where you want content to be delivered from, and the details about how to track and manage content delivery.'
    DistributionConfigWithTags:
      type: object
      required:
        - DistributionConfig
        - Tags
      properties:
        DistributionConfig:
          $ref: '#/components/schemas/DistributionConfig'
          description: A distribution configuration.
        Tags:
          $ref: '#/components/schemas/Tags'
          description: A complex type that contains zero or more <code>Tag</code> elements.
      description: A distribution Configuration and a list of tags to be associated with the distribution.
    CreateDistributionWithTagsRequest:
      type: object
      required:
        - DistributionConfigWithTags
      title: CreateDistributionWithTagsRequest
      properties:
        DistributionConfigWithTags:
          $ref: '#/components/schemas/DistributionConfigWithTags'
          description: 'The distribution''s configuration information. '
      description: 'The request to create a new distribution with tags. '
      xml:
        namespace: 'http://cloudfront.amazonaws.com/doc/2020-05-31/'
    FieldLevelEncryptionConfig:
      type: object
      required:
        - CallerReference
      properties:
        CallerReference:
          $ref: '#/components/schemas/string'
          description: A unique number that ensures the request can't be replayed.
        Comment:
          $ref: '#/components/schemas/string'
          description: An optional comment about the configuration. The comment cannot be longer than 128 characters.
        QueryArgProfileConfig:
          $ref: '#/components/schemas/QueryArgProfileConfig'
          description: A complex data type that specifies when to forward content if a profile isn't found and the profile that can be provided as a query argument in a request.
        ContentTypeProfileConfig:
          $ref: '#/components/schemas/ContentTypeProfileConfig'
          description: A complex data type that specifies when to forward content if a content type isn't recognized and profiles to use as by default in a request if a query argument doesn't specify a profile to use.
      description: 'A complex data type that includes the profile configurations specified for field-level encryption. '
    CreateFieldLevelEncryptionConfigRequest:
      type: object
      required:
        - FieldLevelEncryptionConfig
      title: CreateFieldLevelEncryptionConfigRequest
      properties:
        FieldLevelEncryptionConfig:
          $ref: '#/components/schemas/FieldLevelEncryptionConfig'
          description: The request to create a new field-level encryption configuration.
      xml:
        namespace: 'http://cloudfront.amazonaws.com/doc/2020-05-31/'
    FieldLevelEncryption:
      type: object
      required:
        - Id
        - LastModifiedTime
        - FieldLevelEncryptionConfig
      properties:
        Id:
          $ref: '#/components/schemas/string'
          description: The configuration ID for a field-level encryption configuration which includes a set of profiles that specify certain selected data fields to be encrypted by specific public keys.
        LastModifiedTime:
          $ref: '#/components/schemas/timestamp'
          description: 'The last time the field-level encryption configuration was changed. '
        FieldLevelEncryptionConfig:
          $ref: '#/components/schemas/FieldLevelEncryptionConfig'
          description: 'A complex data type that includes the profile configurations specified for field-level encryption. '
      description: 'A complex data type that includes the profile configurations and other options specified for field-level encryption. '
    FieldLevelEncryptionProfileConfig:
      type: object
      required:
        - Name
        - CallerReference
        - EncryptionEntities
      properties:
        Name:
          $ref: '#/components/schemas/string'
          description: Profile name for the field-level encryption profile.
        CallerReference:
          $ref: '#/components/schemas/string'
          description: A unique number that ensures that the request can't be replayed.
        Comment:
          $ref: '#/components/schemas/string'
          description: An optional comment for the field-level encryption profile. The comment cannot be longer than 128 characters.
        EncryptionEntities:
          $ref: '#/components/schemas/EncryptionEntities'
          description: 'A complex data type of encryption entities for the field-level encryption profile that include the public key ID, provider, and field patterns for specifying which fields to encrypt with this key.'
      description: A complex data type of profiles for the field-level encryption.
    CreateFieldLevelEncryptionProfileRequest:
      type: object
      required:
        - FieldLevelEncryptionProfileConfig
      title: CreateFieldLevelEncryptionProfileRequest
      properties:
        FieldLevelEncryptionProfileConfig:
          $ref: '#/components/schemas/FieldLevelEncryptionProfileConfig'
          description: The request to create a field-level encryption profile.
      xml:
        namespace: 'http://cloudfront.amazonaws.com/doc/2020-05-31/'
    FieldLevelEncryptionProfile:
      type: object
      required:
        - Id
        - LastModifiedTime
        - FieldLevelEncryptionProfileConfig
      properties:
        Id:
          $ref: '#/components/schemas/string'
          description: The ID for a field-level encryption profile configuration which includes a set of profiles that specify certain selected data fields to be encrypted by specific public keys.
        LastModifiedTime:
          $ref: '#/components/schemas/timestamp'
          description: The last time the field-level encryption profile was updated.
        FieldLevelEncryptionProfileConfig:
          $ref: '#/components/schemas/FieldLevelEncryptionProfileConfig'
          description: A complex data type that includes the profile name and the encryption entities for the field-level encryption profile.
      description: A complex data type for field-level encryption profiles.
    FunctionName:
      type: string
      pattern: '^[a-zA-Z0-9-_]{1,64}$'
      minLength: 1
      maxLength: 64
    FunctionConfig:
      type: object
      required:
        - Comment
        - Runtime
      properties:
        Comment:
          $ref: '#/components/schemas/string'
          description: A comment to describe the function.
        Runtime:
          $ref: '#/components/schemas/FunctionRuntime'
          description: The function’s runtime environment. The only valid value is <code>cloudfront-js-1.0</code>.
      description: Contains configuration information about a CloudFront function.
    FunctionBlob:
      type: string
      minLength: 1
      maxLength: 40960
      format: password
    CreateFunctionRequest:
      type: object
      required:
        - Name
        - FunctionConfig
        - FunctionCode
      title: CreateFunctionRequest
      properties:
        Name:
          $ref: '#/components/schemas/FunctionName'
          description: A name to identify the function.
        FunctionConfig:
          $ref: '#/components/schemas/FunctionConfig'
          description: 'Configuration information about the function, including an optional comment and the function’s runtime.'
        FunctionCode:
          $ref: '#/components/schemas/FunctionBlob'
          description: 'The function code. For more information about writing a CloudFront function, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/writing-function-code.html">Writing function code for CloudFront Functions</a> in the <i>Amazon CloudFront Developer Guide</i>.'
    FunctionSummary:
      type: object
      required:
        - Name
        - FunctionConfig
        - FunctionMetadata
      properties:
        Name:
          $ref: '#/components/schemas/FunctionName'
          description: The name of the CloudFront function.
        Status:
          $ref: '#/components/schemas/string'
          description: The status of the CloudFront function.
        FunctionConfig:
          $ref: '#/components/schemas/FunctionConfig'
          description: Contains configuration information about a CloudFront function.
        FunctionMetadata:
          $ref: '#/components/schemas/FunctionMetadata'
          description: Contains metadata about a CloudFront function.
      description: Contains configuration information and metadata about a CloudFront function.
    InvalidationBatch:
      type: object
      required:
        - Paths
        - CallerReference
      properties:
        Paths:
          $ref: '#/components/schemas/Paths'
          description: 'A complex type that contains information about the objects that you want to invalidate. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Invalidation.html#invalidation-specifying-objects">Specifying the Objects to Invalidate</a> in the <i>Amazon CloudFront Developer Guide</i>. '
        CallerReference:
          $ref: '#/components/schemas/string'
          description: '<p>A value that you specify to uniquely identify an invalidation request. CloudFront uses the value to prevent you from accidentally resubmitting an identical request. Whenever you create a new invalidation request, you must specify a new value for <code>CallerReference</code> and change other values in the request as applicable. One way to ensure that the value of <code>CallerReference</code> is unique is to use a <code>timestamp</code>, for example, <code>20120301090000</code>.</p> <p>If you make a second invalidation request with the same value for <code>CallerReference</code>, and if the rest of the request is the same, CloudFront doesn''t create a new invalidation request. Instead, CloudFront returns information about the invalidation request that you previously created with the same <code>CallerReference</code>.</p> <p>If <code>CallerReference</code> is a value you already sent in a previous invalidation batch request but the content of any <code>Path</code> is different from the original request, CloudFront returns an <code>InvalidationBatchAlreadyExists</code> error.</p>'
      description: An invalidation batch.
    CreateInvalidationRequest:
      type: object
      required:
        - InvalidationBatch
      title: CreateInvalidationRequest
      properties:
        InvalidationBatch:
          $ref: '#/components/schemas/InvalidationBatch'
          description: The batch information for the invalidation.
      description: The request to create an invalidation.
      xml:
        namespace: 'http://cloudfront.amazonaws.com/doc/2020-05-31/'
    Invalidation:
      type: object
      required:
        - Id
        - Status
        - CreateTime
        - InvalidationBatch
      properties:
        Id:
          $ref: '#/components/schemas/string'
          description: 'The identifier for the invalidation request. For example: <code>IDFDVBD632BHDS5</code>.'
        Status:
          $ref: '#/components/schemas/string'
          description: 'The status of the invalidation request. When the invalidation batch is finished, the status is <code>Completed</code>.'
        CreateTime:
          $ref: '#/components/schemas/timestamp'
          description: 'The date and time the invalidation request was first made. '
        InvalidationBatch:
          $ref: '#/components/schemas/InvalidationBatch'
          description: 'The current invalidation information for the batch request. '
      description: 'An invalidation. '
    KeyGroupConfig:
      type: object
      required:
        - Name
        - Items
      properties:
        Name:
          $ref: '#/components/schemas/string'
          description: A name to identify the key group.
        Items:
          $ref: '#/components/schemas/PublicKeyIdList'
          description: A list of the identifiers of the public keys in the key group.
        Comment:
          $ref: '#/components/schemas/string'
          description: A comment to describe the key group. The comment cannot be longer than 128 characters.
      description: '<p>A key group configuration.</p> <p>A key group contains a list of public keys that you can use with <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">CloudFront signed URLs and signed cookies</a>.</p>'
    CreateKeyGroupRequest:
      type: object
      required:
        - KeyGroupConfig
      title: CreateKeyGroupRequest
      properties:
        KeyGroupConfig:
          $ref: '#/components/schemas/KeyGroupConfig'
          description: A key group configuration.
      xml:
        namespace: 'http://cloudfront.amazonaws.com/doc/2020-05-31/'
    KeyGroup:
      type: object
      required:
        - Id
        - LastModifiedTime
        - KeyGroupConfig
      properties:
        Id:
          $ref: '#/components/schemas/string'
          description: The identifier for the key group.
        LastModifiedTime:
          $ref: '#/components/schemas/timestamp'
          description: The date and time when the key group was last modified.
        KeyGroupConfig:
          $ref: '#/components/schemas/KeyGroupConfig'
          description: The key group configuration.
      description: '<p>A key group.</p> <p>A key group contains a list of public keys that you can use with <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">CloudFront signed URLs and signed cookies</a>.</p>'
    MonitoringSubscription:
      type: object
      properties:
        RealtimeMetricsSubscriptionConfig:
          $ref: '#/components/schemas/RealtimeMetricsSubscriptionConfig'
          description: A subscription configuration for additional CloudWatch metrics.
      description: A monitoring subscription. This structure contains information about whether additional CloudWatch metrics are enabled for a given CloudFront distribution.
    CreateMonitoringSubscriptionRequest:
      type: object
      required:
        - MonitoringSubscription
      title: CreateMonitoringSubscriptionRequest
      properties:
        MonitoringSubscription:
          $ref: '#/components/schemas/MonitoringSubscription'
          description: A monitoring subscription. This structure contains information about whether additional CloudWatch metrics are enabled for a given CloudFront distribution.
      xml:
        namespace: 'http://cloudfront.amazonaws.com/doc/2020-05-31/'
    OriginRequestPolicyConfig:
      type: object
      required:
        - Name
        - HeadersConfig
        - CookiesConfig
        - QueryStringsConfig
      properties:
        Comment:
          $ref: '#/components/schemas/string'
          description: A comment to describe the origin request policy. The comment cannot be longer than 128 characters.
        Name:
          $ref: '#/components/schemas/string'
          description: A unique name to identify the origin request policy.
        HeadersConfig:
          $ref: '#/components/schemas/OriginRequestPolicyHeadersConfig'
          description: The HTTP headers to include in origin requests. These can include headers from viewer requests and additional headers added by CloudFront.
        CookiesConfig:
          $ref: '#/components/schemas/OriginRequestPolicyCookiesConfig'
          description: The cookies from viewer requests to include in origin requests.
        QueryStringsConfig:
          $ref: '#/components/schemas/OriginRequestPolicyQueryStringsConfig'
          description: The URL query strings from viewer requests to include in origin requests.
      description: '<p>An origin request policy configuration.</p> <p>This configuration determines the values that CloudFront includes in requests that it sends to the origin. Each request that CloudFront sends to the origin includes the following:</p> <ul> <li> <p>The request body and the URL path (without the domain name) from the viewer request.</p> </li> <li> <p>The headers that CloudFront automatically includes in every origin request, including <code>Host</code>, <code>User-Agent</code>, and <code>X-Amz-Cf-Id</code>.</p> </li> <li> <p>All HTTP headers, cookies, and URL query strings that are specified in the cache policy or the origin request policy. These can include items from the viewer request and, in the case of headers, additional ones that are added by CloudFront.</p> </li> </ul> <p>CloudFront sends a request when it can’t find an object in its cache that matches the request. If you want to send values to the origin and also include them in the cache key, use <code>CachePolicy</code>.</p>'
    CreateOriginRequestPolicyRequest:
      type: object
      required:
        - OriginRequestPolicyConfig
      title: CreateOriginRequestPolicyRequest
      properties:
        OriginRequestPolicyConfig:
          $ref: '#/components/schemas/OriginRequestPolicyConfig'
          description: An origin request policy configuration.
      xml:
        namespace: 'http://cloudfront.amazonaws.com/doc/2020-05-31/'
    OriginRequestPolicy:
      type: object
      required:
        - Id
        - LastModifiedTime
        - OriginRequestPolicyConfig
      properties:
        Id:
          $ref: '#/components/schemas/string'
          description: The unique identifier for the origin request policy.
        LastModifiedTime:
          $ref: '#/components/schemas/timestamp'
          description: The date and time when the origin request policy was last modified.
        OriginRequestPolicyConfig:
          $ref: '#/components/schemas/OriginRequestPolicyConfig'
          description: The origin request policy configuration.
      description: '<p>An origin request policy.</p> <p>When it’s attached to a cache behavior, the origin request policy determines the values that CloudFront includes in requests that it sends to the origin. Each request that CloudFront sends to the origin includes the following:</p> <ul> <li> <p>The request body and the URL path (without the domain name) from the viewer request.</p> </li> <li> <p>The headers that CloudFront automatically includes in every origin request, including <code>Host</code>, <code>User-Agent</code>, and <code>X-Amz-Cf-Id</code>.</p> </li> <li> <p>All HTTP headers, cookies, and URL query strings that are specified in the cache policy or the origin request policy. These can include items from the viewer request and, in the case of headers, additional ones that are added by CloudFront.</p> </li> </ul> <p>CloudFront sends a request when it can’t find an object in its cache that matches the request. If you want to send values to the origin and also include them in the cache key, use <code>CachePolicy</code>.</p>'
    PublicKeyConfig:
      type: object
      required:
        - CallerReference
        - Name
        - EncodedKey
      properties:
        CallerReference:
          $ref: '#/components/schemas/string'
          description: A string included in the request to help make sure that the request can’t be replayed.
        Name:
          $ref: '#/components/schemas/string'
          description: A name to help identify the public key.
        EncodedKey:
          $ref: '#/components/schemas/string'
          description: 'The public key that you can use with <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">signed URLs and signed cookies</a>, or with <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/field-level-encryption.html">field-level encryption</a>.'
        Comment:
          $ref: '#/components/schemas/string'
          description: A comment to describe the public key. The comment cannot be longer than 128 characters.
      description: 'Configuration information about a public key that you can use with <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">signed URLs and signed cookies</a>, or with <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/field-level-encryption.html">field-level encryption</a>.'
    CreatePublicKeyRequest:
      type: object
      required:
        - PublicKeyConfig
      title: CreatePublicKeyRequest
      properties:
        PublicKeyConfig:
          $ref: '#/components/schemas/PublicKeyConfig'
          description: A CloudFront public key configuration.
      xml:
        namespace: 'http://cloudfront.amazonaws.com/doc/2020-05-31/'
    PublicKey:
      type: object
      required:
        - Id
        - CreatedTime
        - PublicKeyConfig
      properties:
        Id:
          $ref: '#/components/schemas/string'
          description: The identifier of the public key.
        CreatedTime:
          $ref: '#/components/schemas/timestamp'
          description: The date and time when the public key was uploaded.
        PublicKeyConfig:
          $ref: '#/components/schemas/PublicKeyConfig'
          description: 'Configuration information about a public key that you can use with <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">signed URLs and signed cookies</a>, or with <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/field-level-encryption.html">field-level encryption</a>.'
      description: 'A public key that you can use with <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">signed URLs and signed cookies</a>, or with <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/field-level-encryption.html">field-level encryption</a>.'
    EndPointList:
      type: array
      items:
        $ref: '#/components/schemas/EndPoint'
    FieldList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/string'
          - xml:
              name: Field
    CreateRealtimeLogConfigRequest:
      type: object
      required:
        - EndPoints
        - Fields
        - Name
        - SamplingRate
      title: CreateRealtimeLogConfigRequest
      properties:
        EndPoints:
          $ref: '#/components/schemas/EndPointList'
          description: Contains information about the Amazon Kinesis data stream where you are sending real-time log data.
        Fields:
          $ref: '#/components/schemas/FieldList'
          description: '<p>A list of fields to include in each real-time log record.</p> <p>For more information about fields, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-fields">Real-time log configuration fields</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
        Name:
          $ref: '#/components/schemas/string'
          description: A unique name to identify this real-time log configuration.
        SamplingRate:
          $ref: '#/components/schemas/long'
          description: 'The sampling rate for this real-time log configuration. The sampling rate determines the percentage of viewer requests that are represented in the real-time log data. You must provide an integer between 1 and 100, inclusive.'
    RealtimeLogConfig:
      type: object
      required:
        - ARN
        - Name
        - SamplingRate
        - EndPoints
        - Fields
      properties:
        ARN:
          $ref: '#/components/schemas/string'
          description: The Amazon Resource Name (ARN) of this real-time log configuration.
        Name:
          $ref: '#/components/schemas/string'
          description: The unique name of this real-time log configuration.
        SamplingRate:
          $ref: '#/components/schemas/long'
          description: 'The sampling rate for this real-time log configuration. The sampling rate determines the percentage of viewer requests that are represented in the real-time log data. The sampling rate is an integer between 1 and 100, inclusive.'
        EndPoints:
          $ref: '#/components/schemas/EndPointList'
          description: Contains information about the Amazon Kinesis data stream where you are sending real-time log data for this real-time log configuration.
        Fields:
          $ref: '#/components/schemas/FieldList'
          description: '<p>A list of fields that are included in each real-time log record. In an API response, the fields are provided in the same order in which they are sent to the Amazon Kinesis data stream.</p> <p>For more information about fields, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-fields">Real-time log configuration fields</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
      description: A real-time log configuration.
    CreateStreamingDistributionRequest:
      type: object
      required:
        - StreamingDistributionConfig
      title: CreateStreamingDistributionRequest
      properties:
        StreamingDistributionConfig:
          $ref: '#/components/schemas/StreamingDistributionConfig'
          description: The streaming distribution's configuration information.
      description: The request to create a new streaming distribution.
      xml:
        namespace: 'http://cloudfront.amazonaws.com/doc/2020-05-31/'
    StreamingDistribution:
      type: object
      required:
        - Id
        - ARN
        - Status
        - DomainName
        - ActiveTrustedSigners
        - StreamingDistributionConfig
      properties:
        Id:
          $ref: '#/components/schemas/string'
          description: 'The identifier for the RTMP distribution. For example: <code>EGTXBD79EXAMPLE</code>.'
        ARN:
          $ref: '#/components/schemas/string'
          description: 'The ARN (Amazon Resource Name) for the distribution. For example: <code>arn:aws:cloudfront::123456789012:distribution/EDFDVBD632BHDS5</code>, where <code>123456789012</code> is your account ID.'
        Status:
          $ref: '#/components/schemas/string'
          description: 'The current status of the RTMP distribution. When the status is <code>Deployed</code>, the distribution''s information is propagated to all CloudFront edge locations.'
        LastModifiedTime:
          $ref: '#/components/schemas/timestamp'
          description: 'The date and time that the distribution was last modified. '
        DomainName:
          $ref: '#/components/schemas/string'
          description: 'The domain name that corresponds to the streaming distribution, for example, <code>s5c39gqb8ow64r.cloudfront.net</code>. '
        ActiveTrustedSigners:
          $ref: '#/components/schemas/ActiveTrustedSigners'
          description: '<p>A complex type that lists the accounts, if any, that you included in the <code>TrustedSigners</code> complex type for this distribution. These are the accounts that you want to allow to create signed URLs for private content.</p> <p>The <code>Signer</code> complex type lists the account number of the trusted signer or <code>self</code> if the signer is the account that created the distribution. The <code>Signer</code> element also includes the IDs of any active CloudFront key pairs that are associated with the trusted signer''s account. If no <code>KeyPairId</code> element appears for a <code>Signer</code>, that signer can''t create signed URLs.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">Serving Private Content through CloudFront</a> in the <i>Amazon CloudFront Developer Guide</i>. </p>'
        StreamingDistributionConfig:
          $ref: '#/components/schemas/StreamingDistributionConfig'
          description: The current configuration information for the RTMP distribution.
      description: 'A streaming distribution tells CloudFront where you want RTMP content to be delivered from, and the details about how to track and manage content delivery.'
    StreamingDistributionConfigWithTags:
      type: object
      required:
        - StreamingDistributionConfig
        - Tags
      properties:
        StreamingDistributionConfig:
          $ref: '#/components/schemas/StreamingDistributionConfig'
          description: A streaming distribution Configuration.
        Tags:
          $ref: '#/components/schemas/Tags'
          description: A complex type that contains zero or more <code>Tag</code> elements.
      description: A streaming distribution Configuration and a list of tags to be associated with the streaming distribution.
    CreateStreamingDistributionWithTagsRequest:
      type: object
      required:
        - StreamingDistributionConfigWithTags
      title: CreateStreamingDistributionWithTagsRequest
      properties:
        StreamingDistributionConfigWithTags:
          $ref: '#/components/schemas/StreamingDistributionConfigWithTags'
          description: ' The streaming distribution''s configuration information. '
      description: The request to create a new streaming distribution with tags.
      xml:
        namespace: 'http://cloudfront.amazonaws.com/doc/2020-05-31/'
    CustomErrorResponse:
      type: object
      required:
        - ErrorCode
      properties:
        ErrorCode:
          $ref: '#/components/schemas/integer'
          description: The HTTP status code for which you want to specify a custom error page and/or a caching duration.
        ResponsePagePath:
          $ref: '#/components/schemas/string'
          description: '<p>The path to the custom error page that you want CloudFront to return to a viewer when your origin returns the HTTP status code specified by <code>ErrorCode</code>, for example, <code>/4xx-errors/403-forbidden.html</code>. If you want to store your objects and your custom error pages in different locations, your distribution must include a cache behavior for which the following is true:</p> <ul> <li> <p>The value of <code>PathPattern</code> matches the path to your custom error messages. For example, suppose you saved custom error pages for 4xx errors in an Amazon S3 bucket in a directory named <code>/4xx-errors</code>. Your distribution must include a cache behavior for which the path pattern routes requests for your custom error pages to that location, for example, <code>/4xx-errors/*</code>. </p> </li> <li> <p>The value of <code>TargetOriginId</code> specifies the value of the <code>ID</code> element for the origin that contains your custom error pages.</p> </li> </ul> <p>If you specify a value for <code>ResponsePagePath</code>, you must also specify a value for <code>ResponseCode</code>.</p> <p>We recommend that you store custom error pages in an Amazon S3 bucket. If you store custom error pages on an HTTP server and the server starts to return 5xx errors, CloudFront can''t get the files that you want to return to viewers because the origin server is unavailable.</p>'
        ResponseCode:
          $ref: '#/components/schemas/string'
          description: '<p>The HTTP status code that you want CloudFront to return to the viewer along with the custom error page. There are a variety of reasons that you might want CloudFront to return a status code different from the status code that your origin returned to CloudFront, for example:</p> <ul> <li> <p>Some Internet devices (some firewalls and corporate proxies, for example) intercept HTTP 4xx and 5xx and prevent the response from being returned to the viewer. If you substitute <code>200</code>, the response typically won''t be intercepted.</p> </li> <li> <p>If you don''t care about distinguishing among different client errors or server errors, you can specify <code>400</code> or <code>500</code> as the <code>ResponseCode</code> for all 4xx or 5xx errors.</p> </li> <li> <p>You might want to return a <code>200</code> status code (OK) and static website so your customers don''t know that your website is down.</p> </li> </ul> <p>If you specify a value for <code>ResponseCode</code>, you must also specify a value for <code>ResponsePagePath</code>.</p>'
        ErrorCachingMinTTL:
          $ref: '#/components/schemas/long'
          description: '<p>The minimum amount of time, in seconds, that you want CloudFront to cache the HTTP status code specified in <code>ErrorCode</code>. When this time period has elapsed, CloudFront queries your origin to see whether the problem that caused the error has been resolved and the requested object is now available.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html">Customizing Error Responses</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
      description: '<p>A complex type that controls:</p> <ul> <li> <p>Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom error messages before returning the response to the viewer. </p> </li> <li> <p>How long CloudFront caches HTTP status codes in the 4xx and 5xx range.</p> </li> </ul> <p>For more information about custom error pages, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html">Customizing Error Responses</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
    CustomErrorResponseList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/CustomErrorResponse'
          - xml:
              name: CustomErrorResponse
    OriginCustomHeadersList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/OriginCustomHeader'
          - xml:
              name: OriginCustomHeader
    CustomHeaders:
      type: object
      required:
        - Quantity
      properties:
        Quantity:
          $ref: '#/components/schemas/integer'
          description: 'The number of custom headers, if any, for this distribution.'
        Items:
          $ref: '#/components/schemas/OriginCustomHeadersList'
          description: ' <b>Optional</b>: A list that contains one <code>OriginCustomHeader</code> element for each custom header that you want CloudFront to forward to the origin. If Quantity is <code>0</code>, omit <code>Items</code>.'
      description: 'A complex type that contains the list of Custom Headers for each origin. '
    OriginProtocolPolicy:
      type: string
      enum:
        - http-only
        - match-viewer
        - https-only
    OriginSslProtocols:
      type: object
      required:
        - Quantity
        - Items
      properties:
        Quantity:
          $ref: '#/components/schemas/integer'
          description: 'The number of SSL/TLS protocols that you want to allow CloudFront to use when establishing an HTTPS connection with this origin. '
        Items:
          $ref: '#/components/schemas/SslProtocolsList'
          description: A list that contains allowed SSL/TLS protocols for this distribution.
      description: 'A complex type that contains information about the SSL/TLS protocols that CloudFront can use when establishing an HTTPS connection with your origin. '
    CustomOriginConfig:
      type: object
      required:
        - HTTPPort
        - HTTPSPort
        - OriginProtocolPolicy
      properties:
        HTTPPort:
          $ref: '#/components/schemas/integer'
          description: The HTTP port that CloudFront uses to connect to the origin. Specify the HTTP port that the origin listens on.
        HTTPSPort:
          $ref: '#/components/schemas/integer'
          description: The HTTPS port that CloudFront uses to connect to the origin. Specify the HTTPS port that the origin listens on.
        OriginProtocolPolicy:
          $ref: '#/components/schemas/OriginProtocolPolicy'
          description: '<p>Specifies the protocol (HTTP or HTTPS) that CloudFront uses to connect to the origin. Valid values are:</p> <ul> <li> <p> <code>http-only</code> – CloudFront always uses HTTP to connect to the origin.</p> </li> <li> <p> <code>match-viewer</code> – CloudFront connects to the origin using the same protocol that the viewer used to connect to CloudFront.</p> </li> <li> <p> <code>https-only</code> – CloudFront always uses HTTPS to connect to the origin.</p> </li> </ul>'
        OriginSslProtocols:
          $ref: '#/components/schemas/OriginSslProtocols'
          description: '<p>Specifies the minimum SSL/TLS protocol that CloudFront uses when connecting to your origin over HTTPS. Valid values include <code>SSLv3</code>, <code>TLSv1</code>, <code>TLSv1.1</code>, and <code>TLSv1.2</code>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesOriginSSLProtocols">Minimum Origin SSL Protocol</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
        OriginReadTimeout:
          $ref: '#/components/schemas/integer'
          description: '<p>Specifies how long, in seconds, CloudFront waits for a response from the origin. This is also known as the <i>origin response timeout</i>. The minimum timeout is 1 second, the maximum is 60 seconds, and the default (if you don’t specify otherwise) is 30 seconds.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesOriginResponseTimeout">Origin Response Timeout</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
        OriginKeepaliveTimeout:
          $ref: '#/components/schemas/integer'
          description: '<p>Specifies how long, in seconds, CloudFront persists its connection to the origin. The minimum timeout is 1 second, the maximum is 60 seconds, and the default (if you don’t specify otherwise) is 5 seconds.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesOriginKeepaliveTimeout">Origin Keep-alive Timeout</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
      description: 'A custom origin. A custom origin is any origin that is <i>not</i> an Amazon S3 bucket, with one exception. An Amazon S3 bucket that is <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html">configured with static website hosting</a> <i>is</i> a custom origin.'
    DeleteCachePolicyRequest:
      type: object
      title: DeleteCachePolicyRequest
      properties: {}
    DeleteCloudFrontOriginAccessIdentityRequest:
      type: object
      title: DeleteCloudFrontOriginAccessIdentityRequest
      properties: {}
      description: Deletes a origin access identity.
    DeleteDistributionRequest:
      type: object
      title: DeleteDistributionRequest
      properties: {}
      description: '<p>This action deletes a web distribution. To delete a web distribution using the CloudFront API, perform the following steps.</p> <p> <b>To delete a web distribution using the CloudFront API:</b> </p> <ol> <li> <p>Disable the web distribution </p> </li> <li> <p>Submit a <code>GET Distribution Config</code> request to get the current configuration and the <code>Etag</code> header for the distribution.</p> </li> <li> <p>Update the XML document that was returned in the response to your <code>GET Distribution Config</code> request to change the value of <code>Enabled</code> to <code>false</code>.</p> </li> <li> <p>Submit a <code>PUT Distribution Config</code> request to update the configuration for your distribution. In the request body, include the XML document that you updated in Step 3. Set the value of the HTTP <code>If-Match</code> header to the value of the <code>ETag</code> header that CloudFront returned when you submitted the <code>GET Distribution Config</code> request in Step 2.</p> </li> <li> <p>Review the response to the <code>PUT Distribution Config</code> request to confirm that the distribution was successfully disabled.</p> </li> <li> <p>Submit a <code>GET Distribution</code> request to confirm that your changes have propagated. When propagation is complete, the value of <code>Status</code> is <code>Deployed</code>.</p> </li> <li> <p>Submit a <code>DELETE Distribution</code> request. Set the value of the HTTP <code>If-Match</code> header to the value of the <code>ETag</code> header that CloudFront returned when you submitted the <code>GET Distribution Config</code> request in Step 6.</p> </li> <li> <p>Review the response to your <code>DELETE Distribution</code> request to confirm that the distribution was successfully deleted.</p> </li> </ol> <p>For information about deleting a distribution using the CloudFront console, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/HowToDeleteDistribution.html">Deleting a Distribution</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
    DeleteFieldLevelEncryptionConfigRequest:
      type: object
      title: DeleteFieldLevelEncryptionConfigRequest
      properties: {}
    DeleteFieldLevelEncryptionProfileRequest:
      type: object
      title: DeleteFieldLevelEncryptionProfileRequest
      properties: {}
    DeleteFunctionRequest:
      type: object
      title: DeleteFunctionRequest
      properties: {}
    DeleteKeyGroupRequest:
      type: object
      title: DeleteKeyGroupRequest
      properties: {}
    DeleteMonitoringSubscriptionRequest:
      type: object
      title: DeleteMonitoringSubscriptionRequest
      properties: {}
    DeleteOriginRequestPolicyRequest:
      type: object
      title: DeleteOriginRequestPolicyRequest
      properties: {}
    DeletePublicKeyRequest:
      type: object
      title: DeletePublicKeyRequest
      properties: {}
    DeleteRealtimeLogConfigRequest:
      type: object
      title: DeleteRealtimeLogConfigRequest
      properties:
        Name:
          $ref: '#/components/schemas/string'
          description: The name of the real-time log configuration to delete.
        ARN:
          $ref: '#/components/schemas/string'
          description: The Amazon Resource Name (ARN) of the real-time log configuration to delete.
    DeleteStreamingDistributionRequest:
      type: object
      title: DeleteStreamingDistributionRequest
      properties: {}
      description: The request to delete a streaming distribution.
    FunctionStage:
      type: string
      enum:
        - DEVELOPMENT
        - LIVE
    DescribeFunctionRequest:
      type: object
      title: DescribeFunctionRequest
      properties: {}
    DistributionIdListSummary:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/string'
          - xml:
              name: DistributionId
    DistributionIdList:
      type: object
      required:
        - Marker
        - MaxItems
        - IsTruncated
        - Quantity
      properties:
        Marker:
          $ref: '#/components/schemas/string'
          description: The value provided in the <code>Marker</code> request field.
        NextMarker:
          $ref: '#/components/schemas/string'
          description: Contains the value that you should use in the <code>Marker</code> field of a subsequent request to continue listing distribution IDs where you left off.
        MaxItems:
          $ref: '#/components/schemas/integer'
          description: The maximum number of distribution IDs requested.
        IsTruncated:
          $ref: '#/components/schemas/boolean'
          description: 'A flag that indicates whether more distribution IDs remain to be listed. If your results were truncated, you can make a subsequent request using the <code>Marker</code> request field to retrieve more distribution IDs in the list.'
        Quantity:
          $ref: '#/components/schemas/integer'
          description: The total number of distribution IDs returned in the response.
        Items:
          $ref: '#/components/schemas/DistributionIdListSummary'
          description: Contains the distribution IDs in the list.
      description: A list of distribution IDs.
    DistributionSummaryList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/DistributionSummary'
          - xml:
              name: DistributionSummary
    DistributionList:
      type: object
      required:
        - Marker
        - MaxItems
        - IsTruncated
        - Quantity
      properties:
        Marker:
          $ref: '#/components/schemas/string'
          description: The value you provided for the <code>Marker</code> request parameter.
        NextMarker:
          $ref: '#/components/schemas/string'
          description: 'If <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value you can use for the <code>Marker</code> request parameter to continue listing your distributions where they left off. '
        MaxItems:
          $ref: '#/components/schemas/integer'
          description: The value you provided for the <code>MaxItems</code> request parameter.
        IsTruncated:
          $ref: '#/components/schemas/boolean'
          description: 'A flag that indicates whether more distributions remain to be listed. If your results were truncated, you can make a follow-up pagination request using the <code>Marker</code> request parameter to retrieve more distributions in the list.'
        Quantity:
          $ref: '#/components/schemas/integer'
          description: The number of distributions that were created by the current account.
        Items:
          $ref: '#/components/schemas/DistributionSummaryList'
          description: A complex type that contains one <code>DistributionSummary</code> element for each distribution that was created by the current account.
      description: A distribution list.
    DistributionSummary:
      type: object
      required:
        - Id
        - ARN
        - Status
        - LastModifiedTime
        - DomainName
        - Aliases
        - Origins
        - DefaultCacheBehavior
        - CacheBehaviors
        - CustomErrorResponses
        - Comment
        - PriceClass
        - Enabled
        - ViewerCertificate
        - Restrictions
        - WebACLId
        - HttpVersion
        - IsIPV6Enabled
      properties:
        Id:
          $ref: '#/components/schemas/string'
          description: 'The identifier for the distribution. For example: <code>EDFDVBD632BHDS5</code>.'
        ARN:
          $ref: '#/components/schemas/string'
          description: 'The ARN (Amazon Resource Name) for the distribution. For example: <code>arn:aws:cloudfront::123456789012:distribution/EDFDVBD632BHDS5</code>, where <code>123456789012</code> is your account ID.'
        Status:
          $ref: '#/components/schemas/string'
          description: 'The current status of the distribution. When the status is <code>Deployed</code>, the distribution''s information is propagated to all CloudFront edge locations.'
        LastModifiedTime:
          $ref: '#/components/schemas/timestamp'
          description: The date and time the distribution was last modified.
        DomainName:
          $ref: '#/components/schemas/string'
          description: 'The domain name that corresponds to the distribution, for example, <code>d111111abcdef8.cloudfront.net</code>.'
        Aliases:
          $ref: '#/components/schemas/Aliases'
          description: 'A complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution.'
        Origins:
          $ref: '#/components/schemas/Origins'
          description: A complex type that contains information about origins for this distribution.
        OriginGroups:
          $ref: '#/components/schemas/OriginGroups'
          description: ' A complex type that contains information about origin groups for this distribution.'
        DefaultCacheBehavior:
          $ref: '#/components/schemas/DefaultCacheBehavior'
          description: A complex type that describes the default cache behavior if you don't specify a <code>CacheBehavior</code> element or if files don't match any of the values of <code>PathPattern</code> in <code>CacheBehavior</code> elements. You must create exactly one default cache behavior.
        CacheBehaviors:
          $ref: '#/components/schemas/CacheBehaviors'
          description: A complex type that contains zero or more <code>CacheBehavior</code> elements.
        CustomErrorResponses:
          $ref: '#/components/schemas/CustomErrorResponses'
          description: A complex type that contains zero or more <code>CustomErrorResponses</code> elements.
        Comment:
          $ref: '#/components/schemas/string'
          description: The comment originally specified when this distribution was created.
        PriceClass:
          $ref: '#/components/schemas/PriceClass'
          description: 'A complex type that contains information about price class for this streaming distribution. '
        Enabled:
          $ref: '#/components/schemas/boolean'
          description: Whether the distribution is enabled to accept user requests for content.
        ViewerCertificate:
          $ref: '#/components/schemas/ViewerCertificate'
          description: A complex type that determines the distribution’s SSL/TLS configuration for communicating with viewers.
        Restrictions:
          $ref: '#/components/schemas/Restrictions'
          description: A complex type that identifies ways in which you want to restrict distribution of your content.
        WebACLId:
          $ref: '#/components/schemas/string'
          description: The Web ACL Id (if any) associated with the distribution.
        HttpVersion:
          $ref: '#/components/schemas/HttpVersion'
          description: ' Specify the maximum HTTP version that you want viewers to use to communicate with CloudFront. The default value for new web distributions is <code>http2</code>. Viewers that don''t support <code>HTTP/2</code> will automatically use an earlier version.'
        IsIPV6Enabled:
          $ref: '#/components/schemas/boolean'
          description: Whether CloudFront responds to IPv6 DNS requests with an IPv6 address for your distribution.
        AliasICPRecordals:
          $ref: '#/components/schemas/AliasICPRecordals'
          description: '<p>Amazon Web Services services in China customers must file for an Internet Content Provider (ICP) recordal if they want to serve content publicly on an alternate domain name, also known as a CNAME, that they''ve added to CloudFront. AliasICPRecordal provides the ICP recordal status for CNAMEs associated with distributions.</p> <p>For more information about ICP recordals, see <a href="https://docs.amazonaws.cn/en_us/aws/latest/userguide/accounts-and-credentials.html"> Signup, Accounts, and Credentials</a> in <i>Getting Started with Amazon Web Services services in China</i>.</p>'
      description: A summary of the information about a CloudFront distribution.
    EncryptionEntityList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/EncryptionEntity'
          - xml:
              name: EncryptionEntity
    FieldPatterns:
      type: object
      required:
        - Quantity
      properties:
        Quantity:
          $ref: '#/components/schemas/integer'
          description: The number of field-level encryption field patterns.
        Items:
          $ref: '#/components/schemas/FieldPatternList'
          description: An array of the field-level encryption field patterns.
      description: A complex data type that includes the field patterns to match for field-level encryption.
    EncryptionEntity:
      type: object
      required:
        - PublicKeyId
        - ProviderId
        - FieldPatterns
      properties:
        PublicKeyId:
          $ref: '#/components/schemas/string'
          description: 'The public key associated with a set of field-level encryption patterns, to be used when encrypting the fields that match the patterns. '
        ProviderId:
          $ref: '#/components/schemas/string'
          description: The provider associated with the public key being used for encryption. This value must also be provided with the private key for applications to be able to decrypt data.
        FieldPatterns:
          $ref: '#/components/schemas/FieldPatterns'
          description: 'Field patterns in a field-level encryption content type profile specify the fields that you want to be encrypted. You can provide the full field name, or any beginning characters followed by a wildcard (*). You can''t overlap field patterns. For example, you can''t have both ABC* and AB*. Note that field patterns are case-sensitive. '
      description: 'Complex data type for field-level encryption profiles that includes the encryption key and field pattern specifications. '
    KinesisStreamConfig:
      type: object
      required:
        - RoleARN
        - StreamARN
      properties:
        RoleARN:
          $ref: '#/components/schemas/string'
          description: '<p>The Amazon Resource Name (ARN) of an Identity and Access Management (IAM) role that CloudFront can use to send real-time log data to your Kinesis data stream.</p> <p>For more information the IAM role, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-iam-role">Real-time log configuration IAM role</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
        StreamARN:
          $ref: '#/components/schemas/string'
          description: The Amazon Resource Name (ARN) of the Kinesis data stream where you are sending real-time log data.
      description: Contains information about the Amazon Kinesis data stream where you are sending real-time log data.
    EventType:
      type: string
      enum:
        - viewer-request
        - viewer-response
        - origin-request
        - origin-response
    FieldLevelEncryptionSummaryList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/FieldLevelEncryptionSummary'
          - xml:
              name: FieldLevelEncryptionSummary
    FieldLevelEncryptionList:
      type: object
      required:
        - MaxItems
        - Quantity
      properties:
        NextMarker:
          $ref: '#/components/schemas/string'
          description: 'If there are more elements to be listed, this element is present and contains the value that you can use for the <code>Marker</code> request parameter to continue listing your configurations where you left off.'
        MaxItems:
          $ref: '#/components/schemas/integer'
          description: 'The maximum number of elements you want in the response body. '
        Quantity:
          $ref: '#/components/schemas/integer'
          description: The number of field-level encryption items.
        Items:
          $ref: '#/components/schemas/FieldLevelEncryptionSummaryList'
          description: An array of field-level encryption items.
      description: List of field-level encrpytion configurations.
    FieldLevelEncryptionProfileSummaryList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/FieldLevelEncryptionProfileSummary'
          - xml:
              name: FieldLevelEncryptionProfileSummary
    FieldLevelEncryptionProfileList:
      type: object
      required:
        - MaxItems
        - Quantity
      properties:
        NextMarker:
          $ref: '#/components/schemas/string'
          description: 'If there are more elements to be listed, this element is present and contains the value that you can use for the <code>Marker</code> request parameter to continue listing your profiles where you left off.'
        MaxItems:
          $ref: '#/components/schemas/integer'
          description: 'The maximum number of field-level encryption profiles you want in the response body. '
        Quantity:
          $ref: '#/components/schemas/integer'
          description: The number of field-level encryption profiles.
        Items:
          $ref: '#/components/schemas/FieldLevelEncryptionProfileSummaryList'
          description: The field-level encryption profile items.
      description: List of field-level encryption profiles.
    FieldLevelEncryptionProfileSummary:
      type: object
      required:
        - Id
        - LastModifiedTime
        - Name
        - EncryptionEntities
      properties:
        Id:
          $ref: '#/components/schemas/string'
          description: ID for the field-level encryption profile summary.
        LastModifiedTime:
          $ref: '#/components/schemas/timestamp'
          description: The time when the the field-level encryption profile summary was last updated.
        Name:
          $ref: '#/components/schemas/string'
          description: Name for the field-level encryption profile summary.
        EncryptionEntities:
          $ref: '#/components/schemas/EncryptionEntities'
          description: 'A complex data type of encryption entities for the field-level encryption profile that include the public key ID, provider, and field patterns for specifying which fields to encrypt with this key.'
        Comment:
          $ref: '#/components/schemas/string'
          description: An optional comment for the field-level encryption profile summary. The comment cannot be longer than 128 characters.
      description: The field-level encryption profile summary.
    FieldLevelEncryptionSummary:
      type: object
      required:
        - Id
        - LastModifiedTime
      properties:
        Id:
          $ref: '#/components/schemas/string'
          description: The unique ID of a field-level encryption item.
        LastModifiedTime:
          $ref: '#/components/schemas/timestamp'
          description: The last time that the summary of field-level encryption items was modified.
        Comment:
          $ref: '#/components/schemas/string'
          description: An optional comment about the field-level encryption item. The comment cannot be longer than 128 characters.
        QueryArgProfileConfig:
          $ref: '#/components/schemas/QueryArgProfileConfig'
          description: ' A summary of a query argument-profile mapping. '
        ContentTypeProfileConfig:
          $ref: '#/components/schemas/ContentTypeProfileConfig'
          description: ' A summary of a content type-profile mapping. '
      description: A summary of a field-level encryption item.
    FieldPatternList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/string'
          - xml:
              name: FieldPattern
    QueryStringCacheKeys:
      type: object
      required:
        - Quantity
      properties:
        Quantity:
          $ref: '#/components/schemas/integer'
          description: The number of <code>whitelisted</code> query string parameters for a cache behavior.
        Items:
          $ref: '#/components/schemas/QueryStringCacheKeysList'
          description: 'A list that contains the query string parameters that you want CloudFront to use as a basis for caching for a cache behavior. If <code>Quantity</code> is 0, you can omit <code>Items</code>. '
      description: '<p>This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.</p> <p>If you want to include query strings in the cache key, use <code>QueryStringsConfig</code> in a cache policy. See <code>CachePolicy</code>.</p> <p>If you want to send query strings to the origin but not include them in the cache key, use <code>QueryStringsConfig</code> in an origin request policy. See <code>OriginRequestPolicy</code>.</p> <p>A complex type that contains information about the query string parameters that you want CloudFront to use for caching for a cache behavior. </p>'
    FunctionARN:
      type: string
      pattern: 'arn:aws:cloudfront::[0-9]{12}:function\/[a-zA-Z0-9-_]{1,64}$'
      maxLength: 108
    FunctionAssociation:
      type: object
      required:
        - FunctionARN
        - EventType
      properties:
        FunctionARN:
          $ref: '#/components/schemas/FunctionARN'
          description: The Amazon Resource Name (ARN) of the function.
        EventType:
          $ref: '#/components/schemas/EventType'
          description: 'The event type of the function, either <code>viewer-request</code> or <code>viewer-response</code>. You cannot use origin-facing event types (<code>origin-request</code> and <code>origin-response</code>) with a CloudFront function.'
      description: A CloudFront function that is associated with a cache behavior in a CloudFront distribution.
    FunctionAssociationList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/FunctionAssociation'
          - xml:
              name: FunctionAssociation
    FunctionEventObject:
      type: string
      maxLength: 40960
      format: password
    FunctionExecutionLogList:
      type: array
      items:
        $ref: '#/components/schemas/string'
    FunctionSummaryList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/FunctionSummary'
          - xml:
              name: FunctionSummary
    FunctionList:
      type: object
      required:
        - MaxItems
        - Quantity
      properties:
        NextMarker:
          $ref: '#/components/schemas/string'
          description: 'If there are more items in the list than are in this response, this element is present. It contains the value that you should use in the <code>Marker</code> field of a subsequent request to continue listing functions where you left off.'
        MaxItems:
          $ref: '#/components/schemas/integer'
          description: The maximum number of functions requested.
        Quantity:
          $ref: '#/components/schemas/integer'
          description: The number of functions returned in the response.
        Items:
          $ref: '#/components/schemas/FunctionSummaryList'
          description: Contains the functions in the list.
      description: A list of CloudFront functions.
    FunctionMetadata:
      type: object
      required:
        - FunctionARN
        - LastModifiedTime
      properties:
        FunctionARN:
          $ref: '#/components/schemas/string'
          description: The Amazon Resource Name (ARN) of the function. The ARN uniquely identifies the function.
        Stage:
          $ref: '#/components/schemas/FunctionStage'
          description: '<p>The stage that the function is in, either <code>DEVELOPMENT</code> or <code>LIVE</code>.</p> <p>When a function is in the <code>DEVELOPMENT</code> stage, you can test the function with <code>TestFunction</code>, and update it with <code>UpdateFunction</code>.</p> <p>When a function is in the <code>LIVE</code> stage, you can attach the function to a distribution’s cache behavior, using the function’s ARN.</p>'
        CreatedTime:
          $ref: '#/components/schemas/timestamp'
          description: The date and time when the function was created.
        LastModifiedTime:
          $ref: '#/components/schemas/timestamp'
          description: The date and time when the function was most recently updated.
      description: Contains metadata about a CloudFront function.
    GeoRestrictionType:
      type: string
      enum:
        - blacklist
        - whitelist
        - none
    LocationList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/string'
          - xml:
              name: Location
    GeoRestriction:
      type: object
      required:
        - RestrictionType
        - Quantity
      properties:
        RestrictionType:
          $ref: '#/components/schemas/GeoRestrictionType'
          description: '<p>The method that you want to use to restrict distribution of your content by country:</p> <ul> <li> <p> <code>none</code>: No geo restriction is enabled, meaning access to content is not restricted by client geo location.</p> </li> <li> <p> <code>blacklist</code>: The <code>Location</code> elements specify the countries in which you don''t want CloudFront to distribute your content.</p> </li> <li> <p> <code>whitelist</code>: The <code>Location</code> elements specify the countries in which you want CloudFront to distribute your content.</p> </li> </ul>'
        Quantity:
          $ref: '#/components/schemas/integer'
          description: 'When geo restriction is <code>enabled</code>, this is the number of countries in your <code>whitelist</code> or <code>blacklist</code>. Otherwise, when it is not enabled, <code>Quantity</code> is <code>0</code>, and you can omit <code>Items</code>.'
        Items:
          $ref: '#/components/schemas/LocationList'
          description: '<p> A complex type that contains a <code>Location</code> element for each country in which you want CloudFront either to distribute your content (<code>whitelist</code>) or not distribute your content (<code>blacklist</code>).</p> <p>The <code>Location</code> element is a two-letter, uppercase country code for a country that you want to include in your <code>blacklist</code> or <code>whitelist</code>. Include one <code>Location</code> element for each country.</p> <p>CloudFront and <code>MaxMind</code> both use <code>ISO 3166</code> country codes. For the current list of countries and the corresponding codes, see <code>ISO 3166-1-alpha-2</code> code on the <i>International Organization for Standardization</i> website. You can also refer to the country list on the CloudFront console, which includes both country names and codes.</p>'
      description: 'A complex type that controls the countries in which your content is distributed. CloudFront determines the location of your users using <code>MaxMind</code> GeoIP databases. '
    GetCachePolicyConfigRequest:
      type: object
      title: GetCachePolicyConfigRequest
      properties: {}
    GetCachePolicyRequest:
      type: object
      title: GetCachePolicyRequest
      properties: {}
    GetCloudFrontOriginAccessIdentityConfigRequest:
      type: object
      title: GetCloudFrontOriginAccessIdentityConfigRequest
      properties: {}
      description: 'The origin access identity''s configuration information. For more information, see <a href="https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_CloudFrontOriginAccessIdentityConfig.html">CloudFrontOriginAccessIdentityConfig</a>.'
    GetCloudFrontOriginAccessIdentityRequest:
      type: object
      title: GetCloudFrontOriginAccessIdentityRequest
      properties: {}
      description: The request to get an origin access identity's information.
    GetDistributionConfigRequest:
      type: object
      title: GetDistributionConfigRequest
      properties: {}
      description: The request to get a distribution configuration.
    GetDistributionRequest:
      type: object
      title: GetDistributionRequest
      properties: {}
      description: The request to get a distribution's information.
    GetFieldLevelEncryptionConfigRequest:
      type: object
      title: GetFieldLevelEncryptionConfigRequest
      properties: {}
    GetFieldLevelEncryptionProfileConfigRequest:
      type: object
      title: GetFieldLevelEncryptionProfileConfigRequest
      properties: {}
    GetFieldLevelEncryptionProfileRequest:
      type: object
      title: GetFieldLevelEncryptionProfileRequest
      properties: {}
    GetFieldLevelEncryptionRequest:
      type: object
      title: GetFieldLevelEncryptionRequest
      properties: {}
    GetFunctionRequest:
      type: object
      title: GetFunctionRequest
      properties: {}
    GetInvalidationRequest:
      type: object
      title: GetInvalidationRequest
      properties: {}
      description: 'The request to get an invalidation''s information. '
    GetKeyGroupConfigRequest:
      type: object
      title: GetKeyGroupConfigRequest
      properties: {}
    GetKeyGroupRequest:
      type: object
      title: GetKeyGroupRequest
      properties: {}
    GetMonitoringSubscriptionRequest:
      type: object
      title: GetMonitoringSubscriptionRequest
      properties: {}
    GetOriginRequestPolicyConfigRequest:
      type: object
      title: GetOriginRequestPolicyConfigRequest
      properties: {}
    GetOriginRequestPolicyRequest:
      type: object
      title: GetOriginRequestPolicyRequest
      properties: {}
    GetPublicKeyConfigRequest:
      type: object
      title: GetPublicKeyConfigRequest
      properties: {}
    GetPublicKeyRequest:
      type: object
      title: GetPublicKeyRequest
      properties: {}
    GetRealtimeLogConfigRequest:
      type: object
      title: GetRealtimeLogConfigRequest
      properties:
        Name:
          $ref: '#/components/schemas/string'
          description: The name of the real-time log configuration to get.
        ARN:
          $ref: '#/components/schemas/string'
          description: The Amazon Resource Name (ARN) of the real-time log configuration to get.
    GetStreamingDistributionConfigRequest:
      type: object
      title: GetStreamingDistributionConfigRequest
      properties: {}
      description: To request to get a streaming distribution configuration.
    GetStreamingDistributionRequest:
      type: object
      title: GetStreamingDistributionRequest
      properties: {}
      description: The request to get a streaming distribution's information.
    HeaderList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/string'
          - xml:
              name: Name
    InvalidationSummaryList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/InvalidationSummary'
          - xml:
              name: InvalidationSummary
    InvalidationList:
      type: object
      required:
        - Marker
        - MaxItems
        - IsTruncated
        - Quantity
      properties:
        Marker:
          $ref: '#/components/schemas/string'
          description: The value that you provided for the <code>Marker</code> request parameter.
        NextMarker:
          $ref: '#/components/schemas/string'
          description: 'If <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value that you can use for the <code>Marker</code> request parameter to continue listing your invalidation batches where they left off.'
        MaxItems:
          $ref: '#/components/schemas/integer'
          description: The value that you provided for the <code>MaxItems</code> request parameter.
        IsTruncated:
          $ref: '#/components/schemas/boolean'
          description: 'A flag that indicates whether more invalidation batch requests remain to be listed. If your results were truncated, you can make a follow-up pagination request using the <code>Marker</code> request parameter to retrieve more invalidation batches in the list.'
        Quantity:
          $ref: '#/components/schemas/integer'
          description: 'The number of invalidation batches that were created by the current account. '
        Items:
          $ref: '#/components/schemas/InvalidationSummaryList'
          description: A complex type that contains one <code>InvalidationSummary</code> element for each invalidation batch created by the current account.
      description: 'The <code>InvalidationList</code> complex type describes the list of invalidation objects. For more information about invalidation, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Invalidation.html">Invalidating Objects (Web Distributions Only)</a> in the <i>Amazon CloudFront Developer Guide</i>.'
    InvalidationSummary:
      type: object
      required:
        - Id
        - CreateTime
        - Status
      properties:
        Id:
          $ref: '#/components/schemas/string'
          description: The unique ID for an invalidation request.
        CreateTime:
          $ref: '#/components/schemas/timestamp'
          description: The time that an invalidation request was created.
        Status:
          $ref: '#/components/schemas/string'
          description: The status of an invalidation request.
      description: A summary of an invalidation request.
    KeyPairIds:
      type: object
      required:
        - Quantity
      properties:
        Quantity:
          $ref: '#/components/schemas/integer'
          description: The number of key pair identifiers in the list.
        Items:
          $ref: '#/components/schemas/KeyPairIdList'
          description: A list of CloudFront key pair identifiers.
      description: A list of CloudFront key pair identifiers.
    KGKeyPairIds:
      type: object
      properties:
        KeyGroupId:
          $ref: '#/components/schemas/string'
          description: The identifier of the key group that contains the public keys.
        KeyPairIds:
          $ref: '#/components/schemas/KeyPairIds'
      description: A list of identifiers for the public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies.
    KeyGroupSummaryList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/KeyGroupSummary'
          - xml:
              name: KeyGroupSummary
    KeyGroupList:
      type: object
      required:
        - MaxItems
        - Quantity
      properties:
        NextMarker:
          $ref: '#/components/schemas/string'
          description: 'If there are more items in the list than are in this response, this element is present. It contains the value that you should use in the <code>Marker</code> field of a subsequent request to continue listing key groups.'
        MaxItems:
          $ref: '#/components/schemas/integer'
          description: The maximum number of key groups requested.
        Quantity:
          $ref: '#/components/schemas/integer'
          description: The number of key groups returned in the response.
        Items:
          $ref: '#/components/schemas/KeyGroupSummaryList'
          description: A list of key groups.
      description: A list of key groups.
    KeyGroupSummary:
      type: object
      required:
        - KeyGroup
      properties:
        KeyGroup:
          $ref: '#/components/schemas/KeyGroup'
          description: A key group.
      description: Contains information about a key group.
    KeyPairIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/string'
          - xml:
              name: KeyPairId
    LambdaFunctionARN:
      type: string
    LambdaFunctionAssociation:
      type: object
      required:
        - LambdaFunctionARN
        - EventType
      properties:
        LambdaFunctionARN:
          $ref: '#/components/schemas/LambdaFunctionARN'
          description: The ARN of the Lambda@Edge function. You must specify the ARN of a function version; you can't specify an alias or $LATEST.
        EventType:
          $ref: '#/components/schemas/EventType'
          description: '<p>Specifies the event type that triggers a Lambda@Edge function invocation. You can specify the following values:</p> <ul> <li> <p> <code>viewer-request</code>: The function executes when CloudFront receives a request from a viewer and before it checks to see whether the requested object is in the edge cache. </p> </li> <li> <p> <code>origin-request</code>: The function executes only when CloudFront sends a request to your origin. When the requested object is in the edge cache, the function doesn''t execute.</p> </li> <li> <p> <code>origin-response</code>: The function executes after CloudFront receives a response from the origin and before it caches the object in the response. When the requested object is in the edge cache, the function doesn''t execute.</p> </li> <li> <p> <code>viewer-response</code>: The function executes before CloudFront returns the requested object to the viewer. The function executes regardless of whether the object was already in the edge cache.</p> <p>If the origin returns an HTTP status code other than HTTP 200 (OK), the function doesn''t execute.</p> </li> </ul>'
        IncludeBody:
          $ref: '#/components/schemas/boolean'
          description: 'A flag that allows a Lambda@Edge function to have read access to the body content. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/lambda-include-body-access.html">Accessing the Request Body by Choosing the Include Body Option</a> in the Amazon CloudFront Developer Guide.'
      description: A complex type that contains a Lambda@Edge function association.
    LambdaFunctionAssociationList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/LambdaFunctionAssociation'
          - xml:
              name: LambdaFunctionAssociation
    ListCachePoliciesRequest:
      type: object
      title: ListCachePoliciesRequest
      properties: {}
    ListCloudFrontOriginAccessIdentitiesRequest:
      type: object
      title: ListCloudFrontOriginAccessIdentitiesRequest
      properties: {}
      description: 'The request to list origin access identities. '
    distributionIdString:
      type: string
      maxLength: 25
    aliasString:
      type: string
      maxLength: 253
    listConflictingAliasesMaxItemsInteger:
      type: integer
      maximum: 100
    ListConflictingAliasesRequest:
      type: object
      title: ListConflictingAliasesRequest
      properties: {}
    ListDistributionsByCachePolicyIdRequest:
      type: object
      title: ListDistributionsByCachePolicyIdRequest
      properties: {}
    ListDistributionsByKeyGroupRequest:
      type: object
      title: ListDistributionsByKeyGroupRequest
      properties: {}
    ListDistributionsByOriginRequestPolicyIdRequest:
      type: object
      title: ListDistributionsByOriginRequestPolicyIdRequest
      properties: {}
    ListDistributionsByRealtimeLogConfigRequest:
      type: object
      title: ListDistributionsByRealtimeLogConfigRequest
      properties:
        Marker:
          $ref: '#/components/schemas/string'
          description: 'Use this field when paginating results to indicate where to begin in your list of distributions. The response includes distributions in the list that occur after the marker. To get the next page of the list, set this field’s value to the value of <code>NextMarker</code> from the current page’s response.'
        MaxItems:
          $ref: '#/components/schemas/string'
          description: The maximum number of distributions that you want in the response.
        RealtimeLogConfigName:
          $ref: '#/components/schemas/string'
          description: The name of the real-time log configuration whose associated distributions you want to list.
        RealtimeLogConfigArn:
          $ref: '#/components/schemas/string'
          description: The Amazon Resource Name (ARN) of the real-time log configuration whose associated distributions you want to list.
    ListDistributionsByWebACLIdRequest:
      type: object
      title: ListDistributionsByWebACLIdRequest
      properties: {}
      description: The request to list distributions that are associated with a specified WAF web ACL.
    ListDistributionsRequest:
      type: object
      title: ListDistributionsRequest
      properties: {}
      description: 'The request to list your distributions. '
    ListFieldLevelEncryptionConfigsRequest:
      type: object
      title: ListFieldLevelEncryptionConfigsRequest
      properties: {}
    ListFieldLevelEncryptionProfilesRequest:
      type: object
      title: ListFieldLevelEncryptionProfilesRequest
      properties: {}
    ListFunctionsRequest:
      type: object
      title: ListFunctionsRequest
      properties: {}
    ListInvalidationsRequest:
      type: object
      title: ListInvalidationsRequest
      properties: {}
      description: 'The request to list invalidations. '
    ListKeyGroupsRequest:
      type: object
      title: ListKeyGroupsRequest
      properties: {}
    OriginRequestPolicyType:
      type: string
      enum:
        - managed
        - custom
    ListOriginRequestPoliciesRequest:
      type: object
      title: ListOriginRequestPoliciesRequest
      properties: {}
    OriginRequestPolicyList:
      type: object
      required:
        - MaxItems
        - Quantity
      properties:
        NextMarker:
          $ref: '#/components/schemas/string'
          description: 'If there are more items in the list than are in this response, this element is present. It contains the value that you should use in the <code>Marker</code> field of a subsequent request to continue listing origin request policies where you left off.'
        MaxItems:
          $ref: '#/components/schemas/integer'
          description: The maximum number of origin request policies requested.
        Quantity:
          $ref: '#/components/schemas/integer'
          description: The total number of origin request policies returned in the response.
        Items:
          $ref: '#/components/schemas/OriginRequestPolicySummaryList'
          description: Contains the origin request policies in the list.
      description: A list of origin request policies.
    ListPublicKeysRequest:
      type: object
      title: ListPublicKeysRequest
      properties: {}
    PublicKeyList:
      type: object
      required:
        - MaxItems
        - Quantity
      properties:
        NextMarker:
          $ref: '#/components/schemas/string'
          description: 'If there are more elements to be listed, this element is present and contains the value that you can use for the <code>Marker</code> request parameter to continue listing your public keys where you left off.'
        MaxItems:
          $ref: '#/components/schemas/integer'
          description: The maximum number of public keys you want in the response.
        Quantity:
          $ref: '#/components/schemas/integer'
          description: The number of public keys in the list.
        Items:
          $ref: '#/components/schemas/PublicKeySummaryList'
          description: A list of public keys.
      description: 'A list of public keys that you can use with <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">signed URLs and signed cookies</a>, or with <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/field-level-encryption.html">field-level encryption</a>.'
    ListRealtimeLogConfigsRequest:
      type: object
      title: ListRealtimeLogConfigsRequest
      properties: {}
    RealtimeLogConfigs:
      type: object
      required:
        - MaxItems
        - IsTruncated
        - Marker
      properties:
        MaxItems:
          $ref: '#/components/schemas/integer'
          description: The maximum number of real-time log configurations requested.
        Items:
          $ref: '#/components/schemas/RealtimeLogConfigList'
          description: Contains the list of real-time log configurations.
        IsTruncated:
          $ref: '#/components/schemas/boolean'
          description: A flag that indicates whether there are more real-time log configurations than are contained in this list.
        Marker:
          $ref: '#/components/schemas/string'
          description: This parameter indicates where this list of real-time log configurations begins. This list includes real-time log configurations that occur after the marker.
        NextMarker:
          $ref: '#/components/schemas/string'
          description: 'If there are more items in the list than are in this response, this element is present. It contains the value that you should use in the <code>Marker</code> field of a subsequent request to continue listing real-time log configurations where you left off. '
      description: A list of real-time log configurations.
    ListStreamingDistributionsRequest:
      type: object
      title: ListStreamingDistributionsRequest
      properties: {}
      description: 'The request to list your streaming distributions. '
    StreamingDistributionList:
      type: object
      required:
        - Marker
        - MaxItems
        - IsTruncated
        - Quantity
      properties:
        Marker:
          $ref: '#/components/schemas/string'
          description: 'The value you provided for the <code>Marker</code> request parameter. '
        NextMarker:
          $ref: '#/components/schemas/string'
          description: 'If <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value you can use for the <code>Marker</code> request parameter to continue listing your RTMP distributions where they left off. '
        MaxItems:
          $ref: '#/components/schemas/integer'
          description: 'The value you provided for the <code>MaxItems</code> request parameter. '
        IsTruncated:
          $ref: '#/components/schemas/boolean'
          description: 'A flag that indicates whether more streaming distributions remain to be listed. If your results were truncated, you can make a follow-up pagination request using the <code>Marker</code> request parameter to retrieve more distributions in the list. '
        Quantity:
          $ref: '#/components/schemas/integer'
          description: 'The number of streaming distributions that were created by the current account. '
        Items:
          $ref: '#/components/schemas/StreamingDistributionSummaryList'
          description: A complex type that contains one <code>StreamingDistributionSummary</code> element for each distribution that was created by the current account.
      description: 'A streaming distribution list. '
    ResourceARN:
      type: string
      pattern: 'arn:aws(-cn)?:cloudfront::[0-9]+:.*'
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
      description: ' The request to list tags for a CloudFront resource.'
    Method:
      type: string
      enum:
        - GET
        - HEAD
        - POST
        - PUT
        - PATCH
        - OPTIONS
        - DELETE
    MinimumProtocolVersion:
      type: string
      enum:
        - SSLv3
        - TLSv1
        - TLSv1_2016
        - TLSv1.1_2016
        - TLSv1.2_2018
        - TLSv1.2_2019
        - TLSv1.2_2021
    S3OriginConfig:
      type: object
      required:
        - OriginAccessIdentity
      properties:
        OriginAccessIdentity:
          $ref: '#/components/schemas/string'
          description: '<p>The CloudFront origin access identity to associate with the origin. Use an origin access identity to configure the origin so that viewers can <i>only</i> access objects in an Amazon S3 bucket through CloudFront. The format of the value is:</p> <p>origin-access-identity/cloudfront/<i>ID-of-origin-access-identity</i> </p> <p>where <code> <i>ID-of-origin-access-identity</i> </code> is the value that CloudFront returned in the <code>ID</code> element when you created the origin access identity.</p> <p>If you want viewers to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty <code>OriginAccessIdentity</code> element.</p> <p>To delete the origin access identity from an existing distribution, update the distribution configuration and include an empty <code>OriginAccessIdentity</code> element.</p> <p>To replace the origin access identity, update the distribution configuration and specify the new origin access identity.</p> <p>For more information about the origin access identity, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">Serving Private Content through CloudFront</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
      description: 'A complex type that contains information about the Amazon S3 origin. If the origin is a custom origin or an S3 bucket that is configured as a website endpoint, use the <code>CustomOriginConfig</code> element instead.'
    OriginShield:
      type: object
      required:
        - Enabled
      properties:
        Enabled:
          $ref: '#/components/schemas/boolean'
          description: '<p>A flag that specifies whether Origin Shield is enabled.</p> <p>When it’s enabled, CloudFront routes all requests through Origin Shield, which can help protect your origin. When it’s disabled, CloudFront might send requests directly to your origin from multiple edge locations or regional edge caches.</p>'
        OriginShieldRegion:
          $ref: '#/components/schemas/OriginShieldRegion'
          description: '<p>The Region for Origin Shield.</p> <p>Specify the Region that has the lowest latency to your origin. To specify a region, use the region code, not the region name. For example, specify the US East (Ohio) region as <code>us-east-2</code>.</p> <p>When you enable CloudFront Origin Shield, you must specify the Region for Origin Shield. For the list of Regions that you can specify, and for help choosing the best Region for your origin, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/origin-shield.html#choose-origin-shield-region">Choosing the Region for Origin Shield</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
      description: '<p>CloudFront Origin Shield.</p> <p>Using Origin Shield can help reduce the load on your origin. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/origin-shield.html">Using Origin Shield</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
    Origin:
      type: object
      required:
        - Id
        - DomainName
      properties:
        Id:
          $ref: '#/components/schemas/string'
          description: <p>A unique identifier for the origin. This value must be unique within the distribution.</p> <p>Use this value to specify the <code>TargetOriginId</code> in a <code>CacheBehavior</code> or <code>DefaultCacheBehavior</code>.</p>
        DomainName:
          $ref: '#/components/schemas/string'
          description: '<p>The domain name for the origin.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesDomainName">Origin Domain Name</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
        OriginPath:
          $ref: '#/components/schemas/string'
          description: '<p>An optional path that CloudFront appends to the origin domain name when CloudFront requests content from the origin.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesOriginPath">Origin Path</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
        CustomHeaders:
          $ref: '#/components/schemas/CustomHeaders'
          description: '<p>A list of HTTP header names and values that CloudFront adds to the requests that it sends to the origin.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/add-origin-custom-headers.html">Adding Custom Headers to Origin Requests</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
        S3OriginConfig:
          $ref: '#/components/schemas/S3OriginConfig'
          description: 'Use this type to specify an origin that is an Amazon S3 bucket that is not configured with static website hosting. To specify any other type of origin, including an Amazon S3 bucket that is configured with static website hosting, use the <code>CustomOriginConfig</code> type instead.'
        CustomOriginConfig:
          $ref: '#/components/schemas/CustomOriginConfig'
          description: 'Use this type to specify an origin that is not an Amazon S3 bucket, with one exception. If the Amazon S3 bucket is configured with static website hosting, use this type. If the Amazon S3 bucket is not configured with static website hosting, use the <code>S3OriginConfig</code> type instead.'
        ConnectionAttempts:
          $ref: '#/components/schemas/integer'
          description: '<p>The number of times that CloudFront attempts to connect to the origin. The minimum number is 1, the maximum is 3, and the default (if you don’t specify otherwise) is 3.</p> <p>For a custom origin (including an Amazon S3 bucket that’s configured with static website hosting), this value also specifies the number of times that CloudFront attempts to get a response from the origin, in the case of an <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesOriginResponseTimeout">Origin Response Timeout</a>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#origin-connection-attempts">Origin Connection Attempts</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
        ConnectionTimeout:
          $ref: '#/components/schemas/integer'
          description: '<p>The number of seconds that CloudFront waits when trying to establish a connection to the origin. The minimum timeout is 1 second, the maximum is 10 seconds, and the default (if you don’t specify otherwise) is 10 seconds.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#origin-connection-timeout">Origin Connection Timeout</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
        OriginShield:
          $ref: '#/components/schemas/OriginShield'
          description: '<p>CloudFront Origin Shield. Using Origin Shield can help reduce the load on your origin.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/origin-shield.html">Using Origin Shield</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
      description: '<p>An origin.</p> <p>An origin is the location where content is stored, and from which CloudFront gets content to serve to viewers. To specify an origin:</p> <ul> <li> <p>Use <code>S3OriginConfig</code> to specify an Amazon S3 bucket that is not configured with static website hosting.</p> </li> <li> <p>Use <code>CustomOriginConfig</code> to specify all other kinds of origins, including:</p> <ul> <li> <p>An Amazon S3 bucket that is configured with static website hosting</p> </li> <li> <p>An Elastic Load Balancing load balancer</p> </li> <li> <p>An AWS Elemental MediaPackage endpoint</p> </li> <li> <p>An AWS Elemental MediaStore container</p> </li> <li> <p>Any other HTTP server, running on an Amazon EC2 instance or any other kind of host</p> </li> </ul> </li> </ul> <p>For the current maximum number of origins that you can specify per distribution, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cloudfront-limits.html#limits-web-distributions">General Quotas on Web Distributions</a> in the <i>Amazon CloudFront Developer Guide</i> (quotas were formerly referred to as limits).</p>'
    OriginCustomHeader:
      type: object
      required:
        - HeaderName
        - HeaderValue
      properties:
        HeaderName:
          $ref: '#/components/schemas/string'
          description: 'The name of a header that you want CloudFront to send to your origin. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/forward-custom-headers.html">Adding Custom Headers to Origin Requests</a> in the <i> Amazon CloudFront Developer Guide</i>.'
        HeaderValue:
          $ref: '#/components/schemas/string'
          description: The value for the header that you specified in the <code>HeaderName</code> field.
      description: 'A complex type that contains <code>HeaderName</code> and <code>HeaderValue</code> elements, if any, for this distribution. '
    OriginGroupFailoverCriteria:
      type: object
      required:
        - StatusCodes
      properties:
        StatusCodes:
          $ref: '#/components/schemas/StatusCodes'
          description: 'The status codes that, when returned from the primary origin, will trigger CloudFront to failover to the second origin.'
      description: 'A complex data type that includes information about the failover criteria for an origin group, including the status codes for which CloudFront will failover from the primary origin to the second origin.'
    OriginGroupMembers:
      type: object
      required:
        - Quantity
        - Items
      properties:
        Quantity:
          $ref: '#/components/schemas/integer'
          description: The number of origins in an origin group.
        Items:
          $ref: '#/components/schemas/OriginGroupMemberList'
          description: Items (origins) in an origin group.
      description: A complex data type for the origins included in an origin group.
    OriginGroup:
      type: object
      required:
        - Id
        - FailoverCriteria
        - Members
      properties:
        Id:
          $ref: '#/components/schemas/string'
          description: The origin group's ID.
        FailoverCriteria:
          $ref: '#/components/schemas/OriginGroupFailoverCriteria'
          description: A complex type that contains information about the failover criteria for an origin group.
        Members:
          $ref: '#/components/schemas/OriginGroupMembers'
          description: A complex type that contains information about the origins in an origin group.
      description: 'An origin group includes two origins (a primary origin and a second origin to failover to) and a failover criteria that you specify. You create an origin group to support origin failover in CloudFront. When you create or update a distribution, you can specifiy the origin group instead of a single origin, and CloudFront will failover from the primary origin to the second origin under the failover conditions that you''ve chosen.'
    StatusCodes:
      type: object
      required:
        - Quantity
        - Items
      properties:
        Quantity:
          $ref: '#/components/schemas/integer'
          description: The number of status codes.
        Items:
          $ref: '#/components/schemas/StatusCodeList'
          description: The items (status codes) for an origin group.
      description: 'A complex data type for the status codes that you specify that, when returned by a primary origin, trigger CloudFront to failover to a second origin.'
    OriginGroupList:
      type: array
      description: List of origin groups for a distribution.
      items:
        allOf:
          - $ref: '#/components/schemas/OriginGroup'
          - xml:
              name: OriginGroup
    OriginGroupMember:
      type: object
      required:
        - OriginId
      properties:
        OriginId:
          $ref: '#/components/schemas/string'
          description: The ID for an origin in an origin group.
      description: An origin in an origin group.
    OriginGroupMemberList:
      type: array
      description: List of origins in an origin group.
      items:
        allOf:
          - $ref: '#/components/schemas/OriginGroupMember'
          - xml:
              name: OriginGroupMember
      minItems: 2
      maxItems: 2
    OriginList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Origin'
          - xml:
              name: Origin
      minItems: 1
    OriginRequestPolicyCookieBehavior:
      type: string
      enum:
        - none
        - whitelist
        - all
    OriginRequestPolicyHeaderBehavior:
      type: string
      enum:
        - none
        - whitelist
        - allViewer
        - allViewerAndWhitelistCloudFront
    OriginRequestPolicySummaryList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/OriginRequestPolicySummary'
          - xml:
              name: OriginRequestPolicySummary
    OriginRequestPolicyQueryStringBehavior:
      type: string
      enum:
        - none
        - whitelist
        - all
    OriginRequestPolicySummary:
      type: object
      required:
        - Type
        - OriginRequestPolicy
      properties:
        Type:
          $ref: '#/components/schemas/OriginRequestPolicyType'
          description: 'The type of origin request policy, either <code>managed</code> (created by Amazon Web Services) or <code>custom</code> (created in this account).'
        OriginRequestPolicy:
          $ref: '#/components/schemas/OriginRequestPolicy'
          description: The origin request policy.
      description: Contains an origin request policy.
    OriginShieldRegion:
      type: string
      pattern: '[a-z]{2}-[a-z]+-\d'
      minLength: 1
      maxLength: 32
    SslProtocolsList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/SslProtocol'
          - xml:
              name: SslProtocol
    PathList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/string'
          - xml:
              name: Path
    PublicKeySummaryList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/PublicKeySummary'
          - xml:
              name: PublicKeySummary
    PublicKeySummary:
      type: object
      required:
        - Id
        - Name
        - CreatedTime
        - EncodedKey
      properties:
        Id:
          $ref: '#/components/schemas/string'
          description: The identifier of the public key.
        Name:
          $ref: '#/components/schemas/string'
          description: A name to help identify the public key.
        CreatedTime:
          $ref: '#/components/schemas/timestamp'
          description: The date and time when the public key was uploaded.
        EncodedKey:
          $ref: '#/components/schemas/string'
          description: The public key.
        Comment:
          $ref: '#/components/schemas/string'
          description: A comment to describe the public key. The comment cannot be longer than 128 characters.
      description: Contains information about a public key.
    PublishFunctionRequest:
      type: object
      title: PublishFunctionRequest
      properties: {}
    QueryArgProfile:
      type: object
      required:
        - QueryArg
        - ProfileId
      properties:
        QueryArg:
          $ref: '#/components/schemas/string'
          description: Query argument for field-level encryption query argument-profile mapping.
        ProfileId:
          $ref: '#/components/schemas/string'
          description: ID of profile to use for field-level encryption query argument-profile mapping
      description: Query argument-profile mapping for field-level encryption.
    QueryArgProfiles:
      type: object
      required:
        - Quantity
      properties:
        Quantity:
          $ref: '#/components/schemas/integer'
          description: Number of profiles for query argument-profile mapping for field-level encryption.
        Items:
          $ref: '#/components/schemas/QueryArgProfileList'
          description: Number of items for query argument-profile mapping for field-level encryption.
      description: Query argument-profile mapping for field-level encryption.
    QueryArgProfileList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/QueryArgProfile'
          - xml:
              name: QueryArgProfile
    QueryStringCacheKeysList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/string'
          - xml:
              name: Name
    QueryStringNamesList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/string'
          - xml:
              name: Name
    RealtimeLogConfigList:
      type: array
      items:
        $ref: '#/components/schemas/RealtimeLogConfig'
    RealtimeMetricsSubscriptionStatus:
      type: string
      enum:
        - Enabled
        - Disabled
    SSLSupportMethod:
      type: string
      enum:
        - sni-only
        - vip
        - static-ip
    Signer:
      type: object
      properties:
        AwsAccountNumber:
          $ref: '#/components/schemas/string'
          description: 'An account number that contains active CloudFront key pairs that CloudFront can use to verify the signatures of signed URLs and signed cookies. If the account that owns the key pairs is the same account that owns the CloudFront distribution, the value of this field is <code>self</code>.'
        KeyPairIds:
          $ref: '#/components/schemas/KeyPairIds'
          description: A list of CloudFront key pair identifiers.
      description: A list of accounts and the active CloudFront key pairs in each account that CloudFront can use to verify the signatures of signed URLs and signed cookies.
    SslProtocol:
      type: string
      enum:
        - SSLv3
        - TLSv1
        - TLSv1.1
        - TLSv1.2
    StatusCodeList:
      type: array
      description: List of status codes for origin failover.
      items:
        allOf:
          - $ref: '#/components/schemas/integer'
          - xml:
              name: StatusCode
      minItems: 1
    StreamingDistributionSummaryList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/StreamingDistributionSummary'
          - xml:
              name: StreamingDistributionSummary
    StreamingDistributionSummary:
      type: object
      required:
        - Id
        - ARN
        - Status
        - LastModifiedTime
        - DomainName
        - S3Origin
        - Aliases
        - TrustedSigners
        - Comment
        - PriceClass
        - Enabled
      properties:
        Id:
          $ref: '#/components/schemas/string'
          description: 'The identifier for the distribution, for example, <code>EDFDVBD632BHDS5</code>.'
        ARN:
          $ref: '#/components/schemas/string'
          description: ' The ARN (Amazon Resource Name) for the streaming distribution. For example: <code>arn:aws:cloudfront::123456789012:streaming-distribution/EDFDVBD632BHDS5</code>, where <code>123456789012</code> is your account ID.'
        Status:
          $ref: '#/components/schemas/string'
          description: ' Indicates the current status of the distribution. When the status is <code>Deployed</code>, the distribution''s information is fully propagated throughout the Amazon CloudFront system.'
        LastModifiedTime:
          $ref: '#/components/schemas/timestamp'
          description: The date and time the distribution was last modified.
        DomainName:
          $ref: '#/components/schemas/string'
          description: 'The domain name corresponding to the distribution, for example, <code>d111111abcdef8.cloudfront.net</code>.'
        S3Origin:
          $ref: '#/components/schemas/S3Origin'
          description: A complex type that contains information about the Amazon S3 bucket from which you want CloudFront to get your media files for distribution.
        Aliases:
          $ref: '#/components/schemas/Aliases'
          description: 'A complex type that contains information about CNAMEs (alternate domain names), if any, for this streaming distribution.'
        TrustedSigners:
          $ref: '#/components/schemas/TrustedSigners'
          description: '<p>A complex type that specifies the accounts, if any, that you want to allow to create signed URLs for private content. If you want to require signed URLs in requests for objects in the target origin that match the <code>PathPattern</code> for this cache behavior, specify <code>true</code> for <code>Enabled</code>, and specify the applicable values for <code>Quantity</code> and <code>Items</code>.If you don''t want to require signed URLs in requests for objects that match <code>PathPattern</code>, specify <code>false</code> for <code>Enabled</code> and <code>0</code> for <code>Quantity</code>. Omit <code>Items</code>. To add, change, or remove one or more trusted signers, change <code>Enabled</code> to <code>true</code> (if it''s currently <code>false</code>), change <code>Quantity</code> as applicable, and specify all of the trusted signers that you want to include in the updated distribution.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">Serving Private Content through CloudFront</a> in the <i>Amazon CloudFront Developer Guide</i>. </p>'
        Comment:
          $ref: '#/components/schemas/string'
          description: The comment originally specified when this distribution was created.
        PriceClass:
          $ref: '#/components/schemas/PriceClass'
          description: 'A complex type that contains information about price class for this streaming distribution. '
        Enabled:
          $ref: '#/components/schemas/boolean'
          description: Whether the distribution is enabled to accept end user requests for content.
      description: ' A summary of the information for a CloudFront streaming distribution.'
    TagKey:
      type: string
      pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
      description: '<p> A string that contains <code>Tag</code> key.</p> <p>The string length should be between 1 and 128 characters. Valid characters include <code>a-z</code>, <code>A-Z</code>, <code>0-9</code>, space, and the special characters <code>_ - . : / = + @</code>.</p>'
      minLength: 1
      maxLength: 128
    TagValue:
      type: string
      pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
      minLength: 0
      maxLength: 256
    Tag:
      type: object
      required:
        - Key
      properties:
        Key:
          $ref: '#/components/schemas/TagKey'
          description: '<p> A string that contains <code>Tag</code> key.</p> <p>The string length should be between 1 and 128 characters. Valid characters include <code>a-z</code>, <code>A-Z</code>, <code>0-9</code>, space, and the special characters <code>_ - . : / = + @</code>.</p>'
        Value:
          $ref: '#/components/schemas/TagValue'
          description: '<p> A string that contains an optional <code>Tag</code> value.</p> <p>The string length should be between 0 and 256 characters. Valid characters include <code>a-z</code>, <code>A-Z</code>, <code>0-9</code>, space, and the special characters <code>_ - . : / = + @</code>.</p>'
      description: ' A complex type that contains <code>Tag</code> key and <code>Tag</code> value.'
    TagKeys:
      type: object
      properties:
        Items:
          $ref: '#/components/schemas/TagKeyList'
          description: ' A complex type that contains <code>Tag</code> key elements.'
      description: ' A complex type that contains zero or more <code>Tag</code> elements.'
    TagResourceRequest:
      type: object
      required:
        - Tags
      title: TagResourceRequest
      properties:
        Tags:
          $ref: '#/components/schemas/Tags'
          description: ' A complex type that contains zero or more <code>Tag</code> elements.'
      description: ' The request to add tags to a CloudFront resource.'
      xml:
        namespace: 'http://cloudfront.amazonaws.com/doc/2020-05-31/'
    TestFunctionRequest:
      type: object
      required:
        - EventObject
      title: TestFunctionRequest
      properties:
        Stage:
          $ref: '#/components/schemas/FunctionStage'
          description: 'The stage of the function that you are testing, either <code>DEVELOPMENT</code> or <code>LIVE</code>.'
        EventObject:
          $ref: '#/components/schemas/FunctionEventObject'
          description: 'The event object to test the function with. For more information about the structure of the event object, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/managing-functions.html#test-function">Testing functions</a> in the <i>Amazon CloudFront Developer Guide</i>.'
    TestResult:
      type: object
      properties:
        FunctionSummary:
          $ref: '#/components/schemas/FunctionSummary'
          description: Contains configuration information and metadata about the CloudFront function that was tested.
        ComputeUtilization:
          $ref: '#/components/schemas/string'
          description: 'The amount of time that the function took to run as a percentage of the maximum allowed time. For example, a compute utilization of 35 means that the function completed in 35% of the maximum allowed time.'
        FunctionExecutionLogs:
          $ref: '#/components/schemas/FunctionExecutionLogList'
          description: Contains the log lines that the function wrote (if any) when running the test.
        FunctionErrorMessage:
          $ref: '#/components/schemas/string'
          description: 'If the result of testing the function was an error, this field contains the error message.'
        FunctionOutput:
          $ref: '#/components/schemas/string'
          description: 'The event object returned by the function. For more information about the structure of the event object, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/functions-event-structure.html">Event object structure</a> in the <i>Amazon CloudFront Developer Guide</i>.'
      description: Contains the result of testing a CloudFront function with <code>TestFunction</code>.
    TrustedKeyGroupIdList:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/string'
          - xml:
              name: KeyGroup
    UntagResourceRequest:
      type: object
      required:
        - TagKeys
      title: UntagResourceRequest
      properties:
        TagKeys:
          $ref: '#/components/schemas/TagKeys'
          description: ' A complex type that contains zero or more <code>Tag</code> key elements.'
      description: ' The request to remove tags from a CloudFront resource.'
      xml:
        namespace: 'http://cloudfront.amazonaws.com/doc/2020-05-31/'
    UpdateCachePolicyRequest:
      type: object
      required:
        - CachePolicyConfig
      title: UpdateCachePolicyRequest
      properties:
        CachePolicyConfig:
          $ref: '#/components/schemas/CachePolicyConfig'
          description: A cache policy configuration.
      xml:
        namespace: 'http://cloudfront.amazonaws.com/doc/2020-05-31/'
    UpdateCloudFrontOriginAccessIdentityRequest:
      type: object
      required:
        - CloudFrontOriginAccessIdentityConfig
      title: UpdateCloudFrontOriginAccessIdentityRequest
      properties:
        CloudFrontOriginAccessIdentityConfig:
          $ref: '#/components/schemas/CloudFrontOriginAccessIdentityConfig'
          description: The identity's configuration information.
      description: The request to update an origin access identity.
      xml:
        namespace: 'http://cloudfront.amazonaws.com/doc/2020-05-31/'
    UpdateDistributionRequest:
      type: object
      required:
        - DistributionConfig
      title: UpdateDistributionRequest
      properties:
        DistributionConfig:
          $ref: '#/components/schemas/DistributionConfig'
          description: The distribution's configuration information.
      description: The request to update a distribution.
      xml:
        namespace: 'http://cloudfront.amazonaws.com/doc/2020-05-31/'
    UpdateFieldLevelEncryptionConfigRequest:
      type: object
      required:
        - FieldLevelEncryptionConfig
      title: UpdateFieldLevelEncryptionConfigRequest
      properties:
        FieldLevelEncryptionConfig:
          $ref: '#/components/schemas/FieldLevelEncryptionConfig'
          description: 'Request to update a field-level encryption configuration. '
      xml:
        namespace: 'http://cloudfront.amazonaws.com/doc/2020-05-31/'
    UpdateFieldLevelEncryptionProfileRequest:
      type: object
      required:
        - FieldLevelEncryptionProfileConfig
      title: UpdateFieldLevelEncryptionProfileRequest
      properties:
        FieldLevelEncryptionProfileConfig:
          $ref: '#/components/schemas/FieldLevelEncryptionProfileConfig'
          description: 'Request to update a field-level encryption profile. '
      xml:
        namespace: 'http://cloudfront.amazonaws.com/doc/2020-05-31/'
    UpdateFunctionRequest:
      type: object
      required:
        - FunctionConfig
        - FunctionCode
      title: UpdateFunctionRequest
      properties:
        FunctionConfig:
          $ref: '#/components/schemas/FunctionConfig'
          description: Configuration information about the function.
        FunctionCode:
          $ref: '#/components/schemas/FunctionBlob'
          description: 'The function code. For more information about writing a CloudFront function, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/writing-function-code.html">Writing function code for CloudFront Functions</a> in the <i>Amazon CloudFront Developer Guide</i>.'
    UpdateKeyGroupRequest:
      type: object
      required:
        - KeyGroupConfig
      title: UpdateKeyGroupRequest
      properties:
        KeyGroupConfig:
          $ref: '#/components/schemas/KeyGroupConfig'
          description: The key group configuration.
      xml:
        namespace: 'http://cloudfront.amazonaws.com/doc/2020-05-31/'
    UpdateOriginRequestPolicyRequest:
      type: object
      required:
        - OriginRequestPolicyConfig
      title: UpdateOriginRequestPolicyRequest
      properties:
        OriginRequestPolicyConfig:
          $ref: '#/components/schemas/OriginRequestPolicyConfig'
          description: An origin request policy configuration.
      xml:
        namespace: 'http://cloudfront.amazonaws.com/doc/2020-05-31/'
    UpdatePublicKeyRequest:
      type: object
      required:
        - PublicKeyConfig
      title: UpdatePublicKeyRequest
      properties:
        PublicKeyConfig:
          $ref: '#/components/schemas/PublicKeyConfig'
          description: A public key configuration.
      xml:
        namespace: 'http://cloudfront.amazonaws.com/doc/2020-05-31/'
    UpdateRealtimeLogConfigRequest:
      type: object
      title: UpdateRealtimeLogConfigRequest
      properties:
        EndPoints:
          $ref: '#/components/schemas/EndPointList'
          description: Contains information about the Amazon Kinesis data stream where you are sending real-time log data.
        Fields:
          $ref: '#/components/schemas/FieldList'
          description: '<p>A list of fields to include in each real-time log record.</p> <p>For more information about fields, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-fields">Real-time log configuration fields</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>'
        Name:
          $ref: '#/components/schemas/string'
          description: The name for this real-time log configuration.
        ARN:
          $ref: '#/components/schemas/string'
          description: The Amazon Resource Name (ARN) for this real-time log configuration.
        SamplingRate:
          $ref: '#/components/schemas/long'
          description: 'The sampling rate for this real-time log configuration. The sampling rate determines the percentage of viewer requests that are represented in the real-time log data. You must provide an integer between 1 and 100, inclusive.'
    UpdateStreamingDistributionRequest:
      type: object
      required:
        - StreamingDistributionConfig
      title: UpdateStreamingDistributionRequest
      properties:
        StreamingDistributionConfig:
          $ref: '#/components/schemas/StreamingDistributionConfig'
          description: The streaming distribution's configuration information.
      description: The request to update a streaming distribution.
      xml:
        namespace: 'http://cloudfront.amazonaws.com/doc/2020-05-31/'
security:
  - hmac: []
