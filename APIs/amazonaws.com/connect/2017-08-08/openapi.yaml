openapi: 3.0.0
info:
  version: '2017-08-08'
  x-release: v4
  title: Amazon Connect Service
  description: '<p>Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.</p> <p>There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p>You can connect programmatically to an AWS service by using an endpoint. For a list of Amazon Connect endpoints, see <a href="https://docs.aws.amazon.com/general/latest/gr/connect_region.html">Amazon Connect Endpoints</a>.</p> <note> <p>Working with contact flows? Check out the <a href="https://docs.aws.amazon.com/connect/latest/adminguide/flow-language.html">Amazon Connect Flow language</a>.</p> </note>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: connect
  x-aws-signingName: connect
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/connect-2017-08-08.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/connect/'
servers:
  - url: 'http://connect.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon Connect multi-region endpoint
  - url: 'https://connect.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon Connect multi-region endpoint
  - url: 'http://connect.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Connect endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://connect.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Connect endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  '/instance/{InstanceId}/approved-origin':
    put:
      operationId: AssociateApprovedOrigin
      description: <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Associates an approved origin to an Amazon Connect instance.</p>
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ResourceConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '483':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '484':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '485':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '486':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Origin
              properties:
                Origin:
                  description: The domain to add to your allow list.
                  type: string
                  maxLength: 267
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/instance/{InstanceId}/bot':
    put:
      operationId: AssociateBot
      description: <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Allows the specified Amazon Connect instance to access the specified Amazon Lex or Amazon Lex V2 bot.</p>
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ResourceConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '483':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '486':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                LexBot:
                  description: Configuration information of an Amazon Lex bot.
                  type: object
                  properties:
                    Name:
                      $ref: '#/components/schemas/BotName'
                      description: The name of the Amazon Lex bot.
                    LexRegion:
                      $ref: '#/components/schemas/LexRegion'
                      description: The Region that the Amazon Lex bot was created in.
                LexV2Bot:
                  description: Configuration information of an Amazon Lex V2 bot.
                  type: object
                  properties:
                    AliasArn:
                      $ref: '#/components/schemas/AliasArn'
                      description: The Amazon Resource Name (ARN) of the Amazon Lex V2 bot.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DisassociateBot
      description: <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Revokes authorization from the specified instance to access the specified Amazon Lex or Amazon Lex V2 bot. </p>
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                LexBot:
                  description: Configuration information of an Amazon Lex bot.
                  type: object
                  properties:
                    Name:
                      $ref: '#/components/schemas/BotName'
                      description: The name of the Amazon Lex bot.
                    LexRegion:
                      $ref: '#/components/schemas/LexRegion'
                      description: The Region that the Amazon Lex bot was created in.
                LexV2Bot:
                  description: Configuration information of an Amazon Lex V2 bot.
                  type: object
                  properties:
                    AliasArn:
                      $ref: '#/components/schemas/AliasArn'
                      description: The Amazon Resource Name (ARN) of the Amazon Lex V2 bot.
  '/instance/{InstanceId}/storage-config':
    put:
      operationId: AssociateInstanceStorageConfig
      description: '<p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Associates a storage resource type for the first time. You can only associate one type of storage configuration in a single call. This means, for example, that you can''t define an instance with multiple S3 buckets for storing chat transcripts.</p> <p>This API does not create a resource that doesn''t exist. It only associates it to the instance. Ensure that the resource being specified in the storage configuration, like an S3 bucket, exists when being used for association.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateInstanceStorageConfigResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ResourceConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '483':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '484':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ResourceType
                - StorageConfig
              properties:
                ResourceType:
                  description: A valid resource type.
                  type: string
                  enum:
                    - CHAT_TRANSCRIPTS
                    - CALL_RECORDINGS
                    - SCHEDULED_REPORTS
                    - MEDIA_STREAMS
                    - CONTACT_TRACE_RECORDS
                    - AGENT_EVENTS
                StorageConfig:
                  description: The storage configuration for the instance.
                  type: object
                  properties:
                    AssociationId:
                      $ref: '#/components/schemas/AssociationId'
                      description: The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID.
                    StorageType:
                      $ref: '#/components/schemas/StorageType'
                      description: A valid storage type.
                    S3Config:
                      $ref: '#/components/schemas/S3Config'
                      description: The S3 bucket configuration.
                    KinesisVideoStreamConfig:
                      $ref: '#/components/schemas/KinesisVideoStreamConfig'
                      description: The configuration of the Kinesis video stream.
                    KinesisStreamConfig:
                      $ref: '#/components/schemas/KinesisStreamConfig'
                      description: The configuration of the Kinesis data stream.
                    KinesisFirehoseConfig:
                      $ref: '#/components/schemas/KinesisFirehoseConfig'
                      description: The configuration of the Kinesis Firehose delivery stream.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/instance/{InstanceId}/lambda-function':
    put:
      operationId: AssociateLambdaFunction
      description: <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Allows the specified Amazon Connect instance to access the specified Lambda function.</p>
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ResourceConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '483':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '484':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '485':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '486':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - FunctionArn
              properties:
                FunctionArn:
                  description: The Amazon Resource Name (ARN) for the Lambda function being associated. Maximum number of characters allowed is 140.
                  type: string
                  minLength: 1
                  maxLength: 140
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/instance/{InstanceId}/lex-bot':
    put:
      operationId: AssociateLexBot
      description: <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Allows the specified Amazon Connect instance to access the specified Amazon Lex bot.</p>
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ResourceConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '483':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '484':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '485':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '486':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - LexBot
              properties:
                LexBot:
                  description: Configuration information of an Amazon Lex bot.
                  type: object
                  properties:
                    Name:
                      $ref: '#/components/schemas/BotName'
                      description: The name of the Amazon Lex bot.
                    LexRegion:
                      $ref: '#/components/schemas/LexRegion'
                      description: The Region that the Amazon Lex bot was created in.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/queues/{InstanceId}/{QueueId}/associate-quick-connects':
    post:
      operationId: AssociateQueueQuickConnects
      description: <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Associates a set of quick connects with a queue.</p>
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: QueueId
          in: path
          required: true
          description: The identifier for the queue.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - QuickConnectIds
              properties:
                QuickConnectIds:
                  description: The quick connects to associate with this queue.
                  type: array
                  items:
                    $ref: '#/components/schemas/QuickConnectId'
                  minItems: 1
                  maxItems: 50
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/routing-profiles/{InstanceId}/{RoutingProfileId}/associate-queues':
    post:
      operationId: AssociateRoutingProfileQueues
      description: Associates a set of queues with a routing profile.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: RoutingProfileId
          in: path
          required: true
          description: The identifier of the routing profile.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - QueueConfigs
              properties:
                QueueConfigs:
                  description: The queues to associate with this routing profile.
                  type: array
                  items:
                    $ref: '#/components/schemas/RoutingProfileQueueConfig'
                  minItems: 1
                  maxItems: 10
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/instance/{InstanceId}/security-key':
    put:
      operationId: AssociateSecurityKey
      description: <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Associates a security key to the instance.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateSecurityKeyResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ResourceConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '483':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '484':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '485':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '486':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Key
              properties:
                Key:
                  description: A valid security key in PEM format.
                  type: string
                  minLength: 1
                  maxLength: 1024
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/agent-status/{InstanceId}':
    put:
      operationId: CreateAgentStatus
      description: <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Creates an agent status for the specified Amazon Connect instance.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAgentStatusResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: DuplicateResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
                - State
              properties:
                Name:
                  description: The name of the status.
                  type: string
                  minLength: 1
                  maxLength: 127
                Description:
                  description: The description of the status.
                  type: string
                  minLength: 1
                  maxLength: 250
                State:
                  description: The state of the status.
                  type: string
                  enum:
                    - ENABLED
                    - DISABLED
                DisplayOrder:
                  description: The display order of the status.
                  type: integer
                  minimum: 1
                  maximum: 50
                Tags:
                  description: One or more tags.
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListAgentStatuses
      description: <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Lists agent statuses.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAgentStatusResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return per page.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: AgentStatusTypes
          in: query
          required: false
          description: Available agent status types.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AgentStatusType'
            maxItems: 3
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  '/contact-flows/{InstanceId}':
    put:
      operationId: CreateContactFlow
      description: '<p>Creates a contact flow for the specified Amazon Connect instance.</p> <p>You can also create and update contact flows using the <a href="https://docs.aws.amazon.com/connect/latest/adminguide/flow-language.html">Amazon Connect Flow language</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateContactFlowResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidContactFlowException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidContactFlowException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '483':
          description: DuplicateResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '486':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '487':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
                - Type
                - Content
              properties:
                Name:
                  description: The name of the contact flow.
                  type: string
                  minLength: 1
                Type:
                  description: 'The type of the contact flow. For descriptions of the available types, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/create-contact-flow.html#contact-flow-types">Choose a Contact Flow Type</a> in the <i>Amazon Connect Administrator Guide</i>.'
                  type: string
                  enum:
                    - CONTACT_FLOW
                    - CUSTOMER_QUEUE
                    - CUSTOMER_HOLD
                    - CUSTOMER_WHISPER
                    - AGENT_HOLD
                    - AGENT_WHISPER
                    - OUTBOUND_WHISPER
                    - AGENT_TRANSFER
                    - QUEUE_TRANSFER
                Description:
                  description: 'The description of the contact flow. '
                  type: string
                Content:
                  description: 'The content of the contact flow. '
                  type: string
                Tags:
                  description: One or more tags.
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/hours-of-operations/{InstanceId}':
    put:
      operationId: CreateHoursOfOperation
      description: <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Creates hours of operation. </p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateHoursOfOperationResponse'
        '480':
          description: DuplicateResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
                - TimeZone
                - Config
              properties:
                Name:
                  description: The name of the hours of operation.
                  type: string
                  minLength: 1
                  maxLength: 127
                Description:
                  description: The description of the hours of operation.
                  type: string
                  minLength: 1
                  maxLength: 250
                TimeZone:
                  description: The time zone of the hours of operation.
                  type: string
                Config:
                  description: 'Configuration information for the hours of operation: day, start time, and end time.'
                  type: array
                  items:
                    $ref: '#/components/schemas/HoursOfOperationConfig'
                  minItems: 0
                  maxItems: 100
                Tags:
                  description: One or more tags.
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /instance:
    put:
      operationId: CreateInstance
      description: '<p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Initiates an Amazon Connect instance with all the supported channels enabled. It does not attach any storage, such as Amazon Simple Storage Service (Amazon S3) or Amazon Kinesis. It also does not allow for any configurations on features, such as Contact Lens for Amazon Connect. </p> <p>Amazon Connect enforces a limit on the total number of instances that you can create or delete in 30 days. If you exceed this limit, you will get an error message indicating there has been an excessive number of attempts at creating or deleting instances. You must wait 30 days before you can restart creating and deleting instances in your account.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateInstanceResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - IdentityManagementType
                - InboundCallsEnabled
                - OutboundCallsEnabled
              properties:
                ClientToken:
                  description: The idempotency token.
                  type: string
                  maxLength: 500
                IdentityManagementType:
                  description: The type of identity management for your Amazon Connect users.
                  type: string
                  enum:
                    - SAML
                    - CONNECT_MANAGED
                    - EXISTING_DIRECTORY
                InstanceAlias:
                  description: The name for your instance.
                  type: string
                  pattern: '^(?!d-)([\da-zA-Z]+)([-]*[\da-zA-Z])*$'
                  minLength: 1
                  maxLength: 62
                  format: password
                DirectoryId:
                  description: The identifier for the directory.
                  type: string
                  pattern: '^d-[0-9a-f]{10}$'
                  minLength: 12
                  maxLength: 12
                InboundCallsEnabled:
                  description: Your contact center handles incoming contacts.
                  type: boolean
                OutboundCallsEnabled:
                  description: Your contact center allows outbound calls.
                  type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListInstances
      description: '<p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Return a list of instances which are in active state, creation-in-progress state, and failed state. Instances that aren''t successfully created (they are in a failed state) are returned only for 24 hours after the CreateInstance API was invoked.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInstancesResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return per page.
          schema:
            type: integer
            minimum: 1
            maximum: 10
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  '/instance/{InstanceId}/integration-associations':
    put:
      operationId: CreateIntegrationAssociation
      description: Create an AppIntegration association with an Amazon Connect instance.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateIntegrationAssociationResponse'
        '480':
          description: DuplicateResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '483':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - IntegrationType
                - IntegrationArn
                - SourceApplicationUrl
                - SourceApplicationName
                - SourceType
              properties:
                IntegrationType:
                  description: The type of information to be ingested.
                  type: string
                  enum:
                    - EVENT
                IntegrationArn:
                  description: The Amazon Resource Name (ARN) of the integration.
                  type: string
                SourceApplicationUrl:
                  description: The URL for the external application.
                  type: string
                  minLength: 1
                  maxLength: 2000
                SourceApplicationName:
                  description: The name of the external application.
                  type: string
                  pattern: '^[a-zA-Z0-9_ -]+$'
                  minLength: 1
                  maxLength: 100
                SourceType:
                  description: The type of the data source.
                  type: string
                  enum:
                    - SALESFORCE
                    - ZENDESK
                Tags:
                  description: One or more tags.
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListIntegrationAssociations
      description: Provides summary information about the AppIntegration associations for the specified Amazon Connect instance.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListIntegrationAssociationsResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return per page.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  '/queues/{InstanceId}':
    put:
      operationId: CreateQueue
      description: <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Creates a new queue for the specified Amazon Connect instance.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateQueueResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: DuplicateResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
                - HoursOfOperationId
              properties:
                Name:
                  description: The name of the queue.
                  type: string
                  minLength: 1
                  maxLength: 127
                Description:
                  description: The description of the queue.
                  type: string
                  minLength: 1
                  maxLength: 250
                OutboundCallerConfig:
                  description: 'The outbound caller ID name, number, and outbound whisper flow.'
                  type: object
                  properties:
                    OutboundCallerIdName:
                      $ref: '#/components/schemas/OutboundCallerIdName'
                      description: The caller ID name.
                    OutboundCallerIdNumberId:
                      $ref: '#/components/schemas/PhoneNumberId'
                      description: The caller ID number.
                    OutboundFlowId:
                      $ref: '#/components/schemas/ContactFlowId'
                      description: The outbound whisper flow to be used during an outbound call.
                HoursOfOperationId:
                  description: The identifier for the hours of operation.
                  type: string
                MaxContacts:
                  description: The maximum number of contacts that can be in the queue before it is considered full.
                  type: integer
                  minimum: 0
                QuickConnectIds:
                  description: The quick connects available to agents who are working the queue.
                  type: array
                  items:
                    $ref: '#/components/schemas/QuickConnectId'
                  minItems: 1
                  maxItems: 50
                Tags:
                  description: One or more tags.
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/quick-connects/{InstanceId}':
    put:
      operationId: CreateQuickConnect
      description: Creates a quick connect for the specified Amazon Connect instance.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateQuickConnectResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: DuplicateResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
                - QuickConnectConfig
              properties:
                Name:
                  description: The name of the quick connect.
                  type: string
                  minLength: 1
                  maxLength: 127
                Description:
                  description: The description of the quick connect.
                  type: string
                  minLength: 1
                  maxLength: 250
                QuickConnectConfig:
                  description: Contains configuration settings for a quick connect.
                  type: object
                  properties:
                    QuickConnectType:
                      $ref: '#/components/schemas/QuickConnectType'
                      description: 'The type of quick connect. In the Amazon Connect console, when you create a quick connect, you are prompted to assign one of the following types: Agent (USER), External (PHONE_NUMBER), or Queue (QUEUE). '
                    UserConfig:
                      $ref: '#/components/schemas/UserQuickConnectConfig'
                      description: The user configuration. This is required only if QuickConnectType is USER.
                    QueueConfig:
                      $ref: '#/components/schemas/QueueQuickConnectConfig'
                      description: The queue configuration. This is required only if QuickConnectType is QUEUE.
                    PhoneConfig:
                      $ref: '#/components/schemas/PhoneNumberQuickConnectConfig'
                      description: The phone configuration. This is required only if QuickConnectType is PHONE_NUMBER.
                Tags:
                  description: One or more tags.
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListQuickConnects
      description: 'Provides information about the quick connects for the specified Amazon Connect instance. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListQuickConnectsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return per page.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: QuickConnectTypes
          in: query
          required: false
          description: 'The type of quick connect. In the Amazon Connect console, when you create a quick connect, you are prompted to assign one of the following types: Agent (USER), External (PHONE_NUMBER), or Queue (QUEUE).'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/QuickConnectType'
            maxItems: 3
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  '/routing-profiles/{InstanceId}':
    put:
      operationId: CreateRoutingProfile
      description: Creates a new routing profile.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRoutingProfileResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: DuplicateResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
                - Description
                - DefaultOutboundQueueId
                - MediaConcurrencies
              properties:
                Name:
                  description: The name of the routing profile. Must not be more than 127 characters.
                  type: string
                  minLength: 1
                  maxLength: 127
                Description:
                  description: Description of the routing profile. Must not be more than 250 characters.
                  type: string
                  minLength: 1
                  maxLength: 250
                DefaultOutboundQueueId:
                  description: The default outbound queue for the routing profile.
                  type: string
                QueueConfigs:
                  description: 'The inbound queues associated with the routing profile. If no queue is added, the agent can make only outbound calls.'
                  type: array
                  items:
                    $ref: '#/components/schemas/RoutingProfileQueueConfig'
                  minItems: 1
                  maxItems: 10
                MediaConcurrencies:
                  description: The channels that agents can handle in the Contact Control Panel (CCP) for this routing profile.
                  type: array
                  items:
                    $ref: '#/components/schemas/MediaConcurrency'
                Tags:
                  description: One or more tags.
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/instance/{InstanceId}/integration-associations/{IntegrationAssociationId}/use-cases':
    put:
      operationId: CreateUseCase
      description: Creates a use case for an AppIntegration association.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUseCaseResponse'
        '480':
          description: DuplicateResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '483':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: IntegrationAssociationId
          in: path
          required: true
          description: The identifier for the AppIntegration association.
          schema:
            type: string
            minLength: 1
            maxLength: 200
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - UseCaseType
              properties:
                UseCaseType:
                  description: The type of use case to associate to the AppIntegration association. Each AppIntegration association can have only one of each use case type.
                  type: string
                  enum:
                    - RULES_EVALUATION
                Tags:
                  description: One or more tags.
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListUseCases
      description: 'Lists the use cases. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUseCasesResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: IntegrationAssociationId
          in: path
          required: true
          description: The identifier for the integration association.
          schema:
            type: string
            minLength: 1
            maxLength: 200
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return per page.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  '/users/{InstanceId}':
    put:
      operationId: CreateUser
      description: '<p>Creates a user account for the specified Amazon Connect instance.</p> <p>For information about how to create user accounts using the Amazon Connect console, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/user-management.html">Add Users</a> in the <i>Amazon Connect Administrator Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: DuplicateResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Username
                - PhoneConfig
                - SecurityProfileIds
                - RoutingProfileId
              properties:
                Username:
                  description: 'The user name for the account. For instances not using SAML for identity management, the user name can include up to 20 characters. If you are using SAML for identity management, the user name can include up to 64 characters from [a-zA-Z0-9_-.\@]+.'
                  type: string
                  minLength: 1
                  maxLength: 100
                Password:
                  description: 'The password for the user account. A password is required if you are using Amazon Connect for identity management. Otherwise, it is an error to include a password.'
                  type: string
                  pattern: '/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[a-zA-Z\d\S]{8,64}$/'
                IdentityInfo:
                  description: Contains information about the identity of a user.
                  type: object
                  properties:
                    FirstName:
                      $ref: '#/components/schemas/AgentFirstName'
                      description: The first name. This is required if you are using Amazon Connect or SAML for identity management.
                    LastName:
                      $ref: '#/components/schemas/AgentLastName'
                      description: The last name. This is required if you are using Amazon Connect or SAML for identity management.
                    Email:
                      $ref: '#/components/schemas/Email'
                      description: 'The email address. If you are using SAML for identity management and include this parameter, an error is returned.'
                PhoneConfig:
                  description: Contains information about the phone configuration settings for a user.
                  type: object
                  properties:
                    PhoneType:
                      $ref: '#/components/schemas/PhoneType'
                      description: The phone type.
                    AutoAccept:
                      $ref: '#/components/schemas/AutoAccept'
                      description: The Auto accept setting.
                    AfterContactWorkTimeLimit:
                      $ref: '#/components/schemas/AfterContactWorkTimeLimit'
                      description: 'The After Call Work (ACW) timeout setting, in seconds.'
                    DeskPhoneNumber:
                      $ref: '#/components/schemas/PhoneNumber'
                      description: The phone number for the user's desk phone.
                DirectoryUserId:
                  description: '<p>The identifier of the user account in the directory used for identity management. If Amazon Connect cannot access the directory, you can specify this identifier to authenticate users. If you include the identifier, we assume that Amazon Connect cannot access the directory. Otherwise, the identity information is used to authenticate users from your directory.</p> <p>This parameter is required if you are using an existing directory for identity management in Amazon Connect when Amazon Connect cannot access your directory to authenticate users. If you are using SAML for identity management and include this parameter, an error is returned.</p>'
                  type: string
                SecurityProfileIds:
                  description: The identifier of the security profile for the user.
                  type: array
                  items:
                    $ref: '#/components/schemas/SecurityProfileId'
                  minItems: 1
                  maxItems: 10
                RoutingProfileId:
                  description: The identifier of the routing profile for the user.
                  type: string
                HierarchyGroupId:
                  description: The identifier of the hierarchy group for the user.
                  type: string
                Tags:
                  description: One or more tags.
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/user-hierarchy-groups/{InstanceId}':
    put:
      operationId: CreateUserHierarchyGroup
      description: Creates a new user hierarchy group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserHierarchyGroupResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: DuplicateResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
              properties:
                Name:
                  description: The name of the user hierarchy group. Must not be more than 100 characters.
                  type: string
                ParentGroupId:
                  description: The identifier for the parent hierarchy group. The user hierarchy is created at level one if the parent group ID is null.
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/hours-of-operations/{InstanceId}/{HoursOfOperationId}':
    delete:
      operationId: DeleteHoursOfOperation
      description: <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Deletes an hours of operation.</p>
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: HoursOfOperationId
          in: path
          required: true
          description: The identifier for the hours of operation.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeHoursOfOperation
      description: <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Describes the hours of operation.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeHoursOfOperationResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: HoursOfOperationId
          in: path
          required: true
          description: The identifier for the hours of operation.
          schema:
            type: string
    post:
      operationId: UpdateHoursOfOperation
      description: <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Updates the hours of operation.</p>
      responses:
        '200':
          description: Success
        '480':
          description: DuplicateResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: HoursOfOperationId
          in: path
          required: true
          description: The identifier of the hours of operation.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  description: The name of the hours of operation.
                  type: string
                  minLength: 1
                  maxLength: 127
                Description:
                  description: The description of the hours of operation.
                  type: string
                  minLength: 0
                  maxLength: 250
                TimeZone:
                  description: The time zone of the hours of operation.
                  type: string
                Config:
                  description: Configuration information of the hours of operation.
                  type: array
                  items:
                    $ref: '#/components/schemas/HoursOfOperationConfig'
                  minItems: 0
                  maxItems: 100
  '/instance/{InstanceId}':
    delete:
      operationId: DeleteInstance
      description: '<p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Deletes the Amazon Connect instance.</p> <p>Amazon Connect enforces a limit on the total number of instances that you can create or delete in 30 days. If you exceed this limit, you will get an error message indicating there has been an excessive number of attempts at creating or deleting instances. You must wait 30 days before you can restart creating and deleting instances in your account.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeInstance
      description: '<p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Returns the current state of the specified instance identifier. It tracks the instance while it is being created and returns an error status, if applicable. </p> <p>If an instance is not created successfully, the instance status reason field returns details relevant to the reason. The instance in a failed state is returned only for 24 hours after the CreateInstance API was invoked.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeInstanceResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
  '/instance/{InstanceId}/integration-associations/{IntegrationAssociationId}':
    delete:
      operationId: DeleteIntegrationAssociation
      description: Deletes an AppIntegration association from an Amazon Connect instance. The association must not have any use cases associated with it.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: IntegrationAssociationId
          in: path
          required: true
          description: The identifier for the AppIntegration association.
          schema:
            type: string
            minLength: 1
            maxLength: 200
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/quick-connects/{InstanceId}/{QuickConnectId}':
    delete:
      operationId: DeleteQuickConnect
      description: Deletes a quick connect.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: QuickConnectId
          in: path
          required: true
          description: The identifier for the quick connect.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeQuickConnect
      description: Describes the quick connect.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeQuickConnectResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: QuickConnectId
          in: path
          required: true
          description: The identifier for the quick connect.
          schema:
            type: string
  '/instance/{InstanceId}/integration-associations/{IntegrationAssociationId}/use-cases/{UseCaseId}':
    delete:
      operationId: DeleteUseCase
      description: Deletes a use case from an AppIntegration association.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: IntegrationAssociationId
          in: path
          required: true
          description: The identifier for the AppIntegration association.
          schema:
            type: string
            minLength: 1
            maxLength: 200
        - name: UseCaseId
          in: path
          required: true
          description: The identifier for the use case.
          schema:
            type: string
            minLength: 1
            maxLength: 200
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/users/{InstanceId}/{UserId}':
    delete:
      operationId: DeleteUser
      description: '<p>Deletes a user account from the specified Amazon Connect instance.</p> <p>For information about what happens to a user''s data when their account is deleted, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/delete-users.html">Delete Users from Your Amazon Connect Instance</a> in the <i>Amazon Connect Administrator Guide</i>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: UserId
          in: path
          required: true
          description: The identifier of the user.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeUser
      description: 'Describes the specified user account. You can find the instance ID in the console (it’s the final part of the ARN). The console does not display the user IDs. Instead, list the users and note the IDs provided in the output.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeUserResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: UserId
          in: path
          required: true
          description: The identifier of the user account.
          schema:
            type: string
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
  '/user-hierarchy-groups/{InstanceId}/{HierarchyGroupId}':
    delete:
      operationId: DeleteUserHierarchyGroup
      description: Deletes an existing user hierarchy group. It must not be associated with any agents or have any active child groups.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: HierarchyGroupId
          in: path
          required: true
          description: The identifier of the hierarchy group.
          schema:
            type: string
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeUserHierarchyGroup
      description: Describes the specified hierarchy group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeUserHierarchyGroupResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: HierarchyGroupId
          in: path
          required: true
          description: The identifier of the hierarchy group.
          schema:
            type: string
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
  '/agent-status/{InstanceId}/{AgentStatusId}':
    get:
      operationId: DescribeAgentStatus
      description: <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Describes an agent status.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAgentStatusResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: AgentStatusId
          in: path
          required: true
          description: The identifier for the agent status.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateAgentStatus
      description: <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Updates agent status.</p>
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: DuplicateResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: AgentStatusId
          in: path
          required: true
          description: The identifier of the agent status.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  description: The name of the agent status.
                  type: string
                  minLength: 1
                  maxLength: 127
                Description:
                  description: The description of the agent status.
                  type: string
                  minLength: 0
                  maxLength: 250
                State:
                  description: The state of the agent status.
                  type: string
                  enum:
                    - ENABLED
                    - DISABLED
                DisplayOrder:
                  description: The display order of the agent status.
                  type: integer
                  minimum: 1
                  maximum: 50
                ResetOrderNumber:
                  description: A number indicating the reset order of the agent status.
                  type: boolean
  '/contact-flows/{InstanceId}/{ContactFlowId}':
    get:
      operationId: DescribeContactFlow
      description: '<p>Describes the specified contact flow.</p> <p>You can also create and update contact flows using the <a href="https://docs.aws.amazon.com/connect/latest/adminguide/flow-language.html">Amazon Connect Flow language</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeContactFlowResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ContactFlowNotPublishedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactFlowNotPublishedException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: ContactFlowId
          in: path
          required: true
          description: The identifier of the contact flow.
          schema:
            type: string
            maxLength: 500
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/instance/{InstanceId}/attribute/{AttributeType}':
    get:
      operationId: DescribeInstanceAttribute
      description: <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Describes the specified instance attribute.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeInstanceAttributeResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: AttributeType
          in: path
          required: true
          description: The type of attribute.
          schema:
            type: string
            enum:
              - INBOUND_CALLS
              - OUTBOUND_CALLS
              - CONTACTFLOW_LOGS
              - CONTACT_LENS
              - AUTO_RESOLVE_BEST_VOICES
              - USE_CUSTOM_TTS_VOICES
              - EARLY_MEDIA
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateInstanceAttribute
      description: <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Updates the value for the specified attribute type.</p>
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: AttributeType
          in: path
          required: true
          description: The type of attribute.
          schema:
            type: string
            enum:
              - INBOUND_CALLS
              - OUTBOUND_CALLS
              - CONTACTFLOW_LOGS
              - CONTACT_LENS
              - AUTO_RESOLVE_BEST_VOICES
              - USE_CUSTOM_TTS_VOICES
              - EARLY_MEDIA
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Value
              properties:
                Value:
                  description: 'The value for the attribute. Maximum character limit is 100. '
                  type: string
                  minLength: 1
                  maxLength: 100
  '/instance/{InstanceId}/storage-config/{AssociationId}#resourceType':
    get:
      operationId: DescribeInstanceStorageConfig
      description: '<p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Retrieves the current storage configurations for the specified resource type, association ID, and instance ID.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeInstanceStorageConfigResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: AssociationId
          in: path
          required: true
          description: The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: resourceType
          in: query
          required: true
          description: A valid resource type.
          schema:
            type: string
            enum:
              - CHAT_TRANSCRIPTS
              - CALL_RECORDINGS
              - SCHEDULED_REPORTS
              - MEDIA_STREAMS
              - CONTACT_TRACE_RECORDS
              - AGENT_EVENTS
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DisassociateInstanceStorageConfig
      description: <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Removes the storage type configurations for the specified resource type and association ID.</p>
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: AssociationId
          in: path
          required: true
          description: The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: resourceType
          in: query
          required: true
          description: A valid resource type.
          schema:
            type: string
            enum:
              - CHAT_TRANSCRIPTS
              - CALL_RECORDINGS
              - SCHEDULED_REPORTS
              - MEDIA_STREAMS
              - CONTACT_TRACE_RECORDS
              - AGENT_EVENTS
    post:
      operationId: UpdateInstanceStorageConfig
      description: <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Updates an existing configuration for a resource type. This API is idempotent.</p>
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: AssociationId
          in: path
          required: true
          description: The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: resourceType
          in: query
          required: true
          description: A valid resource type.
          schema:
            type: string
            enum:
              - CHAT_TRANSCRIPTS
              - CALL_RECORDINGS
              - SCHEDULED_REPORTS
              - MEDIA_STREAMS
              - CONTACT_TRACE_RECORDS
              - AGENT_EVENTS
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - StorageConfig
              properties:
                StorageConfig:
                  description: The storage configuration for the instance.
                  type: object
                  properties:
                    AssociationId:
                      $ref: '#/components/schemas/AssociationId'
                      description: The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID.
                    StorageType:
                      $ref: '#/components/schemas/StorageType'
                      description: A valid storage type.
                    S3Config:
                      $ref: '#/components/schemas/S3Config'
                      description: The S3 bucket configuration.
                    KinesisVideoStreamConfig:
                      $ref: '#/components/schemas/KinesisVideoStreamConfig'
                      description: The configuration of the Kinesis video stream.
                    KinesisStreamConfig:
                      $ref: '#/components/schemas/KinesisStreamConfig'
                      description: The configuration of the Kinesis data stream.
                    KinesisFirehoseConfig:
                      $ref: '#/components/schemas/KinesisFirehoseConfig'
                      description: The configuration of the Kinesis Firehose delivery stream.
  '/queues/{InstanceId}/{QueueId}':
    get:
      operationId: DescribeQueue
      description: <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Describes the specified queue.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeQueueResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: QueueId
          in: path
          required: true
          description: The identifier for the queue.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/routing-profiles/{InstanceId}/{RoutingProfileId}':
    get:
      operationId: DescribeRoutingProfile
      description: Describes the specified routing profile.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeRoutingProfileResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: RoutingProfileId
          in: path
          required: true
          description: The identifier of the routing profile.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/user-hierarchy-structure/{InstanceId}':
    get:
      operationId: DescribeUserHierarchyStructure
      description: Describes the hierarchy structure of the specified Amazon Connect instance.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeUserHierarchyStructureResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateUserHierarchyStructure
      description: 'Updates the user hierarchy structure: add, remove, and rename user hierarchy levels.'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - HierarchyStructure
              properties:
                HierarchyStructure:
                  description: Contains information about the level hierarchy to update.
                  type: object
                  properties:
                    LevelOne:
                      $ref: '#/components/schemas/HierarchyLevelUpdate'
                      description: The update for level one.
                    LevelTwo:
                      $ref: '#/components/schemas/HierarchyLevelUpdate'
                      description: The update for level two.
                    LevelThree:
                      $ref: '#/components/schemas/HierarchyLevelUpdate'
                      description: The update for level three.
                    LevelFour:
                      $ref: '#/components/schemas/HierarchyLevelUpdate'
                      description: The update for level four.
                    LevelFive:
                      $ref: '#/components/schemas/HierarchyLevelUpdate'
                      description: The update for level five.
  '/instance/{InstanceId}/approved-origin#origin':
    delete:
      operationId: DisassociateApprovedOrigin
      description: <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Revokes access to integrated applications from Amazon Connect.</p>
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: origin
          in: query
          required: true
          description: The domain URL of the integrated application.
          schema:
            type: string
            maxLength: 267
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/instance/{InstanceId}/lambda-function#functionArn':
    delete:
      operationId: DisassociateLambdaFunction
      description: <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Remove the Lambda function from the dropdown options available in the relevant contact flow blocks.</p>
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance..
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: functionArn
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the Lambda function being disassociated.
          schema:
            type: string
            minLength: 1
            maxLength: 140
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/instance/{InstanceId}/lex-bot#botName&lexRegion':
    delete:
      operationId: DisassociateLexBot
      description: <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Revokes authorization from the specified instance to access the specified Amazon Lex bot.</p>
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: botName
          in: query
          required: true
          description: The name of the Amazon Lex bot. Maximum character limit of 50.
          schema:
            type: string
            maxLength: 50
        - name: lexRegion
          in: query
          required: true
          description: The Region in which the Amazon Lex bot has been created.
          schema:
            type: string
            maxLength: 60
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/queues/{InstanceId}/{QueueId}/disassociate-quick-connects':
    post:
      operationId: DisassociateQueueQuickConnects
      description: <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Disassociates a set of quick connects from a queue.</p>
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: QueueId
          in: path
          required: true
          description: The identifier for the queue.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - QuickConnectIds
              properties:
                QuickConnectIds:
                  description: The quick connects to disassociate from the queue.
                  type: array
                  items:
                    $ref: '#/components/schemas/QuickConnectId'
                  minItems: 1
                  maxItems: 50
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/routing-profiles/{InstanceId}/{RoutingProfileId}/disassociate-queues':
    post:
      operationId: DisassociateRoutingProfileQueues
      description: Disassociates a set of queues from a routing profile.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: RoutingProfileId
          in: path
          required: true
          description: The identifier of the routing profile.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - QueueReferences
              properties:
                QueueReferences:
                  description: The queues to disassociate from this routing profile.
                  type: array
                  items:
                    $ref: '#/components/schemas/RoutingProfileQueueReference'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/instance/{InstanceId}/security-key/{AssociationId}':
    delete:
      operationId: DisassociateSecurityKey
      description: <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Deletes the specified security key.</p>
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: AssociationId
          in: path
          required: true
          description: The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID.
          schema:
            type: string
            minLength: 1
            maxLength: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/contact/attributes/{InstanceId}/{InitialContactId}':
    get:
      operationId: GetContactAttributes
      description: Retrieves the contact attributes for the specified contact.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetContactAttributesResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: InitialContactId
          in: path
          required: true
          description: The identifier of the initial contact.
          schema:
            type: string
            minLength: 1
            maxLength: 256
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/metrics/current/{InstanceId}':
    post:
      operationId: GetCurrentMetricData
      description: '<p>Gets the real-time metric data from the specified Amazon Connect instance.</p> <p>For a description of each metric, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html">Real-time Metrics Definitions</a> in the <i>Amazon Connect Administrator Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCurrentMetricDataResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Filters
                - CurrentMetrics
              properties:
                Filters:
                  description: Contains the filter to apply when retrieving metrics.
                  type: object
                  properties:
                    Queues:
                      $ref: '#/components/schemas/Queues'
                      description: The queues to use to filter the metrics. You can specify up to 100 queues per request.
                    Channels:
                      $ref: '#/components/schemas/Channels'
                      description: The channel to use to filter the metrics.
                Groupings:
                  description: '<p>The grouping applied to the metrics returned. For example, when grouped by <code>QUEUE</code>, the metrics returned apply to each queue rather than aggregated for all queues. If you group by <code>CHANNEL</code>, you should include a Channels filter. VOICE, CHAT, and TASK channels are supported.</p> <p>If no <code>Grouping</code> is included in the request, a summary of metrics is returned.</p>'
                  type: array
                  items:
                    $ref: '#/components/schemas/Grouping'
                  maxItems: 2
                CurrentMetrics:
                  description: '<p>The metrics to retrieve. Specify the name and unit for each metric. The following metrics are available. For a description of all the metrics, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html">Real-time Metrics Definitions</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <dl> <dt>AGENTS_AFTER_CONTACT_WORK</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#aftercallwork-real-time">ACW</a> </p> </dd> <dt>AGENTS_AVAILABLE</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#available-real-time">Available</a> </p> </dd> <dt>AGENTS_ERROR</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#error-real-time">Error</a> </p> </dd> <dt>AGENTS_NON_PRODUCTIVE</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#non-productive-time-real-time">NPT (Non-Productive Time)</a> </p> </dd> <dt>AGENTS_ON_CALL</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#on-call-real-time">On contact</a> </p> </dd> <dt>AGENTS_ON_CONTACT</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#on-call-real-time">On contact</a> </p> </dd> <dt>AGENTS_ONLINE</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#online-real-time">Online</a> </p> </dd> <dt>AGENTS_STAFFED</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#staffed-real-time">Staffed</a> </p> </dd> <dt>CONTACTS_IN_QUEUE</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#in-queue-real-time">In queue</a> </p> </dd> <dt>CONTACTS_SCHEDULED</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#scheduled-real-time">Scheduled</a> </p> </dd> <dt>OLDEST_CONTACT_AGE</dt> <dd> <p>Unit: SECONDS</p> <p>When you use groupings, Unit says SECONDS but the Value is returned in MILLISECONDS. For example, if you get a response like this:</p> <p> <code>{ "Metric": { "Name": "OLDEST_CONTACT_AGE", "Unit": "SECONDS" }, "Value": 24113.0 </code>}</p> <p>The actual OLDEST_CONTACT_AGE is 24 seconds.</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#oldest-real-time">Oldest</a> </p> </dd> <dt>SLOTS_ACTIVE</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#active-real-time">Active</a> </p> </dd> <dt>SLOTS_AVAILABLE</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#availability-real-time">Availability</a> </p> </dd> </dl>'
                  type: array
                  items:
                    $ref: '#/components/schemas/CurrentMetric'
                NextToken:
                  description: <p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p> <p>The token expires after 5 minutes from the time it is created. Subsequent requests that use the token must use the same request parameters as the request that generated the token.</p>
                  type: string
                MaxResults:
                  description: The maximum number of results to return per page.
                  type: integer
                  minimum: 1
                  maximum: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/user/federate/{InstanceId}':
    get:
      operationId: GetFederationToken
      description: '<p>Retrieves a token for federation.</p> <note> <p>This API doesn''t support root users. If you try to invoke GetFederationToken with root credentials, an error message similar to the following one appears: </p> <p> <code>Provided identity: Principal: .... User: .... cannot be used for federation with Amazon Connect</code> </p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFederationTokenResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: UserNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '485':
          description: DuplicateResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/metrics/historical/{InstanceId}':
    post:
      operationId: GetMetricData
      description: '<p>Gets historical metric data from the specified Amazon Connect instance.</p> <p>For a description of each historical metric, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html">Historical Metrics Definitions</a> in the <i>Amazon Connect Administrator Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMetricDataResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - StartTime
                - EndTime
                - Filters
                - HistoricalMetrics
              properties:
                StartTime:
                  description: '<p>The timestamp, in UNIX Epoch time format, at which to start the reporting interval for the retrieval of historical metrics data. The time must be specified using a multiple of 5 minutes, such as 10:05, 10:10, 10:15.</p> <p>The start time cannot be earlier than 24 hours before the time of the request. Historical metrics are available only for 24 hours.</p>'
                  type: string
                  format: date-time
                EndTime:
                  description: '<p>The timestamp, in UNIX Epoch time format, at which to end the reporting interval for the retrieval of historical metrics data. The time must be specified using an interval of 5 minutes, such as 11:00, 11:05, 11:10, and must be later than the start time timestamp.</p> <p>The time range between the start and end time must be less than 24 hours.</p>'
                  type: string
                  format: date-time
                Filters:
                  description: Contains the filter to apply when retrieving metrics.
                  type: object
                  properties:
                    Queues:
                      $ref: '#/components/schemas/Queues'
                      description: The queues to use to filter the metrics. You can specify up to 100 queues per request.
                    Channels:
                      $ref: '#/components/schemas/Channels'
                      description: The channel to use to filter the metrics.
                Groupings:
                  description: '<p>The grouping applied to the metrics returned. For example, when results are grouped by queue, the metrics returned are grouped by queue. The values returned apply to the metrics for each queue rather than aggregated for all queues.</p> <p>If no grouping is specified, a summary of metrics for all queues is returned.</p>'
                  type: array
                  items:
                    $ref: '#/components/schemas/Grouping'
                  maxItems: 2
                HistoricalMetrics:
                  description: '<p>The metrics to retrieve. Specify the name, unit, and statistic for each metric. The following historical metrics are available. For a description of each metric, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html">Historical Metrics Definitions</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <note> <p>This API does not support a contacts incoming metric (there''s no CONTACTS_INCOMING metric missing from the documented list). </p> </note> <dl> <dt>ABANDON_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>AFTER_CONTACT_WORK_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>API_CONTACTS_HANDLED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CALLBACK_CONTACTS_HANDLED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_ABANDONED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_AGENT_HUNG_UP_FIRST</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_CONSULTED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_HANDLED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_HANDLED_INCOMING</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_HANDLED_OUTBOUND</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_HOLD_ABANDONS</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_MISSED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_QUEUED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_TRANSFERRED_IN</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_TRANSFERRED_IN_FROM_QUEUE</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_TRANSFERRED_OUT</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_TRANSFERRED_OUT_FROM_QUEUE</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>HANDLE_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>HOLD_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>INTERACTION_AND_HOLD_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>INTERACTION_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>OCCUPANCY</dt> <dd> <p>Unit: PERCENT</p> <p>Statistic: AVG</p> </dd> <dt>QUEUE_ANSWER_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>QUEUED_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: MAX</p> </dd> <dt>SERVICE_LEVEL</dt> <dd> <p>You can include up to 20 SERVICE_LEVEL metrics in a request.</p> <p>Unit: PERCENT</p> <p>Statistic: AVG</p> <p>Threshold: For <code>ThresholdValue</code>, enter any whole number from 1 to 604800 (inclusive), in seconds. For <code>Comparison</code>, you must enter <code>LT</code> (for "Less than"). </p> </dd> </dl>'
                  type: array
                  items:
                    $ref: '#/components/schemas/HistoricalMetric'
                NextToken:
                  description: The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
                  type: string
                MaxResults:
                  description: The maximum number of results to return per page.
                  type: integer
                  minimum: 1
                  maximum: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/instance/{InstanceId}/approved-origins':
    get:
      operationId: ListApprovedOrigins
      description: <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Returns a paginated list of all approved origins associated with the instance.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListApprovedOriginsResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return per page.
          schema:
            type: integer
            minimum: 1
            maximum: 25
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/instance/{InstanceId}/bots#lexVersion':
    get:
      operationId: ListBots
      description: '<p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>For the specified version of Amazon Lex, returns a paginated list of all the Amazon Lex bots currently associated with the instance. </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBotsResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return per page.
          schema:
            type: integer
            minimum: 1
            maximum: 25
        - name: lexVersion
          in: query
          required: true
          description: The version of Amazon Lex or Amazon Lex V2.
          schema:
            type: string
            enum:
              - V1
              - V2
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/contact-flows-summary/{InstanceId}':
    get:
      operationId: ListContactFlows
      description: '<p>Provides information about the contact flows for the specified Amazon Connect instance.</p> <p>You can also create and update contact flows using the <a href="https://docs.aws.amazon.com/connect/latest/adminguide/flow-language.html">Amazon Connect Flow language</a>.</p> <p>For more information about contact flows, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/concepts-contact-flows.html">Contact Flows</a> in the <i>Amazon Connect Administrator Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListContactFlowsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: contactFlowTypes
          in: query
          required: false
          description: The type of contact flow.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ContactFlowType'
            maxItems: 10
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return per page.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/hours-of-operations-summary/{InstanceId}':
    get:
      operationId: ListHoursOfOperations
      description: '<p>Provides information about the hours of operation for the specified Amazon Connect instance.</p> <p>For more information about hours of operation, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/set-hours-operation.html">Set the Hours of Operation for a Queue</a> in the <i>Amazon Connect Administrator Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHoursOfOperationsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return per page.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/instance/{InstanceId}/attributes':
    get:
      operationId: ListInstanceAttributes
      description: <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Returns a paginated list of all attribute types for the given instance.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInstanceAttributesResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return per page.
          schema:
            type: integer
            minimum: 1
            maximum: 7
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/instance/{InstanceId}/storage-configs#resourceType':
    get:
      operationId: ListInstanceStorageConfigs
      description: <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Returns a paginated list of storage configs for the identified instance and resource type.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInstanceStorageConfigsResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: resourceType
          in: query
          required: true
          description: A valid resource type.
          schema:
            type: string
            enum:
              - CHAT_TRANSCRIPTS
              - CALL_RECORDINGS
              - SCHEDULED_REPORTS
              - MEDIA_STREAMS
              - CONTACT_TRACE_RECORDS
              - AGENT_EVENTS
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return per page.
          schema:
            type: integer
            minimum: 1
            maximum: 10
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/instance/{InstanceId}/lambda-functions':
    get:
      operationId: ListLambdaFunctions
      description: <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Returns a paginated list of all Lambda functions that display in the dropdown options in the relevant contact flow blocks.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLambdaFunctionsResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return per page.
          schema:
            type: integer
            minimum: 1
            maximum: 25
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/instance/{InstanceId}/lex-bots':
    get:
      operationId: ListLexBots
      description: <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Returns a paginated list of all the Amazon Lex bots currently associated with the instance.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLexBotsResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return per page.
          schema:
            type: integer
            minimum: 1
            maximum: 25
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/phone-numbers-summary/{InstanceId}':
    get:
      operationId: ListPhoneNumbers
      description: '<p>Provides information about the phone numbers for the specified Amazon Connect instance. </p> <p>For more information about phone numbers, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/contact-center-phone-number.html">Set Up Phone Numbers for Your Contact Center</a> in the <i>Amazon Connect Administrator Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPhoneNumbersResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: phoneNumberTypes
          in: query
          required: false
          description: The type of phone number.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PhoneNumberType'
            maxItems: 2
        - name: phoneNumberCountryCodes
          in: query
          required: false
          description: The ISO country code.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PhoneNumberCountryCode'
            maxItems: 10
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return per page.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/prompts-summary/{InstanceId}':
    get:
      operationId: ListPrompts
      description: Provides information about the prompts for the specified Amazon Connect instance.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPromptsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return per page.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/queues/{InstanceId}/{QueueId}/quick-connects':
    get:
      operationId: ListQueueQuickConnects
      description: <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Lists the quick connects associated with a queue.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListQueueQuickConnectsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: QueueId
          in: path
          required: true
          description: The identifier for the queue.
          schema:
            type: string
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return per page.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/queues-summary/{InstanceId}':
    get:
      operationId: ListQueues
      description: '<p>Provides information about the queues for the specified Amazon Connect instance.</p> <p>If you do not specify a <code>QueueTypes</code> parameter, both standard and agent queues are returned. This might cause an unexpected truncation of results if you have more than 1000 agents and you limit the number of results of the API call in code.</p> <p>For more information about queues, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/concepts-queues-standard-and-agent.html">Queues: Standard and Agent</a> in the <i>Amazon Connect Administrator Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListQueuesResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: queueTypes
          in: query
          required: false
          description: The type of queue.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/QueueType'
            maxItems: 2
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return per page.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/routing-profiles/{InstanceId}/{RoutingProfileId}/queues':
    get:
      operationId: ListRoutingProfileQueues
      description: Lists the queues associated with a routing profile.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRoutingProfileQueuesResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: RoutingProfileId
          in: path
          required: true
          description: The identifier of the routing profile.
          schema:
            type: string
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return per page.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateRoutingProfileQueues
      description: Updates the properties associated with a set of queues for a routing profile.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: RoutingProfileId
          in: path
          required: true
          description: The identifier of the routing profile.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - QueueConfigs
              properties:
                QueueConfigs:
                  description: The queues to be updated for this routing profile. Queues must first be associated to the routing profile. You can do this using AssociateRoutingProfileQueues.
                  type: array
                  items:
                    $ref: '#/components/schemas/RoutingProfileQueueConfig'
                  minItems: 1
                  maxItems: 10
  '/routing-profiles-summary/{InstanceId}':
    get:
      operationId: ListRoutingProfiles
      description: '<p>Provides summary information about the routing profiles for the specified Amazon Connect instance.</p> <p>For more information about routing profiles, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/concepts-routing.html">Routing Profiles</a> and <a href="https://docs.aws.amazon.com/connect/latest/adminguide/routing-profiles.html">Create a Routing Profile</a> in the <i>Amazon Connect Administrator Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRoutingProfilesResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return per page.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/instance/{InstanceId}/security-keys':
    get:
      operationId: ListSecurityKeys
      description: <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Returns a paginated list of all security keys associated with the instance.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSecurityKeysResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return per page.
          schema:
            type: integer
            minimum: 1
            maximum: 2
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/security-profiles-summary/{InstanceId}':
    get:
      operationId: ListSecurityProfiles
      description: '<p>Provides summary information about the security profiles for the specified Amazon Connect instance.</p> <p>For more information about security profiles, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/connect-security-profiles.html">Security Profiles</a> in the <i>Amazon Connect Administrator Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSecurityProfilesResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return per page.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{resourceArn}':
    get:
      operationId: ListTagsForResource
      description: '<p>Lists the tags for the specified resource.</p> <p>For sample policies that use tags, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/security_iam_id-based-policy-examples.html">Amazon Connect Identity-Based Policy Examples</a> in the <i>Amazon Connect Administrator Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the resource.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: TagResource
      description: '<p>Adds the specified tags to the specified resource.</p> <p>The supported resource types are users, routing profiles, queues, quick connects, contact flows, agent status, and hours of operation.</p> <p>For sample policies that use tags, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/security_iam_id-based-policy-examples.html">Amazon Connect Identity-Based Policy Examples</a> in the <i>Amazon Connect Administrator Guide</i>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the resource.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tags
              properties:
                tags:
                  description: 'One or more tags. For example, { "tags": {"key1":"value1", "key2":"value2"} }.'
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
  '/user-hierarchy-groups-summary/{InstanceId}':
    get:
      operationId: ListUserHierarchyGroups
      description: '<p>Provides summary information about the hierarchy groups for the specified Amazon Connect instance.</p> <p>For more information about agent hierarchies, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/agent-hierarchy.html">Set Up Agent Hierarchies</a> in the <i>Amazon Connect Administrator Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUserHierarchyGroupsResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return per page.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/users-summary/{InstanceId}':
    get:
      operationId: ListUsers
      description: Provides summary information about the users for the specified Amazon Connect instance.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsersResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return per page.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /contact/resume-recording:
    post:
      operationId: ResumeContactRecording
      description: '<p>When a contact is being recorded, and the recording has been suspended using SuspendContactRecording, this API resumes recording the call.</p> <p>Only voice recordings are supported at this time.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResumeContactRecordingResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - InstanceId
                - ContactId
                - InitialContactId
              properties:
                InstanceId:
                  description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
                  type: string
                  minLength: 1
                  maxLength: 100
                ContactId:
                  description: The identifier of the contact.
                  type: string
                  minLength: 1
                  maxLength: 256
                InitialContactId:
                  description: The identifier of the contact. This is the identifier of the contact associated with the first interaction with the contact center.
                  type: string
                  minLength: 1
                  maxLength: 256
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /contact/chat:
    put:
      operationId: StartChatContact
      description: '<p>Initiates a contact flow to start a new chat for the customer. Response of this API provides a token required to obtain credentials from the <a href="https://docs.aws.amazon.com/connect-participant/latest/APIReference/API_CreateParticipantConnection.html">CreateParticipantConnection</a> API in the Amazon Connect Participant Service.</p> <p>When a new chat contact is successfully created, clients must subscribe to the participant’s connection for the created chat within 5 minutes. This is achieved by invoking <a href="https://docs.aws.amazon.com/connect-participant/latest/APIReference/API_CreateParticipantConnection.html">CreateParticipantConnection</a> with WEBSOCKET and CONNECTION_CREDENTIALS. </p> <p>A 429 error occurs in two situations:</p> <ul> <li> <p>API rate limit is exceeded. API TPS throttling returns a <code>TooManyRequests</code> exception.</p> </li> <li> <p>The <a href="https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html">quota for concurrent active chats</a> is exceeded. Active chat throttling returns a <code>LimitExceededException</code>.</p> </li> </ul> <p>For more information about chat, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/chat.html">Chat</a> in the <i>Amazon Connect Administrator Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartChatContactResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - InstanceId
                - ContactFlowId
                - ParticipantDetails
              properties:
                InstanceId:
                  description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
                  type: string
                  minLength: 1
                  maxLength: 100
                ContactFlowId:
                  description: '<p>The identifier of the contact flow for initiating the chat. To see the ContactFlowId in the Amazon Connect console user interface, on the navigation menu go to <b>Routing</b>, <b>Contact Flows</b>. Choose the contact flow. On the contact flow page, under the name of the contact flow, choose <b>Show additional flow information</b>. The ContactFlowId is the last part of the ARN, shown here in bold: </p> <p>arn:aws:connect:us-west-2:xxxxxxxxxxxx:instance/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/contact-flow/<b>846ec553-a005-41c0-8341-xxxxxxxxxxxx</b> </p>'
                  type: string
                  maxLength: 500
                Attributes:
                  description: '<p>A custom key-value pair using an attribute map. The attributes are standard Amazon Connect attributes. They can be accessed in contact flows just like any other contact attributes. </p> <p>There can be up to 32,768 UTF-8 bytes across all key-value pairs per contact. Attribute keys can include only alphanumeric, dash, and underscore characters.</p>'
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/AttributeValue'
                ParticipantDetails:
                  description: The customer's details.
                  type: object
                  properties:
                    DisplayName:
                      $ref: '#/components/schemas/DisplayName'
                      description: Display name of the participant.
                InitialMessage:
                  description: A chat message.
                  type: object
                  properties:
                    ContentType:
                      $ref: '#/components/schemas/ChatContentType'
                      description: The type of the content. Supported types are text and plain.
                    Content:
                      $ref: '#/components/schemas/ChatContent'
                      description: The content of the chat message.
                ClientToken:
                  description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'
                  type: string
                  maxLength: 500
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /contact/start-recording:
    post:
      operationId: StartContactRecording
      description: '<p>Starts recording the contact when the agent joins the call. StartContactRecording is a one-time action. For example, if you use StopContactRecording to stop recording an ongoing call, you can''t use StartContactRecording to restart it. For scenarios where the recording has started and you want to suspend and resume it, such as when collecting sensitive information (for example, a credit card number), use SuspendContactRecording and ResumeContactRecording.</p> <p>You can use this API to override the recording behavior configured in the <a href="https://docs.aws.amazon.com/connect/latest/adminguide/set-recording-behavior.html">Set recording behavior</a> block.</p> <p>Only voice recordings are supported at this time.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartContactRecordingResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - InstanceId
                - ContactId
                - InitialContactId
                - VoiceRecordingConfiguration
              properties:
                InstanceId:
                  description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
                  type: string
                  minLength: 1
                  maxLength: 100
                ContactId:
                  description: The identifier of the contact.
                  type: string
                  minLength: 1
                  maxLength: 256
                InitialContactId:
                  description: The identifier of the contact. This is the identifier of the contact associated with the first interaction with the contact center.
                  type: string
                  minLength: 1
                  maxLength: 256
                VoiceRecordingConfiguration:
                  description: Contains information about the recording configuration settings.
                  type: object
                  properties:
                    VoiceRecordingTrack:
                      $ref: '#/components/schemas/VoiceRecordingTrack'
                      description: Identifies which track is being recorded.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /contact/outbound-voice:
    put:
      operationId: StartOutboundVoiceContact
      description: '<p>Places an outbound call to a contact, and then initiates the contact flow. It performs the actions in the contact flow that''s specified (in <code>ContactFlowId</code>).</p> <p>Agents do not initiate the outbound API, which means that they do not dial the contact. If the contact flow places an outbound call to a contact, and then puts the contact in queue, the call is then routed to the agent, like any other inbound case.</p> <p>There is a 60-second dialing timeout for this operation. If the call is not connected after 60 seconds, it fails.</p> <note> <p>UK numbers with a 447 prefix are not allowed by default. Before you can dial these UK mobile numbers, you must submit a service quota increase request. For more information, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>. </p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartOutboundVoiceContactResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: DestinationNotAllowedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationNotAllowedException'
        '486':
          description: OutboundContactNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboundContactNotPermittedException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - DestinationPhoneNumber
                - ContactFlowId
                - InstanceId
              properties:
                DestinationPhoneNumber:
                  description: 'The phone number of the customer, in E.164 format.'
                  type: string
                ContactFlowId:
                  description: '<p>The identifier of the contact flow for the outbound call. To see the ContactFlowId in the Amazon Connect console user interface, on the navigation menu go to <b>Routing</b>, <b>Contact Flows</b>. Choose the contact flow. On the contact flow page, under the name of the contact flow, choose <b>Show additional flow information</b>. The ContactFlowId is the last part of the ARN, shown here in bold: </p> <p>arn:aws:connect:us-west-2:xxxxxxxxxxxx:instance/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/contact-flow/<b>846ec553-a005-41c0-8341-xxxxxxxxxxxx</b> </p>'
                  type: string
                  maxLength: 500
                InstanceId:
                  description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
                  type: string
                  minLength: 1
                  maxLength: 100
                ClientToken:
                  description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. The token is valid for 7 days after creation. If a contact is already started, the contact ID is returned. '
                  type: string
                  maxLength: 500
                SourcePhoneNumber:
                  description: 'The phone number associated with the Amazon Connect instance, in E.164 format. If you do not specify a source phone number, you must specify a queue.'
                  type: string
                QueueId:
                  description: 'The queue for the call. If you specify a queue, the phone displayed for caller ID is the phone number specified in the queue. If you do not specify a queue, the queue defined in the contact flow is used. If you do not specify a queue, you must specify a source phone number.'
                  type: string
                Attributes:
                  description: '<p>A custom key-value pair using an attribute map. The attributes are standard Amazon Connect attributes, and can be accessed in contact flows just like any other contact attributes.</p> <p>There can be up to 32,768 UTF-8 bytes across all key-value pairs per contact. Attribute keys can include only alphanumeric, dash, and underscore characters.</p>'
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/AttributeValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /contact/task:
    put:
      operationId: StartTaskContact
      description: Initiates a contact flow to start a new task.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartTaskContactResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '485':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - InstanceId
                - ContactFlowId
                - Name
              properties:
                InstanceId:
                  description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
                  type: string
                  minLength: 1
                  maxLength: 100
                PreviousContactId:
                  description: 'The identifier of the previous chat, voice, or task contact. '
                  type: string
                  minLength: 1
                  maxLength: 256
                ContactFlowId:
                  description: '<p>The identifier of the contact flow for initiating the tasks. To see the ContactFlowId in the Amazon Connect console user interface, on the navigation menu go to <b>Routing</b>, <b>Contact Flows</b>. Choose the contact flow. On the contact flow page, under the name of the contact flow, choose <b>Show additional flow information</b>. The ContactFlowId is the last part of the ARN, shown here in bold: </p> <p>arn:aws:connect:us-west-2:xxxxxxxxxxxx:instance/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/contact-flow/<b>846ec553-a005-41c0-8341-xxxxxxxxxxxx</b> </p>'
                  type: string
                  maxLength: 500
                Attributes:
                  description: '<p>A custom key-value pair using an attribute map. The attributes are standard Amazon Connect attributes, and can be accessed in contact flows just like any other contact attributes.</p> <p>There can be up to 32,768 UTF-8 bytes across all key-value pairs per contact. Attribute keys can include only alphanumeric, dash, and underscore characters.</p>'
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/AttributeValue'
                Name:
                  description: The name of a task that is shown to an agent in the Contact Control Panel (CCP).
                  type: string
                  minLength: 0
                  maxLength: 512
                References:
                  description: A formatted URL that is shown to an agent in the Contact Control Panel (CCP).
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/Reference'
                Description:
                  description: A description of the task that is shown to an agent in the Contact Control Panel (CCP).
                  type: string
                  minLength: 0
                  maxLength: 4096
                ClientToken:
                  description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'
                  type: string
                  maxLength: 500
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /contact/stop:
    post:
      operationId: StopContact
      description: Ends the specified contact.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopContactResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ContactNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactNotFoundException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ContactId
                - InstanceId
              properties:
                ContactId:
                  description: The ID of the contact.
                  type: string
                  minLength: 1
                  maxLength: 256
                InstanceId:
                  description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
                  type: string
                  minLength: 1
                  maxLength: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /contact/stop-recording:
    post:
      operationId: StopContactRecording
      description: '<p>Stops recording a call when a contact is being recorded. StopContactRecording is a one-time action. If you use StopContactRecording to stop recording an ongoing call, you can''t use StartContactRecording to restart it. For scenarios where the recording has started and you want to suspend it for sensitive information (for example, to collect a credit card number), and then restart it, use SuspendContactRecording and ResumeContactRecording.</p> <p>Only voice recordings are supported at this time.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopContactRecordingResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - InstanceId
                - ContactId
                - InitialContactId
              properties:
                InstanceId:
                  description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
                  type: string
                  minLength: 1
                  maxLength: 100
                ContactId:
                  description: The identifier of the contact.
                  type: string
                  minLength: 1
                  maxLength: 256
                InitialContactId:
                  description: The identifier of the contact. This is the identifier of the contact associated with the first interaction with the contact center.
                  type: string
                  minLength: 1
                  maxLength: 256
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /contact/suspend-recording:
    post:
      operationId: SuspendContactRecording
      description: '<p>When a contact is being recorded, this API suspends recording the call. For example, you might suspend the call recording while collecting sensitive information, such as a credit card number. Then use ResumeContactRecording to restart recording. </p> <p>The period of time that the recording is suspended is filled with silence in the final recording. </p> <p>Only voice recordings are supported at this time.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuspendContactRecordingResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - InstanceId
                - ContactId
                - InitialContactId
              properties:
                InstanceId:
                  description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
                  type: string
                  minLength: 1
                  maxLength: 100
                ContactId:
                  description: The identifier of the contact.
                  type: string
                  minLength: 1
                  maxLength: 256
                InitialContactId:
                  description: The identifier of the contact. This is the identifier of the contact associated with the first interaction with the contact center.
                  type: string
                  minLength: 1
                  maxLength: 256
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{resourceArn}#tagKeys':
    delete:
      operationId: UntagResource
      description: Removes the specified tags from the specified resource.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the resource.
          schema:
            type: string
        - name: tagKeys
          in: query
          required: true
          description: The tag keys.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TagKey'
            minItems: 1
            maxItems: 50
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /contact/attributes:
    post:
      operationId: UpdateContactAttributes
      description: '<p>Creates or updates user-defined contact attributes associated with the specified contact.</p> <p>You can create or update user-defined attributes for both ongoing and completed contacts. For example, while the call is active, you can update the customer''s name or the reason the customer called. You can add notes about steps that the agent took during the call that display to the next agent that takes the call. You can also update attributes for a contact using data from your CRM application and save the data with the contact in Amazon Connect. You could also flag calls for additional analysis, such as legal review or to identify abusive callers.</p> <p>Contact attributes are available in Amazon Connect for 24 months, and are then deleted. For information about CTR retention and the maximum size of the CTR attributes section, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html#feature-limits">Feature specifications</a> in the <i>Amazon Connect Administrator Guide</i>. </p> <p> <b>Important:</b> You cannot use the operation to update attributes for contacts that occurred prior to the release of the API, which was September 12, 2018. You can update attributes only for contacts that started after the release of the API. If you attempt to update attributes for a contact that occurred prior to the release of the API, a 400 error is returned. This applies also to queued callbacks that were initiated prior to the release of the API but are still active in your instance.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateContactAttributesResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - InitialContactId
                - InstanceId
                - Attributes
              properties:
                InitialContactId:
                  description: The identifier of the contact. This is the identifier of the contact associated with the first interaction with the contact center.
                  type: string
                  minLength: 1
                  maxLength: 256
                InstanceId:
                  description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
                  type: string
                  minLength: 1
                  maxLength: 100
                Attributes:
                  description: '<p>The Amazon Connect attributes. These attributes can be accessed in contact flows just like any other contact attributes.</p> <p>You can have up to 32,768 UTF-8 bytes across all attributes for a contact. Attribute keys can include only alphanumeric, dash, and underscore characters.</p>'
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/AttributeValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/contact-flows/{InstanceId}/{ContactFlowId}/content':
    post:
      operationId: UpdateContactFlowContent
      description: '<p>Updates the specified contact flow.</p> <p>You can also create and update contact flows using the <a href="https://docs.aws.amazon.com/connect/latest/adminguide/flow-language.html">Amazon Connect Flow language</a>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidContactFlowException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidContactFlowException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: ContactFlowId
          in: path
          required: true
          description: The identifier of the contact flow.
          schema:
            type: string
            maxLength: 500
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Content
              properties:
                Content:
                  description: 'The JSON string that represents contact flow’s content. For an example, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/flow-language-example.html">Example contact flow in Amazon Connect Flow language</a> in the <i>Amazon Connect Administrator Guide</i>. '
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/contact-flows/{InstanceId}/{ContactFlowId}/name':
    post:
      operationId: UpdateContactFlowName
      description: '<p>The name of the contact flow.</p> <p>You can also create and update contact flows using the <a href="https://docs.aws.amazon.com/connect/latest/adminguide/flow-language.html">Amazon Connect Flow language</a>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: DuplicateResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: ContactFlowId
          in: path
          required: true
          description: The identifier of the contact flow.
          schema:
            type: string
            maxLength: 500
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  description: The name of the contact flow.
                  type: string
                  minLength: 1
                Description:
                  description: The description of the contact flow.
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/queues/{InstanceId}/{QueueId}/hours-of-operation':
    post:
      operationId: UpdateQueueHoursOfOperation
      description: <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Updates the hours of operation for the specified queue.</p>
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: QueueId
          in: path
          required: true
          description: The identifier for the queue.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - HoursOfOperationId
              properties:
                HoursOfOperationId:
                  description: The identifier for the hours of operation.
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/queues/{InstanceId}/{QueueId}/max-contacts':
    post:
      operationId: UpdateQueueMaxContacts
      description: <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Updates the maximum number of contacts allowed in a queue before it is considered full.</p>
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: QueueId
          in: path
          required: true
          description: The identifier for the queue.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MaxContacts:
                  description: The maximum number of contacts that can be in the queue before it is considered full.
                  type: integer
                  minimum: 0
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/queues/{InstanceId}/{QueueId}/name':
    post:
      operationId: UpdateQueueName
      description: <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Updates the name and description of a queue. At least <code>Name</code> or <code>Description</code> must be provided.</p>
      responses:
        '200':
          description: Success
        '480':
          description: DuplicateResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: QueueId
          in: path
          required: true
          description: The identifier for the queue.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  description: The name of the queue.
                  type: string
                  minLength: 1
                  maxLength: 127
                Description:
                  description: The description of the queue.
                  type: string
                  minLength: 1
                  maxLength: 250
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/queues/{InstanceId}/{QueueId}/outbound-caller-config':
    post:
      operationId: UpdateQueueOutboundCallerConfig
      description: '<p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Updates the outbound caller ID name, number, and outbound whisper flow for a specified queue.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: QueueId
          in: path
          required: true
          description: The identifier for the queue.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - OutboundCallerConfig
              properties:
                OutboundCallerConfig:
                  description: 'The outbound caller ID name, number, and outbound whisper flow.'
                  type: object
                  properties:
                    OutboundCallerIdName:
                      $ref: '#/components/schemas/OutboundCallerIdName'
                      description: The caller ID name.
                    OutboundCallerIdNumberId:
                      $ref: '#/components/schemas/PhoneNumberId'
                      description: The caller ID number.
                    OutboundFlowId:
                      $ref: '#/components/schemas/ContactFlowId'
                      description: The outbound whisper flow to be used during an outbound call.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/queues/{InstanceId}/{QueueId}/status':
    post:
      operationId: UpdateQueueStatus
      description: <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Updates the status of the queue.</p>
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: QueueId
          in: path
          required: true
          description: The identifier for the queue.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Status
              properties:
                Status:
                  description: The status of the queue.
                  type: string
                  enum:
                    - ENABLED
                    - DISABLED
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/quick-connects/{InstanceId}/{QuickConnectId}/config':
    post:
      operationId: UpdateQuickConnectConfig
      description: Updates the configuration settings for the specified quick connect.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: QuickConnectId
          in: path
          required: true
          description: The identifier for the quick connect.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - QuickConnectConfig
              properties:
                QuickConnectConfig:
                  description: Contains configuration settings for a quick connect.
                  type: object
                  properties:
                    QuickConnectType:
                      $ref: '#/components/schemas/QuickConnectType'
                      description: 'The type of quick connect. In the Amazon Connect console, when you create a quick connect, you are prompted to assign one of the following types: Agent (USER), External (PHONE_NUMBER), or Queue (QUEUE). '
                    UserConfig:
                      $ref: '#/components/schemas/UserQuickConnectConfig'
                      description: The user configuration. This is required only if QuickConnectType is USER.
                    QueueConfig:
                      $ref: '#/components/schemas/QueueQuickConnectConfig'
                      description: The queue configuration. This is required only if QuickConnectType is QUEUE.
                    PhoneConfig:
                      $ref: '#/components/schemas/PhoneNumberQuickConnectConfig'
                      description: The phone configuration. This is required only if QuickConnectType is PHONE_NUMBER.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/quick-connects/{InstanceId}/{QuickConnectId}/name':
    post:
      operationId: UpdateQuickConnectName
      description: Updates the name and description of a quick connect. The request accepts the following data in JSON format. At least <code>Name</code> or <code>Description</code> must be provided.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: QuickConnectId
          in: path
          required: true
          description: The identifier for the quick connect.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  description: The name of the quick connect.
                  type: string
                  minLength: 1
                  maxLength: 127
                Description:
                  description: The description of the quick connect.
                  type: string
                  minLength: 0
                  maxLength: 250
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/routing-profiles/{InstanceId}/{RoutingProfileId}/concurrency':
    post:
      operationId: UpdateRoutingProfileConcurrency
      description: Updates the channels that agents can handle in the Contact Control Panel (CCP) for a routing profile.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: RoutingProfileId
          in: path
          required: true
          description: The identifier of the routing profile.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - MediaConcurrencies
              properties:
                MediaConcurrencies:
                  description: The channels that agents can handle in the Contact Control Panel (CCP).
                  type: array
                  items:
                    $ref: '#/components/schemas/MediaConcurrency'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/routing-profiles/{InstanceId}/{RoutingProfileId}/default-outbound-queue':
    post:
      operationId: UpdateRoutingProfileDefaultOutboundQueue
      description: Updates the default outbound queue of a routing profile.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: RoutingProfileId
          in: path
          required: true
          description: The identifier of the routing profile.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - DefaultOutboundQueueId
              properties:
                DefaultOutboundQueueId:
                  description: The identifier for the default outbound queue.
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/routing-profiles/{InstanceId}/{RoutingProfileId}/name':
    post:
      operationId: UpdateRoutingProfileName
      description: Updates the name and description of a routing profile. The request accepts the following data in JSON format. At least <code>Name</code> or <code>Description</code> must be provided.
      responses:
        '200':
          description: Success
        '480':
          description: DuplicateResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: RoutingProfileId
          in: path
          required: true
          description: The identifier of the routing profile.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  description: The name of the routing profile. Must not be more than 127 characters.
                  type: string
                  minLength: 1
                  maxLength: 127
                Description:
                  description: The description of the routing profile. Must not be more than 250 characters.
                  type: string
                  minLength: 1
                  maxLength: 250
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/users/{InstanceId}/{UserId}/hierarchy':
    post:
      operationId: UpdateUserHierarchy
      description: Assigns the specified hierarchy group to the specified user.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: UserId
          in: path
          required: true
          description: The identifier of the user account.
          schema:
            type: string
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                HierarchyGroupId:
                  description: The identifier of the hierarchy group.
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/user-hierarchy-groups/{InstanceId}/{HierarchyGroupId}/name':
    post:
      operationId: UpdateUserHierarchyGroupName
      description: 'Updates the name of the user hierarchy group. '
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: DuplicateResourceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '485':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: HierarchyGroupId
          in: path
          required: true
          description: The identifier of the hierarchy group.
          schema:
            type: string
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
              properties:
                Name:
                  description: The name of the hierarchy group. Must not be more than 100 characters.
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/users/{InstanceId}/{UserId}/identity-info':
    post:
      operationId: UpdateUserIdentityInfo
      description: '<p>Updates the identity information for the specified user.</p> <important> <p>We strongly recommend limiting who has the ability to invoke <code>UpdateUserIdentityInfo</code>. Someone with that ability can change the login credentials of other users by changing their email address. This poses a security risk to your organization. They can change the email address of a user to the attacker''s email address, and then reset the password through email. For more information, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/security-profile-best-practices.html">Best Practices for Security Profiles</a> in the <i>Amazon Connect Administrator Guide</i>.</p> </important>'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: UserId
          in: path
          required: true
          description: The identifier of the user account.
          schema:
            type: string
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - IdentityInfo
              properties:
                IdentityInfo:
                  description: Contains information about the identity of a user.
                  type: object
                  properties:
                    FirstName:
                      $ref: '#/components/schemas/AgentFirstName'
                      description: The first name. This is required if you are using Amazon Connect or SAML for identity management.
                    LastName:
                      $ref: '#/components/schemas/AgentLastName'
                      description: The last name. This is required if you are using Amazon Connect or SAML for identity management.
                    Email:
                      $ref: '#/components/schemas/Email'
                      description: 'The email address. If you are using SAML for identity management and include this parameter, an error is returned.'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/users/{InstanceId}/{UserId}/phone-config':
    post:
      operationId: UpdateUserPhoneConfig
      description: Updates the phone configuration settings for the specified user.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: UserId
          in: path
          required: true
          description: The identifier of the user account.
          schema:
            type: string
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - PhoneConfig
              properties:
                PhoneConfig:
                  description: Contains information about the phone configuration settings for a user.
                  type: object
                  properties:
                    PhoneType:
                      $ref: '#/components/schemas/PhoneType'
                      description: The phone type.
                    AutoAccept:
                      $ref: '#/components/schemas/AutoAccept'
                      description: The Auto accept setting.
                    AfterContactWorkTimeLimit:
                      $ref: '#/components/schemas/AfterContactWorkTimeLimit'
                      description: 'The After Call Work (ACW) timeout setting, in seconds.'
                    DeskPhoneNumber:
                      $ref: '#/components/schemas/PhoneNumber'
                      description: The phone number for the user's desk phone.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/users/{InstanceId}/{UserId}/routing-profile':
    post:
      operationId: UpdateUserRoutingProfile
      description: Assigns the specified routing profile to the specified user.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: UserId
          in: path
          required: true
          description: The identifier of the user account.
          schema:
            type: string
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - RoutingProfileId
              properties:
                RoutingProfileId:
                  description: The identifier of the routing profile for the user.
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/users/{InstanceId}/{UserId}/security-profiles':
    post:
      operationId: UpdateUserSecurityProfiles
      description: Assigns the specified security profiles to the specified user.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      parameters:
        - name: UserId
          in: path
          required: true
          description: The identifier of the user account.
          schema:
            type: string
        - name: InstanceId
          in: path
          required: true
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
          schema:
            type: string
            minLength: 1
            maxLength: 100
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - SecurityProfileIds
              properties:
                SecurityProfileIds:
                  description: The identifiers of the security profiles for the user.
                  type: array
                  items:
                    $ref: '#/components/schemas/SecurityProfileId'
                  minItems: 1
                  maxItems: 10
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    ResourceNotFoundException: {}
    ResourceConflictException: {}
    InternalServiceException: {}
    InvalidRequestException: {}
    InvalidParameterException: {}
    ServiceQuotaExceededException: {}
    ThrottlingException: {}
    BotName:
      type: string
      maxLength: 50
    LexRegion:
      type: string
      maxLength: 60
    AliasArn:
      type: string
      minLength: 1
      maxLength: 100
    LimitExceededException: {}
    AssociateInstanceStorageConfigResponse:
      type: object
      properties:
        AssociationId:
          $ref: '#/components/schemas/AssociationId'
          description: The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID.
    AssociationId:
      type: string
      minLength: 1
      maxLength: 100
    StorageType:
      type: string
      enum:
        - S3
        - KINESIS_VIDEO_STREAM
        - KINESIS_STREAM
        - KINESIS_FIREHOSE
    S3Config:
      type: object
      required:
        - BucketName
        - BucketPrefix
      properties:
        BucketName:
          $ref: '#/components/schemas/BucketName'
          description: The S3 bucket name.
        BucketPrefix:
          $ref: '#/components/schemas/Prefix'
          description: The S3 bucket prefix.
        EncryptionConfig:
          $ref: '#/components/schemas/EncryptionConfig'
          description: The Amazon S3 encryption configuration.
      description: Information about the Amazon Simple Storage Service (Amazon S3) storage type.
    KinesisVideoStreamConfig:
      type: object
      required:
        - Prefix
        - RetentionPeriodHours
        - EncryptionConfig
      properties:
        Prefix:
          $ref: '#/components/schemas/Prefix'
          description: The prefix of the video stream.
        RetentionPeriodHours:
          $ref: '#/components/schemas/Hours'
          description: '<p>The number of hours data is retained in the stream. Kinesis Video Streams retains the data in a data store that is associated with the stream.</p> <p>The default value is 0, indicating that the stream does not persist data.</p>'
        EncryptionConfig:
          $ref: '#/components/schemas/EncryptionConfig'
          description: The encryption configuration.
      description: Configuration information of a Kinesis video stream.
    KinesisStreamConfig:
      type: object
      required:
        - StreamArn
      properties:
        StreamArn:
          $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the data stream.
      description: Configuration information of a Kinesis data stream.
    KinesisFirehoseConfig:
      type: object
      required:
        - FirehoseArn
      properties:
        FirehoseArn:
          $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the delivery stream.
      description: Configuration information of a Kinesis Data Firehose delivery stream.
    QuickConnectId:
      type: string
    RoutingProfileQueueConfig:
      type: object
      required:
        - QueueReference
        - Priority
        - Delay
      properties:
        QueueReference:
          $ref: '#/components/schemas/RoutingProfileQueueReference'
          description: Contains information about a queue resource.
        Priority:
          $ref: '#/components/schemas/Priority'
          description: 'The order in which contacts are to be handled for the queue. For more information, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/concepts-routing-profiles-priority.html">Queues: priority and delay</a>.'
        Delay:
          $ref: '#/components/schemas/Delay'
          description: 'The delay, in seconds, a contact should be in the queue before they are routed to an available agent. For more information, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/concepts-routing-profiles-priority.html">Queues: priority and delay</a> in the <i>Amazon Connect Administrator Guide</i>.'
      description: Contains information about the queue and channel for which priority and delay can be set.
    AssociateSecurityKeyResponse:
      type: object
      properties:
        AssociationId:
          $ref: '#/components/schemas/AssociationId'
          description: The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID.
    CreateAgentStatusResponse:
      type: object
      properties:
        AgentStatusARN:
          $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the agent status.
        AgentStatusId:
          $ref: '#/components/schemas/AgentStatusId'
          description: The identifier of the agent status.
    TagValue:
      type: string
      maxLength: 256
    DuplicateResourceException: {}
    CreateContactFlowResponse:
      type: object
      properties:
        ContactFlowId:
          $ref: '#/components/schemas/ContactFlowId'
          description: The identifier of the contact flow.
        ContactFlowArn:
          $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the contact flow.
    InvalidContactFlowException: {}
    CreateHoursOfOperationResponse:
      type: object
      properties:
        HoursOfOperationId:
          $ref: '#/components/schemas/HoursOfOperationId'
          description: The identifier for the hours of operation.
        HoursOfOperationArn:
          $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) for the hours of operation.
    HoursOfOperationConfig:
      type: object
      required:
        - Day
        - StartTime
        - EndTime
      properties:
        Day:
          $ref: '#/components/schemas/HoursOfOperationDays'
          description: The day that the hours of operation applies to.
        StartTime:
          $ref: '#/components/schemas/HoursOfOperationTimeSlice'
          description: The start time that your contact center is open.
        EndTime:
          $ref: '#/components/schemas/HoursOfOperationTimeSlice'
          description: The end time that your contact center is closes.
      description: Contains information about the hours of operation.
    CreateInstanceResponse:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/InstanceId'
          description: The identifier for the instance.
        Arn:
          $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the instance.
    CreateIntegrationAssociationResponse:
      type: object
      properties:
        IntegrationAssociationId:
          $ref: '#/components/schemas/IntegrationAssociationId'
          description: The identifier for the association.
        IntegrationAssociationArn:
          $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) for the association.
    CreateQueueResponse:
      type: object
      properties:
        QueueArn:
          $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the queue.
        QueueId:
          $ref: '#/components/schemas/QueueId'
          description: The identifier for the queue.
    OutboundCallerIdName:
      type: string
      minLength: 1
      maxLength: 255
    PhoneNumberId:
      type: string
    ContactFlowId:
      type: string
      maxLength: 500
    CreateQuickConnectResponse:
      type: object
      properties:
        QuickConnectARN:
          $ref: '#/components/schemas/ARN'
          description: 'The Amazon Resource Name (ARN) for the quick connect. '
        QuickConnectId:
          $ref: '#/components/schemas/QuickConnectId'
          description: 'The identifier for the quick connect. '
    QuickConnectType:
      type: string
      enum:
        - USER
        - QUEUE
        - PHONE_NUMBER
    UserQuickConnectConfig:
      type: object
      required:
        - UserId
        - ContactFlowId
      properties:
        UserId:
          $ref: '#/components/schemas/UserId'
          description: The identifier of the user.
        ContactFlowId:
          $ref: '#/components/schemas/ContactFlowId'
          description: The identifier of the contact flow.
      description: Contains information about the quick connect configuration settings for a user. The contact flow must be of type Transfer to Agent.
    QueueQuickConnectConfig:
      type: object
      required:
        - QueueId
        - ContactFlowId
      properties:
        QueueId:
          $ref: '#/components/schemas/QueueId'
          description: The identifier for the queue.
        ContactFlowId:
          $ref: '#/components/schemas/ContactFlowId'
          description: The identifier of the contact flow.
      description: Contains information about a queue for a quick connect. The contact flow must be of type Transfer to Queue.
    PhoneNumberQuickConnectConfig:
      type: object
      required:
        - PhoneNumber
      properties:
        PhoneNumber:
          $ref: '#/components/schemas/PhoneNumber'
          description: The phone number in E.164 format.
      description: Contains information about a phone number for a quick connect.
    CreateRoutingProfileResponse:
      type: object
      properties:
        RoutingProfileArn:
          $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the routing profile.
        RoutingProfileId:
          $ref: '#/components/schemas/RoutingProfileId'
          description: The identifier of the routing profile.
    MediaConcurrency:
      type: object
      required:
        - Channel
        - Concurrency
      properties:
        Channel:
          $ref: '#/components/schemas/Channel'
          description: The channels that agents can handle in the Contact Control Panel (CCP).
        Concurrency:
          $ref: '#/components/schemas/Concurrency'
          description: '<p>The number of contacts an agent can have on a channel simultaneously.</p> <p>Valid Range for <code>VOICE</code>: Minimum value of 1. Maximum value of 1.</p> <p>Valid Range for <code>CHAT</code>: Minimum value of 1. Maximum value of 10.</p> <p>Valid Range for <code>TASK</code>: Minimum value of 1. Maximum value of 10.</p>'
      description: 'Contains information about which channels are supported, and how many contacts an agent can have on a channel simultaneously.'
    CreateUseCaseResponse:
      type: object
      properties:
        UseCaseId:
          $ref: '#/components/schemas/UseCaseId'
          description: The identifier of the use case.
        UseCaseArn:
          $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) for the use case.
    CreateUserResponse:
      type: object
      properties:
        UserId:
          $ref: '#/components/schemas/UserId'
          description: The identifier of the user account.
        UserArn:
          $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the user account.
    AgentFirstName:
      type: string
      minLength: 1
      maxLength: 100
    AgentLastName:
      type: string
      minLength: 1
      maxLength: 100
    Email:
      type: string
    PhoneType:
      type: string
      enum:
        - SOFT_PHONE
        - DESK_PHONE
    AutoAccept:
      type: boolean
    AfterContactWorkTimeLimit:
      type: integer
      minimum: 0
    PhoneNumber:
      type: string
    SecurityProfileId:
      type: string
    CreateUserHierarchyGroupResponse:
      type: object
      properties:
        HierarchyGroupId:
          $ref: '#/components/schemas/HierarchyGroupId'
          description: The identifier of the hierarchy group.
        HierarchyGroupArn:
          $ref: '#/components/schemas/ARN'
          description: 'The Amazon Resource Name (ARN) of the hierarchy group. '
    ResourceInUseException: {}
    DescribeAgentStatusResponse:
      type: object
      properties:
        AgentStatus:
          $ref: '#/components/schemas/AgentStatus'
          description: The agent status.
    DescribeContactFlowResponse:
      type: object
      properties:
        ContactFlow:
          $ref: '#/components/schemas/ContactFlow'
          description: Information about the contact flow.
    ContactFlowNotPublishedException: {}
    DescribeHoursOfOperationResponse:
      type: object
      properties:
        HoursOfOperation:
          $ref: '#/components/schemas/HoursOfOperation'
          description: The hours of operation.
    DescribeInstanceResponse:
      type: object
      properties:
        Instance:
          $ref: '#/components/schemas/Instance'
          description: The name of the instance.
    DescribeInstanceAttributeResponse:
      type: object
      properties:
        Attribute:
          $ref: '#/components/schemas/Attribute'
          description: The type of attribute.
    DescribeInstanceStorageConfigResponse:
      type: object
      properties:
        StorageConfig:
          $ref: '#/components/schemas/InstanceStorageConfig'
          description: A valid storage type.
    DescribeQueueResponse:
      type: object
      properties:
        Queue:
          $ref: '#/components/schemas/Queue'
          description: The name of the queue.
    DescribeQuickConnectResponse:
      type: object
      properties:
        QuickConnect:
          $ref: '#/components/schemas/QuickConnect'
          description: Information about the quick connect.
    DescribeRoutingProfileResponse:
      type: object
      properties:
        RoutingProfile:
          $ref: '#/components/schemas/RoutingProfile'
          description: The routing profile.
    DescribeUserResponse:
      type: object
      properties:
        User:
          $ref: '#/components/schemas/User'
          description: Information about the user account and configuration settings.
    DescribeUserHierarchyGroupResponse:
      type: object
      properties:
        HierarchyGroup:
          $ref: '#/components/schemas/HierarchyGroup'
          description: Information about the hierarchy group.
    DescribeUserHierarchyStructureResponse:
      type: object
      properties:
        HierarchyStructure:
          $ref: '#/components/schemas/HierarchyStructure'
          description: Information about the hierarchy structure.
    RoutingProfileQueueReference:
      type: object
      required:
        - QueueId
        - Channel
      properties:
        QueueId:
          $ref: '#/components/schemas/QueueId'
          description: The identifier for the queue.
        Channel:
          $ref: '#/components/schemas/Channel'
          description: The channels agents can handle in the Contact Control Panel (CCP) for this routing profile.
      description: Contains the channel and queue identifier for a routing profile.
    GetContactAttributesResponse:
      type: object
      properties:
        Attributes:
          $ref: '#/components/schemas/Attributes'
          description: Information about the attributes.
    GetCurrentMetricDataResponse:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: '<p>If there are additional results, this is the token for the next set of results.</p> <p>The token expires after 5 minutes from the time it is created. Subsequent requests that use the token must use the same request parameters as the request that generated the token.</p>'
        MetricResults:
          $ref: '#/components/schemas/CurrentMetricResults'
          description: Information about the real-time metrics.
        DataSnapshotTime:
          $ref: '#/components/schemas/timestamp'
          description: The time at which the metrics were retrieved and cached for pagination.
    Queues:
      type: array
      items:
        $ref: '#/components/schemas/QueueId'
      minItems: 1
      maxItems: 100
    Channels:
      type: array
      items:
        $ref: '#/components/schemas/Channel'
      maxItems: 1
    Grouping:
      type: string
      enum:
        - QUEUE
        - CHANNEL
    CurrentMetric:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/CurrentMetricName'
          description: The name of the metric.
        Unit:
          $ref: '#/components/schemas/Unit'
          description: The unit for the metric.
      description: 'Contains information about a real-time metric. For a description of each metric, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html">Real-time Metrics Definitions</a> in the <i>Amazon Connect Administrator Guide</i>.'
    GetFederationTokenResponse:
      type: object
      properties:
        Credentials:
          $ref: '#/components/schemas/Credentials'
          description: The credentials to use for federation.
    UserNotFoundException: {}
    GetMetricDataResponse:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: '<p>If there are additional results, this is the token for the next set of results.</p> <p>The token expires after 5 minutes from the time it is created. Subsequent requests that use the token must use the same request parameters as the request that generated the token.</p>'
        MetricResults:
          $ref: '#/components/schemas/HistoricalMetricResults'
          description: '<p>Information about the historical metrics.</p> <p>If no grouping is specified, a summary of metric data is returned.</p>'
    HistoricalMetric:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/HistoricalMetricName'
          description: The name of the metric.
        Threshold:
          $ref: '#/components/schemas/Threshold'
          description: 'The threshold for the metric, used with service level metrics.'
        Statistic:
          $ref: '#/components/schemas/Statistic'
          description: The statistic for the metric.
        Unit:
          $ref: '#/components/schemas/Unit'
          description: The unit for the metric.
      description: 'Contains information about a historical metric. For a description of each metric, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html">Historical Metrics Definitions</a> in the <i>Amazon Connect Administrator Guide</i>.'
    ListAgentStatusResponse:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If there are additional results, this is the token for the next set of results.'
        AgentStatusSummaryList:
          $ref: '#/components/schemas/AgentStatusSummaryList'
          description: A summary of agent statuses.
    AgentStatusType:
      type: string
      enum:
        - ROUTABLE
        - CUSTOM
        - OFFLINE
    ListApprovedOriginsResponse:
      type: object
      properties:
        Origins:
          $ref: '#/components/schemas/OriginsList'
          description: The approved origins.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If there are additional results, this is the token for the next set of results.'
    ListBotsResponse:
      type: object
      properties:
        LexBots:
          $ref: '#/components/schemas/LexBotConfigList'
          description: The names and Regions of the Amazon Lex or Amazon Lex V2 bots associated with the specified instance.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If there are additional results, this is the token for the next set of results.'
    ListContactFlowsResponse:
      type: object
      properties:
        ContactFlowSummaryList:
          $ref: '#/components/schemas/ContactFlowSummaryList'
          description: Information about the contact flows.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If there are additional results, this is the token for the next set of results.'
    ContactFlowType:
      type: string
      enum:
        - CONTACT_FLOW
        - CUSTOMER_QUEUE
        - CUSTOMER_HOLD
        - CUSTOMER_WHISPER
        - AGENT_HOLD
        - AGENT_WHISPER
        - OUTBOUND_WHISPER
        - AGENT_TRANSFER
        - QUEUE_TRANSFER
    ListHoursOfOperationsResponse:
      type: object
      properties:
        HoursOfOperationSummaryList:
          $ref: '#/components/schemas/HoursOfOperationSummaryList'
          description: Information about the hours of operation.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If there are additional results, this is the token for the next set of results.'
    ListInstanceAttributesResponse:
      type: object
      properties:
        Attributes:
          $ref: '#/components/schemas/AttributesList'
          description: The attribute types.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If there are additional results, this is the token for the next set of results.'
    ListInstanceStorageConfigsResponse:
      type: object
      properties:
        StorageConfigs:
          $ref: '#/components/schemas/InstanceStorageConfigs'
          description: A valid storage type.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If there are additional results, this is the token for the next set of results.'
    ListInstancesResponse:
      type: object
      properties:
        InstanceSummaryList:
          $ref: '#/components/schemas/InstanceSummaryList'
          description: Information about the instances.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If there are additional results, this is the token for the next set of results.'
    ListIntegrationAssociationsResponse:
      type: object
      properties:
        IntegrationAssociationSummaryList:
          $ref: '#/components/schemas/IntegrationAssociationSummaryList'
          description: The AppIntegration associations.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If there are additional results, this is the token for the next set of results.'
    ListLambdaFunctionsResponse:
      type: object
      properties:
        LambdaFunctions:
          $ref: '#/components/schemas/FunctionArnsList'
          description: The Lambdafunction ARNs associated with the specified instance.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If there are additional results, this is the token for the next set of results.'
    ListLexBotsResponse:
      type: object
      properties:
        LexBots:
          $ref: '#/components/schemas/LexBotsList'
          description: The names and Regions of the Amazon Lex bots associated with the specified instance.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If there are additional results, this is the token for the next set of results.'
    ListPhoneNumbersResponse:
      type: object
      properties:
        PhoneNumberSummaryList:
          $ref: '#/components/schemas/PhoneNumberSummaryList'
          description: Information about the phone numbers.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If there are additional results, this is the token for the next set of results.'
    PhoneNumberType:
      type: string
      enum:
        - TOLL_FREE
        - DID
    PhoneNumberCountryCode:
      type: string
      enum:
        - AF
        - AL
        - DZ
        - AS
        - AD
        - AO
        - AI
        - AQ
        - AG
        - AR
        - AM
        - AW
        - AU
        - AT
        - AZ
        - BS
        - BH
        - BD
        - BB
        - BY
        - BE
        - BZ
        - BJ
        - BM
        - BT
        - BO
        - BA
        - BW
        - BR
        - IO
        - VG
        - BN
        - BG
        - BF
        - BI
        - KH
        - CM
        - CA
        - CV
        - KY
        - CF
        - TD
        - CL
        - CN
        - CX
        - CC
        - CO
        - KM
        - CK
        - CR
        - HR
        - CU
        - CW
        - CY
        - CZ
        - CD
        - DK
        - DJ
        - DM
        - DO
        - TL
        - EC
        - EG
        - SV
        - GQ
        - ER
        - EE
        - ET
        - FK
        - FO
        - FJ
        - FI
        - FR
        - PF
        - GA
        - GM
        - GE
        - DE
        - GH
        - GI
        - GR
        - GL
        - GD
        - GU
        - GT
        - GG
        - GN
        - GW
        - GY
        - HT
        - HN
        - HK
        - HU
        - IS
        - IN
        - ID
        - IR
        - IQ
        - IE
        - IM
        - IL
        - IT
        - CI
        - JM
        - JP
        - JE
        - JO
        - KZ
        - KE
        - KI
        - KW
        - KG
        - LA
        - LV
        - LB
        - LS
        - LR
        - LY
        - LI
        - LT
        - LU
        - MO
        - MK
        - MG
        - MW
        - MY
        - MV
        - ML
        - MT
        - MH
        - MR
        - MU
        - YT
        - MX
        - FM
        - MD
        - MC
        - MN
        - ME
        - MS
        - MA
        - MZ
        - MM
        - NA
        - NR
        - NP
        - NL
        - AN
        - NC
        - NZ
        - NI
        - NE
        - NG
        - NU
        - KP
        - MP
        - 'NO'
        - OM
        - PK
        - PW
        - PA
        - PG
        - PY
        - PE
        - PH
        - PN
        - PL
        - PT
        - PR
        - QA
        - CG
        - RE
        - RO
        - RU
        - RW
        - BL
        - SH
        - KN
        - LC
        - MF
        - PM
        - VC
        - WS
        - SM
        - ST
        - SA
        - SN
        - RS
        - SC
        - SL
        - SG
        - SX
        - SK
        - SI
        - SB
        - SO
        - ZA
        - KR
        - ES
        - LK
        - SD
        - SR
        - SJ
        - SZ
        - SE
        - CH
        - SY
        - TW
        - TJ
        - TZ
        - TH
        - TG
        - TK
        - TO
        - TT
        - TN
        - TR
        - TM
        - TC
        - TV
        - VI
        - UG
        - UA
        - AE
        - GB
        - US
        - UY
        - UZ
        - VU
        - VA
        - VE
        - VN
        - WF
        - EH
        - YE
        - ZM
        - ZW
    ListPromptsResponse:
      type: object
      properties:
        PromptSummaryList:
          $ref: '#/components/schemas/PromptSummaryList'
          description: Information about the prompts.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If there are additional results, this is the token for the next set of results.'
    ListQueueQuickConnectsResponse:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If there are additional results, this is the token for the next set of results.'
        QuickConnectSummaryList:
          $ref: '#/components/schemas/QuickConnectSummaryList'
          description: Information about the quick connects.
    ListQueuesResponse:
      type: object
      properties:
        QueueSummaryList:
          $ref: '#/components/schemas/QueueSummaryList'
          description: Information about the queues.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If there are additional results, this is the token for the next set of results.'
    QueueType:
      type: string
      enum:
        - STANDARD
        - AGENT
    ListQuickConnectsResponse:
      type: object
      properties:
        QuickConnectSummaryList:
          $ref: '#/components/schemas/QuickConnectSummaryList'
          description: Information about the quick connects.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If there are additional results, this is the token for the next set of results.'
    ListRoutingProfileQueuesResponse:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If there are additional results, this is the token for the next set of results.'
        RoutingProfileQueueConfigSummaryList:
          $ref: '#/components/schemas/RoutingProfileQueueConfigSummaryList'
          description: Information about the routing profiles.
    ListRoutingProfilesResponse:
      type: object
      properties:
        RoutingProfileSummaryList:
          $ref: '#/components/schemas/RoutingProfileSummaryList'
          description: Information about the routing profiles.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If there are additional results, this is the token for the next set of results.'
    ListSecurityKeysResponse:
      type: object
      properties:
        SecurityKeys:
          $ref: '#/components/schemas/SecurityKeysList'
          description: The security keys.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If there are additional results, this is the token for the next set of results.'
    ListSecurityProfilesResponse:
      type: object
      properties:
        SecurityProfileSummaryList:
          $ref: '#/components/schemas/SecurityProfileSummaryList'
          description: Information about the security profiles.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If there are additional results, this is the token for the next set of results.'
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          $ref: '#/components/schemas/TagMap'
          description: Information about the tags.
    ListUseCasesResponse:
      type: object
      properties:
        UseCaseSummaryList:
          $ref: '#/components/schemas/UseCaseSummaryList'
          description: The use cases.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If there are additional results, this is the token for the next set of results.'
    ListUserHierarchyGroupsResponse:
      type: object
      properties:
        UserHierarchyGroupSummaryList:
          $ref: '#/components/schemas/HierarchyGroupSummaryList'
          description: Information about the hierarchy groups.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If there are additional results, this is the token for the next set of results.'
    ListUsersResponse:
      type: object
      properties:
        UserSummaryList:
          $ref: '#/components/schemas/UserSummaryList'
          description: Information about the users.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If there are additional results, this is the token for the next set of results.'
    ResumeContactRecordingResponse:
      type: object
      properties: {}
    StartChatContactResponse:
      type: object
      properties:
        ContactId:
          $ref: '#/components/schemas/ContactId'
          description: 'The identifier of this contact within the Amazon Connect instance. '
        ParticipantId:
          $ref: '#/components/schemas/ParticipantId'
          description: The identifier for a chat participant. The participantId for a chat participant is the same throughout the chat lifecycle.
        ParticipantToken:
          $ref: '#/components/schemas/ParticipantToken'
          description: 'The token used by the chat participant to call <a href="https://docs.aws.amazon.com/connect-participant/latest/APIReference/API_CreateParticipantConnection.html">CreateParticipantConnection</a>. The participant token is valid for the lifetime of a chat participant.'
    AttributeValue:
      type: string
      minLength: 0
      maxLength: 32767
    DisplayName:
      type: string
      minLength: 1
      maxLength: 256
    ChatContentType:
      type: string
      minLength: 1
      maxLength: 100
    ChatContent:
      type: string
      minLength: 1
      maxLength: 1024
    StartContactRecordingResponse:
      type: object
      properties: {}
    VoiceRecordingTrack:
      type: string
      enum:
        - FROM_AGENT
        - TO_AGENT
        - ALL
    StartOutboundVoiceContactResponse:
      type: object
      properties:
        ContactId:
          $ref: '#/components/schemas/ContactId'
          description: The identifier of this contact within the Amazon Connect instance.
    DestinationNotAllowedException: {}
    OutboundContactNotPermittedException: {}
    StartTaskContactResponse:
      type: object
      properties:
        ContactId:
          $ref: '#/components/schemas/ContactId'
          description: The identifier of this contact within the Amazon Connect instance.
    Reference:
      type: object
      required:
        - Value
        - Type
      properties:
        Value:
          $ref: '#/components/schemas/ReferenceValue'
          description: A formatted URL that displays to an agent in the Contact Control Panel (CCP)
        Type:
          $ref: '#/components/schemas/ReferenceType'
          description: A valid URL.
      description: 'A link that an agent selects to complete a given task. You can have up to 4,096 UTF-8 bytes across all references for a contact.'
    StopContactResponse:
      type: object
      properties: {}
    ContactNotFoundException: {}
    StopContactRecordingResponse:
      type: object
      properties: {}
    SuspendContactRecordingResponse:
      type: object
      properties: {}
    TagKey:
      type: string
      pattern: '^(?!aws:)[a-zA-Z+-=._:/]+$'
      minLength: 1
      maxLength: 128
    UpdateContactAttributesResponse:
      type: object
      properties: {}
    HierarchyLevelUpdate:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/HierarchyLevelName'
          description: The name of the user hierarchy level. Must not be more than 50 characters.
      description: Contains information about the hierarchy level to update.
    ARN:
      type: string
    AgentStatusId:
      type: string
    AgentStatusName:
      type: string
      minLength: 1
      maxLength: 127
    AgentStatusDescription:
      type: string
      minLength: 1
      maxLength: 250
    AgentStatusOrderNumber:
      type: integer
      minimum: 1
      maximum: 50
    AgentStatusState:
      type: string
      enum:
        - ENABLED
        - DISABLED
    TagMap:
      type: object
      minProperties: 1
      maxProperties: 50
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    AgentStatus:
      type: object
      properties:
        AgentStatusARN:
          $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the agent status.
        AgentStatusId:
          $ref: '#/components/schemas/AgentStatusId'
          description: The identifier of the agent status.
        Name:
          $ref: '#/components/schemas/AgentStatusName'
          description: The name of the agent status.
        Description:
          $ref: '#/components/schemas/AgentStatusDescription'
          description: The description of the agent status.
        Type:
          $ref: '#/components/schemas/AgentStatusType'
          description: The type of agent status.
        DisplayOrder:
          $ref: '#/components/schemas/AgentStatusOrderNumber'
          description: The display order of the agent status.
        State:
          $ref: '#/components/schemas/AgentStatusState'
          description: The state of the agent status.
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: One or more tags.
      description: Contains information about an agent status.
    AgentStatusSummary:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/AgentStatusId'
          description: The identifier for an agent status.
        Arn:
          $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) for the agent status.
        Name:
          $ref: '#/components/schemas/AgentStatusName'
          description: The name of the agent status.
        Type:
          $ref: '#/components/schemas/AgentStatusType'
          description: The type of the agent status.
      description: Summary information for an agent status.
    AgentStatusSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/AgentStatusSummary'
    AgentStatusTypes:
      type: array
      items:
        $ref: '#/components/schemas/AgentStatusType'
      maxItems: 3
    AgentUsername:
      type: string
      minLength: 1
      maxLength: 100
    InstanceId:
      type: string
      minLength: 1
      maxLength: 100
    Origin:
      type: string
      maxLength: 267
    AssociateApprovedOriginRequest:
      type: object
      required:
        - Origin
      title: AssociateApprovedOriginRequest
      properties:
        Origin:
          $ref: '#/components/schemas/Origin'
          description: The domain to add to your allow list.
    LexBot:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/BotName'
          description: The name of the Amazon Lex bot.
        LexRegion:
          $ref: '#/components/schemas/LexRegion'
          description: The Region that the Amazon Lex bot was created in.
      description: Configuration information of an Amazon Lex bot.
    LexV2Bot:
      type: object
      properties:
        AliasArn:
          $ref: '#/components/schemas/AliasArn'
          description: The Amazon Resource Name (ARN) of the Amazon Lex V2 bot.
      description: Configuration information of an Amazon Lex V2 bot.
    AssociateBotRequest:
      type: object
      title: AssociateBotRequest
      properties:
        LexBot:
          $ref: '#/components/schemas/LexBot'
        LexV2Bot:
          $ref: '#/components/schemas/LexV2Bot'
          description: The Amazon Lex V2 bot to associate with the instance.
    InstanceStorageResourceType:
      type: string
      enum:
        - CHAT_TRANSCRIPTS
        - CALL_RECORDINGS
        - SCHEDULED_REPORTS
        - MEDIA_STREAMS
        - CONTACT_TRACE_RECORDS
        - AGENT_EVENTS
    InstanceStorageConfig:
      type: object
      required:
        - StorageType
      properties:
        AssociationId:
          $ref: '#/components/schemas/AssociationId'
          description: The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID.
        StorageType:
          $ref: '#/components/schemas/StorageType'
          description: A valid storage type.
        S3Config:
          $ref: '#/components/schemas/S3Config'
          description: The S3 bucket configuration.
        KinesisVideoStreamConfig:
          $ref: '#/components/schemas/KinesisVideoStreamConfig'
          description: The configuration of the Kinesis video stream.
        KinesisStreamConfig:
          $ref: '#/components/schemas/KinesisStreamConfig'
          description: The configuration of the Kinesis data stream.
        KinesisFirehoseConfig:
          $ref: '#/components/schemas/KinesisFirehoseConfig'
          description: The configuration of the Kinesis Firehose delivery stream.
      description: The storage configuration for the instance.
    AssociateInstanceStorageConfigRequest:
      type: object
      required:
        - ResourceType
        - StorageConfig
      title: AssociateInstanceStorageConfigRequest
      properties:
        ResourceType:
          $ref: '#/components/schemas/InstanceStorageResourceType'
          description: A valid resource type.
        StorageConfig:
          $ref: '#/components/schemas/InstanceStorageConfig'
          description: A valid storage type.
    FunctionArn:
      type: string
      minLength: 1
      maxLength: 140
    AssociateLambdaFunctionRequest:
      type: object
      required:
        - FunctionArn
      title: AssociateLambdaFunctionRequest
      properties:
        FunctionArn:
          $ref: '#/components/schemas/FunctionArn'
          description: The Amazon Resource Name (ARN) for the Lambda function being associated. Maximum number of characters allowed is 140.
    AssociateLexBotRequest:
      type: object
      required:
        - LexBot
      title: AssociateLexBotRequest
      properties:
        LexBot:
          $ref: '#/components/schemas/LexBot'
          description: The Amazon Lex bot to associate with the instance.
    QueueId:
      type: string
    QuickConnectsList:
      type: array
      items:
        $ref: '#/components/schemas/QuickConnectId'
      minItems: 1
      maxItems: 50
    AssociateQueueQuickConnectsRequest:
      type: object
      required:
        - QuickConnectIds
      title: AssociateQueueQuickConnectsRequest
      properties:
        QuickConnectIds:
          $ref: '#/components/schemas/QuickConnectsList'
          description: The quick connects to associate with this queue.
    RoutingProfileId:
      type: string
    RoutingProfileQueueConfigList:
      type: array
      items:
        $ref: '#/components/schemas/RoutingProfileQueueConfig'
      minItems: 1
      maxItems: 10
    AssociateRoutingProfileQueuesRequest:
      type: object
      required:
        - QueueConfigs
      title: AssociateRoutingProfileQueuesRequest
      properties:
        QueueConfigs:
          $ref: '#/components/schemas/RoutingProfileQueueConfigList'
          description: The queues to associate with this routing profile.
    PEM:
      type: string
      minLength: 1
      maxLength: 1024
    AssociateSecurityKeyRequest:
      type: object
      required:
        - Key
      title: AssociateSecurityKeyRequest
      properties:
        Key:
          $ref: '#/components/schemas/PEM'
          description: A valid security key in PEM format.
    InstanceAttributeType:
      type: string
      enum:
        - INBOUND_CALLS
        - OUTBOUND_CALLS
        - CONTACTFLOW_LOGS
        - CONTACT_LENS
        - AUTO_RESOLVE_BEST_VOICES
        - USE_CUSTOM_TTS_VOICES
        - EARLY_MEDIA
    InstanceAttributeValue:
      type: string
      minLength: 1
      maxLength: 100
    Attribute:
      type: object
      properties:
        AttributeType:
          $ref: '#/components/schemas/InstanceAttributeType'
          description: The type of attribute.
        Value:
          $ref: '#/components/schemas/InstanceAttributeValue'
          description: The value of the attribute.
      description: A toggle for an individual feature at the instance level.
    AttributeName:
      type: string
      minLength: 1
      maxLength: 32767
    Attributes:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/AttributeValue'
    AttributesList:
      type: array
      items:
        $ref: '#/components/schemas/Attribute'
    Boolean:
      type: boolean
    BucketName:
      type: string
      minLength: 1
      maxLength: 128
    Channel:
      type: string
      enum:
        - VOICE
        - CHAT
        - TASK
    ChatMessage:
      type: object
      required:
        - ContentType
        - Content
      properties:
        ContentType:
          $ref: '#/components/schemas/ChatContentType'
          description: The type of the content. Supported types are text and plain.
        Content:
          $ref: '#/components/schemas/ChatContent'
          description: The content of the chat message.
      description: A chat message.
    ClientToken:
      type: string
      maxLength: 500
    CommonNameLength127:
      type: string
      minLength: 1
      maxLength: 127
    Comparison:
      type: string
      enum:
        - LT
    Concurrency:
      type: integer
      minimum: 1
      maximum: 10
    ContactFlowName:
      type: string
      minLength: 1
    ContactFlowDescription:
      type: string
    ContactFlowContent:
      type: string
    ContactFlow:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the contact flow.
        Id:
          $ref: '#/components/schemas/ContactFlowId'
          description: The identifier of the contact flow.
        Name:
          $ref: '#/components/schemas/ContactFlowName'
          description: The name of the contact flow.
        Type:
          $ref: '#/components/schemas/ContactFlowType'
          description: 'The type of the contact flow. For descriptions of the available types, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/create-contact-flow.html#contact-flow-types">Choose a Contact Flow Type</a> in the <i>Amazon Connect Administrator Guide</i>.'
        Description:
          $ref: '#/components/schemas/ContactFlowDescription'
          description: The description of the contact flow.
        Content:
          $ref: '#/components/schemas/ContactFlowContent'
          description: The content of the contact flow.
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: One or more tags.
      description: Contains information about a contact flow.
    ContactFlowSummary:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/ContactFlowId'
          description: The identifier of the contact flow.
        Arn:
          $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the contact flow.
        Name:
          $ref: '#/components/schemas/ContactFlowName'
          description: The name of the contact flow.
        ContactFlowType:
          $ref: '#/components/schemas/ContactFlowType'
          description: The type of contact flow.
      description: '<p>Contains summary information about a contact flow.</p> <p>You can also create and update contact flows using the <a href="https://docs.aws.amazon.com/connect/latest/adminguide/flow-language.html">Amazon Connect Flow language</a>.</p>'
    ContactFlowSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ContactFlowSummary'
    ContactFlowTypes:
      type: array
      items:
        $ref: '#/components/schemas/ContactFlowType'
      maxItems: 10
    ContactId:
      type: string
      minLength: 1
      maxLength: 256
    ContactReferences:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Reference'
    CreateAgentStatusRequest:
      type: object
      required:
        - Name
        - State
      title: CreateAgentStatusRequest
      properties:
        Name:
          $ref: '#/components/schemas/AgentStatusName'
          description: The name of the status.
        Description:
          $ref: '#/components/schemas/AgentStatusDescription'
          description: The description of the status.
        State:
          $ref: '#/components/schemas/AgentStatusState'
          description: The state of the status.
        DisplayOrder:
          $ref: '#/components/schemas/AgentStatusOrderNumber'
          description: The display order of the status.
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: One or more tags.
    CreateContactFlowRequest:
      type: object
      required:
        - Name
        - Type
        - Content
      title: CreateContactFlowRequest
      properties:
        Name:
          $ref: '#/components/schemas/ContactFlowName'
          description: The name of the contact flow.
        Type:
          $ref: '#/components/schemas/ContactFlowType'
          description: 'The type of the contact flow. For descriptions of the available types, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/create-contact-flow.html#contact-flow-types">Choose a Contact Flow Type</a> in the <i>Amazon Connect Administrator Guide</i>.'
        Description:
          $ref: '#/components/schemas/ContactFlowDescription'
          description: 'The description of the contact flow. '
        Content:
          $ref: '#/components/schemas/ContactFlowContent'
          description: 'The content of the contact flow. '
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: One or more tags.
    HoursOfOperationDescription:
      type: string
      minLength: 1
      maxLength: 250
    TimeZone:
      type: string
    HoursOfOperationConfigList:
      type: array
      items:
        $ref: '#/components/schemas/HoursOfOperationConfig'
      minItems: 0
      maxItems: 100
    CreateHoursOfOperationRequest:
      type: object
      required:
        - Name
        - TimeZone
        - Config
      title: CreateHoursOfOperationRequest
      properties:
        Name:
          $ref: '#/components/schemas/CommonNameLength127'
          description: The name of the hours of operation.
        Description:
          $ref: '#/components/schemas/HoursOfOperationDescription'
          description: The description of the hours of operation.
        TimeZone:
          $ref: '#/components/schemas/TimeZone'
          description: The time zone of the hours of operation.
        Config:
          $ref: '#/components/schemas/HoursOfOperationConfigList'
          description: 'Configuration information for the hours of operation: day, start time, and end time.'
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: One or more tags.
    HoursOfOperationId:
      type: string
    DirectoryType:
      type: string
      enum:
        - SAML
        - CONNECT_MANAGED
        - EXISTING_DIRECTORY
    DirectoryAlias:
      type: string
      pattern: '^(?!d-)([\da-zA-Z]+)([-]*[\da-zA-Z])*$'
      minLength: 1
      maxLength: 62
      format: password
    DirectoryId:
      type: string
      pattern: '^d-[0-9a-f]{10}$'
      minLength: 12
      maxLength: 12
    InboundCallsEnabled:
      type: boolean
    OutboundCallsEnabled:
      type: boolean
    CreateInstanceRequest:
      type: object
      required:
        - IdentityManagementType
        - InboundCallsEnabled
        - OutboundCallsEnabled
      title: CreateInstanceRequest
      properties:
        ClientToken:
          $ref: '#/components/schemas/ClientToken'
          description: The idempotency token.
        IdentityManagementType:
          $ref: '#/components/schemas/DirectoryType'
          description: The type of identity management for your Amazon Connect users.
        InstanceAlias:
          $ref: '#/components/schemas/DirectoryAlias'
          description: The name for your instance.
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The identifier for the directory.
        InboundCallsEnabled:
          $ref: '#/components/schemas/InboundCallsEnabled'
          description: Your contact center handles incoming contacts.
        OutboundCallsEnabled:
          $ref: '#/components/schemas/OutboundCallsEnabled'
          description: Your contact center allows outbound calls.
    IntegrationType:
      type: string
      enum:
        - EVENT
    URI:
      type: string
      minLength: 1
      maxLength: 2000
    SourceApplicationName:
      type: string
      pattern: '^[a-zA-Z0-9_ -]+$'
      minLength: 1
      maxLength: 100
    SourceType:
      type: string
      enum:
        - SALESFORCE
        - ZENDESK
    CreateIntegrationAssociationRequest:
      type: object
      required:
        - IntegrationType
        - IntegrationArn
        - SourceApplicationUrl
        - SourceApplicationName
        - SourceType
      title: CreateIntegrationAssociationRequest
      properties:
        IntegrationType:
          $ref: '#/components/schemas/IntegrationType'
          description: The type of information to be ingested.
        IntegrationArn:
          $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the integration.
        SourceApplicationUrl:
          $ref: '#/components/schemas/URI'
          description: The URL for the external application.
        SourceApplicationName:
          $ref: '#/components/schemas/SourceApplicationName'
          description: The name of the external application.
        SourceType:
          $ref: '#/components/schemas/SourceType'
          description: The type of the data source.
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: One or more tags.
    IntegrationAssociationId:
      type: string
      minLength: 1
      maxLength: 200
    QueueDescription:
      type: string
      minLength: 1
      maxLength: 250
    OutboundCallerConfig:
      type: object
      properties:
        OutboundCallerIdName:
          $ref: '#/components/schemas/OutboundCallerIdName'
          description: The caller ID name.
        OutboundCallerIdNumberId:
          $ref: '#/components/schemas/PhoneNumberId'
          description: The caller ID number.
        OutboundFlowId:
          $ref: '#/components/schemas/ContactFlowId'
          description: The outbound whisper flow to be used during an outbound call.
      description: 'The outbound caller ID name, number, and outbound whisper flow.'
    QueueMaxContacts:
      type: integer
      minimum: 0
    CreateQueueRequest:
      type: object
      required:
        - Name
        - HoursOfOperationId
      title: CreateQueueRequest
      properties:
        Name:
          $ref: '#/components/schemas/CommonNameLength127'
          description: The name of the queue.
        Description:
          $ref: '#/components/schemas/QueueDescription'
          description: The description of the queue.
        OutboundCallerConfig:
          $ref: '#/components/schemas/OutboundCallerConfig'
          description: 'The outbound caller ID name, number, and outbound whisper flow.'
        HoursOfOperationId:
          $ref: '#/components/schemas/HoursOfOperationId'
          description: The identifier for the hours of operation.
        MaxContacts:
          $ref: '#/components/schemas/QueueMaxContacts'
          description: The maximum number of contacts that can be in the queue before it is considered full.
        QuickConnectIds:
          $ref: '#/components/schemas/QuickConnectsList'
          description: The quick connects available to agents who are working the queue.
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: One or more tags.
    QuickConnectName:
      type: string
      minLength: 1
      maxLength: 127
    QuickConnectDescription:
      type: string
      minLength: 1
      maxLength: 250
    QuickConnectConfig:
      type: object
      required:
        - QuickConnectType
      properties:
        QuickConnectType:
          $ref: '#/components/schemas/QuickConnectType'
          description: 'The type of quick connect. In the Amazon Connect console, when you create a quick connect, you are prompted to assign one of the following types: Agent (USER), External (PHONE_NUMBER), or Queue (QUEUE). '
        UserConfig:
          $ref: '#/components/schemas/UserQuickConnectConfig'
          description: The user configuration. This is required only if QuickConnectType is USER.
        QueueConfig:
          $ref: '#/components/schemas/QueueQuickConnectConfig'
          description: The queue configuration. This is required only if QuickConnectType is QUEUE.
        PhoneConfig:
          $ref: '#/components/schemas/PhoneNumberQuickConnectConfig'
          description: The phone configuration. This is required only if QuickConnectType is PHONE_NUMBER.
      description: Contains configuration settings for a quick connect.
    CreateQuickConnectRequest:
      type: object
      required:
        - Name
        - QuickConnectConfig
      title: CreateQuickConnectRequest
      properties:
        Name:
          $ref: '#/components/schemas/QuickConnectName'
          description: The name of the quick connect.
        Description:
          $ref: '#/components/schemas/QuickConnectDescription'
          description: The description of the quick connect.
        QuickConnectConfig:
          $ref: '#/components/schemas/QuickConnectConfig'
          description: Configuration settings for the quick connect.
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: One or more tags.
    RoutingProfileName:
      type: string
      minLength: 1
      maxLength: 127
    RoutingProfileDescription:
      type: string
      minLength: 1
      maxLength: 250
    MediaConcurrencies:
      type: array
      items:
        $ref: '#/components/schemas/MediaConcurrency'
    CreateRoutingProfileRequest:
      type: object
      required:
        - Name
        - Description
        - DefaultOutboundQueueId
        - MediaConcurrencies
      title: CreateRoutingProfileRequest
      properties:
        Name:
          $ref: '#/components/schemas/RoutingProfileName'
          description: The name of the routing profile. Must not be more than 127 characters.
        Description:
          $ref: '#/components/schemas/RoutingProfileDescription'
          description: Description of the routing profile. Must not be more than 250 characters.
        DefaultOutboundQueueId:
          $ref: '#/components/schemas/QueueId'
          description: The default outbound queue for the routing profile.
        QueueConfigs:
          $ref: '#/components/schemas/RoutingProfileQueueConfigList'
          description: 'The inbound queues associated with the routing profile. If no queue is added, the agent can make only outbound calls.'
        MediaConcurrencies:
          $ref: '#/components/schemas/MediaConcurrencies'
          description: The channels that agents can handle in the Contact Control Panel (CCP) for this routing profile.
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: One or more tags.
    UseCaseType:
      type: string
      enum:
        - RULES_EVALUATION
    CreateUseCaseRequest:
      type: object
      required:
        - UseCaseType
      title: CreateUseCaseRequest
      properties:
        UseCaseType:
          $ref: '#/components/schemas/UseCaseType'
          description: The type of use case to associate to the AppIntegration association. Each AppIntegration association can have only one of each use case type.
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: One or more tags.
    UseCaseId:
      type: string
      minLength: 1
      maxLength: 200
    HierarchyGroupName:
      type: string
    HierarchyGroupId:
      type: string
    CreateUserHierarchyGroupRequest:
      type: object
      required:
        - Name
      title: CreateUserHierarchyGroupRequest
      properties:
        Name:
          $ref: '#/components/schemas/HierarchyGroupName'
          description: The name of the user hierarchy group. Must not be more than 100 characters.
        ParentGroupId:
          $ref: '#/components/schemas/HierarchyGroupId'
          description: The identifier for the parent hierarchy group. The user hierarchy is created at level one if the parent group ID is null.
    Password:
      type: string
      pattern: '/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[a-zA-Z\d\S]{8,64}$/'
    UserIdentityInfo:
      type: object
      properties:
        FirstName:
          $ref: '#/components/schemas/AgentFirstName'
          description: The first name. This is required if you are using Amazon Connect or SAML for identity management.
        LastName:
          $ref: '#/components/schemas/AgentLastName'
          description: The last name. This is required if you are using Amazon Connect or SAML for identity management.
        Email:
          $ref: '#/components/schemas/Email'
          description: 'The email address. If you are using SAML for identity management and include this parameter, an error is returned.'
      description: Contains information about the identity of a user.
    UserPhoneConfig:
      type: object
      required:
        - PhoneType
      properties:
        PhoneType:
          $ref: '#/components/schemas/PhoneType'
          description: The phone type.
        AutoAccept:
          $ref: '#/components/schemas/AutoAccept'
          description: The Auto accept setting.
        AfterContactWorkTimeLimit:
          $ref: '#/components/schemas/AfterContactWorkTimeLimit'
          description: 'The After Call Work (ACW) timeout setting, in seconds.'
        DeskPhoneNumber:
          $ref: '#/components/schemas/PhoneNumber'
          description: The phone number for the user's desk phone.
      description: Contains information about the phone configuration settings for a user.
    DirectoryUserId:
      type: string
    SecurityProfileIds:
      type: array
      items:
        $ref: '#/components/schemas/SecurityProfileId'
      minItems: 1
      maxItems: 10
    CreateUserRequest:
      type: object
      required:
        - Username
        - PhoneConfig
        - SecurityProfileIds
        - RoutingProfileId
      title: CreateUserRequest
      properties:
        Username:
          $ref: '#/components/schemas/AgentUsername'
          description: 'The user name for the account. For instances not using SAML for identity management, the user name can include up to 20 characters. If you are using SAML for identity management, the user name can include up to 64 characters from [a-zA-Z0-9_-.\@]+.'
        Password:
          $ref: '#/components/schemas/Password'
          description: 'The password for the user account. A password is required if you are using Amazon Connect for identity management. Otherwise, it is an error to include a password.'
        IdentityInfo:
          $ref: '#/components/schemas/UserIdentityInfo'
          description: The information about the identity of the user.
        PhoneConfig:
          $ref: '#/components/schemas/UserPhoneConfig'
          description: The phone settings for the user.
        DirectoryUserId:
          $ref: '#/components/schemas/DirectoryUserId'
          description: '<p>The identifier of the user account in the directory used for identity management. If Amazon Connect cannot access the directory, you can specify this identifier to authenticate users. If you include the identifier, we assume that Amazon Connect cannot access the directory. Otherwise, the identity information is used to authenticate users from your directory.</p> <p>This parameter is required if you are using an existing directory for identity management in Amazon Connect when Amazon Connect cannot access your directory to authenticate users. If you are using SAML for identity management and include this parameter, an error is returned.</p>'
        SecurityProfileIds:
          $ref: '#/components/schemas/SecurityProfileIds'
          description: The identifier of the security profile for the user.
        RoutingProfileId:
          $ref: '#/components/schemas/RoutingProfileId'
          description: The identifier of the routing profile for the user.
        HierarchyGroupId:
          $ref: '#/components/schemas/HierarchyGroupId'
          description: The identifier of the hierarchy group for the user.
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: One or more tags.
    UserId:
      type: string
    SecurityToken:
      type: string
      format: password
    timestamp:
      type: string
      format: date-time
    Credentials:
      type: object
      properties:
        AccessToken:
          $ref: '#/components/schemas/SecurityToken'
          description: An access token generated for a federated user to access Amazon Connect.
        AccessTokenExpiration:
          $ref: '#/components/schemas/timestamp'
          description: A token generated with an expiration time for the session a user is logged in to Amazon Connect.
        RefreshToken:
          $ref: '#/components/schemas/SecurityToken'
          description: Renews a token generated for a user to access the Amazon Connect instance.
        RefreshTokenExpiration:
          $ref: '#/components/schemas/timestamp'
          description: Renews the expiration timer for a generated token.
      description: Contains credentials to use for federation.
    CurrentMetricName:
      type: string
      enum:
        - AGENTS_ONLINE
        - AGENTS_AVAILABLE
        - AGENTS_ON_CALL
        - AGENTS_NON_PRODUCTIVE
        - AGENTS_AFTER_CONTACT_WORK
        - AGENTS_ERROR
        - AGENTS_STAFFED
        - CONTACTS_IN_QUEUE
        - OLDEST_CONTACT_AGE
        - CONTACTS_SCHEDULED
        - AGENTS_ON_CONTACT
        - SLOTS_ACTIVE
        - SLOTS_AVAILABLE
      description: The current metric names.
    Unit:
      type: string
      enum:
        - SECONDS
        - COUNT
        - PERCENT
    Value:
      type: number
      format: double
    CurrentMetricData:
      type: object
      properties:
        Metric:
          $ref: '#/components/schemas/CurrentMetric'
          description: Information about the metric.
        Value:
          $ref: '#/components/schemas/Value'
          description: The value of the metric.
      description: Contains the data for a real-time metric.
    CurrentMetricDataCollections:
      type: array
      items:
        $ref: '#/components/schemas/CurrentMetricData'
    Dimensions:
      type: object
      properties:
        Queue:
          $ref: '#/components/schemas/QueueReference'
          description: Information about the queue for which metrics are returned.
        Channel:
          $ref: '#/components/schemas/Channel'
          description: The channel used for grouping and filters.
      description: Contains information about the dimensions for a set of metrics.
    CurrentMetricResult:
      type: object
      properties:
        Dimensions:
          $ref: '#/components/schemas/Dimensions'
          description: The dimensions for the metrics.
        Collections:
          $ref: '#/components/schemas/CurrentMetricDataCollections'
          description: The set of metrics.
      description: Contains information about a set of real-time metrics.
    CurrentMetricResults:
      type: array
      items:
        $ref: '#/components/schemas/CurrentMetricResult'
    CurrentMetrics:
      type: array
      items:
        $ref: '#/components/schemas/CurrentMetric'
    Delay:
      type: integer
      minimum: 0
      maximum: 9999
    DeleteHoursOfOperationRequest:
      type: object
      title: DeleteHoursOfOperationRequest
      properties: {}
    DeleteInstanceRequest:
      type: object
      title: DeleteInstanceRequest
      properties: {}
    DeleteIntegrationAssociationRequest:
      type: object
      title: DeleteIntegrationAssociationRequest
      properties: {}
    DeleteQuickConnectRequest:
      type: object
      title: DeleteQuickConnectRequest
      properties: {}
    DeleteUseCaseRequest:
      type: object
      title: DeleteUseCaseRequest
      properties: {}
    DeleteUserHierarchyGroupRequest:
      type: object
      title: DeleteUserHierarchyGroupRequest
      properties: {}
    DeleteUserRequest:
      type: object
      title: DeleteUserRequest
      properties: {}
    DescribeAgentStatusRequest:
      type: object
      title: DescribeAgentStatusRequest
      properties: {}
    DescribeContactFlowRequest:
      type: object
      title: DescribeContactFlowRequest
      properties: {}
    DescribeHoursOfOperationRequest:
      type: object
      title: DescribeHoursOfOperationRequest
      properties: {}
    HoursOfOperation:
      type: object
      properties:
        HoursOfOperationId:
          $ref: '#/components/schemas/HoursOfOperationId'
          description: The identifier for the hours of operation.
        HoursOfOperationArn:
          $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) for the hours of operation.
        Name:
          $ref: '#/components/schemas/CommonNameLength127'
          description: The name for the hours of operation.
        Description:
          $ref: '#/components/schemas/HoursOfOperationDescription'
          description: The description for the hours of operation.
        TimeZone:
          $ref: '#/components/schemas/TimeZone'
          description: The time zone for the hours of operation.
        Config:
          $ref: '#/components/schemas/HoursOfOperationConfigList'
          description: Configuration information for the hours of operation.
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: One or more tags.
      description: Information about of the hours of operation.
    DescribeInstanceAttributeRequest:
      type: object
      title: DescribeInstanceAttributeRequest
      properties: {}
    DescribeInstanceRequest:
      type: object
      title: DescribeInstanceRequest
      properties: {}
    Instance:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
        Arn:
          $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the instance.
        IdentityManagementType:
          $ref: '#/components/schemas/DirectoryType'
          description: The identity management type.
        InstanceAlias:
          $ref: '#/components/schemas/DirectoryAlias'
          description: The alias of instance.
        CreatedTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the instance was created.
        ServiceRole:
          $ref: '#/components/schemas/ARN'
          description: The service role of the instance.
        InstanceStatus:
          $ref: '#/components/schemas/InstanceStatus'
          description: The state of the instance.
        StatusReason:
          $ref: '#/components/schemas/InstanceStatusReason'
          description: 'Relevant details why the instance was not successfully created. '
        InboundCallsEnabled:
          $ref: '#/components/schemas/InboundCallsEnabled'
          description: Whether inbound calls are enabled.
        OutboundCallsEnabled:
          $ref: '#/components/schemas/OutboundCallsEnabled'
          description: Whether outbound calls are enabled.
      description: The Amazon Connect instance.
    DescribeInstanceStorageConfigRequest:
      type: object
      title: DescribeInstanceStorageConfigRequest
      properties: {}
    DescribeQueueRequest:
      type: object
      title: DescribeQueueRequest
      properties: {}
    Queue:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/CommonNameLength127'
          description: The name of the queue.
        QueueArn:
          $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) for the queue.
        QueueId:
          $ref: '#/components/schemas/QueueId'
          description: The identifier for the queue.
        Description:
          $ref: '#/components/schemas/QueueDescription'
          description: The description of the queue.
        OutboundCallerConfig:
          $ref: '#/components/schemas/OutboundCallerConfig'
          description: 'The outbound caller ID name, number, and outbound whisper flow.'
        HoursOfOperationId:
          $ref: '#/components/schemas/HoursOfOperationId'
          description: The identifier for the hours of operation.
        MaxContacts:
          $ref: '#/components/schemas/QueueMaxContacts'
          description: The maximum number of contacts that can be in the queue before it is considered full.
        Status:
          $ref: '#/components/schemas/QueueStatus'
          description: The status of the queue.
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: One or more tags.
      description: Contains information about a queue.
    DescribeQuickConnectRequest:
      type: object
      title: DescribeQuickConnectRequest
      properties: {}
    QuickConnect:
      type: object
      properties:
        QuickConnectARN:
          $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the quick connect.
        QuickConnectId:
          $ref: '#/components/schemas/QuickConnectId'
          description: The identifier for the quick connect.
        Name:
          $ref: '#/components/schemas/QuickConnectName'
          description: The name of the quick connect.
        Description:
          $ref: '#/components/schemas/QuickConnectDescription'
          description: The description.
        QuickConnectConfig:
          $ref: '#/components/schemas/QuickConnectConfig'
          description: Contains information about the quick connect.
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: One or more tags.
      description: Contains information about a quick connect.
    DescribeRoutingProfileRequest:
      type: object
      title: DescribeRoutingProfileRequest
      properties: {}
    RoutingProfile:
      type: object
      properties:
        InstanceId:
          $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
        Name:
          $ref: '#/components/schemas/RoutingProfileName'
          description: The name of the routing profile.
        RoutingProfileArn:
          $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the routing profile.
        RoutingProfileId:
          $ref: '#/components/schemas/RoutingProfileId'
          description: The identifier of the routing profile.
        Description:
          $ref: '#/components/schemas/RoutingProfileDescription'
          description: The description of the routing profile.
        MediaConcurrencies:
          $ref: '#/components/schemas/MediaConcurrencies'
          description: The channels agents can handle in the Contact Control Panel (CCP) for this routing profile.
        DefaultOutboundQueueId:
          $ref: '#/components/schemas/QueueId'
          description: The identifier of the default outbound queue for this routing profile.
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: One or more tags.
      description: Contains information about a routing profile.
    DescribeUserHierarchyGroupRequest:
      type: object
      title: DescribeUserHierarchyGroupRequest
      properties: {}
    HierarchyGroup:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/HierarchyGroupId'
          description: The identifier of the hierarchy group.
        Arn:
          $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the hierarchy group.
        Name:
          $ref: '#/components/schemas/HierarchyGroupName'
          description: The name of the hierarchy group.
        LevelId:
          $ref: '#/components/schemas/HierarchyLevelId'
          description: The identifier of the level in the hierarchy group.
        HierarchyPath:
          $ref: '#/components/schemas/HierarchyPath'
          description: Information about the levels in the hierarchy group.
      description: Contains information about a hierarchy group.
    DescribeUserHierarchyStructureRequest:
      type: object
      title: DescribeUserHierarchyStructureRequest
      properties: {}
    HierarchyStructure:
      type: object
      properties:
        LevelOne:
          $ref: '#/components/schemas/HierarchyLevel'
          description: Information about level one.
        LevelTwo:
          $ref: '#/components/schemas/HierarchyLevel'
          description: Information about level two.
        LevelThree:
          $ref: '#/components/schemas/HierarchyLevel'
          description: Information about level three.
        LevelFour:
          $ref: '#/components/schemas/HierarchyLevel'
          description: Information about level four.
        LevelFive:
          $ref: '#/components/schemas/HierarchyLevel'
          description: Information about level five.
      description: Contains information about a hierarchy structure.
    DescribeUserRequest:
      type: object
      title: DescribeUserRequest
      properties: {}
    User:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/UserId'
          description: The identifier of the user account.
        Arn:
          $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the user account.
        Username:
          $ref: '#/components/schemas/AgentUsername'
          description: The user name assigned to the user account.
        IdentityInfo:
          $ref: '#/components/schemas/UserIdentityInfo'
          description: Information about the user identity.
        PhoneConfig:
          $ref: '#/components/schemas/UserPhoneConfig'
          description: Information about the phone configuration for the user.
        DirectoryUserId:
          $ref: '#/components/schemas/DirectoryUserId'
          description: The identifier of the user account in the directory used for identity management.
        SecurityProfileIds:
          $ref: '#/components/schemas/SecurityProfileIds'
          description: The identifiers of the security profiles for the user.
        RoutingProfileId:
          $ref: '#/components/schemas/RoutingProfileId'
          description: The identifier of the routing profile for the user.
        HierarchyGroupId:
          $ref: '#/components/schemas/HierarchyGroupId'
          description: The identifier of the hierarchy group for the user.
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: The tags.
      description: Contains information about a user account for a Amazon Connect instance.
    Description:
      type: string
      minLength: 0
      maxLength: 4096
    QueueReference:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/QueueId'
          description: The identifier of the queue.
        Arn:
          $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the queue.
      description: Contains information about a queue resource for which metrics are returned.
    DisassociateApprovedOriginRequest:
      type: object
      title: DisassociateApprovedOriginRequest
      properties: {}
    DisassociateBotRequest:
      type: object
      title: DisassociateBotRequest
      properties:
        LexBot:
          $ref: '#/components/schemas/LexBot'
        LexV2Bot:
          $ref: '#/components/schemas/LexV2Bot'
          description: The Amazon Lex V2 bot to disassociate from the instance.
    DisassociateInstanceStorageConfigRequest:
      type: object
      title: DisassociateInstanceStorageConfigRequest
      properties: {}
    DisassociateLambdaFunctionRequest:
      type: object
      title: DisassociateLambdaFunctionRequest
      properties: {}
    DisassociateLexBotRequest:
      type: object
      title: DisassociateLexBotRequest
      properties: {}
    DisassociateQueueQuickConnectsRequest:
      type: object
      required:
        - QuickConnectIds
      title: DisassociateQueueQuickConnectsRequest
      properties:
        QuickConnectIds:
          $ref: '#/components/schemas/QuickConnectsList'
          description: The quick connects to disassociate from the queue.
    RoutingProfileQueueReferenceList:
      type: array
      items:
        $ref: '#/components/schemas/RoutingProfileQueueReference'
    DisassociateRoutingProfileQueuesRequest:
      type: object
      required:
        - QueueReferences
      title: DisassociateRoutingProfileQueuesRequest
      properties:
        QueueReferences:
          $ref: '#/components/schemas/RoutingProfileQueueReferenceList'
          description: The queues to disassociate from this routing profile.
    DisassociateSecurityKeyRequest:
      type: object
      title: DisassociateSecurityKeyRequest
      properties: {}
    EncryptionType:
      type: string
      enum:
        - KMS
    KeyId:
      type: string
      minLength: 1
      maxLength: 128
    EncryptionConfig:
      type: object
      required:
        - EncryptionType
        - KeyId
      properties:
        EncryptionType:
          $ref: '#/components/schemas/EncryptionType'
          description: The type of encryption.
        KeyId:
          $ref: '#/components/schemas/KeyId'
          description: The identifier of the encryption key.
      description: The encryption configuration.
    Filters:
      type: object
      properties:
        Queues:
          $ref: '#/components/schemas/Queues'
          description: The queues to use to filter the metrics. You can specify up to 100 queues per request.
        Channels:
          $ref: '#/components/schemas/Channels'
          description: The channel to use to filter the metrics.
      description: Contains the filter to apply when retrieving metrics.
    FunctionArnsList:
      type: array
      items:
        $ref: '#/components/schemas/FunctionArn'
    GetContactAttributesRequest:
      type: object
      title: GetContactAttributesRequest
      properties: {}
    Groupings:
      type: array
      items:
        $ref: '#/components/schemas/Grouping'
      maxItems: 2
    NextToken:
      type: string
    MaxResult100:
      type: integer
      minimum: 1
      maximum: 100
    GetCurrentMetricDataRequest:
      type: object
      required:
        - Filters
        - CurrentMetrics
      title: GetCurrentMetricDataRequest
      properties:
        Filters:
          $ref: '#/components/schemas/Filters'
          description: 'The queues, up to 100, or channels, to use to filter the metrics returned. Metric data is retrieved only for the resources associated with the queues or channels included in the filter. You can include both queue IDs and queue ARNs in the same request. VOICE, CHAT, and TASK channels are supported.'
        Groupings:
          $ref: '#/components/schemas/Groupings'
          description: '<p>The grouping applied to the metrics returned. For example, when grouped by <code>QUEUE</code>, the metrics returned apply to each queue rather than aggregated for all queues. If you group by <code>CHANNEL</code>, you should include a Channels filter. VOICE, CHAT, and TASK channels are supported.</p> <p>If no <code>Grouping</code> is included in the request, a summary of metrics is returned.</p>'
        CurrentMetrics:
          $ref: '#/components/schemas/CurrentMetrics'
          description: '<p>The metrics to retrieve. Specify the name and unit for each metric. The following metrics are available. For a description of all the metrics, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html">Real-time Metrics Definitions</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <dl> <dt>AGENTS_AFTER_CONTACT_WORK</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#aftercallwork-real-time">ACW</a> </p> </dd> <dt>AGENTS_AVAILABLE</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#available-real-time">Available</a> </p> </dd> <dt>AGENTS_ERROR</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#error-real-time">Error</a> </p> </dd> <dt>AGENTS_NON_PRODUCTIVE</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#non-productive-time-real-time">NPT (Non-Productive Time)</a> </p> </dd> <dt>AGENTS_ON_CALL</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#on-call-real-time">On contact</a> </p> </dd> <dt>AGENTS_ON_CONTACT</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#on-call-real-time">On contact</a> </p> </dd> <dt>AGENTS_ONLINE</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#online-real-time">Online</a> </p> </dd> <dt>AGENTS_STAFFED</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#staffed-real-time">Staffed</a> </p> </dd> <dt>CONTACTS_IN_QUEUE</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#in-queue-real-time">In queue</a> </p> </dd> <dt>CONTACTS_SCHEDULED</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#scheduled-real-time">Scheduled</a> </p> </dd> <dt>OLDEST_CONTACT_AGE</dt> <dd> <p>Unit: SECONDS</p> <p>When you use groupings, Unit says SECONDS but the Value is returned in MILLISECONDS. For example, if you get a response like this:</p> <p> <code>{ "Metric": { "Name": "OLDEST_CONTACT_AGE", "Unit": "SECONDS" }, "Value": 24113.0 </code>}</p> <p>The actual OLDEST_CONTACT_AGE is 24 seconds.</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#oldest-real-time">Oldest</a> </p> </dd> <dt>SLOTS_ACTIVE</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#active-real-time">Active</a> </p> </dd> <dt>SLOTS_AVAILABLE</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#availability-real-time">Availability</a> </p> </dd> </dl>'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: <p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p> <p>The token expires after 5 minutes from the time it is created. Subsequent requests that use the token must use the same request parameters as the request that generated the token.</p>
        MaxResults:
          $ref: '#/components/schemas/MaxResult100'
          description: The maximum number of results to return per page.
    GetFederationTokenRequest:
      type: object
      title: GetFederationTokenRequest
      properties: {}
    HistoricalMetrics:
      type: array
      items:
        $ref: '#/components/schemas/HistoricalMetric'
    GetMetricDataRequest:
      type: object
      required:
        - StartTime
        - EndTime
        - Filters
        - HistoricalMetrics
      title: GetMetricDataRequest
      properties:
        StartTime:
          $ref: '#/components/schemas/timestamp'
          description: '<p>The timestamp, in UNIX Epoch time format, at which to start the reporting interval for the retrieval of historical metrics data. The time must be specified using a multiple of 5 minutes, such as 10:05, 10:10, 10:15.</p> <p>The start time cannot be earlier than 24 hours before the time of the request. Historical metrics are available only for 24 hours.</p>'
        EndTime:
          $ref: '#/components/schemas/timestamp'
          description: '<p>The timestamp, in UNIX Epoch time format, at which to end the reporting interval for the retrieval of historical metrics data. The time must be specified using an interval of 5 minutes, such as 11:00, 11:05, 11:10, and must be later than the start time timestamp.</p> <p>The time range between the start and end time must be less than 24 hours.</p>'
        Filters:
          $ref: '#/components/schemas/Filters'
          description: '<p>The queues, up to 100, or channels, to use to filter the metrics returned. Metric data is retrieved only for the resources associated with the queues or channels included in the filter. You can include both queue IDs and queue ARNs in the same request. VOICE, CHAT, and TASK channels are supported.</p> <note> <p>To filter by <code>Queues</code>, enter the queue ID/ARN, not the name of the queue.</p> </note>'
        Groupings:
          $ref: '#/components/schemas/Groupings'
          description: '<p>The grouping applied to the metrics returned. For example, when results are grouped by queue, the metrics returned are grouped by queue. The values returned apply to the metrics for each queue rather than aggregated for all queues.</p> <p>If no grouping is specified, a summary of metrics for all queues is returned.</p>'
        HistoricalMetrics:
          $ref: '#/components/schemas/HistoricalMetrics'
          description: '<p>The metrics to retrieve. Specify the name, unit, and statistic for each metric. The following historical metrics are available. For a description of each metric, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html">Historical Metrics Definitions</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <note> <p>This API does not support a contacts incoming metric (there''s no CONTACTS_INCOMING metric missing from the documented list). </p> </note> <dl> <dt>ABANDON_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>AFTER_CONTACT_WORK_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>API_CONTACTS_HANDLED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CALLBACK_CONTACTS_HANDLED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_ABANDONED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_AGENT_HUNG_UP_FIRST</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_CONSULTED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_HANDLED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_HANDLED_INCOMING</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_HANDLED_OUTBOUND</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_HOLD_ABANDONS</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_MISSED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_QUEUED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_TRANSFERRED_IN</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_TRANSFERRED_IN_FROM_QUEUE</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_TRANSFERRED_OUT</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_TRANSFERRED_OUT_FROM_QUEUE</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>HANDLE_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>HOLD_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>INTERACTION_AND_HOLD_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>INTERACTION_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>OCCUPANCY</dt> <dd> <p>Unit: PERCENT</p> <p>Statistic: AVG</p> </dd> <dt>QUEUE_ANSWER_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>QUEUED_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: MAX</p> </dd> <dt>SERVICE_LEVEL</dt> <dd> <p>You can include up to 20 SERVICE_LEVEL metrics in a request.</p> <p>Unit: PERCENT</p> <p>Statistic: AVG</p> <p>Threshold: For <code>ThresholdValue</code>, enter any whole number from 1 to 604800 (inclusive), in seconds. For <code>Comparison</code>, you must enter <code>LT</code> (for "Less than"). </p> </dd> </dl>'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
        MaxResults:
          $ref: '#/components/schemas/MaxResult100'
          description: The maximum number of results to return per page.
    HistoricalMetricResults:
      type: array
      items:
        $ref: '#/components/schemas/HistoricalMetricResult'
    HierarchyLevelId:
      type: string
    HierarchyPath:
      type: object
      properties:
        LevelOne:
          $ref: '#/components/schemas/HierarchyGroupSummary'
          description: Information about level one.
        LevelTwo:
          $ref: '#/components/schemas/HierarchyGroupSummary'
          description: Information about level two.
        LevelThree:
          $ref: '#/components/schemas/HierarchyGroupSummary'
          description: Information about level three.
        LevelFour:
          $ref: '#/components/schemas/HierarchyGroupSummary'
          description: Information about level four.
        LevelFive:
          $ref: '#/components/schemas/HierarchyGroupSummary'
          description: Information about level five.
      description: Contains information about the levels of a hierarchy group.
    HierarchyGroupSummary:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/HierarchyGroupId'
          description: The identifier of the hierarchy group.
        Arn:
          $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the hierarchy group.
        Name:
          $ref: '#/components/schemas/HierarchyGroupName'
          description: The name of the hierarchy group.
      description: Contains summary information about a hierarchy group.
    HierarchyGroupSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/HierarchyGroupSummary'
    HierarchyLevelName:
      type: string
    HierarchyLevel:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/HierarchyLevelId'
          description: The identifier of the hierarchy level.
        Arn:
          $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the hierarchy level.
        Name:
          $ref: '#/components/schemas/HierarchyLevelName'
          description: The name of the hierarchy level.
      description: Contains information about a hierarchy level.
    HierarchyStructureUpdate:
      type: object
      properties:
        LevelOne:
          $ref: '#/components/schemas/HierarchyLevelUpdate'
          description: The update for level one.
        LevelTwo:
          $ref: '#/components/schemas/HierarchyLevelUpdate'
          description: The update for level two.
        LevelThree:
          $ref: '#/components/schemas/HierarchyLevelUpdate'
          description: The update for level three.
        LevelFour:
          $ref: '#/components/schemas/HierarchyLevelUpdate'
          description: The update for level four.
        LevelFive:
          $ref: '#/components/schemas/HierarchyLevelUpdate'
          description: The update for level five.
      description: Contains information about the level hierarchy to update.
    HistoricalMetricName:
      type: string
      enum:
        - CONTACTS_QUEUED
        - CONTACTS_HANDLED
        - CONTACTS_ABANDONED
        - CONTACTS_CONSULTED
        - CONTACTS_AGENT_HUNG_UP_FIRST
        - CONTACTS_HANDLED_INCOMING
        - CONTACTS_HANDLED_OUTBOUND
        - CONTACTS_HOLD_ABANDONS
        - CONTACTS_TRANSFERRED_IN
        - CONTACTS_TRANSFERRED_OUT
        - CONTACTS_TRANSFERRED_IN_FROM_QUEUE
        - CONTACTS_TRANSFERRED_OUT_FROM_QUEUE
        - CONTACTS_MISSED
        - CALLBACK_CONTACTS_HANDLED
        - API_CONTACTS_HANDLED
        - OCCUPANCY
        - HANDLE_TIME
        - AFTER_CONTACT_WORK_TIME
        - QUEUED_TIME
        - ABANDON_TIME
        - QUEUE_ANSWER_TIME
        - HOLD_TIME
        - INTERACTION_TIME
        - INTERACTION_AND_HOLD_TIME
        - SERVICE_LEVEL
      description: The historical metric names.
    Threshold:
      type: object
      properties:
        Comparison:
          $ref: '#/components/schemas/Comparison'
          description: The type of comparison. Only "less than" (LT) comparisons are supported.
        ThresholdValue:
          $ref: '#/components/schemas/ThresholdValue'
          description: The threshold value to compare.
      description: Contains information about the threshold for service level metrics.
    Statistic:
      type: string
      enum:
        - SUM
        - MAX
        - AVG
    HistoricalMetricData:
      type: object
      properties:
        Metric:
          $ref: '#/components/schemas/HistoricalMetric'
          description: Information about the metric.
        Value:
          $ref: '#/components/schemas/Value'
          description: The value of the metric.
      description: Contains the data for a historical metric.
    HistoricalMetricDataCollections:
      type: array
      items:
        $ref: '#/components/schemas/HistoricalMetricData'
    HistoricalMetricResult:
      type: object
      properties:
        Dimensions:
          $ref: '#/components/schemas/Dimensions'
          description: The dimension for the metrics.
        Collections:
          $ref: '#/components/schemas/HistoricalMetricDataCollections'
          description: The set of metrics.
      description: Contains information about the historical metrics retrieved.
    Hours:
      type: integer
      minimum: 0
      maximum: 87600
    Hours24Format:
      type: integer
      minimum: 0
      maximum: 23
    HoursOfOperationDays:
      type: string
      enum:
        - SUNDAY
        - MONDAY
        - TUESDAY
        - WEDNESDAY
        - THURSDAY
        - FRIDAY
        - SATURDAY
    HoursOfOperationTimeSlice:
      type: object
      required:
        - Hours
        - Minutes
      properties:
        Hours:
          $ref: '#/components/schemas/Hours24Format'
          description: The hours.
        Minutes:
          $ref: '#/components/schemas/MinutesLimit60'
          description: The minutes.
      description: The start time or end time for an hours of operation.
    HoursOfOperationName:
      type: string
    HoursOfOperationSummary:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/HoursOfOperationId'
          description: The identifier of the hours of operation.
        Arn:
          $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the hours of operation.
        Name:
          $ref: '#/components/schemas/HoursOfOperationName'
          description: The name of the hours of operation.
      description: Contains summary information about hours of operation for a contact center.
    HoursOfOperationSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/HoursOfOperationSummary'
    MinutesLimit60:
      type: integer
      minimum: 0
      maximum: 59
    Timestamp:
      type: string
      format: date-time
    InstanceStatus:
      type: string
      enum:
        - CREATION_IN_PROGRESS
        - ACTIVE
        - CREATION_FAILED
    InstanceStatusReason:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
          description: The message.
      description: Relevant details why the instance was not successfully created.
    String:
      type: string
    InstanceStorageConfigs:
      type: array
      items:
        $ref: '#/components/schemas/InstanceStorageConfig'
    InstanceSummary:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/InstanceId'
          description: The identifier of the instance.
        Arn:
          $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the instance.
        IdentityManagementType:
          $ref: '#/components/schemas/DirectoryType'
          description: The identity management type of the instance.
        InstanceAlias:
          $ref: '#/components/schemas/DirectoryAlias'
          description: The alias of the instance.
        CreatedTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the instance was created.
        ServiceRole:
          $ref: '#/components/schemas/ARN'
          description: The service role of the instance.
        InstanceStatus:
          $ref: '#/components/schemas/InstanceStatus'
          description: The state of the instance.
        InboundCallsEnabled:
          $ref: '#/components/schemas/InboundCallsEnabled'
          description: Whether inbound calls are enabled.
        OutboundCallsEnabled:
          $ref: '#/components/schemas/OutboundCallsEnabled'
          description: Whether outbound calls are enabled.
      description: Information about the instance.
    InstanceSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/InstanceSummary'
    IntegrationAssociationSummary:
      type: object
      properties:
        IntegrationAssociationId:
          $ref: '#/components/schemas/IntegrationAssociationId'
          description: The identifier for the AppIntegration association.
        IntegrationAssociationArn:
          $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) for the AppIntegration association.
        InstanceId:
          $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
        IntegrationType:
          $ref: '#/components/schemas/IntegrationType'
          description: The integration type.
        IntegrationArn:
          $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) for the AppIntegration.
        SourceApplicationUrl:
          $ref: '#/components/schemas/URI'
          description: The URL for the external application.
        SourceApplicationName:
          $ref: '#/components/schemas/SourceApplicationName'
          description: 'The user-provided, friendly name for the external application.'
        SourceType:
          $ref: '#/components/schemas/SourceType'
          description: The name of the source.
      description: Contains summary information about the associated AppIntegrations.
    IntegrationAssociationSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/IntegrationAssociationSummary'
    Prefix:
      type: string
      minLength: 1
      maxLength: 128
    LexBotConfig:
      type: object
      properties:
        LexBot:
          $ref: '#/components/schemas/LexBot'
        LexV2Bot:
          $ref: '#/components/schemas/LexV2Bot'
          description: Configuration information of an Amazon Lex V2 bot.
      description: Configuration information of an Amazon Lex or Amazon Lex V2 bot.
    LexBotConfigList:
      type: array
      items:
        $ref: '#/components/schemas/LexBotConfig'
    LexBotsList:
      type: array
      items:
        $ref: '#/components/schemas/LexBot'
    LexVersion:
      type: string
      enum:
        - V1
        - V2
    MaxResult1000:
      type: integer
      minimum: 1
      maximum: 1000
    ListAgentStatusRequest:
      type: object
      title: ListAgentStatusRequest
      properties: {}
    MaxResult25:
      type: integer
      minimum: 1
      maximum: 25
    ListApprovedOriginsRequest:
      type: object
      title: ListApprovedOriginsRequest
      properties: {}
    OriginsList:
      type: array
      items:
        $ref: '#/components/schemas/Origin'
    ListBotsRequest:
      type: object
      title: ListBotsRequest
      properties: {}
    ListContactFlowsRequest:
      type: object
      title: ListContactFlowsRequest
      properties: {}
    ListHoursOfOperationsRequest:
      type: object
      title: ListHoursOfOperationsRequest
      properties: {}
    MaxResult7:
      type: integer
      minimum: 1
      maximum: 7
    ListInstanceAttributesRequest:
      type: object
      title: ListInstanceAttributesRequest
      properties: {}
    MaxResult10:
      type: integer
      minimum: 1
      maximum: 10
    ListInstanceStorageConfigsRequest:
      type: object
      title: ListInstanceStorageConfigsRequest
      properties: {}
    ListInstancesRequest:
      type: object
      title: ListInstancesRequest
      properties: {}
    ListIntegrationAssociationsRequest:
      type: object
      title: ListIntegrationAssociationsRequest
      properties: {}
    ListLambdaFunctionsRequest:
      type: object
      title: ListLambdaFunctionsRequest
      properties: {}
    ListLexBotsRequest:
      type: object
      title: ListLexBotsRequest
      properties: {}
    PhoneNumberTypes:
      type: array
      items:
        $ref: '#/components/schemas/PhoneNumberType'
      maxItems: 2
    PhoneNumberCountryCodes:
      type: array
      items:
        $ref: '#/components/schemas/PhoneNumberCountryCode'
      maxItems: 10
    ListPhoneNumbersRequest:
      type: object
      title: ListPhoneNumbersRequest
      properties: {}
    PhoneNumberSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/PhoneNumberSummary'
    ListPromptsRequest:
      type: object
      title: ListPromptsRequest
      properties: {}
    PromptSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/PromptSummary'
    ListQueueQuickConnectsRequest:
      type: object
      title: ListQueueQuickConnectsRequest
      properties: {}
    QuickConnectSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/QuickConnectSummary'
    QueueTypes:
      type: array
      items:
        $ref: '#/components/schemas/QueueType'
      maxItems: 2
    ListQueuesRequest:
      type: object
      title: ListQueuesRequest
      properties: {}
    QueueSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/QueueSummary'
    QuickConnectTypes:
      type: array
      items:
        $ref: '#/components/schemas/QuickConnectType'
      maxItems: 3
    ListQuickConnectsRequest:
      type: object
      title: ListQuickConnectsRequest
      properties: {}
    ListRoutingProfileQueuesRequest:
      type: object
      title: ListRoutingProfileQueuesRequest
      properties: {}
    RoutingProfileQueueConfigSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/RoutingProfileQueueConfigSummary'
    ListRoutingProfilesRequest:
      type: object
      title: ListRoutingProfilesRequest
      properties: {}
    RoutingProfileSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/RoutingProfileSummary'
    MaxResult2:
      type: integer
      minimum: 1
      maximum: 2
    ListSecurityKeysRequest:
      type: object
      title: ListSecurityKeysRequest
      properties: {}
    SecurityKeysList:
      type: array
      items:
        $ref: '#/components/schemas/SecurityKey'
    ListSecurityProfilesRequest:
      type: object
      title: ListSecurityProfilesRequest
      properties: {}
    SecurityProfileSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/SecurityProfileSummary'
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
    ListUseCasesRequest:
      type: object
      title: ListUseCasesRequest
      properties: {}
      description: Provides summary information about the use cases for the specified Amazon Connect AppIntegration association.
    UseCaseSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/UseCase'
    ListUserHierarchyGroupsRequest:
      type: object
      title: ListUserHierarchyGroupsRequest
      properties: {}
    ListUsersRequest:
      type: object
      title: ListUsersRequest
      properties: {}
    UserSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/UserSummary'
    Name:
      type: string
      minLength: 0
      maxLength: 512
    ParticipantDetails:
      type: object
      required:
        - DisplayName
      properties:
        DisplayName:
          $ref: '#/components/schemas/DisplayName'
          description: Display name of the participant.
      description: The customer's details.
    ParticipantId:
      type: string
      minLength: 1
      maxLength: 256
    ParticipantToken:
      type: string
      minLength: 1
      maxLength: 1000
    PhoneNumberSummary:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/PhoneNumberId'
          description: The identifier of the phone number.
        Arn:
          $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the phone number.
        PhoneNumber:
          $ref: '#/components/schemas/PhoneNumber'
          description: The phone number.
        PhoneNumberType:
          $ref: '#/components/schemas/PhoneNumberType'
          description: The type of phone number.
        PhoneNumberCountryCode:
          $ref: '#/components/schemas/PhoneNumberCountryCode'
          description: The ISO country code.
      description: Contains summary information about a phone number for a contact center.
    Priority:
      type: integer
      minimum: 1
      maximum: 99
    PromptId:
      type: string
      minLength: 1
      maxLength: 256
    PromptName:
      type: string
      minLength: 1
      maxLength: 256
    PromptSummary:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/PromptId'
          description: The identifier of the prompt.
        Arn:
          $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the prompt.
        Name:
          $ref: '#/components/schemas/PromptName'
          description: The name of the prompt.
      description: Contains information about the prompt.
    QueueStatus:
      type: string
      enum:
        - ENABLED
        - DISABLED
    QueueName:
      type: string
      minLength: 1
      maxLength: 256
    QueueSummary:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/QueueId'
          description: The identifier of the queue.
        Arn:
          $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the queue.
        Name:
          $ref: '#/components/schemas/QueueName'
          description: The name of the queue.
        QueueType:
          $ref: '#/components/schemas/QueueType'
          description: The type of queue.
      description: Contains summary information about a queue.
    QuickConnectSummary:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/QuickConnectId'
          description: The identifier for the quick connect.
        Arn:
          $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the quick connect.
        Name:
          $ref: '#/components/schemas/QuickConnectName'
          description: The name of the quick connect.
        QuickConnectType:
          $ref: '#/components/schemas/QuickConnectType'
          description: 'The type of quick connect. In the Amazon Connect console, when you create a quick connect, you are prompted to assign one of the following types: Agent (USER), External (PHONE_NUMBER), or Queue (QUEUE).'
      description: Contains summary information about a quick connect.
    ReferenceValue:
      type: string
      minLength: 0
      maxLength: 4096
    ReferenceType:
      type: string
      enum:
        - URL
    ReferenceKey:
      type: string
      minLength: 1
      maxLength: 4096
    ResumeContactRecordingRequest:
      type: object
      required:
        - InstanceId
        - ContactId
        - InitialContactId
      title: ResumeContactRecordingRequest
      properties:
        InstanceId:
          $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
        ContactId:
          $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact.
        InitialContactId:
          $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact. This is the identifier of the contact associated with the first interaction with the contact center.
    RoutingProfileQueueConfigSummary:
      type: object
      required:
        - QueueId
        - QueueArn
        - QueueName
        - Priority
        - Delay
        - Channel
      properties:
        QueueId:
          $ref: '#/components/schemas/QueueId'
          description: The identifier for the queue.
        QueueArn:
          $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the queue.
        QueueName:
          $ref: '#/components/schemas/QueueName'
          description: The name of the queue.
        Priority:
          $ref: '#/components/schemas/Priority'
          description: 'The order in which contacts are to be handled for the queue. For more information, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/concepts-routing-profiles-priority.html">Queues: priority and delay</a>.'
        Delay:
          $ref: '#/components/schemas/Delay'
          description: 'The delay, in seconds, that a contact should be in the queue before they are routed to an available agent. For more information, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/concepts-routing-profiles-priority.html">Queues: priority and delay</a> in the <i>Amazon Connect Administrator Guide</i>.'
        Channel:
          $ref: '#/components/schemas/Channel'
          description: The channels this queue supports.
      description: Contains summary information about a routing profile queue.
    RoutingProfileSummary:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/RoutingProfileId'
          description: The identifier of the routing profile.
        Arn:
          $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the routing profile.
        Name:
          $ref: '#/components/schemas/RoutingProfileName'
          description: The name of the routing profile.
      description: Contains summary information about a routing profile.
    SecurityKey:
      type: object
      properties:
        AssociationId:
          $ref: '#/components/schemas/AssociationId'
          description: The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID.
        Key:
          $ref: '#/components/schemas/PEM'
          description: The key of the security key.
        CreationTime:
          $ref: '#/components/schemas/timestamp'
          description: When the security key was created.
      description: Configuration information of the security key.
    SecurityProfileName:
      type: string
    SecurityProfileSummary:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/SecurityProfileId'
          description: The identifier of the security profile.
        Arn:
          $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the security profile.
        Name:
          $ref: '#/components/schemas/SecurityProfileName'
          description: The name of the security profile.
      description: Contains information about a security profile.
    StartChatContactRequest:
      type: object
      required:
        - InstanceId
        - ContactFlowId
        - ParticipantDetails
      title: StartChatContactRequest
      properties:
        InstanceId:
          $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
        ContactFlowId:
          $ref: '#/components/schemas/ContactFlowId'
          description: '<p>The identifier of the contact flow for initiating the chat. To see the ContactFlowId in the Amazon Connect console user interface, on the navigation menu go to <b>Routing</b>, <b>Contact Flows</b>. Choose the contact flow. On the contact flow page, under the name of the contact flow, choose <b>Show additional flow information</b>. The ContactFlowId is the last part of the ARN, shown here in bold: </p> <p>arn:aws:connect:us-west-2:xxxxxxxxxxxx:instance/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/contact-flow/<b>846ec553-a005-41c0-8341-xxxxxxxxxxxx</b> </p>'
        Attributes:
          $ref: '#/components/schemas/Attributes'
          description: '<p>A custom key-value pair using an attribute map. The attributes are standard Amazon Connect attributes. They can be accessed in contact flows just like any other contact attributes. </p> <p>There can be up to 32,768 UTF-8 bytes across all key-value pairs per contact. Attribute keys can include only alphanumeric, dash, and underscore characters.</p>'
        ParticipantDetails:
          $ref: '#/components/schemas/ParticipantDetails'
          description: Information identifying the participant.
        InitialMessage:
          $ref: '#/components/schemas/ChatMessage'
          description: The initial message to be sent to the newly created chat.
        ClientToken:
          $ref: '#/components/schemas/ClientToken'
          description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'
    VoiceRecordingConfiguration:
      type: object
      properties:
        VoiceRecordingTrack:
          $ref: '#/components/schemas/VoiceRecordingTrack'
          description: Identifies which track is being recorded.
      description: Contains information about the recording configuration settings.
    StartContactRecordingRequest:
      type: object
      required:
        - InstanceId
        - ContactId
        - InitialContactId
        - VoiceRecordingConfiguration
      title: StartContactRecordingRequest
      properties:
        InstanceId:
          $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
        ContactId:
          $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact.
        InitialContactId:
          $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact. This is the identifier of the contact associated with the first interaction with the contact center.
        VoiceRecordingConfiguration:
          $ref: '#/components/schemas/VoiceRecordingConfiguration'
          description: The person being recorded.
    StartOutboundVoiceContactRequest:
      type: object
      required:
        - DestinationPhoneNumber
        - ContactFlowId
        - InstanceId
      title: StartOutboundVoiceContactRequest
      properties:
        DestinationPhoneNumber:
          $ref: '#/components/schemas/PhoneNumber'
          description: 'The phone number of the customer, in E.164 format.'
        ContactFlowId:
          $ref: '#/components/schemas/ContactFlowId'
          description: '<p>The identifier of the contact flow for the outbound call. To see the ContactFlowId in the Amazon Connect console user interface, on the navigation menu go to <b>Routing</b>, <b>Contact Flows</b>. Choose the contact flow. On the contact flow page, under the name of the contact flow, choose <b>Show additional flow information</b>. The ContactFlowId is the last part of the ARN, shown here in bold: </p> <p>arn:aws:connect:us-west-2:xxxxxxxxxxxx:instance/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/contact-flow/<b>846ec553-a005-41c0-8341-xxxxxxxxxxxx</b> </p>'
        InstanceId:
          $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
        ClientToken:
          $ref: '#/components/schemas/ClientToken'
          description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. The token is valid for 7 days after creation. If a contact is already started, the contact ID is returned. '
        SourcePhoneNumber:
          $ref: '#/components/schemas/PhoneNumber'
          description: 'The phone number associated with the Amazon Connect instance, in E.164 format. If you do not specify a source phone number, you must specify a queue.'
        QueueId:
          $ref: '#/components/schemas/QueueId'
          description: 'The queue for the call. If you specify a queue, the phone displayed for caller ID is the phone number specified in the queue. If you do not specify a queue, the queue defined in the contact flow is used. If you do not specify a queue, you must specify a source phone number.'
        Attributes:
          $ref: '#/components/schemas/Attributes'
          description: '<p>A custom key-value pair using an attribute map. The attributes are standard Amazon Connect attributes, and can be accessed in contact flows just like any other contact attributes.</p> <p>There can be up to 32,768 UTF-8 bytes across all key-value pairs per contact. Attribute keys can include only alphanumeric, dash, and underscore characters.</p>'
    StartTaskContactRequest:
      type: object
      required:
        - InstanceId
        - ContactFlowId
        - Name
      title: StartTaskContactRequest
      properties:
        InstanceId:
          $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
        PreviousContactId:
          $ref: '#/components/schemas/ContactId'
          description: 'The identifier of the previous chat, voice, or task contact. '
        ContactFlowId:
          $ref: '#/components/schemas/ContactFlowId'
          description: '<p>The identifier of the contact flow for initiating the tasks. To see the ContactFlowId in the Amazon Connect console user interface, on the navigation menu go to <b>Routing</b>, <b>Contact Flows</b>. Choose the contact flow. On the contact flow page, under the name of the contact flow, choose <b>Show additional flow information</b>. The ContactFlowId is the last part of the ARN, shown here in bold: </p> <p>arn:aws:connect:us-west-2:xxxxxxxxxxxx:instance/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/contact-flow/<b>846ec553-a005-41c0-8341-xxxxxxxxxxxx</b> </p>'
        Attributes:
          $ref: '#/components/schemas/Attributes'
          description: '<p>A custom key-value pair using an attribute map. The attributes are standard Amazon Connect attributes, and can be accessed in contact flows just like any other contact attributes.</p> <p>There can be up to 32,768 UTF-8 bytes across all key-value pairs per contact. Attribute keys can include only alphanumeric, dash, and underscore characters.</p>'
        Name:
          $ref: '#/components/schemas/Name'
          description: The name of a task that is shown to an agent in the Contact Control Panel (CCP).
        References:
          $ref: '#/components/schemas/ContactReferences'
          description: A formatted URL that is shown to an agent in the Contact Control Panel (CCP).
        Description:
          $ref: '#/components/schemas/Description'
          description: A description of the task that is shown to an agent in the Contact Control Panel (CCP).
        ClientToken:
          $ref: '#/components/schemas/ClientToken'
          description: 'A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'
    StopContactRecordingRequest:
      type: object
      required:
        - InstanceId
        - ContactId
        - InitialContactId
      title: StopContactRecordingRequest
      properties:
        InstanceId:
          $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
        ContactId:
          $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact.
        InitialContactId:
          $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact. This is the identifier of the contact associated with the first interaction with the contact center.
    StopContactRequest:
      type: object
      required:
        - ContactId
        - InstanceId
      title: StopContactRequest
      properties:
        ContactId:
          $ref: '#/components/schemas/ContactId'
          description: The ID of the contact.
        InstanceId:
          $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
    SuspendContactRecordingRequest:
      type: object
      required:
        - InstanceId
        - ContactId
        - InitialContactId
      title: SuspendContactRecordingRequest
      properties:
        InstanceId:
          $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
        ContactId:
          $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact.
        InitialContactId:
          $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact. This is the identifier of the contact associated with the first interaction with the contact center.
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      minItems: 1
      maxItems: 50
    TagResourceRequest:
      type: object
      required:
        - tags
      title: TagResourceRequest
      properties:
        tags:
          $ref: '#/components/schemas/TagMap'
          description: 'One or more tags. For example, { "tags": {"key1":"value1", "key2":"value2"} }.'
    ThresholdValue:
      type: number
      format: double
    UntagResourceRequest:
      type: object
      title: UntagResourceRequest
      properties: {}
    UpdateAgentStatusDescription:
      type: string
      minLength: 0
      maxLength: 250
    UpdateAgentStatusRequest:
      type: object
      title: UpdateAgentStatusRequest
      properties:
        Name:
          $ref: '#/components/schemas/AgentStatusName'
          description: The name of the agent status.
        Description:
          $ref: '#/components/schemas/UpdateAgentStatusDescription'
          description: The description of the agent status.
        State:
          $ref: '#/components/schemas/AgentStatusState'
          description: The state of the agent status.
        DisplayOrder:
          $ref: '#/components/schemas/AgentStatusOrderNumber'
          description: The display order of the agent status.
        ResetOrderNumber:
          $ref: '#/components/schemas/Boolean'
          description: A number indicating the reset order of the agent status.
    UpdateContactAttributesRequest:
      type: object
      required:
        - InitialContactId
        - InstanceId
        - Attributes
      title: UpdateContactAttributesRequest
      properties:
        InitialContactId:
          $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact. This is the identifier of the contact associated with the first interaction with the contact center.
        InstanceId:
          $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
        Attributes:
          $ref: '#/components/schemas/Attributes'
          description: '<p>The Amazon Connect attributes. These attributes can be accessed in contact flows just like any other contact attributes.</p> <p>You can have up to 32,768 UTF-8 bytes across all attributes for a contact. Attribute keys can include only alphanumeric, dash, and underscore characters.</p>'
    UpdateContactFlowContentRequest:
      type: object
      required:
        - Content
      title: UpdateContactFlowContentRequest
      properties:
        Content:
          $ref: '#/components/schemas/ContactFlowContent'
          description: 'The JSON string that represents contact flow’s content. For an example, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/flow-language-example.html">Example contact flow in Amazon Connect Flow language</a> in the <i>Amazon Connect Administrator Guide</i>. '
    UpdateContactFlowNameRequest:
      type: object
      title: UpdateContactFlowNameRequest
      properties:
        Name:
          $ref: '#/components/schemas/ContactFlowName'
          description: The name of the contact flow.
        Description:
          $ref: '#/components/schemas/ContactFlowDescription'
          description: The description of the contact flow.
    UpdateHoursOfOperationDescription:
      type: string
      minLength: 0
      maxLength: 250
    UpdateHoursOfOperationRequest:
      type: object
      title: UpdateHoursOfOperationRequest
      properties:
        Name:
          $ref: '#/components/schemas/CommonNameLength127'
          description: The name of the hours of operation.
        Description:
          $ref: '#/components/schemas/UpdateHoursOfOperationDescription'
          description: The description of the hours of operation.
        TimeZone:
          $ref: '#/components/schemas/TimeZone'
          description: The time zone of the hours of operation.
        Config:
          $ref: '#/components/schemas/HoursOfOperationConfigList'
          description: Configuration information of the hours of operation.
    UpdateInstanceAttributeRequest:
      type: object
      required:
        - Value
      title: UpdateInstanceAttributeRequest
      properties:
        Value:
          $ref: '#/components/schemas/InstanceAttributeValue'
          description: 'The value for the attribute. Maximum character limit is 100. '
    UpdateInstanceStorageConfigRequest:
      type: object
      required:
        - StorageConfig
      title: UpdateInstanceStorageConfigRequest
      properties:
        StorageConfig:
          $ref: '#/components/schemas/InstanceStorageConfig'
    UpdateQueueHoursOfOperationRequest:
      type: object
      required:
        - HoursOfOperationId
      title: UpdateQueueHoursOfOperationRequest
      properties:
        HoursOfOperationId:
          $ref: '#/components/schemas/HoursOfOperationId'
          description: The identifier for the hours of operation.
    UpdateQueueMaxContactsRequest:
      type: object
      title: UpdateQueueMaxContactsRequest
      properties:
        MaxContacts:
          $ref: '#/components/schemas/QueueMaxContacts'
          description: The maximum number of contacts that can be in the queue before it is considered full.
    UpdateQueueNameRequest:
      type: object
      title: UpdateQueueNameRequest
      properties:
        Name:
          $ref: '#/components/schemas/CommonNameLength127'
          description: The name of the queue.
        Description:
          $ref: '#/components/schemas/QueueDescription'
          description: The description of the queue.
    UpdateQueueOutboundCallerConfigRequest:
      type: object
      required:
        - OutboundCallerConfig
      title: UpdateQueueOutboundCallerConfigRequest
      properties:
        OutboundCallerConfig:
          $ref: '#/components/schemas/OutboundCallerConfig'
          description: 'The outbound caller ID name, number, and outbound whisper flow.'
    UpdateQueueStatusRequest:
      type: object
      required:
        - Status
      title: UpdateQueueStatusRequest
      properties:
        Status:
          $ref: '#/components/schemas/QueueStatus'
          description: The status of the queue.
    UpdateQuickConnectConfigRequest:
      type: object
      required:
        - QuickConnectConfig
      title: UpdateQuickConnectConfigRequest
      properties:
        QuickConnectConfig:
          $ref: '#/components/schemas/QuickConnectConfig'
          description: Information about the configuration settings for the quick connect.
    UpdateQuickConnectDescription:
      type: string
      minLength: 0
      maxLength: 250
    UpdateQuickConnectNameRequest:
      type: object
      title: UpdateQuickConnectNameRequest
      properties:
        Name:
          $ref: '#/components/schemas/QuickConnectName'
          description: The name of the quick connect.
        Description:
          $ref: '#/components/schemas/UpdateQuickConnectDescription'
          description: The description of the quick connect.
    UpdateRoutingProfileConcurrencyRequest:
      type: object
      required:
        - MediaConcurrencies
      title: UpdateRoutingProfileConcurrencyRequest
      properties:
        MediaConcurrencies:
          $ref: '#/components/schemas/MediaConcurrencies'
          description: The channels that agents can handle in the Contact Control Panel (CCP).
    UpdateRoutingProfileDefaultOutboundQueueRequest:
      type: object
      required:
        - DefaultOutboundQueueId
      title: UpdateRoutingProfileDefaultOutboundQueueRequest
      properties:
        DefaultOutboundQueueId:
          $ref: '#/components/schemas/QueueId'
          description: The identifier for the default outbound queue.
    UpdateRoutingProfileNameRequest:
      type: object
      title: UpdateRoutingProfileNameRequest
      properties:
        Name:
          $ref: '#/components/schemas/RoutingProfileName'
          description: The name of the routing profile. Must not be more than 127 characters.
        Description:
          $ref: '#/components/schemas/RoutingProfileDescription'
          description: The description of the routing profile. Must not be more than 250 characters.
    UpdateRoutingProfileQueuesRequest:
      type: object
      required:
        - QueueConfigs
      title: UpdateRoutingProfileQueuesRequest
      properties:
        QueueConfigs:
          $ref: '#/components/schemas/RoutingProfileQueueConfigList'
          description: The queues to be updated for this routing profile. Queues must first be associated to the routing profile. You can do this using AssociateRoutingProfileQueues.
    UpdateUserHierarchyGroupNameRequest:
      type: object
      required:
        - Name
      title: UpdateUserHierarchyGroupNameRequest
      properties:
        Name:
          $ref: '#/components/schemas/HierarchyGroupName'
          description: The name of the hierarchy group. Must not be more than 100 characters.
    UpdateUserHierarchyRequest:
      type: object
      title: UpdateUserHierarchyRequest
      properties:
        HierarchyGroupId:
          $ref: '#/components/schemas/HierarchyGroupId'
          description: The identifier of the hierarchy group.
    UpdateUserHierarchyStructureRequest:
      type: object
      required:
        - HierarchyStructure
      title: UpdateUserHierarchyStructureRequest
      properties:
        HierarchyStructure:
          $ref: '#/components/schemas/HierarchyStructureUpdate'
          description: The hierarchy levels to update.
    UpdateUserIdentityInfoRequest:
      type: object
      required:
        - IdentityInfo
      title: UpdateUserIdentityInfoRequest
      properties:
        IdentityInfo:
          $ref: '#/components/schemas/UserIdentityInfo'
          description: The identity information for the user.
    UpdateUserPhoneConfigRequest:
      type: object
      required:
        - PhoneConfig
      title: UpdateUserPhoneConfigRequest
      properties:
        PhoneConfig:
          $ref: '#/components/schemas/UserPhoneConfig'
          description: Information about phone configuration settings for the user.
    UpdateUserRoutingProfileRequest:
      type: object
      required:
        - RoutingProfileId
      title: UpdateUserRoutingProfileRequest
      properties:
        RoutingProfileId:
          $ref: '#/components/schemas/RoutingProfileId'
          description: The identifier of the routing profile for the user.
    UpdateUserSecurityProfilesRequest:
      type: object
      required:
        - SecurityProfileIds
      title: UpdateUserSecurityProfilesRequest
      properties:
        SecurityProfileIds:
          $ref: '#/components/schemas/SecurityProfileIds'
          description: The identifiers of the security profiles for the user.
    UseCase:
      type: object
      properties:
        UseCaseId:
          $ref: '#/components/schemas/UseCaseId'
          description: The identifier for the use case.
        UseCaseArn:
          $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) for the use case.
        UseCaseType:
          $ref: '#/components/schemas/UseCaseType'
          description: The type of use case to associate to the AppIntegration association. Each AppIntegration association can have only one of each use case type.
      description: Contains the use case.
    UserSummary:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/UserId'
          description: The identifier of the user account.
        Arn:
          $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the user account.
        Username:
          $ref: '#/components/schemas/AgentUsername'
          description: The Amazon Connect user name of the user account.
      description: Contains summary information about a user.
security:
  - hmac: []
