openapi: 3.0.0
info:
  version: '2016-02-16'
  x-release: v4
  title: Amazon Inspector
  description: '<fullname>Amazon Inspector</fullname> <p>Amazon Inspector enables you to analyze the behavior of your AWS resources and to identify potential security issues. For more information, see <a href="https://docs.aws.amazon.com/inspector/latest/userguide/inspector_introduction.html"> Amazon Inspector User Guide</a>.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: inspector
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/inspector-2016-02-16.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/inspector/'
servers:
  - url: 'http://inspector.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon Inspector multi-region endpoint
  - url: 'https://inspector.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon Inspector multi-region endpoint
  - url: 'http://inspector.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Inspector endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://inspector.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Inspector endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /#X-Amz-Target=InspectorService.AddAttributesToFindings:
    post:
      operationId: AddAttributesToFindings
      description: Assigns attributes (key and value pairs) to the findings that are specified by the ARNs of the findings.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddAttributesToFindingsResponse'
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: NoSuchEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
        '484':
          description: ServiceTemporarilyUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTemporarilyUnavailableException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAttributesToFindingsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - InspectorService.AddAttributesToFindings
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=InspectorService.CreateAssessmentTarget:
    post:
      operationId: CreateAssessmentTarget
      description: 'Creates a new assessment target using the ARN of the resource group that is generated by <a>CreateResourceGroup</a>. If resourceGroupArn is not specified, all EC2 instances in the current AWS account and region are included in the assessment target. If the <a href="https://docs.aws.amazon.com/inspector/latest/userguide/inspector_slr.html">service-linked role</a> isn’t already registered, this action also creates and registers a service-linked role to grant Amazon Inspector access to AWS Services needed to perform security assessments. You can create up to 50 assessment targets per AWS account. You can run up to 500 concurrent agents per AWS account. For more information, see <a href="https://docs.aws.amazon.com/inspector/latest/userguide/inspector_applications.html"> Amazon Inspector Assessment Targets</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAssessmentTargetResponse'
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: NoSuchEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
        '485':
          description: InvalidCrossAccountRoleException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidCrossAccountRoleException'
        '486':
          description: ServiceTemporarilyUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTemporarilyUnavailableException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAssessmentTargetRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - InspectorService.CreateAssessmentTarget
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=InspectorService.CreateAssessmentTemplate:
    post:
      operationId: CreateAssessmentTemplate
      description: 'Creates an assessment template for the assessment target that is specified by the ARN of the assessment target. If the <a href="https://docs.aws.amazon.com/inspector/latest/userguide/inspector_slr.html">service-linked role</a> isn’t already registered, this action also creates and registers a service-linked role to grant Amazon Inspector access to AWS Services needed to perform security assessments.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAssessmentTemplateResponse'
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: NoSuchEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
        '485':
          description: ServiceTemporarilyUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTemporarilyUnavailableException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAssessmentTemplateRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - InspectorService.CreateAssessmentTemplate
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=InspectorService.CreateExclusionsPreview:
    post:
      operationId: CreateExclusionsPreview
      description: 'Starts the generation of an exclusions preview for the specified assessment template. The exclusions preview lists the potential exclusions (ExclusionPreview) that Inspector can detect before it runs the assessment. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateExclusionsPreviewResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: PreviewGenerationInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreviewGenerationInProgressException'
        '482':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: NoSuchEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
        '485':
          description: ServiceTemporarilyUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTemporarilyUnavailableException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExclusionsPreviewRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - InspectorService.CreateExclusionsPreview
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=InspectorService.CreateResourceGroup:
    post:
      operationId: CreateResourceGroup
      description: 'Creates a resource group using the specified set of tags (key and value pairs) that are used to select the EC2 instances to be included in an Amazon Inspector assessment target. The created resource group is then used to create an Amazon Inspector assessment target. For more information, see <a>CreateAssessmentTarget</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateResourceGroupResponse'
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ServiceTemporarilyUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTemporarilyUnavailableException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateResourceGroupRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - InspectorService.CreateResourceGroup
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=InspectorService.DeleteAssessmentRun:
    post:
      operationId: DeleteAssessmentRun
      description: Deletes the assessment run that is specified by the ARN of the assessment run.
      responses:
        '200':
          description: Success
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: AssessmentRunInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssessmentRunInProgressException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: NoSuchEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
        '485':
          description: ServiceTemporarilyUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTemporarilyUnavailableException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAssessmentRunRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - InspectorService.DeleteAssessmentRun
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=InspectorService.DeleteAssessmentTarget:
    post:
      operationId: DeleteAssessmentTarget
      description: Deletes the assessment target that is specified by the ARN of the assessment target.
      responses:
        '200':
          description: Success
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: AssessmentRunInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssessmentRunInProgressException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: NoSuchEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
        '485':
          description: ServiceTemporarilyUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTemporarilyUnavailableException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAssessmentTargetRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - InspectorService.DeleteAssessmentTarget
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=InspectorService.DeleteAssessmentTemplate:
    post:
      operationId: DeleteAssessmentTemplate
      description: Deletes the assessment template that is specified by the ARN of the assessment template.
      responses:
        '200':
          description: Success
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: AssessmentRunInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssessmentRunInProgressException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: NoSuchEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
        '485':
          description: ServiceTemporarilyUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTemporarilyUnavailableException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAssessmentTemplateRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - InspectorService.DeleteAssessmentTemplate
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=InspectorService.DescribeAssessmentRuns:
    post:
      operationId: DescribeAssessmentRuns
      description: Describes the assessment runs that are specified by the ARNs of the assessment runs.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAssessmentRunsResponse'
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeAssessmentRunsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - InspectorService.DescribeAssessmentRuns
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=InspectorService.DescribeAssessmentTargets:
    post:
      operationId: DescribeAssessmentTargets
      description: Describes the assessment targets that are specified by the ARNs of the assessment targets.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAssessmentTargetsResponse'
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeAssessmentTargetsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - InspectorService.DescribeAssessmentTargets
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=InspectorService.DescribeAssessmentTemplates:
    post:
      operationId: DescribeAssessmentTemplates
      description: Describes the assessment templates that are specified by the ARNs of the assessment templates.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAssessmentTemplatesResponse'
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeAssessmentTemplatesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - InspectorService.DescribeAssessmentTemplates
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=InspectorService.DescribeCrossAccountAccessRole:
    post:
      operationId: DescribeCrossAccountAccessRole
      description: Describes the IAM role that enables Amazon Inspector to access your AWS account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeCrossAccountAccessRoleResponse'
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - InspectorService.DescribeCrossAccountAccessRole
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=InspectorService.DescribeExclusions:
    post:
      operationId: DescribeExclusions
      description: Describes the exclusions that are specified by the exclusions' ARNs.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeExclusionsResponse'
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeExclusionsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - InspectorService.DescribeExclusions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=InspectorService.DescribeFindings:
    post:
      operationId: DescribeFindings
      description: Describes the findings that are specified by the ARNs of the findings.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeFindingsResponse'
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeFindingsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - InspectorService.DescribeFindings
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=InspectorService.DescribeResourceGroups:
    post:
      operationId: DescribeResourceGroups
      description: Describes the resource groups that are specified by the ARNs of the resource groups.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeResourceGroupsResponse'
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeResourceGroupsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - InspectorService.DescribeResourceGroups
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=InspectorService.DescribeRulesPackages:
    post:
      operationId: DescribeRulesPackages
      description: Describes the rules packages that are specified by the ARNs of the rules packages.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeRulesPackagesResponse'
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeRulesPackagesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - InspectorService.DescribeRulesPackages
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=InspectorService.GetAssessmentReport:
    post:
      operationId: GetAssessmentReport
      description: 'Produces an assessment report that includes detailed and comprehensive results of a specified assessment run. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAssessmentReportResponse'
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: NoSuchEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
        '484':
          description: AssessmentRunInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssessmentRunInProgressException'
        '485':
          description: UnsupportedFeatureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedFeatureException'
        '486':
          description: ServiceTemporarilyUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTemporarilyUnavailableException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAssessmentReportRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - InspectorService.GetAssessmentReport
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=InspectorService.GetExclusionsPreview:
    post:
      operationId: GetExclusionsPreview
      description: Retrieves the exclusions preview (a list of ExclusionPreview objects) specified by the preview token. You can obtain the preview token by running the CreateExclusionsPreview API.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetExclusionsPreviewResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: NoSuchEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetExclusionsPreviewRequest'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - InspectorService.GetExclusionsPreview
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=InspectorService.GetTelemetryMetadata:
    post:
      operationId: GetTelemetryMetadata
      description: Information about the data that is collected for the specified assessment run.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTelemetryMetadataResponse'
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: NoSuchEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTelemetryMetadataRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - InspectorService.GetTelemetryMetadata
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=InspectorService.ListAssessmentRunAgents:
    post:
      operationId: ListAssessmentRunAgents
      description: Lists the agents of the assessment runs that are specified by the ARNs of the assessment runs.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAssessmentRunAgentsResponse'
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: NoSuchEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAssessmentRunAgentsRequest'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - InspectorService.ListAssessmentRunAgents
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=InspectorService.ListAssessmentRuns:
    post:
      operationId: ListAssessmentRuns
      description: Lists the assessment runs that correspond to the assessment templates that are specified by the ARNs of the assessment templates.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAssessmentRunsResponse'
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: NoSuchEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAssessmentRunsRequest'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - InspectorService.ListAssessmentRuns
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=InspectorService.ListAssessmentTargets:
    post:
      operationId: ListAssessmentTargets
      description: 'Lists the ARNs of the assessment targets within this AWS account. For more information about assessment targets, see <a href="https://docs.aws.amazon.com/inspector/latest/userguide/inspector_applications.html">Amazon Inspector Assessment Targets</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAssessmentTargetsResponse'
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAssessmentTargetsRequest'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - InspectorService.ListAssessmentTargets
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=InspectorService.ListAssessmentTemplates:
    post:
      operationId: ListAssessmentTemplates
      description: Lists the assessment templates that correspond to the assessment targets that are specified by the ARNs of the assessment targets.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAssessmentTemplatesResponse'
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: NoSuchEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAssessmentTemplatesRequest'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - InspectorService.ListAssessmentTemplates
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=InspectorService.ListEventSubscriptions:
    post:
      operationId: ListEventSubscriptions
      description: 'Lists all the event subscriptions for the assessment template that is specified by the ARN of the assessment template. For more information, see <a>SubscribeToEvent</a> and <a>UnsubscribeFromEvent</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEventSubscriptionsResponse'
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: NoSuchEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListEventSubscriptionsRequest'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - InspectorService.ListEventSubscriptions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=InspectorService.ListExclusions:
    post:
      operationId: ListExclusions
      description: List exclusions that are generated by the assessment run.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListExclusionsResponse'
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: NoSuchEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListExclusionsRequest'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - InspectorService.ListExclusions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=InspectorService.ListFindings:
    post:
      operationId: ListFindings
      description: Lists findings that are generated by the assessment runs that are specified by the ARNs of the assessment runs.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFindingsResponse'
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: NoSuchEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFindingsRequest'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - InspectorService.ListFindings
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=InspectorService.ListRulesPackages:
    post:
      operationId: ListRulesPackages
      description: Lists all available Amazon Inspector rules packages.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRulesPackagesResponse'
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListRulesPackagesRequest'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - InspectorService.ListRulesPackages
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=InspectorService.ListTagsForResource:
    post:
      operationId: ListTagsForResource
      description: Lists all tags associated with an assessment template.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: NoSuchEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - InspectorService.ListTagsForResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=InspectorService.PreviewAgents:
    post:
      operationId: PreviewAgents
      description: Previews the agents installed on the EC2 instances that are part of the specified assessment target.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreviewAgentsResponse'
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: NoSuchEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
        '484':
          description: InvalidCrossAccountRoleException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidCrossAccountRoleException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreviewAgentsRequest'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - InspectorService.PreviewAgents
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=InspectorService.RegisterCrossAccountAccessRole:
    post:
      operationId: RegisterCrossAccountAccessRole
      description: Registers the IAM role that grants Amazon Inspector access to AWS Services needed to perform security assessments.
      responses:
        '200':
          description: Success
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: InvalidCrossAccountRoleException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidCrossAccountRoleException'
        '484':
          description: ServiceTemporarilyUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTemporarilyUnavailableException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterCrossAccountAccessRoleRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - InspectorService.RegisterCrossAccountAccessRole
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=InspectorService.RemoveAttributesFromFindings:
    post:
      operationId: RemoveAttributesFromFindings
      description: Removes entire attributes (key and value pairs) from the findings that are specified by the ARNs of the findings where an attribute with the specified key exists.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveAttributesFromFindingsResponse'
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: NoSuchEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
        '484':
          description: ServiceTemporarilyUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTemporarilyUnavailableException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveAttributesFromFindingsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - InspectorService.RemoveAttributesFromFindings
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=InspectorService.SetTagsForResource:
    post:
      operationId: SetTagsForResource
      description: Sets tags (key and value pairs) to the assessment template that is specified by the ARN of the assessment template.
      responses:
        '200':
          description: Success
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: NoSuchEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
        '484':
          description: ServiceTemporarilyUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTemporarilyUnavailableException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetTagsForResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - InspectorService.SetTagsForResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=InspectorService.StartAssessmentRun:
    post:
      operationId: StartAssessmentRun
      description: 'Starts the assessment run specified by the ARN of the assessment template. For this API to function properly, you must not exceed the limit of running up to 500 concurrent agents per AWS account.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartAssessmentRunResponse'
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: NoSuchEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
        '485':
          description: InvalidCrossAccountRoleException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidCrossAccountRoleException'
        '486':
          description: AgentsAlreadyRunningAssessmentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentsAlreadyRunningAssessmentException'
        '487':
          description: ServiceTemporarilyUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTemporarilyUnavailableException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartAssessmentRunRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - InspectorService.StartAssessmentRun
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=InspectorService.StopAssessmentRun:
    post:
      operationId: StopAssessmentRun
      description: Stops the assessment run that is specified by the ARN of the assessment run.
      responses:
        '200':
          description: Success
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: NoSuchEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
        '484':
          description: ServiceTemporarilyUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTemporarilyUnavailableException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopAssessmentRunRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - InspectorService.StopAssessmentRun
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=InspectorService.SubscribeToEvent:
    post:
      operationId: SubscribeToEvent
      description: Enables the process of sending Amazon Simple Notification Service (SNS) notifications about a specified event to a specified SNS topic.
      responses:
        '200':
          description: Success
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: NoSuchEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
        '485':
          description: ServiceTemporarilyUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTemporarilyUnavailableException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscribeToEventRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - InspectorService.SubscribeToEvent
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=InspectorService.UnsubscribeFromEvent:
    post:
      operationId: UnsubscribeFromEvent
      description: Disables the process of sending Amazon Simple Notification Service (SNS) notifications about a specified event to a specified SNS topic.
      responses:
        '200':
          description: Success
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: NoSuchEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
        '484':
          description: ServiceTemporarilyUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTemporarilyUnavailableException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnsubscribeFromEventRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - InspectorService.UnsubscribeFromEvent
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /#X-Amz-Target=InspectorService.UpdateAssessmentTarget:
    post:
      operationId: UpdateAssessmentTarget
      description: '<p>Updates the assessment target that is specified by the ARN of the assessment target.</p> <p>If resourceGroupArn is not specified, all EC2 instances in the current AWS account and region are included in the assessment target.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: NoSuchEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
        '484':
          description: ServiceTemporarilyUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTemporarilyUnavailableException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAssessmentTargetRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - InspectorService.UpdateAssessmentTarget
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AddAttributesToFindingsResponse:
      type: object
      required:
        - failedItems
      example:
        failedItems: {}
      properties:
        failedItems:
          $ref: '#/components/schemas/FailedItems'
          description: Attribute details that cannot be described. An error code is provided for each failed item.
    AddAttributesToFindingsRequest:
      type: object
      required:
        - findingArns
        - attributes
      title: AddAttributesToFindingsRequest
      properties:
        findingArns:
          $ref: '#/components/schemas/AddRemoveAttributesFindingArnList'
          description: The ARNs that specify the findings that you want to assign attributes to.
        attributes:
          $ref: '#/components/schemas/UserAttributeList'
          description: The array of attributes that you want to assign to specified findings.
    InternalException: {}
    InvalidInputException: {}
    AccessDeniedException: {}
    NoSuchEntityException: {}
    ServiceTemporarilyUnavailableException: {}
    CreateAssessmentTargetResponse:
      type: object
      required:
        - assessmentTargetArn
      example:
        assessmentTargetArn: 'arn:aws:inspector:us-west-2:123456789012:target/0-nvgVhaxX'
      properties:
        assessmentTargetArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN that specifies the assessment target that is created.
    CreateAssessmentTargetRequest:
      type: object
      required:
        - assessmentTargetName
      title: CreateAssessmentTargetRequest
      properties:
        assessmentTargetName:
          $ref: '#/components/schemas/AssessmentTargetName'
          description: The user-defined name that identifies the assessment target that you want to create. The name must be unique within the AWS account.
        resourceGroupArn:
          $ref: '#/components/schemas/Arn'
          description: 'The ARN that specifies the resource group that is used to create the assessment target. If resourceGroupArn is not specified, all EC2 instances in the current AWS account and region are included in the assessment target.'
    LimitExceededException: {}
    InvalidCrossAccountRoleException: {}
    CreateAssessmentTemplateResponse:
      type: object
      required:
        - assessmentTemplateArn
      example:
        assessmentTemplateArn: 'arn:aws:inspector:us-west-2:123456789012:target/0-nvgVhaxX/template/0-it5r2S4T'
      properties:
        assessmentTemplateArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN that specifies the assessment template that is created.
    CreateAssessmentTemplateRequest:
      type: object
      required:
        - assessmentTargetArn
        - assessmentTemplateName
        - durationInSeconds
        - rulesPackageArns
      title: CreateAssessmentTemplateRequest
      properties:
        assessmentTargetArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN that specifies the assessment target for which you want to create the assessment template.
        assessmentTemplateName:
          $ref: '#/components/schemas/AssessmentTemplateName'
          description: The user-defined name that identifies the assessment template that you want to create. You can create several assessment templates for an assessment target. The names of the assessment templates that correspond to a particular assessment target must be unique.
        durationInSeconds:
          $ref: '#/components/schemas/AssessmentRunDuration'
          description: The duration of the assessment run in seconds.
        rulesPackageArns:
          $ref: '#/components/schemas/AssessmentTemplateRulesPackageArnList'
          description: The ARNs that specify the rules packages that you want to attach to the assessment template.
        userAttributesForFindings:
          $ref: '#/components/schemas/UserAttributeList'
          description: 'The user-defined attributes that are assigned to every finding that is generated by the assessment run that uses this assessment template. An attribute is a key and value pair (an <a>Attribute</a> object). Within an assessment template, each key must be unique.'
    CreateExclusionsPreviewResponse:
      type: object
      required:
        - previewToken
      properties:
        previewToken:
          $ref: '#/components/schemas/UUID'
          description: Specifies the unique identifier of the requested exclusions preview. You can use the unique identifier to retrieve the exclusions preview when running the GetExclusionsPreview API.
    CreateExclusionsPreviewRequest:
      type: object
      required:
        - assessmentTemplateArn
      title: CreateExclusionsPreviewRequest
      properties:
        assessmentTemplateArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN that specifies the assessment template for which you want to create an exclusions preview.
    PreviewGenerationInProgressException: {}
    CreateResourceGroupResponse:
      type: object
      required:
        - resourceGroupArn
      example:
        resourceGroupArn: 'arn:aws:inspector:us-west-2:123456789012:resourcegroup/0-AB6DMKnv'
      properties:
        resourceGroupArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN that specifies the resource group that is created.
    CreateResourceGroupRequest:
      type: object
      required:
        - resourceGroupTags
      title: CreateResourceGroupRequest
      properties:
        resourceGroupTags:
          $ref: '#/components/schemas/ResourceGroupTags'
          description: '<p>A collection of keys and an array of possible values, ''[{"key":"key1","values":["Value1","Value2"]},{"key":"Key2","values":["Value3"]}]''.</p> <p>For example,''[{"key":"Name","values":["TestEC2Instance"]}]''.</p>'
    DeleteAssessmentRunRequest:
      type: object
      required:
        - assessmentRunArn
      title: DeleteAssessmentRunRequest
      properties:
        assessmentRunArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN that specifies the assessment run that you want to delete.
    AssessmentRunInProgressException: {}
    DeleteAssessmentTargetRequest:
      type: object
      required:
        - assessmentTargetArn
      title: DeleteAssessmentTargetRequest
      properties:
        assessmentTargetArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN that specifies the assessment target that you want to delete.
    DeleteAssessmentTemplateRequest:
      type: object
      required:
        - assessmentTemplateArn
      title: DeleteAssessmentTemplateRequest
      properties:
        assessmentTemplateArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN that specifies the assessment template that you want to delete.
    DescribeAssessmentRunsResponse:
      type: object
      required:
        - assessmentRuns
        - failedItems
      example:
        assessmentRuns:
          - name: Run 1 for ExampleAssessmentTemplate
            arn: 'arn:aws:inspector:us-west-2:123456789012:target/0-0kFIPusq/template/0-4r1V2mAw/run/0-MKkpXXPE'
            assessmentTemplateArn: 'arn:aws:inspector:us-west-2:123456789012:target/0-0kFIPusq/template/0-4r1V2mAw'
            completedAt: '1458680301.4'
            createdAt: '1458680170.035'
            dataCollected: true
            durationInSeconds: 3600
            findingCounts:
              High: 14
              Informational: 0
              Low: 0
              Medium: 2
              Undefined: 0
            notifications: []
            rulesPackageArns:
              - 'arn:aws:inspector:us-west-2:758058086616:rulespackage/0-X1KXtawP'
            startedAt: '1458680170.161'
            state: COMPLETED
            stateChangedAt: '1458680301.4'
            stateChanges:
              - state: CREATED
                stateChangedAt: '1458680170.035'
              - state: START_DATA_COLLECTION_PENDING
                stateChangedAt: '1458680170.065'
              - state: START_DATA_COLLECTION_IN_PROGRESS
                stateChangedAt: '1458680170.096'
              - state: COLLECTING_DATA
                stateChangedAt: '1458680170.161'
              - state: STOP_DATA_COLLECTION_PENDING
                stateChangedAt: '1458680239.883'
              - state: DATA_COLLECTED
                stateChangedAt: '1458680299.847'
              - state: EVALUATING_RULES
                stateChangedAt: '1458680300.099'
              - state: COMPLETED
                stateChangedAt: '1458680301.4'
            userAttributesForFindings: []
        failedItems: {}
      properties:
        assessmentRuns:
          $ref: '#/components/schemas/AssessmentRunList'
          description: Information about the assessment run.
        failedItems:
          $ref: '#/components/schemas/FailedItems'
          description: Assessment run details that cannot be described. An error code is provided for each failed item.
    DescribeAssessmentRunsRequest:
      type: object
      required:
        - assessmentRunArns
      title: DescribeAssessmentRunsRequest
      properties:
        assessmentRunArns:
          $ref: '#/components/schemas/BatchDescribeArnList'
          description: The ARN that specifies the assessment run that you want to describe.
    DescribeAssessmentTargetsResponse:
      type: object
      required:
        - assessmentTargets
        - failedItems
      example:
        assessmentTargets:
          - name: ExampleAssessmentTarget
            arn: 'arn:aws:inspector:us-west-2:123456789012:target/0-0kFIPusq'
            createdAt: '1458074191.459'
            resourceGroupArn: 'arn:aws:inspector:us-west-2:123456789012:resourcegroup/0-PyGXopAI'
            updatedAt: '1458074191.459'
        failedItems: {}
      properties:
        assessmentTargets:
          $ref: '#/components/schemas/AssessmentTargetList'
          description: Information about the assessment targets.
        failedItems:
          $ref: '#/components/schemas/FailedItems'
          description: Assessment target details that cannot be described. An error code is provided for each failed item.
    DescribeAssessmentTargetsRequest:
      type: object
      required:
        - assessmentTargetArns
      title: DescribeAssessmentTargetsRequest
      properties:
        assessmentTargetArns:
          $ref: '#/components/schemas/BatchDescribeArnList'
          description: The ARNs that specifies the assessment targets that you want to describe.
    DescribeAssessmentTemplatesResponse:
      type: object
      required:
        - assessmentTemplates
        - failedItems
      example:
        assessmentTemplates:
          - name: ExampleAssessmentTemplate
            arn: 'arn:aws:inspector:us-west-2:123456789012:target/0-0kFIPusq/template/0-4r1V2mAw'
            assessmentRunCount: 0
            assessmentTargetArn: 'arn:aws:inspector:us-west-2:123456789012:target/0-0kFIPusq'
            createdAt: '1458074191.844'
            durationInSeconds: 3600
            rulesPackageArns:
              - 'arn:aws:inspector:us-west-2:758058086616:rulespackage/0-X1KXtawP'
            userAttributesForFindings: []
        failedItems: {}
      properties:
        assessmentTemplates:
          $ref: '#/components/schemas/AssessmentTemplateList'
          description: Information about the assessment templates.
        failedItems:
          $ref: '#/components/schemas/FailedItems'
          description: Assessment template details that cannot be described. An error code is provided for each failed item.
    DescribeAssessmentTemplatesRequest:
      type: object
      required:
        - assessmentTemplateArns
      title: DescribeAssessmentTemplatesRequest
      properties:
        assessmentTemplateArns:
          $ref: '#/components/schemas/BatchDescribeArnList'
    DescribeCrossAccountAccessRoleResponse:
      type: object
      required:
        - roleArn
        - valid
        - registeredAt
      example:
        registeredAt: '1458069182.826'
        roleArn: 'arn:aws:iam::123456789012:role/inspector'
        valid: true
      properties:
        roleArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN that specifies the IAM role that Amazon Inspector uses to access your AWS account.
        valid:
          $ref: '#/components/schemas/Bool'
          description: A Boolean value that specifies whether the IAM role has the necessary policies attached to enable Amazon Inspector to access your AWS account.
        registeredAt:
          $ref: '#/components/schemas/Timestamp'
          description: The date when the cross-account access role was registered.
    DescribeExclusionsResponse:
      type: object
      required:
        - exclusions
        - failedItems
      properties:
        exclusions:
          $ref: '#/components/schemas/ExclusionMap'
          description: Information about the exclusions.
        failedItems:
          $ref: '#/components/schemas/FailedItems'
          description: Exclusion details that cannot be described. An error code is provided for each failed item.
    DescribeExclusionsRequest:
      type: object
      required:
        - exclusionArns
      title: DescribeExclusionsRequest
      properties:
        exclusionArns:
          $ref: '#/components/schemas/BatchDescribeExclusionsArnList'
          description: The list of ARNs that specify the exclusions that you want to describe.
        locale:
          $ref: '#/components/schemas/Locale'
          description: 'The locale into which you want to translate the exclusion''s title, description, and recommendation.'
    DescribeFindingsResponse:
      type: object
      required:
        - findings
        - failedItems
      example:
        failedItems: {}
        findings:
          - arn: 'arn:aws:inspector:us-west-2:123456789012:target/0-0kFIPusq/template/0-4r1V2mAw/run/0-MKkpXXPE/finding/0-HwPnsDm4'
            assetAttributes:
              ipv4Addresses: []
              schemaVersion: 1
            assetType: ec2-instance
            attributes: []
            confidence: 10
            createdAt: '1458680301.37'
            description: Amazon Inspector did not find any potential security issues during this assessment.
            indicatorOfCompromise: false
            numericSeverity: 0
            recommendation: No remediation needed.
            schemaVersion: 1
            service: Inspector
            serviceAttributes:
              assessmentRunArn: 'arn:aws:inspector:us-west-2:123456789012:target/0-0kFIPusq/template/0-4r1V2mAw/run/0-MKkpXXPE'
              rulesPackageArn: 'arn:aws:inspector:us-west-2:758058086616:rulespackage/0-X1KXtawP'
              schemaVersion: 1
            severity: Informational
            title: No potential security issues found
            updatedAt: '1458680301.37'
            userAttributes: []
      properties:
        findings:
          $ref: '#/components/schemas/FindingList'
          description: Information about the finding.
        failedItems:
          $ref: '#/components/schemas/FailedItems'
          description: Finding details that cannot be described. An error code is provided for each failed item.
    DescribeFindingsRequest:
      type: object
      required:
        - findingArns
      title: DescribeFindingsRequest
      properties:
        findingArns:
          $ref: '#/components/schemas/BatchDescribeArnList'
          description: The ARN that specifies the finding that you want to describe.
        locale:
          $ref: '#/components/schemas/Locale'
          description: 'The locale into which you want to translate a finding description, recommendation, and the short description that identifies the finding.'
    DescribeResourceGroupsResponse:
      type: object
      required:
        - resourceGroups
        - failedItems
      example:
        failedItems: {}
        resourceGroups:
          - arn: 'arn:aws:inspector:us-west-2:123456789012:resourcegroup/0-PyGXopAI'
            createdAt: '1458074191.098'
            tags:
              - key: Name
                value: example
      properties:
        resourceGroups:
          $ref: '#/components/schemas/ResourceGroupList'
          description: Information about a resource group.
        failedItems:
          $ref: '#/components/schemas/FailedItems'
          description: Resource group details that cannot be described. An error code is provided for each failed item.
    DescribeResourceGroupsRequest:
      type: object
      required:
        - resourceGroupArns
      title: DescribeResourceGroupsRequest
      properties:
        resourceGroupArns:
          $ref: '#/components/schemas/BatchDescribeArnList'
          description: The ARN that specifies the resource group that you want to describe.
    DescribeRulesPackagesResponse:
      type: object
      required:
        - rulesPackages
        - failedItems
      example:
        failedItems: {}
        rulesPackages:
          - version: '1.1'
            name: Security Best Practices
            arn: 'arn:aws:inspector:us-west-2:758058086616:rulespackage/0-JJOtZiqQ'
            description: The rules in this package help determine whether your systems are configured securely.
            provider: 'Amazon Web Services, Inc.'
      properties:
        rulesPackages:
          $ref: '#/components/schemas/RulesPackageList'
          description: Information about the rules package.
        failedItems:
          $ref: '#/components/schemas/FailedItems'
          description: Rules package details that cannot be described. An error code is provided for each failed item.
    DescribeRulesPackagesRequest:
      type: object
      required:
        - rulesPackageArns
      title: DescribeRulesPackagesRequest
      properties:
        rulesPackageArns:
          $ref: '#/components/schemas/BatchDescribeArnList'
          description: The ARN that specifies the rules package that you want to describe.
        locale:
          $ref: '#/components/schemas/Locale'
          description: The locale that you want to translate a rules package description into.
    GetAssessmentReportResponse:
      type: object
      required:
        - status
      properties:
        status:
          $ref: '#/components/schemas/ReportStatus'
          description: 'Specifies the status of the request to generate an assessment report. '
        url:
          $ref: '#/components/schemas/Url'
          description: Specifies the URL where you can find the generated assessment report. This parameter is only returned if the report is successfully generated.
    GetAssessmentReportRequest:
      type: object
      required:
        - assessmentRunArn
        - reportFileFormat
        - reportType
      title: GetAssessmentReportRequest
      properties:
        assessmentRunArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN that specifies the assessment run for which you want to generate a report.
        reportFileFormat:
          $ref: '#/components/schemas/ReportFileFormat'
          description: Specifies the file format (html or pdf) of the assessment report that you want to generate.
        reportType:
          $ref: '#/components/schemas/ReportType'
          description: 'Specifies the type of the assessment report that you want to generate. There are two types of assessment reports: a finding report and a full report. For more information, see <a href="https://docs.aws.amazon.com/inspector/latest/userguide/inspector_reports.html">Assessment Reports</a>. '
    UnsupportedFeatureException: {}
    GetExclusionsPreviewResponse:
      type: object
      required:
        - previewStatus
      properties:
        previewStatus:
          $ref: '#/components/schemas/PreviewStatus'
          description: Specifies the status of the request to generate an exclusions preview.
        exclusionPreviews:
          $ref: '#/components/schemas/ExclusionPreviewList'
          description: Information about the exclusions included in the preview.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'When a response is generated, if there is more data to be listed, this parameters is present in the response and contains the value to use for the nextToken parameter in a subsequent pagination request. If there is no more data to be listed, this parameter is set to null.'
    GetExclusionsPreviewRequest:
      type: object
      required:
        - assessmentTemplateArn
        - previewToken
      title: GetExclusionsPreviewRequest
      properties:
        assessmentTemplateArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN that specifies the assessment template for which the exclusions preview was requested.
        previewToken:
          $ref: '#/components/schemas/UUID'
          description: The unique identifier associated of the exclusions preview.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the GetExclusionsPreviewRequest action. Subsequent calls to the action fill nextToken in the request with the value of nextToken from the previous response to continue listing data.
        maxResults:
          $ref: '#/components/schemas/ListMaxResults'
          description: You can use this parameter to indicate the maximum number of items you want in the response. The default value is 100. The maximum value is 500.
        locale:
          $ref: '#/components/schemas/Locale'
          description: 'The locale into which you want to translate the exclusion''s title, description, and recommendation.'
    GetTelemetryMetadataResponse:
      type: object
      required:
        - telemetryMetadata
      example:
        telemetryMetadata:
          - count: 2
            dataSize: 345
            messageType: InspectorDuplicateProcess
          - count: 3
            dataSize: 255
            messageType: InspectorTimeEventMsg
          - count: 4
            dataSize: 1082
            messageType: InspectorNetworkInterface
          - count: 2
            dataSize: 349
            messageType: InspectorDnsEntry
          - count: 11
            dataSize: 2514
            messageType: InspectorDirectoryInfoMsg
          - count: 1
            dataSize: 179
            messageType: InspectorTcpV6ListeningPort
          - count: 101
            dataSize: 10949
            messageType: InspectorTerminal
          - count: 26
            dataSize: 5916
            messageType: InspectorUser
          - count: 282
            dataSize: 32148
            messageType: InspectorDynamicallyLoadedCodeModule
          - count: 18
            dataSize: 10172
            messageType: InspectorCreateProcess
          - count: 3
            dataSize: 8001
            messageType: InspectorProcessPerformance
          - count: 1
            dataSize: 360
            messageType: InspectorOperatingSystem
          - count: 6
            dataSize: 546
            messageType: InspectorStopProcess
          - count: 1
            dataSize: 1553
            messageType: InspectorInstanceMetaData
          - count: 2
            dataSize: 434
            messageType: InspectorTcpV4Connection
          - count: 474
            dataSize: 2960322
            messageType: InspectorPackageInfo
          - count: 3
            dataSize: 2235
            messageType: InspectorSystemPerformance
          - count: 105
            dataSize: 46048
            messageType: InspectorCodeModule
          - count: 1
            dataSize: 182
            messageType: InspectorUdpV6ListeningPort
          - count: 2
            dataSize: 371
            messageType: InspectorUdpV4ListeningPort
          - count: 18
            dataSize: 8362
            messageType: InspectorKernelModule
          - count: 29
            dataSize: 48788
            messageType: InspectorConfigurationInfo
          - count: 1
            dataSize: 79
            messageType: InspectorMonitoringStart
          - count: 5
            dataSize: 0
            messageType: InspectorSplitMsgBegin
          - count: 51
            dataSize: 4593
            messageType: InspectorGroup
          - count: 1
            dataSize: 184
            messageType: InspectorTcpV4ListeningPort
          - count: 1159
            dataSize: 3146579
            messageType: Total
          - count: 5
            dataSize: 0
            messageType: InspectorSplitMsgEnd
          - count: 1
            dataSize: 612
            messageType: InspectorLoadImageInProcess
      properties:
        telemetryMetadata:
          $ref: '#/components/schemas/TelemetryMetadataList'
          description: Telemetry details.
    GetTelemetryMetadataRequest:
      type: object
      required:
        - assessmentRunArn
      title: GetTelemetryMetadataRequest
      properties:
        assessmentRunArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN that specifies the assessment run that has the telemetry data that you want to obtain.
    ListAssessmentRunAgentsResponse:
      type: object
      required:
        - assessmentRunAgents
      example:
        assessmentRunAgents:
          - agentHealth: HEALTHY
            agentHealthCode: RUNNING
            agentId: i-49113b93
            assessmentRunArn: 'arn:aws:inspector:us-west-2:123456789012:target/0-0kFIPusq/template/0-4r1V2mAw/run/0-MKkpXXPE'
            telemetryMetadata:
              - count: 2
                dataSize: 345
                messageType: InspectorDuplicateProcess
              - count: 3
                dataSize: 255
                messageType: InspectorTimeEventMsg
              - count: 4
                dataSize: 1082
                messageType: InspectorNetworkInterface
              - count: 2
                dataSize: 349
                messageType: InspectorDnsEntry
              - count: 11
                dataSize: 2514
                messageType: InspectorDirectoryInfoMsg
              - count: 1
                dataSize: 179
                messageType: InspectorTcpV6ListeningPort
              - count: 101
                dataSize: 10949
                messageType: InspectorTerminal
              - count: 26
                dataSize: 5916
                messageType: InspectorUser
              - count: 282
                dataSize: 32148
                messageType: InspectorDynamicallyLoadedCodeModule
              - count: 18
                dataSize: 10172
                messageType: InspectorCreateProcess
              - count: 3
                dataSize: 8001
                messageType: InspectorProcessPerformance
              - count: 1
                dataSize: 360
                messageType: InspectorOperatingSystem
              - count: 6
                dataSize: 546
                messageType: InspectorStopProcess
              - count: 1
                dataSize: 1553
                messageType: InspectorInstanceMetaData
              - count: 2
                dataSize: 434
                messageType: InspectorTcpV4Connection
              - count: 474
                dataSize: 2960322
                messageType: InspectorPackageInfo
              - count: 3
                dataSize: 2235
                messageType: InspectorSystemPerformance
              - count: 105
                dataSize: 46048
                messageType: InspectorCodeModule
              - count: 1
                dataSize: 182
                messageType: InspectorUdpV6ListeningPort
              - count: 2
                dataSize: 371
                messageType: InspectorUdpV4ListeningPort
              - count: 18
                dataSize: 8362
                messageType: InspectorKernelModule
              - count: 29
                dataSize: 48788
                messageType: InspectorConfigurationInfo
              - count: 1
                dataSize: 79
                messageType: InspectorMonitoringStart
              - count: 5
                dataSize: 0
                messageType: InspectorSplitMsgBegin
              - count: 51
                dataSize: 4593
                messageType: InspectorGroup
              - count: 1
                dataSize: 184
                messageType: InspectorTcpV4ListeningPort
              - count: 1159
                dataSize: 3146579
                messageType: Total
              - count: 5
                dataSize: 0
                messageType: InspectorSplitMsgEnd
              - count: 1
                dataSize: 612
                messageType: InspectorLoadImageInProcess
        nextToken: '1'
      properties:
        assessmentRunAgents:
          $ref: '#/components/schemas/AssessmentRunAgentList'
          description: A list of ARNs that specifies the agents returned by the action.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: ' When a response is generated, if there is more data to be listed, this parameter is present in the response and contains the value to use for the <b>nextToken</b> parameter in a subsequent pagination request. If there is no more data to be listed, this parameter is set to null.'
    ListAssessmentRunAgentsRequest:
      type: object
      required:
        - assessmentRunArn
      title: ListAssessmentRunAgentsRequest
      properties:
        assessmentRunArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN that specifies the assessment run whose agents you want to list.
        filter:
          $ref: '#/components/schemas/AgentFilter'
          description: '<p>You can use this parameter to specify a subset of data to be included in the action''s response.</p> <p>For a record to match a filter, all specified filter attributes must match. When multiple values are specified for a filter attribute, any of the values can match.</p>'
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the <b>ListAssessmentRunAgents</b> action. Subsequent calls to the action fill <b>nextToken</b> in the request with the value of <b>NextToken</b> from the previous response to continue listing data.
        maxResults:
          $ref: '#/components/schemas/ListMaxResults'
          description: You can use this parameter to indicate the maximum number of items that you want in the response. The default value is 10. The maximum value is 500.
    ListAssessmentRunsResponse:
      type: object
      required:
        - assessmentRunArns
      example:
        assessmentRunArns:
          - 'arn:aws:inspector:us-west-2:123456789012:target/0-0kFIPusq/template/0-4r1V2mAw/run/0-MKkpXXPE'
          - 'arn:aws:inspector:us-west-2:123456789012:target/0-0kFIPusq/template/0-4r1V2mAw/run/0-v5D6fI3v'
        nextToken: '1'
      properties:
        assessmentRunArns:
          $ref: '#/components/schemas/ListReturnedArnList'
          description: A list of ARNs that specifies the assessment runs that are returned by the action.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: ' When a response is generated, if there is more data to be listed, this parameter is present in the response and contains the value to use for the <b>nextToken</b> parameter in a subsequent pagination request. If there is no more data to be listed, this parameter is set to null.'
    ListAssessmentRunsRequest:
      type: object
      title: ListAssessmentRunsRequest
      properties:
        assessmentTemplateArns:
          $ref: '#/components/schemas/ListParentArnList'
          description: The ARNs that specify the assessment templates whose assessment runs you want to list.
        filter:
          $ref: '#/components/schemas/AssessmentRunFilter'
          description: '<p>You can use this parameter to specify a subset of data to be included in the action''s response.</p> <p>For a record to match a filter, all specified filter attributes must match. When multiple values are specified for a filter attribute, any of the values can match.</p>'
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the <b>ListAssessmentRuns</b> action. Subsequent calls to the action fill <b>nextToken</b> in the request with the value of <b>NextToken</b> from the previous response to continue listing data.
        maxResults:
          $ref: '#/components/schemas/ListMaxResults'
          description: You can use this parameter to indicate the maximum number of items that you want in the response. The default value is 10. The maximum value is 500.
    ListAssessmentTargetsResponse:
      type: object
      required:
        - assessmentTargetArns
      example:
        assessmentTargetArns:
          - 'arn:aws:inspector:us-west-2:123456789012:target/0-0kFIPusq'
        nextToken: '1'
      properties:
        assessmentTargetArns:
          $ref: '#/components/schemas/ListReturnedArnList'
          description: A list of ARNs that specifies the assessment targets that are returned by the action.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: ' When a response is generated, if there is more data to be listed, this parameter is present in the response and contains the value to use for the <b>nextToken</b> parameter in a subsequent pagination request. If there is no more data to be listed, this parameter is set to null.'
    ListAssessmentTargetsRequest:
      type: object
      title: ListAssessmentTargetsRequest
      properties:
        filter:
          $ref: '#/components/schemas/AssessmentTargetFilter'
          description: '<p>You can use this parameter to specify a subset of data to be included in the action''s response.</p> <p>For a record to match a filter, all specified filter attributes must match. When multiple values are specified for a filter attribute, any of the values can match.</p>'
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the <b>ListAssessmentTargets</b> action. Subsequent calls to the action fill <b>nextToken</b> in the request with the value of <b>NextToken</b> from the previous response to continue listing data.
        maxResults:
          $ref: '#/components/schemas/ListMaxResults'
          description: You can use this parameter to indicate the maximum number of items you want in the response. The default value is 10. The maximum value is 500.
    ListAssessmentTemplatesResponse:
      type: object
      required:
        - assessmentTemplateArns
      example:
        assessmentTemplateArns:
          - 'arn:aws:inspector:us-west-2:123456789012:target/0-0kFIPusq/template/0-4r1V2mAw'
          - 'arn:aws:inspector:us-west-2:123456789012:target/0-0kFIPusq/template/0-Uza6ihLh'
        nextToken: '1'
      properties:
        assessmentTemplateArns:
          $ref: '#/components/schemas/ListReturnedArnList'
          description: A list of ARNs that specifies the assessment templates returned by the action.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: ' When a response is generated, if there is more data to be listed, this parameter is present in the response and contains the value to use for the <b>nextToken</b> parameter in a subsequent pagination request. If there is no more data to be listed, this parameter is set to null.'
    ListAssessmentTemplatesRequest:
      type: object
      title: ListAssessmentTemplatesRequest
      properties:
        assessmentTargetArns:
          $ref: '#/components/schemas/ListParentArnList'
          description: A list of ARNs that specifies the assessment targets whose assessment templates you want to list.
        filter:
          $ref: '#/components/schemas/AssessmentTemplateFilter'
          description: '<p>You can use this parameter to specify a subset of data to be included in the action''s response.</p> <p>For a record to match a filter, all specified filter attributes must match. When multiple values are specified for a filter attribute, any of the values can match.</p>'
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the <b>ListAssessmentTemplates</b> action. Subsequent calls to the action fill <b>nextToken</b> in the request with the value of <b>NextToken</b> from the previous response to continue listing data.
        maxResults:
          $ref: '#/components/schemas/ListMaxResults'
          description: You can use this parameter to indicate the maximum number of items you want in the response. The default value is 10. The maximum value is 500.
    ListEventSubscriptionsResponse:
      type: object
      required:
        - subscriptions
      example:
        nextToken: '1'
        subscriptions:
          - eventSubscriptions:
              - event: ASSESSMENT_RUN_COMPLETED
                subscribedAt: '1459455440.867'
            resourceArn: 'arn:aws:inspector:us-west-2:123456789012:target/0-nvgVhaxX/template/0-7sbz2Kz0'
            topicArn: 'arn:aws:sns:us-west-2:123456789012:exampletopic'
      properties:
        subscriptions:
          $ref: '#/components/schemas/SubscriptionList'
          description: Details of the returned event subscriptions.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: ' When a response is generated, if there is more data to be listed, this parameter is present in the response and contains the value to use for the <b>nextToken</b> parameter in a subsequent pagination request. If there is no more data to be listed, this parameter is set to null.'
    ListEventSubscriptionsRequest:
      type: object
      title: ListEventSubscriptionsRequest
      properties:
        resourceArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the assessment template for which you want to list the existing event subscriptions.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the <b>ListEventSubscriptions</b> action. Subsequent calls to the action fill <b>nextToken</b> in the request with the value of <b>NextToken</b> from the previous response to continue listing data.
        maxResults:
          $ref: '#/components/schemas/ListEventSubscriptionsMaxResults'
          description: You can use this parameter to indicate the maximum number of items you want in the response. The default value is 10. The maximum value is 500.
    ListExclusionsResponse:
      type: object
      required:
        - exclusionArns
      properties:
        exclusionArns:
          $ref: '#/components/schemas/ListReturnedArnList'
          description: A list of exclusions' ARNs returned by the action.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'When a response is generated, if there is more data to be listed, this parameters is present in the response and contains the value to use for the nextToken parameter in a subsequent pagination request. If there is no more data to be listed, this parameter is set to null.'
    ListExclusionsRequest:
      type: object
      required:
        - assessmentRunArn
      title: ListExclusionsRequest
      properties:
        assessmentRunArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the assessment run that generated the exclusions that you want to list.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the ListExclusionsRequest action. Subsequent calls to the action fill nextToken in the request with the value of nextToken from the previous response to continue listing data.
        maxResults:
          $ref: '#/components/schemas/ListMaxResults'
          description: You can use this parameter to indicate the maximum number of items you want in the response. The default value is 100. The maximum value is 500.
    ListFindingsResponse:
      type: object
      required:
        - findingArns
      example:
        findingArns:
          - 'arn:aws:inspector:us-west-2:123456789012:target/0-0kFIPusq/template/0-4r1V2mAw/run/0-MKkpXXPE/finding/0-HwPnsDm4'
          - 'arn:aws:inspector:us-west-2:123456789012:target/0-0kFIPusq/template/0-4r1V2mAw/run/0-v5D6fI3v/finding/0-tyvmqBLy'
        nextToken: '1'
      properties:
        findingArns:
          $ref: '#/components/schemas/ListReturnedArnList'
          description: A list of ARNs that specifies the findings returned by the action.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: ' When a response is generated, if there is more data to be listed, this parameter is present in the response and contains the value to use for the <b>nextToken</b> parameter in a subsequent pagination request. If there is no more data to be listed, this parameter is set to null.'
    ListFindingsRequest:
      type: object
      title: ListFindingsRequest
      properties:
        assessmentRunArns:
          $ref: '#/components/schemas/ListParentArnList'
          description: The ARNs of the assessment runs that generate the findings that you want to list.
        filter:
          $ref: '#/components/schemas/FindingFilter'
          description: '<p>You can use this parameter to specify a subset of data to be included in the action''s response.</p> <p>For a record to match a filter, all specified filter attributes must match. When multiple values are specified for a filter attribute, any of the values can match.</p>'
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the <b>ListFindings</b> action. Subsequent calls to the action fill <b>nextToken</b> in the request with the value of <b>NextToken</b> from the previous response to continue listing data.
        maxResults:
          $ref: '#/components/schemas/ListMaxResults'
          description: You can use this parameter to indicate the maximum number of items you want in the response. The default value is 10. The maximum value is 500.
    ListRulesPackagesResponse:
      type: object
      required:
        - rulesPackageArns
      example:
        nextToken: '1'
        rulesPackageArns:
          - 'arn:aws:inspector:us-west-2:758058086616:rulespackage/0-9hgA516p'
          - 'arn:aws:inspector:us-west-2:758058086616:rulespackage/0-H5hpSawc'
          - 'arn:aws:inspector:us-west-2:758058086616:rulespackage/0-JJOtZiqQ'
          - 'arn:aws:inspector:us-west-2:758058086616:rulespackage/0-vg5GGHSD'
      properties:
        rulesPackageArns:
          $ref: '#/components/schemas/ListReturnedArnList'
          description: The list of ARNs that specifies the rules packages returned by the action.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: ' When a response is generated, if there is more data to be listed, this parameter is present in the response and contains the value to use for the <b>nextToken</b> parameter in a subsequent pagination request. If there is no more data to be listed, this parameter is set to null.'
    ListRulesPackagesRequest:
      type: object
      title: ListRulesPackagesRequest
      properties:
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the <b>ListRulesPackages</b> action. Subsequent calls to the action fill <b>nextToken</b> in the request with the value of <b>NextToken</b> from the previous response to continue listing data.
        maxResults:
          $ref: '#/components/schemas/ListMaxResults'
          description: You can use this parameter to indicate the maximum number of items you want in the response. The default value is 10. The maximum value is 500.
    ListTagsForResourceResponse:
      type: object
      required:
        - tags
      example:
        tags:
          - key: Name
            value: Example
      properties:
        tags:
          $ref: '#/components/schemas/TagList'
          description: A collection of key and value pairs.
    ListTagsForResourceRequest:
      type: object
      required:
        - resourceArn
      title: ListTagsForResourceRequest
      properties:
        resourceArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN that specifies the assessment template whose tags you want to list.
    PreviewAgentsResponse:
      type: object
      required:
        - agentPreviews
      example:
        agentPreviews:
          - agentId: i-49113b93
        nextToken: '1'
      properties:
        agentPreviews:
          $ref: '#/components/schemas/AgentPreviewList'
          description: The resulting list of agents.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: ' When a response is generated, if there is more data to be listed, this parameter is present in the response and contains the value to use for the <b>nextToken</b> parameter in a subsequent pagination request. If there is no more data to be listed, this parameter is set to null.'
    PreviewAgentsRequest:
      type: object
      required:
        - previewAgentsArn
      title: PreviewAgentsRequest
      properties:
        previewAgentsArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the assessment target whose agents you want to preview.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the <b>PreviewAgents</b> action. Subsequent calls to the action fill <b>nextToken</b> in the request with the value of <b>NextToken</b> from the previous response to continue listing data.
        maxResults:
          $ref: '#/components/schemas/PreviewAgentsMaxResults'
          description: You can use this parameter to indicate the maximum number of items you want in the response. The default value is 10. The maximum value is 500.
    RegisterCrossAccountAccessRoleRequest:
      type: object
      required:
        - roleArn
      title: RegisterCrossAccountAccessRoleRequest
      properties:
        roleArn:
          $ref: '#/components/schemas/Arn'
          description: 'The ARN of the IAM role that grants Amazon Inspector access to AWS Services needed to perform security assessments. '
    RemoveAttributesFromFindingsResponse:
      type: object
      required:
        - failedItems
      example:
        failedItems: {}
      properties:
        failedItems:
          $ref: '#/components/schemas/FailedItems'
          description: Attributes details that cannot be described. An error code is provided for each failed item.
    RemoveAttributesFromFindingsRequest:
      type: object
      required:
        - findingArns
        - attributeKeys
      title: RemoveAttributesFromFindingsRequest
      properties:
        findingArns:
          $ref: '#/components/schemas/AddRemoveAttributesFindingArnList'
          description: The ARNs that specify the findings that you want to remove attributes from.
        attributeKeys:
          $ref: '#/components/schemas/UserAttributeKeyList'
          description: The array of attribute keys that you want to remove from specified findings.
    SetTagsForResourceRequest:
      type: object
      required:
        - resourceArn
      title: SetTagsForResourceRequest
      properties:
        resourceArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the assessment template that you want to set tags to.
        tags:
          $ref: '#/components/schemas/TagList'
          description: A collection of key and value pairs that you want to set to the assessment template.
    StartAssessmentRunResponse:
      type: object
      required:
        - assessmentRunArn
      example:
        assessmentRunArn: 'arn:aws:inspector:us-west-2:123456789012:target/0-nvgVhaxX/template/0-it5r2S4T/run/0-jOoroxyY'
      properties:
        assessmentRunArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the assessment run that has been started.
    StartAssessmentRunRequest:
      type: object
      required:
        - assessmentTemplateArn
      title: StartAssessmentRunRequest
      properties:
        assessmentTemplateArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the assessment template of the assessment run that you want to start.
        assessmentRunName:
          $ref: '#/components/schemas/AssessmentRunName'
          description: You can specify the name for the assessment run. The name must be unique for the assessment template whose ARN is used to start the assessment run.
    AgentsAlreadyRunningAssessmentException: {}
    StopAssessmentRunRequest:
      type: object
      required:
        - assessmentRunArn
      title: StopAssessmentRunRequest
      properties:
        assessmentRunArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the assessment run that you want to stop.
        stopAction:
          $ref: '#/components/schemas/StopAction'
          description: 'An input option that can be set to either START_EVALUATION or SKIP_EVALUATION. START_EVALUATION (the default value), stops the AWS agent from collecting data and begins the results evaluation and the findings generation process. SKIP_EVALUATION cancels the assessment run immediately, after which no findings are generated.'
    SubscribeToEventRequest:
      type: object
      required:
        - resourceArn
        - event
        - topicArn
      title: SubscribeToEventRequest
      properties:
        resourceArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the assessment template that is used during the event for which you want to receive SNS notifications.
        event:
          $ref: '#/components/schemas/InspectorEvent'
          description: The event for which you want to receive SNS notifications.
        topicArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the SNS topic to which the SNS notifications are sent.
    UnsubscribeFromEventRequest:
      type: object
      required:
        - resourceArn
        - event
        - topicArn
      title: UnsubscribeFromEventRequest
      properties:
        resourceArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the assessment template that is used during the event for which you want to stop receiving SNS notifications.
        event:
          $ref: '#/components/schemas/InspectorEvent'
          description: The event for which you want to stop receiving SNS notifications.
        topicArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the SNS topic to which SNS notifications are sent.
    UpdateAssessmentTargetRequest:
      type: object
      required:
        - assessmentTargetArn
        - assessmentTargetName
      title: UpdateAssessmentTargetRequest
      properties:
        assessmentTargetArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the assessment target that you want to update.
        assessmentTargetName:
          $ref: '#/components/schemas/AssessmentTargetName'
          description: The name of the assessment target that you want to update.
        resourceGroupArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the resource group that is used to specify the new resource group to associate with the assessment target.
    AddRemoveAttributesFindingArnList:
      type: array
      items:
        $ref: '#/components/schemas/Arn'
      minItems: 1
      maxItems: 10
    UserAttributeList:
      type: array
      items:
        $ref: '#/components/schemas/Attribute'
      minItems: 0
      maxItems: 10
    FailedItems:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/FailedItemDetails'
    Arn:
      type: string
      minLength: 1
      maxLength: 300
    AgentHealthList:
      type: array
      items:
        $ref: '#/components/schemas/AgentHealth'
      minItems: 0
      maxItems: 10
    AgentHealthCodeList:
      type: array
      items:
        $ref: '#/components/schemas/AgentHealthCode'
      minItems: 0
      maxItems: 10
    AgentFilter:
      type: object
      required:
        - agentHealths
        - agentHealthCodes
      properties:
        agentHealths:
          $ref: '#/components/schemas/AgentHealthList'
          description: The current health state of the agent. Values can be set to <b>HEALTHY</b> or <b>UNHEALTHY</b>.
        agentHealthCodes:
          $ref: '#/components/schemas/AgentHealthCodeList'
          description: 'The detailed health state of the agent. Values can be set to <b>IDLE</b>, <b>RUNNING</b>, <b>SHUTDOWN</b>, <b>UNHEALTHY</b>, <b>THROTTLED</b>, and <b>UNKNOWN</b>. '
      description: Contains information about an Amazon Inspector agent. This data type is used as a request parameter in the <a>ListAssessmentRunAgents</a> action.
    AgentHealth:
      type: string
      enum:
        - HEALTHY
        - UNHEALTHY
        - UNKNOWN
    AgentHealthCode:
      type: string
      enum:
        - IDLE
        - RUNNING
        - SHUTDOWN
        - UNHEALTHY
        - THROTTLED
        - UNKNOWN
    AgentId:
      type: string
      minLength: 1
      maxLength: 128
    AgentIdList:
      type: array
      items:
        $ref: '#/components/schemas/AgentId'
      minItems: 0
      maxItems: 99
    Hostname:
      type: string
      minLength: 0
      maxLength: 256
    AutoScalingGroup:
      type: string
      minLength: 1
      maxLength: 256
    AgentVersion:
      type: string
      minLength: 1
      maxLength: 128
    OperatingSystem:
      type: string
      minLength: 1
      maxLength: 256
    KernelVersion:
      type: string
      minLength: 1
      maxLength: 128
    Ipv4Address:
      type: string
      minLength: 7
      maxLength: 15
    AgentPreview:
      type: object
      required:
        - agentId
      properties:
        hostname:
          $ref: '#/components/schemas/Hostname'
          description: The hostname of the EC2 instance on which the Amazon Inspector Agent is installed.
        agentId:
          $ref: '#/components/schemas/AgentId'
          description: The ID of the EC2 instance where the agent is installed.
        autoScalingGroup:
          $ref: '#/components/schemas/AutoScalingGroup'
          description: The Auto Scaling group for the EC2 instance where the agent is installed.
        agentHealth:
          $ref: '#/components/schemas/AgentHealth'
          description: The health status of the Amazon Inspector Agent.
        agentVersion:
          $ref: '#/components/schemas/AgentVersion'
          description: The version of the Amazon Inspector Agent.
        operatingSystem:
          $ref: '#/components/schemas/OperatingSystem'
          description: The operating system running on the EC2 instance on which the Amazon Inspector Agent is installed.
        kernelVersion:
          $ref: '#/components/schemas/KernelVersion'
          description: The kernel version of the operating system running on the EC2 instance on which the Amazon Inspector Agent is installed.
        ipv4Address:
          $ref: '#/components/schemas/Ipv4Address'
          description: The IP address of the EC2 instance on which the Amazon Inspector Agent is installed.
      description: Used as a response element in the <a>PreviewAgents</a> action.
    AgentPreviewList:
      type: array
      items:
        $ref: '#/components/schemas/AgentPreview'
      minItems: 0
      maxItems: 100
    AmiId:
      type: string
      minLength: 0
      maxLength: 256
    ArnCount:
      type: integer
    AssessmentRulesPackageArnList:
      type: array
      items:
        $ref: '#/components/schemas/Arn'
      minItems: 1
      maxItems: 50
    AssessmentRunName:
      type: string
      minLength: 1
      maxLength: 140
    AssessmentRunState:
      type: string
      enum:
        - CREATED
        - START_DATA_COLLECTION_PENDING
        - START_DATA_COLLECTION_IN_PROGRESS
        - COLLECTING_DATA
        - STOP_DATA_COLLECTION_PENDING
        - DATA_COLLECTED
        - START_EVALUATING_RULES_PENDING
        - EVALUATING_RULES
        - FAILED
        - ERROR
        - COMPLETED
        - COMPLETED_WITH_ERRORS
        - CANCELED
    AssessmentRunDuration:
      type: integer
      minimum: 180
      maximum: 86400
    Timestamp:
      type: string
      format: date-time
    Bool:
      type: boolean
    AssessmentRunStateChangeList:
      type: array
      items:
        $ref: '#/components/schemas/AssessmentRunStateChange'
      minItems: 0
      maxItems: 50
    AssessmentRunNotificationList:
      type: array
      items:
        $ref: '#/components/schemas/AssessmentRunNotification'
      minItems: 0
      maxItems: 50
    AssessmentRunFindingCounts:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/FindingCount'
    AssessmentRun:
      type: object
      required:
        - arn
        - name
        - assessmentTemplateArn
        - state
        - durationInSeconds
        - rulesPackageArns
        - userAttributesForFindings
        - createdAt
        - stateChangedAt
        - dataCollected
        - stateChanges
        - notifications
        - findingCounts
      properties:
        arn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the assessment run.
        name:
          $ref: '#/components/schemas/AssessmentRunName'
          description: The auto-generated name for the assessment run.
        assessmentTemplateArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the assessment template that is associated with the assessment run.
        state:
          $ref: '#/components/schemas/AssessmentRunState'
          description: The state of the assessment run.
        durationInSeconds:
          $ref: '#/components/schemas/AssessmentRunDuration'
          description: The duration of the assessment run.
        rulesPackageArns:
          $ref: '#/components/schemas/AssessmentRulesPackageArnList'
          description: The rules packages selected for the assessment run.
        userAttributesForFindings:
          $ref: '#/components/schemas/UserAttributeList'
          description: The user-defined attributes that are assigned to every generated finding.
        createdAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time when <a>StartAssessmentRun</a> was called.
        startedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time when <a>StartAssessmentRun</a> was called.
        completedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The assessment run completion time that corresponds to the rules packages evaluation completion time or failure.
        stateChangedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The last time when the assessment run's state changed.
        dataCollected:
          $ref: '#/components/schemas/Bool'
          description: A Boolean value (true or false) that specifies whether the process of collecting data from the agents is completed.
        stateChanges:
          $ref: '#/components/schemas/AssessmentRunStateChangeList'
          description: A list of the assessment run state changes.
        notifications:
          $ref: '#/components/schemas/AssessmentRunNotificationList'
          description: A list of notifications for the event subscriptions. A notification about a particular generated finding is added to this list only once.
        findingCounts:
          $ref: '#/components/schemas/AssessmentRunFindingCounts'
          description: Provides a total count of generated findings per severity.
      description: <p>A snapshot of an Amazon Inspector assessment run that contains the findings of the assessment run .</p> <p>Used as the response element in the <a>DescribeAssessmentRuns</a> action.</p>
    Message:
      type: string
      minLength: 0
      maxLength: 1000
    TelemetryMetadataList:
      type: array
      items:
        $ref: '#/components/schemas/TelemetryMetadata'
      minItems: 0
      maxItems: 5000
    AssessmentRunAgent:
      type: object
      required:
        - agentId
        - assessmentRunArn
        - agentHealth
        - agentHealthCode
        - telemetryMetadata
      properties:
        agentId:
          $ref: '#/components/schemas/AgentId'
          description: The AWS account of the EC2 instance where the agent is installed.
        assessmentRunArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the assessment run that is associated with the agent.
        agentHealth:
          $ref: '#/components/schemas/AgentHealth'
          description: The current health state of the agent.
        agentHealthCode:
          $ref: '#/components/schemas/AgentHealthCode'
          description: The detailed health state of the agent.
        agentHealthDetails:
          $ref: '#/components/schemas/Message'
          description: The description for the agent health code.
        autoScalingGroup:
          $ref: '#/components/schemas/AutoScalingGroup'
          description: The Auto Scaling group of the EC2 instance that is specified by the agent ID.
        telemetryMetadata:
          $ref: '#/components/schemas/TelemetryMetadataList'
          description: The Amazon Inspector application data metrics that are collected by the agent.
      description: Contains information about an Amazon Inspector agent. This data type is used as a response element in the <a>ListAssessmentRunAgents</a> action.
    AssessmentRunAgentList:
      type: array
      items:
        $ref: '#/components/schemas/AssessmentRunAgent'
      minItems: 0
      maxItems: 500
    NamePattern:
      type: string
      minLength: 1
      maxLength: 140
    AssessmentRunStateList:
      type: array
      items:
        $ref: '#/components/schemas/AssessmentRunState'
      minItems: 0
      maxItems: 50
    DurationRange:
      type: object
      properties:
        minSeconds:
          $ref: '#/components/schemas/AssessmentRunDuration'
          description: The minimum value of the duration range. Must be greater than zero.
        maxSeconds:
          $ref: '#/components/schemas/AssessmentRunDuration'
          description: The maximum value of the duration range. Must be less than or equal to 604800 seconds (1 week).
      description: This data type is used in the <a>AssessmentTemplateFilter</a> data type.
    FilterRulesPackageArnList:
      type: array
      items:
        $ref: '#/components/schemas/Arn'
      minItems: 0
      maxItems: 50
    TimestampRange:
      type: object
      properties:
        beginDate:
          $ref: '#/components/schemas/Timestamp'
          description: The minimum value of the timestamp range.
        endDate:
          $ref: '#/components/schemas/Timestamp'
          description: The maximum value of the timestamp range.
      description: This data type is used in the <a>AssessmentRunFilter</a> data type.
    AssessmentRunFilter:
      type: object
      properties:
        namePattern:
          $ref: '#/components/schemas/NamePattern'
          description: 'For a record to match a filter, an explicit value or a string containing a wildcard that is specified for this data type property must match the value of the <b>assessmentRunName</b> property of the <a>AssessmentRun</a> data type.'
        states:
          $ref: '#/components/schemas/AssessmentRunStateList'
          description: 'For a record to match a filter, one of the values specified for this data type property must be the exact match of the value of the <b>assessmentRunState</b> property of the <a>AssessmentRun</a> data type.'
        durationRange:
          $ref: '#/components/schemas/DurationRange'
          description: 'For a record to match a filter, the value that is specified for this data type property must inclusively match any value between the specified minimum and maximum values of the <b>durationInSeconds</b> property of the <a>AssessmentRun</a> data type.'
        rulesPackageArns:
          $ref: '#/components/schemas/FilterRulesPackageArnList'
          description: 'For a record to match a filter, the value that is specified for this data type property must be contained in the list of values of the <b>rulesPackages</b> property of the <a>AssessmentRun</a> data type.'
        startTimeRange:
          $ref: '#/components/schemas/TimestampRange'
          description: 'For a record to match a filter, the value that is specified for this data type property must inclusively match any value between the specified minimum and maximum values of the <b>startTime</b> property of the <a>AssessmentRun</a> data type.'
        completionTimeRange:
          $ref: '#/components/schemas/TimestampRange'
          description: 'For a record to match a filter, the value that is specified for this data type property must inclusively match any value between the specified minimum and maximum values of the <b>completedAt</b> property of the <a>AssessmentRun</a> data type.'
        stateChangeTimeRange:
          $ref: '#/components/schemas/TimestampRange'
          description: 'For a record to match a filter, the value that is specified for this data type property must match the <b>stateChangedAt</b> property of the <a>AssessmentRun</a> data type.'
      description: Used as the request parameter in the <a>ListAssessmentRuns</a> action.
    FindingCount:
      type: integer
    AssessmentRunList:
      type: array
      items:
        $ref: '#/components/schemas/AssessmentRun'
      minItems: 0
      maxItems: 10
    InspectorEvent:
      type: string
      enum:
        - ASSESSMENT_RUN_STARTED
        - ASSESSMENT_RUN_COMPLETED
        - ASSESSMENT_RUN_STATE_CHANGED
        - FINDING_REPORTED
        - OTHER
    AssessmentRunNotificationSnsStatusCode:
      type: string
      enum:
        - SUCCESS
        - TOPIC_DOES_NOT_EXIST
        - ACCESS_DENIED
        - INTERNAL_ERROR
    AssessmentRunNotification:
      type: object
      required:
        - date
        - event
        - error
      properties:
        date:
          $ref: '#/components/schemas/Timestamp'
          description: The date of the notification.
        event:
          $ref: '#/components/schemas/InspectorEvent'
          description: The event for which a notification is sent.
        message:
          $ref: '#/components/schemas/Message'
          description: The message included in the notification.
        error:
          $ref: '#/components/schemas/Bool'
          description: The Boolean value that specifies whether the notification represents an error.
        snsTopicArn:
          $ref: '#/components/schemas/Arn'
          description: The SNS topic to which the SNS notification is sent.
        snsPublishStatusCode:
          $ref: '#/components/schemas/AssessmentRunNotificationSnsStatusCode'
          description: The status code of the SNS notification.
      description: Used as one of the elements of the <a>AssessmentRun</a> data type.
    AssessmentRunStateChange:
      type: object
      required:
        - stateChangedAt
        - state
      properties:
        stateChangedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The last time the assessment run state changed.
        state:
          $ref: '#/components/schemas/AssessmentRunState'
          description: The assessment run state.
      description: Used as one of the elements of the <a>AssessmentRun</a> data type.
    AssessmentTargetName:
      type: string
      minLength: 1
      maxLength: 140
    AssessmentTarget:
      type: object
      required:
        - arn
        - name
        - createdAt
        - updatedAt
      properties:
        arn:
          $ref: '#/components/schemas/Arn'
          description: The ARN that specifies the Amazon Inspector assessment target.
        name:
          $ref: '#/components/schemas/AssessmentTargetName'
          description: The name of the Amazon Inspector assessment target.
        resourceGroupArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN that specifies the resource group that is associated with the assessment target.
        createdAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the assessment target is created.
        updatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which <a>UpdateAssessmentTarget</a> is called.
      description: Contains information about an Amazon Inspector application. This data type is used as the response element in the <a>DescribeAssessmentTargets</a> action.
    AssessmentTargetFilter:
      type: object
      properties:
        assessmentTargetNamePattern:
          $ref: '#/components/schemas/NamePattern'
          description: 'For a record to match a filter, an explicit value or a string that contains a wildcard that is specified for this data type property must match the value of the <b>assessmentTargetName</b> property of the <a>AssessmentTarget</a> data type.'
      description: Used as the request parameter in the <a>ListAssessmentTargets</a> action.
    AssessmentTargetList:
      type: array
      items:
        $ref: '#/components/schemas/AssessmentTarget'
      minItems: 0
      maxItems: 10
    AssessmentTemplateName:
      type: string
      minLength: 1
      maxLength: 140
    AssessmentTemplateRulesPackageArnList:
      type: array
      items:
        $ref: '#/components/schemas/Arn'
      minItems: 0
      maxItems: 50
    AssessmentTemplate:
      type: object
      required:
        - arn
        - name
        - assessmentTargetArn
        - durationInSeconds
        - rulesPackageArns
        - userAttributesForFindings
        - assessmentRunCount
        - createdAt
      properties:
        arn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the assessment template.
        name:
          $ref: '#/components/schemas/AssessmentTemplateName'
          description: The name of the assessment template.
        assessmentTargetArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the assessment target that corresponds to this assessment template.
        durationInSeconds:
          $ref: '#/components/schemas/AssessmentRunDuration'
          description: The duration in seconds specified for this assessment template. The default value is 3600 seconds (one hour). The maximum value is 86400 seconds (one day).
        rulesPackageArns:
          $ref: '#/components/schemas/AssessmentTemplateRulesPackageArnList'
          description: The rules packages that are specified for this assessment template.
        userAttributesForFindings:
          $ref: '#/components/schemas/UserAttributeList'
          description: The user-defined attributes that are assigned to every generated finding from the assessment run that uses this assessment template.
        lastAssessmentRunArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the most recent assessment run associated with this assessment template. This value exists only when the value of assessmentRunCount is greaterpa than zero.
        assessmentRunCount:
          $ref: '#/components/schemas/ArnCount'
          description: The number of existing assessment runs associated with this assessment template. This value can be zero or a positive integer.
        createdAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the assessment template is created.
      description: Contains information about an Amazon Inspector assessment template. This data type is used as the response element in the <a>DescribeAssessmentTemplates</a> action.
    AssessmentTemplateFilter:
      type: object
      properties:
        namePattern:
          $ref: '#/components/schemas/NamePattern'
          description: 'For a record to match a filter, an explicit value or a string that contains a wildcard that is specified for this data type property must match the value of the <b>assessmentTemplateName</b> property of the <a>AssessmentTemplate</a> data type.'
        durationRange:
          $ref: '#/components/schemas/DurationRange'
          description: 'For a record to match a filter, the value specified for this data type property must inclusively match any value between the specified minimum and maximum values of the <b>durationInSeconds</b> property of the <a>AssessmentTemplate</a> data type.'
        rulesPackageArns:
          $ref: '#/components/schemas/FilterRulesPackageArnList'
          description: 'For a record to match a filter, the values that are specified for this data type property must be contained in the list of values of the <b>rulesPackageArns</b> property of the <a>AssessmentTemplate</a> data type.'
      description: Used as the request parameter in the <a>ListAssessmentTemplates</a> action.
    AssessmentTemplateList:
      type: array
      items:
        $ref: '#/components/schemas/AssessmentTemplate'
      minItems: 0
      maxItems: 10
    NumericVersion:
      type: integer
      minimum: 0
    Ipv4AddressList:
      type: array
      items:
        $ref: '#/components/schemas/Ipv4Address'
      minItems: 0
      maxItems: 50
    Tags:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    NetworkInterfaces:
      type: array
      items:
        $ref: '#/components/schemas/NetworkInterface'
    AssetAttributes:
      type: object
      required:
        - schemaVersion
      properties:
        schemaVersion:
          $ref: '#/components/schemas/NumericVersion'
          description: The schema version of this data type.
        agentId:
          $ref: '#/components/schemas/AgentId'
          description: The ID of the agent that is installed on the EC2 instance where the finding is generated.
        autoScalingGroup:
          $ref: '#/components/schemas/AutoScalingGroup'
          description: The Auto Scaling group of the EC2 instance where the finding is generated.
        amiId:
          $ref: '#/components/schemas/AmiId'
          description: The ID of the Amazon Machine Image (AMI) that is installed on the EC2 instance where the finding is generated.
        hostname:
          $ref: '#/components/schemas/Hostname'
          description: The hostname of the EC2 instance where the finding is generated.
        ipv4Addresses:
          $ref: '#/components/schemas/Ipv4AddressList'
          description: The list of IP v4 addresses of the EC2 instance where the finding is generated.
        tags:
          $ref: '#/components/schemas/Tags'
          description: The tags related to the EC2 instance where the finding is generated.
        networkInterfaces:
          $ref: '#/components/schemas/NetworkInterfaces'
          description: An array of the network interfaces interacting with the EC2 instance where the finding is generated.
      description: A collection of attributes of the host from which the finding is generated.
    AssetType:
      type: string
      enum:
        - ec2-instance
    AttributeKey:
      type: string
      minLength: 1
      maxLength: 128
    AttributeValue:
      type: string
      minLength: 1
      maxLength: 256
    Attribute:
      type: object
      required:
        - key
      properties:
        key:
          $ref: '#/components/schemas/AttributeKey'
          description: The attribute key.
        value:
          $ref: '#/components/schemas/AttributeValue'
          description: The value assigned to the attribute key.
      description: This data type is used as a request parameter in the <a>AddAttributesToFindings</a> and <a>CreateAssessmentTemplate</a> actions.
    AttributeList:
      type: array
      items:
        $ref: '#/components/schemas/Attribute'
      minItems: 0
      maxItems: 50
    AutoScalingGroupList:
      type: array
      items:
        $ref: '#/components/schemas/AutoScalingGroup'
      minItems: 0
      maxItems: 20
    BatchDescribeArnList:
      type: array
      items:
        $ref: '#/components/schemas/Arn'
      minItems: 1
      maxItems: 10
    BatchDescribeExclusionsArnList:
      type: array
      items:
        $ref: '#/components/schemas/Arn'
      minItems: 1
      maxItems: 100
    UUID:
      type: string
      pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
    ResourceGroupTags:
      type: array
      items:
        $ref: '#/components/schemas/ResourceGroupTag'
      minItems: 1
      maxItems: 10
    Locale:
      type: string
      enum:
        - EN_US
    ExclusionMap:
      type: object
      minProperties: 1
      maxProperties: 100
      additionalProperties:
        $ref: '#/components/schemas/Exclusion'
    FindingList:
      type: array
      items:
        $ref: '#/components/schemas/Finding'
      minItems: 0
      maxItems: 100
    ResourceGroupList:
      type: array
      items:
        $ref: '#/components/schemas/ResourceGroup'
      minItems: 0
      maxItems: 10
    RulesPackageList:
      type: array
      items:
        $ref: '#/components/schemas/RulesPackage'
      minItems: 0
      maxItems: 10
    EventSubscription:
      type: object
      required:
        - event
        - subscribedAt
      properties:
        event:
          $ref: '#/components/schemas/InspectorEvent'
          description: The event for which Amazon Simple Notification Service (SNS) notifications are sent.
        subscribedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which <a>SubscribeToEvent</a> is called.
      description: This data type is used in the <a>Subscription</a> data type.
    EventSubscriptionList:
      type: array
      items:
        $ref: '#/components/schemas/EventSubscription'
      minItems: 1
      maxItems: 50
    Text:
      type: string
      minLength: 0
      maxLength: 20000
    ScopeList:
      type: array
      items:
        $ref: '#/components/schemas/Scope'
      minItems: 1
    Exclusion:
      type: object
      required:
        - arn
        - title
        - description
        - recommendation
        - scopes
      properties:
        arn:
          $ref: '#/components/schemas/Arn'
          description: The ARN that specifies the exclusion.
        title:
          $ref: '#/components/schemas/Text'
          description: The name of the exclusion.
        description:
          $ref: '#/components/schemas/Text'
          description: The description of the exclusion.
        recommendation:
          $ref: '#/components/schemas/Text'
          description: The recommendation for the exclusion.
        scopes:
          $ref: '#/components/schemas/ScopeList'
          description: The AWS resources for which the exclusion pertains.
        attributes:
          $ref: '#/components/schemas/AttributeList'
          description: The system-defined attributes for the exclusion.
      description: Contains information about what was excluded from an assessment run.
    ExclusionPreview:
      type: object
      required:
        - title
        - description
        - recommendation
        - scopes
      properties:
        title:
          $ref: '#/components/schemas/Text'
          description: The name of the exclusion preview.
        description:
          $ref: '#/components/schemas/Text'
          description: The description of the exclusion preview.
        recommendation:
          $ref: '#/components/schemas/Text'
          description: The recommendation for the exclusion preview.
        scopes:
          $ref: '#/components/schemas/ScopeList'
          description: The AWS resources for which the exclusion preview pertains.
        attributes:
          $ref: '#/components/schemas/AttributeList'
          description: The system-defined attributes for the exclusion preview.
      description: Contains information about what is excluded from an assessment run given the current state of the assessment template.
    ExclusionPreviewList:
      type: array
      items:
        $ref: '#/components/schemas/ExclusionPreview'
      minItems: 0
      maxItems: 100
    FailedItemErrorCode:
      type: string
      enum:
        - INVALID_ARN
        - DUPLICATE_ARN
        - ITEM_DOES_NOT_EXIST
        - ACCESS_DENIED
        - LIMIT_EXCEEDED
        - INTERNAL_ERROR
    FailedItemDetails:
      type: object
      required:
        - failureCode
        - retryable
      properties:
        failureCode:
          $ref: '#/components/schemas/FailedItemErrorCode'
          description: The status code of a failed item.
        retryable:
          $ref: '#/components/schemas/Bool'
          description: Indicates whether you can immediately retry a request for this item for a specified resource.
      description: Includes details about the failed items.
    ServiceName:
      type: string
      minLength: 0
      maxLength: 128
    InspectorServiceAttributes:
      type: object
      required:
        - schemaVersion
      properties:
        schemaVersion:
          $ref: '#/components/schemas/NumericVersion'
          description: The schema version of this data type.
        assessmentRunArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the assessment run during which the finding is generated.
        rulesPackageArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the rules package that is used to generate the finding.
      description: This data type is used in the <a>Finding</a> data type.
    FindingId:
      type: string
      minLength: 0
      maxLength: 128
    Severity:
      type: string
      enum:
        - Low
        - Medium
        - High
        - Informational
        - Undefined
    NumericSeverity:
      type: number
      format: double
      minimum: 0
      maximum: 10
    IocConfidence:
      type: integer
      minimum: 0
      maximum: 10
    Finding:
      type: object
      required:
        - arn
        - attributes
        - userAttributes
        - createdAt
        - updatedAt
      properties:
        arn:
          $ref: '#/components/schemas/Arn'
          description: The ARN that specifies the finding.
        schemaVersion:
          $ref: '#/components/schemas/NumericVersion'
          description: The schema version of this data type.
        service:
          $ref: '#/components/schemas/ServiceName'
          description: The data element is set to "Inspector".
        serviceAttributes:
          $ref: '#/components/schemas/InspectorServiceAttributes'
          description: This data type is used in the <a>Finding</a> data type.
        assetType:
          $ref: '#/components/schemas/AssetType'
          description: The type of the host from which the finding is generated.
        assetAttributes:
          $ref: '#/components/schemas/AssetAttributes'
          description: A collection of attributes of the host from which the finding is generated.
        id:
          $ref: '#/components/schemas/FindingId'
          description: The ID of the finding.
        title:
          $ref: '#/components/schemas/Text'
          description: The name of the finding.
        description:
          $ref: '#/components/schemas/Text'
          description: The description of the finding.
        recommendation:
          $ref: '#/components/schemas/Text'
          description: The recommendation for the finding.
        severity:
          $ref: '#/components/schemas/Severity'
          description: 'The finding severity. Values can be set to High, Medium, Low, and Informational.'
        numericSeverity:
          $ref: '#/components/schemas/NumericSeverity'
          description: The numeric value of the finding severity.
        confidence:
          $ref: '#/components/schemas/IocConfidence'
          description: This data element is currently not used.
        indicatorOfCompromise:
          $ref: '#/components/schemas/Bool'
          description: This data element is currently not used.
        attributes:
          $ref: '#/components/schemas/AttributeList'
          description: The system-defined attributes for the finding.
        userAttributes:
          $ref: '#/components/schemas/UserAttributeList'
          description: The user-defined attributes that are assigned to the finding.
        createdAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the finding was generated.
        updatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time when <a>AddAttributesToFindings</a> is called.
      description: Contains information about an Amazon Inspector finding. This data type is used as the response element in the <a>DescribeFindings</a> action.
    RuleNameList:
      type: array
      items:
        $ref: '#/components/schemas/RuleName'
      minItems: 0
      maxItems: 50
    SeverityList:
      type: array
      items:
        $ref: '#/components/schemas/Severity'
      minItems: 0
      maxItems: 50
    FindingFilter:
      type: object
      properties:
        agentIds:
          $ref: '#/components/schemas/AgentIdList'
          description: 'For a record to match a filter, one of the values that is specified for this data type property must be the exact match of the value of the <b>agentId</b> property of the <a>Finding</a> data type.'
        autoScalingGroups:
          $ref: '#/components/schemas/AutoScalingGroupList'
          description: 'For a record to match a filter, one of the values that is specified for this data type property must be the exact match of the value of the <b>autoScalingGroup</b> property of the <a>Finding</a> data type.'
        ruleNames:
          $ref: '#/components/schemas/RuleNameList'
          description: 'For a record to match a filter, one of the values that is specified for this data type property must be the exact match of the value of the <b>ruleName</b> property of the <a>Finding</a> data type.'
        severities:
          $ref: '#/components/schemas/SeverityList'
          description: 'For a record to match a filter, one of the values that is specified for this data type property must be the exact match of the value of the <b>severity</b> property of the <a>Finding</a> data type.'
        rulesPackageArns:
          $ref: '#/components/schemas/FilterRulesPackageArnList'
          description: 'For a record to match a filter, one of the values that is specified for this data type property must be the exact match of the value of the <b>rulesPackageArn</b> property of the <a>Finding</a> data type.'
        attributes:
          $ref: '#/components/schemas/AttributeList'
          description: 'For a record to match a filter, the list of values that are specified for this data type property must be contained in the list of values of the <b>attributes</b> property of the <a>Finding</a> data type.'
        userAttributes:
          $ref: '#/components/schemas/AttributeList'
          description: 'For a record to match a filter, the value that is specified for this data type property must be contained in the list of values of the <b>userAttributes</b> property of the <a>Finding</a> data type.'
        creationTimeRange:
          $ref: '#/components/schemas/TimestampRange'
          description: The time range during which the finding is generated.
      description: This data type is used as a request parameter in the <a>ListFindings</a> action.
    ReportFileFormat:
      type: string
      enum:
        - HTML
        - PDF
    ReportType:
      type: string
      enum:
        - FINDING
        - FULL
    ReportStatus:
      type: string
      enum:
        - WORK_IN_PROGRESS
        - FAILED
        - COMPLETED
    Url:
      type: string
      maxLength: 2048
    PaginationToken:
      type: string
      minLength: 1
      maxLength: 300
    ListMaxResults:
      type: integer
    PreviewStatus:
      type: string
      enum:
        - WORK_IN_PROGRESS
        - COMPLETED
    Ipv6Addresses:
      type: array
      items:
        $ref: '#/components/schemas/Text'
    ListParentArnList:
      type: array
      items:
        $ref: '#/components/schemas/Arn'
      minItems: 0
      maxItems: 50
    ListReturnedArnList:
      type: array
      items:
        $ref: '#/components/schemas/Arn'
      minItems: 0
      maxItems: 100
    ListEventSubscriptionsMaxResults:
      type: integer
    SubscriptionList:
      type: array
      items:
        $ref: '#/components/schemas/Subscription'
      minItems: 0
      maxItems: 50
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
      minItems: 0
      maxItems: 10
    Long:
      type: integer
    MessageType:
      type: string
      minLength: 1
      maxLength: 300
    PrivateIpAddresses:
      type: array
      items:
        $ref: '#/components/schemas/PrivateIp'
    SecurityGroups:
      type: array
      items:
        $ref: '#/components/schemas/SecurityGroup'
    NetworkInterface:
      type: object
      properties:
        networkInterfaceId:
          $ref: '#/components/schemas/Text'
          description: The ID of the network interface.
        subnetId:
          $ref: '#/components/schemas/Text'
          description: The ID of a subnet associated with the network interface.
        vpcId:
          $ref: '#/components/schemas/Text'
          description: The ID of a VPC associated with the network interface.
        privateDnsName:
          $ref: '#/components/schemas/Text'
          description: The name of a private DNS associated with the network interface.
        privateIpAddress:
          $ref: '#/components/schemas/Text'
          description: The private IP address associated with the network interface.
        privateIpAddresses:
          $ref: '#/components/schemas/PrivateIpAddresses'
          description: A list of the private IP addresses associated with the network interface. Includes the privateDnsName and privateIpAddress.
        publicDnsName:
          $ref: '#/components/schemas/Text'
          description: The name of a public DNS associated with the network interface.
        publicIp:
          $ref: '#/components/schemas/Text'
          description: The public IP address from which the network interface is reachable.
        ipv6Addresses:
          $ref: '#/components/schemas/Ipv6Addresses'
          description: The IP addresses associated with the network interface.
        securityGroups:
          $ref: '#/components/schemas/SecurityGroups'
          description: A list of the security groups associated with the network interface. Includes the groupId and groupName.
      description: Contains information about the network interfaces interacting with an EC2 instance. This data type is used as one of the elements of the <a>AssetAttributes</a> data type.
    PreviewAgentsMaxResults:
      type: integer
    PrivateIp:
      type: object
      properties:
        privateDnsName:
          $ref: '#/components/schemas/Text'
          description: The DNS name of the private IP address.
        privateIpAddress:
          $ref: '#/components/schemas/Text'
          description: The full IP address of the network inteface.
      description: Contains information about a private IP address associated with a network interface. This data type is used as a response element in the <a>DescribeFindings</a> action.
    ProviderName:
      type: string
      minLength: 0
      maxLength: 1000
    UserAttributeKeyList:
      type: array
      items:
        $ref: '#/components/schemas/AttributeKey'
      minItems: 0
      maxItems: 10
    ResourceGroup:
      type: object
      required:
        - arn
        - tags
        - createdAt
      properties:
        arn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the resource group.
        tags:
          $ref: '#/components/schemas/ResourceGroupTags'
          description: The tags (key and value pairs) of the resource group. This data type property is used in the <a>CreateResourceGroup</a> action.
        createdAt:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which resource group is created.
      description: 'Contains information about a resource group. The resource group defines a set of tags that, when queried, identify the AWS resources that make up the assessment target. This data type is used as the response element in the <a>DescribeResourceGroups</a> action.'
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    TagValue:
      type: string
      minLength: 1
      maxLength: 256
    ResourceGroupTag:
      type: object
      required:
        - key
      properties:
        key:
          $ref: '#/components/schemas/TagKey'
          description: A tag key.
        value:
          $ref: '#/components/schemas/TagValue'
          description: The value assigned to a tag key.
      description: This data type is used as one of the elements of the <a>ResourceGroup</a> data type.
    RuleName:
      type: string
      maxLength: 1000
    RulesPackageName:
      type: string
      minLength: 0
      maxLength: 1000
    Version:
      type: string
      minLength: 0
      maxLength: 1000
    RulesPackage:
      type: object
      required:
        - arn
        - name
        - version
        - provider
      properties:
        arn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the rules package.
        name:
          $ref: '#/components/schemas/RulesPackageName'
          description: The name of the rules package.
        version:
          $ref: '#/components/schemas/Version'
          description: The version ID of the rules package.
        provider:
          $ref: '#/components/schemas/ProviderName'
          description: The provider of the rules package.
        description:
          $ref: '#/components/schemas/Text'
          description: The description of the rules package.
      description: Contains information about an Amazon Inspector rules package. This data type is used as the response element in the <a>DescribeRulesPackages</a> action.
    ScopeType:
      type: string
      enum:
        - INSTANCE_ID
        - RULES_PACKAGE_ARN
    ScopeValue:
      type: string
    Scope:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/ScopeType'
          description: The type of the scope.
        value:
          $ref: '#/components/schemas/ScopeValue'
          description: The resource identifier for the specified scope type.
      description: This data type contains key-value pairs that identify various Amazon resources.
    SecurityGroup:
      type: object
      properties:
        groupName:
          $ref: '#/components/schemas/Text'
          description: The name of the security group.
        groupId:
          $ref: '#/components/schemas/Text'
          description: The ID of the security group.
      description: Contains information about a security group associated with a network interface. This data type is used as one of the elements of the <a>NetworkInterface</a> data type.
    StopAction:
      type: string
      enum:
        - START_EVALUATION
        - SKIP_EVALUATION
    Subscription:
      type: object
      required:
        - resourceArn
        - topicArn
        - eventSubscriptions
      properties:
        resourceArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the assessment template that is used during the event for which the SNS notification is sent.
        topicArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the Amazon Simple Notification Service (SNS) topic to which the SNS notifications are sent.
        eventSubscriptions:
          $ref: '#/components/schemas/EventSubscriptionList'
          description: The list of existing event subscriptions.
      description: This data type is used as a response element in the <a>ListEventSubscriptions</a> action.
    Tag:
      type: object
      required:
        - key
      properties:
        key:
          $ref: '#/components/schemas/TagKey'
          description: A tag key.
        value:
          $ref: '#/components/schemas/TagValue'
          description: A value assigned to a tag key.
      description: A key and value pair. This data type is used as a request parameter in the <a>SetTagsForResource</a> action and a response element in the <a>ListTagsForResource</a> action.
    TelemetryMetadata:
      type: object
      required:
        - messageType
        - count
      properties:
        messageType:
          $ref: '#/components/schemas/MessageType'
          description: A specific type of behavioral data that is collected by the agent.
        count:
          $ref: '#/components/schemas/Long'
          description: The count of messages that the agent sends to the Amazon Inspector service.
        dataSize:
          $ref: '#/components/schemas/Long'
          description: The data size of messages that the agent sends to the Amazon Inspector service.
      description: The metadata about the Amazon Inspector application data metrics collected by the agent. This data type is used as the response element in the <a>GetTelemetryMetadata</a> action.
security:
  - hmac: []
