openapi: 3.0.0
info:
  version: '2017-07-25'
  x-release: v4
  title: AWS Glue DataBrew
  description: 'Glue DataBrew is a visual, cloud-scale data-preparation service. DataBrew simplifies data preparation tasks, targeting data issues that are hard to spot and time-consuming to fix. DataBrew empowers users of all technical levels to visualize the data and perform one-click data transformations, with no coding required.'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: databrew
  x-aws-signingName: databrew
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/databrew-2017-07-25.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/databrew/'
servers:
  - url: 'http://databrew.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS Glue DataBrew multi-region endpoint
  - url: 'https://databrew.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS Glue DataBrew multi-region endpoint
  - url: 'http://databrew.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Glue DataBrew endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://databrew.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Glue DataBrew endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  '/recipes/{name}/batchDeleteRecipeVersion':
    post:
      operationId: BatchDeleteRecipeVersion
      description: '<p>Deletes one or more versions of a recipe at a time.</p> <p>The entire request will be rejected if:</p> <ul> <li> <p>The recipe does not exist.</p> </li> <li> <p>There is an invalid version identifier in the list of versions.</p> </li> <li> <p>The version list is empty.</p> </li> <li> <p>The version list size exceeds 50.</p> </li> <li> <p>The version list contains duplicate entries.</p> </li> </ul> <p>The request will complete successfully, but with partial failures, if:</p> <ul> <li> <p>A version does not exist.</p> </li> <li> <p>A version is being used by a job.</p> </li> <li> <p>You specify <code>LATEST_WORKING</code>, but it''s being used by a project.</p> </li> <li> <p>The version fails to be deleted.</p> </li> </ul> <p>The <code>LATEST_WORKING</code> version will only be deleted if the recipe has no other versions. If you try to delete <code>LATEST_WORKING</code> while other versions exist (or if they can''t be deleted), then <code>LATEST_WORKING</code> will be listed as partial failure in the response.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDeleteRecipeVersionResponse'
        '480':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the recipe whose versions are to be deleted.
          schema:
            type: string
            minLength: 1
            maxLength: 255
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - RecipeVersions
              properties:
                RecipeVersions:
                  description: 'An array of version identifiers, for the recipe versions to be deleted. You can specify numeric versions (<code>X.Y</code>) or <code>LATEST_WORKING</code>. <code>LATEST_PUBLISHED</code> is not supported.'
                  type: array
                  items:
                    $ref: '#/components/schemas/RecipeVersion'
                  minItems: 1
                  maxItems: 50
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /datasets:
    post:
      operationId: CreateDataset
      description: Creates a new DataBrew dataset.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDatasetResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
                - Input
              properties:
                Name:
                  description: 'The name of the dataset to be created. Valid characters are alphanumeric (A-Z, a-z, 0-9), hyphen (-), period (.), and space.'
                  type: string
                  minLength: 1
                  maxLength: 255
                Format:
                  description: The file format of a dataset that is created from an Amazon S3 file or folder.
                  type: string
                  enum:
                    - CSV
                    - JSON
                    - PARQUET
                    - EXCEL
                FormatOptions:
                  description: 'Represents a set of options that define the structure of either comma-separated value (CSV), Excel, or JSON input.'
                  type: object
                  properties:
                    Json:
                      $ref: '#/components/schemas/JsonOptions'
                      description: Options that define how JSON input is to be interpreted by DataBrew.
                    Excel:
                      $ref: '#/components/schemas/ExcelOptions'
                      description: Options that define how Excel input is to be interpreted by DataBrew.
                    Csv:
                      $ref: '#/components/schemas/CsvOptions'
                      description: Options that define how CSV input is to be interpreted by DataBrew.
                Input:
                  description: 'Represents information on how DataBrew can find data, in either the Glue Data Catalog or Amazon S3.'
                  type: object
                  properties:
                    S3InputDefinition:
                      $ref: '#/components/schemas/S3Location'
                      description: The Amazon S3 location where the data is stored.
                    DataCatalogInputDefinition:
                      $ref: '#/components/schemas/DataCatalogInputDefinition'
                      description: The Glue Data Catalog parameters for the data.
                    DatabaseInputDefinition:
                      $ref: '#/components/schemas/DatabaseInputDefinition'
                      description: Connection information for dataset input files stored in a database.
                PathOptions:
                  description: Represents a set of options that define how DataBrew selects files for a given Amazon S3 path in a dataset.
                  type: object
                  properties:
                    LastModifiedDateCondition:
                      $ref: '#/components/schemas/FilterExpression'
                      description: 'If provided, this structure defines a date range for matching Amazon S3 objects based on their LastModifiedDate attribute in Amazon S3.'
                    FilesLimit:
                      $ref: '#/components/schemas/FilesLimit'
                      description: 'If provided, this structure imposes a limit on a number of files that should be selected.'
                    Parameters:
                      $ref: '#/components/schemas/PathParametersMap'
                      description: A structure that maps names of parameters used in the Amazon S3 path of a dataset to their definitions.
                Tags:
                  description: Metadata tags to apply to this dataset.
                  type: object
                  minProperties: 1
                  maxProperties: 200
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListDatasets
      description: Lists all of the DataBrew datasets.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatasetsResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: 'The maximum number of results to return in this request. '
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: The token returned by a previous call to retrieve the next set of results.
          schema:
            type: string
            minLength: 1
            maxLength: 2000
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /profileJobs:
    post:
      operationId: CreateProfileJob
      description: Creates a new job to analyze a dataset and create its data profile.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProfileJobResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - DatasetName
                - Name
                - OutputLocation
                - RoleArn
              properties:
                DatasetName:
                  description: The name of the dataset that this job is to act upon.
                  type: string
                  minLength: 1
                  maxLength: 255
                EncryptionKeyArn:
                  description: The Amazon Resource Name (ARN) of an encryption key that is used to protect the job.
                  type: string
                  minLength: 20
                  maxLength: 2048
                EncryptionMode:
                  description: '<p>The encryption mode for the job, which can be one of the following:</p> <ul> <li> <p> <code>SSE-KMS</code> - <code>SSE-KMS</code> - Server-side encryption with KMS-managed keys.</p> </li> <li> <p> <code>SSE-S3</code> - Server-side encryption with keys managed by Amazon S3.</p> </li> </ul>'
                  type: string
                  enum:
                    - SSE-KMS
                    - SSE-S3
                Name:
                  description: 'The name of the job to be created. Valid characters are alphanumeric (A-Z, a-z, 0-9), hyphen (-), period (.), and space.'
                  type: string
                  minLength: 1
                  maxLength: 240
                LogSubscription:
                  description: 'Enables or disables Amazon CloudWatch logging for the job. If logging is enabled, CloudWatch writes one log stream for each job run.'
                  type: string
                  enum:
                    - ENABLE
                    - DISABLE
                MaxCapacity:
                  description: The maximum number of nodes that DataBrew can use when the job processes data.
                  type: integer
                MaxRetries:
                  description: The maximum number of times to retry the job after a job run fails.
                  type: integer
                  minimum: 0
                OutputLocation:
                  description: 'Represents an Amazon S3 location (bucket name and object key) where DataBrew can read input data, or write output from a job.'
                  type: object
                  properties:
                    Bucket:
                      $ref: '#/components/schemas/Bucket'
                      description: The Amazon S3 bucket name.
                    Key:
                      $ref: '#/components/schemas/Key'
                      description: The unique name of the object in the bucket.
                Configuration:
                  description: 'Configuration for profile jobs. Configuration can be used to select columns, do evaluations, and override default parameters of evaluations. When configuration is undefined, the profile job will apply default settings to all supported columns. '
                  type: object
                  properties:
                    DatasetStatisticsConfiguration:
                      $ref: '#/components/schemas/StatisticsConfiguration'
                      description: 'Configuration for inter-column evaluations. Configuration can be used to select evaluations and override parameters of evaluations. When configuration is undefined, the profile job will run all supported inter-column evaluations. '
                    ProfileColumns:
                      $ref: '#/components/schemas/ColumnSelectorList'
                      description: 'List of column selectors. ProfileColumns can be used to select columns from the dataset. When ProfileColumns is undefined, the profile job will profile all supported columns. '
                    ColumnStatisticsConfigurations:
                      $ref: '#/components/schemas/ColumnStatisticsConfigurationList'
                      description: 'List of configurations for column evaluations. ColumnStatisticsConfigurations are used to select evaluations and override parameters of evaluations for particular columns. When ColumnStatisticsConfigurations is undefined, the profile job will profile all supported columns and run all supported evaluations. '
                RoleArn:
                  description: The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role to be assumed when DataBrew runs the job.
                  type: string
                  minLength: 20
                  maxLength: 2048
                Tags:
                  description: Metadata tags to apply to this job.
                  type: object
                  minProperties: 1
                  maxProperties: 200
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
                Timeout:
                  description: The job's timeout in minutes. A job that attempts to run longer than this timeout period ends with a status of <code>TIMEOUT</code>.
                  type: integer
                  minimum: 0
                JobSample:
                  description: 'A sample configuration for profile jobs only, which determines the number of rows on which the profile job is run. If a <code>JobSample</code> value isn''t provided, the default is used. The default value is CUSTOM_ROWS for the mode parameter and 20,000 for the size parameter.'
                  type: object
                  properties:
                    Mode:
                      $ref: '#/components/schemas/SampleMode'
                      description: '<p>A value that determines whether the profile job is run on the entire dataset or a specified number of rows. This value must be one of the following:</p> <ul> <li> <p>FULL_DATASET - The profile job is run on the entire dataset.</p> </li> <li> <p>CUSTOM_ROWS - The profile job is run on the number of rows specified in the <code>Size</code> parameter.</p> </li> </ul>'
                    Size:
                      $ref: '#/components/schemas/JobSize'
                      description: <p>The <code>Size</code> parameter is only required when the mode is CUSTOM_ROWS. The profile job is run on the specified number of rows. The maximum value for size is Long.MAX_VALUE.</p> <p>Long.MAX_VALUE = 9223372036854775807</p>
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /projects:
    post:
      operationId: CreateProject
      description: Creates a new DataBrew project.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProjectResponse'
        '480':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - DatasetName
                - Name
                - RecipeName
                - RoleArn
              properties:
                DatasetName:
                  description: The name of an existing dataset to associate this project with.
                  type: string
                  minLength: 1
                  maxLength: 255
                Name:
                  description: 'A unique name for the new project. Valid characters are alphanumeric (A-Z, a-z, 0-9), hyphen (-), period (.), and space.'
                  type: string
                  minLength: 1
                  maxLength: 255
                RecipeName:
                  description: The name of an existing recipe to associate with the project.
                  type: string
                  minLength: 1
                  maxLength: 255
                Sample:
                  description: Represents the sample size and sampling type for DataBrew to use for interactive data analysis.
                  type: object
                  properties:
                    Size:
                      $ref: '#/components/schemas/SampleSize'
                      description: The number of rows in the sample.
                    Type:
                      $ref: '#/components/schemas/SampleType'
                      description: The way in which DataBrew obtains rows from a dataset.
                RoleArn:
                  description: The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role to be assumed for this request.
                  type: string
                  minLength: 20
                  maxLength: 2048
                Tags:
                  description: Metadata tags to apply to this project.
                  type: object
                  minProperties: 1
                  maxProperties: 200
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListProjects
      description: Lists all of the DataBrew projects that are defined.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProjectsResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: The token returned by a previous call to retrieve the next set of results.
          schema:
            type: string
            minLength: 1
            maxLength: 2000
        - name: maxResults
          in: query
          required: false
          description: 'The maximum number of results to return in this request. '
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /recipes:
    post:
      operationId: CreateRecipe
      description: Creates a new DataBrew recipe.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRecipeResponse'
        '480':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '481':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
                - Steps
              properties:
                Description:
                  description: A description for the recipe.
                  type: string
                  maxLength: 1024
                Name:
                  description: 'A unique name for the recipe. Valid characters are alphanumeric (A-Z, a-z, 0-9), hyphen (-), period (.), and space.'
                  type: string
                  minLength: 1
                  maxLength: 255
                Steps:
                  description: An array containing the steps to be performed by the recipe. Each recipe step consists of one recipe action and (optionally) an array of condition expressions.
                  type: array
                  items:
                    $ref: '#/components/schemas/RecipeStep'
                Tags:
                  description: Metadata tags to apply to this recipe.
                  type: object
                  minProperties: 1
                  maxProperties: 200
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListRecipes
      description: Lists all of the DataBrew recipes that are defined.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRecipesResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: 'The maximum number of results to return in this request. '
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: The token returned by a previous call to retrieve the next set of results.
          schema:
            type: string
            minLength: 1
            maxLength: 2000
        - name: recipeVersion
          in: query
          required: false
          description: '<p>Return only those recipes with a version identifier of <code>LATEST_WORKING</code> or <code>LATEST_PUBLISHED</code>. If <code>RecipeVersion</code> is omitted, <code>ListRecipes</code> returns all of the <code>LATEST_PUBLISHED</code> recipe versions.</p> <p>Valid values: <code>LATEST_WORKING</code> | <code>LATEST_PUBLISHED</code> </p>'
          schema:
            type: string
            minLength: 1
            maxLength: 16
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /recipeJobs:
    post:
      operationId: CreateRecipeJob
      description: 'Creates a new job to transform input data, using steps defined in an existing Glue DataBrew recipe'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRecipeJobResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
                - RoleArn
              properties:
                DatasetName:
                  description: The name of the dataset that this job processes.
                  type: string
                  minLength: 1
                  maxLength: 255
                EncryptionKeyArn:
                  description: The Amazon Resource Name (ARN) of an encryption key that is used to protect the job.
                  type: string
                  minLength: 20
                  maxLength: 2048
                EncryptionMode:
                  description: '<p>The encryption mode for the job, which can be one of the following:</p> <ul> <li> <p> <code>SSE-KMS</code> - Server-side encryption with keys managed by KMS.</p> </li> <li> <p> <code>SSE-S3</code> - Server-side encryption with keys managed by Amazon S3.</p> </li> </ul>'
                  type: string
                  enum:
                    - SSE-KMS
                    - SSE-S3
                Name:
                  description: 'A unique name for the job. Valid characters are alphanumeric (A-Z, a-z, 0-9), hyphen (-), period (.), and space.'
                  type: string
                  minLength: 1
                  maxLength: 240
                LogSubscription:
                  description: 'Enables or disables Amazon CloudWatch logging for the job. If logging is enabled, CloudWatch writes one log stream for each job run.'
                  type: string
                  enum:
                    - ENABLE
                    - DISABLE
                MaxCapacity:
                  description: The maximum number of nodes that DataBrew can consume when the job processes data.
                  type: integer
                MaxRetries:
                  description: The maximum number of times to retry the job after a job run fails.
                  type: integer
                  minimum: 0
                Outputs:
                  description: One or more artifacts that represent the output from running the job.
                  type: array
                  items:
                    $ref: '#/components/schemas/Output'
                  minItems: 1
                DataCatalogOutputs:
                  description: One or more artifacts that represent the Glue Data Catalog output from running the job.
                  type: array
                  items:
                    $ref: '#/components/schemas/DataCatalogOutput'
                  minItems: 1
                DatabaseOutputs:
                  description: 'Represents a list of JDBC database output objects which defines the output destination for a DataBrew recipe job to write to. '
                  type: array
                  items:
                    $ref: '#/components/schemas/DatabaseOutput'
                  minItems: 1
                ProjectName:
                  description: 'Either the name of an existing project, or a combination of a recipe and a dataset to associate with the recipe.'
                  type: string
                  minLength: 1
                  maxLength: 255
                RecipeReference:
                  description: Represents the name and version of a DataBrew recipe.
                  type: object
                  properties:
                    Name:
                      $ref: '#/components/schemas/RecipeName'
                      description: The name of the recipe.
                    RecipeVersion:
                      $ref: '#/components/schemas/RecipeVersion'
                      description: 'The identifier for the version for the recipe. '
                RoleArn:
                  description: The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role to be assumed when DataBrew runs the job.
                  type: string
                  minLength: 20
                  maxLength: 2048
                Tags:
                  description: Metadata tags to apply to this job.
                  type: object
                  minProperties: 1
                  maxProperties: 200
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
                Timeout:
                  description: The job's timeout in minutes. A job that attempts to run longer than this timeout period ends with a status of <code>TIMEOUT</code>.
                  type: integer
                  minimum: 0
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /schedules:
    post:
      operationId: CreateSchedule
      description: 'Creates a new schedule for one or more DataBrew jobs. Jobs can be run at a specific date and time, or at regular intervals.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateScheduleResponse'
        '480':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '481':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - CronExpression
                - Name
              properties:
                JobNames:
                  description: The name or names of one or more jobs to be run.
                  type: array
                  items:
                    $ref: '#/components/schemas/JobName'
                  maxItems: 50
                CronExpression:
                  description: 'The date or dates and time or times when the jobs are to be run. For more information, see <a href="https://docs.aws.amazon.com/databrew/latest/dg/jobs.cron.html">Cron expressions</a> in the <i>Glue DataBrew Developer Guide</i>.'
                  type: string
                  minLength: 1
                  maxLength: 512
                Tags:
                  description: Metadata tags to apply to this schedule.
                  type: object
                  minProperties: 1
                  maxProperties: 200
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
                Name:
                  description: 'A unique name for the schedule. Valid characters are alphanumeric (A-Z, a-z, 0-9), hyphen (-), period (.), and space.'
                  type: string
                  minLength: 1
                  maxLength: 255
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListSchedules
      description: Lists the DataBrew schedules that are defined.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSchedulesResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: jobName
          in: query
          required: false
          description: The name of the job that these schedules apply to.
          schema:
            type: string
            minLength: 1
            maxLength: 240
        - name: maxResults
          in: query
          required: false
          description: 'The maximum number of results to return in this request. '
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: The token returned by a previous call to retrieve the next set of results.
          schema:
            type: string
            minLength: 1
            maxLength: 2000
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  '/datasets/{name}':
    delete:
      operationId: DeleteDataset
      description: Deletes a dataset from DataBrew.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDatasetResponse'
        '480':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the dataset to be deleted.
          schema:
            type: string
            minLength: 1
            maxLength: 255
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeDataset
      description: Returns the definition of a specific DataBrew dataset.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDatasetResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the dataset to be described.
          schema:
            type: string
            minLength: 1
            maxLength: 255
    put:
      operationId: UpdateDataset
      description: Modifies the definition of an existing DataBrew dataset.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDatasetResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the dataset to be updated.
          schema:
            type: string
            minLength: 1
            maxLength: 255
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Input
              properties:
                Format:
                  description: The file format of a dataset that is created from an Amazon S3 file or folder.
                  type: string
                  enum:
                    - CSV
                    - JSON
                    - PARQUET
                    - EXCEL
                FormatOptions:
                  description: 'Represents a set of options that define the structure of either comma-separated value (CSV), Excel, or JSON input.'
                  type: object
                  properties:
                    Json:
                      $ref: '#/components/schemas/JsonOptions'
                      description: Options that define how JSON input is to be interpreted by DataBrew.
                    Excel:
                      $ref: '#/components/schemas/ExcelOptions'
                      description: Options that define how Excel input is to be interpreted by DataBrew.
                    Csv:
                      $ref: '#/components/schemas/CsvOptions'
                      description: Options that define how CSV input is to be interpreted by DataBrew.
                Input:
                  description: 'Represents information on how DataBrew can find data, in either the Glue Data Catalog or Amazon S3.'
                  type: object
                  properties:
                    S3InputDefinition:
                      $ref: '#/components/schemas/S3Location'
                      description: The Amazon S3 location where the data is stored.
                    DataCatalogInputDefinition:
                      $ref: '#/components/schemas/DataCatalogInputDefinition'
                      description: The Glue Data Catalog parameters for the data.
                    DatabaseInputDefinition:
                      $ref: '#/components/schemas/DatabaseInputDefinition'
                      description: Connection information for dataset input files stored in a database.
                PathOptions:
                  description: Represents a set of options that define how DataBrew selects files for a given Amazon S3 path in a dataset.
                  type: object
                  properties:
                    LastModifiedDateCondition:
                      $ref: '#/components/schemas/FilterExpression'
                      description: 'If provided, this structure defines a date range for matching Amazon S3 objects based on their LastModifiedDate attribute in Amazon S3.'
                    FilesLimit:
                      $ref: '#/components/schemas/FilesLimit'
                      description: 'If provided, this structure imposes a limit on a number of files that should be selected.'
                    Parameters:
                      $ref: '#/components/schemas/PathParametersMap'
                      description: A structure that maps names of parameters used in the Amazon S3 path of a dataset to their definitions.
  '/jobs/{name}':
    delete:
      operationId: DeleteJob
      description: Deletes the specified DataBrew job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteJobResponse'
        '480':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the job to be deleted.
          schema:
            type: string
            minLength: 1
            maxLength: 240
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeJob
      description: Returns the definition of a specific DataBrew job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeJobResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the job to be described.
          schema:
            type: string
            minLength: 1
            maxLength: 240
  '/projects/{name}':
    delete:
      operationId: DeleteProject
      description: Deletes an existing DataBrew project.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteProjectResponse'
        '480':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the project to be deleted.
          schema:
            type: string
            minLength: 1
            maxLength: 255
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeProject
      description: Returns the definition of a specific DataBrew project.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeProjectResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the project to be described.
          schema:
            type: string
            minLength: 1
            maxLength: 255
    put:
      operationId: UpdateProject
      description: Modifies the definition of an existing DataBrew project.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProjectResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the project to be updated.
          schema:
            type: string
            minLength: 1
            maxLength: 255
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - RoleArn
              properties:
                Sample:
                  description: Represents the sample size and sampling type for DataBrew to use for interactive data analysis.
                  type: object
                  properties:
                    Size:
                      $ref: '#/components/schemas/SampleSize'
                      description: The number of rows in the sample.
                    Type:
                      $ref: '#/components/schemas/SampleType'
                      description: The way in which DataBrew obtains rows from a dataset.
                RoleArn:
                  description: The Amazon Resource Name (ARN) of the IAM role to be assumed for this request.
                  type: string
                  minLength: 20
                  maxLength: 2048
  '/recipes/{name}/recipeVersion/{recipeVersion}':
    delete:
      operationId: DeleteRecipeVersion
      description: Deletes a single version of a DataBrew recipe.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRecipeVersionResponse'
        '480':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the recipe.
          schema:
            type: string
            minLength: 1
            maxLength: 255
        - name: recipeVersion
          in: path
          required: true
          description: The version of the recipe to be deleted. You can specify a numeric versions (<code>X.Y</code>) or <code>LATEST_WORKING</code>. <code>LATEST_PUBLISHED</code> is not supported.
          schema:
            type: string
            minLength: 1
            maxLength: 16
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/schedules/{name}':
    delete:
      operationId: DeleteSchedule
      description: Deletes the specified DataBrew schedule.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteScheduleResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the schedule to be deleted.
          schema:
            type: string
            minLength: 1
            maxLength: 255
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeSchedule
      description: Returns the definition of a specific DataBrew schedule.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeScheduleResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the schedule to be described.
          schema:
            type: string
            minLength: 1
            maxLength: 255
    put:
      operationId: UpdateSchedule
      description: Modifies the definition of an existing DataBrew schedule.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateScheduleResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the schedule to update.
          schema:
            type: string
            minLength: 1
            maxLength: 255
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - CronExpression
              properties:
                JobNames:
                  description: The name or names of one or more jobs to be run for this schedule.
                  type: array
                  items:
                    $ref: '#/components/schemas/JobName'
                  maxItems: 50
                CronExpression:
                  description: 'The date or dates and time or times when the jobs are to be run. For more information, see <a href="https://docs.aws.amazon.com/databrew/latest/dg/jobs.cron.html">Cron expressions</a> in the <i>Glue DataBrew Developer Guide</i>.'
                  type: string
                  minLength: 1
                  maxLength: 512
  '/jobs/{name}/jobRun/{runId}':
    get:
      operationId: DescribeJobRun
      description: Represents one run of a DataBrew job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeJobRunResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the job being processed during this run.
          schema:
            type: string
            minLength: 1
            maxLength: 240
        - name: runId
          in: path
          required: true
          description: The unique identifier of the job run.
          schema:
            type: string
            minLength: 1
            maxLength: 255
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/recipes/{name}':
    get:
      operationId: DescribeRecipe
      description: Returns the definition of a specific DataBrew recipe corresponding to a particular version.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeRecipeResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the recipe to be described.
          schema:
            type: string
            minLength: 1
            maxLength: 255
        - name: recipeVersion
          in: query
          required: false
          description: 'The recipe version identifier. If this parameter isn''t specified, then the latest published version is returned.'
          schema:
            type: string
            minLength: 1
            maxLength: 16
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdateRecipe
      description: Modifies the definition of the <code>LATEST_WORKING</code> version of a DataBrew recipe.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRecipeResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the recipe to be updated.
          schema:
            type: string
            minLength: 1
            maxLength: 255
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  description: A description of the recipe.
                  type: string
                  maxLength: 1024
                Steps:
                  description: 'One or more steps to be performed by the recipe. Each step consists of an action, and the conditions under which the action should succeed.'
                  type: array
                  items:
                    $ref: '#/components/schemas/RecipeStep'
  '/jobs/{name}/jobRuns':
    get:
      operationId: ListJobRuns
      description: Lists all of the previous runs of a particular DataBrew job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobRunsResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the job.
          schema:
            type: string
            minLength: 1
            maxLength: 240
        - name: maxResults
          in: query
          required: false
          description: 'The maximum number of results to return in this request. '
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: The token returned by a previous call to retrieve the next set of results.
          schema:
            type: string
            minLength: 1
            maxLength: 2000
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /jobs:
    get:
      operationId: ListJobs
      description: Lists all of the DataBrew jobs that are defined.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobsResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: datasetName
          in: query
          required: false
          description: The name of a dataset. Using this parameter indicates to return only those jobs that act on the specified dataset.
          schema:
            type: string
            minLength: 1
            maxLength: 255
        - name: maxResults
          in: query
          required: false
          description: 'The maximum number of results to return in this request. '
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: 'A token generated by DataBrew that specifies where to continue pagination if a previous request was truncated. To get the next set of pages, pass in the NextToken value from the response object of the previous page call. '
          schema:
            type: string
            minLength: 1
            maxLength: 2000
        - name: projectName
          in: query
          required: false
          description: The name of a project. Using this parameter indicates to return only those jobs that are associated with the specified project.
          schema:
            type: string
            minLength: 1
            maxLength: 255
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /recipeVersions#name:
    get:
      operationId: ListRecipeVersions
      description: 'Lists the versions of a particular DataBrew recipe, except for <code>LATEST_WORKING</code>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRecipeVersionsResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: 'The maximum number of results to return in this request. '
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: The token returned by a previous call to retrieve the next set of results.
          schema:
            type: string
            minLength: 1
            maxLength: 2000
        - name: name
          in: query
          required: true
          description: The name of the recipe for which to return version information.
          schema:
            type: string
            minLength: 1
            maxLength: 255
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{ResourceArn}':
    get:
      operationId: ListTagsForResource
      description: 'Lists all the tags for a DataBrew resource. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: ResourceArn
          in: path
          required: true
          description: 'The Amazon Resource Name (ARN) string that uniquely identifies the DataBrew resource. '
          schema:
            type: string
            minLength: 20
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: TagResource
      description: 'Adds metadata tags to a DataBrew resource, such as a dataset, project, recipe, job, or schedule.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: ResourceArn
          in: path
          required: true
          description: 'The DataBrew resource to which tags should be added. The value for this parameter is an Amazon Resource Name (ARN). For DataBrew, you can tag a dataset, a job, a project, or a recipe.'
          schema:
            type: string
            minLength: 20
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Tags
              properties:
                Tags:
                  description: One or more tags to be assigned to the resource.
                  type: object
                  minProperties: 1
                  maxProperties: 200
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
  '/recipes/{name}/publishRecipe':
    post:
      operationId: PublishRecipe
      description: Publishes a new version of a DataBrew recipe.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishRecipeResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the recipe to be published.
          schema:
            type: string
            minLength: 1
            maxLength: 255
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  description: 'A description of the recipe to be published, for this version of the recipe.'
                  type: string
                  maxLength: 1024
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/projects/{name}/sendProjectSessionAction':
    put:
      operationId: SendProjectSessionAction
      description: Performs a recipe step within an interactive DataBrew session that's currently open.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendProjectSessionActionResponse'
        '480':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the project to apply the action to.
          schema:
            type: string
            minLength: 1
            maxLength: 255
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Preview:
                  description: 'If true, the result of the recipe step will be returned, but not applied.'
                  type: boolean
                RecipeStep:
                  description: Represents a single step from a DataBrew recipe to be performed.
                  type: object
                  properties:
                    Action:
                      $ref: '#/components/schemas/RecipeAction'
                      description: The particular action to be performed in the recipe step.
                    ConditionExpressions:
                      $ref: '#/components/schemas/ConditionExpressionList'
                      description: '<p>One or more conditions that must be met for the recipe step to succeed.</p> <note> <p>All of the conditions in the array must be met. In other words, all of the conditions must be combined using a logical AND operation.</p> </note>'
                StepIndex:
                  description: 'The index from which to preview a step. This index is used to preview the result of steps that have already been applied, so that the resulting view frame is from earlier in the view frame stack.'
                  type: integer
                  minimum: 0
                ClientSessionId:
                  description: A unique identifier for an interactive session that's currently open and ready for work. The action will be performed on this session.
                  type: string
                  pattern: '^[a-zA-Z0-9][a-zA-Z0-9-]*$'
                  minLength: 1
                  maxLength: 255
                ViewFrame:
                  description: Represents the data being transformed during an action.
                  type: object
                  properties:
                    StartColumnIndex:
                      $ref: '#/components/schemas/StartColumnIndex'
                      description: The starting index for the range of columns to return in the view frame.
                    ColumnRange:
                      $ref: '#/components/schemas/ColumnRange'
                      description: 'The number of columns to include in the view frame, beginning with the <code>StartColumnIndex</code> value and ignoring any columns in the <code>HiddenColumns</code> list.'
                    HiddenColumns:
                      $ref: '#/components/schemas/HiddenColumnList'
                      description: A list of columns to hide in the view frame.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/jobs/{name}/startJobRun':
    post:
      operationId: StartJobRun
      description: Runs a DataBrew job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartJobRunResponse'
        '480':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the job to be run.
          schema:
            type: string
            minLength: 1
            maxLength: 240
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/projects/{name}/startProjectSession':
    put:
      operationId: StartProjectSession
      description: 'Creates an interactive session, enabling you to manipulate data in a DataBrew project.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartProjectSessionResponse'
        '480':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the project to act upon.
          schema:
            type: string
            minLength: 1
            maxLength: 255
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AssumeControl:
                  description: 'A value that, if true, enables you to take control of a session, even if a different client is currently accessing the project.'
                  type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/jobs/{name}/jobRun/{runId}/stopJobRun':
    post:
      operationId: StopJobRun
      description: Stops a particular run of a job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopJobRunResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the job to be stopped.
          schema:
            type: string
            minLength: 1
            maxLength: 240
        - name: runId
          in: path
          required: true
          description: The ID of the job run to be stopped.
          schema:
            type: string
            minLength: 1
            maxLength: 255
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{ResourceArn}#tagKeys':
    delete:
      operationId: UntagResource
      description: Removes metadata tags from a DataBrew resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: ResourceArn
          in: path
          required: true
          description: 'A DataBrew resource from which you want to remove a tag or tags. The value for this parameter is an Amazon Resource Name (ARN). '
          schema:
            type: string
            minLength: 20
            maxLength: 2048
        - name: tagKeys
          in: query
          required: true
          description: The tag keys (names) of one or more tags to be removed.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TagKey'
            minItems: 1
            maxItems: 200
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/profileJobs/{name}':
    put:
      operationId: UpdateProfileJob
      description: Modifies the definition of an existing profile job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProfileJobResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the job to be updated.
          schema:
            type: string
            minLength: 1
            maxLength: 240
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - OutputLocation
                - RoleArn
              properties:
                Configuration:
                  description: 'Configuration for profile jobs. Configuration can be used to select columns, do evaluations, and override default parameters of evaluations. When configuration is undefined, the profile job will apply default settings to all supported columns. '
                  type: object
                  properties:
                    DatasetStatisticsConfiguration:
                      $ref: '#/components/schemas/StatisticsConfiguration'
                      description: 'Configuration for inter-column evaluations. Configuration can be used to select evaluations and override parameters of evaluations. When configuration is undefined, the profile job will run all supported inter-column evaluations. '
                    ProfileColumns:
                      $ref: '#/components/schemas/ColumnSelectorList'
                      description: 'List of column selectors. ProfileColumns can be used to select columns from the dataset. When ProfileColumns is undefined, the profile job will profile all supported columns. '
                    ColumnStatisticsConfigurations:
                      $ref: '#/components/schemas/ColumnStatisticsConfigurationList'
                      description: 'List of configurations for column evaluations. ColumnStatisticsConfigurations are used to select evaluations and override parameters of evaluations for particular columns. When ColumnStatisticsConfigurations is undefined, the profile job will profile all supported columns and run all supported evaluations. '
                EncryptionKeyArn:
                  description: The Amazon Resource Name (ARN) of an encryption key that is used to protect the job.
                  type: string
                  minLength: 20
                  maxLength: 2048
                EncryptionMode:
                  description: '<p>The encryption mode for the job, which can be one of the following:</p> <ul> <li> <p> <code>SSE-KMS</code> - Server-side encryption with keys managed by KMS.</p> </li> <li> <p> <code>SSE-S3</code> - Server-side encryption with keys managed by Amazon S3.</p> </li> </ul>'
                  type: string
                  enum:
                    - SSE-KMS
                    - SSE-S3
                LogSubscription:
                  description: 'Enables or disables Amazon CloudWatch logging for the job. If logging is enabled, CloudWatch writes one log stream for each job run.'
                  type: string
                  enum:
                    - ENABLE
                    - DISABLE
                MaxCapacity:
                  description: The maximum number of compute nodes that DataBrew can use when the job processes data.
                  type: integer
                MaxRetries:
                  description: The maximum number of times to retry the job after a job run fails.
                  type: integer
                  minimum: 0
                OutputLocation:
                  description: 'Represents an Amazon S3 location (bucket name and object key) where DataBrew can read input data, or write output from a job.'
                  type: object
                  properties:
                    Bucket:
                      $ref: '#/components/schemas/Bucket'
                      description: The Amazon S3 bucket name.
                    Key:
                      $ref: '#/components/schemas/Key'
                      description: The unique name of the object in the bucket.
                RoleArn:
                  description: The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role to be assumed when DataBrew runs the job.
                  type: string
                  minLength: 20
                  maxLength: 2048
                Timeout:
                  description: The job's timeout in minutes. A job that attempts to run longer than this timeout period ends with a status of <code>TIMEOUT</code>.
                  type: integer
                  minimum: 0
                JobSample:
                  description: 'A sample configuration for profile jobs only, which determines the number of rows on which the profile job is run. If a <code>JobSample</code> value isn''t provided, the default is used. The default value is CUSTOM_ROWS for the mode parameter and 20,000 for the size parameter.'
                  type: object
                  properties:
                    Mode:
                      $ref: '#/components/schemas/SampleMode'
                      description: '<p>A value that determines whether the profile job is run on the entire dataset or a specified number of rows. This value must be one of the following:</p> <ul> <li> <p>FULL_DATASET - The profile job is run on the entire dataset.</p> </li> <li> <p>CUSTOM_ROWS - The profile job is run on the number of rows specified in the <code>Size</code> parameter.</p> </li> </ul>'
                    Size:
                      $ref: '#/components/schemas/JobSize'
                      description: <p>The <code>Size</code> parameter is only required when the mode is CUSTOM_ROWS. The profile job is run on the specified number of rows. The maximum value for size is Long.MAX_VALUE.</p> <p>Long.MAX_VALUE = 9223372036854775807</p>
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/recipeJobs/{name}':
    put:
      operationId: UpdateRecipeJob
      description: Modifies the definition of an existing DataBrew recipe job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRecipeJobResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the job to update.
          schema:
            type: string
            minLength: 1
            maxLength: 240
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - RoleArn
              properties:
                EncryptionKeyArn:
                  description: The Amazon Resource Name (ARN) of an encryption key that is used to protect the job.
                  type: string
                  minLength: 20
                  maxLength: 2048
                EncryptionMode:
                  description: '<p>The encryption mode for the job, which can be one of the following:</p> <ul> <li> <p> <code>SSE-KMS</code> - Server-side encryption with keys managed by KMS.</p> </li> <li> <p> <code>SSE-S3</code> - Server-side encryption with keys managed by Amazon S3.</p> </li> </ul>'
                  type: string
                  enum:
                    - SSE-KMS
                    - SSE-S3
                LogSubscription:
                  description: 'Enables or disables Amazon CloudWatch logging for the job. If logging is enabled, CloudWatch writes one log stream for each job run.'
                  type: string
                  enum:
                    - ENABLE
                    - DISABLE
                MaxCapacity:
                  description: The maximum number of nodes that DataBrew can consume when the job processes data.
                  type: integer
                MaxRetries:
                  description: The maximum number of times to retry the job after a job run fails.
                  type: integer
                  minimum: 0
                Outputs:
                  description: 'One or more artifacts that represent the output from running the job. '
                  type: array
                  items:
                    $ref: '#/components/schemas/Output'
                  minItems: 1
                DataCatalogOutputs:
                  description: One or more artifacts that represent the Glue Data Catalog output from running the job.
                  type: array
                  items:
                    $ref: '#/components/schemas/DataCatalogOutput'
                  minItems: 1
                DatabaseOutputs:
                  description: Represents a list of JDBC database output objects which defines the output destination for a DataBrew recipe job to write into.
                  type: array
                  items:
                    $ref: '#/components/schemas/DatabaseOutput'
                  minItems: 1
                RoleArn:
                  description: The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role to be assumed when DataBrew runs the job.
                  type: string
                  minLength: 20
                  maxLength: 2048
                Timeout:
                  description: The job's timeout in minutes. A job that attempts to run longer than this timeout period ends with a status of <code>TIMEOUT</code>.
                  type: integer
                  minimum: 0
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    BatchDeleteRecipeVersionResponse:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/RecipeName'
          description: The name of the recipe that was modified.
        Errors:
          $ref: '#/components/schemas/RecipeErrorList'
          description: 'Errors, if any, that occurred while attempting to delete the recipe versions.'
    RecipeVersion:
      type: string
      minLength: 1
      maxLength: 16
    ConflictException: {}
    ResourceNotFoundException: {}
    ValidationException: {}
    CreateDatasetResponse:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/DatasetName'
          description: The name of the dataset that you created.
    JsonOptions:
      type: object
      properties:
        MultiLine:
          $ref: '#/components/schemas/MultiLine'
          description: A value that specifies whether JSON input contains embedded new line characters.
      description: Represents the JSON-specific options that define how input is to be interpreted by Glue DataBrew.
    ExcelOptions:
      type: object
      properties:
        SheetNames:
          $ref: '#/components/schemas/SheetNameList'
          description: One or more named sheets in the Excel file that will be included in the dataset.
        SheetIndexes:
          $ref: '#/components/schemas/SheetIndexList'
          description: One or more sheet numbers in the Excel file that will be included in the dataset.
        HeaderRow:
          $ref: '#/components/schemas/HeaderRow'
          description: 'A variable that specifies whether the first row in the file is parsed as the header. If this value is false, column names are auto-generated.'
      description: Represents a set of options that define how DataBrew will interpret a Microsoft Excel file when creating a dataset from that file.
    CsvOptions:
      type: object
      properties:
        Delimiter:
          $ref: '#/components/schemas/Delimiter'
          description: A single character that specifies the delimiter being used in the CSV file.
        HeaderRow:
          $ref: '#/components/schemas/HeaderRow'
          description: 'A variable that specifies whether the first row in the file is parsed as the header. If this value is false, column names are auto-generated.'
      description: Represents a set of options that define how DataBrew will read a comma-separated value (CSV) file when creating a dataset from that file.
    S3Location:
      type: object
      required:
        - Bucket
      properties:
        Bucket:
          $ref: '#/components/schemas/Bucket'
          description: The Amazon S3 bucket name.
        Key:
          $ref: '#/components/schemas/Key'
          description: The unique name of the object in the bucket.
      description: 'Represents an Amazon S3 location (bucket name and object key) where DataBrew can read input data, or write output from a job.'
    DataCatalogInputDefinition:
      type: object
      required:
        - DatabaseName
        - TableName
      properties:
        CatalogId:
          $ref: '#/components/schemas/CatalogId'
          description: The unique identifier of the Amazon Web Services account that holds the Data Catalog that stores the data.
        DatabaseName:
          $ref: '#/components/schemas/DatabaseName'
          description: The name of a database in the Data Catalog.
        TableName:
          $ref: '#/components/schemas/TableName'
          description: The name of a database table in the Data Catalog. This table corresponds to a DataBrew dataset.
        TempDirectory:
          $ref: '#/components/schemas/S3Location'
          description: Represents an Amazon location where DataBrew can store intermediate results.
      description: 'Represents how metadata stored in the Glue Data Catalog is defined in a DataBrew dataset. '
    DatabaseInputDefinition:
      type: object
      required:
        - GlueConnectionName
        - DatabaseTableName
      properties:
        GlueConnectionName:
          $ref: '#/components/schemas/GlueConnectionName'
          description: The Glue Connection that stores the connection information for the target database.
        DatabaseTableName:
          $ref: '#/components/schemas/DatabaseTableName'
          description: The table within the target database.
        TempDirectory:
          $ref: '#/components/schemas/S3Location'
      description: Connection information for dataset input files stored in a database.
    FilterExpression:
      type: object
      required:
        - Expression
        - ValuesMap
      properties:
        Expression:
          $ref: '#/components/schemas/Expression'
          description: 'The expression which includes condition names followed by substitution variables, possibly grouped and combined with other conditions. For example, "(starts_with :prefix1 or starts_with :prefix2) and (ends_with :suffix1 or ends_with :suffix2)". Substitution variables should start with '':'' symbol.'
        ValuesMap:
          $ref: '#/components/schemas/ValuesMap'
          description: The map of substitution variable names to their values used in this filter expression.
      description: 'Represents a structure for defining parameter conditions. Supported conditions are described here: <a href="https://docs-aws.amazon.com/databrew/latest/dg/datasets.multiple-files.html#conditions.for.dynamic.datasets">Supported conditions for dynamic datasets</a> in the <i>Glue DataBrew Developer Guide</i>.'
    FilesLimit:
      type: object
      required:
        - MaxFiles
      properties:
        MaxFiles:
          $ref: '#/components/schemas/MaxFiles'
          description: The number of Amazon S3 files to select.
        OrderedBy:
          $ref: '#/components/schemas/OrderedBy'
          description: A criteria to use for Amazon S3 files sorting before their selection. By default uses LAST_MODIFIED_DATE as a sorting criteria. Currently it's the only allowed value.
        Order:
          $ref: '#/components/schemas/Order'
          description: 'A criteria to use for Amazon S3 files sorting before their selection. By default uses DESCENDING order, i.e. most recent files are selected first. Anotherpossible value is ASCENDING.'
      description: Represents a limit imposed on number of Amazon S3 files that should be selected for a dataset from a connected Amazon S3 path.
    PathParametersMap:
      type: object
      description: A structure that map names of parameters used in the Amazon S3 path of a dataset to their definitions. A definition includes parameter type and conditions.
      minProperties: 1
      maxProperties: 10
      additionalProperties:
        $ref: '#/components/schemas/DatasetParameter'
    TagValue:
      type: string
      maxLength: 256
    AccessDeniedException: {}
    ServiceQuotaExceededException: {}
    CreateProfileJobResponse:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/JobName'
          description: The name of the job that was created.
    Bucket:
      type: string
      minLength: 3
      maxLength: 63
    Key:
      type: string
      minLength: 1
      maxLength: 1280
    StatisticsConfiguration:
      type: object
      properties:
        IncludedStatistics:
          $ref: '#/components/schemas/StatisticList'
          description: 'List of included evaluations. When the list is undefined, all supported evaluations will be included.'
        Overrides:
          $ref: '#/components/schemas/StatisticOverrideList'
          description: List of overrides for evaluations.
      description: 'Configuration of evaluations for a profile job. This configuration can be used to select evaluations and override the parameters of selected evaluations. '
    ColumnSelectorList:
      type: array
      items:
        $ref: '#/components/schemas/ColumnSelector'
      minItems: 1
    ColumnStatisticsConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/ColumnStatisticsConfiguration'
      minItems: 1
    SampleMode:
      type: string
      enum:
        - FULL_DATASET
        - CUSTOM_ROWS
    JobSize:
      type: integer
    CreateProjectResponse:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/ProjectName'
          description: The name of the project that you created.
    SampleSize:
      type: integer
      minimum: 1
      maximum: 5000
    SampleType:
      type: string
      enum:
        - FIRST_N
        - LAST_N
        - RANDOM
    InternalServerException: {}
    CreateRecipeResponse:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/RecipeName'
          description: The name of the recipe that you created.
    RecipeStep:
      type: object
      required:
        - Action
      properties:
        Action:
          $ref: '#/components/schemas/RecipeAction'
          description: The particular action to be performed in the recipe step.
        ConditionExpressions:
          $ref: '#/components/schemas/ConditionExpressionList'
          description: '<p>One or more conditions that must be met for the recipe step to succeed.</p> <note> <p>All of the conditions in the array must be met. In other words, all of the conditions must be combined using a logical AND operation.</p> </note>'
      description: Represents a single step from a DataBrew recipe to be performed.
    CreateRecipeJobResponse:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/JobName'
          description: The name of the job that you created.
    Output:
      type: object
      required:
        - Location
      properties:
        CompressionFormat:
          $ref: '#/components/schemas/CompressionFormat'
          description: The compression algorithm used to compress the output text of the job.
        Format:
          $ref: '#/components/schemas/OutputFormat'
          description: The data format of the output of the job.
        PartitionColumns:
          $ref: '#/components/schemas/ColumnNameList'
          description: The names of one or more partition columns for the output of the job.
        Location:
          $ref: '#/components/schemas/S3Location'
          description: The location in Amazon S3 where the job writes its output.
        Overwrite:
          $ref: '#/components/schemas/OverwriteOutput'
          description: 'A value that, if true, means that any data in the location specified for output is overwritten with new output.'
        FormatOptions:
          $ref: '#/components/schemas/OutputFormatOptions'
          description: Represents options that define how DataBrew formats job output files.
      description: Represents options that specify how and where in Amazon S3 DataBrew writes the output generated by recipe jobs or profile jobs.
    DataCatalogOutput:
      type: object
      required:
        - DatabaseName
        - TableName
      properties:
        CatalogId:
          $ref: '#/components/schemas/CatalogId'
          description: The unique identifier of the Amazon Web Services account that holds the Data Catalog that stores the data.
        DatabaseName:
          $ref: '#/components/schemas/DatabaseName'
          description: The name of a database in the Data Catalog.
        TableName:
          $ref: '#/components/schemas/TableName'
          description: The name of a table in the Data Catalog.
        S3Options:
          $ref: '#/components/schemas/S3TableOutputOptions'
          description: Represents options that specify how and where DataBrew writes the Amazon S3 output generated by recipe jobs.
        DatabaseOptions:
          $ref: '#/components/schemas/DatabaseTableOutputOptions'
          description: Represents options that specify how and where DataBrew writes the database output generated by recipe jobs.
        Overwrite:
          $ref: '#/components/schemas/OverwriteOutput'
          description: 'A value that, if true, means that any data in the location specified for output is overwritten with new output. Not supported with DatabaseOptions.'
      description: Represents options that specify how and where in the Glue Data Catalog DataBrew writes the output generated by recipe jobs.
    DatabaseOutput:
      type: object
      required:
        - GlueConnectionName
        - DatabaseOptions
      properties:
        GlueConnectionName:
          $ref: '#/components/schemas/GlueConnectionName'
          description: The Glue connection that stores the connection information for the target database.
        DatabaseOptions:
          $ref: '#/components/schemas/DatabaseTableOutputOptions'
          description: Represents options that specify how and where DataBrew writes the database output generated by recipe jobs.
        DatabaseOutputMode:
          $ref: '#/components/schemas/DatabaseOutputMode'
          description: 'The output mode to write into the database. Currently supported option: NEW_TABLE.'
      description: Represents a JDBC database output object which defines the output destination for a DataBrew recipe job to write into.
    RecipeName:
      type: string
      minLength: 1
      maxLength: 255
    CreateScheduleResponse:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/ScheduleName'
          description: The name of the schedule that was created.
    JobName:
      type: string
      minLength: 1
      maxLength: 240
    DeleteDatasetResponse:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/DatasetName'
          description: The name of the dataset that you deleted.
    DeleteJobResponse:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/JobName'
          description: The name of the job that you deleted.
    DeleteProjectResponse:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/ProjectName'
          description: The name of the project that you deleted.
    DeleteRecipeVersionResponse:
      type: object
      required:
        - Name
        - RecipeVersion
      properties:
        Name:
          $ref: '#/components/schemas/RecipeName'
          description: The name of the recipe that was deleted.
        RecipeVersion:
          $ref: '#/components/schemas/RecipeVersion'
          description: The version of the recipe that was deleted.
    DeleteScheduleResponse:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/ScheduleName'
          description: The name of the schedule that was deleted.
    DescribeDatasetResponse:
      type: object
      required:
        - Name
        - Input
      properties:
        CreatedBy:
          $ref: '#/components/schemas/CreatedBy'
          description: The identifier (user name) of the user who created the dataset.
        CreateDate:
          $ref: '#/components/schemas/Date'
          description: The date and time that the dataset was created.
        Name:
          $ref: '#/components/schemas/DatasetName'
          description: The name of the dataset.
        Format:
          $ref: '#/components/schemas/InputFormat'
          description: The file format of a dataset that is created from an Amazon S3 file or folder.
        FormatOptions:
          $ref: '#/components/schemas/FormatOptions'
        Input:
          $ref: '#/components/schemas/Input'
        LastModifiedDate:
          $ref: '#/components/schemas/Date'
          description: The date and time that the dataset was last modified.
        LastModifiedBy:
          $ref: '#/components/schemas/LastModifiedBy'
          description: The identifier (user name) of the user who last modified the dataset.
        Source:
          $ref: '#/components/schemas/Source'
          description: 'The location of the data for this dataset, Amazon S3 or the Glue Data Catalog.'
        PathOptions:
          $ref: '#/components/schemas/PathOptions'
          description: A set of options that defines how DataBrew interprets an Amazon S3 path of the dataset.
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: Metadata tags associated with this dataset.
        ResourceArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset.
    DescribeJobResponse:
      type: object
      required:
        - Name
      properties:
        CreateDate:
          $ref: '#/components/schemas/Date'
          description: The date and time that the job was created.
        CreatedBy:
          $ref: '#/components/schemas/CreatedBy'
          description: The identifier (user name) of the user associated with the creation of the job.
        DatasetName:
          $ref: '#/components/schemas/DatasetName'
          description: The dataset that the job acts upon.
        EncryptionKeyArn:
          $ref: '#/components/schemas/EncryptionKeyArn'
          description: The Amazon Resource Name (ARN) of an encryption key that is used to protect the job.
        EncryptionMode:
          $ref: '#/components/schemas/EncryptionMode'
          description: '<p>The encryption mode for the job, which can be one of the following:</p> <ul> <li> <p> <code>SSE-KMS</code> - Server-side encryption with keys managed by KMS.</p> </li> <li> <p> <code>SSE-S3</code> - Server-side encryption with keys managed by Amazon S3.</p> </li> </ul>'
        Name:
          $ref: '#/components/schemas/JobName'
          description: The name of the job.
        Type:
          $ref: '#/components/schemas/JobType'
          description: '<p>The job type, which must be one of the following:</p> <ul> <li> <p> <code>PROFILE</code> - The job analyzes the dataset to determine its size, data types, data distribution, and more.</p> </li> <li> <p> <code>RECIPE</code> - The job applies one or more transformations to a dataset.</p> </li> </ul>'
        LastModifiedBy:
          $ref: '#/components/schemas/LastModifiedBy'
          description: The identifier (user name) of the user who last modified the job.
        LastModifiedDate:
          $ref: '#/components/schemas/Date'
          description: The date and time that the job was last modified.
        LogSubscription:
          $ref: '#/components/schemas/LogSubscription'
          description: Indicates whether Amazon CloudWatch logging is enabled for this job.
        MaxCapacity:
          $ref: '#/components/schemas/MaxCapacity'
          description: The maximum number of compute nodes that DataBrew can consume when the job processes data.
        MaxRetries:
          $ref: '#/components/schemas/MaxRetries'
          description: The maximum number of times to retry the job after a job run fails.
        Outputs:
          $ref: '#/components/schemas/OutputList'
          description: One or more artifacts that represent the output from running the job.
        DataCatalogOutputs:
          $ref: '#/components/schemas/DataCatalogOutputList'
          description: One or more artifacts that represent the Glue Data Catalog output from running the job.
        DatabaseOutputs:
          $ref: '#/components/schemas/DatabaseOutputList'
          description: Represents a list of JDBC database output objects which defines the output destination for a DataBrew recipe job to write into.
        ProjectName:
          $ref: '#/components/schemas/ProjectName'
          description: The DataBrew project associated with this job.
        ProfileConfiguration:
          $ref: '#/components/schemas/ProfileConfiguration'
          description: 'Configuration for profile jobs. Used to select columns, do evaluations, and override default parameters of evaluations. When configuration is null, the profile job will run with default settings.'
        RecipeReference:
          $ref: '#/components/schemas/RecipeReference'
        ResourceArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the job.
        RoleArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the Identity and Access Management (IAM) role to be assumed when DataBrew runs the job.
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: Metadata tags associated with this job.
        Timeout:
          $ref: '#/components/schemas/Timeout'
          description: The job's timeout in minutes. A job that attempts to run longer than this timeout period ends with a status of <code>TIMEOUT</code>.
        JobSample:
          $ref: '#/components/schemas/JobSample'
          description: Sample configuration for profile jobs only. Determines the number of rows on which the profile job will be executed.
    DescribeJobRunResponse:
      type: object
      required:
        - JobName
      properties:
        Attempt:
          $ref: '#/components/schemas/Attempt'
          description: The number of times that DataBrew has attempted to run the job.
        CompletedOn:
          $ref: '#/components/schemas/Date'
          description: The date and time when the job completed processing.
        DatasetName:
          $ref: '#/components/schemas/DatasetName'
          description: The name of the dataset for the job to process.
        ErrorMessage:
          $ref: '#/components/schemas/JobRunErrorMessage'
          description: A message indicating an error (if any) that was encountered when the job ran.
        ExecutionTime:
          $ref: '#/components/schemas/ExecutionTime'
          description: 'The amount of time, in seconds, during which the job run consumed resources.'
        JobName:
          $ref: '#/components/schemas/JobName'
          description: The name of the job being processed during this run.
        ProfileConfiguration:
          $ref: '#/components/schemas/ProfileConfiguration'
          description: 'Configuration for profile jobs. Used to select columns, do evaluations, and override default parameters of evaluations. When configuration is null, the profile job will run with default settings.'
        RunId:
          $ref: '#/components/schemas/JobRunId'
          description: The unique identifier of the job run.
        State:
          $ref: '#/components/schemas/JobRunState'
          description: The current state of the job run entity itself.
        LogSubscription:
          $ref: '#/components/schemas/LogSubscription'
          description: The current status of Amazon CloudWatch logging for the job run.
        LogGroupName:
          $ref: '#/components/schemas/LogGroupName'
          description: 'The name of an Amazon CloudWatch log group, where the job writes diagnostic messages when it runs.'
        Outputs:
          $ref: '#/components/schemas/OutputList'
          description: One or more output artifacts from a job run.
        DataCatalogOutputs:
          $ref: '#/components/schemas/DataCatalogOutputList'
          description: One or more artifacts that represent the Glue Data Catalog output from running the job.
        DatabaseOutputs:
          $ref: '#/components/schemas/DatabaseOutputList'
          description: Represents a list of JDBC database output objects which defines the output destination for a DataBrew recipe job to write into.
        RecipeReference:
          $ref: '#/components/schemas/RecipeReference'
        StartedBy:
          $ref: '#/components/schemas/StartedBy'
          description: The Amazon Resource Name (ARN) of the user who started the job run.
        StartedOn:
          $ref: '#/components/schemas/Date'
          description: The date and time when the job run began.
        JobSample:
          $ref: '#/components/schemas/JobSample'
          description: 'Sample configuration for profile jobs only. Determines the number of rows on which the profile job will be executed. If a JobSample value is not provided, the default value will be used. The default value is CUSTOM_ROWS for the mode parameter and 20000 for the size parameter.'
    DescribeProjectResponse:
      type: object
      required:
        - Name
      properties:
        CreateDate:
          $ref: '#/components/schemas/Date'
          description: The date and time that the project was created.
        CreatedBy:
          $ref: '#/components/schemas/CreatedBy'
          description: The identifier (user name) of the user who created the project.
        DatasetName:
          $ref: '#/components/schemas/DatasetName'
          description: The dataset associated with the project.
        LastModifiedDate:
          $ref: '#/components/schemas/Date'
          description: The date and time that the project was last modified.
        LastModifiedBy:
          $ref: '#/components/schemas/LastModifiedBy'
          description: The identifier (user name) of the user who last modified the project.
        Name:
          $ref: '#/components/schemas/ProjectName'
          description: The name of the project.
        RecipeName:
          $ref: '#/components/schemas/RecipeName'
          description: The recipe associated with this job.
        ResourceArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the project.
        Sample:
          $ref: '#/components/schemas/Sample'
        RoleArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the Identity and Access Management (IAM) role to be assumed when DataBrew runs the job.
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: Metadata tags associated with this project.
        SessionStatus:
          $ref: '#/components/schemas/SessionStatus'
          description: '<p>Describes the current state of the session:</p> <ul> <li> <p> <code>PROVISIONING</code> - allocating resources for the session.</p> </li> <li> <p> <code>INITIALIZING</code> - getting the session ready for first use.</p> </li> <li> <p> <code>ASSIGNED</code> - the session is ready for use.</p> </li> </ul>'
        OpenedBy:
          $ref: '#/components/schemas/OpenedBy'
          description: 'The identifier (user name) of the user that opened the project for use. '
        OpenDate:
          $ref: '#/components/schemas/Date'
          description: 'The date and time when the project was opened. '
    DescribeRecipeResponse:
      type: object
      required:
        - Name
      properties:
        CreatedBy:
          $ref: '#/components/schemas/CreatedBy'
          description: The identifier (user name) of the user who created the recipe.
        CreateDate:
          $ref: '#/components/schemas/Date'
          description: The date and time that the recipe was created.
        LastModifiedBy:
          $ref: '#/components/schemas/LastModifiedBy'
          description: The identifier (user name) of the user who last modified the recipe.
        LastModifiedDate:
          $ref: '#/components/schemas/Date'
          description: The date and time that the recipe was last modified.
        ProjectName:
          $ref: '#/components/schemas/ProjectName'
          description: The name of the project associated with this recipe.
        PublishedBy:
          $ref: '#/components/schemas/PublishedBy'
          description: The identifier (user name) of the user who last published the recipe.
        PublishedDate:
          $ref: '#/components/schemas/Date'
          description: The date and time when the recipe was last published.
        Description:
          $ref: '#/components/schemas/RecipeDescription'
          description: The description of the recipe.
        Name:
          $ref: '#/components/schemas/RecipeName'
          description: The name of the recipe.
        Steps:
          $ref: '#/components/schemas/RecipeStepList'
          description: 'One or more steps to be performed by the recipe. Each step consists of an action, and the conditions under which the action should succeed.'
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: Metadata tags associated with this project.
        ResourceArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the recipe.
        RecipeVersion:
          $ref: '#/components/schemas/RecipeVersion'
          description: The recipe version identifier.
    DescribeScheduleResponse:
      type: object
      required:
        - Name
      properties:
        CreateDate:
          $ref: '#/components/schemas/Date'
          description: The date and time that the schedule was created.
        CreatedBy:
          $ref: '#/components/schemas/CreatedBy'
          description: 'The identifier (user name) of the user who created the schedule. '
        JobNames:
          $ref: '#/components/schemas/JobNameList'
          description: The name or names of one or more jobs to be run by using the schedule.
        LastModifiedBy:
          $ref: '#/components/schemas/LastModifiedBy'
          description: The identifier (user name) of the user who last modified the schedule.
        LastModifiedDate:
          $ref: '#/components/schemas/Date'
          description: The date and time that the schedule was last modified.
        ResourceArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the schedule.
        CronExpression:
          $ref: '#/components/schemas/CronExpression'
          description: 'The date or dates and time or times when the jobs are to be run for the schedule. For more information, see <a href="https://docs.aws.amazon.com/databrew/latest/dg/jobs.cron.html">Cron expressions</a> in the <i>Glue DataBrew Developer Guide</i>.'
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: Metadata tags associated with this schedule.
        Name:
          $ref: '#/components/schemas/ScheduleName'
          description: The name of the schedule.
    ListDatasetsResponse:
      type: object
      required:
        - Datasets
      properties:
        Datasets:
          $ref: '#/components/schemas/DatasetList'
          description: A list of datasets that are defined.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token that you can use in a subsequent call to retrieve the next set of results.
    ListJobRunsResponse:
      type: object
      required:
        - JobRuns
      properties:
        JobRuns:
          $ref: '#/components/schemas/JobRunList'
          description: A list of job runs that have occurred for the specified job.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token that you can use in a subsequent call to retrieve the next set of results.
    ListJobsResponse:
      type: object
      required:
        - Jobs
      properties:
        Jobs:
          $ref: '#/components/schemas/JobList'
          description: A list of jobs that are defined.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token that you can use in a subsequent call to retrieve the next set of results.
    ListProjectsResponse:
      type: object
      required:
        - Projects
      properties:
        Projects:
          $ref: '#/components/schemas/ProjectList'
          description: A list of projects that are defined .
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token that you can use in a subsequent call to retrieve the next set of results.
    ListRecipeVersionsResponse:
      type: object
      required:
        - Recipes
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token that you can use in a subsequent call to retrieve the next set of results.
        Recipes:
          $ref: '#/components/schemas/RecipeList'
          description: A list of versions for the specified recipe.
    ListRecipesResponse:
      type: object
      required:
        - Recipes
      properties:
        Recipes:
          $ref: '#/components/schemas/RecipeList'
          description: A list of recipes that are defined.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token that you can use in a subsequent call to retrieve the next set of results.
    ListSchedulesResponse:
      type: object
      required:
        - Schedules
      properties:
        Schedules:
          $ref: '#/components/schemas/ScheduleList'
          description: A list of schedules that are defined.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token that you can use in a subsequent call to retrieve the next set of results.
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: A list of tags associated with the DataBrew resource.
    PublishRecipeResponse:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/RecipeName'
          description: The name of the recipe that you published.
    SendProjectSessionActionResponse:
      type: object
      required:
        - Name
      properties:
        Result:
          $ref: '#/components/schemas/Result'
          description: A message indicating the result of performing the action.
        Name:
          $ref: '#/components/schemas/ProjectName'
          description: The name of the project that was affected by the action.
        ActionId:
          $ref: '#/components/schemas/ActionId'
          description: A unique identifier for the action that was performed.
    RecipeAction:
      type: object
      required:
        - Operation
      properties:
        Operation:
          $ref: '#/components/schemas/Operation'
          description: The name of a valid DataBrew transformation to be performed on the data.
        Parameters:
          $ref: '#/components/schemas/ParameterMap'
          description: Contextual parameters for the transformation.
      description: 'Represents a transformation and associated parameters that are used to apply a change to a DataBrew dataset. For more information, see <a href="https://docs.aws.amazon.com/databrew/latest/dg/recipe-actions-reference.html">Recipe actions reference</a>.'
    ConditionExpressionList:
      type: array
      items:
        $ref: '#/components/schemas/ConditionExpression'
    StartColumnIndex:
      type: integer
      minimum: 0
    ColumnRange:
      type: integer
      minimum: 0
      maximum: 20
    HiddenColumnList:
      type: array
      items:
        $ref: '#/components/schemas/ColumnName'
    StartJobRunResponse:
      type: object
      required:
        - RunId
      properties:
        RunId:
          $ref: '#/components/schemas/JobRunId'
          description: A system-generated identifier for this particular job run.
    StartProjectSessionResponse:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/ProjectName'
          description: The name of the project to be acted upon.
        ClientSessionId:
          $ref: '#/components/schemas/ClientSessionId'
          description: A system-generated identifier for the session.
    StopJobRunResponse:
      type: object
      required:
        - RunId
      properties:
        RunId:
          $ref: '#/components/schemas/JobRunId'
          description: The ID of the job run that you stopped.
    TagResourceResponse:
      type: object
      properties: {}
    UntagResourceResponse:
      type: object
      properties: {}
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    UpdateDatasetResponse:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/DatasetName'
          description: The name of the dataset that you updated.
    UpdateProfileJobResponse:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/JobName'
          description: The name of the job that was updated.
    UpdateProjectResponse:
      type: object
      required:
        - Name
      properties:
        LastModifiedDate:
          $ref: '#/components/schemas/Date'
          description: The date and time that the project was last modified.
        Name:
          $ref: '#/components/schemas/ProjectName'
          description: The name of the project that you updated.
    UpdateRecipeResponse:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/RecipeName'
          description: The name of the recipe that was updated.
    UpdateRecipeJobResponse:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/JobName'
          description: The name of the job that you updated.
    UpdateScheduleResponse:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/ScheduleName'
          description: The name of the schedule that was updated.
    AccountId:
      type: string
      maxLength: 255
    ActionId:
      type: integer
    Arn:
      type: string
      minLength: 20
      maxLength: 2048
    AssumeControl:
      type: boolean
    Attempt:
      type: integer
    RecipeVersionList:
      type: array
      items:
        $ref: '#/components/schemas/RecipeVersion'
      minItems: 1
      maxItems: 50
    BatchDeleteRecipeVersionRequest:
      type: object
      required:
        - RecipeVersions
      title: BatchDeleteRecipeVersionRequest
      properties:
        RecipeVersions:
          $ref: '#/components/schemas/RecipeVersionList'
          description: 'An array of version identifiers, for the recipe versions to be deleted. You can specify numeric versions (<code>X.Y</code>) or <code>LATEST_WORKING</code>. <code>LATEST_PUBLISHED</code> is not supported.'
    RecipeErrorList:
      type: array
      items:
        $ref: '#/components/schemas/RecipeVersionErrorDetail'
    CatalogId:
      type: string
      minLength: 1
      maxLength: 255
    ClientSessionId:
      type: string
      pattern: '^[a-zA-Z0-9][a-zA-Z0-9-]*$'
      minLength: 1
      maxLength: 255
    ColumnName:
      type: string
      minLength: 1
      maxLength: 255
    ColumnNameList:
      type: array
      items:
        $ref: '#/components/schemas/ColumnName'
      maxItems: 200
    ColumnSelector:
      type: object
      properties:
        Regex:
          $ref: '#/components/schemas/ColumnName'
          description: A regular expression for selecting a column from a dataset.
        Name:
          $ref: '#/components/schemas/ColumnName'
          description: The name of a column from a dataset.
      description: Selector of a column from a dataset for profile job configuration. One selector includes either a column name or a regular expression.
    ColumnStatisticsConfiguration:
      type: object
      required:
        - Statistics
      properties:
        Selectors:
          $ref: '#/components/schemas/ColumnSelectorList'
          description: 'List of column selectors. Selectors can be used to select columns from the dataset. When selectors are undefined, configuration will be applied to all supported columns. '
        Statistics:
          $ref: '#/components/schemas/StatisticsConfiguration'
          description: 'Configuration for evaluations. Statistics can be used to select evaluations and override parameters of evaluations. '
      description: 'Configuration for column evaluations for a profile job. ColumnStatisticsConfiguration can be used to select evaluations and override parameters of evaluations for particular columns. '
    CompressionFormat:
      type: string
      enum:
        - GZIP
        - LZ4
        - SNAPPY
        - BZIP2
        - DEFLATE
        - LZO
        - BROTLI
        - ZSTD
        - ZLIB
    Condition:
      type: string
      pattern: '^[A-Z\_]+$'
      minLength: 1
      maxLength: 128
    ConditionValue:
      type: string
      maxLength: 1024
    TargetColumn:
      type: string
      minLength: 1
      maxLength: 1024
    ConditionExpression:
      type: object
      required:
        - Condition
        - TargetColumn
      properties:
        Condition:
          $ref: '#/components/schemas/Condition'
          description: 'A specific condition to apply to a recipe action. For more information, see <a href="https://docs.aws.amazon.com/databrew/latest/dg/recipes.html#recipes.structure">Recipe structure</a> in the <i>Glue DataBrew Developer Guide</i>.'
        Value:
          $ref: '#/components/schemas/ConditionValue'
          description: A value that the condition must evaluate to for the condition to succeed.
        TargetColumn:
          $ref: '#/components/schemas/TargetColumn'
          description: A column to apply this condition to.
      description: '<p>Represents an individual condition that evaluates to true or false.</p> <p>Conditions are used with recipe actions. The action is only performed for column values where the condition evaluates to true.</p> <p>If a recipe requires more than one condition, then the recipe must specify multiple <code>ConditionExpression</code> elements. Each condition is applied to the rows in a dataset first, before the recipe action is performed.</p>'
    CreateColumn:
      type: boolean
    DatasetName:
      type: string
      minLength: 1
      maxLength: 255
    InputFormat:
      type: string
      enum:
        - CSV
        - JSON
        - PARQUET
        - EXCEL
    FormatOptions:
      type: object
      properties:
        Json:
          $ref: '#/components/schemas/JsonOptions'
          description: Options that define how JSON input is to be interpreted by DataBrew.
        Excel:
          $ref: '#/components/schemas/ExcelOptions'
          description: Options that define how Excel input is to be interpreted by DataBrew.
        Csv:
          $ref: '#/components/schemas/CsvOptions'
          description: Options that define how CSV input is to be interpreted by DataBrew.
      description: 'Represents a set of options that define the structure of either comma-separated value (CSV), Excel, or JSON input.'
    Input:
      type: object
      properties:
        S3InputDefinition:
          $ref: '#/components/schemas/S3Location'
          description: The Amazon S3 location where the data is stored.
        DataCatalogInputDefinition:
          $ref: '#/components/schemas/DataCatalogInputDefinition'
          description: The Glue Data Catalog parameters for the data.
        DatabaseInputDefinition:
          $ref: '#/components/schemas/DatabaseInputDefinition'
          description: Connection information for dataset input files stored in a database.
      description: 'Represents information on how DataBrew can find data, in either the Glue Data Catalog or Amazon S3.'
    PathOptions:
      type: object
      properties:
        LastModifiedDateCondition:
          $ref: '#/components/schemas/FilterExpression'
          description: 'If provided, this structure defines a date range for matching Amazon S3 objects based on their LastModifiedDate attribute in Amazon S3.'
        FilesLimit:
          $ref: '#/components/schemas/FilesLimit'
          description: 'If provided, this structure imposes a limit on a number of files that should be selected.'
        Parameters:
          $ref: '#/components/schemas/PathParametersMap'
          description: A structure that maps names of parameters used in the Amazon S3 path of a dataset to their definitions.
      description: Represents a set of options that define how DataBrew selects files for a given Amazon S3 path in a dataset.
    TagMap:
      type: object
      minProperties: 1
      maxProperties: 200
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    CreateDatasetRequest:
      type: object
      required:
        - Name
        - Input
      title: CreateDatasetRequest
      properties:
        Name:
          $ref: '#/components/schemas/DatasetName'
          description: 'The name of the dataset to be created. Valid characters are alphanumeric (A-Z, a-z, 0-9), hyphen (-), period (.), and space.'
        Format:
          $ref: '#/components/schemas/InputFormat'
          description: The file format of a dataset that is created from an Amazon S3 file or folder.
        FormatOptions:
          $ref: '#/components/schemas/FormatOptions'
        Input:
          $ref: '#/components/schemas/Input'
        PathOptions:
          $ref: '#/components/schemas/PathOptions'
          description: A set of options that defines how DataBrew interprets an Amazon S3 path of the dataset.
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: Metadata tags to apply to this dataset.
    EncryptionKeyArn:
      type: string
      minLength: 20
      maxLength: 2048
    EncryptionMode:
      type: string
      enum:
        - SSE-KMS
        - SSE-S3
    LogSubscription:
      type: string
      enum:
        - ENABLE
        - DISABLE
    MaxCapacity:
      type: integer
    MaxRetries:
      type: integer
      minimum: 0
    ProfileConfiguration:
      type: object
      properties:
        DatasetStatisticsConfiguration:
          $ref: '#/components/schemas/StatisticsConfiguration'
          description: 'Configuration for inter-column evaluations. Configuration can be used to select evaluations and override parameters of evaluations. When configuration is undefined, the profile job will run all supported inter-column evaluations. '
        ProfileColumns:
          $ref: '#/components/schemas/ColumnSelectorList'
          description: 'List of column selectors. ProfileColumns can be used to select columns from the dataset. When ProfileColumns is undefined, the profile job will profile all supported columns. '
        ColumnStatisticsConfigurations:
          $ref: '#/components/schemas/ColumnStatisticsConfigurationList'
          description: 'List of configurations for column evaluations. ColumnStatisticsConfigurations are used to select evaluations and override parameters of evaluations for particular columns. When ColumnStatisticsConfigurations is undefined, the profile job will profile all supported columns and run all supported evaluations. '
      description: 'Configuration for profile jobs. Configuration can be used to select columns, do evaluations, and override default parameters of evaluations. When configuration is undefined, the profile job will apply default settings to all supported columns. '
    Timeout:
      type: integer
      minimum: 0
    JobSample:
      type: object
      properties:
        Mode:
          $ref: '#/components/schemas/SampleMode'
          description: '<p>A value that determines whether the profile job is run on the entire dataset or a specified number of rows. This value must be one of the following:</p> <ul> <li> <p>FULL_DATASET - The profile job is run on the entire dataset.</p> </li> <li> <p>CUSTOM_ROWS - The profile job is run on the number of rows specified in the <code>Size</code> parameter.</p> </li> </ul>'
        Size:
          $ref: '#/components/schemas/JobSize'
          description: <p>The <code>Size</code> parameter is only required when the mode is CUSTOM_ROWS. The profile job is run on the specified number of rows. The maximum value for size is Long.MAX_VALUE.</p> <p>Long.MAX_VALUE = 9223372036854775807</p>
      description: 'A sample configuration for profile jobs only, which determines the number of rows on which the profile job is run. If a <code>JobSample</code> value isn''t provided, the default is used. The default value is CUSTOM_ROWS for the mode parameter and 20,000 for the size parameter.'
    CreateProfileJobRequest:
      type: object
      required:
        - DatasetName
        - Name
        - OutputLocation
        - RoleArn
      title: CreateProfileJobRequest
      properties:
        DatasetName:
          $ref: '#/components/schemas/DatasetName'
          description: The name of the dataset that this job is to act upon.
        EncryptionKeyArn:
          $ref: '#/components/schemas/EncryptionKeyArn'
          description: The Amazon Resource Name (ARN) of an encryption key that is used to protect the job.
        EncryptionMode:
          $ref: '#/components/schemas/EncryptionMode'
          description: '<p>The encryption mode for the job, which can be one of the following:</p> <ul> <li> <p> <code>SSE-KMS</code> - <code>SSE-KMS</code> - Server-side encryption with KMS-managed keys.</p> </li> <li> <p> <code>SSE-S3</code> - Server-side encryption with keys managed by Amazon S3.</p> </li> </ul>'
        Name:
          $ref: '#/components/schemas/JobName'
          description: 'The name of the job to be created. Valid characters are alphanumeric (A-Z, a-z, 0-9), hyphen (-), period (.), and space.'
        LogSubscription:
          $ref: '#/components/schemas/LogSubscription'
          description: 'Enables or disables Amazon CloudWatch logging for the job. If logging is enabled, CloudWatch writes one log stream for each job run.'
        MaxCapacity:
          $ref: '#/components/schemas/MaxCapacity'
          description: The maximum number of nodes that DataBrew can use when the job processes data.
        MaxRetries:
          $ref: '#/components/schemas/MaxRetries'
          description: The maximum number of times to retry the job after a job run fails.
        OutputLocation:
          $ref: '#/components/schemas/S3Location'
        Configuration:
          $ref: '#/components/schemas/ProfileConfiguration'
          description: 'Configuration for profile jobs. Used to select columns, do evaluations, and override default parameters of evaluations. When configuration is null, the profile job will run with default settings.'
        RoleArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role to be assumed when DataBrew runs the job.
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: Metadata tags to apply to this job.
        Timeout:
          $ref: '#/components/schemas/Timeout'
          description: The job's timeout in minutes. A job that attempts to run longer than this timeout period ends with a status of <code>TIMEOUT</code>.
        JobSample:
          $ref: '#/components/schemas/JobSample'
          description: 'Sample configuration for profile jobs only. Determines the number of rows on which the profile job will be executed. If a JobSample value is not provided, the default value will be used. The default value is CUSTOM_ROWS for the mode parameter and 20000 for the size parameter.'
    ProjectName:
      type: string
      minLength: 1
      maxLength: 255
    Sample:
      type: object
      required:
        - Type
      properties:
        Size:
          $ref: '#/components/schemas/SampleSize'
          description: The number of rows in the sample.
        Type:
          $ref: '#/components/schemas/SampleType'
          description: The way in which DataBrew obtains rows from a dataset.
      description: Represents the sample size and sampling type for DataBrew to use for interactive data analysis.
    CreateProjectRequest:
      type: object
      required:
        - DatasetName
        - Name
        - RecipeName
        - RoleArn
      title: CreateProjectRequest
      properties:
        DatasetName:
          $ref: '#/components/schemas/DatasetName'
          description: The name of an existing dataset to associate this project with.
        Name:
          $ref: '#/components/schemas/ProjectName'
          description: 'A unique name for the new project. Valid characters are alphanumeric (A-Z, a-z, 0-9), hyphen (-), period (.), and space.'
        RecipeName:
          $ref: '#/components/schemas/RecipeName'
          description: The name of an existing recipe to associate with the project.
        Sample:
          $ref: '#/components/schemas/Sample'
        RoleArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role to be assumed for this request.
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: Metadata tags to apply to this project.
    OutputList:
      type: array
      items:
        $ref: '#/components/schemas/Output'
      minItems: 1
    DataCatalogOutputList:
      type: array
      items:
        $ref: '#/components/schemas/DataCatalogOutput'
      minItems: 1
    DatabaseOutputList:
      type: array
      items:
        $ref: '#/components/schemas/DatabaseOutput'
      minItems: 1
    RecipeReference:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/RecipeName'
          description: The name of the recipe.
        RecipeVersion:
          $ref: '#/components/schemas/RecipeVersion'
          description: 'The identifier for the version for the recipe. '
      description: Represents the name and version of a DataBrew recipe.
    CreateRecipeJobRequest:
      type: object
      required:
        - Name
        - RoleArn
      title: CreateRecipeJobRequest
      properties:
        DatasetName:
          $ref: '#/components/schemas/DatasetName'
          description: The name of the dataset that this job processes.
        EncryptionKeyArn:
          $ref: '#/components/schemas/EncryptionKeyArn'
          description: The Amazon Resource Name (ARN) of an encryption key that is used to protect the job.
        EncryptionMode:
          $ref: '#/components/schemas/EncryptionMode'
          description: '<p>The encryption mode for the job, which can be one of the following:</p> <ul> <li> <p> <code>SSE-KMS</code> - Server-side encryption with keys managed by KMS.</p> </li> <li> <p> <code>SSE-S3</code> - Server-side encryption with keys managed by Amazon S3.</p> </li> </ul>'
        Name:
          $ref: '#/components/schemas/JobName'
          description: 'A unique name for the job. Valid characters are alphanumeric (A-Z, a-z, 0-9), hyphen (-), period (.), and space.'
        LogSubscription:
          $ref: '#/components/schemas/LogSubscription'
          description: 'Enables or disables Amazon CloudWatch logging for the job. If logging is enabled, CloudWatch writes one log stream for each job run.'
        MaxCapacity:
          $ref: '#/components/schemas/MaxCapacity'
          description: The maximum number of nodes that DataBrew can consume when the job processes data.
        MaxRetries:
          $ref: '#/components/schemas/MaxRetries'
          description: The maximum number of times to retry the job after a job run fails.
        Outputs:
          $ref: '#/components/schemas/OutputList'
          description: One or more artifacts that represent the output from running the job.
        DataCatalogOutputs:
          $ref: '#/components/schemas/DataCatalogOutputList'
          description: One or more artifacts that represent the Glue Data Catalog output from running the job.
        DatabaseOutputs:
          $ref: '#/components/schemas/DatabaseOutputList'
          description: 'Represents a list of JDBC database output objects which defines the output destination for a DataBrew recipe job to write to. '
        ProjectName:
          $ref: '#/components/schemas/ProjectName'
          description: 'Either the name of an existing project, or a combination of a recipe and a dataset to associate with the recipe.'
        RecipeReference:
          $ref: '#/components/schemas/RecipeReference'
        RoleArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role to be assumed when DataBrew runs the job.
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: Metadata tags to apply to this job.
        Timeout:
          $ref: '#/components/schemas/Timeout'
          description: The job's timeout in minutes. A job that attempts to run longer than this timeout period ends with a status of <code>TIMEOUT</code>.
    RecipeDescription:
      type: string
      maxLength: 1024
    RecipeStepList:
      type: array
      items:
        $ref: '#/components/schemas/RecipeStep'
    CreateRecipeRequest:
      type: object
      required:
        - Name
        - Steps
      title: CreateRecipeRequest
      properties:
        Description:
          $ref: '#/components/schemas/RecipeDescription'
          description: A description for the recipe.
        Name:
          $ref: '#/components/schemas/RecipeName'
          description: 'A unique name for the recipe. Valid characters are alphanumeric (A-Z, a-z, 0-9), hyphen (-), period (.), and space.'
        Steps:
          $ref: '#/components/schemas/RecipeStepList'
          description: An array containing the steps to be performed by the recipe. Each recipe step consists of one recipe action and (optionally) an array of condition expressions.
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: Metadata tags to apply to this recipe.
    JobNameList:
      type: array
      items:
        $ref: '#/components/schemas/JobName'
      maxItems: 50
    CronExpression:
      type: string
      minLength: 1
      maxLength: 512
    ScheduleName:
      type: string
      minLength: 1
      maxLength: 255
    CreateScheduleRequest:
      type: object
      required:
        - CronExpression
        - Name
      title: CreateScheduleRequest
      properties:
        JobNames:
          $ref: '#/components/schemas/JobNameList'
          description: The name or names of one or more jobs to be run.
        CronExpression:
          $ref: '#/components/schemas/CronExpression'
          description: 'The date or dates and time or times when the jobs are to be run. For more information, see <a href="https://docs.aws.amazon.com/databrew/latest/dg/jobs.cron.html">Cron expressions</a> in the <i>Glue DataBrew Developer Guide</i>.'
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: Metadata tags to apply to this schedule.
        Name:
          $ref: '#/components/schemas/ScheduleName'
          description: 'A unique name for the schedule. Valid characters are alphanumeric (A-Z, a-z, 0-9), hyphen (-), period (.), and space.'
    CreatedBy:
      type: string
    Delimiter:
      type: string
      minLength: 1
      maxLength: 1
    HeaderRow:
      type: boolean
    CsvOutputOptions:
      type: object
      properties:
        Delimiter:
          $ref: '#/components/schemas/Delimiter'
          description: A single character that specifies the delimiter used to create CSV job output.
      description: Represents a set of options that define how DataBrew will write a comma-separated value (CSV) file.
    DatabaseName:
      type: string
      minLength: 1
      maxLength: 255
    TableName:
      type: string
      minLength: 1
      maxLength: 255
    S3TableOutputOptions:
      type: object
      required:
        - Location
      properties:
        Location:
          $ref: '#/components/schemas/S3Location'
          description: Represents an Amazon S3 location (bucket name and object key) where DataBrew can write output from a job.
      description: Represents options that specify how and where DataBrew writes the Amazon S3 output generated by recipe jobs.
    DatabaseTableOutputOptions:
      type: object
      required:
        - TableName
      properties:
        TempDirectory:
          $ref: '#/components/schemas/S3Location'
          description: Represents an Amazon S3 location (bucket name and object key) where DataBrew can store intermediate results.
        TableName:
          $ref: '#/components/schemas/DatabaseTableName'
          description: A prefix for the name of a table DataBrew will create in the database.
      description: Represents options that specify how and where DataBrew writes the database output generated by recipe jobs.
    OverwriteOutput:
      type: boolean
    GlueConnectionName:
      type: string
      minLength: 1
      maxLength: 255
    DatabaseTableName:
      type: string
      minLength: 1
      maxLength: 255
    DatabaseOutputMode:
      type: string
      enum:
        - NEW_TABLE
    Date:
      type: string
      format: date-time
    LastModifiedBy:
      type: string
    Source:
      type: string
      enum:
        - S3
        - DATA-CATALOG
        - DATABASE
    Dataset:
      type: object
      required:
        - Name
        - Input
      properties:
        AccountId:
          $ref: '#/components/schemas/AccountId'
          description: The ID of the Amazon Web Services account that owns the dataset.
        CreatedBy:
          $ref: '#/components/schemas/CreatedBy'
          description: The Amazon Resource Name (ARN) of the user who created the dataset.
        CreateDate:
          $ref: '#/components/schemas/Date'
          description: The date and time that the dataset was created.
        Name:
          $ref: '#/components/schemas/DatasetName'
          description: The unique name of the dataset.
        Format:
          $ref: '#/components/schemas/InputFormat'
          description: The file format of a dataset that is created from an Amazon S3 file or folder.
        FormatOptions:
          $ref: '#/components/schemas/FormatOptions'
          description: A set of options that define how DataBrew interprets the data in the dataset.
        Input:
          $ref: '#/components/schemas/Input'
          description: 'Information on how DataBrew can find the dataset, in either the Glue Data Catalog or Amazon S3.'
        LastModifiedDate:
          $ref: '#/components/schemas/Date'
          description: The last modification date and time of the dataset.
        LastModifiedBy:
          $ref: '#/components/schemas/LastModifiedBy'
          description: The Amazon Resource Name (ARN) of the user who last modified the dataset.
        Source:
          $ref: '#/components/schemas/Source'
          description: 'The location of the data for the dataset, either Amazon S3 or the Glue Data Catalog.'
        PathOptions:
          $ref: '#/components/schemas/PathOptions'
          description: A set of options that defines how DataBrew interprets an Amazon S3 path of the dataset.
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: Metadata tags that have been applied to the dataset.
        ResourceArn:
          $ref: '#/components/schemas/Arn'
          description: The unique Amazon Resource Name (ARN) for the dataset.
      description: Represents a dataset that can be processed by DataBrew.
    DatasetList:
      type: array
      items:
        $ref: '#/components/schemas/Dataset'
    PathParameterName:
      type: string
      minLength: 1
      maxLength: 255
    ParameterType:
      type: string
      enum:
        - Datetime
        - Number
        - String
    DatetimeOptions:
      type: object
      required:
        - Format
      properties:
        Format:
          $ref: '#/components/schemas/DatetimeFormat'
          description: 'Required option, that defines the datetime format used for a date parameter in the Amazon S3 path. Should use only supported datetime specifiers and separation characters, all literal a-z or A-Z characters should be escaped with single quotes. E.g. "MM.dd.yyyy-''at''-HH:mm".'
        TimezoneOffset:
          $ref: '#/components/schemas/TimezoneOffset'
          description: 'Optional value for a timezone offset of the datetime parameter value in the Amazon S3 path. Shouldn''t be used if Format for this parameter includes timezone fields. If no offset specified, UTC is assumed.'
        LocaleCode:
          $ref: '#/components/schemas/LocaleCode'
          description: 'Optional value for a non-US locale code, needed for correct interpretation of some date formats.'
      description: Represents additional options for correct interpretation of datetime parameters used in the Amazon S3 path of a dataset.
    DatasetParameter:
      type: object
      required:
        - Name
        - Type
      properties:
        Name:
          $ref: '#/components/schemas/PathParameterName'
          description: The name of the parameter that is used in the dataset's Amazon S3 path.
        Type:
          $ref: '#/components/schemas/ParameterType'
          description: 'The type of the dataset parameter, can be one of a ''String'', ''Number'' or ''Datetime''.'
        DatetimeOptions:
          $ref: '#/components/schemas/DatetimeOptions'
          description: Additional parameter options such as a format and a timezone. Required for datetime parameters.
        CreateColumn:
          $ref: '#/components/schemas/CreateColumn'
          description: Optional boolean value that defines whether the captured value of this parameter should be used to create a new column in a dataset.
        Filter:
          $ref: '#/components/schemas/FilterExpression'
          description: The optional filter expression structure to apply additional matching criteria to the parameter.
      description: Represents a dataset paramater that defines type and conditions for a parameter in the Amazon S3 path of the dataset.
    DatetimeFormat:
      type: string
      minLength: 2
      maxLength: 100
    TimezoneOffset:
      type: string
      pattern: '^(Z|[-+](\d|\d{2}|\d{2}:?\d{2}))$'
      minLength: 1
      maxLength: 6
    LocaleCode:
      type: string
      pattern: '^[A-Za-z0-9_\.#@\-]+$'
      minLength: 2
      maxLength: 100
    DeleteDatasetRequest:
      type: object
      title: DeleteDatasetRequest
      properties: {}
    DeleteJobRequest:
      type: object
      title: DeleteJobRequest
      properties: {}
    DeleteProjectRequest:
      type: object
      title: DeleteProjectRequest
      properties: {}
    DeleteRecipeVersionRequest:
      type: object
      title: DeleteRecipeVersionRequest
      properties: {}
    DeleteScheduleRequest:
      type: object
      title: DeleteScheduleRequest
      properties: {}
    DescribeDatasetRequest:
      type: object
      title: DescribeDatasetRequest
      properties: {}
    DescribeJobRequest:
      type: object
      title: DescribeJobRequest
      properties: {}
    JobType:
      type: string
      enum:
        - PROFILE
        - RECIPE
    JobRunId:
      type: string
      minLength: 1
      maxLength: 255
    DescribeJobRunRequest:
      type: object
      title: DescribeJobRunRequest
      properties: {}
    JobRunErrorMessage:
      type: string
    ExecutionTime:
      type: integer
    JobRunState:
      type: string
      enum:
        - STARTING
        - RUNNING
        - STOPPING
        - STOPPED
        - SUCCEEDED
        - FAILED
        - TIMEOUT
    LogGroupName:
      type: string
      minLength: 1
      maxLength: 512
    StartedBy:
      type: string
    DescribeProjectRequest:
      type: object
      title: DescribeProjectRequest
      properties: {}
    SessionStatus:
      type: string
      enum:
        - ASSIGNED
        - FAILED
        - INITIALIZING
        - PROVISIONING
        - READY
        - RECYCLING
        - ROTATING
        - TERMINATED
        - TERMINATING
        - UPDATING
    OpenedBy:
      type: string
    DescribeRecipeRequest:
      type: object
      title: DescribeRecipeRequest
      properties: {}
    PublishedBy:
      type: string
    DescribeScheduleRequest:
      type: object
      title: DescribeScheduleRequest
      properties: {}
    ErrorCode:
      type: string
      pattern: '^[1-5][0-9][0-9]$'
    SheetNameList:
      type: array
      items:
        $ref: '#/components/schemas/SheetName'
      minItems: 1
      maxItems: 1
    SheetIndexList:
      type: array
      items:
        $ref: '#/components/schemas/SheetIndex'
      minItems: 1
      maxItems: 1
    Expression:
      type: string
      pattern: '^[<>0-9A-Za-z_:)(!= ]+$'
      minLength: 4
      maxLength: 1024
    MaxFiles:
      type: integer
      minimum: 1
    OrderedBy:
      type: string
      enum:
        - LAST_MODIFIED_DATE
    Order:
      type: string
      enum:
        - DESCENDING
        - ASCENDING
    ValuesMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ConditionValue'
    Job:
      type: object
      required:
        - Name
      properties:
        AccountId:
          $ref: '#/components/schemas/AccountId'
          description: The ID of the Amazon Web Services account that owns the job.
        CreatedBy:
          $ref: '#/components/schemas/CreatedBy'
          description: The Amazon Resource Name (ARN) of the user who created the job.
        CreateDate:
          $ref: '#/components/schemas/Date'
          description: The date and time that the job was created.
        DatasetName:
          $ref: '#/components/schemas/DatasetName'
          description: A dataset that the job is to process.
        EncryptionKeyArn:
          $ref: '#/components/schemas/EncryptionKeyArn'
          description: 'The Amazon Resource Name (ARN) of an encryption key that is used to protect the job output. For more information, see <a href="https://docs.aws.amazon.com/databrew/latest/dg/encryption-security-configuration.html">Encrypting data written by DataBrew jobs</a> '
        EncryptionMode:
          $ref: '#/components/schemas/EncryptionMode'
          description: '<p>The encryption mode for the job, which can be one of the following:</p> <ul> <li> <p> <code>SSE-KMS</code> - Server-side encryption with keys managed by KMS.</p> </li> <li> <p> <code>SSE-S3</code> - Server-side encryption with keys managed by Amazon S3.</p> </li> </ul>'
        Name:
          $ref: '#/components/schemas/JobName'
          description: The unique name of the job.
        Type:
          $ref: '#/components/schemas/JobType'
          description: '<p>The job type of the job, which must be one of the following:</p> <ul> <li> <p> <code>PROFILE</code> - A job to analyze a dataset, to determine its size, data types, data distribution, and more.</p> </li> <li> <p> <code>RECIPE</code> - A job to apply one or more transformations to a dataset.</p> </li> </ul>'
        LastModifiedBy:
          $ref: '#/components/schemas/LastModifiedBy'
          description: The Amazon Resource Name (ARN) of the user who last modified the job.
        LastModifiedDate:
          $ref: '#/components/schemas/Date'
          description: The modification date and time of the job.
        LogSubscription:
          $ref: '#/components/schemas/LogSubscription'
          description: The current status of Amazon CloudWatch logging for the job.
        MaxCapacity:
          $ref: '#/components/schemas/MaxCapacity'
          description: The maximum number of nodes that can be consumed when the job processes data.
        MaxRetries:
          $ref: '#/components/schemas/MaxRetries'
          description: The maximum number of times to retry the job after a job run fails.
        Outputs:
          $ref: '#/components/schemas/OutputList'
          description: One or more artifacts that represent output from running the job.
        DataCatalogOutputs:
          $ref: '#/components/schemas/DataCatalogOutputList'
          description: One or more artifacts that represent the Glue Data Catalog output from running the job.
        DatabaseOutputs:
          $ref: '#/components/schemas/DatabaseOutputList'
          description: Represents a list of JDBC database output objects which defines the output destination for a DataBrew recipe job to write into.
        ProjectName:
          $ref: '#/components/schemas/ProjectName'
          description: The name of the project that the job is associated with.
        RecipeReference:
          $ref: '#/components/schemas/RecipeReference'
          description: A set of steps that the job runs.
        ResourceArn:
          $ref: '#/components/schemas/Arn'
          description: The unique Amazon Resource Name (ARN) for the job.
        RoleArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the role to be assumed for this job.
        Timeout:
          $ref: '#/components/schemas/Timeout'
          description: The job's timeout in minutes. A job that attempts to run longer than this timeout period ends with a status of <code>TIMEOUT</code>.
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: Metadata tags that have been applied to the job.
        JobSample:
          $ref: '#/components/schemas/JobSample'
          description: 'A sample configuration for profile jobs only, which determines the number of rows on which the profile job is run. If a <code>JobSample</code> value isn''t provided, the default value is used. The default value is CUSTOM_ROWS for the mode parameter and 20,000 for the size parameter.'
      description: Represents all of the attributes of a DataBrew job.
    JobList:
      type: array
      items:
        $ref: '#/components/schemas/Job'
    JobRun:
      type: object
      properties:
        Attempt:
          $ref: '#/components/schemas/Attempt'
          description: The number of times that DataBrew has attempted to run the job.
        CompletedOn:
          $ref: '#/components/schemas/Date'
          description: The date and time when the job completed processing.
        DatasetName:
          $ref: '#/components/schemas/DatasetName'
          description: The name of the dataset for the job to process.
        ErrorMessage:
          $ref: '#/components/schemas/JobRunErrorMessage'
          description: A message indicating an error (if any) that was encountered when the job ran.
        ExecutionTime:
          $ref: '#/components/schemas/ExecutionTime'
          description: 'The amount of time, in seconds, during which a job run consumed resources.'
        JobName:
          $ref: '#/components/schemas/JobName'
          description: The name of the job being processed during this run.
        RunId:
          $ref: '#/components/schemas/JobRunId'
          description: The unique identifier of the job run.
        State:
          $ref: '#/components/schemas/JobRunState'
          description: The current state of the job run entity itself.
        LogSubscription:
          $ref: '#/components/schemas/LogSubscription'
          description: The current status of Amazon CloudWatch logging for the job run.
        LogGroupName:
          $ref: '#/components/schemas/LogGroupName'
          description: 'The name of an Amazon CloudWatch log group, where the job writes diagnostic messages when it runs.'
        Outputs:
          $ref: '#/components/schemas/OutputList'
          description: One or more output artifacts from a job run.
        DataCatalogOutputs:
          $ref: '#/components/schemas/DataCatalogOutputList'
          description: One or more artifacts that represent the Glue Data Catalog output from running the job.
        DatabaseOutputs:
          $ref: '#/components/schemas/DatabaseOutputList'
          description: Represents a list of JDBC database output objects which defines the output destination for a DataBrew recipe job to write into.
        RecipeReference:
          $ref: '#/components/schemas/RecipeReference'
          description: The set of steps processed by the job.
        StartedBy:
          $ref: '#/components/schemas/StartedBy'
          description: 'The Amazon Resource Name (ARN) of the user who initiated the job run. '
        StartedOn:
          $ref: '#/components/schemas/Date'
          description: 'The date and time when the job run began. '
        JobSample:
          $ref: '#/components/schemas/JobSample'
          description: 'A sample configuration for profile jobs only, which determines the number of rows on which the profile job is run. If a <code>JobSample</code> value isn''t provided, the default is used. The default value is CUSTOM_ROWS for the mode parameter and 20,000 for the size parameter.'
      description: Represents one run of a DataBrew job.
    JobRunList:
      type: array
      items:
        $ref: '#/components/schemas/JobRun'
    MultiLine:
      type: boolean
    MaxResults100:
      type: integer
      minimum: 1
      maximum: 100
    NextToken:
      type: string
      minLength: 1
      maxLength: 2000
    ListDatasetsRequest:
      type: object
      title: ListDatasetsRequest
      properties: {}
    ListJobRunsRequest:
      type: object
      title: ListJobRunsRequest
      properties: {}
    ListJobsRequest:
      type: object
      title: ListJobsRequest
      properties: {}
    ListProjectsRequest:
      type: object
      title: ListProjectsRequest
      properties: {}
    ProjectList:
      type: array
      items:
        $ref: '#/components/schemas/Project'
    ListRecipeVersionsRequest:
      type: object
      title: ListRecipeVersionsRequest
      properties: {}
    RecipeList:
      type: array
      items:
        $ref: '#/components/schemas/Recipe'
    ListRecipesRequest:
      type: object
      title: ListRecipesRequest
      properties: {}
    ListSchedulesRequest:
      type: object
      title: ListSchedulesRequest
      properties: {}
    ScheduleList:
      type: array
      items:
        $ref: '#/components/schemas/Schedule'
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
    Operation:
      type: string
      pattern: '^[A-Z\_]+$'
      minLength: 1
      maxLength: 128
    OutputFormat:
      type: string
      enum:
        - CSV
        - JSON
        - PARQUET
        - GLUEPARQUET
        - AVRO
        - ORC
        - XML
        - TABLEAUHYPER
    OutputFormatOptions:
      type: object
      properties:
        Csv:
          $ref: '#/components/schemas/CsvOutputOptions'
          description: Represents a set of options that define the structure of comma-separated value (CSV) job output.
      description: Represents a set of options that define the structure of comma-separated (CSV) job output.
    ParameterValue:
      type: string
      minLength: 1
      maxLength: 32768
    ParameterMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ParameterValue'
    ParameterName:
      type: string
      pattern: '^[A-Za-z0-9]+$'
      minLength: 1
      maxLength: 128
    Preview:
      type: boolean
    Project:
      type: object
      required:
        - Name
        - RecipeName
      properties:
        AccountId:
          $ref: '#/components/schemas/AccountId'
          description: The ID of the Amazon Web Services account that owns the project.
        CreateDate:
          $ref: '#/components/schemas/Date'
          description: The date and time that the project was created.
        CreatedBy:
          $ref: '#/components/schemas/CreatedBy'
          description: The Amazon Resource Name (ARN) of the user who crated the project.
        DatasetName:
          $ref: '#/components/schemas/DatasetName'
          description: The dataset that the project is to act upon.
        LastModifiedDate:
          $ref: '#/components/schemas/Date'
          description: The last modification date and time for the project.
        LastModifiedBy:
          $ref: '#/components/schemas/LastModifiedBy'
          description: The Amazon Resource Name (ARN) of the user who last modified the project.
        Name:
          $ref: '#/components/schemas/ProjectName'
          description: The unique name of a project.
        RecipeName:
          $ref: '#/components/schemas/RecipeName'
          description: The name of a recipe that will be developed during a project session.
        ResourceArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) for the project.
        Sample:
          $ref: '#/components/schemas/Sample'
          description: 'The sample size and sampling type to apply to the data. If this parameter isn''t specified, then the sample consists of the first 500 rows from the dataset.'
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: Metadata tags that have been applied to the project.
        RoleArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the role that will be assumed for this project.
        OpenedBy:
          $ref: '#/components/schemas/OpenedBy'
          description: The Amazon Resource Name (ARN) of the user that opened the project for use.
        OpenDate:
          $ref: '#/components/schemas/Date'
          description: The date and time when the project was opened.
      description: Represents all of the attributes of a DataBrew project.
    PublishRecipeRequest:
      type: object
      title: PublishRecipeRequest
      properties:
        Description:
          $ref: '#/components/schemas/RecipeDescription'
          description: 'A description of the recipe to be published, for this version of the recipe.'
    Recipe:
      type: object
      required:
        - Name
      properties:
        CreatedBy:
          $ref: '#/components/schemas/CreatedBy'
          description: The Amazon Resource Name (ARN) of the user who created the recipe.
        CreateDate:
          $ref: '#/components/schemas/Date'
          description: The date and time that the recipe was created.
        LastModifiedBy:
          $ref: '#/components/schemas/LastModifiedBy'
          description: The Amazon Resource Name (ARN) of the user who last modified the recipe.
        LastModifiedDate:
          $ref: '#/components/schemas/Date'
          description: The last modification date and time of the recipe.
        ProjectName:
          $ref: '#/components/schemas/ProjectName'
          description: The name of the project that the recipe is associated with.
        PublishedBy:
          $ref: '#/components/schemas/PublishedBy'
          description: The Amazon Resource Name (ARN) of the user who published the recipe.
        PublishedDate:
          $ref: '#/components/schemas/Date'
          description: The date and time when the recipe was published.
        Description:
          $ref: '#/components/schemas/RecipeDescription'
          description: The description of the recipe.
        Name:
          $ref: '#/components/schemas/RecipeName'
          description: The unique name for the recipe.
        ResourceArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) for the recipe.
        Steps:
          $ref: '#/components/schemas/RecipeStepList'
          description: A list of steps that are defined by the recipe.
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: Metadata tags that have been applied to the recipe.
        RecipeVersion:
          $ref: '#/components/schemas/RecipeVersion'
          description: '<p>The identifier for the version for the recipe. Must be one of the following:</p> <ul> <li> <p>Numeric version (<code>X.Y</code>) - <code>X</code> and <code>Y</code> stand for major and minor version numbers. The maximum length of each is 6 digits, and neither can be negative values. Both <code>X</code> and <code>Y</code> are required, and "0.0" isn''t a valid version.</p> </li> <li> <p> <code>LATEST_WORKING</code> - the most recent valid version being developed in a DataBrew project.</p> </li> <li> <p> <code>LATEST_PUBLISHED</code> - the most recent published version.</p> </li> </ul>'
      description: Represents one or more actions to be performed on a DataBrew dataset.
    RecipeVersionErrorDetail:
      type: object
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
          description: The HTTP status code for the error.
        ErrorMessage:
          $ref: '#/components/schemas/RecipeErrorMessage'
          description: The text of the error message.
        RecipeVersion:
          $ref: '#/components/schemas/RecipeVersion'
          description: The identifier for the recipe version associated with this error.
      description: Represents any errors encountered when attempting to delete multiple recipe versions.
    RecipeErrorMessage:
      type: string
    Result:
      type: string
    Schedule:
      type: object
      required:
        - Name
      properties:
        AccountId:
          $ref: '#/components/schemas/AccountId'
          description: The ID of the Amazon Web Services account that owns the schedule.
        CreatedBy:
          $ref: '#/components/schemas/CreatedBy'
          description: The Amazon Resource Name (ARN) of the user who created the schedule.
        CreateDate:
          $ref: '#/components/schemas/Date'
          description: The date and time that the schedule was created.
        JobNames:
          $ref: '#/components/schemas/JobNameList'
          description: 'A list of jobs to be run, according to the schedule.'
        LastModifiedBy:
          $ref: '#/components/schemas/LastModifiedBy'
          description: The Amazon Resource Name (ARN) of the user who last modified the schedule.
        LastModifiedDate:
          $ref: '#/components/schemas/Date'
          description: The date and time when the schedule was last modified.
        ResourceArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the schedule.
        CronExpression:
          $ref: '#/components/schemas/CronExpression'
          description: 'The dates and times when the job is to run. For more information, see <a href="https://docs.aws.amazon.com/databrew/latest/dg/jobs.cron.html">Cron expressions</a> in the <i>Glue DataBrew Developer Guide</i>.'
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: Metadata tags that have been applied to the schedule.
        Name:
          $ref: '#/components/schemas/ScheduleName'
          description: The name of the schedule.
      description: Represents one or more dates and times when a job is to run.
    StepIndex:
      type: integer
      minimum: 0
    ViewFrame:
      type: object
      required:
        - StartColumnIndex
      properties:
        StartColumnIndex:
          $ref: '#/components/schemas/StartColumnIndex'
          description: The starting index for the range of columns to return in the view frame.
        ColumnRange:
          $ref: '#/components/schemas/ColumnRange'
          description: 'The number of columns to include in the view frame, beginning with the <code>StartColumnIndex</code> value and ignoring any columns in the <code>HiddenColumns</code> list.'
        HiddenColumns:
          $ref: '#/components/schemas/HiddenColumnList'
          description: A list of columns to hide in the view frame.
      description: Represents the data being transformed during an action.
    SendProjectSessionActionRequest:
      type: object
      title: SendProjectSessionActionRequest
      properties:
        Preview:
          $ref: '#/components/schemas/Preview'
          description: 'If true, the result of the recipe step will be returned, but not applied.'
        RecipeStep:
          $ref: '#/components/schemas/RecipeStep'
        StepIndex:
          $ref: '#/components/schemas/StepIndex'
          description: 'The index from which to preview a step. This index is used to preview the result of steps that have already been applied, so that the resulting view frame is from earlier in the view frame stack.'
        ClientSessionId:
          $ref: '#/components/schemas/ClientSessionId'
          description: A unique identifier for an interactive session that's currently open and ready for work. The action will be performed on this session.
        ViewFrame:
          $ref: '#/components/schemas/ViewFrame'
    SheetIndex:
      type: integer
      minimum: 0
      maximum: 200
    SheetName:
      type: string
      minLength: 1
      maxLength: 31
    StartJobRunRequest:
      type: object
      title: StartJobRunRequest
      properties: {}
    StartProjectSessionRequest:
      type: object
      title: StartProjectSessionRequest
      properties:
        AssumeControl:
          $ref: '#/components/schemas/AssumeControl'
          description: 'A value that, if true, enables you to take control of a session, even if a different client is currently accessing the project.'
    Statistic:
      type: string
      pattern: '^[A-Z\_]+$'
      minLength: 1
      maxLength: 128
    StatisticList:
      type: array
      items:
        $ref: '#/components/schemas/Statistic'
      minItems: 1
    StatisticOverride:
      type: object
      required:
        - Statistic
        - Parameters
      properties:
        Statistic:
          $ref: '#/components/schemas/Statistic'
          description: The name of an evaluation
        Parameters:
          $ref: '#/components/schemas/ParameterMap'
          description: A map that includes overrides of an evaluation’s parameters.
      description: 'Override of a particular evaluation for a profile job. '
    StatisticOverrideList:
      type: array
      items:
        $ref: '#/components/schemas/StatisticOverride'
      minItems: 1
    StopJobRunRequest:
      type: object
      title: StopJobRunRequest
      properties: {}
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      minItems: 1
      maxItems: 200
    TagResourceRequest:
      type: object
      required:
        - Tags
      title: TagResourceRequest
      properties:
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: One or more tags to be assigned to the resource.
    UntagResourceRequest:
      type: object
      title: UntagResourceRequest
      properties: {}
    UpdateDatasetRequest:
      type: object
      required:
        - Input
      title: UpdateDatasetRequest
      properties:
        Format:
          $ref: '#/components/schemas/InputFormat'
          description: The file format of a dataset that is created from an Amazon S3 file or folder.
        FormatOptions:
          $ref: '#/components/schemas/FormatOptions'
        Input:
          $ref: '#/components/schemas/Input'
        PathOptions:
          $ref: '#/components/schemas/PathOptions'
          description: A set of options that defines how DataBrew interprets an Amazon S3 path of the dataset.
    UpdateProfileJobRequest:
      type: object
      required:
        - OutputLocation
        - RoleArn
      title: UpdateProfileJobRequest
      properties:
        Configuration:
          $ref: '#/components/schemas/ProfileConfiguration'
          description: 'Configuration for profile jobs. Used to select columns, do evaluations, and override default parameters of evaluations. When configuration is null, the profile job will run with default settings.'
        EncryptionKeyArn:
          $ref: '#/components/schemas/EncryptionKeyArn'
          description: The Amazon Resource Name (ARN) of an encryption key that is used to protect the job.
        EncryptionMode:
          $ref: '#/components/schemas/EncryptionMode'
          description: '<p>The encryption mode for the job, which can be one of the following:</p> <ul> <li> <p> <code>SSE-KMS</code> - Server-side encryption with keys managed by KMS.</p> </li> <li> <p> <code>SSE-S3</code> - Server-side encryption with keys managed by Amazon S3.</p> </li> </ul>'
        LogSubscription:
          $ref: '#/components/schemas/LogSubscription'
          description: 'Enables or disables Amazon CloudWatch logging for the job. If logging is enabled, CloudWatch writes one log stream for each job run.'
        MaxCapacity:
          $ref: '#/components/schemas/MaxCapacity'
          description: The maximum number of compute nodes that DataBrew can use when the job processes data.
        MaxRetries:
          $ref: '#/components/schemas/MaxRetries'
          description: The maximum number of times to retry the job after a job run fails.
        OutputLocation:
          $ref: '#/components/schemas/S3Location'
        RoleArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role to be assumed when DataBrew runs the job.
        Timeout:
          $ref: '#/components/schemas/Timeout'
          description: The job's timeout in minutes. A job that attempts to run longer than this timeout period ends with a status of <code>TIMEOUT</code>.
        JobSample:
          $ref: '#/components/schemas/JobSample'
          description: 'Sample configuration for Profile Jobs only. Determines the number of rows on which the Profile job will be executed. If a JobSample value is not provided for profile jobs, the default value will be used. The default value is CUSTOM_ROWS for the mode parameter and 20000 for the size parameter.'
    UpdateProjectRequest:
      type: object
      required:
        - RoleArn
      title: UpdateProjectRequest
      properties:
        Sample:
          $ref: '#/components/schemas/Sample'
        RoleArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the IAM role to be assumed for this request.
    UpdateRecipeJobRequest:
      type: object
      required:
        - RoleArn
      title: UpdateRecipeJobRequest
      properties:
        EncryptionKeyArn:
          $ref: '#/components/schemas/EncryptionKeyArn'
          description: The Amazon Resource Name (ARN) of an encryption key that is used to protect the job.
        EncryptionMode:
          $ref: '#/components/schemas/EncryptionMode'
          description: '<p>The encryption mode for the job, which can be one of the following:</p> <ul> <li> <p> <code>SSE-KMS</code> - Server-side encryption with keys managed by KMS.</p> </li> <li> <p> <code>SSE-S3</code> - Server-side encryption with keys managed by Amazon S3.</p> </li> </ul>'
        LogSubscription:
          $ref: '#/components/schemas/LogSubscription'
          description: 'Enables or disables Amazon CloudWatch logging for the job. If logging is enabled, CloudWatch writes one log stream for each job run.'
        MaxCapacity:
          $ref: '#/components/schemas/MaxCapacity'
          description: The maximum number of nodes that DataBrew can consume when the job processes data.
        MaxRetries:
          $ref: '#/components/schemas/MaxRetries'
          description: The maximum number of times to retry the job after a job run fails.
        Outputs:
          $ref: '#/components/schemas/OutputList'
          description: 'One or more artifacts that represent the output from running the job. '
        DataCatalogOutputs:
          $ref: '#/components/schemas/DataCatalogOutputList'
          description: One or more artifacts that represent the Glue Data Catalog output from running the job.
        DatabaseOutputs:
          $ref: '#/components/schemas/DatabaseOutputList'
          description: Represents a list of JDBC database output objects which defines the output destination for a DataBrew recipe job to write into.
        RoleArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role to be assumed when DataBrew runs the job.
        Timeout:
          $ref: '#/components/schemas/Timeout'
          description: The job's timeout in minutes. A job that attempts to run longer than this timeout period ends with a status of <code>TIMEOUT</code>.
    UpdateRecipeRequest:
      type: object
      title: UpdateRecipeRequest
      properties:
        Description:
          $ref: '#/components/schemas/RecipeDescription'
          description: A description of the recipe.
        Steps:
          $ref: '#/components/schemas/RecipeStepList'
          description: 'One or more steps to be performed by the recipe. Each step consists of an action, and the conditions under which the action should succeed.'
    UpdateScheduleRequest:
      type: object
      required:
        - CronExpression
      title: UpdateScheduleRequest
      properties:
        JobNames:
          $ref: '#/components/schemas/JobNameList'
          description: The name or names of one or more jobs to be run for this schedule.
        CronExpression:
          $ref: '#/components/schemas/CronExpression'
          description: 'The date or dates and time or times when the jobs are to be run. For more information, see <a href="https://docs.aws.amazon.com/databrew/latest/dg/jobs.cron.html">Cron expressions</a> in the <i>Glue DataBrew Developer Guide</i>.'
    ValueReference:
      type: string
      pattern: '^:[A-Za-z0-9_]+$'
      minLength: 2
      maxLength: 128
security:
  - hmac: []
